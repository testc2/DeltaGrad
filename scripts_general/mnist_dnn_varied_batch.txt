varied deletion rate::
varied number of samples::
deletion rate:: 0.00002
python3 generate_rand_ids 0.00002  MNIST 1
tensor([54150])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.56340765953064
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.42344951629639
time_baseline:: 99.68785905838013
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6745e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4589e-12, dtype=torch.float64)
secont condition:: tensor(3.4589e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3391e-11, dtype=torch.float64)
secont condition:: tensor(1.3391e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2849e-11, dtype=torch.float64)
secont condition:: tensor(2.2849e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5811e-11, dtype=torch.float64)
secont condition:: tensor(3.5811e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8335e-11, dtype=torch.float64)
secont condition:: tensor(4.8335e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8436e-11, dtype=torch.float64)
secont condition:: tensor(6.8436e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9377e-11, dtype=torch.float64)
secont condition:: tensor(7.9377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6137e-11, dtype=torch.float64)
secont condition:: tensor(9.6137e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6310e-11, dtype=torch.float64)
secont condition:: tensor(9.6310e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2257e-10, dtype=torch.float64)
secont condition:: tensor(1.2257e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3966e-10, dtype=torch.float64)
secont condition:: tensor(1.3966e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4460e-10, dtype=torch.float64)
secont condition:: tensor(1.4460e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5772e-10, dtype=torch.float64)
secont condition:: tensor(1.5772e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-10, dtype=torch.float64)
secont condition:: tensor(1.7926e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-10, dtype=torch.float64)
secont condition:: tensor(1.9596e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8771e-10, dtype=torch.float64)
secont condition:: tensor(1.8771e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-10, dtype=torch.float64)
secont condition:: tensor(1.8416e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0222e-10, dtype=torch.float64)
secont condition:: tensor(2.0222e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1457e-10, dtype=torch.float64)
secont condition:: tensor(2.1457e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4172e-10, dtype=torch.float64)
secont condition:: tensor(2.4172e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4125e-10, dtype=torch.float64)
secont condition:: tensor(2.4125e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4894e-10, dtype=torch.float64)
secont condition:: tensor(2.4894e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4954e-10, dtype=torch.float64)
secont condition:: tensor(2.4954e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6664e-10, dtype=torch.float64)
secont condition:: tensor(2.6664e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8204e-10, dtype=torch.float64)
secont condition:: tensor(2.8204e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-10, dtype=torch.float64)
secont condition:: tensor(3.0771e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2268e-10, dtype=torch.float64)
secont condition:: tensor(3.2268e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0937e-10, dtype=torch.float64)
secont condition:: tensor(3.0937e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1786e-10, dtype=torch.float64)
secont condition:: tensor(3.1786e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1866e-10, dtype=torch.float64)
secont condition:: tensor(3.1866e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2605e-10, dtype=torch.float64)
secont condition:: tensor(3.2605e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6420e-10, dtype=torch.float64)
secont condition:: tensor(2.6420e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8997e-10, dtype=torch.float64)
secont condition:: tensor(2.8997e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4162e-10, dtype=torch.float64)
secont condition:: tensor(3.4162e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6527e-10, dtype=torch.float64)
secont condition:: tensor(3.6527e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9569e-10, dtype=torch.float64)
secont condition:: tensor(3.9569e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4887e-10, dtype=torch.float64)
secont condition:: tensor(3.4887e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4561e-10, dtype=torch.float64)
secont condition:: tensor(3.4561e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0512e-10, dtype=torch.float64)
secont condition:: tensor(4.0512e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2569e-10, dtype=torch.float64)
secont condition:: tensor(4.2569e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6084e-10, dtype=torch.float64)
secont condition:: tensor(5.6084e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8340e-10, dtype=torch.float64)
secont condition:: tensor(4.8340e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4005e-10, dtype=torch.float64)
secont condition:: tensor(5.4005e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7909e-10, dtype=torch.float64)
secont condition:: tensor(5.7909e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6924e-10, dtype=torch.float64)
secont condition:: tensor(5.6924e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2780e-10, dtype=torch.float64)
secont condition:: tensor(5.2780e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8068e-10, dtype=torch.float64)
secont condition:: tensor(5.8068e-10, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0793e-10, dtype=torch.float64)
secont condition:: tensor(6.0793e-10, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0675e-10, dtype=torch.float64)
secont condition:: tensor(6.0675e-10, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0099e-10, dtype=torch.float64)
secont condition:: tensor(6.0099e-10, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7680e-10, dtype=torch.float64)
secont condition:: tensor(6.7680e-10, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6960e-10, dtype=torch.float64)
secont condition:: tensor(7.6960e-10, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7008e-10, dtype=torch.float64)
secont condition:: tensor(7.7008e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2268e-10, dtype=torch.float64)
secont condition:: tensor(7.2268e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3453e-10, dtype=torch.float64)
secont condition:: tensor(7.3453e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1621e-10, dtype=torch.float64)
secont condition:: tensor(8.1621e-10, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6147e-10, dtype=torch.float64)
secont condition:: tensor(7.6147e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3393e-10, dtype=torch.float64)
secont condition:: tensor(8.3393e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2249e-10, dtype=torch.float64)
secont condition:: tensor(8.2249e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0304e-09, dtype=torch.float64)
secont condition:: tensor(1.0304e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4536e-10, dtype=torch.float64)
secont condition:: tensor(9.4536e-10, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4983e-10, dtype=torch.float64)
secont condition:: tensor(9.4983e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.74403142929077
curr_diff: 0 tensor(2.1393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6038e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1533e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1556e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.77501082420349
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.75820422172546
time_baseline:: 99.03457736968994
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6745e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4589e-12, dtype=torch.float64)
secont condition:: tensor(3.4589e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3391e-11, dtype=torch.float64)
secont condition:: tensor(1.3391e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2849e-11, dtype=torch.float64)
secont condition:: tensor(2.2849e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5811e-11, dtype=torch.float64)
secont condition:: tensor(3.5811e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8335e-11, dtype=torch.float64)
secont condition:: tensor(4.8335e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8436e-11, dtype=torch.float64)
secont condition:: tensor(6.8436e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9377e-11, dtype=torch.float64)
secont condition:: tensor(7.9377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6137e-11, dtype=torch.float64)
secont condition:: tensor(9.6137e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6310e-11, dtype=torch.float64)
secont condition:: tensor(9.6310e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2257e-10, dtype=torch.float64)
secont condition:: tensor(1.2257e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3966e-10, dtype=torch.float64)
secont condition:: tensor(1.3966e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4460e-10, dtype=torch.float64)
secont condition:: tensor(1.4460e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5772e-10, dtype=torch.float64)
secont condition:: tensor(1.5772e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-10, dtype=torch.float64)
secont condition:: tensor(1.7926e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-10, dtype=torch.float64)
secont condition:: tensor(1.9596e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8771e-10, dtype=torch.float64)
secont condition:: tensor(1.8771e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-10, dtype=torch.float64)
secont condition:: tensor(1.8416e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0222e-10, dtype=torch.float64)
secont condition:: tensor(2.0222e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1457e-10, dtype=torch.float64)
secont condition:: tensor(2.1457e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4172e-10, dtype=torch.float64)
secont condition:: tensor(2.4172e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4125e-10, dtype=torch.float64)
secont condition:: tensor(2.4125e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4894e-10, dtype=torch.float64)
secont condition:: tensor(2.4894e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4954e-10, dtype=torch.float64)
secont condition:: tensor(2.4954e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6664e-10, dtype=torch.float64)
secont condition:: tensor(2.6664e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8204e-10, dtype=torch.float64)
secont condition:: tensor(2.8204e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-10, dtype=torch.float64)
secont condition:: tensor(3.0771e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2268e-10, dtype=torch.float64)
secont condition:: tensor(3.2268e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0937e-10, dtype=torch.float64)
secont condition:: tensor(3.0937e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1786e-10, dtype=torch.float64)
secont condition:: tensor(3.1786e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1866e-10, dtype=torch.float64)
secont condition:: tensor(3.1866e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2605e-10, dtype=torch.float64)
secont condition:: tensor(3.2605e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6420e-10, dtype=torch.float64)
secont condition:: tensor(2.6420e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8997e-10, dtype=torch.float64)
secont condition:: tensor(2.8997e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4162e-10, dtype=torch.float64)
secont condition:: tensor(3.4162e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6527e-10, dtype=torch.float64)
secont condition:: tensor(3.6527e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9569e-10, dtype=torch.float64)
secont condition:: tensor(3.9569e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4887e-10, dtype=torch.float64)
secont condition:: tensor(3.4887e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4561e-10, dtype=torch.float64)
secont condition:: tensor(3.4561e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0512e-10, dtype=torch.float64)
secont condition:: tensor(4.0512e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2569e-10, dtype=torch.float64)
secont condition:: tensor(4.2569e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6084e-10, dtype=torch.float64)
secont condition:: tensor(5.6084e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8340e-10, dtype=torch.float64)
secont condition:: tensor(4.8340e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4005e-10, dtype=torch.float64)
secont condition:: tensor(5.4005e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7909e-10, dtype=torch.float64)
secont condition:: tensor(5.7909e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6924e-10, dtype=torch.float64)
secont condition:: tensor(5.6924e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2780e-10, dtype=torch.float64)
secont condition:: tensor(5.2780e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8068e-10, dtype=torch.float64)
secont condition:: tensor(5.8068e-10, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0793e-10, dtype=torch.float64)
secont condition:: tensor(6.0793e-10, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0675e-10, dtype=torch.float64)
secont condition:: tensor(6.0675e-10, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0099e-10, dtype=torch.float64)
secont condition:: tensor(6.0099e-10, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7680e-10, dtype=torch.float64)
secont condition:: tensor(6.7680e-10, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6960e-10, dtype=torch.float64)
secont condition:: tensor(7.6960e-10, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7008e-10, dtype=torch.float64)
secont condition:: tensor(7.7008e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2268e-10, dtype=torch.float64)
secont condition:: tensor(7.2268e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3453e-10, dtype=torch.float64)
secont condition:: tensor(7.3453e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1621e-10, dtype=torch.float64)
secont condition:: tensor(8.1621e-10, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6147e-10, dtype=torch.float64)
secont condition:: tensor(7.6147e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3393e-10, dtype=torch.float64)
secont condition:: tensor(8.3393e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2249e-10, dtype=torch.float64)
secont condition:: tensor(8.2249e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0304e-09, dtype=torch.float64)
secont condition:: tensor(1.0304e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4536e-10, dtype=torch.float64)
secont condition:: tensor(9.4536e-10, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4983e-10, dtype=torch.float64)
secont condition:: tensor(9.4983e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.601328372955322
curr_diff: 0 tensor(2.1393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6038e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1533e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1556e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.8064649105072
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.4631679058075
time_baseline:: 98.72808527946472
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6745e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4589e-12, dtype=torch.float64)
secont condition:: tensor(3.4589e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3391e-11, dtype=torch.float64)
secont condition:: tensor(1.3391e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2849e-11, dtype=torch.float64)
secont condition:: tensor(2.2849e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5811e-11, dtype=torch.float64)
secont condition:: tensor(3.5811e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8335e-11, dtype=torch.float64)
secont condition:: tensor(4.8335e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8436e-11, dtype=torch.float64)
secont condition:: tensor(6.8436e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9377e-11, dtype=torch.float64)
secont condition:: tensor(7.9377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6137e-11, dtype=torch.float64)
secont condition:: tensor(9.6137e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6310e-11, dtype=torch.float64)
secont condition:: tensor(9.6310e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2257e-10, dtype=torch.float64)
secont condition:: tensor(1.2257e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3966e-10, dtype=torch.float64)
secont condition:: tensor(1.3966e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4460e-10, dtype=torch.float64)
secont condition:: tensor(1.4460e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5772e-10, dtype=torch.float64)
secont condition:: tensor(1.5772e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-10, dtype=torch.float64)
secont condition:: tensor(1.7926e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-10, dtype=torch.float64)
secont condition:: tensor(1.9596e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8771e-10, dtype=torch.float64)
secont condition:: tensor(1.8771e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-10, dtype=torch.float64)
secont condition:: tensor(1.8416e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0222e-10, dtype=torch.float64)
secont condition:: tensor(2.0222e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1457e-10, dtype=torch.float64)
secont condition:: tensor(2.1457e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4172e-10, dtype=torch.float64)
secont condition:: tensor(2.4172e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4125e-10, dtype=torch.float64)
secont condition:: tensor(2.4125e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4894e-10, dtype=torch.float64)
secont condition:: tensor(2.4894e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4954e-10, dtype=torch.float64)
secont condition:: tensor(2.4954e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6664e-10, dtype=torch.float64)
secont condition:: tensor(2.6664e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8204e-10, dtype=torch.float64)
secont condition:: tensor(2.8204e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-10, dtype=torch.float64)
secont condition:: tensor(3.0771e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2268e-10, dtype=torch.float64)
secont condition:: tensor(3.2268e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0937e-10, dtype=torch.float64)
secont condition:: tensor(3.0937e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1786e-10, dtype=torch.float64)
secont condition:: tensor(3.1786e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1866e-10, dtype=torch.float64)
secont condition:: tensor(3.1866e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2605e-10, dtype=torch.float64)
secont condition:: tensor(3.2605e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6420e-10, dtype=torch.float64)
secont condition:: tensor(2.6420e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8997e-10, dtype=torch.float64)
secont condition:: tensor(2.8997e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4162e-10, dtype=torch.float64)
secont condition:: tensor(3.4162e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6527e-10, dtype=torch.float64)
secont condition:: tensor(3.6527e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9569e-10, dtype=torch.float64)
secont condition:: tensor(3.9569e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4887e-10, dtype=torch.float64)
secont condition:: tensor(3.4887e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4561e-10, dtype=torch.float64)
secont condition:: tensor(3.4561e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0512e-10, dtype=torch.float64)
secont condition:: tensor(4.0512e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2569e-10, dtype=torch.float64)
secont condition:: tensor(4.2569e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6084e-10, dtype=torch.float64)
secont condition:: tensor(5.6084e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8340e-10, dtype=torch.float64)
secont condition:: tensor(4.8340e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4005e-10, dtype=torch.float64)
secont condition:: tensor(5.4005e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7909e-10, dtype=torch.float64)
secont condition:: tensor(5.7909e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6924e-10, dtype=torch.float64)
secont condition:: tensor(5.6924e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2780e-10, dtype=torch.float64)
secont condition:: tensor(5.2780e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8068e-10, dtype=torch.float64)
secont condition:: tensor(5.8068e-10, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0793e-10, dtype=torch.float64)
secont condition:: tensor(6.0793e-10, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0675e-10, dtype=torch.float64)
secont condition:: tensor(6.0675e-10, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0099e-10, dtype=torch.float64)
secont condition:: tensor(6.0099e-10, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7680e-10, dtype=torch.float64)
secont condition:: tensor(6.7680e-10, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6960e-10, dtype=torch.float64)
secont condition:: tensor(7.6960e-10, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7008e-10, dtype=torch.float64)
secont condition:: tensor(7.7008e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2268e-10, dtype=torch.float64)
secont condition:: tensor(7.2268e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3453e-10, dtype=torch.float64)
secont condition:: tensor(7.3453e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1621e-10, dtype=torch.float64)
secont condition:: tensor(8.1621e-10, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6147e-10, dtype=torch.float64)
secont condition:: tensor(7.6147e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3393e-10, dtype=torch.float64)
secont condition:: tensor(8.3393e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2249e-10, dtype=torch.float64)
secont condition:: tensor(8.2249e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0304e-09, dtype=torch.float64)
secont condition:: tensor(1.0304e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4536e-10, dtype=torch.float64)
secont condition:: tensor(9.4536e-10, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4983e-10, dtype=torch.float64)
secont condition:: tensor(9.4983e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.6723051071167
curr_diff: 0 tensor(2.1393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6038e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1533e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1556e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.38880753517151
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.70165228843689
time_baseline:: 98.96341300010681
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6745e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4589e-12, dtype=torch.float64)
secont condition:: tensor(3.4589e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3391e-11, dtype=torch.float64)
secont condition:: tensor(1.3391e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2849e-11, dtype=torch.float64)
secont condition:: tensor(2.2849e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5811e-11, dtype=torch.float64)
secont condition:: tensor(3.5811e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8335e-11, dtype=torch.float64)
secont condition:: tensor(4.8335e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8436e-11, dtype=torch.float64)
secont condition:: tensor(6.8436e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9377e-11, dtype=torch.float64)
secont condition:: tensor(7.9377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6137e-11, dtype=torch.float64)
secont condition:: tensor(9.6137e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6310e-11, dtype=torch.float64)
secont condition:: tensor(9.6310e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2257e-10, dtype=torch.float64)
secont condition:: tensor(1.2257e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3966e-10, dtype=torch.float64)
secont condition:: tensor(1.3966e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4460e-10, dtype=torch.float64)
secont condition:: tensor(1.4460e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5772e-10, dtype=torch.float64)
secont condition:: tensor(1.5772e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-10, dtype=torch.float64)
secont condition:: tensor(1.7926e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-10, dtype=torch.float64)
secont condition:: tensor(1.9596e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8771e-10, dtype=torch.float64)
secont condition:: tensor(1.8771e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-10, dtype=torch.float64)
secont condition:: tensor(1.8416e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0222e-10, dtype=torch.float64)
secont condition:: tensor(2.0222e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1457e-10, dtype=torch.float64)
secont condition:: tensor(2.1457e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4172e-10, dtype=torch.float64)
secont condition:: tensor(2.4172e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4125e-10, dtype=torch.float64)
secont condition:: tensor(2.4125e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4894e-10, dtype=torch.float64)
secont condition:: tensor(2.4894e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4954e-10, dtype=torch.float64)
secont condition:: tensor(2.4954e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6664e-10, dtype=torch.float64)
secont condition:: tensor(2.6664e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8204e-10, dtype=torch.float64)
secont condition:: tensor(2.8204e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-10, dtype=torch.float64)
secont condition:: tensor(3.0771e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2268e-10, dtype=torch.float64)
secont condition:: tensor(3.2268e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0937e-10, dtype=torch.float64)
secont condition:: tensor(3.0937e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1786e-10, dtype=torch.float64)
secont condition:: tensor(3.1786e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1866e-10, dtype=torch.float64)
secont condition:: tensor(3.1866e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2605e-10, dtype=torch.float64)
secont condition:: tensor(3.2605e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6420e-10, dtype=torch.float64)
secont condition:: tensor(2.6420e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8997e-10, dtype=torch.float64)
secont condition:: tensor(2.8997e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4162e-10, dtype=torch.float64)
secont condition:: tensor(3.4162e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6527e-10, dtype=torch.float64)
secont condition:: tensor(3.6527e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9569e-10, dtype=torch.float64)
secont condition:: tensor(3.9569e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4887e-10, dtype=torch.float64)
secont condition:: tensor(3.4887e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4561e-10, dtype=torch.float64)
secont condition:: tensor(3.4561e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0512e-10, dtype=torch.float64)
secont condition:: tensor(4.0512e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2569e-10, dtype=torch.float64)
secont condition:: tensor(4.2569e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6084e-10, dtype=torch.float64)
secont condition:: tensor(5.6084e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8340e-10, dtype=torch.float64)
secont condition:: tensor(4.8340e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4005e-10, dtype=torch.float64)
secont condition:: tensor(5.4005e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7909e-10, dtype=torch.float64)
secont condition:: tensor(5.7909e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6924e-10, dtype=torch.float64)
secont condition:: tensor(5.6924e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2780e-10, dtype=torch.float64)
secont condition:: tensor(5.2780e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8068e-10, dtype=torch.float64)
secont condition:: tensor(5.8068e-10, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0793e-10, dtype=torch.float64)
secont condition:: tensor(6.0793e-10, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0675e-10, dtype=torch.float64)
secont condition:: tensor(6.0675e-10, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0099e-10, dtype=torch.float64)
secont condition:: tensor(6.0099e-10, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7680e-10, dtype=torch.float64)
secont condition:: tensor(6.7680e-10, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6960e-10, dtype=torch.float64)
secont condition:: tensor(7.6960e-10, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7008e-10, dtype=torch.float64)
secont condition:: tensor(7.7008e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2268e-10, dtype=torch.float64)
secont condition:: tensor(7.2268e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3453e-10, dtype=torch.float64)
secont condition:: tensor(7.3453e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1621e-10, dtype=torch.float64)
secont condition:: tensor(8.1621e-10, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6147e-10, dtype=torch.float64)
secont condition:: tensor(7.6147e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3393e-10, dtype=torch.float64)
secont condition:: tensor(8.3393e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2249e-10, dtype=torch.float64)
secont condition:: tensor(8.2249e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0304e-09, dtype=torch.float64)
secont condition:: tensor(1.0304e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4536e-10, dtype=torch.float64)
secont condition:: tensor(9.4536e-10, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4983e-10, dtype=torch.float64)
secont condition:: tensor(9.4983e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.539586305618286
curr_diff: 0 tensor(2.1393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6038e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1533e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1556e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.85864853858948
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.52981805801392
time_baseline:: 100.79326248168945
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6745e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4589e-12, dtype=torch.float64)
secont condition:: tensor(3.4589e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3391e-11, dtype=torch.float64)
secont condition:: tensor(1.3391e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2849e-11, dtype=torch.float64)
secont condition:: tensor(2.2849e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5811e-11, dtype=torch.float64)
secont condition:: tensor(3.5811e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8335e-11, dtype=torch.float64)
secont condition:: tensor(4.8335e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8436e-11, dtype=torch.float64)
secont condition:: tensor(6.8436e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9377e-11, dtype=torch.float64)
secont condition:: tensor(7.9377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6137e-11, dtype=torch.float64)
secont condition:: tensor(9.6137e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6310e-11, dtype=torch.float64)
secont condition:: tensor(9.6310e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2257e-10, dtype=torch.float64)
secont condition:: tensor(1.2257e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3966e-10, dtype=torch.float64)
secont condition:: tensor(1.3966e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4460e-10, dtype=torch.float64)
secont condition:: tensor(1.4460e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5772e-10, dtype=torch.float64)
secont condition:: tensor(1.5772e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-10, dtype=torch.float64)
secont condition:: tensor(1.7926e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-10, dtype=torch.float64)
secont condition:: tensor(1.9596e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8771e-10, dtype=torch.float64)
secont condition:: tensor(1.8771e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-10, dtype=torch.float64)
secont condition:: tensor(1.8416e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0222e-10, dtype=torch.float64)
secont condition:: tensor(2.0222e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1457e-10, dtype=torch.float64)
secont condition:: tensor(2.1457e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4172e-10, dtype=torch.float64)
secont condition:: tensor(2.4172e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4125e-10, dtype=torch.float64)
secont condition:: tensor(2.4125e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4894e-10, dtype=torch.float64)
secont condition:: tensor(2.4894e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4954e-10, dtype=torch.float64)
secont condition:: tensor(2.4954e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6664e-10, dtype=torch.float64)
secont condition:: tensor(2.6664e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8204e-10, dtype=torch.float64)
secont condition:: tensor(2.8204e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-10, dtype=torch.float64)
secont condition:: tensor(3.0771e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2268e-10, dtype=torch.float64)
secont condition:: tensor(3.2268e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0937e-10, dtype=torch.float64)
secont condition:: tensor(3.0937e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1786e-10, dtype=torch.float64)
secont condition:: tensor(3.1786e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1866e-10, dtype=torch.float64)
secont condition:: tensor(3.1866e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2605e-10, dtype=torch.float64)
secont condition:: tensor(3.2605e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6420e-10, dtype=torch.float64)
secont condition:: tensor(2.6420e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8997e-10, dtype=torch.float64)
secont condition:: tensor(2.8997e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4162e-10, dtype=torch.float64)
secont condition:: tensor(3.4162e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6527e-10, dtype=torch.float64)
secont condition:: tensor(3.6527e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9569e-10, dtype=torch.float64)
secont condition:: tensor(3.9569e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4887e-10, dtype=torch.float64)
secont condition:: tensor(3.4887e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4561e-10, dtype=torch.float64)
secont condition:: tensor(3.4561e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0512e-10, dtype=torch.float64)
secont condition:: tensor(4.0512e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2569e-10, dtype=torch.float64)
secont condition:: tensor(4.2569e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6084e-10, dtype=torch.float64)
secont condition:: tensor(5.6084e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8340e-10, dtype=torch.float64)
secont condition:: tensor(4.8340e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4005e-10, dtype=torch.float64)
secont condition:: tensor(5.4005e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7909e-10, dtype=torch.float64)
secont condition:: tensor(5.7909e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6924e-10, dtype=torch.float64)
secont condition:: tensor(5.6924e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2780e-10, dtype=torch.float64)
secont condition:: tensor(5.2780e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8068e-10, dtype=torch.float64)
secont condition:: tensor(5.8068e-10, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0793e-10, dtype=torch.float64)
secont condition:: tensor(6.0793e-10, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0675e-10, dtype=torch.float64)
secont condition:: tensor(6.0675e-10, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0099e-10, dtype=torch.float64)
secont condition:: tensor(6.0099e-10, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7680e-10, dtype=torch.float64)
secont condition:: tensor(6.7680e-10, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6960e-10, dtype=torch.float64)
secont condition:: tensor(7.6960e-10, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7008e-10, dtype=torch.float64)
secont condition:: tensor(7.7008e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2268e-10, dtype=torch.float64)
secont condition:: tensor(7.2268e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3453e-10, dtype=torch.float64)
secont condition:: tensor(7.3453e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1621e-10, dtype=torch.float64)
secont condition:: tensor(8.1621e-10, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6147e-10, dtype=torch.float64)
secont condition:: tensor(7.6147e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3393e-10, dtype=torch.float64)
secont condition:: tensor(8.3393e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2249e-10, dtype=torch.float64)
secont condition:: tensor(8.2249e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0304e-09, dtype=torch.float64)
secont condition:: tensor(1.0304e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4536e-10, dtype=torch.float64)
secont condition:: tensor(9.4536e-10, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4983e-10, dtype=torch.float64)
secont condition:: tensor(9.4983e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.705395460128784
curr_diff: 0 tensor(2.1393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6038e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1533e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1556e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253603
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.234644
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.225241
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222627
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.222641
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.219596
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.223971
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.219436
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.221670
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.221602
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.216645
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.217024
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.216812
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.217660
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.216695
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216349
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.215360
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.215024
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.217378
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.217753
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.214681
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.214208
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.218203
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217455
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.220156
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.218118
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.218637
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215072
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.217501
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.216849
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.214261
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.220012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.214613
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.219275
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.215494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.213149
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.218675
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216598
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.219001
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.218644
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.217574
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.220054
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.212409
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214202
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.217375
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215284
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.221765
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.215936
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.212862
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.213639
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.215187
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.218519
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.218878
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213138
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.217511
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.215746
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215543
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216200
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.218875
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.219675
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.17371678352356
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.44893980026245
time_baseline:: 45.58360147476196
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0126e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4530e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0344e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3210e-11, dtype=torch.float64)
secont condition:: tensor(1.3210e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7215e-11, dtype=torch.float64)
secont condition:: tensor(1.7215e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9193e-11, dtype=torch.float64)
secont condition:: tensor(3.9193e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2805e-11, dtype=torch.float64)
secont condition:: tensor(3.2805e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6842e-11, dtype=torch.float64)
secont condition:: tensor(7.6842e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6271e-11, dtype=torch.float64)
secont condition:: tensor(6.6271e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8376e-11, dtype=torch.float64)
secont condition:: tensor(8.8376e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5858e-11, dtype=torch.float64)
secont condition:: tensor(8.5858e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.3785e-11, dtype=torch.float64)
secont condition:: tensor(7.3785e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1121e-10, dtype=torch.float64)
secont condition:: tensor(1.1121e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2044e-10, dtype=torch.float64)
secont condition:: tensor(1.2044e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5997e-10, dtype=torch.float64)
secont condition:: tensor(1.5997e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1979e-10, dtype=torch.float64)
secont condition:: tensor(2.1979e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4209e-10, dtype=torch.float64)
secont condition:: tensor(1.4209e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2633e-10, dtype=torch.float64)
secont condition:: tensor(1.2633e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3162e-10, dtype=torch.float64)
secont condition:: tensor(2.3162e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2493e-10, dtype=torch.float64)
secont condition:: tensor(2.2493e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8892e-10, dtype=torch.float64)
secont condition:: tensor(2.8892e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6163e-10, dtype=torch.float64)
secont condition:: tensor(2.6163e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2280e-10, dtype=torch.float64)
secont condition:: tensor(2.2280e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8702e-10, dtype=torch.float64)
secont condition:: tensor(2.8702e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1077e-10, dtype=torch.float64)
secont condition:: tensor(2.1077e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8098e-10, dtype=torch.float64)
secont condition:: tensor(1.8098e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7195e-10, dtype=torch.float64)
secont condition:: tensor(2.7195e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1036e-10, dtype=torch.float64)
secont condition:: tensor(4.1036e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4393e-10, dtype=torch.float64)
secont condition:: tensor(2.4393e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2904e-10, dtype=torch.float64)
secont condition:: tensor(3.2904e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3964e-10, dtype=torch.float64)
secont condition:: tensor(3.3964e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3779e-10, dtype=torch.float64)
secont condition:: tensor(3.3779e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8397e-10, dtype=torch.float64)
secont condition:: tensor(2.8397e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4349e-10, dtype=torch.float64)
secont condition:: tensor(3.4349e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5854e-10, dtype=torch.float64)
secont condition:: tensor(2.5854e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1281e-10, dtype=torch.float64)
secont condition:: tensor(3.1281e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1133e-10, dtype=torch.float64)
secont condition:: tensor(4.1133e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8715e-10, dtype=torch.float64)
secont condition:: tensor(2.8715e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8205e-10, dtype=torch.float64)
secont condition:: tensor(2.8205e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8929e-10, dtype=torch.float64)
secont condition:: tensor(2.8929e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7166e-10, dtype=torch.float64)
secont condition:: tensor(3.7166e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0864e-10, dtype=torch.float64)
secont condition:: tensor(4.0864e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1226e-10, dtype=torch.float64)
secont condition:: tensor(5.1226e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1748e-10, dtype=torch.float64)
secont condition:: tensor(5.1748e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3947e-10, dtype=torch.float64)
secont condition:: tensor(4.3947e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7362e-10, dtype=torch.float64)
secont condition:: tensor(3.7362e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6795e-10, dtype=torch.float64)
secont condition:: tensor(6.6795e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5240e-10, dtype=torch.float64)
secont condition:: tensor(6.5240e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4783e-10, dtype=torch.float64)
secont condition:: tensor(6.4783e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8537e-10, dtype=torch.float64)
secont condition:: tensor(5.8537e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7385e-10, dtype=torch.float64)
secont condition:: tensor(6.7385e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3933e-10, dtype=torch.float64)
secont condition:: tensor(6.3933e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8521e-10, dtype=torch.float64)
secont condition:: tensor(6.8521e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7116e-10, dtype=torch.float64)
secont condition:: tensor(5.7116e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9559e-10, dtype=torch.float64)
secont condition:: tensor(9.9559e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5677e-10, dtype=torch.float64)
secont condition:: tensor(8.5677e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8507e-10, dtype=torch.float64)
secont condition:: tensor(7.8507e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3508e-09, dtype=torch.float64)
secont condition:: tensor(1.3508e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7895e-10, dtype=torch.float64)
secont condition:: tensor(8.7895e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8388e-10, dtype=torch.float64)
secont condition:: tensor(7.8388e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0973e-10, dtype=torch.float64)
secont condition:: tensor(7.0973e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0196e-09, dtype=torch.float64)
secont condition:: tensor(1.0196e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8424e-10, dtype=torch.float64)
secont condition:: tensor(2.8424e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1457e-09, dtype=torch.float64)
secont condition:: tensor(1.1457e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3703e-09, dtype=torch.float64)
secont condition:: tensor(1.3703e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.98195195198059
curr_diff: 0 tensor(2.9481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8818e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5553e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2167e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.9839e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7039e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6465e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4339e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.248808
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.235432
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229874
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.224411
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.218845
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.218784
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.219159
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.215114
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216294
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.220752
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.215583
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.218968
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.220532
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.215970
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.219611
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.214604
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.215661
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.217182
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.214097
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.214626
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.214440
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.211744
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.220604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216558
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.218775
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.219130
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215651
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213935
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.214774
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217285
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217137
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216935
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.218075
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.218154
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.215273
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.216489
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.218343
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214612
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215633
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.215771
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.216645
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.217917
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214061
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216176
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215519
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.217087
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214595
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.221983
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.216701
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216562
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.217644
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.212336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.214362
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216154
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.218119
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215620
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.213912
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.216764
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.217857
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 55.95995831489563
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.63412141799927
time_baseline:: 44.76728940010071
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6649e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1037e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2388e-33, dtype=torch.float64)
secont condition:: tensor(6.2388e-33, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-11, dtype=torch.float64)
secont condition:: tensor(1.2760e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9410e-11, dtype=torch.float64)
secont condition:: tensor(3.9410e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8387e-11, dtype=torch.float64)
secont condition:: tensor(3.8387e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7612e-11, dtype=torch.float64)
secont condition:: tensor(7.7612e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9721e-11, dtype=torch.float64)
secont condition:: tensor(5.9721e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2375e-10, dtype=torch.float64)
secont condition:: tensor(1.2375e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0893e-10, dtype=torch.float64)
secont condition:: tensor(1.0893e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2111e-10, dtype=torch.float64)
secont condition:: tensor(1.2111e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1263e-10, dtype=torch.float64)
secont condition:: tensor(1.1263e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1199e-11, dtype=torch.float64)
secont condition:: tensor(9.1199e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4239e-10, dtype=torch.float64)
secont condition:: tensor(1.4239e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2462e-10, dtype=torch.float64)
secont condition:: tensor(1.2462e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7510e-10, dtype=torch.float64)
secont condition:: tensor(1.7510e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4056e-10, dtype=torch.float64)
secont condition:: tensor(1.4056e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0764e-10, dtype=torch.float64)
secont condition:: tensor(2.0764e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7007e-10, dtype=torch.float64)
secont condition:: tensor(1.7007e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2843e-10, dtype=torch.float64)
secont condition:: tensor(2.2843e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7907e-10, dtype=torch.float64)
secont condition:: tensor(1.7907e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2994e-10, dtype=torch.float64)
secont condition:: tensor(2.2994e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9289e-10, dtype=torch.float64)
secont condition:: tensor(2.9289e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7101e-10, dtype=torch.float64)
secont condition:: tensor(2.7101e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0236e-10, dtype=torch.float64)
secont condition:: tensor(3.0236e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5732e-10, dtype=torch.float64)
secont condition:: tensor(2.5732e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2328e-10, dtype=torch.float64)
secont condition:: tensor(3.2328e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3011e-10, dtype=torch.float64)
secont condition:: tensor(2.3011e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4115e-10, dtype=torch.float64)
secont condition:: tensor(2.4115e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8472e-10, dtype=torch.float64)
secont condition:: tensor(2.8472e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9250e-10, dtype=torch.float64)
secont condition:: tensor(2.9250e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2405e-10, dtype=torch.float64)
secont condition:: tensor(3.2405e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4425e-10, dtype=torch.float64)
secont condition:: tensor(3.4425e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1283e-10, dtype=torch.float64)
secont condition:: tensor(3.1283e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9637e-10, dtype=torch.float64)
secont condition:: tensor(3.9637e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4001e-10, dtype=torch.float64)
secont condition:: tensor(3.4001e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9798e-10, dtype=torch.float64)
secont condition:: tensor(2.9798e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1830e-10, dtype=torch.float64)
secont condition:: tensor(3.1830e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8529e-10, dtype=torch.float64)
secont condition:: tensor(3.8529e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6052e-10, dtype=torch.float64)
secont condition:: tensor(3.6052e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0467e-10, dtype=torch.float64)
secont condition:: tensor(4.0467e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0517e-10, dtype=torch.float64)
secont condition:: tensor(4.0517e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3850e-10, dtype=torch.float64)
secont condition:: tensor(4.3850e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7714e-10, dtype=torch.float64)
secont condition:: tensor(4.7714e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6943e-10, dtype=torch.float64)
secont condition:: tensor(4.6943e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4275e-10, dtype=torch.float64)
secont condition:: tensor(5.4275e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6499e-10, dtype=torch.float64)
secont condition:: tensor(5.6499e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0991e-10, dtype=torch.float64)
secont condition:: tensor(7.0991e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9520e-10, dtype=torch.float64)
secont condition:: tensor(3.9520e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9721e-10, dtype=torch.float64)
secont condition:: tensor(6.9721e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6167e-10, dtype=torch.float64)
secont condition:: tensor(6.6167e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3495e-10, dtype=torch.float64)
secont condition:: tensor(6.3495e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5748e-10, dtype=torch.float64)
secont condition:: tensor(7.5748e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5615e-10, dtype=torch.float64)
secont condition:: tensor(6.5615e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0488e-10, dtype=torch.float64)
secont condition:: tensor(7.0488e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2794e-10, dtype=torch.float64)
secont condition:: tensor(7.2794e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6041e-10, dtype=torch.float64)
secont condition:: tensor(9.6041e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0898e-10, dtype=torch.float64)
secont condition:: tensor(7.0898e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1039e-09, dtype=torch.float64)
secont condition:: tensor(1.1039e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0866e-10, dtype=torch.float64)
secont condition:: tensor(8.0866e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0925e-10, dtype=torch.float64)
secont condition:: tensor(8.0925e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1769e-09, dtype=torch.float64)
secont condition:: tensor(1.1769e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0853e-09, dtype=torch.float64)
secont condition:: tensor(1.0853e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5396e-10, dtype=torch.float64)
secont condition:: tensor(9.5396e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1604e-09, dtype=torch.float64)
secont condition:: tensor(1.1604e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.926356554031372
curr_diff: 0 tensor(2.3421e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2343e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2139e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.3590e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1219e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5766e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2924e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249997
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.239328
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.232266
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222974
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.222421
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221796
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.216410
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 7, Batch: 0, Loss: 0.222160
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218192
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.217688
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.219956
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.215412
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.214964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216844
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.220526
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.218994
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.215632
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214788
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.217555
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.214790
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.219753
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.219521
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.217071
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 23, Batch: 0, Loss: 0.215172
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215381
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.214790
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.220836
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216332
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.216631
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.213743
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.216957
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217586
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 32, Batch: 0, Loss: 0.214019
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.217560
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.212521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217374
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.213558
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.216266
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.215806
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214573
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.218041
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214645
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.216898
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214542
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215991
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.220088
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216032
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.217656
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.219912
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216503
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.217187
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.213901
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.216896
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.215465
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.218597
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.211659
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.217677
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.213588
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.214069
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.214673
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.44998025894165
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.18065929412842
time_baseline:: 45.3129506111145
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7789e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7560e-33, dtype=torch.float64)
secont condition:: tensor(7.7560e-33, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1022e-11, dtype=torch.float64)
secont condition:: tensor(1.1022e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5231e-11, dtype=torch.float64)
secont condition:: tensor(2.5231e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8440e-11, dtype=torch.float64)
secont condition:: tensor(3.8440e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9232e-11, dtype=torch.float64)
secont condition:: tensor(2.9232e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2761e-11, dtype=torch.float64)
secont condition:: tensor(5.2761e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1762e-10, dtype=torch.float64)
secont condition:: tensor(1.1762e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9938e-11, dtype=torch.float64)
secont condition:: tensor(9.9938e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5833e-10, dtype=torch.float64)
secont condition:: tensor(1.5833e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1016e-10, dtype=torch.float64)
secont condition:: tensor(1.1016e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6691e-10, dtype=torch.float64)
secont condition:: tensor(1.6691e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4143e-10, dtype=torch.float64)
secont condition:: tensor(1.4143e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2400e-10, dtype=torch.float64)
secont condition:: tensor(1.2400e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8389e-10, dtype=torch.float64)
secont condition:: tensor(1.8389e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5180e-10, dtype=torch.float64)
secont condition:: tensor(1.5180e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0627e-10, dtype=torch.float64)
secont condition:: tensor(2.0627e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3032e-10, dtype=torch.float64)
secont condition:: tensor(2.3032e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9044e-10, dtype=torch.float64)
secont condition:: tensor(2.9044e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6776e-10, dtype=torch.float64)
secont condition:: tensor(2.6776e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2430e-10, dtype=torch.float64)
secont condition:: tensor(2.2430e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5624e-10, dtype=torch.float64)
secont condition:: tensor(1.5624e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2471e-10, dtype=torch.float64)
secont condition:: tensor(2.2471e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9455e-10, dtype=torch.float64)
secont condition:: tensor(1.9455e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1768e-10, dtype=torch.float64)
secont condition:: tensor(3.1768e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3359e-10, dtype=torch.float64)
secont condition:: tensor(3.3359e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9666e-10, dtype=torch.float64)
secont condition:: tensor(2.9666e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7174e-10, dtype=torch.float64)
secont condition:: tensor(3.7174e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2422e-10, dtype=torch.float64)
secont condition:: tensor(3.2422e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4568e-10, dtype=torch.float64)
secont condition:: tensor(3.4568e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0908e-10, dtype=torch.float64)
secont condition:: tensor(3.0908e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6056e-10, dtype=torch.float64)
secont condition:: tensor(2.6056e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3355e-10, dtype=torch.float64)
secont condition:: tensor(3.3355e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1501e-10, dtype=torch.float64)
secont condition:: tensor(2.1501e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4254e-10, dtype=torch.float64)
secont condition:: tensor(3.4254e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7125e-11, dtype=torch.float64)
secont condition:: tensor(7.7125e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7333e-10, dtype=torch.float64)
secont condition:: tensor(3.7333e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4715e-10, dtype=torch.float64)
secont condition:: tensor(3.4715e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9105e-10, dtype=torch.float64)
secont condition:: tensor(3.9105e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3492e-10, dtype=torch.float64)
secont condition:: tensor(4.3492e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0887e-10, dtype=torch.float64)
secont condition:: tensor(4.0887e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8983e-10, dtype=torch.float64)
secont condition:: tensor(4.8983e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5211e-10, dtype=torch.float64)
secont condition:: tensor(3.5211e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2704e-11, dtype=torch.float64)
secont condition:: tensor(5.2704e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3503e-10, dtype=torch.float64)
secont condition:: tensor(5.3503e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2069e-10, dtype=torch.float64)
secont condition:: tensor(7.2069e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9169e-10, dtype=torch.float64)
secont condition:: tensor(4.9169e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2650e-10, dtype=torch.float64)
secont condition:: tensor(5.2650e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1543e-10, dtype=torch.float64)
secont condition:: tensor(6.1543e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6810e-10, dtype=torch.float64)
secont condition:: tensor(7.6810e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5739e-10, dtype=torch.float64)
secont condition:: tensor(7.5739e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0972e-10, dtype=torch.float64)
secont condition:: tensor(8.0972e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7660e-10, dtype=torch.float64)
secont condition:: tensor(7.7660e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2236e-10, dtype=torch.float64)
secont condition:: tensor(8.2236e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9438e-10, dtype=torch.float64)
secont condition:: tensor(7.9438e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0009e-09, dtype=torch.float64)
secont condition:: tensor(1.0009e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7929e-10, dtype=torch.float64)
secont condition:: tensor(9.7929e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4518e-10, dtype=torch.float64)
secont condition:: tensor(9.4518e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7644e-10, dtype=torch.float64)
secont condition:: tensor(9.7644e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0618e-09, dtype=torch.float64)
secont condition:: tensor(1.0618e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1218e-09, dtype=torch.float64)
secont condition:: tensor(1.1218e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8866e-10, dtype=torch.float64)
secont condition:: tensor(7.8866e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0605e-09, dtype=torch.float64)
secont condition:: tensor(1.0605e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9201e-10, dtype=torch.float64)
secont condition:: tensor(8.9201e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.900767087936401
curr_diff: 0 tensor(2.5793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.0263e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6240e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6017e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.5916e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5813e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2557e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251767
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.238224
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.225706
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225240
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.219667
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221396
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.222982
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217065
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.214820
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.212155
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.221656
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.218532
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.214509
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.217164
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.218501
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.215445
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.214987
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.216312
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215929
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.218322
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.219450
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.214740
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216763
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214354
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.215520
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214044
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.214703
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.212678
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215965
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.212071
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217533
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.215945
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.214294
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.217380
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.218396
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.214453
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216719
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.215181
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214446
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.214452
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.212858
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214079
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.219464
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216186
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215392
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.217275
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.217385
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.215934
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.217513
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214792
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.210975
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217250
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216623
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214604
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.212178
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 56, Batch: 0, Loss: 0.213024
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216295
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215392
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215063
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.247520446777344
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.127907514572144
time_baseline:: 45.25858283042908
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9167e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4408e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9582e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5587e-11, dtype=torch.float64)
secont condition:: tensor(1.5587e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1755e-11, dtype=torch.float64)
secont condition:: tensor(1.1755e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.9958e-12, dtype=torch.float64)
secont condition:: tensor(9.9958e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6200e-11, dtype=torch.float64)
secont condition:: tensor(3.6200e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9734e-11, dtype=torch.float64)
secont condition:: tensor(6.9734e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3731e-11, dtype=torch.float64)
secont condition:: tensor(6.3731e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.7511e-11, dtype=torch.float64)
secont condition:: tensor(5.7511e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6467e-11, dtype=torch.float64)
secont condition:: tensor(9.6467e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3793e-10, dtype=torch.float64)
secont condition:: tensor(1.3793e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1564e-10, dtype=torch.float64)
secont condition:: tensor(1.1564e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7677e-11, dtype=torch.float64)
secont condition:: tensor(9.7677e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4639e-10, dtype=torch.float64)
secont condition:: tensor(1.4639e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1279e-10, dtype=torch.float64)
secont condition:: tensor(1.1279e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6755e-10, dtype=torch.float64)
secont condition:: tensor(1.6755e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5363e-10, dtype=torch.float64)
secont condition:: tensor(1.5363e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1134e-10, dtype=torch.float64)
secont condition:: tensor(2.1134e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1523e-10, dtype=torch.float64)
secont condition:: tensor(3.1523e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1676e-10, dtype=torch.float64)
secont condition:: tensor(2.1676e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7796e-10, dtype=torch.float64)
secont condition:: tensor(2.7796e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1229e-10, dtype=torch.float64)
secont condition:: tensor(2.1229e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0218e-10, dtype=torch.float64)
secont condition:: tensor(2.0218e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3453e-10, dtype=torch.float64)
secont condition:: tensor(2.3453e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1330e-10, dtype=torch.float64)
secont condition:: tensor(2.1330e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6551e-10, dtype=torch.float64)
secont condition:: tensor(2.6551e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2181e-10, dtype=torch.float64)
secont condition:: tensor(2.2181e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3388e-10, dtype=torch.float64)
secont condition:: tensor(3.3388e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5078e-10, dtype=torch.float64)
secont condition:: tensor(3.5078e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1073e-10, dtype=torch.float64)
secont condition:: tensor(3.1073e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2662e-10, dtype=torch.float64)
secont condition:: tensor(3.2662e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1418e-10, dtype=torch.float64)
secont condition:: tensor(3.1418e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1872e-10, dtype=torch.float64)
secont condition:: tensor(3.1872e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7068e-10, dtype=torch.float64)
secont condition:: tensor(2.7068e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7884e-10, dtype=torch.float64)
secont condition:: tensor(2.7884e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6708e-10, dtype=torch.float64)
secont condition:: tensor(3.6708e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9043e-10, dtype=torch.float64)
secont condition:: tensor(3.9043e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5401e-10, dtype=torch.float64)
secont condition:: tensor(3.5401e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0757e-10, dtype=torch.float64)
secont condition:: tensor(4.0757e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2812e-10, dtype=torch.float64)
secont condition:: tensor(3.2812e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6554e-10, dtype=torch.float64)
secont condition:: tensor(3.6554e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7412e-10, dtype=torch.float64)
secont condition:: tensor(2.7412e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5761e-10, dtype=torch.float64)
secont condition:: tensor(5.5761e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5077e-10, dtype=torch.float64)
secont condition:: tensor(5.5077e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9262e-10, dtype=torch.float64)
secont condition:: tensor(7.9262e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2147e-10, dtype=torch.float64)
secont condition:: tensor(7.2147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1168e-10, dtype=torch.float64)
secont condition:: tensor(9.1168e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2062e-10, dtype=torch.float64)
secont condition:: tensor(6.2062e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4312e-10, dtype=torch.float64)
secont condition:: tensor(7.4312e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6357e-10, dtype=torch.float64)
secont condition:: tensor(5.6357e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6445e-10, dtype=torch.float64)
secont condition:: tensor(9.6445e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2125e-10, dtype=torch.float64)
secont condition:: tensor(9.2125e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2436e-10, dtype=torch.float64)
secont condition:: tensor(9.2436e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8977e-10, dtype=torch.float64)
secont condition:: tensor(8.8977e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8828e-10, dtype=torch.float64)
secont condition:: tensor(7.8828e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8091e-10, dtype=torch.float64)
secont condition:: tensor(9.8091e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0171e-09, dtype=torch.float64)
secont condition:: tensor(1.0171e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0279e-09, dtype=torch.float64)
secont condition:: tensor(1.0279e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7016e-10, dtype=torch.float64)
secont condition:: tensor(8.7016e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2226e-09, dtype=torch.float64)
secont condition:: tensor(1.2226e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0382e-09, dtype=torch.float64)
secont condition:: tensor(1.0382e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1983e-10, dtype=torch.float64)
secont condition:: tensor(9.1983e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2016e-09, dtype=torch.float64)
secont condition:: tensor(1.2016e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4050e-09, dtype=torch.float64)
secont condition:: tensor(1.4050e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4153e-09, dtype=torch.float64)
secont condition:: tensor(1.4153e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.966787099838257
curr_diff: 0 tensor(2.8308e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9030e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3593e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7551e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.8658e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9086e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6567e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4140e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254483
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.235369
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.224395
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.224461
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.220475
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221837
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.219802
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.215305
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.217987
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.214803
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.215256
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.216786
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217018
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.215231
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.215818
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.215903
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.216771
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214445
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.221236
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.217655
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.218687
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215134
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 22, Batch: 0, Loss: 0.217381
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.220689
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.217299
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216867
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.219293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213280
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.218269
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217972
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.214218
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.219176
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.217121
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.215772
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.219226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217520
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.216874
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.215022
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.212893
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214450
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216126
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214908
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.218982
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.211510
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.218122
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.218921
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.212726
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.217897
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.222246
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.210898
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.213238
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.218118
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214282
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216449
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.212625
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216565
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.211587
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.215980
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215230
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.210043
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 57.11522102355957
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.117581844329834
time_baseline:: 45.253072023391724
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9293e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4622e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1113e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5303e-33, dtype=torch.float64)
secont condition:: tensor(5.5303e-33, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2035e-11, dtype=torch.float64)
secont condition:: tensor(1.2035e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.7647e-12, dtype=torch.float64)
secont condition:: tensor(9.7647e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8858e-11, dtype=torch.float64)
secont condition:: tensor(4.8858e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1932e-11, dtype=torch.float64)
secont condition:: tensor(3.1932e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8991e-11, dtype=torch.float64)
secont condition:: tensor(6.8991e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1745e-10, dtype=torch.float64)
secont condition:: tensor(1.1745e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1397e-11, dtype=torch.float64)
secont condition:: tensor(9.1397e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9816e-11, dtype=torch.float64)
secont condition:: tensor(7.9816e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1864e-10, dtype=torch.float64)
secont condition:: tensor(1.1864e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7176e-11, dtype=torch.float64)
secont condition:: tensor(9.7176e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4976e-10, dtype=torch.float64)
secont condition:: tensor(1.4976e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8969e-10, dtype=torch.float64)
secont condition:: tensor(1.8969e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7640e-10, dtype=torch.float64)
secont condition:: tensor(1.7640e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4944e-10, dtype=torch.float64)
secont condition:: tensor(1.4944e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9795e-10, dtype=torch.float64)
secont condition:: tensor(1.9795e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5800e-10, dtype=torch.float64)
secont condition:: tensor(2.5800e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0064e-10, dtype=torch.float64)
secont condition:: tensor(3.0064e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5172e-10, dtype=torch.float64)
secont condition:: tensor(1.5172e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2744e-10, dtype=torch.float64)
secont condition:: tensor(2.2744e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1241e-10, dtype=torch.float64)
secont condition:: tensor(2.1241e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6034e-10, dtype=torch.float64)
secont condition:: tensor(2.6034e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2114e-10, dtype=torch.float64)
secont condition:: tensor(3.2114e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8131e-10, dtype=torch.float64)
secont condition:: tensor(2.8131e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1778e-10, dtype=torch.float64)
secont condition:: tensor(2.1778e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9973e-10, dtype=torch.float64)
secont condition:: tensor(1.9973e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6231e-10, dtype=torch.float64)
secont condition:: tensor(2.6231e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0301e-10, dtype=torch.float64)
secont condition:: tensor(3.0301e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1347e-10, dtype=torch.float64)
secont condition:: tensor(4.1347e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3063e-10, dtype=torch.float64)
secont condition:: tensor(3.3063e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8660e-10, dtype=torch.float64)
secont condition:: tensor(2.8660e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0318e-10, dtype=torch.float64)
secont condition:: tensor(3.0318e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0377e-10, dtype=torch.float64)
secont condition:: tensor(3.0377e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3863e-10, dtype=torch.float64)
secont condition:: tensor(3.3863e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0478e-10, dtype=torch.float64)
secont condition:: tensor(3.0478e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5783e-10, dtype=torch.float64)
secont condition:: tensor(3.5783e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6260e-10, dtype=torch.float64)
secont condition:: tensor(3.6260e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3666e-10, dtype=torch.float64)
secont condition:: tensor(3.3666e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5357e-10, dtype=torch.float64)
secont condition:: tensor(3.5357e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1853e-10, dtype=torch.float64)
secont condition:: tensor(4.1853e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9668e-10, dtype=torch.float64)
secont condition:: tensor(6.9668e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7987e-10, dtype=torch.float64)
secont condition:: tensor(4.7987e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6069e-10, dtype=torch.float64)
secont condition:: tensor(5.6069e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9790e-10, dtype=torch.float64)
secont condition:: tensor(4.9790e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8245e-10, dtype=torch.float64)
secont condition:: tensor(6.8245e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3342e-10, dtype=torch.float64)
secont condition:: tensor(5.3342e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2695e-10, dtype=torch.float64)
secont condition:: tensor(7.2695e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5885e-10, dtype=torch.float64)
secont condition:: tensor(6.5885e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4745e-10, dtype=torch.float64)
secont condition:: tensor(8.4745e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1782e-10, dtype=torch.float64)
secont condition:: tensor(8.1782e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8415e-10, dtype=torch.float64)
secont condition:: tensor(7.8415e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2146e-10, dtype=torch.float64)
secont condition:: tensor(7.2146e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4502e-10, dtype=torch.float64)
secont condition:: tensor(8.4502e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0578e-10, dtype=torch.float64)
secont condition:: tensor(9.0578e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6624e-10, dtype=torch.float64)
secont condition:: tensor(8.6624e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8067e-10, dtype=torch.float64)
secont condition:: tensor(8.8067e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3310e-10, dtype=torch.float64)
secont condition:: tensor(9.3310e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4954e-10, dtype=torch.float64)
secont condition:: tensor(6.4954e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2575e-09, dtype=torch.float64)
secont condition:: tensor(1.2575e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0861e-09, dtype=torch.float64)
secont condition:: tensor(1.0861e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0359e-09, dtype=torch.float64)
secont condition:: tensor(1.0359e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1944e-09, dtype=torch.float64)
secont condition:: tensor(1.1944e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.130216836929321
curr_diff: 0 tensor(2.5969e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4480e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1329e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5237e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6276e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6435e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5313e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251720
Test Avg. Loss: 0.000022, Accuracy: 0.940400
Train - Epoch 1, Batch: 0, Loss: 0.223747
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.218985
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.225760
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.216650
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 5, Batch: 0, Loss: 0.218983
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.219906
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 7, Batch: 0, Loss: 0.216786
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.209565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 9, Batch: 0, Loss: 0.214188
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.216295
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 11, Batch: 0, Loss: 0.210918
Test Avg. Loss: 0.000021, Accuracy: 0.946100
Train - Epoch 12, Batch: 0, Loss: 0.217707
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.219073
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.215963
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.216282
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 16, Batch: 0, Loss: 0.219149
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.220010
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.220049
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 19, Batch: 0, Loss: 0.223045
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.213837
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.214514
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 22, Batch: 0, Loss: 0.222255
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.214047
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.214469
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.213953
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217543
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.212136
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.214354
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.221157
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.216728
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.222589
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.00580644607544
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.646880865097046
time_baseline:: 22.717369556427002
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4320e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6092e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0732e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6285e-11, dtype=torch.float64)
secont condition:: tensor(4.6285e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6699e-11, dtype=torch.float64)
secont condition:: tensor(3.6699e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9835e-11, dtype=torch.float64)
secont condition:: tensor(2.9835e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6750e-11, dtype=torch.float64)
secont condition:: tensor(2.6750e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8784e-11, dtype=torch.float64)
secont condition:: tensor(2.8784e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0527e-11, dtype=torch.float64)
secont condition:: tensor(3.0527e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6027e-11, dtype=torch.float64)
secont condition:: tensor(7.6027e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2313e-11, dtype=torch.float64)
secont condition:: tensor(7.2313e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0991e-11, dtype=torch.float64)
secont condition:: tensor(6.0991e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6323e-10, dtype=torch.float64)
secont condition:: tensor(1.6323e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4921e-10, dtype=torch.float64)
secont condition:: tensor(1.4921e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1440e-10, dtype=torch.float64)
secont condition:: tensor(1.1440e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2071e-10, dtype=torch.float64)
secont condition:: tensor(1.2071e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6337e-10, dtype=torch.float64)
secont condition:: tensor(2.6337e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5997e-10, dtype=torch.float64)
secont condition:: tensor(1.5997e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2951e-10, dtype=torch.float64)
secont condition:: tensor(1.2951e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1840e-10, dtype=torch.float64)
secont condition:: tensor(1.1840e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9966e-11, dtype=torch.float64)
secont condition:: tensor(5.9966e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.2224e-11, dtype=torch.float64)
secont condition:: tensor(9.2224e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6438e-10, dtype=torch.float64)
secont condition:: tensor(3.6438e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3123e-10, dtype=torch.float64)
secont condition:: tensor(4.3123e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8838e-10, dtype=torch.float64)
secont condition:: tensor(3.8838e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6901e-10, dtype=torch.float64)
secont condition:: tensor(1.6901e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7731e-10, dtype=torch.float64)
secont condition:: tensor(2.7731e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0341e-10, dtype=torch.float64)
secont condition:: tensor(2.0341e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4192e-10, dtype=torch.float64)
secont condition:: tensor(2.4192e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9719e-10, dtype=torch.float64)
secont condition:: tensor(2.9719e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9772e-10, dtype=torch.float64)
secont condition:: tensor(3.9772e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8427e-10, dtype=torch.float64)
secont condition:: tensor(6.8427e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1473e-10, dtype=torch.float64)
secont condition:: tensor(4.1473e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6806e-10, dtype=torch.float64)
secont condition:: tensor(4.6806e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2670e-10, dtype=torch.float64)
secont condition:: tensor(3.2670e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1058e-10, dtype=torch.float64)
secont condition:: tensor(3.1058e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6417e-10, dtype=torch.float64)
secont condition:: tensor(3.6417e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7930e-10, dtype=torch.float64)
secont condition:: tensor(2.7930e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3177e-10, dtype=torch.float64)
secont condition:: tensor(3.3177e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8173e-10, dtype=torch.float64)
secont condition:: tensor(4.8173e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6184e-10, dtype=torch.float64)
secont condition:: tensor(3.6184e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1988e-10, dtype=torch.float64)
secont condition:: tensor(4.1988e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5010e-10, dtype=torch.float64)
secont condition:: tensor(5.5010e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8621e-10, dtype=torch.float64)
secont condition:: tensor(5.8621e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0698e-10, dtype=torch.float64)
secont condition:: tensor(6.0698e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6440e-10, dtype=torch.float64)
secont condition:: tensor(5.6440e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6524e-10, dtype=torch.float64)
secont condition:: tensor(5.6524e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1516e-10, dtype=torch.float64)
secont condition:: tensor(4.1516e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6625e-09, dtype=torch.float64)
secont condition:: tensor(1.6625e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8446e-10, dtype=torch.float64)
secont condition:: tensor(6.8446e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1231e-09, dtype=torch.float64)
secont condition:: tensor(1.1231e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0113e-09, dtype=torch.float64)
secont condition:: tensor(1.0113e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8415e-10, dtype=torch.float64)
secont condition:: tensor(8.8415e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5584e-10, dtype=torch.float64)
secont condition:: tensor(9.5584e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2880e-10, dtype=torch.float64)
secont condition:: tensor(8.2880e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7008e-10, dtype=torch.float64)
secont condition:: tensor(9.7008e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7849e-10, dtype=torch.float64)
secont condition:: tensor(8.7849e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2316e-09, dtype=torch.float64)
secont condition:: tensor(1.2316e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2976e-10, dtype=torch.float64)
secont condition:: tensor(8.2976e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0266e-10, dtype=torch.float64)
secont condition:: tensor(8.0266e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0325e-09, dtype=torch.float64)
secont condition:: tensor(1.0325e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8651e-10, dtype=torch.float64)
secont condition:: tensor(8.8651e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0156e-09, dtype=torch.float64)
secont condition:: tensor(1.0156e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6662e-09, dtype=torch.float64)
secont condition:: tensor(1.6662e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1266e-09, dtype=torch.float64)
secont condition:: tensor(1.1266e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.313392877578735
curr_diff: 0 tensor(3.6918e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1884e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7656e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3814e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7250e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.8315e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.8248e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5389e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252770
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.230766
Test Avg. Loss: 0.000022, Accuracy: 0.942500
Train - Epoch 2, Batch: 0, Loss: 0.217524
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.219235
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.226867
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.217667
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.216431
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.221998
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.211224
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.224919
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.218727
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.222083
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.212761
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.215580
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.213851
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216772
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.219772
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.215042
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.209111
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.211777
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.216882
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.218782
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.212651
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.219465
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.211572
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.222203
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.221138
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 27, Batch: 0, Loss: 0.220029
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.216885
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.221212
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.222289
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.110087871551514
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.908116340637207
time_baseline:: 22.978601455688477
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6505e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5390e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8442e-33, dtype=torch.float64)
secont condition:: tensor(4.8442e-33, dtype=torch.float64)
curr_secont condition:: tensor(4.1133e-11, dtype=torch.float64)
secont condition:: tensor(4.1133e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4342e-11, dtype=torch.float64)
secont condition:: tensor(1.4342e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9046e-11, dtype=torch.float64)
secont condition:: tensor(3.9046e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4694e-11, dtype=torch.float64)
secont condition:: tensor(2.4694e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1402e-11, dtype=torch.float64)
secont condition:: tensor(2.1402e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.5582e-11, dtype=torch.float64)
secont condition:: tensor(9.5582e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0115e-11, dtype=torch.float64)
secont condition:: tensor(7.0115e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3507e-10, dtype=torch.float64)
secont condition:: tensor(1.3507e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6866e-10, dtype=torch.float64)
secont condition:: tensor(1.6866e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4917e-10, dtype=torch.float64)
secont condition:: tensor(1.4917e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1532e-10, dtype=torch.float64)
secont condition:: tensor(1.1532e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0630e-10, dtype=torch.float64)
secont condition:: tensor(1.0630e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3063e-10, dtype=torch.float64)
secont condition:: tensor(2.3063e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8709e-10, dtype=torch.float64)
secont condition:: tensor(1.8709e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5197e-10, dtype=torch.float64)
secont condition:: tensor(1.5197e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3895e-10, dtype=torch.float64)
secont condition:: tensor(1.3895e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1012e-10, dtype=torch.float64)
secont condition:: tensor(1.1012e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0735e-10, dtype=torch.float64)
secont condition:: tensor(1.0735e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9645e-10, dtype=torch.float64)
secont condition:: tensor(2.9645e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3583e-10, dtype=torch.float64)
secont condition:: tensor(2.3583e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7402e-10, dtype=torch.float64)
secont condition:: tensor(2.7402e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2845e-10, dtype=torch.float64)
secont condition:: tensor(4.2845e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0312e-10, dtype=torch.float64)
secont condition:: tensor(3.0312e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4203e-10, dtype=torch.float64)
secont condition:: tensor(4.4203e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4996e-10, dtype=torch.float64)
secont condition:: tensor(3.4996e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0274e-10, dtype=torch.float64)
secont condition:: tensor(5.0274e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6165e-10, dtype=torch.float64)
secont condition:: tensor(3.6165e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2572e-10, dtype=torch.float64)
secont condition:: tensor(4.2572e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4848e-10, dtype=torch.float64)
secont condition:: tensor(3.4848e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8821e-10, dtype=torch.float64)
secont condition:: tensor(2.8821e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0894e-10, dtype=torch.float64)
secont condition:: tensor(3.0894e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0214e-10, dtype=torch.float64)
secont condition:: tensor(1.0214e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7984e-10, dtype=torch.float64)
secont condition:: tensor(3.7984e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3861e-10, dtype=torch.float64)
secont condition:: tensor(3.3861e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6402e-10, dtype=torch.float64)
secont condition:: tensor(2.6402e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8026e-10, dtype=torch.float64)
secont condition:: tensor(2.8026e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6395e-10, dtype=torch.float64)
secont condition:: tensor(2.6395e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.9688e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7913e-10, dtype=torch.float64)
secont condition:: tensor(2.7913e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8972e-10, dtype=torch.float64)
secont condition:: tensor(2.8972e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7758e-10, dtype=torch.float64)
secont condition:: tensor(5.7758e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0831e-10, dtype=torch.float64)
secont condition:: tensor(2.0831e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8718e-10, dtype=torch.float64)
secont condition:: tensor(3.8718e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0162e-10, dtype=torch.float64)
secont condition:: tensor(5.0162e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1453e-10, dtype=torch.float64)
secont condition:: tensor(7.1453e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8302e-10, dtype=torch.float64)
secont condition:: tensor(5.8302e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7717e-10, dtype=torch.float64)
secont condition:: tensor(5.7717e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3740e-10, dtype=torch.float64)
secont condition:: tensor(6.3740e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8429e-10, dtype=torch.float64)
secont condition:: tensor(5.8429e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9262e-10, dtype=torch.float64)
secont condition:: tensor(3.9262e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7027e-10, dtype=torch.float64)
secont condition:: tensor(8.7027e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4015e-10, dtype=torch.float64)
secont condition:: tensor(9.4015e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1102e-10, dtype=torch.float64)
secont condition:: tensor(8.1102e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8515e-10, dtype=torch.float64)
secont condition:: tensor(9.8515e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4347e-09, dtype=torch.float64)
secont condition:: tensor(1.4347e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0954e-10, dtype=torch.float64)
secont condition:: tensor(9.0954e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5100e-10, dtype=torch.float64)
secont condition:: tensor(9.5100e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0428e-09, dtype=torch.float64)
secont condition:: tensor(1.0428e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1774e-09, dtype=torch.float64)
secont condition:: tensor(1.1774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4667e-09, dtype=torch.float64)
secont condition:: tensor(1.4667e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1259e-09, dtype=torch.float64)
secont condition:: tensor(1.1259e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5958e-09, dtype=torch.float64)
secont condition:: tensor(1.5958e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.471626281738281
curr_diff: 0 tensor(3.7185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5106e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1543e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0898e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7486e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.2796e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7378e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3763e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.258173
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.228773
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.219816
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.218632
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.216448
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.225871
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.218892
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.219414
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.215833
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.217398
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.214320
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.219424
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.214654
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.215374
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.213666
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.210246
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.215917
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.216962
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.218247
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 20, Batch: 0, Loss: 0.225525
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.212991
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 22, Batch: 0, Loss: 0.213993
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.212586
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.221754
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 25, Batch: 0, Loss: 0.218687
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.212268
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.222155
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.214819
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 29, Batch: 0, Loss: 0.219049
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.207528
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.223881
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.25846791267395
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.506560802459717
time_baseline:: 22.576190948486328
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9569e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7550e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2012e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6791e-11, dtype=torch.float64)
secont condition:: tensor(3.6791e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6275e-11, dtype=torch.float64)
secont condition:: tensor(4.6275e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4150e-11, dtype=torch.float64)
secont condition:: tensor(3.4150e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5473e-11, dtype=torch.float64)
secont condition:: tensor(2.5473e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6671e-11, dtype=torch.float64)
secont condition:: tensor(4.6671e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.5033e-11, dtype=torch.float64)
secont condition:: tensor(9.5033e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.2419e-11, dtype=torch.float64)
secont condition:: tensor(8.2419e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3809e-11, dtype=torch.float64)
secont condition:: tensor(7.3809e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6894e-11, dtype=torch.float64)
secont condition:: tensor(5.6894e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0865e-11, dtype=torch.float64)
secont condition:: tensor(5.0865e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.5677e-11, dtype=torch.float64)
secont condition:: tensor(9.5677e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-10, dtype=torch.float64)
secont condition:: tensor(2.0260e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2309e-10, dtype=torch.float64)
secont condition:: tensor(1.2309e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6320e-10, dtype=torch.float64)
secont condition:: tensor(1.6320e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3990e-10, dtype=torch.float64)
secont condition:: tensor(2.3990e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0864e-10, dtype=torch.float64)
secont condition:: tensor(2.0864e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4813e-10, dtype=torch.float64)
secont condition:: tensor(3.4813e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0110e-10, dtype=torch.float64)
secont condition:: tensor(3.0110e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9175e-10, dtype=torch.float64)
secont condition:: tensor(2.9175e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4381e-10, dtype=torch.float64)
secont condition:: tensor(2.4381e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5874e-10, dtype=torch.float64)
secont condition:: tensor(3.5874e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7922e-10, dtype=torch.float64)
secont condition:: tensor(2.7922e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8968e-10, dtype=torch.float64)
secont condition:: tensor(2.8968e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1941e-10, dtype=torch.float64)
secont condition:: tensor(2.1941e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7102e-10, dtype=torch.float64)
secont condition:: tensor(3.7102e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7190e-10, dtype=torch.float64)
secont condition:: tensor(1.7190e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7188e-10, dtype=torch.float64)
secont condition:: tensor(2.7188e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7534e-10, dtype=torch.float64)
secont condition:: tensor(2.7534e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.9910e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2749e-10, dtype=torch.float64)
secont condition:: tensor(3.2749e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8214e-10, dtype=torch.float64)
secont condition:: tensor(1.8214e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1059e-10, dtype=torch.float64)
secont condition:: tensor(4.1059e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3658e-10, dtype=torch.float64)
secont condition:: tensor(3.3658e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3429e-10, dtype=torch.float64)
secont condition:: tensor(5.3429e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8936e-10, dtype=torch.float64)
secont condition:: tensor(3.8936e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5077e-10, dtype=torch.float64)
secont condition:: tensor(3.5077e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0320e-10, dtype=torch.float64)
secont condition:: tensor(3.0320e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5698e-10, dtype=torch.float64)
secont condition:: tensor(2.5698e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3662e-10, dtype=torch.float64)
secont condition:: tensor(3.3662e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2707e-10, dtype=torch.float64)
secont condition:: tensor(5.2707e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4505e-10, dtype=torch.float64)
secont condition:: tensor(5.4505e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3616e-10, dtype=torch.float64)
secont condition:: tensor(4.3616e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3773e-10, dtype=torch.float64)
secont condition:: tensor(4.3773e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1302e-10, dtype=torch.float64)
secont condition:: tensor(5.1302e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4633e-10, dtype=torch.float64)
secont condition:: tensor(6.4633e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.7629e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3362e-10, dtype=torch.float64)
secont condition:: tensor(4.3362e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.5120e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1270e-10, dtype=torch.float64)
secont condition:: tensor(6.1270e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1743e-10, dtype=torch.float64)
secont condition:: tensor(7.1743e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0663e-09, dtype=torch.float64)
secont condition:: tensor(1.0663e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1494e-09, dtype=torch.float64)
secont condition:: tensor(1.1494e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1788e-09, dtype=torch.float64)
secont condition:: tensor(1.1788e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3429e-09, dtype=torch.float64)
secont condition:: tensor(1.3429e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1976e-09, dtype=torch.float64)
secont condition:: tensor(1.1976e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2110e-09, dtype=torch.float64)
secont condition:: tensor(1.2110e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6267e-10, dtype=torch.float64)
secont condition:: tensor(9.6267e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-09, dtype=torch.float64)
secont condition:: tensor(1.2925e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2177e-09, dtype=torch.float64)
secont condition:: tensor(2.2177e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5075e-09, dtype=torch.float64)
secont condition:: tensor(1.5075e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1791e-09, dtype=torch.float64)
secont condition:: tensor(1.1791e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3809e-09, dtype=torch.float64)
secont condition:: tensor(1.3809e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2321e-09, dtype=torch.float64)
secont condition:: tensor(1.2321e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.4133875370025635
curr_diff: 0 tensor(3.9656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4193e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7405e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.0036e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5532e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9505e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5447e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945600
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.246401
Test Avg. Loss: 0.000022, Accuracy: 0.940400
Train - Epoch 1, Batch: 0, Loss: 0.219096
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.222519
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.219514
Test Avg. Loss: 0.000021, Accuracy: 0.944600
Train - Epoch 4, Batch: 0, Loss: 0.215770
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.220397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.218751
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.212527
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.213074
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.218027
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.218240
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.216168
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.211051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.219768
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.217815
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.210399
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.219437
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.219171
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.213940
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.219975
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 20, Batch: 0, Loss: 0.214646
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.219047
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.213493
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.215050
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.221723
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 25, Batch: 0, Loss: 0.221709
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.216969
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 27, Batch: 0, Loss: 0.213003
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.217599
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.208667
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.207908
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.223507
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.266481637954712
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.576077222824097
time_baseline:: 22.646280765533447
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9369e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1778e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8070e-33, dtype=torch.float64)
secont condition:: tensor(4.8070e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4725e-32, dtype=torch.float64)
secont condition:: tensor(1.4725e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9349e-11, dtype=torch.float64)
secont condition:: tensor(3.9349e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6444e-11, dtype=torch.float64)
secont condition:: tensor(4.6444e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3558e-11, dtype=torch.float64)
secont condition:: tensor(2.3558e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6270e-10, dtype=torch.float64)
secont condition:: tensor(1.6270e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0404e-11, dtype=torch.float64)
secont condition:: tensor(9.0404e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3913e-11, dtype=torch.float64)
secont condition:: tensor(7.3913e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6504e-11, dtype=torch.float64)
secont condition:: tensor(7.6504e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7601e-10, dtype=torch.float64)
secont condition:: tensor(1.7601e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5288e-10, dtype=torch.float64)
secont condition:: tensor(1.5288e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1193e-10, dtype=torch.float64)
secont condition:: tensor(1.1193e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.9335e-11, dtype=torch.float64)
secont condition:: tensor(9.9335e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2031e-11, dtype=torch.float64)
secont condition:: tensor(6.2031e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8226e-10, dtype=torch.float64)
secont condition:: tensor(1.8226e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6057e-10, dtype=torch.float64)
secont condition:: tensor(1.6057e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7355e-10, dtype=torch.float64)
secont condition:: tensor(2.7355e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6885e-10, dtype=torch.float64)
secont condition:: tensor(2.6885e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5688e-10, dtype=torch.float64)
secont condition:: tensor(2.5688e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1979e-10, dtype=torch.float64)
secont condition:: tensor(1.1979e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4505e-10, dtype=torch.float64)
secont condition:: tensor(1.4505e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9334e-10, dtype=torch.float64)
secont condition:: tensor(2.9334e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7633e-10, dtype=torch.float64)
secont condition:: tensor(2.7633e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6524e-10, dtype=torch.float64)
secont condition:: tensor(1.6524e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8891e-10, dtype=torch.float64)
secont condition:: tensor(1.8891e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6652e-10, dtype=torch.float64)
secont condition:: tensor(3.6652e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6967e-10, dtype=torch.float64)
secont condition:: tensor(2.6967e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1692e-10, dtype=torch.float64)
secont condition:: tensor(2.1692e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3260e-11, dtype=torch.float64)
secont condition:: tensor(6.3260e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4245e-10, dtype=torch.float64)
secont condition:: tensor(3.4245e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2611e-10, dtype=torch.float64)
secont condition:: tensor(3.2611e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8170e-10, dtype=torch.float64)
secont condition:: tensor(2.8170e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5884e-10, dtype=torch.float64)
secont condition:: tensor(3.5884e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7817e-10, dtype=torch.float64)
secont condition:: tensor(1.7817e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5447e-10, dtype=torch.float64)
secont condition:: tensor(4.5447e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6239e-10, dtype=torch.float64)
secont condition:: tensor(2.6239e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2325e-10, dtype=torch.float64)
secont condition:: tensor(4.2325e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9996e-10, dtype=torch.float64)
secont condition:: tensor(3.9996e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0869e-10, dtype=torch.float64)
secont condition:: tensor(4.0869e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8345e-10, dtype=torch.float64)
secont condition:: tensor(3.8345e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6611e-10, dtype=torch.float64)
secont condition:: tensor(3.6611e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7394e-10, dtype=torch.float64)
secont condition:: tensor(5.7394e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5980e-10, dtype=torch.float64)
secont condition:: tensor(7.5980e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7745e-10, dtype=torch.float64)
secont condition:: tensor(5.7745e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1628e-10, dtype=torch.float64)
secont condition:: tensor(6.1628e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8552e-10, dtype=torch.float64)
secont condition:: tensor(5.8552e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2176e-10, dtype=torch.float64)
secont condition:: tensor(5.2176e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9506e-10, dtype=torch.float64)
secont condition:: tensor(6.9506e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5266e-10, dtype=torch.float64)
secont condition:: tensor(4.5266e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1110e-10, dtype=torch.float64)
secont condition:: tensor(7.1110e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9994e-10, dtype=torch.float64)
secont condition:: tensor(7.9994e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7445e-10, dtype=torch.float64)
secont condition:: tensor(8.7445e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2961e-10, dtype=torch.float64)
secont condition:: tensor(7.2961e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5817e-10, dtype=torch.float64)
secont condition:: tensor(6.5817e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3382e-09, dtype=torch.float64)
secont condition:: tensor(1.3382e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1635e-09, dtype=torch.float64)
secont condition:: tensor(1.1635e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8045e-10, dtype=torch.float64)
secont condition:: tensor(9.8045e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0895e-09, dtype=torch.float64)
secont condition:: tensor(1.0895e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3159e-09, dtype=torch.float64)
secont condition:: tensor(1.3159e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0218e-09, dtype=torch.float64)
secont condition:: tensor(1.0218e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1519e-09, dtype=torch.float64)
secont condition:: tensor(1.1519e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.287434339523315
curr_diff: 0 tensor(3.5751e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.7962e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5715e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9004e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.6248e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.2942e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7526e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8391e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253092
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.227426
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.217188
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.226138
Test Avg. Loss: 0.000021, Accuracy: 0.944600
Train - Epoch 4, Batch: 0, Loss: 0.224129
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.218439
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.216371
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.219615
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.220179
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.220999
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 10, Batch: 0, Loss: 0.215852
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.219057
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.209444
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.221973
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.215216
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.215804
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 16, Batch: 0, Loss: 0.217240
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.216464
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.210343
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218477
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.215232
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.210451
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217916
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.216814
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.218833
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 25, Batch: 0, Loss: 0.210844
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.213727
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.216883
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.218703
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.209925
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.213439
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.219091
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 31.2080500125885
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.51961326599121
time_baseline:: 22.589166402816772
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4919e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6051e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9571e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0976e-33, dtype=torch.float64)
secont condition:: tensor(8.0976e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4073e-32, dtype=torch.float64)
secont condition:: tensor(1.4073e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5327e-11, dtype=torch.float64)
secont condition:: tensor(3.5327e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9241e-11, dtype=torch.float64)
secont condition:: tensor(2.9241e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6043e-11, dtype=torch.float64)
secont condition:: tensor(2.6043e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7941e-13, dtype=torch.float64)
secont condition:: tensor(7.7941e-13, dtype=torch.float64)
curr_secont condition:: tensor(9.7986e-11, dtype=torch.float64)
secont condition:: tensor(9.7986e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8455e-11, dtype=torch.float64)
secont condition:: tensor(7.8455e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8856e-10, dtype=torch.float64)
secont condition:: tensor(1.8856e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7815e-10, dtype=torch.float64)
secont condition:: tensor(1.7815e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3827e-10, dtype=torch.float64)
secont condition:: tensor(1.3827e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7146e-10, dtype=torch.float64)
secont condition:: tensor(1.7146e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3905e-10, dtype=torch.float64)
secont condition:: tensor(1.3905e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0430e-10, dtype=torch.float64)
secont condition:: tensor(2.0430e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8808e-10, dtype=torch.float64)
secont condition:: tensor(1.8808e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0031e-10, dtype=torch.float64)
secont condition:: tensor(2.0031e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2272e-10, dtype=torch.float64)
secont condition:: tensor(1.2272e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5245e-10, dtype=torch.float64)
secont condition:: tensor(1.5245e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.0092e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1273e-10, dtype=torch.float64)
secont condition:: tensor(3.1273e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0924e-10, dtype=torch.float64)
secont condition:: tensor(4.0924e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3061e-10, dtype=torch.float64)
secont condition:: tensor(3.3061e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5954e-10, dtype=torch.float64)
secont condition:: tensor(3.5954e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5272e-10, dtype=torch.float64)
secont condition:: tensor(2.5272e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1321e-10, dtype=torch.float64)
secont condition:: tensor(6.1321e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9164e-10, dtype=torch.float64)
secont condition:: tensor(1.9164e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9583e-10, dtype=torch.float64)
secont condition:: tensor(5.9583e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0951e-10, dtype=torch.float64)
secont condition:: tensor(3.0951e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3906e-10, dtype=torch.float64)
secont condition:: tensor(3.3906e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7955e-10, dtype=torch.float64)
secont condition:: tensor(4.7955e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1709e-10, dtype=torch.float64)
secont condition:: tensor(3.1709e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7689e-10, dtype=torch.float64)
secont condition:: tensor(2.7689e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4653e-10, dtype=torch.float64)
secont condition:: tensor(2.4653e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5100e-10, dtype=torch.float64)
secont condition:: tensor(4.5100e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4470e-12, dtype=torch.float64)
secont condition:: tensor(8.4470e-12, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5296e-10, dtype=torch.float64)
secont condition:: tensor(3.5296e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6853e-10, dtype=torch.float64)
secont condition:: tensor(2.6853e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3987e-10, dtype=torch.float64)
secont condition:: tensor(2.3987e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8624e-10, dtype=torch.float64)
secont condition:: tensor(1.8624e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6080e-10, dtype=torch.float64)
secont condition:: tensor(4.6080e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7922e-10, dtype=torch.float64)
secont condition:: tensor(3.7922e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1960e-10, dtype=torch.float64)
secont condition:: tensor(7.1960e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0598e-10, dtype=torch.float64)
secont condition:: tensor(6.0598e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2549e-10, dtype=torch.float64)
secont condition:: tensor(7.2549e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1746e-10, dtype=torch.float64)
secont condition:: tensor(7.1746e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1818e-10, dtype=torch.float64)
secont condition:: tensor(5.1818e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5973e-10, dtype=torch.float64)
secont condition:: tensor(2.5973e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1307e-10, dtype=torch.float64)
secont condition:: tensor(6.1307e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3897e-10, dtype=torch.float64)
secont condition:: tensor(7.3897e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9380e-10, dtype=torch.float64)
secont condition:: tensor(6.9380e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7719e-10, dtype=torch.float64)
secont condition:: tensor(9.7719e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5493e-09, dtype=torch.float64)
secont condition:: tensor(1.5493e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0651e-09, dtype=torch.float64)
secont condition:: tensor(1.0651e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5342e-09, dtype=torch.float64)
secont condition:: tensor(1.5342e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2087e-09, dtype=torch.float64)
secont condition:: tensor(2.2087e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1205e-09, dtype=torch.float64)
secont condition:: tensor(1.1205e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6743e-10, dtype=torch.float64)
secont condition:: tensor(3.6743e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1697e-09, dtype=torch.float64)
secont condition:: tensor(1.1697e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7188e-10, dtype=torch.float64)
secont condition:: tensor(8.7188e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-10, dtype=torch.float64)
secont condition:: tensor(8.5275e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2426e-09, dtype=torch.float64)
secont condition:: tensor(1.2426e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3417e-09, dtype=torch.float64)
secont condition:: tensor(1.3417e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.292608737945557
curr_diff: 0 tensor(3.6605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.4866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.8635e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8158e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7097e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8816e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9131e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6071e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247303
Train - Epoch 0, Batch: 10, Loss: 0.220960
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.207185
Train - Epoch 1, Batch: 10, Loss: 0.212239
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.212456
Train - Epoch 2, Batch: 10, Loss: 0.209920
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.217344
Train - Epoch 3, Batch: 10, Loss: 0.212189
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.211090
Train - Epoch 4, Batch: 10, Loss: 0.212609
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.203589
Train - Epoch 5, Batch: 10, Loss: 0.219101
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.215122
Train - Epoch 6, Batch: 10, Loss: 0.215571
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.204303
Train - Epoch 7, Batch: 10, Loss: 0.209946
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.431032419204712
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.720207214355469
time_baseline:: 4.738161325454712
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5580e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4483e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6363e-33, dtype=torch.float64)
secont condition:: tensor(6.6363e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7453e-32, dtype=torch.float64)
secont condition:: tensor(1.7453e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1308e-32, dtype=torch.float64)
secont condition:: tensor(3.1308e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.0464e-32, dtype=torch.float64)
secont condition:: tensor(5.0464e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.1569e-32, dtype=torch.float64)
secont condition:: tensor(7.1569e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.9675e-32, dtype=torch.float64)
secont condition:: tensor(7.9675e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0838e-31, dtype=torch.float64)
secont condition:: tensor(1.0838e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8949e-31, dtype=torch.float64)
secont condition:: tensor(1.8949e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0110e-31, dtype=torch.float64)
secont condition:: tensor(2.0110e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.6705e-31, dtype=torch.float64)
secont condition:: tensor(2.6705e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.0865e-31, dtype=torch.float64)
secont condition:: tensor(3.0865e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.1986e-31, dtype=torch.float64)
secont condition:: tensor(3.1986e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.3047e-10, dtype=torch.float64)
secont condition:: tensor(4.3047e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5269e-10, dtype=torch.float64)
secont condition:: tensor(3.5269e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9143e-10, dtype=torch.float64)
secont condition:: tensor(2.9143e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6317e-10, dtype=torch.float64)
secont condition:: tensor(2.6317e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7222e-10, dtype=torch.float64)
secont condition:: tensor(2.7222e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6248e-10, dtype=torch.float64)
secont condition:: tensor(1.6248e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5857e-10, dtype=torch.float64)
secont condition:: tensor(1.5857e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4443e-10, dtype=torch.float64)
secont condition:: tensor(1.4443e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2097e-10, dtype=torch.float64)
secont condition:: tensor(1.2097e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8696e-11, dtype=torch.float64)
secont condition:: tensor(8.8696e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2885e-10, dtype=torch.float64)
secont condition:: tensor(1.2885e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2101e-11, dtype=torch.float64)
secont condition:: tensor(5.2101e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3473e-10, dtype=torch.float64)
secont condition:: tensor(1.3473e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1221e-11, dtype=torch.float64)
secont condition:: tensor(6.1221e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0082e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8518e-10, dtype=torch.float64)
secont condition:: tensor(1.8518e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2257e-10, dtype=torch.float64)
secont condition:: tensor(8.2257e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7634e-10, dtype=torch.float64)
secont condition:: tensor(4.7634e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0461e-10, dtype=torch.float64)
secont condition:: tensor(5.0461e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9727e-10, dtype=torch.float64)
secont condition:: tensor(4.9727e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0414e-10, dtype=torch.float64)
secont condition:: tensor(4.0414e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0938e-10, dtype=torch.float64)
secont condition:: tensor(3.0938e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9577e-10, dtype=torch.float64)
secont condition:: tensor(2.9577e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0144e-09, dtype=torch.float64)
secont condition:: tensor(3.0144e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1168e-09, dtype=torch.float64)
secont condition:: tensor(1.1168e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0975e-09, dtype=torch.float64)
secont condition:: tensor(1.0975e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8178e-10, dtype=torch.float64)
secont condition:: tensor(7.8178e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4236e-10, dtype=torch.float64)
secont condition:: tensor(6.4236e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9323e-10, dtype=torch.float64)
secont condition:: tensor(5.9323e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8824e-10, dtype=torch.float64)
secont condition:: tensor(2.8824e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9568e-10, dtype=torch.float64)
secont condition:: tensor(1.9568e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1696e-09, dtype=torch.float64)
secont condition:: tensor(1.1696e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6998e-10, dtype=torch.float64)
secont condition:: tensor(8.6998e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8229e-09, dtype=torch.float64)
secont condition:: tensor(1.8229e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0718e-09, dtype=torch.float64)
secont condition:: tensor(1.0718e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4402e-11, dtype=torch.float64)
secont condition:: tensor(1.4402e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7053e-09, dtype=torch.float64)
secont condition:: tensor(1.7053e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.0732e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9994e-10, dtype=torch.float64)
secont condition:: tensor(7.9994e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0858e-10, dtype=torch.float64)
secont condition:: tensor(8.0858e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9910e-10, dtype=torch.float64)
secont condition:: tensor(6.9910e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5329e-10, dtype=torch.float64)
secont condition:: tensor(6.5329e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7941e-09, dtype=torch.float64)
secont condition:: tensor(2.7941e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3747e-10, dtype=torch.float64)
secont condition:: tensor(9.3747e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4506e-09, dtype=torch.float64)
secont condition:: tensor(1.4506e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7541e-10, dtype=torch.float64)
secont condition:: tensor(7.7541e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5065e-10, dtype=torch.float64)
secont condition:: tensor(8.5065e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7315e-09, dtype=torch.float64)
secont condition:: tensor(1.7315e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.1755475997924805
curr_diff: 0 tensor(8.1630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0419e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5942e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3628e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.2295e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5740e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9812e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242436
Train - Epoch 0, Batch: 10, Loss: 0.215540
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.232958
Train - Epoch 1, Batch: 10, Loss: 0.221389
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.217956
Train - Epoch 2, Batch: 10, Loss: 0.233328
Test Avg. Loss: 0.000060, Accuracy: 0.946000
Train - Epoch 3, Batch: 0, Loss: 0.227719
Train - Epoch 3, Batch: 10, Loss: 0.220662
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.209722
Train - Epoch 4, Batch: 10, Loss: 0.204475
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.189094
Train - Epoch 5, Batch: 10, Loss: 0.220367
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.209681
Train - Epoch 6, Batch: 10, Loss: 0.211880
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.212774
Train - Epoch 7, Batch: 10, Loss: 0.214378
Test Avg. Loss: 0.000060, Accuracy: 0.945500
training_time:: 6.995297193527222
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.73283576965332
time_baseline:: 4.750617742538452
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3497e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8706e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945500
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6446e-33, dtype=torch.float64)
secont condition:: tensor(4.6446e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6742e-32, dtype=torch.float64)
secont condition:: tensor(1.6742e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.3455e-10, dtype=torch.float64)
secont condition:: tensor(4.3455e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5026e-10, dtype=torch.float64)
secont condition:: tensor(5.5026e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7526e-10, dtype=torch.float64)
secont condition:: tensor(3.7526e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7166e-10, dtype=torch.float64)
secont condition:: tensor(3.7166e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0511e-10, dtype=torch.float64)
secont condition:: tensor(3.0511e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6069e-10, dtype=torch.float64)
secont condition:: tensor(2.6069e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3025e-10, dtype=torch.float64)
secont condition:: tensor(3.3025e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2234e-10, dtype=torch.float64)
secont condition:: tensor(2.2234e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9748e-10, dtype=torch.float64)
secont condition:: tensor(1.9748e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5472e-10, dtype=torch.float64)
secont condition:: tensor(1.5472e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8829e-10, dtype=torch.float64)
secont condition:: tensor(2.8829e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2364e-10, dtype=torch.float64)
secont condition:: tensor(1.2364e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6231e-10, dtype=torch.float64)
secont condition:: tensor(1.6231e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2990e-11, dtype=torch.float64)
secont condition:: tensor(5.2990e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7717e-11, dtype=torch.float64)
secont condition:: tensor(8.7717e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9985e-11, dtype=torch.float64)
secont condition:: tensor(8.9985e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8183e-11, dtype=torch.float64)
secont condition:: tensor(5.8183e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.3921e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.9084e-11, dtype=torch.float64)
secont condition:: tensor(4.9084e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1312e-11, dtype=torch.float64)
secont condition:: tensor(1.1312e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6293e-11, dtype=torch.float64)
secont condition:: tensor(4.6293e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0062e-09, dtype=torch.float64)
secont condition:: tensor(1.0062e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8656e-10, dtype=torch.float64)
secont condition:: tensor(5.8656e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1682e-10, dtype=torch.float64)
secont condition:: tensor(4.1682e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9267e-10, dtype=torch.float64)
secont condition:: tensor(3.9267e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6781e-10, dtype=torch.float64)
secont condition:: tensor(3.6781e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0560e-10, dtype=torch.float64)
secont condition:: tensor(1.0560e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9843e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6882e-10, dtype=torch.float64)
secont condition:: tensor(2.6882e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1834e-10, dtype=torch.float64)
secont condition:: tensor(2.1834e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2246e-10, dtype=torch.float64)
secont condition:: tensor(1.2246e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7733e-10, dtype=torch.float64)
secont condition:: tensor(1.7733e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1826e-09, dtype=torch.float64)
secont condition:: tensor(1.1826e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.5859e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3205e-10, dtype=torch.float64)
secont condition:: tensor(8.3205e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4246e-10, dtype=torch.float64)
secont condition:: tensor(7.4246e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5430e-10, dtype=torch.float64)
secont condition:: tensor(7.5430e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6641e-10, dtype=torch.float64)
secont condition:: tensor(5.6641e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7631e-10, dtype=torch.float64)
secont condition:: tensor(5.7631e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1426e-10, dtype=torch.float64)
secont condition:: tensor(4.1426e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5953e-10, dtype=torch.float64)
secont condition:: tensor(2.5953e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.9140e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3083e-10, dtype=torch.float64)
secont condition:: tensor(3.3083e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1164e-09, dtype=torch.float64)
secont condition:: tensor(1.1164e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8515e-10, dtype=torch.float64)
secont condition:: tensor(4.8515e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1752e-09, dtype=torch.float64)
secont condition:: tensor(1.1752e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4069e-10, dtype=torch.float64)
secont condition:: tensor(9.4069e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4676e-10, dtype=torch.float64)
secont condition:: tensor(8.4676e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6530e-09, dtype=torch.float64)
secont condition:: tensor(1.6530e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7200e-10, dtype=torch.float64)
secont condition:: tensor(5.7200e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2307e-10, dtype=torch.float64)
secont condition:: tensor(8.2307e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4746e-10, dtype=torch.float64)
secont condition:: tensor(2.4746e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2877e-09, dtype=torch.float64)
secont condition:: tensor(1.2877e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1419e-09, dtype=torch.float64)
secont condition:: tensor(1.1419e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4100e-09, dtype=torch.float64)
secont condition:: tensor(1.4100e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1614e-09, dtype=torch.float64)
secont condition:: tensor(1.1614e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2538e-10, dtype=torch.float64)
secont condition:: tensor(1.2538e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.1477e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6609e-09, dtype=torch.float64)
secont condition:: tensor(1.6609e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4143e-09, dtype=torch.float64)
secont condition:: tensor(1.4143e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1485e-09, dtype=torch.float64)
secont condition:: tensor(8.1485e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0387e-09, dtype=torch.float64)
secont condition:: tensor(1.0387e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.0355067253112793
curr_diff: 0 tensor(8.5781e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3742e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2009e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.2942e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.6294e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5505e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4214e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247597
Train - Epoch 0, Batch: 10, Loss: 0.215488
Test Avg. Loss: 0.000061, Accuracy: 0.944600
Train - Epoch 1, Batch: 0, Loss: 0.216753
Train - Epoch 1, Batch: 10, Loss: 0.210806
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.224978
Train - Epoch 2, Batch: 10, Loss: 0.216269
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 3, Batch: 0, Loss: 0.221155
Train - Epoch 3, Batch: 10, Loss: 0.213844
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.214921
Train - Epoch 4, Batch: 10, Loss: 0.224969
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.210376
Train - Epoch 5, Batch: 10, Loss: 0.228343
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 6, Batch: 0, Loss: 0.222453
Train - Epoch 6, Batch: 10, Loss: 0.209620
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 7, Batch: 0, Loss: 0.221525
Train - Epoch 7, Batch: 10, Loss: 0.230243
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 7.192546844482422
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.6733057498931885
time_baseline:: 4.690716743469238
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6012e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4134e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0114e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7070e-33, dtype=torch.float64)
secont condition:: tensor(6.7070e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2396e-32, dtype=torch.float64)
secont condition:: tensor(1.2396e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9548e-32, dtype=torch.float64)
secont condition:: tensor(2.9548e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.7193e-32, dtype=torch.float64)
secont condition:: tensor(5.7193e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.8150e-32, dtype=torch.float64)
secont condition:: tensor(7.8150e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.0232e-32, dtype=torch.float64)
secont condition:: tensor(9.0232e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1591e-31, dtype=torch.float64)
secont condition:: tensor(1.1591e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7010e-31, dtype=torch.float64)
secont condition:: tensor(1.7010e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0609e-31, dtype=torch.float64)
secont condition:: tensor(2.0609e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.7605e-10, dtype=torch.float64)
secont condition:: tensor(3.7605e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7612e-10, dtype=torch.float64)
secont condition:: tensor(3.7612e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4063e-10, dtype=torch.float64)
secont condition:: tensor(4.4063e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5985e-10, dtype=torch.float64)
secont condition:: tensor(2.5985e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8570e-10, dtype=torch.float64)
secont condition:: tensor(2.8570e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0675e-10, dtype=torch.float64)
secont condition:: tensor(2.0675e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4141e-10, dtype=torch.float64)
secont condition:: tensor(1.4141e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2696e-10, dtype=torch.float64)
secont condition:: tensor(2.2696e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6142e-10, dtype=torch.float64)
secont condition:: tensor(1.6142e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4808e-10, dtype=torch.float64)
secont condition:: tensor(1.4808e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3427e-11, dtype=torch.float64)
secont condition:: tensor(8.3427e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9598e-11, dtype=torch.float64)
secont condition:: tensor(7.9598e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1227e-10, dtype=torch.float64)
secont condition:: tensor(8.1227e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6085e-10, dtype=torch.float64)
secont condition:: tensor(6.6085e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8936e-10, dtype=torch.float64)
secont condition:: tensor(5.8936e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1711e-10, dtype=torch.float64)
secont condition:: tensor(5.1711e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3685e-10, dtype=torch.float64)
secont condition:: tensor(9.3685e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3486e-10, dtype=torch.float64)
secont condition:: tensor(3.3486e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4550e-10, dtype=torch.float64)
secont condition:: tensor(4.4550e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6572e-10, dtype=torch.float64)
secont condition:: tensor(3.6572e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5336e-10, dtype=torch.float64)
secont condition:: tensor(2.5336e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5734e-10, dtype=torch.float64)
secont condition:: tensor(3.5734e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8467e-10, dtype=torch.float64)
secont condition:: tensor(1.8467e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1183e-09, dtype=torch.float64)
secont condition:: tensor(1.1183e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7532e-10, dtype=torch.float64)
secont condition:: tensor(9.7532e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3192e-10, dtype=torch.float64)
secont condition:: tensor(9.3192e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5754e-10, dtype=torch.float64)
secont condition:: tensor(6.5754e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1821e-10, dtype=torch.float64)
secont condition:: tensor(7.1821e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8469e-10, dtype=torch.float64)
secont condition:: tensor(5.8469e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6296e-10, dtype=torch.float64)
secont condition:: tensor(8.6296e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4652e-10, dtype=torch.float64)
secont condition:: tensor(2.4652e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3742e-10, dtype=torch.float64)
secont condition:: tensor(2.3742e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1451e-10, dtype=torch.float64)
secont condition:: tensor(2.1451e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3098e-11, dtype=torch.float64)
secont condition:: tensor(6.3098e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0024e-10, dtype=torch.float64)
secont condition:: tensor(3.0024e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5930e-10, dtype=torch.float64)
secont condition:: tensor(7.5930e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1186e-10, dtype=torch.float64)
secont condition:: tensor(5.1186e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2489e-10, dtype=torch.float64)
secont condition:: tensor(4.2489e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0697e-09, dtype=torch.float64)
secont condition:: tensor(1.0697e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2170e-09, dtype=torch.float64)
secont condition:: tensor(1.2170e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1528e-09, dtype=torch.float64)
secont condition:: tensor(1.1528e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0570e-10, dtype=torch.float64)
secont condition:: tensor(4.0570e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2227e-09, dtype=torch.float64)
secont condition:: tensor(1.2227e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0253e-09, dtype=torch.float64)
secont condition:: tensor(1.0253e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6107e-10, dtype=torch.float64)
secont condition:: tensor(5.6107e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8347e-10, dtype=torch.float64)
secont condition:: tensor(7.8347e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8471e-10, dtype=torch.float64)
secont condition:: tensor(5.8471e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0501e-09, dtype=torch.float64)
secont condition:: tensor(1.0501e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8866e-09, dtype=torch.float64)
secont condition:: tensor(1.8866e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4612e-10, dtype=torch.float64)
secont condition:: tensor(7.4612e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3602e-09, dtype=torch.float64)
secont condition:: tensor(3.3602e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4903e-09, dtype=torch.float64)
secont condition:: tensor(1.4903e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.07034969329834
curr_diff: 0 tensor(9.0000e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2700e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.8915e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1150e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.0730e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.3546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5543e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6433e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251107
Train - Epoch 0, Batch: 10, Loss: 0.206731
Test Avg. Loss: 0.000061, Accuracy: 0.944300
Train - Epoch 1, Batch: 0, Loss: 0.207960
Train - Epoch 1, Batch: 10, Loss: 0.230212
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 2, Batch: 0, Loss: 0.229908
Train - Epoch 2, Batch: 10, Loss: 0.236182
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 3, Batch: 0, Loss: 0.208446
Train - Epoch 3, Batch: 10, Loss: 0.225100
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 4, Batch: 0, Loss: 0.213827
Train - Epoch 4, Batch: 10, Loss: 0.225838
Test Avg. Loss: 0.000060, Accuracy: 0.946000
Train - Epoch 5, Batch: 0, Loss: 0.217827
Train - Epoch 5, Batch: 10, Loss: 0.217978
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 6, Batch: 0, Loss: 0.210939
Train - Epoch 6, Batch: 10, Loss: 0.227928
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.215272
Train - Epoch 7, Batch: 10, Loss: 0.211200
Test Avg. Loss: 0.000060, Accuracy: 0.946000
training_time:: 7.083424091339111
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.7847888469696045
time_baseline:: 4.802371978759766
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5237e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4304e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4140e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7875e-33, dtype=torch.float64)
secont condition:: tensor(7.7875e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.8253e-32, dtype=torch.float64)
secont condition:: tensor(1.8253e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2450e-32, dtype=torch.float64)
secont condition:: tensor(3.2450e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.6933e-32, dtype=torch.float64)
secont condition:: tensor(4.6933e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.2977e-32, dtype=torch.float64)
secont condition:: tensor(8.2977e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.9327e-32, dtype=torch.float64)
secont condition:: tensor(8.9327e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.2040e-31, dtype=torch.float64)
secont condition:: tensor(1.2040e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5920e-31, dtype=torch.float64)
secont condition:: tensor(1.5920e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0265e-31, dtype=torch.float64)
secont condition:: tensor(2.0265e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4252e-31, dtype=torch.float64)
secont condition:: tensor(2.4252e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.7622e-31, dtype=torch.float64)
secont condition:: tensor(2.7622e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.4873e-10, dtype=torch.float64)
secont condition:: tensor(4.4873e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9702e-10, dtype=torch.float64)
secont condition:: tensor(3.9702e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4072e-10, dtype=torch.float64)
secont condition:: tensor(3.4072e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7502e-10, dtype=torch.float64)
secont condition:: tensor(2.7502e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4707e-10, dtype=torch.float64)
secont condition:: tensor(2.4707e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6620e-10, dtype=torch.float64)
secont condition:: tensor(1.6620e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6250e-10, dtype=torch.float64)
secont condition:: tensor(1.6250e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5064e-10, dtype=torch.float64)
secont condition:: tensor(1.5064e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0881e-10, dtype=torch.float64)
secont condition:: tensor(1.0881e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1603e-10, dtype=torch.float64)
secont condition:: tensor(1.1603e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8870e-11, dtype=torch.float64)
secont condition:: tensor(8.8870e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.2238e-11, dtype=torch.float64)
secont condition:: tensor(8.2238e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1958e-10, dtype=torch.float64)
secont condition:: tensor(2.1958e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3471e-10, dtype=torch.float64)
secont condition:: tensor(8.3471e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9451e-10, dtype=torch.float64)
secont condition:: tensor(7.9451e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2900e-10, dtype=torch.float64)
secont condition:: tensor(5.2900e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6169e-10, dtype=torch.float64)
secont condition:: tensor(4.6169e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6691e-10, dtype=torch.float64)
secont condition:: tensor(4.6691e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3082e-10, dtype=torch.float64)
secont condition:: tensor(3.3082e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3188e-10, dtype=torch.float64)
secont condition:: tensor(4.3188e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4166e-10, dtype=torch.float64)
secont condition:: tensor(3.4166e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1793e-10, dtype=torch.float64)
secont condition:: tensor(2.1793e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4172e-10, dtype=torch.float64)
secont condition:: tensor(7.4172e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4556e-10, dtype=torch.float64)
secont condition:: tensor(2.4556e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3360e-10, dtype=torch.float64)
secont condition:: tensor(3.3360e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4560e-10, dtype=torch.float64)
secont condition:: tensor(1.4560e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5566e-10, dtype=torch.float64)
secont condition:: tensor(7.5566e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2656e-10, dtype=torch.float64)
secont condition:: tensor(8.2656e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1430e-10, dtype=torch.float64)
secont condition:: tensor(5.1430e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4901e-10, dtype=torch.float64)
secont condition:: tensor(4.4901e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8951e-10, dtype=torch.float64)
secont condition:: tensor(2.8951e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4594e-10, dtype=torch.float64)
secont condition:: tensor(8.4594e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8133e-10, dtype=torch.float64)
secont condition:: tensor(6.8133e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0629e-09, dtype=torch.float64)
secont condition:: tensor(1.0629e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6156e-10, dtype=torch.float64)
secont condition:: tensor(2.6156e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3637e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2741e-10, dtype=torch.float64)
secont condition:: tensor(3.2741e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1665e-09, dtype=torch.float64)
secont condition:: tensor(1.1665e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6284e-09, dtype=torch.float64)
secont condition:: tensor(3.6284e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0665e-09, dtype=torch.float64)
secont condition:: tensor(1.0665e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3541e-10, dtype=torch.float64)
secont condition:: tensor(9.3541e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2050e-09, dtype=torch.float64)
secont condition:: tensor(1.2050e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0681e-10, dtype=torch.float64)
secont condition:: tensor(8.0681e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3704e-10, dtype=torch.float64)
secont condition:: tensor(8.3704e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4235e-09, dtype=torch.float64)
secont condition:: tensor(1.4235e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1484e-09, dtype=torch.float64)
secont condition:: tensor(1.1484e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0824e-09, dtype=torch.float64)
secont condition:: tensor(1.0824e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7602e-10, dtype=torch.float64)
secont condition:: tensor(7.7602e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1819e-09, dtype=torch.float64)
secont condition:: tensor(1.1819e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4708e-09, dtype=torch.float64)
secont condition:: tensor(2.4708e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5361e-09, dtype=torch.float64)
secont condition:: tensor(1.5361e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.0638716220855713
curr_diff: 0 tensor(5.1635e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.5033e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7878e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1395e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2152e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5685e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7270e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0132e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.261243
Train - Epoch 0, Batch: 10, Loss: 0.222082
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.232435
Train - Epoch 1, Batch: 10, Loss: 0.226645
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.214420
Train - Epoch 2, Batch: 10, Loss: 0.231442
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 3, Batch: 0, Loss: 0.230644
Train - Epoch 3, Batch: 10, Loss: 0.201376
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.216830
Train - Epoch 4, Batch: 10, Loss: 0.189932
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.221355
Train - Epoch 5, Batch: 10, Loss: 0.217064
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 6, Batch: 0, Loss: 0.216332
Train - Epoch 6, Batch: 10, Loss: 0.222048
Test Avg. Loss: 0.000060, Accuracy: 0.946000
Train - Epoch 7, Batch: 0, Loss: 0.215534
Train - Epoch 7, Batch: 10, Loss: 0.219988
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.364776372909546
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.794324636459351
time_baseline:: 4.812190055847168
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4155e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7467e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0276e-33, dtype=torch.float64)
secont condition:: tensor(8.0276e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6360e-32, dtype=torch.float64)
secont condition:: tensor(1.6360e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2968e-32, dtype=torch.float64)
secont condition:: tensor(3.2968e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9501e-32, dtype=torch.float64)
secont condition:: tensor(4.9501e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.9481e-32, dtype=torch.float64)
secont condition:: tensor(5.9481e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1063e-31, dtype=torch.float64)
secont condition:: tensor(1.1063e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2529e-31, dtype=torch.float64)
secont condition:: tensor(1.2529e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.0090e-10, dtype=torch.float64)
secont condition:: tensor(5.0090e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8693e-10, dtype=torch.float64)
secont condition:: tensor(3.8693e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3247e-10, dtype=torch.float64)
secont condition:: tensor(3.3247e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6324e-10, dtype=torch.float64)
secont condition:: tensor(2.6324e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4929e-10, dtype=torch.float64)
secont condition:: tensor(2.4929e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1933e-10, dtype=torch.float64)
secont condition:: tensor(2.1933e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5744e-10, dtype=torch.float64)
secont condition:: tensor(1.5744e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6741e-10, dtype=torch.float64)
secont condition:: tensor(1.6741e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3630e-10, dtype=torch.float64)
secont condition:: tensor(1.3630e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2024e-10, dtype=torch.float64)
secont condition:: tensor(1.2024e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1976e-11, dtype=torch.float64)
secont condition:: tensor(6.1976e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0711e-11, dtype=torch.float64)
secont condition:: tensor(6.0711e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3961e-11, dtype=torch.float64)
secont condition:: tensor(9.3961e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7272e-11, dtype=torch.float64)
secont condition:: tensor(7.7272e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7044e-11, dtype=torch.float64)
secont condition:: tensor(7.7044e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3669e-11, dtype=torch.float64)
secont condition:: tensor(6.3669e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5046e-11, dtype=torch.float64)
secont condition:: tensor(4.5046e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5308e-11, dtype=torch.float64)
secont condition:: tensor(5.5308e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9370e-11, dtype=torch.float64)
secont condition:: tensor(3.9370e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3611e-10, dtype=torch.float64)
secont condition:: tensor(6.3611e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3448e-10, dtype=torch.float64)
secont condition:: tensor(3.3448e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9732e-10, dtype=torch.float64)
secont condition:: tensor(4.9732e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6006e-10, dtype=torch.float64)
secont condition:: tensor(4.6006e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0259e-10, dtype=torch.float64)
secont condition:: tensor(4.0259e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0793e-10, dtype=torch.float64)
secont condition:: tensor(3.0793e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9172e-10, dtype=torch.float64)
secont condition:: tensor(2.9172e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3731e-10, dtype=torch.float64)
secont condition:: tensor(2.3731e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0777e-10, dtype=torch.float64)
secont condition:: tensor(2.0777e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3863e-11, dtype=torch.float64)
secont condition:: tensor(7.3863e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7541e-10, dtype=torch.float64)
secont condition:: tensor(1.7541e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0710e-10, dtype=torch.float64)
secont condition:: tensor(1.0710e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3442e-10, dtype=torch.float64)
secont condition:: tensor(1.3442e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0350e-10, dtype=torch.float64)
secont condition:: tensor(1.0350e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7899e-10, dtype=torch.float64)
secont condition:: tensor(7.7899e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0722e-10, dtype=torch.float64)
secont condition:: tensor(5.0722e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2312e-09, dtype=torch.float64)
secont condition:: tensor(1.2312e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9934e-10, dtype=torch.float64)
secont condition:: tensor(6.9934e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7098e-10, dtype=torch.float64)
secont condition:: tensor(3.7098e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4033e-10, dtype=torch.float64)
secont condition:: tensor(5.4033e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6986e-10, dtype=torch.float64)
secont condition:: tensor(5.6986e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0036e-09, dtype=torch.float64)
secont condition:: tensor(1.0036e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1827e-09, dtype=torch.float64)
secont condition:: tensor(1.1827e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1435e-09, dtype=torch.float64)
secont condition:: tensor(1.1435e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4520e-09, dtype=torch.float64)
secont condition:: tensor(1.4520e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2557e-09, dtype=torch.float64)
secont condition:: tensor(1.2557e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0655e-09, dtype=torch.float64)
secont condition:: tensor(1.0655e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2594e-09, dtype=torch.float64)
secont condition:: tensor(1.2594e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8605e-10, dtype=torch.float64)
secont condition:: tensor(5.8605e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8275e-09, dtype=torch.float64)
secont condition:: tensor(1.8275e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5441e-10, dtype=torch.float64)
secont condition:: tensor(9.5441e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6939e-09, dtype=torch.float64)
secont condition:: tensor(1.6939e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0874e-09, dtype=torch.float64)
secont condition:: tensor(1.0874e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9855e-10, dtype=torch.float64)
secont condition:: tensor(8.9855e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.08101749420166
curr_diff: 0 tensor(6.0721e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4122e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6074e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8882e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.1236e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6170e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5179e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0246e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235671
Train - Epoch 0, Batch: 10, Loss: 0.233654
Train - Epoch 0, Batch: 20, Loss: 0.220028
Train - Epoch 0, Batch: 30, Loss: 0.246828
Train - Epoch 0, Batch: 40, Loss: 0.196385
Train - Epoch 0, Batch: 50, Loss: 0.216453
Test Avg. Loss: 0.000211, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.235951
Train - Epoch 1, Batch: 10, Loss: 0.186992
Train - Epoch 1, Batch: 20, Loss: 0.231381
Train - Epoch 1, Batch: 30, Loss: 0.216749
Train - Epoch 1, Batch: 40, Loss: 0.236184
Train - Epoch 1, Batch: 50, Loss: 0.174000
Test Avg. Loss: 0.000210, Accuracy: 0.945700
training_time:: 2.2967066764831543
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3708276748657227
time_baseline:: 1.3755359649658203
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8830e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1893e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9233e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3327e-33, dtype=torch.float64)
secont condition:: tensor(7.3327e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6828e-32, dtype=torch.float64)
secont condition:: tensor(1.6828e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5937e-32, dtype=torch.float64)
secont condition:: tensor(2.5937e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.9863e-32, dtype=torch.float64)
secont condition:: tensor(6.9863e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.3466e-32, dtype=torch.float64)
secont condition:: tensor(7.3466e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.9317e-32, dtype=torch.float64)
secont condition:: tensor(8.9317e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.6440e-31, dtype=torch.float64)
secont condition:: tensor(1.6440e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6219e-31, dtype=torch.float64)
secont condition:: tensor(1.6219e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0123e-31, dtype=torch.float64)
secont condition:: tensor(2.0123e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4405e-31, dtype=torch.float64)
secont condition:: tensor(2.4405e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.5690e-31, dtype=torch.float64)
secont condition:: tensor(3.5690e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.1330e-31, dtype=torch.float64)
secont condition:: tensor(3.1330e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.9567e-31, dtype=torch.float64)
secont condition:: tensor(3.9567e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.6031e-31, dtype=torch.float64)
secont condition:: tensor(4.6031e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.2270e-31, dtype=torch.float64)
secont condition:: tensor(5.2270e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.9496e-31, dtype=torch.float64)
secont condition:: tensor(5.9496e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.1313e-31, dtype=torch.float64)
secont condition:: tensor(7.1313e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.6325e-31, dtype=torch.float64)
secont condition:: tensor(7.6325e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.0304e-31, dtype=torch.float64)
secont condition:: tensor(7.0304e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.9222e-31, dtype=torch.float64)
secont condition:: tensor(8.9222e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0422e-30, dtype=torch.float64)
secont condition:: tensor(1.0422e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.0569e-30, dtype=torch.float64)
secont condition:: tensor(1.0569e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.0920e-30, dtype=torch.float64)
secont condition:: tensor(1.0920e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.5077e-30, dtype=torch.float64)
secont condition:: tensor(1.5077e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3376e-30, dtype=torch.float64)
secont condition:: tensor(1.3376e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.2472e-30, dtype=torch.float64)
secont condition:: tensor(1.2472e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.6841e-30, dtype=torch.float64)
secont condition:: tensor(1.6841e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.6991e-30, dtype=torch.float64)
secont condition:: tensor(1.6991e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.8801e-30, dtype=torch.float64)
secont condition:: tensor(1.8801e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.9104e-30, dtype=torch.float64)
secont condition:: tensor(1.9104e-30, dtype=torch.float64)
curr_secont condition:: tensor(7.0993e-09, dtype=torch.float64)
secont condition:: tensor(7.0993e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5942e-09, dtype=torch.float64)
secont condition:: tensor(7.5942e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5751e-09, dtype=torch.float64)
secont condition:: tensor(3.5751e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0506e-09, dtype=torch.float64)
secont condition:: tensor(4.0506e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2843e-09, dtype=torch.float64)
secont condition:: tensor(3.2843e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7022e-09, dtype=torch.float64)
secont condition:: tensor(4.7022e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5347e-09, dtype=torch.float64)
secont condition:: tensor(2.5347e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0228e-09, dtype=torch.float64)
secont condition:: tensor(2.0228e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5553e-09, dtype=torch.float64)
secont condition:: tensor(1.5553e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2848e-09, dtype=torch.float64)
secont condition:: tensor(5.2848e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7597e-10, dtype=torch.float64)
secont condition:: tensor(8.7597e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3556e-10, dtype=torch.float64)
secont condition:: tensor(9.3556e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6935e-10, dtype=torch.float64)
secont condition:: tensor(3.6935e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8812e-10, dtype=torch.float64)
secont condition:: tensor(4.8812e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1436e-10, dtype=torch.float64)
secont condition:: tensor(2.1436e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6757e-10, dtype=torch.float64)
secont condition:: tensor(2.6757e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4811e-10, dtype=torch.float64)
secont condition:: tensor(2.4811e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6256e-10, dtype=torch.float64)
secont condition:: tensor(1.6256e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4197e-10, dtype=torch.float64)
secont condition:: tensor(4.4197e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3334e-10, dtype=torch.float64)
secont condition:: tensor(8.3334e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2497e-09, dtype=torch.float64)
secont condition:: tensor(6.2497e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5667e-09, dtype=torch.float64)
secont condition:: tensor(1.5667e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5200e-09, dtype=torch.float64)
secont condition:: tensor(2.5200e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8244e-09, dtype=torch.float64)
secont condition:: tensor(1.8244e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0036e-09, dtype=torch.float64)
secont condition:: tensor(1.0036e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6407e-10, dtype=torch.float64)
secont condition:: tensor(8.6407e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4460e-09, dtype=torch.float64)
secont condition:: tensor(1.4460e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.9417e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1718e-09, dtype=torch.float64)
secont condition:: tensor(1.1718e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7374e-09, dtype=torch.float64)
secont condition:: tensor(1.7374e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7257e-10, dtype=torch.float64)
secont condition:: tensor(6.7257e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5776e-09, dtype=torch.float64)
secont condition:: tensor(2.5776e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4526e-09, dtype=torch.float64)
secont condition:: tensor(1.4526e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.3064329624176025
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8060e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.3784e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2151e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2875e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6927e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247815
Train - Epoch 0, Batch: 10, Loss: 0.226218
Train - Epoch 0, Batch: 20, Loss: 0.201865
Train - Epoch 0, Batch: 30, Loss: 0.247277
Train - Epoch 0, Batch: 40, Loss: 0.223863
Train - Epoch 0, Batch: 50, Loss: 0.198967
Test Avg. Loss: 0.000211, Accuracy: 0.945100
Train - Epoch 1, Batch: 0, Loss: 0.210659
Train - Epoch 1, Batch: 10, Loss: 0.181474
Train - Epoch 1, Batch: 20, Loss: 0.218592
Train - Epoch 1, Batch: 30, Loss: 0.232627
Train - Epoch 1, Batch: 40, Loss: 0.218992
Train - Epoch 1, Batch: 50, Loss: 0.227586
Test Avg. Loss: 0.000210, Accuracy: 0.946200
training_time:: 2.1712732315063477
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3594844341278076
time_baseline:: 1.3641936779022217
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5143e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1170e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946200
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0772e-33, dtype=torch.float64)
secont condition:: tensor(3.0772e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7611e-32, dtype=torch.float64)
secont condition:: tensor(1.7611e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.0117e-32, dtype=torch.float64)
secont condition:: tensor(5.0117e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8580e-32, dtype=torch.float64)
secont condition:: tensor(4.8580e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4096e-32, dtype=torch.float64)
secont condition:: tensor(5.4096e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1173e-31, dtype=torch.float64)
secont condition:: tensor(1.1173e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0964e-31, dtype=torch.float64)
secont condition:: tensor(1.0964e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5924e-31, dtype=torch.float64)
secont condition:: tensor(1.5924e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.5044e-31, dtype=torch.float64)
secont condition:: tensor(2.5044e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.8512e-31, dtype=torch.float64)
secont condition:: tensor(2.8512e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.1178e-31, dtype=torch.float64)
secont condition:: tensor(3.1178e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.5921e-31, dtype=torch.float64)
secont condition:: tensor(3.5921e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.9194e-31, dtype=torch.float64)
secont condition:: tensor(3.9194e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.2480e-31, dtype=torch.float64)
secont condition:: tensor(5.2480e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.1551e-31, dtype=torch.float64)
secont condition:: tensor(5.1551e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.9726e-31, dtype=torch.float64)
secont condition:: tensor(5.9726e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.4991e-31, dtype=torch.float64)
secont condition:: tensor(6.4991e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.0181e-31, dtype=torch.float64)
secont condition:: tensor(8.0181e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.6354e-31, dtype=torch.float64)
secont condition:: tensor(7.6354e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.5117e-31, dtype=torch.float64)
secont condition:: tensor(7.5117e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.6638e-31, dtype=torch.float64)
secont condition:: tensor(9.6638e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.1037e-31, dtype=torch.float64)
secont condition:: tensor(9.1037e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.4990e-31, dtype=torch.float64)
secont condition:: tensor(9.4990e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1577e-30, dtype=torch.float64)
secont condition:: tensor(1.1577e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.2478e-30, dtype=torch.float64)
secont condition:: tensor(1.2478e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3316e-30, dtype=torch.float64)
secont condition:: tensor(1.3316e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3189e-30, dtype=torch.float64)
secont condition:: tensor(1.3189e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3768e-30, dtype=torch.float64)
secont condition:: tensor(1.3768e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7205e-30, dtype=torch.float64)
secont condition:: tensor(1.7205e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7862e-30, dtype=torch.float64)
secont condition:: tensor(1.7862e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.9182e-30, dtype=torch.float64)
secont condition:: tensor(1.9182e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.0901e-30, dtype=torch.float64)
secont condition:: tensor(2.0901e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.1912e-30, dtype=torch.float64)
secont condition:: tensor(2.1912e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.4113e-30, dtype=torch.float64)
secont condition:: tensor(2.4113e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.5072e-30, dtype=torch.float64)
secont condition:: tensor(2.5072e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.5937e-30, dtype=torch.float64)
secont condition:: tensor(2.5937e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.5182e-30, dtype=torch.float64)
secont condition:: tensor(2.5182e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.6771e-30, dtype=torch.float64)
secont condition:: tensor(2.6771e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.7889e-30, dtype=torch.float64)
secont condition:: tensor(2.7889e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.8313e-30, dtype=torch.float64)
secont condition:: tensor(2.8313e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.9178e-30, dtype=torch.float64)
secont condition:: tensor(2.9178e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.1381e-30, dtype=torch.float64)
secont condition:: tensor(3.1381e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.0786e-30, dtype=torch.float64)
secont condition:: tensor(3.0786e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.6681e-30, dtype=torch.float64)
secont condition:: tensor(3.6681e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.4853e-30, dtype=torch.float64)
secont condition:: tensor(3.4853e-30, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8120e-08, dtype=torch.float64)
secont condition:: tensor(1.8120e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1143e-09, dtype=torch.float64)
secont condition:: tensor(5.1143e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8771e-09, dtype=torch.float64)
secont condition:: tensor(2.8771e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4819e-09, dtype=torch.float64)
secont condition:: tensor(2.4819e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1321e-09, dtype=torch.float64)
secont condition:: tensor(2.1321e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3985e-09, dtype=torch.float64)
secont condition:: tensor(4.3985e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7778e-10, dtype=torch.float64)
secont condition:: tensor(7.7778e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8380e-09, dtype=torch.float64)
secont condition:: tensor(1.8380e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7458e-10, dtype=torch.float64)
secont condition:: tensor(1.7458e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7155e-09, dtype=torch.float64)
secont condition:: tensor(5.7155e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3598e-09, dtype=torch.float64)
secont condition:: tensor(5.3598e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6101e-10, dtype=torch.float64)
secont condition:: tensor(6.6101e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2737e-09, dtype=torch.float64)
secont condition:: tensor(3.2737e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9848e-08, dtype=torch.float64)
secont condition:: tensor(1.9848e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2187e-09, dtype=torch.float64)
secont condition:: tensor(5.2187e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.477468490600586
curr_diff: 0 tensor(8.7498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.1947e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0846e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.8318e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1803e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255287
Train - Epoch 0, Batch: 10, Loss: 0.220331
Train - Epoch 0, Batch: 20, Loss: 0.219348
Train - Epoch 0, Batch: 30, Loss: 0.221144
Train - Epoch 0, Batch: 40, Loss: 0.253010
Train - Epoch 0, Batch: 50, Loss: 0.214386
Test Avg. Loss: 0.000210, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.209567
Train - Epoch 1, Batch: 10, Loss: 0.217593
Train - Epoch 1, Batch: 20, Loss: 0.251548
Train - Epoch 1, Batch: 30, Loss: 0.192832
Train - Epoch 1, Batch: 40, Loss: 0.191808
Train - Epoch 1, Batch: 50, Loss: 0.211793
Test Avg. Loss: 0.000210, Accuracy: 0.945700
training_time:: 2.196180820465088
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.380357265472412
time_baseline:: 1.3851943016052246
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1323e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4424e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5946e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8894e-33, dtype=torch.float64)
secont condition:: tensor(9.8894e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.2804e-32, dtype=torch.float64)
secont condition:: tensor(2.2804e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.3987e-32, dtype=torch.float64)
secont condition:: tensor(3.3987e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.5137e-32, dtype=torch.float64)
secont condition:: tensor(6.5137e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.0956e-32, dtype=torch.float64)
secont condition:: tensor(7.0956e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.7467e-32, dtype=torch.float64)
secont condition:: tensor(9.7467e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.2145e-31, dtype=torch.float64)
secont condition:: tensor(1.2145e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5617e-31, dtype=torch.float64)
secont condition:: tensor(1.5617e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.1220e-31, dtype=torch.float64)
secont condition:: tensor(2.1220e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.8590e-31, dtype=torch.float64)
secont condition:: tensor(2.8590e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.8051e-31, dtype=torch.float64)
secont condition:: tensor(2.8051e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.9952e-31, dtype=torch.float64)
secont condition:: tensor(2.9952e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.6659e-31, dtype=torch.float64)
secont condition:: tensor(3.6659e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.3071e-31, dtype=torch.float64)
secont condition:: tensor(4.3071e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.1839e-31, dtype=torch.float64)
secont condition:: tensor(4.1839e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.9468e-31, dtype=torch.float64)
secont condition:: tensor(4.9468e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.5976e-31, dtype=torch.float64)
secont condition:: tensor(6.5976e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.5074e-31, dtype=torch.float64)
secont condition:: tensor(5.5074e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.3113e-31, dtype=torch.float64)
secont condition:: tensor(7.3113e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.7353e-31, dtype=torch.float64)
secont condition:: tensor(8.7353e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0552e-30, dtype=torch.float64)
secont condition:: tensor(1.0552e-30, dtype=torch.float64)
curr_secont condition:: tensor(8.7494e-31, dtype=torch.float64)
secont condition:: tensor(8.7494e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1988e-30, dtype=torch.float64)
secont condition:: tensor(1.1988e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.1466e-30, dtype=torch.float64)
secont condition:: tensor(1.1466e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.0779e-30, dtype=torch.float64)
secont condition:: tensor(1.0779e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3584e-30, dtype=torch.float64)
secont condition:: tensor(1.3584e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.4627e-30, dtype=torch.float64)
secont condition:: tensor(1.4627e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7203e-30, dtype=torch.float64)
secont condition:: tensor(1.7203e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7727e-30, dtype=torch.float64)
secont condition:: tensor(1.7727e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.9378e-30, dtype=torch.float64)
secont condition:: tensor(1.9378e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.8221e-30, dtype=torch.float64)
secont condition:: tensor(1.8221e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.8967e-30, dtype=torch.float64)
secont condition:: tensor(1.8967e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7888e-30, dtype=torch.float64)
secont condition:: tensor(1.7888e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.1992e-30, dtype=torch.float64)
secont condition:: tensor(2.1992e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.3960e-30, dtype=torch.float64)
secont condition:: tensor(2.3960e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.7606e-30, dtype=torch.float64)
secont condition:: tensor(2.7606e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.5507e-30, dtype=torch.float64)
secont condition:: tensor(2.5507e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.8406e-30, dtype=torch.float64)
secont condition:: tensor(2.8406e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.9079e-30, dtype=torch.float64)
secont condition:: tensor(2.9079e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.8231e-30, dtype=torch.float64)
secont condition:: tensor(2.8231e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.2476e-30, dtype=torch.float64)
secont condition:: tensor(3.2476e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.2544e-30, dtype=torch.float64)
secont condition:: tensor(3.2544e-30, dtype=torch.float64)
curr_secont condition:: tensor(5.1771e-09, dtype=torch.float64)
secont condition:: tensor(5.1771e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2976e-09, dtype=torch.float64)
secont condition:: tensor(4.2976e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3294e-09, dtype=torch.float64)
secont condition:: tensor(2.3294e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5991e-09, dtype=torch.float64)
secont condition:: tensor(1.5991e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8033e-09, dtype=torch.float64)
secont condition:: tensor(1.8033e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0158e-10, dtype=torch.float64)
secont condition:: tensor(6.0158e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0287e-09, dtype=torch.float64)
secont condition:: tensor(1.0287e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9617e-10, dtype=torch.float64)
secont condition:: tensor(4.9617e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4800e-10, dtype=torch.float64)
secont condition:: tensor(2.4800e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9652e-09, dtype=torch.float64)
secont condition:: tensor(7.9652e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6054e-09, dtype=torch.float64)
secont condition:: tensor(5.6054e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5167e-09, dtype=torch.float64)
secont condition:: tensor(2.5167e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9577e-09, dtype=torch.float64)
secont condition:: tensor(2.9577e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6387e-09, dtype=torch.float64)
secont condition:: tensor(1.6387e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4942e-09, dtype=torch.float64)
secont condition:: tensor(1.4942e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4243e-09, dtype=torch.float64)
secont condition:: tensor(1.4243e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3619e-10, dtype=torch.float64)
secont condition:: tensor(9.3619e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0459e-10, dtype=torch.float64)
secont condition:: tensor(7.0459e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2630e-08, dtype=torch.float64)
secont condition:: tensor(1.2630e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.2970924377441406
curr_diff: 0 tensor(8.9925e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2980e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2672e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9071e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.0409e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1881e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6081e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7448e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.290976
Train - Epoch 0, Batch: 10, Loss: 0.232699
Train - Epoch 0, Batch: 20, Loss: 0.239820
Train - Epoch 0, Batch: 30, Loss: 0.212348
Train - Epoch 0, Batch: 40, Loss: 0.222031
Train - Epoch 0, Batch: 50, Loss: 0.221041
Test Avg. Loss: 0.000210, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.240231
Train - Epoch 1, Batch: 10, Loss: 0.210026
Train - Epoch 1, Batch: 20, Loss: 0.235558
Train - Epoch 1, Batch: 30, Loss: 0.210170
Train - Epoch 1, Batch: 40, Loss: 0.207336
Train - Epoch 1, Batch: 50, Loss: 0.210502
Test Avg. Loss: 0.000210, Accuracy: 0.945900
training_time:: 2.1713404655456543
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3754241466522217
time_baseline:: 1.3801977634429932
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1923e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2180e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2982e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5681e-33, dtype=torch.float64)
secont condition:: tensor(9.5681e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.9381e-32, dtype=torch.float64)
secont condition:: tensor(1.9381e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8108e-32, dtype=torch.float64)
secont condition:: tensor(3.8108e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.4376e-32, dtype=torch.float64)
secont condition:: tensor(6.4376e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.6868e-32, dtype=torch.float64)
secont condition:: tensor(7.6868e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.5505e-32, dtype=torch.float64)
secont condition:: tensor(9.5505e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1383e-31, dtype=torch.float64)
secont condition:: tensor(1.1383e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7508e-31, dtype=torch.float64)
secont condition:: tensor(1.7508e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8869e-31, dtype=torch.float64)
secont condition:: tensor(1.8869e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9150e-31, dtype=torch.float64)
secont condition:: tensor(1.9150e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4553e-31, dtype=torch.float64)
secont condition:: tensor(2.4553e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.0756e-31, dtype=torch.float64)
secont condition:: tensor(3.0756e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.8111e-31, dtype=torch.float64)
secont condition:: tensor(3.8111e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.8445e-31, dtype=torch.float64)
secont condition:: tensor(3.8445e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.2177e-31, dtype=torch.float64)
secont condition:: tensor(5.2177e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.0026e-31, dtype=torch.float64)
secont condition:: tensor(5.0026e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.7229e-31, dtype=torch.float64)
secont condition:: tensor(6.7229e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.6112e-31, dtype=torch.float64)
secont condition:: tensor(7.6112e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.0469e-31, dtype=torch.float64)
secont condition:: tensor(9.0469e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.8007e-31, dtype=torch.float64)
secont condition:: tensor(8.8007e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.4232e-31, dtype=torch.float64)
secont condition:: tensor(9.4232e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.8109e-31, dtype=torch.float64)
secont condition:: tensor(9.8109e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1441e-30, dtype=torch.float64)
secont condition:: tensor(1.1441e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.1020e-30, dtype=torch.float64)
secont condition:: tensor(1.1020e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.4171e-30, dtype=torch.float64)
secont condition:: tensor(1.4171e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3832e-30, dtype=torch.float64)
secont condition:: tensor(1.3832e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.5917e-30, dtype=torch.float64)
secont condition:: tensor(1.5917e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.6145e-30, dtype=torch.float64)
secont condition:: tensor(1.6145e-30, dtype=torch.float64)
curr_secont condition:: tensor(7.0668e-09, dtype=torch.float64)
secont condition:: tensor(7.0668e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1865e-09, dtype=torch.float64)
secont condition:: tensor(6.1865e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3187e-09, dtype=torch.float64)
secont condition:: tensor(5.3187e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3581e-09, dtype=torch.float64)
secont condition:: tensor(3.3581e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2521e-09, dtype=torch.float64)
secont condition:: tensor(2.2521e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8444e-09, dtype=torch.float64)
secont condition:: tensor(2.8444e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9434e-09, dtype=torch.float64)
secont condition:: tensor(2.9434e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2298e-09, dtype=torch.float64)
secont condition:: tensor(2.2298e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3574e-09, dtype=torch.float64)
secont condition:: tensor(2.3574e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5470e-09, dtype=torch.float64)
secont condition:: tensor(1.5470e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0589e-09, dtype=torch.float64)
secont condition:: tensor(1.0589e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7773e-10, dtype=torch.float64)
secont condition:: tensor(9.7773e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5714e-10, dtype=torch.float64)
secont condition:: tensor(7.5714e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7016e-10, dtype=torch.float64)
secont condition:: tensor(5.7016e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8364e-10, dtype=torch.float64)
secont condition:: tensor(3.8364e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6322e-10, dtype=torch.float64)
secont condition:: tensor(3.6322e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7343e-10, dtype=torch.float64)
secont condition:: tensor(3.7343e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2034e-10, dtype=torch.float64)
secont condition:: tensor(2.2034e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3191e-10, dtype=torch.float64)
secont condition:: tensor(6.3191e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4600e-10, dtype=torch.float64)
secont condition:: tensor(1.4600e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4522e-10, dtype=torch.float64)
secont condition:: tensor(1.4522e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.7240e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7954e-10, dtype=torch.float64)
secont condition:: tensor(1.7954e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9860e-10, dtype=torch.float64)
secont condition:: tensor(1.9860e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3259e-10, dtype=torch.float64)
secont condition:: tensor(1.3259e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7417e-10, dtype=torch.float64)
secont condition:: tensor(8.7417e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7848e-10, dtype=torch.float64)
secont condition:: tensor(1.7848e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0677e-10, dtype=torch.float64)
secont condition:: tensor(2.0677e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4718e-09, dtype=torch.float64)
secont condition:: tensor(2.4718e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9855e-09, dtype=torch.float64)
secont condition:: tensor(4.9855e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2724e-09, dtype=torch.float64)
secont condition:: tensor(4.2724e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6278e-09, dtype=torch.float64)
secont condition:: tensor(2.6278e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5619e-09, dtype=torch.float64)
secont condition:: tensor(1.5619e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1123e-09, dtype=torch.float64)
secont condition:: tensor(1.1123e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5401e-09, dtype=torch.float64)
secont condition:: tensor(1.5401e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4157e-10, dtype=torch.float64)
secont condition:: tensor(6.4157e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3530e-10, dtype=torch.float64)
secont condition:: tensor(6.3530e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.2423903942108154
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0907e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.0424e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0138e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3235e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945500
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.296127
Train - Epoch 0, Batch: 10, Loss: 0.200329
Train - Epoch 0, Batch: 20, Loss: 0.201575
Train - Epoch 0, Batch: 30, Loss: 0.189072
Train - Epoch 0, Batch: 40, Loss: 0.209101
Train - Epoch 0, Batch: 50, Loss: 0.223907
Test Avg. Loss: 0.000211, Accuracy: 0.945900
Train - Epoch 1, Batch: 0, Loss: 0.189588
Train - Epoch 1, Batch: 10, Loss: 0.200376
Train - Epoch 1, Batch: 20, Loss: 0.208894
Train - Epoch 1, Batch: 30, Loss: 0.226735
Train - Epoch 1, Batch: 40, Loss: 0.189833
Train - Epoch 1, Batch: 50, Loss: 0.210028
Test Avg. Loss: 0.000210, Accuracy: 0.945600
training_time:: 2.1800951957702637
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.424813985824585
time_baseline:: 1.429725170135498
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5941e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5554e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4809e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3601e-33, dtype=torch.float64)
secont condition:: tensor(7.3601e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.1891e-32, dtype=torch.float64)
secont condition:: tensor(2.1891e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6426e-32, dtype=torch.float64)
secont condition:: tensor(3.6426e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3257e-32, dtype=torch.float64)
secont condition:: tensor(5.3257e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.0980e-32, dtype=torch.float64)
secont condition:: tensor(9.0980e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.5561e-32, dtype=torch.float64)
secont condition:: tensor(9.5561e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1424e-31, dtype=torch.float64)
secont condition:: tensor(1.1424e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5081e-31, dtype=torch.float64)
secont condition:: tensor(1.5081e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6873e-31, dtype=torch.float64)
secont condition:: tensor(1.6873e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8992e-31, dtype=torch.float64)
secont condition:: tensor(1.8992e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.9110e-31, dtype=torch.float64)
secont condition:: tensor(2.9110e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.4341e-31, dtype=torch.float64)
secont condition:: tensor(3.4341e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.3348e-31, dtype=torch.float64)
secont condition:: tensor(3.3348e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.8193e-31, dtype=torch.float64)
secont condition:: tensor(4.8193e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.0961e-31, dtype=torch.float64)
secont condition:: tensor(5.0961e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.5058e-31, dtype=torch.float64)
secont condition:: tensor(5.5058e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.6680e-31, dtype=torch.float64)
secont condition:: tensor(6.6680e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.1834e-31, dtype=torch.float64)
secont condition:: tensor(6.1834e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.6485e-31, dtype=torch.float64)
secont condition:: tensor(6.6485e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.6029e-31, dtype=torch.float64)
secont condition:: tensor(8.6029e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.6140e-31, dtype=torch.float64)
secont condition:: tensor(9.6140e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1383e-30, dtype=torch.float64)
secont condition:: tensor(1.1383e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.1482e-30, dtype=torch.float64)
secont condition:: tensor(1.1482e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.1067e-30, dtype=torch.float64)
secont condition:: tensor(1.1067e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.3486e-30, dtype=torch.float64)
secont condition:: tensor(1.3486e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.5586e-30, dtype=torch.float64)
secont condition:: tensor(1.5586e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.4833e-30, dtype=torch.float64)
secont condition:: tensor(1.4833e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.5866e-30, dtype=torch.float64)
secont condition:: tensor(1.5866e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.7027e-30, dtype=torch.float64)
secont condition:: tensor(1.7027e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.6926e-30, dtype=torch.float64)
secont condition:: tensor(1.6926e-30, dtype=torch.float64)
curr_secont condition:: tensor(1.8386e-30, dtype=torch.float64)
secont condition:: tensor(1.8386e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.0328e-30, dtype=torch.float64)
secont condition:: tensor(2.0328e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.2547e-30, dtype=torch.float64)
secont condition:: tensor(2.2547e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.3957e-30, dtype=torch.float64)
secont condition:: tensor(2.3957e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.2898e-30, dtype=torch.float64)
secont condition:: tensor(2.2898e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.7125e-30, dtype=torch.float64)
secont condition:: tensor(2.7125e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.7873e-30, dtype=torch.float64)
secont condition:: tensor(2.7873e-30, dtype=torch.float64)
curr_secont condition:: tensor(2.6798e-30, dtype=torch.float64)
secont condition:: tensor(2.6798e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.0295e-30, dtype=torch.float64)
secont condition:: tensor(3.0295e-30, dtype=torch.float64)
curr_secont condition:: tensor(3.0223e-30, dtype=torch.float64)
secont condition:: tensor(3.0223e-30, dtype=torch.float64)
curr_secont condition:: tensor(5.4116e-09, dtype=torch.float64)
secont condition:: tensor(5.4116e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1407e-09, dtype=torch.float64)
secont condition:: tensor(2.1407e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2637e-09, dtype=torch.float64)
secont condition:: tensor(1.2637e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8205e-10, dtype=torch.float64)
secont condition:: tensor(7.8205e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7302e-10, dtype=torch.float64)
secont condition:: tensor(7.7302e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3500e-10, dtype=torch.float64)
secont condition:: tensor(3.3500e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4287e-10, dtype=torch.float64)
secont condition:: tensor(3.4287e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1561e-10, dtype=torch.float64)
secont condition:: tensor(2.1561e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3961e-10, dtype=torch.float64)
secont condition:: tensor(2.3961e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5666e-10, dtype=torch.float64)
secont condition:: tensor(1.5666e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7562e-10, dtype=torch.float64)
secont condition:: tensor(1.7562e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4344e-10, dtype=torch.float64)
secont condition:: tensor(1.4344e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6782e-10, dtype=torch.float64)
secont condition:: tensor(1.6782e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9035e-10, dtype=torch.float64)
secont condition:: tensor(6.9035e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5236e-10, dtype=torch.float64)
secont condition:: tensor(1.5236e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3094e-11, dtype=torch.float64)
secont condition:: tensor(8.3094e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1459e-09, dtype=torch.float64)
secont condition:: tensor(8.1459e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7581e-09, dtype=torch.float64)
secont condition:: tensor(3.7581e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2535e-09, dtype=torch.float64)
secont condition:: tensor(2.2535e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7240e-09, dtype=torch.float64)
secont condition:: tensor(1.7240e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3140e-09, dtype=torch.float64)
secont condition:: tensor(2.3140e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.3866775035858154
curr_diff: 0 tensor(5.3716e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0226e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.9962e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1562e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4090e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9416e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5608e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4802e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946400
deletion rate:: 0.00005
python3 generate_rand_ids 0.00005  MNIST 0
tensor([ 2995, 17548, 54150])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.44668865203857
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.5321044921875
time_baseline:: 98.8037531375885
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0059e-12, dtype=torch.float64)
secont condition:: tensor(9.0059e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1694e-11, dtype=torch.float64)
secont condition:: tensor(3.1694e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4775e-11, dtype=torch.float64)
secont condition:: tensor(5.4775e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3075e-11, dtype=torch.float64)
secont condition:: tensor(8.3075e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4916e-10, dtype=torch.float64)
secont condition:: tensor(1.4916e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7012e-10, dtype=torch.float64)
secont condition:: tensor(1.7012e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1867e-10, dtype=torch.float64)
secont condition:: tensor(2.1867e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2192e-10, dtype=torch.float64)
secont condition:: tensor(2.2192e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5494e-10, dtype=torch.float64)
secont condition:: tensor(2.5494e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9358e-10, dtype=torch.float64)
secont condition:: tensor(2.9358e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7655e-10, dtype=torch.float64)
secont condition:: tensor(2.7655e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1976e-10, dtype=torch.float64)
secont condition:: tensor(3.1976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6424e-10, dtype=torch.float64)
secont condition:: tensor(3.6424e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7813e-10, dtype=torch.float64)
secont condition:: tensor(3.7813e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8825e-10, dtype=torch.float64)
secont condition:: tensor(3.8825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6509e-10, dtype=torch.float64)
secont condition:: tensor(3.6509e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2502e-10, dtype=torch.float64)
secont condition:: tensor(4.2502e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3635e-10, dtype=torch.float64)
secont condition:: tensor(4.3635e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4904e-10, dtype=torch.float64)
secont condition:: tensor(4.4904e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4285e-10, dtype=torch.float64)
secont condition:: tensor(4.4285e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6878e-10, dtype=torch.float64)
secont condition:: tensor(4.6878e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8486e-10, dtype=torch.float64)
secont condition:: tensor(4.8486e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8076e-10, dtype=torch.float64)
secont condition:: tensor(4.8076e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3776e-10, dtype=torch.float64)
secont condition:: tensor(5.3776e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9616e-10, dtype=torch.float64)
secont condition:: tensor(5.9616e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1369e-10, dtype=torch.float64)
secont condition:: tensor(6.1369e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1481e-10, dtype=torch.float64)
secont condition:: tensor(6.1481e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5004e-10, dtype=torch.float64)
secont condition:: tensor(5.5004e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9171e-10, dtype=torch.float64)
secont condition:: tensor(5.9171e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7147e-10, dtype=torch.float64)
secont condition:: tensor(5.7147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2118e-10, dtype=torch.float64)
secont condition:: tensor(6.2118e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3006e-10, dtype=torch.float64)
secont condition:: tensor(5.3006e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8043e-10, dtype=torch.float64)
secont condition:: tensor(6.8043e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4468e-10, dtype=torch.float64)
secont condition:: tensor(6.4468e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8620e-10, dtype=torch.float64)
secont condition:: tensor(6.8620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5039e-10, dtype=torch.float64)
secont condition:: tensor(6.5039e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9247e-10, dtype=torch.float64)
secont condition:: tensor(6.9247e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9612e-10, dtype=torch.float64)
secont condition:: tensor(6.9612e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1148e-10, dtype=torch.float64)
secont condition:: tensor(8.1148e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2003e-10, dtype=torch.float64)
secont condition:: tensor(8.2003e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6164e-10, dtype=torch.float64)
secont condition:: tensor(8.6164e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0123e-10, dtype=torch.float64)
secont condition:: tensor(9.0123e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2814e-10, dtype=torch.float64)
secont condition:: tensor(9.2814e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9435e-10, dtype=torch.float64)
secont condition:: tensor(9.9435e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2056e-09, dtype=torch.float64)
secont condition:: tensor(1.2056e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9556e-10, dtype=torch.float64)
secont condition:: tensor(9.9556e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0951e-09, dtype=torch.float64)
secont condition:: tensor(1.0951e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1264e-09, dtype=torch.float64)
secont condition:: tensor(1.1264e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2346e-09, dtype=torch.float64)
secont condition:: tensor(1.2346e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0574e-09, dtype=torch.float64)
secont condition:: tensor(1.0574e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-09, dtype=torch.float64)
secont condition:: tensor(1.2760e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2768e-09, dtype=torch.float64)
secont condition:: tensor(1.2768e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0166e-09, dtype=torch.float64)
secont condition:: tensor(1.0166e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-09, dtype=torch.float64)
secont condition:: tensor(1.2746e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4373e-09, dtype=torch.float64)
secont condition:: tensor(1.4373e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-09, dtype=torch.float64)
secont condition:: tensor(1.1520e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-09, dtype=torch.float64)
secont condition:: tensor(1.1945e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6099e-10, dtype=torch.float64)
secont condition:: tensor(8.6099e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5434e-10, dtype=torch.float64)
secont condition:: tensor(6.5434e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-09, dtype=torch.float64)
secont condition:: tensor(1.0760e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4986e-10, dtype=torch.float64)
secont condition:: tensor(8.4986e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0697e-10, dtype=torch.float64)
secont condition:: tensor(6.0697e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.687491178512573
curr_diff: 0 tensor(4.6069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4149e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6429e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.81094121932983
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.55496549606323
time_baseline:: 99.82405400276184
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0059e-12, dtype=torch.float64)
secont condition:: tensor(9.0059e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1694e-11, dtype=torch.float64)
secont condition:: tensor(3.1694e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4775e-11, dtype=torch.float64)
secont condition:: tensor(5.4775e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3075e-11, dtype=torch.float64)
secont condition:: tensor(8.3075e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4916e-10, dtype=torch.float64)
secont condition:: tensor(1.4916e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7012e-10, dtype=torch.float64)
secont condition:: tensor(1.7012e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1867e-10, dtype=torch.float64)
secont condition:: tensor(2.1867e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2192e-10, dtype=torch.float64)
secont condition:: tensor(2.2192e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5494e-10, dtype=torch.float64)
secont condition:: tensor(2.5494e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9358e-10, dtype=torch.float64)
secont condition:: tensor(2.9358e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7655e-10, dtype=torch.float64)
secont condition:: tensor(2.7655e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1976e-10, dtype=torch.float64)
secont condition:: tensor(3.1976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6424e-10, dtype=torch.float64)
secont condition:: tensor(3.6424e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7813e-10, dtype=torch.float64)
secont condition:: tensor(3.7813e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8825e-10, dtype=torch.float64)
secont condition:: tensor(3.8825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6509e-10, dtype=torch.float64)
secont condition:: tensor(3.6509e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2502e-10, dtype=torch.float64)
secont condition:: tensor(4.2502e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3635e-10, dtype=torch.float64)
secont condition:: tensor(4.3635e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4904e-10, dtype=torch.float64)
secont condition:: tensor(4.4904e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4285e-10, dtype=torch.float64)
secont condition:: tensor(4.4285e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6878e-10, dtype=torch.float64)
secont condition:: tensor(4.6878e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8486e-10, dtype=torch.float64)
secont condition:: tensor(4.8486e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8076e-10, dtype=torch.float64)
secont condition:: tensor(4.8076e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3776e-10, dtype=torch.float64)
secont condition:: tensor(5.3776e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9616e-10, dtype=torch.float64)
secont condition:: tensor(5.9616e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1369e-10, dtype=torch.float64)
secont condition:: tensor(6.1369e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1481e-10, dtype=torch.float64)
secont condition:: tensor(6.1481e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5004e-10, dtype=torch.float64)
secont condition:: tensor(5.5004e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9171e-10, dtype=torch.float64)
secont condition:: tensor(5.9171e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7147e-10, dtype=torch.float64)
secont condition:: tensor(5.7147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2118e-10, dtype=torch.float64)
secont condition:: tensor(6.2118e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3006e-10, dtype=torch.float64)
secont condition:: tensor(5.3006e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8043e-10, dtype=torch.float64)
secont condition:: tensor(6.8043e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4468e-10, dtype=torch.float64)
secont condition:: tensor(6.4468e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8620e-10, dtype=torch.float64)
secont condition:: tensor(6.8620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5039e-10, dtype=torch.float64)
secont condition:: tensor(6.5039e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9247e-10, dtype=torch.float64)
secont condition:: tensor(6.9247e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9612e-10, dtype=torch.float64)
secont condition:: tensor(6.9612e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1148e-10, dtype=torch.float64)
secont condition:: tensor(8.1148e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2003e-10, dtype=torch.float64)
secont condition:: tensor(8.2003e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6164e-10, dtype=torch.float64)
secont condition:: tensor(8.6164e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0123e-10, dtype=torch.float64)
secont condition:: tensor(9.0123e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2814e-10, dtype=torch.float64)
secont condition:: tensor(9.2814e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9435e-10, dtype=torch.float64)
secont condition:: tensor(9.9435e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2056e-09, dtype=torch.float64)
secont condition:: tensor(1.2056e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9556e-10, dtype=torch.float64)
secont condition:: tensor(9.9556e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0951e-09, dtype=torch.float64)
secont condition:: tensor(1.0951e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1264e-09, dtype=torch.float64)
secont condition:: tensor(1.1264e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2346e-09, dtype=torch.float64)
secont condition:: tensor(1.2346e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0574e-09, dtype=torch.float64)
secont condition:: tensor(1.0574e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-09, dtype=torch.float64)
secont condition:: tensor(1.2760e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2768e-09, dtype=torch.float64)
secont condition:: tensor(1.2768e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0166e-09, dtype=torch.float64)
secont condition:: tensor(1.0166e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-09, dtype=torch.float64)
secont condition:: tensor(1.2746e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4373e-09, dtype=torch.float64)
secont condition:: tensor(1.4373e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-09, dtype=torch.float64)
secont condition:: tensor(1.1520e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-09, dtype=torch.float64)
secont condition:: tensor(1.1945e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6099e-10, dtype=torch.float64)
secont condition:: tensor(8.6099e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5434e-10, dtype=torch.float64)
secont condition:: tensor(6.5434e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-09, dtype=torch.float64)
secont condition:: tensor(1.0760e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4986e-10, dtype=torch.float64)
secont condition:: tensor(8.4986e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0697e-10, dtype=torch.float64)
secont condition:: tensor(6.0697e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.626949548721313
curr_diff: 0 tensor(4.6069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4149e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6429e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.3275899887085
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.16187810897827
time_baseline:: 100.43593645095825
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0059e-12, dtype=torch.float64)
secont condition:: tensor(9.0059e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1694e-11, dtype=torch.float64)
secont condition:: tensor(3.1694e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4775e-11, dtype=torch.float64)
secont condition:: tensor(5.4775e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3075e-11, dtype=torch.float64)
secont condition:: tensor(8.3075e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4916e-10, dtype=torch.float64)
secont condition:: tensor(1.4916e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7012e-10, dtype=torch.float64)
secont condition:: tensor(1.7012e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1867e-10, dtype=torch.float64)
secont condition:: tensor(2.1867e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2192e-10, dtype=torch.float64)
secont condition:: tensor(2.2192e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5494e-10, dtype=torch.float64)
secont condition:: tensor(2.5494e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9358e-10, dtype=torch.float64)
secont condition:: tensor(2.9358e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7655e-10, dtype=torch.float64)
secont condition:: tensor(2.7655e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1976e-10, dtype=torch.float64)
secont condition:: tensor(3.1976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6424e-10, dtype=torch.float64)
secont condition:: tensor(3.6424e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7813e-10, dtype=torch.float64)
secont condition:: tensor(3.7813e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8825e-10, dtype=torch.float64)
secont condition:: tensor(3.8825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6509e-10, dtype=torch.float64)
secont condition:: tensor(3.6509e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2502e-10, dtype=torch.float64)
secont condition:: tensor(4.2502e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3635e-10, dtype=torch.float64)
secont condition:: tensor(4.3635e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4904e-10, dtype=torch.float64)
secont condition:: tensor(4.4904e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4285e-10, dtype=torch.float64)
secont condition:: tensor(4.4285e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6878e-10, dtype=torch.float64)
secont condition:: tensor(4.6878e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8486e-10, dtype=torch.float64)
secont condition:: tensor(4.8486e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8076e-10, dtype=torch.float64)
secont condition:: tensor(4.8076e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3776e-10, dtype=torch.float64)
secont condition:: tensor(5.3776e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9616e-10, dtype=torch.float64)
secont condition:: tensor(5.9616e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1369e-10, dtype=torch.float64)
secont condition:: tensor(6.1369e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1481e-10, dtype=torch.float64)
secont condition:: tensor(6.1481e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5004e-10, dtype=torch.float64)
secont condition:: tensor(5.5004e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9171e-10, dtype=torch.float64)
secont condition:: tensor(5.9171e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7147e-10, dtype=torch.float64)
secont condition:: tensor(5.7147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2118e-10, dtype=torch.float64)
secont condition:: tensor(6.2118e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3006e-10, dtype=torch.float64)
secont condition:: tensor(5.3006e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8043e-10, dtype=torch.float64)
secont condition:: tensor(6.8043e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4468e-10, dtype=torch.float64)
secont condition:: tensor(6.4468e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8620e-10, dtype=torch.float64)
secont condition:: tensor(6.8620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5039e-10, dtype=torch.float64)
secont condition:: tensor(6.5039e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9247e-10, dtype=torch.float64)
secont condition:: tensor(6.9247e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9612e-10, dtype=torch.float64)
secont condition:: tensor(6.9612e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1148e-10, dtype=torch.float64)
secont condition:: tensor(8.1148e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2003e-10, dtype=torch.float64)
secont condition:: tensor(8.2003e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6164e-10, dtype=torch.float64)
secont condition:: tensor(8.6164e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0123e-10, dtype=torch.float64)
secont condition:: tensor(9.0123e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2814e-10, dtype=torch.float64)
secont condition:: tensor(9.2814e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9435e-10, dtype=torch.float64)
secont condition:: tensor(9.9435e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2056e-09, dtype=torch.float64)
secont condition:: tensor(1.2056e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9556e-10, dtype=torch.float64)
secont condition:: tensor(9.9556e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0951e-09, dtype=torch.float64)
secont condition:: tensor(1.0951e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1264e-09, dtype=torch.float64)
secont condition:: tensor(1.1264e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2346e-09, dtype=torch.float64)
secont condition:: tensor(1.2346e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0574e-09, dtype=torch.float64)
secont condition:: tensor(1.0574e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-09, dtype=torch.float64)
secont condition:: tensor(1.2760e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2768e-09, dtype=torch.float64)
secont condition:: tensor(1.2768e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0166e-09, dtype=torch.float64)
secont condition:: tensor(1.0166e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-09, dtype=torch.float64)
secont condition:: tensor(1.2746e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4373e-09, dtype=torch.float64)
secont condition:: tensor(1.4373e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-09, dtype=torch.float64)
secont condition:: tensor(1.1520e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-09, dtype=torch.float64)
secont condition:: tensor(1.1945e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6099e-10, dtype=torch.float64)
secont condition:: tensor(8.6099e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5434e-10, dtype=torch.float64)
secont condition:: tensor(6.5434e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-09, dtype=torch.float64)
secont condition:: tensor(1.0760e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4986e-10, dtype=torch.float64)
secont condition:: tensor(8.4986e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0697e-10, dtype=torch.float64)
secont condition:: tensor(6.0697e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.742249488830566
curr_diff: 0 tensor(4.6069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4149e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6429e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.73063015937805
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.85837888717651
time_baseline:: 99.12052941322327
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0059e-12, dtype=torch.float64)
secont condition:: tensor(9.0059e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1694e-11, dtype=torch.float64)
secont condition:: tensor(3.1694e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4775e-11, dtype=torch.float64)
secont condition:: tensor(5.4775e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3075e-11, dtype=torch.float64)
secont condition:: tensor(8.3075e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4916e-10, dtype=torch.float64)
secont condition:: tensor(1.4916e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7012e-10, dtype=torch.float64)
secont condition:: tensor(1.7012e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1867e-10, dtype=torch.float64)
secont condition:: tensor(2.1867e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2192e-10, dtype=torch.float64)
secont condition:: tensor(2.2192e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5494e-10, dtype=torch.float64)
secont condition:: tensor(2.5494e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9358e-10, dtype=torch.float64)
secont condition:: tensor(2.9358e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7655e-10, dtype=torch.float64)
secont condition:: tensor(2.7655e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1976e-10, dtype=torch.float64)
secont condition:: tensor(3.1976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6424e-10, dtype=torch.float64)
secont condition:: tensor(3.6424e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7813e-10, dtype=torch.float64)
secont condition:: tensor(3.7813e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8825e-10, dtype=torch.float64)
secont condition:: tensor(3.8825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6509e-10, dtype=torch.float64)
secont condition:: tensor(3.6509e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2502e-10, dtype=torch.float64)
secont condition:: tensor(4.2502e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3635e-10, dtype=torch.float64)
secont condition:: tensor(4.3635e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4904e-10, dtype=torch.float64)
secont condition:: tensor(4.4904e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4285e-10, dtype=torch.float64)
secont condition:: tensor(4.4285e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6878e-10, dtype=torch.float64)
secont condition:: tensor(4.6878e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8486e-10, dtype=torch.float64)
secont condition:: tensor(4.8486e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8076e-10, dtype=torch.float64)
secont condition:: tensor(4.8076e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3776e-10, dtype=torch.float64)
secont condition:: tensor(5.3776e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9616e-10, dtype=torch.float64)
secont condition:: tensor(5.9616e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1369e-10, dtype=torch.float64)
secont condition:: tensor(6.1369e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1481e-10, dtype=torch.float64)
secont condition:: tensor(6.1481e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5004e-10, dtype=torch.float64)
secont condition:: tensor(5.5004e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9171e-10, dtype=torch.float64)
secont condition:: tensor(5.9171e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7147e-10, dtype=torch.float64)
secont condition:: tensor(5.7147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2118e-10, dtype=torch.float64)
secont condition:: tensor(6.2118e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3006e-10, dtype=torch.float64)
secont condition:: tensor(5.3006e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8043e-10, dtype=torch.float64)
secont condition:: tensor(6.8043e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4468e-10, dtype=torch.float64)
secont condition:: tensor(6.4468e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8620e-10, dtype=torch.float64)
secont condition:: tensor(6.8620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5039e-10, dtype=torch.float64)
secont condition:: tensor(6.5039e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9247e-10, dtype=torch.float64)
secont condition:: tensor(6.9247e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9612e-10, dtype=torch.float64)
secont condition:: tensor(6.9612e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1148e-10, dtype=torch.float64)
secont condition:: tensor(8.1148e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2003e-10, dtype=torch.float64)
secont condition:: tensor(8.2003e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6164e-10, dtype=torch.float64)
secont condition:: tensor(8.6164e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0123e-10, dtype=torch.float64)
secont condition:: tensor(9.0123e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2814e-10, dtype=torch.float64)
secont condition:: tensor(9.2814e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9435e-10, dtype=torch.float64)
secont condition:: tensor(9.9435e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2056e-09, dtype=torch.float64)
secont condition:: tensor(1.2056e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9556e-10, dtype=torch.float64)
secont condition:: tensor(9.9556e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0951e-09, dtype=torch.float64)
secont condition:: tensor(1.0951e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1264e-09, dtype=torch.float64)
secont condition:: tensor(1.1264e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2346e-09, dtype=torch.float64)
secont condition:: tensor(1.2346e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0574e-09, dtype=torch.float64)
secont condition:: tensor(1.0574e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-09, dtype=torch.float64)
secont condition:: tensor(1.2760e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2768e-09, dtype=torch.float64)
secont condition:: tensor(1.2768e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0166e-09, dtype=torch.float64)
secont condition:: tensor(1.0166e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-09, dtype=torch.float64)
secont condition:: tensor(1.2746e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4373e-09, dtype=torch.float64)
secont condition:: tensor(1.4373e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-09, dtype=torch.float64)
secont condition:: tensor(1.1520e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-09, dtype=torch.float64)
secont condition:: tensor(1.1945e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6099e-10, dtype=torch.float64)
secont condition:: tensor(8.6099e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5434e-10, dtype=torch.float64)
secont condition:: tensor(6.5434e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-09, dtype=torch.float64)
secont condition:: tensor(1.0760e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4986e-10, dtype=torch.float64)
secont condition:: tensor(8.4986e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0697e-10, dtype=torch.float64)
secont condition:: tensor(6.0697e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.711430311203003
curr_diff: 0 tensor(4.6069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4149e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6429e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.77274107933044
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.2328712940216
time_baseline:: 100.49719142913818
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0059e-12, dtype=torch.float64)
secont condition:: tensor(9.0059e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1694e-11, dtype=torch.float64)
secont condition:: tensor(3.1694e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4775e-11, dtype=torch.float64)
secont condition:: tensor(5.4775e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3075e-11, dtype=torch.float64)
secont condition:: tensor(8.3075e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4916e-10, dtype=torch.float64)
secont condition:: tensor(1.4916e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7012e-10, dtype=torch.float64)
secont condition:: tensor(1.7012e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1867e-10, dtype=torch.float64)
secont condition:: tensor(2.1867e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2192e-10, dtype=torch.float64)
secont condition:: tensor(2.2192e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5494e-10, dtype=torch.float64)
secont condition:: tensor(2.5494e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9358e-10, dtype=torch.float64)
secont condition:: tensor(2.9358e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7655e-10, dtype=torch.float64)
secont condition:: tensor(2.7655e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1976e-10, dtype=torch.float64)
secont condition:: tensor(3.1976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6424e-10, dtype=torch.float64)
secont condition:: tensor(3.6424e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7813e-10, dtype=torch.float64)
secont condition:: tensor(3.7813e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8825e-10, dtype=torch.float64)
secont condition:: tensor(3.8825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6509e-10, dtype=torch.float64)
secont condition:: tensor(3.6509e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2502e-10, dtype=torch.float64)
secont condition:: tensor(4.2502e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3635e-10, dtype=torch.float64)
secont condition:: tensor(4.3635e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4904e-10, dtype=torch.float64)
secont condition:: tensor(4.4904e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4285e-10, dtype=torch.float64)
secont condition:: tensor(4.4285e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6878e-10, dtype=torch.float64)
secont condition:: tensor(4.6878e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8486e-10, dtype=torch.float64)
secont condition:: tensor(4.8486e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8076e-10, dtype=torch.float64)
secont condition:: tensor(4.8076e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3776e-10, dtype=torch.float64)
secont condition:: tensor(5.3776e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9616e-10, dtype=torch.float64)
secont condition:: tensor(5.9616e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1369e-10, dtype=torch.float64)
secont condition:: tensor(6.1369e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1481e-10, dtype=torch.float64)
secont condition:: tensor(6.1481e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5004e-10, dtype=torch.float64)
secont condition:: tensor(5.5004e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9171e-10, dtype=torch.float64)
secont condition:: tensor(5.9171e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7147e-10, dtype=torch.float64)
secont condition:: tensor(5.7147e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2118e-10, dtype=torch.float64)
secont condition:: tensor(6.2118e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3006e-10, dtype=torch.float64)
secont condition:: tensor(5.3006e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8043e-10, dtype=torch.float64)
secont condition:: tensor(6.8043e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4468e-10, dtype=torch.float64)
secont condition:: tensor(6.4468e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8620e-10, dtype=torch.float64)
secont condition:: tensor(6.8620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5039e-10, dtype=torch.float64)
secont condition:: tensor(6.5039e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9247e-10, dtype=torch.float64)
secont condition:: tensor(6.9247e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9612e-10, dtype=torch.float64)
secont condition:: tensor(6.9612e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1148e-10, dtype=torch.float64)
secont condition:: tensor(8.1148e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2003e-10, dtype=torch.float64)
secont condition:: tensor(8.2003e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6164e-10, dtype=torch.float64)
secont condition:: tensor(8.6164e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0123e-10, dtype=torch.float64)
secont condition:: tensor(9.0123e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2814e-10, dtype=torch.float64)
secont condition:: tensor(9.2814e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9435e-10, dtype=torch.float64)
secont condition:: tensor(9.9435e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2056e-09, dtype=torch.float64)
secont condition:: tensor(1.2056e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9556e-10, dtype=torch.float64)
secont condition:: tensor(9.9556e-10, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0951e-09, dtype=torch.float64)
secont condition:: tensor(1.0951e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1264e-09, dtype=torch.float64)
secont condition:: tensor(1.1264e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2346e-09, dtype=torch.float64)
secont condition:: tensor(1.2346e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0574e-09, dtype=torch.float64)
secont condition:: tensor(1.0574e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2760e-09, dtype=torch.float64)
secont condition:: tensor(1.2760e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2768e-09, dtype=torch.float64)
secont condition:: tensor(1.2768e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0166e-09, dtype=torch.float64)
secont condition:: tensor(1.0166e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-09, dtype=torch.float64)
secont condition:: tensor(1.2746e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4373e-09, dtype=torch.float64)
secont condition:: tensor(1.4373e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-09, dtype=torch.float64)
secont condition:: tensor(1.1520e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-09, dtype=torch.float64)
secont condition:: tensor(1.1945e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6099e-10, dtype=torch.float64)
secont condition:: tensor(8.6099e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5434e-10, dtype=torch.float64)
secont condition:: tensor(6.5434e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-09, dtype=torch.float64)
secont condition:: tensor(1.0760e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4986e-10, dtype=torch.float64)
secont condition:: tensor(8.4986e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0697e-10, dtype=torch.float64)
secont condition:: tensor(6.0697e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.772593021392822
curr_diff: 0 tensor(4.6069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4149e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6429e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254748
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.240947
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.226526
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.227841
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.220473
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.217893
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217859
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.218964
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216518
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.218508
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.219925
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.216867
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215811
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.222291
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.215819
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.213483
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.217661
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.218254
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.219931
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.212779
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.215123
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.218029
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.220563
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.218212
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.219461
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216117
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.216891
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.216353
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.220742
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215940
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.214385
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.217224
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.213576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217271
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.213407
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.215466
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216785
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.217915
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.219540
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.218299
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214433
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217266
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.218168
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.212543
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.214568
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.215220
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.214351
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.217930
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.213804
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.216935
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214839
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213543
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.210204
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.219464
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 56, Batch: 0, Loss: 0.214306
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.212393
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.209894
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.211204
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.550190925598145
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.54188585281372
time_baseline:: 45.67479157447815
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9481e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2341e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4893e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5655e-11, dtype=torch.float64)
secont condition:: tensor(1.5655e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4535e-11, dtype=torch.float64)
secont condition:: tensor(2.4535e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8162e-11, dtype=torch.float64)
secont condition:: tensor(5.8162e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4457e-11, dtype=torch.float64)
secont condition:: tensor(8.4457e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5121e-11, dtype=torch.float64)
secont condition:: tensor(6.5121e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9254e-11, dtype=torch.float64)
secont condition:: tensor(8.9254e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4459e-10, dtype=torch.float64)
secont condition:: tensor(1.4459e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1293e-10, dtype=torch.float64)
secont condition:: tensor(2.1293e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5071e-10, dtype=torch.float64)
secont condition:: tensor(3.5071e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8575e-10, dtype=torch.float64)
secont condition:: tensor(2.8575e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8606e-10, dtype=torch.float64)
secont condition:: tensor(2.8606e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4612e-10, dtype=torch.float64)
secont condition:: tensor(3.4612e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8723e-10, dtype=torch.float64)
secont condition:: tensor(2.8723e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9155e-10, dtype=torch.float64)
secont condition:: tensor(2.9155e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1198e-10, dtype=torch.float64)
secont condition:: tensor(3.1198e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4699e-10, dtype=torch.float64)
secont condition:: tensor(4.4699e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5295e-10, dtype=torch.float64)
secont condition:: tensor(4.5295e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8193e-10, dtype=torch.float64)
secont condition:: tensor(4.8193e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4258e-10, dtype=torch.float64)
secont condition:: tensor(4.4258e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7369e-10, dtype=torch.float64)
secont condition:: tensor(4.7369e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8684e-10, dtype=torch.float64)
secont condition:: tensor(5.8684e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8234e-10, dtype=torch.float64)
secont condition:: tensor(4.8234e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5122e-10, dtype=torch.float64)
secont condition:: tensor(5.5122e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1546e-10, dtype=torch.float64)
secont condition:: tensor(6.1546e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0667e-10, dtype=torch.float64)
secont condition:: tensor(5.0667e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0549e-10, dtype=torch.float64)
secont condition:: tensor(5.0549e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9030e-10, dtype=torch.float64)
secont condition:: tensor(6.9030e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0331e-10, dtype=torch.float64)
secont condition:: tensor(6.0331e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8277e-10, dtype=torch.float64)
secont condition:: tensor(5.8277e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9313e-10, dtype=torch.float64)
secont condition:: tensor(5.9313e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6871e-10, dtype=torch.float64)
secont condition:: tensor(4.6871e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9483e-10, dtype=torch.float64)
secont condition:: tensor(5.9483e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1979e-10, dtype=torch.float64)
secont condition:: tensor(6.1979e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8725e-10, dtype=torch.float64)
secont condition:: tensor(5.8725e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2289e-10, dtype=torch.float64)
secont condition:: tensor(6.2289e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4674e-10, dtype=torch.float64)
secont condition:: tensor(6.4674e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3638e-10, dtype=torch.float64)
secont condition:: tensor(5.3638e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5491e-10, dtype=torch.float64)
secont condition:: tensor(8.5491e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3127e-10, dtype=torch.float64)
secont condition:: tensor(7.3127e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5812e-10, dtype=torch.float64)
secont condition:: tensor(8.5812e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1838e-09, dtype=torch.float64)
secont condition:: tensor(1.1838e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3313e-09, dtype=torch.float64)
secont condition:: tensor(1.3313e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1422e-09, dtype=torch.float64)
secont condition:: tensor(1.1422e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3448e-09, dtype=torch.float64)
secont condition:: tensor(1.3448e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4128e-09, dtype=torch.float64)
secont condition:: tensor(1.4128e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7202e-09, dtype=torch.float64)
secont condition:: tensor(1.7202e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4776e-09, dtype=torch.float64)
secont condition:: tensor(1.4776e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4318e-09, dtype=torch.float64)
secont condition:: tensor(1.4318e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0967e-09, dtype=torch.float64)
secont condition:: tensor(2.0967e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4359e-09, dtype=torch.float64)
secont condition:: tensor(1.4359e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7150e-09, dtype=torch.float64)
secont condition:: tensor(1.7150e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7490e-09, dtype=torch.float64)
secont condition:: tensor(1.7490e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1987e-09, dtype=torch.float64)
secont condition:: tensor(1.1987e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5902e-09, dtype=torch.float64)
secont condition:: tensor(1.5902e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5920e-09, dtype=torch.float64)
secont condition:: tensor(1.5920e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7905e-09, dtype=torch.float64)
secont condition:: tensor(1.7905e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8286e-09, dtype=torch.float64)
secont condition:: tensor(1.8286e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7709e-09, dtype=torch.float64)
secont condition:: tensor(1.7709e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8398e-09, dtype=torch.float64)
secont condition:: tensor(1.8398e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1817e-09, dtype=torch.float64)
secont condition:: tensor(2.1817e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3918e-09, dtype=torch.float64)
secont condition:: tensor(1.3918e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.194237232208252
curr_diff: 0 tensor(3.5181e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.4316e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.5612e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7692e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5441e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9939e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4002e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.246194
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.236157
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.228229
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.223183
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.218466
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.219521
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.223075
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217184
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 8, Batch: 0, Loss: 0.218046
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.218432
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.216797
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.216980
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217713
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218814
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.214657
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.218587
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.217744
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214041
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.214543
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218692
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217332
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.211301
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.216834
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217822
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.217012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.215412
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217374
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.213463
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215491
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.216439
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215796
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.214377
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.214324
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.213112
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217696
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.215964
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.218268
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214947
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215804
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.215113
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.219759
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215667
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.219529
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.213106
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215057
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.218854
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.216631
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.218281
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.214556
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.213536
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.212611
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.218258
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.215036
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.217583
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216786
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.214258
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.217311
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.213671
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.218285
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 56.26788115501404
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.58938932418823
time_baseline:: 45.72151160240173
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.3379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2757e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6054e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7181e-12, dtype=torch.float64)
secont condition:: tensor(3.7181e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0381e-11, dtype=torch.float64)
secont condition:: tensor(3.0381e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2247e-11, dtype=torch.float64)
secont condition:: tensor(6.2247e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5217e-11, dtype=torch.float64)
secont condition:: tensor(8.5217e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7483e-10, dtype=torch.float64)
secont condition:: tensor(1.7483e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4632e-10, dtype=torch.float64)
secont condition:: tensor(1.4632e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7954e-11, dtype=torch.float64)
secont condition:: tensor(9.7954e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1728e-10, dtype=torch.float64)
secont condition:: tensor(2.1728e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2315e-10, dtype=torch.float64)
secont condition:: tensor(2.2315e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6243e-10, dtype=torch.float64)
secont condition:: tensor(2.6243e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8144e-10, dtype=torch.float64)
secont condition:: tensor(3.8144e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1608e-10, dtype=torch.float64)
secont condition:: tensor(3.1608e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4734e-10, dtype=torch.float64)
secont condition:: tensor(3.4734e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2554e-10, dtype=torch.float64)
secont condition:: tensor(3.2554e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0891e-10, dtype=torch.float64)
secont condition:: tensor(4.0891e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2722e-10, dtype=torch.float64)
secont condition:: tensor(4.2722e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9485e-10, dtype=torch.float64)
secont condition:: tensor(3.9485e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2458e-10, dtype=torch.float64)
secont condition:: tensor(4.2458e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3368e-10, dtype=torch.float64)
secont condition:: tensor(3.3368e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2318e-10, dtype=torch.float64)
secont condition:: tensor(5.2318e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5613e-10, dtype=torch.float64)
secont condition:: tensor(3.5613e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7367e-10, dtype=torch.float64)
secont condition:: tensor(5.7367e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0009e-10, dtype=torch.float64)
secont condition:: tensor(5.0009e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1356e-10, dtype=torch.float64)
secont condition:: tensor(7.1356e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4276e-10, dtype=torch.float64)
secont condition:: tensor(4.4276e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5176e-10, dtype=torch.float64)
secont condition:: tensor(5.5176e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3591e-10, dtype=torch.float64)
secont condition:: tensor(5.3591e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3474e-10, dtype=torch.float64)
secont condition:: tensor(6.3474e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0320e-10, dtype=torch.float64)
secont condition:: tensor(6.0320e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1510e-10, dtype=torch.float64)
secont condition:: tensor(6.1510e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6192e-10, dtype=torch.float64)
secont condition:: tensor(7.6192e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0041e-10, dtype=torch.float64)
secont condition:: tensor(6.0041e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6801e-10, dtype=torch.float64)
secont condition:: tensor(5.6801e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6165e-10, dtype=torch.float64)
secont condition:: tensor(7.6165e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9831e-10, dtype=torch.float64)
secont condition:: tensor(6.9831e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5291e-10, dtype=torch.float64)
secont condition:: tensor(6.5291e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8567e-10, dtype=torch.float64)
secont condition:: tensor(6.8567e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2443e-10, dtype=torch.float64)
secont condition:: tensor(7.2443e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3211e-10, dtype=torch.float64)
secont condition:: tensor(8.3211e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3940e-10, dtype=torch.float64)
secont condition:: tensor(8.3940e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2508e-10, dtype=torch.float64)
secont condition:: tensor(8.2508e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4152e-10, dtype=torch.float64)
secont condition:: tensor(8.4152e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9189e-10, dtype=torch.float64)
secont condition:: tensor(9.9189e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7473e-10, dtype=torch.float64)
secont condition:: tensor(9.7473e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1905e-10, dtype=torch.float64)
secont condition:: tensor(8.1905e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1403e-09, dtype=torch.float64)
secont condition:: tensor(1.1403e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1677e-09, dtype=torch.float64)
secont condition:: tensor(1.1677e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3539e-09, dtype=torch.float64)
secont condition:: tensor(1.3539e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6725e-09, dtype=torch.float64)
secont condition:: tensor(1.6725e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5167e-09, dtype=torch.float64)
secont condition:: tensor(1.5167e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3037e-09, dtype=torch.float64)
secont condition:: tensor(1.3037e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1587e-09, dtype=torch.float64)
secont condition:: tensor(1.1587e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2913e-09, dtype=torch.float64)
secont condition:: tensor(1.2913e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1276e-09, dtype=torch.float64)
secont condition:: tensor(1.1276e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4763e-09, dtype=torch.float64)
secont condition:: tensor(1.4763e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3673e-09, dtype=torch.float64)
secont condition:: tensor(1.3673e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3118e-09, dtype=torch.float64)
secont condition:: tensor(2.3118e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3565e-09, dtype=torch.float64)
secont condition:: tensor(1.3565e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0605e-09, dtype=torch.float64)
secont condition:: tensor(2.0605e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8417e-09, dtype=torch.float64)
secont condition:: tensor(1.8417e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2974e-09, dtype=torch.float64)
secont condition:: tensor(2.2974e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7369e-09, dtype=torch.float64)
secont condition:: tensor(1.7369e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9008e-09, dtype=torch.float64)
secont condition:: tensor(1.9008e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7112e-09, dtype=torch.float64)
secont condition:: tensor(1.7112e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.180436134338379
curr_diff: 0 tensor(3.0997e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8321e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.7838e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3480e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.1252e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8406e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8201e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250475
Test Avg. Loss: 0.000023, Accuracy: 0.937900
Train - Epoch 1, Batch: 0, Loss: 0.236946
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.230953
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222862
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.216934
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.222387
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.221142
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 7, Batch: 0, Loss: 0.217416
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.217961
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.220926
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.218979
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.218435
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.216863
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218391
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.217666
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.219637
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.215213
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.220302
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.217216
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218311
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216511
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217807
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.214731
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217441
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.218347
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.215648
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.211580
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216641
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.219663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215194
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217357
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.214012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215801
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.212078
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.212091
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.215953
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.217797
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 37, Batch: 0, Loss: 0.212680
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214681
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.217223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.217393
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215734
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214323
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.212826
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.212110
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.218721
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.213723
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.211910
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.213620
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214281
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.218028
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214553
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.212866
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.211275
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.215889
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 56, Batch: 0, Loss: 0.214521
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.219616
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215456
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.217211
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 56.331034660339355
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.99916362762451
time_baseline:: 45.13191485404968
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5926e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2507e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3729e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6750e-11, dtype=torch.float64)
secont condition:: tensor(2.6750e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6111e-11, dtype=torch.float64)
secont condition:: tensor(2.6111e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8878e-11, dtype=torch.float64)
secont condition:: tensor(5.8878e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2915e-11, dtype=torch.float64)
secont condition:: tensor(8.2915e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2627e-10, dtype=torch.float64)
secont condition:: tensor(1.2627e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4246e-10, dtype=torch.float64)
secont condition:: tensor(1.4246e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0497e-10, dtype=torch.float64)
secont condition:: tensor(2.0497e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9142e-10, dtype=torch.float64)
secont condition:: tensor(1.9142e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3171e-10, dtype=torch.float64)
secont condition:: tensor(2.3171e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5807e-10, dtype=torch.float64)
secont condition:: tensor(2.5807e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9018e-10, dtype=torch.float64)
secont condition:: tensor(2.9018e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9510e-10, dtype=torch.float64)
secont condition:: tensor(2.9510e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4008e-10, dtype=torch.float64)
secont condition:: tensor(2.4008e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7548e-10, dtype=torch.float64)
secont condition:: tensor(3.7548e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2453e-10, dtype=torch.float64)
secont condition:: tensor(3.2453e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9438e-10, dtype=torch.float64)
secont condition:: tensor(3.9438e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9250e-10, dtype=torch.float64)
secont condition:: tensor(3.9250e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6121e-10, dtype=torch.float64)
secont condition:: tensor(4.6121e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2158e-10, dtype=torch.float64)
secont condition:: tensor(4.2158e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4779e-10, dtype=torch.float64)
secont condition:: tensor(4.4779e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7692e-10, dtype=torch.float64)
secont condition:: tensor(4.7692e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2066e-10, dtype=torch.float64)
secont condition:: tensor(5.2066e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8681e-10, dtype=torch.float64)
secont condition:: tensor(5.8681e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6468e-10, dtype=torch.float64)
secont condition:: tensor(5.6468e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3670e-10, dtype=torch.float64)
secont condition:: tensor(5.3670e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6574e-10, dtype=torch.float64)
secont condition:: tensor(5.6574e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2803e-10, dtype=torch.float64)
secont condition:: tensor(4.2803e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3102e-10, dtype=torch.float64)
secont condition:: tensor(6.3102e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6134e-10, dtype=torch.float64)
secont condition:: tensor(6.6134e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2017e-10, dtype=torch.float64)
secont condition:: tensor(5.2017e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6876e-10, dtype=torch.float64)
secont condition:: tensor(6.6876e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6894e-10, dtype=torch.float64)
secont condition:: tensor(5.6894e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2883e-10, dtype=torch.float64)
secont condition:: tensor(8.2883e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1109e-10, dtype=torch.float64)
secont condition:: tensor(7.1109e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6460e-10, dtype=torch.float64)
secont condition:: tensor(7.6460e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6242e-10, dtype=torch.float64)
secont condition:: tensor(8.6242e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5982e-10, dtype=torch.float64)
secont condition:: tensor(6.5982e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1454e-10, dtype=torch.float64)
secont condition:: tensor(7.1454e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6459e-10, dtype=torch.float64)
secont condition:: tensor(6.6459e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9093e-10, dtype=torch.float64)
secont condition:: tensor(7.9093e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5182e-10, dtype=torch.float64)
secont condition:: tensor(7.5182e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3379e-10, dtype=torch.float64)
secont condition:: tensor(9.3379e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8491e-10, dtype=torch.float64)
secont condition:: tensor(8.8491e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0022e-09, dtype=torch.float64)
secont condition:: tensor(1.0022e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1167e-09, dtype=torch.float64)
secont condition:: tensor(1.1167e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3070e-09, dtype=torch.float64)
secont condition:: tensor(1.3070e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3271e-09, dtype=torch.float64)
secont condition:: tensor(1.3271e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3431e-09, dtype=torch.float64)
secont condition:: tensor(1.3431e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4288e-09, dtype=torch.float64)
secont condition:: tensor(1.4288e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4585e-09, dtype=torch.float64)
secont condition:: tensor(1.4585e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-09, dtype=torch.float64)
secont condition:: tensor(1.3010e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2885e-09, dtype=torch.float64)
secont condition:: tensor(1.2885e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5718e-09, dtype=torch.float64)
secont condition:: tensor(1.5718e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3883e-09, dtype=torch.float64)
secont condition:: tensor(1.3883e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0776e-09, dtype=torch.float64)
secont condition:: tensor(1.0776e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6740e-09, dtype=torch.float64)
secont condition:: tensor(1.6740e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1417e-09, dtype=torch.float64)
secont condition:: tensor(2.1417e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9096e-09, dtype=torch.float64)
secont condition:: tensor(1.9096e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4542e-09, dtype=torch.float64)
secont condition:: tensor(1.4542e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5698e-09, dtype=torch.float64)
secont condition:: tensor(1.5698e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2059e-09, dtype=torch.float64)
secont condition:: tensor(2.2059e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2362e-09, dtype=torch.float64)
secont condition:: tensor(2.2362e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1495e-09, dtype=torch.float64)
secont condition:: tensor(2.1495e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.950850486755371
curr_diff: 0 tensor(3.3522e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2707e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7487e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1916e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3893e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1726e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8415e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249860
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.236852
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.230093
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.223174
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.225816
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.215276
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.219347
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.216265
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 8, Batch: 0, Loss: 0.214965
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.220105
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.217569
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.215800
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.216969
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216383
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.218855
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.218692
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.214633
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.217133
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.218599
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.216657
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216136
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.214860
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.218978
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.214635
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.218480
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216055
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214418
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.214775
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.218756
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215153
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.214056
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217312
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.216388
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.215199
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.214433
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.209938
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.218760
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.211856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.218876
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215175
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.219346
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.215426
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.213829
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.218258
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.214710
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.213209
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.217953
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.211510
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.215004
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.213735
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216833
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.216366
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.213536
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216803
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.217495
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216027
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.216870
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216716
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215901
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.216437
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 56.177855491638184
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.17612051963806
time_baseline:: 45.30906009674072
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7760e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5554e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8893e-11, dtype=torch.float64)
secont condition:: tensor(1.8893e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8116e-11, dtype=torch.float64)
secont condition:: tensor(2.8116e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.0018e-11, dtype=torch.float64)
secont condition:: tensor(7.0018e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6807e-11, dtype=torch.float64)
secont condition:: tensor(7.6807e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6569e-11, dtype=torch.float64)
secont condition:: tensor(5.6569e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6411e-11, dtype=torch.float64)
secont condition:: tensor(8.6411e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7529e-10, dtype=torch.float64)
secont condition:: tensor(1.7529e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2105e-10, dtype=torch.float64)
secont condition:: tensor(2.2105e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5399e-10, dtype=torch.float64)
secont condition:: tensor(2.5399e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9096e-10, dtype=torch.float64)
secont condition:: tensor(2.9096e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8609e-10, dtype=torch.float64)
secont condition:: tensor(2.8609e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8656e-10, dtype=torch.float64)
secont condition:: tensor(2.8656e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0462e-10, dtype=torch.float64)
secont condition:: tensor(4.0462e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0693e-10, dtype=torch.float64)
secont condition:: tensor(4.0693e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6256e-10, dtype=torch.float64)
secont condition:: tensor(4.6256e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5732e-10, dtype=torch.float64)
secont condition:: tensor(3.5732e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8913e-10, dtype=torch.float64)
secont condition:: tensor(2.8913e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1140e-10, dtype=torch.float64)
secont condition:: tensor(4.1140e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2963e-10, dtype=torch.float64)
secont condition:: tensor(6.2963e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2915e-10, dtype=torch.float64)
secont condition:: tensor(4.2915e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0022e-10, dtype=torch.float64)
secont condition:: tensor(3.0022e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1296e-10, dtype=torch.float64)
secont condition:: tensor(5.1296e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6789e-10, dtype=torch.float64)
secont condition:: tensor(4.6789e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9096e-10, dtype=torch.float64)
secont condition:: tensor(4.9096e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5098e-10, dtype=torch.float64)
secont condition:: tensor(6.5098e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9447e-10, dtype=torch.float64)
secont condition:: tensor(4.9447e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5141e-10, dtype=torch.float64)
secont condition:: tensor(6.5141e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2065e-10, dtype=torch.float64)
secont condition:: tensor(5.2065e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9211e-10, dtype=torch.float64)
secont condition:: tensor(5.9211e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3903e-10, dtype=torch.float64)
secont condition:: tensor(5.3903e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8890e-10, dtype=torch.float64)
secont condition:: tensor(6.8890e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3752e-10, dtype=torch.float64)
secont condition:: tensor(5.3752e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2935e-10, dtype=torch.float64)
secont condition:: tensor(7.2935e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3070e-10, dtype=torch.float64)
secont condition:: tensor(6.3070e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1115e-10, dtype=torch.float64)
secont condition:: tensor(6.1115e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9031e-10, dtype=torch.float64)
secont condition:: tensor(5.9031e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2954e-10, dtype=torch.float64)
secont condition:: tensor(5.2954e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6635e-10, dtype=torch.float64)
secont condition:: tensor(5.6635e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9020e-10, dtype=torch.float64)
secont condition:: tensor(6.9020e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4408e-10, dtype=torch.float64)
secont condition:: tensor(9.4408e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0118e-09, dtype=torch.float64)
secont condition:: tensor(1.0118e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0787e-09, dtype=torch.float64)
secont condition:: tensor(1.0787e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1778e-10, dtype=torch.float64)
secont condition:: tensor(9.1778e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0905e-09, dtype=torch.float64)
secont condition:: tensor(1.0905e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4272e-09, dtype=torch.float64)
secont condition:: tensor(1.4272e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4623e-09, dtype=torch.float64)
secont condition:: tensor(1.4623e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3799e-09, dtype=torch.float64)
secont condition:: tensor(1.3799e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4523e-09, dtype=torch.float64)
secont condition:: tensor(1.4523e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5237e-09, dtype=torch.float64)
secont condition:: tensor(1.5237e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5831e-09, dtype=torch.float64)
secont condition:: tensor(1.5831e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3287e-10, dtype=torch.float64)
secont condition:: tensor(7.3287e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8751e-10, dtype=torch.float64)
secont condition:: tensor(9.8751e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2249e-09, dtype=torch.float64)
secont condition:: tensor(2.2249e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0246e-09, dtype=torch.float64)
secont condition:: tensor(3.0246e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6125e-09, dtype=torch.float64)
secont condition:: tensor(1.6125e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8975e-09, dtype=torch.float64)
secont condition:: tensor(1.8975e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6533e-09, dtype=torch.float64)
secont condition:: tensor(1.6533e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8857e-09, dtype=torch.float64)
secont condition:: tensor(1.8857e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0348e-09, dtype=torch.float64)
secont condition:: tensor(1.0348e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2685e-09, dtype=torch.float64)
secont condition:: tensor(2.2685e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0750e-09, dtype=torch.float64)
secont condition:: tensor(2.0750e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2605e-09, dtype=torch.float64)
secont condition:: tensor(2.2605e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3050e-10, dtype=torch.float64)
secont condition:: tensor(2.3050e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.912769079208374
curr_diff: 0 tensor(4.0853e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8394e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6526e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5362e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.1299e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1670e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5655e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0141e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252575
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.236796
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.228491
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222371
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.219715
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.211151
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.218016
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.214795
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 8, Batch: 0, Loss: 0.221000
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 9, Batch: 0, Loss: 0.218880
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.216197
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.215435
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215952
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.219546
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.219031
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217693
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.215717
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.215914
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.216084
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.216237
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.220267
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217101
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.218633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.212263
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215885
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216139
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215013
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213735
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.216338
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.213793
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.216015
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216060
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.217193
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.214645
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.217413
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.213872
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.216291
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 37, Batch: 0, Loss: 0.214870
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214202
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215175
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.218176
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213512
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.213042
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.213540
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216081
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.216823
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.215276
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.213103
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 48, Batch: 0, Loss: 0.212550
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.216438
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216459
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.215242
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.215845
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214887
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.217881
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.213741
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216039
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.213089
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.216347
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.09368824958801
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.53161287307739
time_baseline:: 45.66731929779053
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2299e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3435e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5762e-11, dtype=torch.float64)
secont condition:: tensor(1.5762e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9820e-11, dtype=torch.float64)
secont condition:: tensor(2.9820e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7968e-11, dtype=torch.float64)
secont condition:: tensor(6.7968e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3151e-11, dtype=torch.float64)
secont condition:: tensor(8.3151e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4762e-10, dtype=torch.float64)
secont condition:: tensor(1.4762e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3834e-10, dtype=torch.float64)
secont condition:: tensor(1.3834e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9184e-10, dtype=torch.float64)
secont condition:: tensor(1.9184e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2304e-10, dtype=torch.float64)
secont condition:: tensor(2.2304e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0731e-10, dtype=torch.float64)
secont condition:: tensor(2.0731e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8253e-10, dtype=torch.float64)
secont condition:: tensor(2.8253e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5809e-10, dtype=torch.float64)
secont condition:: tensor(3.5809e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8375e-10, dtype=torch.float64)
secont condition:: tensor(2.8375e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3687e-10, dtype=torch.float64)
secont condition:: tensor(2.3687e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7405e-10, dtype=torch.float64)
secont condition:: tensor(3.7405e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8057e-10, dtype=torch.float64)
secont condition:: tensor(2.8057e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0228e-10, dtype=torch.float64)
secont condition:: tensor(4.0228e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5884e-10, dtype=torch.float64)
secont condition:: tensor(5.5884e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3612e-10, dtype=torch.float64)
secont condition:: tensor(4.3612e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6139e-10, dtype=torch.float64)
secont condition:: tensor(3.6139e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6529e-10, dtype=torch.float64)
secont condition:: tensor(4.6529e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3812e-10, dtype=torch.float64)
secont condition:: tensor(5.3812e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8773e-10, dtype=torch.float64)
secont condition:: tensor(4.8773e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7051e-10, dtype=torch.float64)
secont condition:: tensor(5.7051e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3807e-10, dtype=torch.float64)
secont condition:: tensor(4.3807e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3910e-10, dtype=torch.float64)
secont condition:: tensor(4.3910e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5164e-10, dtype=torch.float64)
secont condition:: tensor(5.5164e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0491e-10, dtype=torch.float64)
secont condition:: tensor(6.0491e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2520e-10, dtype=torch.float64)
secont condition:: tensor(6.2520e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2697e-10, dtype=torch.float64)
secont condition:: tensor(7.2697e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3032e-10, dtype=torch.float64)
secont condition:: tensor(6.3032e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6474e-10, dtype=torch.float64)
secont condition:: tensor(5.6474e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7885e-10, dtype=torch.float64)
secont condition:: tensor(5.7885e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0850e-10, dtype=torch.float64)
secont condition:: tensor(6.0850e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8989e-10, dtype=torch.float64)
secont condition:: tensor(6.8989e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1830e-10, dtype=torch.float64)
secont condition:: tensor(6.1830e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7780e-10, dtype=torch.float64)
secont condition:: tensor(6.7780e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2194e-10, dtype=torch.float64)
secont condition:: tensor(8.2194e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5547e-10, dtype=torch.float64)
secont condition:: tensor(7.5547e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8970e-10, dtype=torch.float64)
secont condition:: tensor(9.8970e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0958e-10, dtype=torch.float64)
secont condition:: tensor(8.0958e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1030e-10, dtype=torch.float64)
secont condition:: tensor(9.1030e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0112e-10, dtype=torch.float64)
secont condition:: tensor(9.0112e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0560e-09, dtype=torch.float64)
secont condition:: tensor(1.0560e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1798e-09, dtype=torch.float64)
secont condition:: tensor(1.1798e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0783e-09, dtype=torch.float64)
secont condition:: tensor(1.0783e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1967e-09, dtype=torch.float64)
secont condition:: tensor(1.1967e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2096e-09, dtype=torch.float64)
secont condition:: tensor(1.2096e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3835e-09, dtype=torch.float64)
secont condition:: tensor(1.3835e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3316e-09, dtype=torch.float64)
secont condition:: tensor(1.3316e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6774e-09, dtype=torch.float64)
secont condition:: tensor(1.6774e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5418e-09, dtype=torch.float64)
secont condition:: tensor(1.5418e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5162e-09, dtype=torch.float64)
secont condition:: tensor(1.5162e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2944e-09, dtype=torch.float64)
secont condition:: tensor(1.2944e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4491e-09, dtype=torch.float64)
secont condition:: tensor(1.4491e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6283e-09, dtype=torch.float64)
secont condition:: tensor(1.6283e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3406e-09, dtype=torch.float64)
secont condition:: tensor(1.3406e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7866e-09, dtype=torch.float64)
secont condition:: tensor(1.7866e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1428e-09, dtype=torch.float64)
secont condition:: tensor(2.1428e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7059e-09, dtype=torch.float64)
secont condition:: tensor(1.7059e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0614e-09, dtype=torch.float64)
secont condition:: tensor(2.0614e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5966e-09, dtype=torch.float64)
secont condition:: tensor(1.5966e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7869e-09, dtype=torch.float64)
secont condition:: tensor(2.7869e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1988e-09, dtype=torch.float64)
secont condition:: tensor(2.1988e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.09629487991333
curr_diff: 0 tensor(3.2933e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3159e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9332e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5667e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3231e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2095e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4032e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6501e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250453
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.228302
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.221888
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.221134
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.216208
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.221105
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.218235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.214108
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.217088
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.218864
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.216993
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 11, Batch: 0, Loss: 0.211853
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.212440
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.215532
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.211750
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.213545
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.214387
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.212924
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.215227
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.224203
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.223220
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217685
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.212738
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.207547
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214176
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.208691
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.208768
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.213245
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.222738
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.216602
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.211338
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.212464
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.006641149520874
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.593839406967163
time_baseline:: 22.664124727249146
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8433e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7070e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7826e-11, dtype=torch.float64)
secont condition:: tensor(5.7826e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0298e-11, dtype=torch.float64)
secont condition:: tensor(5.0298e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6845e-11, dtype=torch.float64)
secont condition:: tensor(3.6845e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0805e-10, dtype=torch.float64)
secont condition:: tensor(1.0805e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2002e-10, dtype=torch.float64)
secont condition:: tensor(1.2002e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8936e-10, dtype=torch.float64)
secont condition:: tensor(1.8936e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5084e-10, dtype=torch.float64)
secont condition:: tensor(1.5084e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1368e-10, dtype=torch.float64)
secont condition:: tensor(3.1368e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7229e-10, dtype=torch.float64)
secont condition:: tensor(3.7229e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1364e-10, dtype=torch.float64)
secont condition:: tensor(3.1364e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2288e-10, dtype=torch.float64)
secont condition:: tensor(4.2288e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4558e-10, dtype=torch.float64)
secont condition:: tensor(3.4558e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5526e-10, dtype=torch.float64)
secont condition:: tensor(5.5526e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4178e-10, dtype=torch.float64)
secont condition:: tensor(5.4178e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3594e-10, dtype=torch.float64)
secont condition:: tensor(4.3594e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5966e-10, dtype=torch.float64)
secont condition:: tensor(3.5966e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9435e-10, dtype=torch.float64)
secont condition:: tensor(2.9435e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4581e-10, dtype=torch.float64)
secont condition:: tensor(5.4581e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6785e-10, dtype=torch.float64)
secont condition:: tensor(4.6785e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7441e-10, dtype=torch.float64)
secont condition:: tensor(3.7441e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3343e-10, dtype=torch.float64)
secont condition:: tensor(5.3343e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0871e-10, dtype=torch.float64)
secont condition:: tensor(4.0871e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1609e-10, dtype=torch.float64)
secont condition:: tensor(5.1609e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1222e-10, dtype=torch.float64)
secont condition:: tensor(4.1222e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8725e-10, dtype=torch.float64)
secont condition:: tensor(3.8725e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0856e-10, dtype=torch.float64)
secont condition:: tensor(7.0856e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2929e-10, dtype=torch.float64)
secont condition:: tensor(5.2929e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8373e-10, dtype=torch.float64)
secont condition:: tensor(4.8373e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0662e-10, dtype=torch.float64)
secont condition:: tensor(4.0662e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7908e-10, dtype=torch.float64)
secont condition:: tensor(3.7908e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0766e-10, dtype=torch.float64)
secont condition:: tensor(9.0766e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8377e-10, dtype=torch.float64)
secont condition:: tensor(7.8377e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8777e-10, dtype=torch.float64)
secont condition:: tensor(5.8777e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8259e-10, dtype=torch.float64)
secont condition:: tensor(6.8259e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3173e-10, dtype=torch.float64)
secont condition:: tensor(7.3173e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4687e-10, dtype=torch.float64)
secont condition:: tensor(5.4687e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7286e-10, dtype=torch.float64)
secont condition:: tensor(5.7286e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6291e-10, dtype=torch.float64)
secont condition:: tensor(3.6291e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0972e-10, dtype=torch.float64)
secont condition:: tensor(8.0972e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4923e-10, dtype=torch.float64)
secont condition:: tensor(8.4923e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0643e-09, dtype=torch.float64)
secont condition:: tensor(1.0643e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0497e-09, dtype=torch.float64)
secont condition:: tensor(1.0497e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0841e-09, dtype=torch.float64)
secont condition:: tensor(1.0841e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0058e-10, dtype=torch.float64)
secont condition:: tensor(5.0058e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3404e-09, dtype=torch.float64)
secont condition:: tensor(1.3404e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6800e-09, dtype=torch.float64)
secont condition:: tensor(1.6800e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4908e-09, dtype=torch.float64)
secont condition:: tensor(1.4908e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4426e-09, dtype=torch.float64)
secont condition:: tensor(1.4426e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7903e-09, dtype=torch.float64)
secont condition:: tensor(1.7903e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8308e-09, dtype=torch.float64)
secont condition:: tensor(1.8308e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7004e-09, dtype=torch.float64)
secont condition:: tensor(1.7004e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0247e-09, dtype=torch.float64)
secont condition:: tensor(2.0247e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4535e-09, dtype=torch.float64)
secont condition:: tensor(2.4535e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3580e-09, dtype=torch.float64)
secont condition:: tensor(3.3580e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9681e-09, dtype=torch.float64)
secont condition:: tensor(1.9681e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8758e-09, dtype=torch.float64)
secont condition:: tensor(1.8758e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9123e-09, dtype=torch.float64)
secont condition:: tensor(2.9123e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7081e-09, dtype=torch.float64)
secont condition:: tensor(2.7081e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.794541597366333
curr_diff: 0 tensor(4.4479e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1450e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7998e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4835e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2950e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.9369e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2360e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253025
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.226047
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.224608
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.225149
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.221475
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.214678
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.216999
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.216229
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.214225
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 9, Batch: 0, Loss: 0.221745
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.208749
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 11, Batch: 0, Loss: 0.220196
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.209289
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.221705
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.216798
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.215058
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.212402
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.208999
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.218932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 19, Batch: 0, Loss: 0.215000
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.208494
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217166
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.214787
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 23, Batch: 0, Loss: 0.215377
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.211804
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.210626
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.210309
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.216391
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.217852
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.211395
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.218471
Test Avg. Loss: 0.000021, Accuracy: 0.945800
training_time:: 30.73696780204773
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.582088232040405
time_baseline:: 22.655400037765503
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7151e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5289e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4731e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3723e-33, dtype=torch.float64)
secont condition:: tensor(7.3723e-33, dtype=torch.float64)
curr_secont condition:: tensor(4.9269e-11, dtype=torch.float64)
secont condition:: tensor(4.9269e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.3208e-11, dtype=torch.float64)
secont condition:: tensor(4.3208e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2817e-10, dtype=torch.float64)
secont condition:: tensor(1.2817e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2697e-10, dtype=torch.float64)
secont condition:: tensor(1.2697e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6455e-11, dtype=torch.float64)
secont condition:: tensor(7.6455e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9421e-10, dtype=torch.float64)
secont condition:: tensor(1.9421e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8641e-10, dtype=torch.float64)
secont condition:: tensor(2.8641e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3358e-10, dtype=torch.float64)
secont condition:: tensor(2.3358e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2125e-10, dtype=torch.float64)
secont condition:: tensor(2.2125e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7042e-10, dtype=torch.float64)
secont condition:: tensor(2.7042e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3766e-10, dtype=torch.float64)
secont condition:: tensor(4.3766e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5253e-10, dtype=torch.float64)
secont condition:: tensor(7.5253e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4777e-10, dtype=torch.float64)
secont condition:: tensor(6.4777e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8741e-10, dtype=torch.float64)
secont condition:: tensor(4.8741e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4024e-10, dtype=torch.float64)
secont condition:: tensor(4.4024e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8580e-10, dtype=torch.float64)
secont condition:: tensor(5.8580e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3013e-10, dtype=torch.float64)
secont condition:: tensor(4.3013e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9797e-10, dtype=torch.float64)
secont condition:: tensor(4.9797e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0164e-10, dtype=torch.float64)
secont condition:: tensor(5.0164e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7650e-10, dtype=torch.float64)
secont condition:: tensor(4.7650e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2445e-10, dtype=torch.float64)
secont condition:: tensor(7.2445e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7874e-10, dtype=torch.float64)
secont condition:: tensor(7.7874e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8675e-10, dtype=torch.float64)
secont condition:: tensor(4.8675e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4068e-10, dtype=torch.float64)
secont condition:: tensor(5.4068e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7957e-10, dtype=torch.float64)
secont condition:: tensor(4.7957e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0058e-09, dtype=torch.float64)
secont condition:: tensor(1.0058e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0986e-10, dtype=torch.float64)
secont condition:: tensor(5.0986e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3119e-10, dtype=torch.float64)
secont condition:: tensor(6.3119e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5870e-10, dtype=torch.float64)
secont condition:: tensor(4.5870e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7526e-10, dtype=torch.float64)
secont condition:: tensor(6.7526e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0524e-10, dtype=torch.float64)
secont condition:: tensor(5.0524e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0725e-10, dtype=torch.float64)
secont condition:: tensor(6.0725e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8532e-10, dtype=torch.float64)
secont condition:: tensor(5.8532e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8087e-10, dtype=torch.float64)
secont condition:: tensor(5.8087e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8836e-10, dtype=torch.float64)
secont condition:: tensor(3.8836e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3661e-10, dtype=torch.float64)
secont condition:: tensor(4.3661e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2880e-10, dtype=torch.float64)
secont condition:: tensor(6.2880e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7137e-10, dtype=torch.float64)
secont condition:: tensor(5.7137e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5148e-10, dtype=torch.float64)
secont condition:: tensor(8.5148e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3998e-10, dtype=torch.float64)
secont condition:: tensor(9.3998e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2919e-10, dtype=torch.float64)
secont condition:: tensor(7.2919e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2125e-09, dtype=torch.float64)
secont condition:: tensor(1.2125e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5096e-09, dtype=torch.float64)
secont condition:: tensor(1.5096e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3801e-09, dtype=torch.float64)
secont condition:: tensor(1.3801e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5857e-09, dtype=torch.float64)
secont condition:: tensor(1.5857e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6121e-09, dtype=torch.float64)
secont condition:: tensor(1.6121e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1554e-09, dtype=torch.float64)
secont condition:: tensor(2.1554e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8661e-09, dtype=torch.float64)
secont condition:: tensor(1.8661e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4654e-09, dtype=torch.float64)
secont condition:: tensor(2.4654e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6146e-09, dtype=torch.float64)
secont condition:: tensor(1.6146e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7184e-09, dtype=torch.float64)
secont condition:: tensor(1.7184e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8263e-09, dtype=torch.float64)
secont condition:: tensor(1.8263e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1345e-09, dtype=torch.float64)
secont condition:: tensor(2.1345e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0578e-09, dtype=torch.float64)
secont condition:: tensor(2.0578e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9933e-09, dtype=torch.float64)
secont condition:: tensor(1.9933e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6635e-09, dtype=torch.float64)
secont condition:: tensor(1.6635e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4437e-09, dtype=torch.float64)
secont condition:: tensor(2.4437e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2235e-09, dtype=torch.float64)
secont condition:: tensor(2.2235e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4376e-09, dtype=torch.float64)
secont condition:: tensor(2.4376e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.588201284408569
curr_diff: 0 tensor(4.6033e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6980e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5336e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8066e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6497e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9158e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7734e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8000e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255117
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.222207
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.226787
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.219418
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.211703
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.217514
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.218181
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.221648
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.215175
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.224350
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.221385
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.218497
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.215456
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.216273
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 15, Batch: 0, Loss: 0.209382
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.217692
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.221251
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.217204
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.210929
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217183
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.216646
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 22, Batch: 0, Loss: 0.216042
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 23, Batch: 0, Loss: 0.220213
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.216306
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.217122
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.214978
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216418
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.223866
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.218055
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.221043
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.219376
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.237653732299805
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.755034685134888
time_baseline:: 22.824900150299072
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3949e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2419e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2164e-33, dtype=torch.float64)
secont condition:: tensor(6.2164e-33, dtype=torch.float64)
curr_secont condition:: tensor(5.7176e-11, dtype=torch.float64)
secont condition:: tensor(5.7176e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.8886e-11, dtype=torch.float64)
secont condition:: tensor(7.8886e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1918e-11, dtype=torch.float64)
secont condition:: tensor(7.1918e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4266e-10, dtype=torch.float64)
secont condition:: tensor(2.4266e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0933e-10, dtype=torch.float64)
secont condition:: tensor(2.0933e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6527e-10, dtype=torch.float64)
secont condition:: tensor(1.6527e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5005e-10, dtype=torch.float64)
secont condition:: tensor(1.5005e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2355e-10, dtype=torch.float64)
secont condition:: tensor(1.2355e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2008e-10, dtype=torch.float64)
secont condition:: tensor(3.2008e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4595e-10, dtype=torch.float64)
secont condition:: tensor(1.4595e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1213e-10, dtype=torch.float64)
secont condition:: tensor(2.1213e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8442e-10, dtype=torch.float64)
secont condition:: tensor(1.8442e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7336e-10, dtype=torch.float64)
secont condition:: tensor(1.7336e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3690e-10, dtype=torch.float64)
secont condition:: tensor(2.3690e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1599e-10, dtype=torch.float64)
secont condition:: tensor(4.1599e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2854e-10, dtype=torch.float64)
secont condition:: tensor(3.2854e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3261e-10, dtype=torch.float64)
secont condition:: tensor(5.3261e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0586e-10, dtype=torch.float64)
secont condition:: tensor(5.0586e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3123e-10, dtype=torch.float64)
secont condition:: tensor(4.3123e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3530e-10, dtype=torch.float64)
secont condition:: tensor(5.3530e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6873e-10, dtype=torch.float64)
secont condition:: tensor(4.6873e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4500e-10, dtype=torch.float64)
secont condition:: tensor(2.4500e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8533e-10, dtype=torch.float64)
secont condition:: tensor(4.8533e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7046e-10, dtype=torch.float64)
secont condition:: tensor(4.7046e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4569e-10, dtype=torch.float64)
secont condition:: tensor(7.4569e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5917e-10, dtype=torch.float64)
secont condition:: tensor(6.5917e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9330e-10, dtype=torch.float64)
secont condition:: tensor(6.9330e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4548e-10, dtype=torch.float64)
secont condition:: tensor(8.4548e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8457e-10, dtype=torch.float64)
secont condition:: tensor(7.8457e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0282e-09, dtype=torch.float64)
secont condition:: tensor(1.0282e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5576e-10, dtype=torch.float64)
secont condition:: tensor(7.5576e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0588e-10, dtype=torch.float64)
secont condition:: tensor(8.0588e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1949e-10, dtype=torch.float64)
secont condition:: tensor(9.1949e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2010e-10, dtype=torch.float64)
secont condition:: tensor(8.2010e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8873e-10, dtype=torch.float64)
secont condition:: tensor(5.8873e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9309e-10, dtype=torch.float64)
secont condition:: tensor(2.9309e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1076e-10, dtype=torch.float64)
secont condition:: tensor(9.1076e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2030e-09, dtype=torch.float64)
secont condition:: tensor(1.2030e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2070e-09, dtype=torch.float64)
secont condition:: tensor(1.2070e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3005e-10, dtype=torch.float64)
secont condition:: tensor(6.3005e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8392e-10, dtype=torch.float64)
secont condition:: tensor(4.8392e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1895e-09, dtype=torch.float64)
secont condition:: tensor(1.1895e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0695e-09, dtype=torch.float64)
secont condition:: tensor(1.0695e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5315e-09, dtype=torch.float64)
secont condition:: tensor(1.5315e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3673e-09, dtype=torch.float64)
secont condition:: tensor(1.3673e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3449e-09, dtype=torch.float64)
secont condition:: tensor(1.3449e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7980e-09, dtype=torch.float64)
secont condition:: tensor(1.7980e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4514e-09, dtype=torch.float64)
secont condition:: tensor(1.4514e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0742e-09, dtype=torch.float64)
secont condition:: tensor(1.0742e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4901e-09, dtype=torch.float64)
secont condition:: tensor(1.4901e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4735e-09, dtype=torch.float64)
secont condition:: tensor(1.4735e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9142e-09, dtype=torch.float64)
secont condition:: tensor(1.9142e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0395e-09, dtype=torch.float64)
secont condition:: tensor(1.0395e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7761e-09, dtype=torch.float64)
secont condition:: tensor(3.7761e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0882e-09, dtype=torch.float64)
secont condition:: tensor(2.0882e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9762e-09, dtype=torch.float64)
secont condition:: tensor(2.9762e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7357e-09, dtype=torch.float64)
secont condition:: tensor(2.7357e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5135e-09, dtype=torch.float64)
secont condition:: tensor(2.5135e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6660e-09, dtype=torch.float64)
secont condition:: tensor(2.6660e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.648550510406494
curr_diff: 0 tensor(4.2639e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4283e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6491e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6428e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.3124e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8422e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6725e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7215e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.246437
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.227076
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 2, Batch: 0, Loss: 0.220956
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.215773
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 4, Batch: 0, Loss: 0.218429
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.220002
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.219039
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.212142
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.215004
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.211931
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.217583
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 11, Batch: 0, Loss: 0.220895
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.220907
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.214380
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.217360
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 15, Batch: 0, Loss: 0.210294
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 16, Batch: 0, Loss: 0.217822
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.216969
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.209228
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.218136
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.214375
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.211435
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.215295
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217060
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.219586
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 25, Batch: 0, Loss: 0.213240
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.214450
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.217048
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.221178
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.210454
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.216443
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.216480
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.263017654418945
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.706501483917236
time_baseline:: 22.777403593063354
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0195e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5551e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6334e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2202e-11, dtype=torch.float64)
secont condition:: tensor(6.2202e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7898e-11, dtype=torch.float64)
secont condition:: tensor(3.7898e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0098e-11, dtype=torch.float64)
secont condition:: tensor(3.0098e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2437e-10, dtype=torch.float64)
secont condition:: tensor(1.2437e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5969e-10, dtype=torch.float64)
secont condition:: tensor(1.5969e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1367e-10, dtype=torch.float64)
secont condition:: tensor(1.1367e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5046e-10, dtype=torch.float64)
secont condition:: tensor(2.5046e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3613e-10, dtype=torch.float64)
secont condition:: tensor(2.3613e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0418e-10, dtype=torch.float64)
secont condition:: tensor(2.0418e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5094e-10, dtype=torch.float64)
secont condition:: tensor(1.5094e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4986e-10, dtype=torch.float64)
secont condition:: tensor(2.4986e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5396e-10, dtype=torch.float64)
secont condition:: tensor(4.5396e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0198e-10, dtype=torch.float64)
secont condition:: tensor(3.0198e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9995e-10, dtype=torch.float64)
secont condition:: tensor(4.9995e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4021e-10, dtype=torch.float64)
secont condition:: tensor(5.4021e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5148e-10, dtype=torch.float64)
secont condition:: tensor(4.5148e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8906e-10, dtype=torch.float64)
secont condition:: tensor(5.8906e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7029e-10, dtype=torch.float64)
secont condition:: tensor(4.7029e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7719e-10, dtype=torch.float64)
secont condition:: tensor(3.7719e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5935e-10, dtype=torch.float64)
secont condition:: tensor(6.5935e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9985e-10, dtype=torch.float64)
secont condition:: tensor(6.9985e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3399e-10, dtype=torch.float64)
secont condition:: tensor(9.3399e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5428e-10, dtype=torch.float64)
secont condition:: tensor(6.5428e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8369e-10, dtype=torch.float64)
secont condition:: tensor(4.8369e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8326e-10, dtype=torch.float64)
secont condition:: tensor(4.8326e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8461e-10, dtype=torch.float64)
secont condition:: tensor(4.8461e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7660e-10, dtype=torch.float64)
secont condition:: tensor(6.7660e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2259e-10, dtype=torch.float64)
secont condition:: tensor(6.2259e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9034e-10, dtype=torch.float64)
secont condition:: tensor(5.9034e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5328e-10, dtype=torch.float64)
secont condition:: tensor(6.5328e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4735e-10, dtype=torch.float64)
secont condition:: tensor(8.4735e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1525e-10, dtype=torch.float64)
secont condition:: tensor(6.1525e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2522e-09, dtype=torch.float64)
secont condition:: tensor(1.2522e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3418e-10, dtype=torch.float64)
secont condition:: tensor(7.3418e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9835e-10, dtype=torch.float64)
secont condition:: tensor(7.9835e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3618e-10, dtype=torch.float64)
secont condition:: tensor(5.3618e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8929e-10, dtype=torch.float64)
secont condition:: tensor(6.8929e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9934e-10, dtype=torch.float64)
secont condition:: tensor(4.9934e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7560e-10, dtype=torch.float64)
secont condition:: tensor(5.7560e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4168e-10, dtype=torch.float64)
secont condition:: tensor(9.4168e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7419e-10, dtype=torch.float64)
secont condition:: tensor(6.7419e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0784e-10, dtype=torch.float64)
secont condition:: tensor(7.0784e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2473e-09, dtype=torch.float64)
secont condition:: tensor(1.2473e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7825e-10, dtype=torch.float64)
secont condition:: tensor(8.7825e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3840e-09, dtype=torch.float64)
secont condition:: tensor(1.3840e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3889e-09, dtype=torch.float64)
secont condition:: tensor(1.3889e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3945e-09, dtype=torch.float64)
secont condition:: tensor(1.3945e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4424e-09, dtype=torch.float64)
secont condition:: tensor(1.4424e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9259e-09, dtype=torch.float64)
secont condition:: tensor(1.9259e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6376e-09, dtype=torch.float64)
secont condition:: tensor(1.6376e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9324e-09, dtype=torch.float64)
secont condition:: tensor(1.9324e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6753e-09, dtype=torch.float64)
secont condition:: tensor(1.6753e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7796e-09, dtype=torch.float64)
secont condition:: tensor(1.7796e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2170e-09, dtype=torch.float64)
secont condition:: tensor(2.2170e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4565e-09, dtype=torch.float64)
secont condition:: tensor(2.4565e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4173e-09, dtype=torch.float64)
secont condition:: tensor(2.4173e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4165e-09, dtype=torch.float64)
secont condition:: tensor(2.4165e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7950e-09, dtype=torch.float64)
secont condition:: tensor(2.7950e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.924760103225708
curr_diff: 0 tensor(4.9300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7719e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0446e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0611e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.9698e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8550e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254863
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.228720
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 2, Batch: 0, Loss: 0.225538
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.219790
Test Avg. Loss: 0.000021, Accuracy: 0.944600
Train - Epoch 4, Batch: 0, Loss: 0.219413
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.214399
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.213853
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.213762
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.217462
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.216595
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.217985
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.212660
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.212792
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.209091
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.211818
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.215609
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.218864
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.212174
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.221286
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215420
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.214059
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.222570
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.218178
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.219912
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 24, Batch: 0, Loss: 0.212017
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.210532
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.214737
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.218461
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.213350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.210788
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.209605
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.217902
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.02532196044922
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.64061164855957
time_baseline:: 22.709991455078125
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6754e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9232e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1808e-33, dtype=torch.float64)
secont condition:: tensor(6.1808e-33, dtype=torch.float64)
curr_secont condition:: tensor(9.0612e-11, dtype=torch.float64)
secont condition:: tensor(9.0612e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8156e-11, dtype=torch.float64)
secont condition:: tensor(6.8156e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5744e-11, dtype=torch.float64)
secont condition:: tensor(7.5744e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5530e-10, dtype=torch.float64)
secont condition:: tensor(1.5530e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7224e-10, dtype=torch.float64)
secont condition:: tensor(2.7224e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6472e-10, dtype=torch.float64)
secont condition:: tensor(1.6472e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3685e-10, dtype=torch.float64)
secont condition:: tensor(1.3685e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2002e-10, dtype=torch.float64)
secont condition:: tensor(1.2002e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1889e-10, dtype=torch.float64)
secont condition:: tensor(1.1889e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8615e-10, dtype=torch.float64)
secont condition:: tensor(1.8615e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2639e-10, dtype=torch.float64)
secont condition:: tensor(3.2639e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9610e-10, dtype=torch.float64)
secont condition:: tensor(2.9610e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5788e-10, dtype=torch.float64)
secont condition:: tensor(4.5788e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3673e-10, dtype=torch.float64)
secont condition:: tensor(3.3673e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8807e-10, dtype=torch.float64)
secont condition:: tensor(4.8807e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9724e-10, dtype=torch.float64)
secont condition:: tensor(3.9724e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9661e-10, dtype=torch.float64)
secont condition:: tensor(4.9661e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1464e-10, dtype=torch.float64)
secont condition:: tensor(4.1464e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4657e-10, dtype=torch.float64)
secont condition:: tensor(5.4657e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5405e-10, dtype=torch.float64)
secont condition:: tensor(9.5405e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9250e-10, dtype=torch.float64)
secont condition:: tensor(6.9250e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3752e-10, dtype=torch.float64)
secont condition:: tensor(6.3752e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6073e-10, dtype=torch.float64)
secont condition:: tensor(5.6073e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0945e-10, dtype=torch.float64)
secont condition:: tensor(5.0945e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5738e-10, dtype=torch.float64)
secont condition:: tensor(5.5738e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2503e-10, dtype=torch.float64)
secont condition:: tensor(5.2503e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6145e-10, dtype=torch.float64)
secont condition:: tensor(5.6145e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8381e-10, dtype=torch.float64)
secont condition:: tensor(4.8381e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7082e-10, dtype=torch.float64)
secont condition:: tensor(5.7082e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5048e-10, dtype=torch.float64)
secont condition:: tensor(5.5048e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2110e-10, dtype=torch.float64)
secont condition:: tensor(7.2110e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8635e-10, dtype=torch.float64)
secont condition:: tensor(6.8635e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7766e-10, dtype=torch.float64)
secont condition:: tensor(8.7766e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2941e-10, dtype=torch.float64)
secont condition:: tensor(8.2941e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8533e-10, dtype=torch.float64)
secont condition:: tensor(6.8533e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1145e-10, dtype=torch.float64)
secont condition:: tensor(8.1145e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5512e-10, dtype=torch.float64)
secont condition:: tensor(5.5512e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0426e-10, dtype=torch.float64)
secont condition:: tensor(6.0426e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5559e-10, dtype=torch.float64)
secont condition:: tensor(6.5559e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4600e-10, dtype=torch.float64)
secont condition:: tensor(9.4600e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1380e-10, dtype=torch.float64)
secont condition:: tensor(8.1380e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-09, dtype=torch.float64)
secont condition:: tensor(1.0259e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3240e-09, dtype=torch.float64)
secont condition:: tensor(1.3240e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8327e-09, dtype=torch.float64)
secont condition:: tensor(1.8327e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3815e-09, dtype=torch.float64)
secont condition:: tensor(1.3815e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1697e-09, dtype=torch.float64)
secont condition:: tensor(1.1697e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8691e-09, dtype=torch.float64)
secont condition:: tensor(1.8691e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5448e-09, dtype=torch.float64)
secont condition:: tensor(1.5448e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6010e-09, dtype=torch.float64)
secont condition:: tensor(1.6010e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5564e-09, dtype=torch.float64)
secont condition:: tensor(1.5564e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9933e-09, dtype=torch.float64)
secont condition:: tensor(1.9933e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0306e-09, dtype=torch.float64)
secont condition:: tensor(2.0306e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9314e-09, dtype=torch.float64)
secont condition:: tensor(1.9314e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3296e-09, dtype=torch.float64)
secont condition:: tensor(2.3296e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0660e-09, dtype=torch.float64)
secont condition:: tensor(2.0660e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5995e-09, dtype=torch.float64)
secont condition:: tensor(2.5995e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3217e-09, dtype=torch.float64)
secont condition:: tensor(2.3217e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1443e-09, dtype=torch.float64)
secont condition:: tensor(2.1443e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1386e-09, dtype=torch.float64)
secont condition:: tensor(3.1386e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1487e-09, dtype=torch.float64)
secont condition:: tensor(2.1487e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.684981822967529
curr_diff: 0 tensor(5.6158e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6034e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1151e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2925e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.6589e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3930e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.8190e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0848e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243278
Train - Epoch 0, Batch: 10, Loss: 0.226808
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.226496
Train - Epoch 1, Batch: 10, Loss: 0.205276
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 2, Batch: 0, Loss: 0.204320
Train - Epoch 2, Batch: 10, Loss: 0.211674
Test Avg. Loss: 0.000060, Accuracy: 0.946200
Train - Epoch 3, Batch: 0, Loss: 0.220951
Train - Epoch 3, Batch: 10, Loss: 0.215526
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 4, Batch: 0, Loss: 0.212896
Train - Epoch 4, Batch: 10, Loss: 0.215773
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.214220
Train - Epoch 5, Batch: 10, Loss: 0.213189
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.215215
Train - Epoch 6, Batch: 10, Loss: 0.219561
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.214753
Train - Epoch 7, Batch: 10, Loss: 0.222460
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 7.080444574356079
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.747441291809082
time_baseline:: 4.765230417251587
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0477e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2723e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9417e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5734e-33, dtype=torch.float64)
secont condition:: tensor(8.5734e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7630e-32, dtype=torch.float64)
secont condition:: tensor(1.7630e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0356e-32, dtype=torch.float64)
secont condition:: tensor(2.0356e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7345e-32, dtype=torch.float64)
secont condition:: tensor(4.7345e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.5113e-32, dtype=torch.float64)
secont condition:: tensor(8.5113e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0335e-31, dtype=torch.float64)
secont condition:: tensor(1.0335e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4222e-31, dtype=torch.float64)
secont condition:: tensor(1.4222e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.6544e-10, dtype=torch.float64)
secont condition:: tensor(4.6544e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9421e-10, dtype=torch.float64)
secont condition:: tensor(3.9421e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9155e-10, dtype=torch.float64)
secont condition:: tensor(3.9155e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2569e-10, dtype=torch.float64)
secont condition:: tensor(2.2569e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2524e-10, dtype=torch.float64)
secont condition:: tensor(2.2524e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9475e-10, dtype=torch.float64)
secont condition:: tensor(8.9475e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8134e-10, dtype=torch.float64)
secont condition:: tensor(6.8134e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3114e-10, dtype=torch.float64)
secont condition:: tensor(5.3114e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1196e-10, dtype=torch.float64)
secont condition:: tensor(2.1196e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0141e-10, dtype=torch.float64)
secont condition:: tensor(4.0141e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0908e-10, dtype=torch.float64)
secont condition:: tensor(3.0908e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5126e-09, dtype=torch.float64)
secont condition:: tensor(1.5126e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9170e-10, dtype=torch.float64)
secont condition:: tensor(1.9170e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4549e-10, dtype=torch.float64)
secont condition:: tensor(1.4549e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1550e-10, dtype=torch.float64)
secont condition:: tensor(1.1550e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0429e-10, dtype=torch.float64)
secont condition:: tensor(8.0429e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1311e-10, dtype=torch.float64)
secont condition:: tensor(7.1311e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3885e-09, dtype=torch.float64)
secont condition:: tensor(1.3885e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1744e-09, dtype=torch.float64)
secont condition:: tensor(1.1744e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1483e-09, dtype=torch.float64)
secont condition:: tensor(1.1483e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5004e-10, dtype=torch.float64)
secont condition:: tensor(9.5004e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0945e-10, dtype=torch.float64)
secont condition:: tensor(7.0945e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2313e-10, dtype=torch.float64)
secont condition:: tensor(6.2313e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1823e-10, dtype=torch.float64)
secont condition:: tensor(5.1823e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0594e-10, dtype=torch.float64)
secont condition:: tensor(5.0594e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6945e-10, dtype=torch.float64)
secont condition:: tensor(4.6945e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0665e-10, dtype=torch.float64)
secont condition:: tensor(4.0665e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6976e-09, dtype=torch.float64)
secont condition:: tensor(1.6976e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7699e-09, dtype=torch.float64)
secont condition:: tensor(2.7699e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3650e-10, dtype=torch.float64)
secont condition:: tensor(9.3650e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4426e-09, dtype=torch.float64)
secont condition:: tensor(1.4426e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3729e-09, dtype=torch.float64)
secont condition:: tensor(1.3729e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1897e-09, dtype=torch.float64)
secont condition:: tensor(1.1897e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8193e-10, dtype=torch.float64)
secont condition:: tensor(5.8193e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5423e-09, dtype=torch.float64)
secont condition:: tensor(1.5423e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8457e-10, dtype=torch.float64)
secont condition:: tensor(8.8457e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3758e-10, dtype=torch.float64)
secont condition:: tensor(6.3758e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0807e-09, dtype=torch.float64)
secont condition:: tensor(1.0807e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2898e-09, dtype=torch.float64)
secont condition:: tensor(3.2898e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1543e-09, dtype=torch.float64)
secont condition:: tensor(1.1543e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2634e-09, dtype=torch.float64)
secont condition:: tensor(1.2634e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0442e-09, dtype=torch.float64)
secont condition:: tensor(2.0442e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9130e-09, dtype=torch.float64)
secont condition:: tensor(1.9130e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1821e-09, dtype=torch.float64)
secont condition:: tensor(3.1821e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9576e-09, dtype=torch.float64)
secont condition:: tensor(1.9576e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8123e-09, dtype=torch.float64)
secont condition:: tensor(2.8123e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8101e-10, dtype=torch.float64)
secont condition:: tensor(4.8101e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4155e-09, dtype=torch.float64)
secont condition:: tensor(2.4155e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3079e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1291e-09, dtype=torch.float64)
secont condition:: tensor(2.1291e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0299e-09, dtype=torch.float64)
secont condition:: tensor(2.0299e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0348e-09, dtype=torch.float64)
secont condition:: tensor(1.0348e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9172e-09, dtype=torch.float64)
secont condition:: tensor(1.9172e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2445e-09, dtype=torch.float64)
secont condition:: tensor(3.2445e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.301833152770996
curr_diff: 0 tensor(8.6777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0157e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8119e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0645e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.7567e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0303e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6104e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5397e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247155
Train - Epoch 0, Batch: 10, Loss: 0.227617
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.208222
Train - Epoch 1, Batch: 10, Loss: 0.224555
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.225347
Train - Epoch 2, Batch: 10, Loss: 0.222664
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.201682
Train - Epoch 3, Batch: 10, Loss: 0.224672
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.211449
Train - Epoch 4, Batch: 10, Loss: 0.207714
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 5, Batch: 0, Loss: 0.225190
Train - Epoch 5, Batch: 10, Loss: 0.212479
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.229842
Train - Epoch 6, Batch: 10, Loss: 0.224170
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 7, Batch: 0, Loss: 0.227929
Train - Epoch 7, Batch: 10, Loss: 0.209823
Test Avg. Loss: 0.000060, Accuracy: 0.945700
training_time:: 7.132896661758423
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.943938732147217
time_baseline:: 4.961362838745117
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4250e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1583e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6356e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0673e-33, dtype=torch.float64)
secont condition:: tensor(6.0673e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.5501e-32, dtype=torch.float64)
secont condition:: tensor(1.5501e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.7964e-32, dtype=torch.float64)
secont condition:: tensor(3.7964e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8989e-32, dtype=torch.float64)
secont condition:: tensor(4.8989e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.9931e-32, dtype=torch.float64)
secont condition:: tensor(7.9931e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.8921e-11, dtype=torch.float64)
secont condition:: tensor(5.8921e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.0611e-11, dtype=torch.float64)
secont condition:: tensor(8.0611e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4969e-11, dtype=torch.float64)
secont condition:: tensor(6.4969e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1848e-11, dtype=torch.float64)
secont condition:: tensor(4.1848e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0737e-11, dtype=torch.float64)
secont condition:: tensor(4.0737e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8285e-10, dtype=torch.float64)
secont condition:: tensor(3.8285e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0533e-10, dtype=torch.float64)
secont condition:: tensor(4.0533e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8495e-10, dtype=torch.float64)
secont condition:: tensor(9.8495e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0278e-09, dtype=torch.float64)
secont condition:: tensor(1.0278e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8110e-10, dtype=torch.float64)
secont condition:: tensor(6.8110e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0361e-10, dtype=torch.float64)
secont condition:: tensor(6.0361e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7463e-09, dtype=torch.float64)
secont condition:: tensor(1.7463e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1046e-09, dtype=torch.float64)
secont condition:: tensor(1.1046e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1220e-09, dtype=torch.float64)
secont condition:: tensor(1.1220e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6648e-10, dtype=torch.float64)
secont condition:: tensor(8.6648e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3353e-10, dtype=torch.float64)
secont condition:: tensor(6.3353e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0502e-10, dtype=torch.float64)
secont condition:: tensor(5.0502e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2930e-10, dtype=torch.float64)
secont condition:: tensor(5.2930e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7219e-09, dtype=torch.float64)
secont condition:: tensor(1.7219e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4977e-09, dtype=torch.float64)
secont condition:: tensor(1.4977e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6090e-10, dtype=torch.float64)
secont condition:: tensor(9.6090e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0664e-10, dtype=torch.float64)
secont condition:: tensor(9.0664e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1639e-10, dtype=torch.float64)
secont condition:: tensor(6.1639e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3972e-10, dtype=torch.float64)
secont condition:: tensor(7.3972e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3961e-10, dtype=torch.float64)
secont condition:: tensor(3.3961e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5886e-10, dtype=torch.float64)
secont condition:: tensor(4.5886e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9065e-10, dtype=torch.float64)
secont condition:: tensor(3.9065e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4085e-09, dtype=torch.float64)
secont condition:: tensor(1.4085e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1279e-09, dtype=torch.float64)
secont condition:: tensor(1.1279e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7573e-10, dtype=torch.float64)
secont condition:: tensor(8.7573e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5582e-10, dtype=torch.float64)
secont condition:: tensor(7.5582e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7462e-09, dtype=torch.float64)
secont condition:: tensor(1.7462e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6666e-09, dtype=torch.float64)
secont condition:: tensor(1.6666e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8933e-09, dtype=torch.float64)
secont condition:: tensor(1.8933e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5915e-10, dtype=torch.float64)
secont condition:: tensor(8.5915e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5280e-10, dtype=torch.float64)
secont condition:: tensor(3.5280e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2319e-09, dtype=torch.float64)
secont condition:: tensor(1.2319e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9433e-09, dtype=torch.float64)
secont condition:: tensor(1.9433e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0370e-09, dtype=torch.float64)
secont condition:: tensor(1.0370e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1430e-09, dtype=torch.float64)
secont condition:: tensor(2.1430e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8109e-09, dtype=torch.float64)
secont condition:: tensor(1.8109e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1274e-10, dtype=torch.float64)
secont condition:: tensor(7.1274e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2431e-09, dtype=torch.float64)
secont condition:: tensor(2.2431e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4363e-09, dtype=torch.float64)
secont condition:: tensor(1.4363e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7048e-09, dtype=torch.float64)
secont condition:: tensor(2.7048e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2054e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0070e-10, dtype=torch.float64)
secont condition:: tensor(1.0070e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8251e-09, dtype=torch.float64)
secont condition:: tensor(8.8251e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4328e-09, dtype=torch.float64)
secont condition:: tensor(1.4328e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8719e-09, dtype=torch.float64)
secont condition:: tensor(1.8719e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6107e-09, dtype=torch.float64)
secont condition:: tensor(2.6107e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2411e-09, dtype=torch.float64)
secont condition:: tensor(1.2411e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7491e-09, dtype=torch.float64)
secont condition:: tensor(1.7491e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6299e-09, dtype=torch.float64)
secont condition:: tensor(5.6299e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.18877911567688
curr_diff: 0 tensor(6.5072e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0781e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.2376e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.5523e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.5760e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8263e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6187e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2417e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251336
Train - Epoch 0, Batch: 10, Loss: 0.214202
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.215289
Train - Epoch 1, Batch: 10, Loss: 0.209180
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.225296
Train - Epoch 2, Batch: 10, Loss: 0.207144
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.216878
Train - Epoch 3, Batch: 10, Loss: 0.219803
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.230157
Train - Epoch 4, Batch: 10, Loss: 0.218574
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 5, Batch: 0, Loss: 0.223162
Train - Epoch 5, Batch: 10, Loss: 0.219340
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.220718
Train - Epoch 6, Batch: 10, Loss: 0.209132
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.232769
Train - Epoch 7, Batch: 10, Loss: 0.212683
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.0151026248931885
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.759693622589111
time_baseline:: 4.777748346328735
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1672e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4897e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3369e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8607e-33, dtype=torch.float64)
secont condition:: tensor(4.8607e-33, dtype=torch.float64)
curr_secont condition:: tensor(8.1476e-10, dtype=torch.float64)
secont condition:: tensor(8.1476e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8198e-10, dtype=torch.float64)
secont condition:: tensor(5.8198e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0890e-10, dtype=torch.float64)
secont condition:: tensor(4.0890e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5011e-10, dtype=torch.float64)
secont condition:: tensor(3.5011e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8139e-10, dtype=torch.float64)
secont condition:: tensor(2.8139e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2397e-10, dtype=torch.float64)
secont condition:: tensor(2.2397e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1535e-10, dtype=torch.float64)
secont condition:: tensor(3.1535e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6987e-10, dtype=torch.float64)
secont condition:: tensor(3.6987e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7650e-11, dtype=torch.float64)
secont condition:: tensor(8.7650e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0923e-10, dtype=torch.float64)
secont condition:: tensor(1.0923e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9743e-11, dtype=torch.float64)
secont condition:: tensor(8.9743e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1583e-10, dtype=torch.float64)
secont condition:: tensor(5.1583e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7533e-10, dtype=torch.float64)
secont condition:: tensor(6.7533e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0830e-10, dtype=torch.float64)
secont condition:: tensor(3.0830e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6958e-10, dtype=torch.float64)
secont condition:: tensor(2.6958e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2891e-10, dtype=torch.float64)
secont condition:: tensor(2.2891e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2069e-09, dtype=torch.float64)
secont condition:: tensor(1.2069e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6440e-10, dtype=torch.float64)
secont condition:: tensor(7.6440e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6738e-10, dtype=torch.float64)
secont condition:: tensor(5.6738e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8323e-10, dtype=torch.float64)
secont condition:: tensor(4.8323e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0964e-10, dtype=torch.float64)
secont condition:: tensor(4.0964e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4196e-10, dtype=torch.float64)
secont condition:: tensor(3.4196e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0735e-09, dtype=torch.float64)
secont condition:: tensor(1.0735e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3416e-10, dtype=torch.float64)
secont condition:: tensor(9.3416e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6011e-10, dtype=torch.float64)
secont condition:: tensor(8.6011e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3941e-10, dtype=torch.float64)
secont condition:: tensor(6.3941e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3760e-10, dtype=torch.float64)
secont condition:: tensor(5.3760e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.6723e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0731e-09, dtype=torch.float64)
secont condition:: tensor(1.0731e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.8032e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4238e-09, dtype=torch.float64)
secont condition:: tensor(1.4238e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1538e-09, dtype=torch.float64)
secont condition:: tensor(2.1538e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3464e-09, dtype=torch.float64)
secont condition:: tensor(1.3464e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3258e-10, dtype=torch.float64)
secont condition:: tensor(7.3258e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8190e-09, dtype=torch.float64)
secont condition:: tensor(1.8190e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4249e-09, dtype=torch.float64)
secont condition:: tensor(1.4249e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3094e-09, dtype=torch.float64)
secont condition:: tensor(1.3094e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6731e-10, dtype=torch.float64)
secont condition:: tensor(1.6731e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3964e-09, dtype=torch.float64)
secont condition:: tensor(1.3964e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6705e-10, dtype=torch.float64)
secont condition:: tensor(7.6705e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2836e-09, dtype=torch.float64)
secont condition:: tensor(1.2836e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2604e-09, dtype=torch.float64)
secont condition:: tensor(1.2604e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3725e-10, dtype=torch.float64)
secont condition:: tensor(5.3725e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1767e-09, dtype=torch.float64)
secont condition:: tensor(1.1767e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8766e-10, dtype=torch.float64)
secont condition:: tensor(6.8766e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8254e-09, dtype=torch.float64)
secont condition:: tensor(1.8254e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1880e-09, dtype=torch.float64)
secont condition:: tensor(2.1880e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0623e-09, dtype=torch.float64)
secont condition:: tensor(2.0623e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4223e-09, dtype=torch.float64)
secont condition:: tensor(1.4223e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5062e-09, dtype=torch.float64)
secont condition:: tensor(3.5062e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4173e-09, dtype=torch.float64)
secont condition:: tensor(3.4173e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2439e-09, dtype=torch.float64)
secont condition:: tensor(1.2439e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6845e-09, dtype=torch.float64)
secont condition:: tensor(2.6845e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4509e-09, dtype=torch.float64)
secont condition:: tensor(1.4509e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1766e-09, dtype=torch.float64)
secont condition:: tensor(2.1766e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8645e-09, dtype=torch.float64)
secont condition:: tensor(2.8645e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6096e-09, dtype=torch.float64)
secont condition:: tensor(4.6096e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9613e-09, dtype=torch.float64)
secont condition:: tensor(1.9613e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6564e-09, dtype=torch.float64)
secont condition:: tensor(1.6564e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1709e-09, dtype=torch.float64)
secont condition:: tensor(3.1709e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.205212116241455
curr_diff: 0 tensor(8.3674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9765e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5837e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0300e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.4152e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0092e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.8049e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235788
Train - Epoch 0, Batch: 10, Loss: 0.219738
Test Avg. Loss: 0.000061, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.211573
Train - Epoch 1, Batch: 10, Loss: 0.223332
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.216768
Train - Epoch 2, Batch: 10, Loss: 0.215058
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.206200
Train - Epoch 3, Batch: 10, Loss: 0.222066
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.212275
Train - Epoch 4, Batch: 10, Loss: 0.216814
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 5, Batch: 0, Loss: 0.205194
Train - Epoch 5, Batch: 10, Loss: 0.232044
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.213398
Train - Epoch 6, Batch: 10, Loss: 0.216717
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.212819
Train - Epoch 7, Batch: 10, Loss: 0.215267
Test Avg. Loss: 0.000060, Accuracy: 0.946000
training_time:: 7.039721488952637
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.988969802856445
time_baseline:: 5.006551265716553
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6636e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5283e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9315e-33, dtype=torch.float64)
secont condition:: tensor(8.9315e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.1876e-32, dtype=torch.float64)
secont condition:: tensor(1.1876e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2947e-32, dtype=torch.float64)
secont condition:: tensor(3.2947e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7528e-32, dtype=torch.float64)
secont condition:: tensor(4.7528e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.1136e-32, dtype=torch.float64)
secont condition:: tensor(7.1136e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1443e-10, dtype=torch.float64)
secont condition:: tensor(5.1443e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1669e-10, dtype=torch.float64)
secont condition:: tensor(4.1669e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7606e-10, dtype=torch.float64)
secont condition:: tensor(3.7606e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8177e-10, dtype=torch.float64)
secont condition:: tensor(2.8177e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0818e-10, dtype=torch.float64)
secont condition:: tensor(3.0818e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8850e-10, dtype=torch.float64)
secont condition:: tensor(1.8850e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1111e-10, dtype=torch.float64)
secont condition:: tensor(2.1111e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7989e-10, dtype=torch.float64)
secont condition:: tensor(1.7989e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5774e-10, dtype=torch.float64)
secont condition:: tensor(1.5774e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5003e-09, dtype=torch.float64)
secont condition:: tensor(1.5003e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1582e-09, dtype=torch.float64)
secont condition:: tensor(2.1582e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7234e-09, dtype=torch.float64)
secont condition:: tensor(1.7234e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4222e-09, dtype=torch.float64)
secont condition:: tensor(1.4222e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3224e-09, dtype=torch.float64)
secont condition:: tensor(1.3224e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7451e-09, dtype=torch.float64)
secont condition:: tensor(2.7451e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3684e-09, dtype=torch.float64)
secont condition:: tensor(2.3684e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7414e-09, dtype=torch.float64)
secont condition:: tensor(1.7414e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2598e-09, dtype=torch.float64)
secont condition:: tensor(1.2598e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2800e-09, dtype=torch.float64)
secont condition:: tensor(1.2800e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2677e-10, dtype=torch.float64)
secont condition:: tensor(8.2677e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9483e-10, dtype=torch.float64)
secont condition:: tensor(5.9483e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4321e-09, dtype=torch.float64)
secont condition:: tensor(1.4321e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9669e-10, dtype=torch.float64)
secont condition:: tensor(6.9669e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7068e-10, dtype=torch.float64)
secont condition:: tensor(4.7068e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6889e-10, dtype=torch.float64)
secont condition:: tensor(3.6889e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0631e-10, dtype=torch.float64)
secont condition:: tensor(4.0631e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4622e-10, dtype=torch.float64)
secont condition:: tensor(5.4622e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7066e-10, dtype=torch.float64)
secont condition:: tensor(3.7066e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1014e-11, dtype=torch.float64)
secont condition:: tensor(9.1014e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9628e-10, dtype=torch.float64)
secont condition:: tensor(4.9628e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6886e-10, dtype=torch.float64)
secont condition:: tensor(3.6886e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9537e-09, dtype=torch.float64)
secont condition:: tensor(1.9537e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0608e-09, dtype=torch.float64)
secont condition:: tensor(1.0608e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0680e-09, dtype=torch.float64)
secont condition:: tensor(1.0680e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7426e-10, dtype=torch.float64)
secont condition:: tensor(6.7426e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2989e-09, dtype=torch.float64)
secont condition:: tensor(1.2989e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3692e-09, dtype=torch.float64)
secont condition:: tensor(2.3692e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9969e-09, dtype=torch.float64)
secont condition:: tensor(1.9969e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3036e-09, dtype=torch.float64)
secont condition:: tensor(1.3036e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5326e-09, dtype=torch.float64)
secont condition:: tensor(1.5326e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6547e-09, dtype=torch.float64)
secont condition:: tensor(1.6547e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9598e-09, dtype=torch.float64)
secont condition:: tensor(1.9598e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8919e-09, dtype=torch.float64)
secont condition:: tensor(2.8919e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2969e-09, dtype=torch.float64)
secont condition:: tensor(2.2969e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9976e-10, dtype=torch.float64)
secont condition:: tensor(6.9976e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3201e-10, dtype=torch.float64)
secont condition:: tensor(4.3201e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1312e-09, dtype=torch.float64)
secont condition:: tensor(2.1312e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9364e-09, dtype=torch.float64)
secont condition:: tensor(2.9364e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5214e-09, dtype=torch.float64)
secont condition:: tensor(1.5214e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4334e-09, dtype=torch.float64)
secont condition:: tensor(2.4334e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9485e-10, dtype=torch.float64)
secont condition:: tensor(9.9485e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1970e-10, dtype=torch.float64)
secont condition:: tensor(2.1970e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2697e-09, dtype=torch.float64)
secont condition:: tensor(3.2697e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.1814308166503906
curr_diff: 0 tensor(6.2988e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.3760e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.3461e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2904e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.3849e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0480e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.8302e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3344e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.262572
Train - Epoch 0, Batch: 10, Loss: 0.226472
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.217460
Train - Epoch 1, Batch: 10, Loss: 0.229608
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.223551
Train - Epoch 2, Batch: 10, Loss: 0.217825
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 3, Batch: 0, Loss: 0.227302
Train - Epoch 3, Batch: 10, Loss: 0.217008
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.218642
Train - Epoch 4, Batch: 10, Loss: 0.218038
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.211555
Train - Epoch 5, Batch: 10, Loss: 0.213068
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.214477
Train - Epoch 6, Batch: 10, Loss: 0.224262
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.209106
Train - Epoch 7, Batch: 10, Loss: 0.216279
Test Avg. Loss: 0.000060, Accuracy: 0.945700
training_time:: 7.054290533065796
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 5.055218458175659
time_baseline:: 5.072894811630249
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8112e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0828e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1385e-33, dtype=torch.float64)
secont condition:: tensor(6.1385e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.3831e-32, dtype=torch.float64)
secont condition:: tensor(1.3831e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2791e-32, dtype=torch.float64)
secont condition:: tensor(3.2791e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2301e-10, dtype=torch.float64)
secont condition:: tensor(6.2301e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7661e-10, dtype=torch.float64)
secont condition:: tensor(9.7661e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6643e-10, dtype=torch.float64)
secont condition:: tensor(8.6643e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2632e-10, dtype=torch.float64)
secont condition:: tensor(6.2632e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7293e-10, dtype=torch.float64)
secont condition:: tensor(5.7293e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0586e-10, dtype=torch.float64)
secont condition:: tensor(5.0586e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8263e-10, dtype=torch.float64)
secont condition:: tensor(4.8263e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8307e-10, dtype=torch.float64)
secont condition:: tensor(3.8307e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6214e-10, dtype=torch.float64)
secont condition:: tensor(2.6214e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2628e-10, dtype=torch.float64)
secont condition:: tensor(1.2628e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2348e-10, dtype=torch.float64)
secont condition:: tensor(4.2348e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5126e-10, dtype=torch.float64)
secont condition:: tensor(2.5126e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8799e-10, dtype=torch.float64)
secont condition:: tensor(1.8799e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5659e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.9702e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2534e-09, dtype=torch.float64)
secont condition:: tensor(1.2534e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1916e-09, dtype=torch.float64)
secont condition:: tensor(1.1916e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2719e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3554e-09, dtype=torch.float64)
secont condition:: tensor(3.3554e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8607e-10, dtype=torch.float64)
secont condition:: tensor(2.8607e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7007e-10, dtype=torch.float64)
secont condition:: tensor(9.7007e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.9340e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2793e-10, dtype=torch.float64)
secont condition:: tensor(9.2793e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2149e-09, dtype=torch.float64)
secont condition:: tensor(1.2149e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5130e-10, dtype=torch.float64)
secont condition:: tensor(8.5130e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0147e-09, dtype=torch.float64)
secont condition:: tensor(1.0147e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0414e-09, dtype=torch.float64)
secont condition:: tensor(2.0414e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6306e-09, dtype=torch.float64)
secont condition:: tensor(4.6306e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7792e-09, dtype=torch.float64)
secont condition:: tensor(4.7792e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3032e-09, dtype=torch.float64)
secont condition:: tensor(3.3032e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9472e-09, dtype=torch.float64)
secont condition:: tensor(8.9472e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6208e-09, dtype=torch.float64)
secont condition:: tensor(1.6208e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1708e-09, dtype=torch.float64)
secont condition:: tensor(2.1708e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7164e-09, dtype=torch.float64)
secont condition:: tensor(1.7164e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1042e-09, dtype=torch.float64)
secont condition:: tensor(1.1042e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0173e-09, dtype=torch.float64)
secont condition:: tensor(1.0173e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9923e-10, dtype=torch.float64)
secont condition:: tensor(9.9923e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1532e-10, dtype=torch.float64)
secont condition:: tensor(4.1532e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6991e-09, dtype=torch.float64)
secont condition:: tensor(1.6991e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5012e-09, dtype=torch.float64)
secont condition:: tensor(1.5012e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1521e-09, dtype=torch.float64)
secont condition:: tensor(1.1521e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4483e-09, dtype=torch.float64)
secont condition:: tensor(1.4483e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3779e-09, dtype=torch.float64)
secont condition:: tensor(1.3779e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4853e-09, dtype=torch.float64)
secont condition:: tensor(1.4853e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6244e-09, dtype=torch.float64)
secont condition:: tensor(1.6244e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9567e-09, dtype=torch.float64)
secont condition:: tensor(2.9567e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7632e-09, dtype=torch.float64)
secont condition:: tensor(4.7632e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5977e-09, dtype=torch.float64)
secont condition:: tensor(1.5977e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5899e-09, dtype=torch.float64)
secont condition:: tensor(1.5899e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6278e-09, dtype=torch.float64)
secont condition:: tensor(9.6278e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8051e-09, dtype=torch.float64)
secont condition:: tensor(3.8051e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1694e-10, dtype=torch.float64)
secont condition:: tensor(8.1694e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0875e-09, dtype=torch.float64)
secont condition:: tensor(2.0875e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6147e-09, dtype=torch.float64)
secont condition:: tensor(2.6147e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6660e-09, dtype=torch.float64)
secont condition:: tensor(2.6660e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2111e-09, dtype=torch.float64)
secont condition:: tensor(2.2111e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7371e-09, dtype=torch.float64)
secont condition:: tensor(1.7371e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.200188159942627
curr_diff: 0 tensor(8.9246e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7746e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4732e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.9782e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0612e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4446e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5503e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247296
Train - Epoch 0, Batch: 10, Loss: 0.250683
Train - Epoch 0, Batch: 20, Loss: 0.229857
Train - Epoch 0, Batch: 30, Loss: 0.202037
Train - Epoch 0, Batch: 40, Loss: 0.214502
Train - Epoch 0, Batch: 50, Loss: 0.204794
Test Avg. Loss: 0.000211, Accuracy: 0.946000
Train - Epoch 1, Batch: 0, Loss: 0.246434
Train - Epoch 1, Batch: 10, Loss: 0.235500
Train - Epoch 1, Batch: 20, Loss: 0.184398
Train - Epoch 1, Batch: 30, Loss: 0.224186
Train - Epoch 1, Batch: 40, Loss: 0.222766
Train - Epoch 1, Batch: 50, Loss: 0.219275
Test Avg. Loss: 0.000210, Accuracy: 0.945800
training_time:: 2.1760733127593994
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4060895442962646
time_baseline:: 1.4110774993896484
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5884e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6961e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0270e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9003e-33, dtype=torch.float64)
secont condition:: tensor(5.9003e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.0728e-08, dtype=torch.float64)
secont condition:: tensor(1.0728e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3773e-09, dtype=torch.float64)
secont condition:: tensor(7.3773e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8825e-09, dtype=torch.float64)
secont condition:: tensor(7.8825e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9580e-09, dtype=torch.float64)
secont condition:: tensor(5.9580e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9065e-09, dtype=torch.float64)
secont condition:: tensor(4.9065e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2770e-09, dtype=torch.float64)
secont condition:: tensor(3.2770e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1122e-09, dtype=torch.float64)
secont condition:: tensor(3.1122e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7316e-09, dtype=torch.float64)
secont condition:: tensor(4.7316e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0081e-09, dtype=torch.float64)
secont condition:: tensor(5.0081e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7371e-09, dtype=torch.float64)
secont condition:: tensor(1.7371e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7519e-09, dtype=torch.float64)
secont condition:: tensor(1.7519e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8079e-10, dtype=torch.float64)
secont condition:: tensor(8.8079e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7193e-10, dtype=torch.float64)
secont condition:: tensor(9.7193e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6020e-10, dtype=torch.float64)
secont condition:: tensor(7.6020e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6768e-10, dtype=torch.float64)
secont condition:: tensor(5.6768e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7724e-10, dtype=torch.float64)
secont condition:: tensor(9.7724e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2787e-10, dtype=torch.float64)
secont condition:: tensor(4.2787e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.4933e-09, dtype=torch.float64)
secont condition:: tensor(9.4933e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2979e-10, dtype=torch.float64)
secont condition:: tensor(9.2979e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7168e-10, dtype=torch.float64)
secont condition:: tensor(9.7168e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8264e-09, dtype=torch.float64)
secont condition:: tensor(3.8264e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6085e-10, dtype=torch.float64)
secont condition:: tensor(7.6085e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7022e-10, dtype=torch.float64)
secont condition:: tensor(8.7022e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7809e-10, dtype=torch.float64)
secont condition:: tensor(9.7809e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5672e-10, dtype=torch.float64)
secont condition:: tensor(1.5672e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1639e-10, dtype=torch.float64)
secont condition:: tensor(6.1639e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8374e-09, dtype=torch.float64)
secont condition:: tensor(4.8374e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6960e-10, dtype=torch.float64)
secont condition:: tensor(5.6960e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0455e-09, dtype=torch.float64)
secont condition:: tensor(1.0455e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9640e-10, dtype=torch.float64)
secont condition:: tensor(3.9640e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6629e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4793e-09, dtype=torch.float64)
secont condition:: tensor(1.4793e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8184e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4842e-08, dtype=torch.float64)
secont condition:: tensor(2.4842e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0861e-08, dtype=torch.float64)
secont condition:: tensor(2.0861e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4307e-09, dtype=torch.float64)
secont condition:: tensor(1.4307e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1480e-10, dtype=torch.float64)
secont condition:: tensor(2.1480e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1219e-10, dtype=torch.float64)
secont condition:: tensor(4.1219e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5359e-09, dtype=torch.float64)
secont condition:: tensor(8.5359e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0262e-09, dtype=torch.float64)
secont condition:: tensor(5.0262e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9097e-09, dtype=torch.float64)
secont condition:: tensor(3.9097e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4670e-09, dtype=torch.float64)
secont condition:: tensor(6.4670e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6332e-09, dtype=torch.float64)
secont condition:: tensor(4.6332e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1453e-09, dtype=torch.float64)
secont condition:: tensor(2.1453e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0165e-09, dtype=torch.float64)
secont condition:: tensor(1.0165e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9949e-09, dtype=torch.float64)
secont condition:: tensor(1.9949e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4142e-10, dtype=torch.float64)
secont condition:: tensor(7.4142e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1390e-11, dtype=torch.float64)
secont condition:: tensor(7.1390e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8261e-10, dtype=torch.float64)
secont condition:: tensor(1.8261e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.3012e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0062e-08, dtype=torch.float64)
secont condition:: tensor(1.0062e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2458e-09, dtype=torch.float64)
secont condition:: tensor(6.2458e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0711e-09, dtype=torch.float64)
secont condition:: tensor(3.0711e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8947e-09, dtype=torch.float64)
secont condition:: tensor(2.8947e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5343e-09, dtype=torch.float64)
secont condition:: tensor(2.5343e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9991e-09, dtype=torch.float64)
secont condition:: tensor(2.9991e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0707e-09, dtype=torch.float64)
secont condition:: tensor(1.0707e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8082e-09, dtype=torch.float64)
secont condition:: tensor(1.8082e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3960e-09, dtype=torch.float64)
secont condition:: tensor(7.3960e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2411e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.2208e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8305e-09, dtype=torch.float64)
secont condition:: tensor(8.8305e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6958e-09, dtype=torch.float64)
secont condition:: tensor(4.6958e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.2991564273834229
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2173e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7264e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1289e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0428e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5700e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.256403
Train - Epoch 0, Batch: 10, Loss: 0.225918
Train - Epoch 0, Batch: 20, Loss: 0.203011
Train - Epoch 0, Batch: 30, Loss: 0.212146
Train - Epoch 0, Batch: 40, Loss: 0.245309
Train - Epoch 0, Batch: 50, Loss: 0.222437
Test Avg. Loss: 0.000211, Accuracy: 0.945600
Train - Epoch 1, Batch: 0, Loss: 0.196519
Train - Epoch 1, Batch: 10, Loss: 0.226028
Train - Epoch 1, Batch: 20, Loss: 0.213459
Train - Epoch 1, Batch: 30, Loss: 0.212987
Train - Epoch 1, Batch: 40, Loss: 0.205460
Train - Epoch 1, Batch: 50, Loss: 0.243939
Test Avg. Loss: 0.000209, Accuracy: 0.945100
training_time:: 2.1514205932617188
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3783042430877686
time_baseline:: 1.3831498622894287
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2403e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1759e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8491e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945100
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0720e-33, dtype=torch.float64)
secont condition:: tensor(7.0720e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.9710e-32, dtype=torch.float64)
secont condition:: tensor(1.9710e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7051e-32, dtype=torch.float64)
secont condition:: tensor(2.7051e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6187e-32, dtype=torch.float64)
secont condition:: tensor(2.6187e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.0637e-32, dtype=torch.float64)
secont condition:: tensor(7.0637e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1478e-31, dtype=torch.float64)
secont condition:: tensor(1.1478e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6919e-31, dtype=torch.float64)
secont condition:: tensor(1.6919e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.1944e-09, dtype=torch.float64)
secont condition:: tensor(9.1944e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7205e-09, dtype=torch.float64)
secont condition:: tensor(5.7205e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2833e-09, dtype=torch.float64)
secont condition:: tensor(3.2833e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.8421e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8237e-09, dtype=torch.float64)
secont condition:: tensor(3.8237e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9765e-09, dtype=torch.float64)
secont condition:: tensor(4.9765e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3487e-09, dtype=torch.float64)
secont condition:: tensor(3.3487e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9768e-09, dtype=torch.float64)
secont condition:: tensor(2.9768e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.0393e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.0973e-09, dtype=torch.float64)
secont condition:: tensor(2.0973e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5319e-08, dtype=torch.float64)
secont condition:: tensor(1.5319e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4972e-09, dtype=torch.float64)
secont condition:: tensor(1.4972e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1785e-09, dtype=torch.float64)
secont condition:: tensor(1.1785e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7608e-10, dtype=torch.float64)
secont condition:: tensor(7.7608e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8495e-10, dtype=torch.float64)
secont condition:: tensor(9.8495e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7958e-10, dtype=torch.float64)
secont condition:: tensor(8.7958e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2609e-10, dtype=torch.float64)
secont condition:: tensor(8.2609e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9995e-10, dtype=torch.float64)
secont condition:: tensor(8.9995e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3997e-09, dtype=torch.float64)
secont condition:: tensor(1.3997e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2050e-10, dtype=torch.float64)
secont condition:: tensor(7.2050e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6479e-10, dtype=torch.float64)
secont condition:: tensor(6.6479e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1127e-09, dtype=torch.float64)
secont condition:: tensor(1.1127e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2276e-10, dtype=torch.float64)
secont condition:: tensor(5.2276e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.6840e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1477e-10, dtype=torch.float64)
secont condition:: tensor(6.1477e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2568e-09, dtype=torch.float64)
secont condition:: tensor(1.2568e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3721e-10, dtype=torch.float64)
secont condition:: tensor(4.3721e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0804e-09, dtype=torch.float64)
secont condition:: tensor(3.0804e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9830e-10, dtype=torch.float64)
secont condition:: tensor(5.9830e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9224e-09, dtype=torch.float64)
secont condition:: tensor(1.9224e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2369e-10, dtype=torch.float64)
secont condition:: tensor(9.2369e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4104e-10, dtype=torch.float64)
secont condition:: tensor(5.4104e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0215e-09, dtype=torch.float64)
secont condition:: tensor(1.0215e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4008e-09, dtype=torch.float64)
secont condition:: tensor(7.4008e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5322e-10, dtype=torch.float64)
secont condition:: tensor(3.5322e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.2445e-09, dtype=torch.float64)
secont condition:: tensor(9.2445e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6951e-09, dtype=torch.float64)
secont condition:: tensor(4.6951e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5568e-09, dtype=torch.float64)
secont condition:: tensor(6.5568e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7509e-08, dtype=torch.float64)
secont condition:: tensor(1.7509e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3750e-08, dtype=torch.float64)
secont condition:: tensor(1.3750e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3620e-09, dtype=torch.float64)
secont condition:: tensor(6.3620e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7042e-09, dtype=torch.float64)
secont condition:: tensor(3.7042e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0649e-09, dtype=torch.float64)
secont condition:: tensor(5.0649e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7660e-08, dtype=torch.float64)
secont condition:: tensor(1.7660e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1450e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9732e-08, dtype=torch.float64)
secont condition:: tensor(2.9732e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0988e-08, dtype=torch.float64)
secont condition:: tensor(1.0988e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1740e-09, dtype=torch.float64)
secont condition:: tensor(5.1740e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2366e-09, dtype=torch.float64)
secont condition:: tensor(2.2366e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.7668e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7955e-08, dtype=torch.float64)
secont condition:: tensor(3.7955e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2202e-09, dtype=torch.float64)
secont condition:: tensor(1.2202e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9911e-09, dtype=torch.float64)
secont condition:: tensor(6.9911e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7986e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8603e-09, dtype=torch.float64)
secont condition:: tensor(2.8603e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.509068250656128
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8951e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.9475e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.8016e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3517e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3050e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.274668
Train - Epoch 0, Batch: 10, Loss: 0.220523
Train - Epoch 0, Batch: 20, Loss: 0.226834
Train - Epoch 0, Batch: 30, Loss: 0.211461
Train - Epoch 0, Batch: 40, Loss: 0.225273
Train - Epoch 0, Batch: 50, Loss: 0.234011
Test Avg. Loss: 0.000211, Accuracy: 0.945900
Train - Epoch 1, Batch: 0, Loss: 0.236167
Train - Epoch 1, Batch: 10, Loss: 0.203222
Train - Epoch 1, Batch: 20, Loss: 0.202224
Train - Epoch 1, Batch: 30, Loss: 0.250841
Train - Epoch 1, Batch: 40, Loss: 0.194307
Train - Epoch 1, Batch: 50, Loss: 0.190387
Test Avg. Loss: 0.000210, Accuracy: 0.945400
training_time:: 2.1681768894195557
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3779585361480713
time_baseline:: 1.3830034732818604
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9810e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7019e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945400
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8951e-09, dtype=torch.float64)
secont condition:: tensor(1.8951e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5999e-09, dtype=torch.float64)
secont condition:: tensor(1.5999e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3533e-09, dtype=torch.float64)
secont condition:: tensor(1.3533e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3925e-10, dtype=torch.float64)
secont condition:: tensor(9.3925e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.2383e-10, dtype=torch.float64)
secont condition:: tensor(9.2383e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7240e-10, dtype=torch.float64)
secont condition:: tensor(6.7240e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3770e-10, dtype=torch.float64)
secont condition:: tensor(4.3770e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7482e-10, dtype=torch.float64)
secont condition:: tensor(2.7482e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1292e-10, dtype=torch.float64)
secont condition:: tensor(4.1292e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0434e-10, dtype=torch.float64)
secont condition:: tensor(3.0434e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7086e-10, dtype=torch.float64)
secont condition:: tensor(2.7086e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5169e-10, dtype=torch.float64)
secont condition:: tensor(6.5169e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5048e-10, dtype=torch.float64)
secont condition:: tensor(1.5048e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4345e-10, dtype=torch.float64)
secont condition:: tensor(1.4345e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2243e-10, dtype=torch.float64)
secont condition:: tensor(1.2243e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3621e-10, dtype=torch.float64)
secont condition:: tensor(3.3621e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2577e-10, dtype=torch.float64)
secont condition:: tensor(1.2577e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.9585e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1599e-10, dtype=torch.float64)
secont condition:: tensor(1.1599e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7662e-11, dtype=torch.float64)
secont condition:: tensor(9.7662e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5755e-10, dtype=torch.float64)
secont condition:: tensor(1.5755e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6430e-11, dtype=torch.float64)
secont condition:: tensor(9.6430e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.1461e-10, dtype=torch.float64)
secont condition:: tensor(7.1461e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2087e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6156e-10, dtype=torch.float64)
secont condition:: tensor(1.6156e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0723e-10, dtype=torch.float64)
secont condition:: tensor(2.0723e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6923e-11, dtype=torch.float64)
secont condition:: tensor(9.6923e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3745e-10, dtype=torch.float64)
secont condition:: tensor(1.3745e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1434e-09, dtype=torch.float64)
secont condition:: tensor(2.1434e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7011e-10, dtype=torch.float64)
secont condition:: tensor(3.7011e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3734e-11, dtype=torch.float64)
secont condition:: tensor(8.3734e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1532e-10, dtype=torch.float64)
secont condition:: tensor(9.1532e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1997e-10, dtype=torch.float64)
secont condition:: tensor(3.1997e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.0379e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3127e-11, dtype=torch.float64)
secont condition:: tensor(8.3127e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0216e-10, dtype=torch.float64)
secont condition:: tensor(1.0216e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7394e-11, dtype=torch.float64)
secont condition:: tensor(6.7394e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9208e-11, dtype=torch.float64)
secont condition:: tensor(6.9208e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7515e-10, dtype=torch.float64)
secont condition:: tensor(4.7515e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9292e-08, dtype=torch.float64)
secont condition:: tensor(1.9292e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0792e-09, dtype=torch.float64)
secont condition:: tensor(7.0792e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9375e-09, dtype=torch.float64)
secont condition:: tensor(2.9375e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6657e-09, dtype=torch.float64)
secont condition:: tensor(2.6657e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1612e-09, dtype=torch.float64)
secont condition:: tensor(1.1612e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0530e-08, dtype=torch.float64)
secont condition:: tensor(2.0530e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9654e-09, dtype=torch.float64)
secont condition:: tensor(9.9654e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7034e-09, dtype=torch.float64)
secont condition:: tensor(7.7034e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1199e-09, dtype=torch.float64)
secont condition:: tensor(4.1199e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3702e-09, dtype=torch.float64)
secont condition:: tensor(3.3702e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5611e-08, dtype=torch.float64)
secont condition:: tensor(2.5611e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0077e-08, dtype=torch.float64)
secont condition:: tensor(1.0077e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6714e-09, dtype=torch.float64)
secont condition:: tensor(7.6714e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2113e-08, dtype=torch.float64)
secont condition:: tensor(1.2113e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3779e-08, dtype=torch.float64)
secont condition:: tensor(1.3779e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6427e-09, dtype=torch.float64)
secont condition:: tensor(1.6427e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6201e-08, dtype=torch.float64)
secont condition:: tensor(1.6201e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7894e-09, dtype=torch.float64)
secont condition:: tensor(2.7894e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5091e-09, dtype=torch.float64)
secont condition:: tensor(1.5091e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5165e-09, dtype=torch.float64)
secont condition:: tensor(7.5165e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4154e-09, dtype=torch.float64)
secont condition:: tensor(2.4154e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1703e-09, dtype=torch.float64)
secont condition:: tensor(2.1703e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.5215556621551514
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7058e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5902e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6188e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8845e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2286e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2380e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250940
Train - Epoch 0, Batch: 10, Loss: 0.202053
Train - Epoch 0, Batch: 20, Loss: 0.209897
Train - Epoch 0, Batch: 30, Loss: 0.198985
Train - Epoch 0, Batch: 40, Loss: 0.224270
Train - Epoch 0, Batch: 50, Loss: 0.240963
Test Avg. Loss: 0.000211, Accuracy: 0.945700
Train - Epoch 1, Batch: 0, Loss: 0.206475
Train - Epoch 1, Batch: 10, Loss: 0.252544
Train - Epoch 1, Batch: 20, Loss: 0.214873
Train - Epoch 1, Batch: 30, Loss: 0.231223
Train - Epoch 1, Batch: 40, Loss: 0.216432
Train - Epoch 1, Batch: 50, Loss: 0.200976
Test Avg. Loss: 0.000209, Accuracy: 0.945700
training_time:: 2.1602084636688232
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.387213945388794
time_baseline:: 1.3920447826385498
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9610e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5631e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4911e-33, dtype=torch.float64)
secont condition:: tensor(7.4911e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.8995e-32, dtype=torch.float64)
secont condition:: tensor(1.8995e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9516e-32, dtype=torch.float64)
secont condition:: tensor(3.9516e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.2931e-32, dtype=torch.float64)
secont condition:: tensor(5.2931e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3954e-32, dtype=torch.float64)
secont condition:: tensor(8.3954e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.4417e-32, dtype=torch.float64)
secont condition:: tensor(9.4417e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0249e-08, dtype=torch.float64)
secont condition:: tensor(1.0249e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0556e-09, dtype=torch.float64)
secont condition:: tensor(6.0556e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0647e-09, dtype=torch.float64)
secont condition:: tensor(6.0647e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1173e-09, dtype=torch.float64)
secont condition:: tensor(4.1173e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6057e-09, dtype=torch.float64)
secont condition:: tensor(2.6057e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4319e-10, dtype=torch.float64)
secont condition:: tensor(1.4319e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5828e-09, dtype=torch.float64)
secont condition:: tensor(1.5828e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4104e-08, dtype=torch.float64)
secont condition:: tensor(2.4104e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9199e-10, dtype=torch.float64)
secont condition:: tensor(3.9199e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8021e-09, dtype=torch.float64)
secont condition:: tensor(1.8021e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6001e-09, dtype=torch.float64)
secont condition:: tensor(1.6001e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1977e-09, dtype=torch.float64)
secont condition:: tensor(1.1977e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2079e-09, dtype=torch.float64)
secont condition:: tensor(2.2079e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4782e-09, dtype=torch.float64)
secont condition:: tensor(1.4782e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1271e-10, dtype=torch.float64)
secont condition:: tensor(9.1271e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1792e-09, dtype=torch.float64)
secont condition:: tensor(5.1792e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2102e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1511e-09, dtype=torch.float64)
secont condition:: tensor(6.1511e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8038e-09, dtype=torch.float64)
secont condition:: tensor(5.8038e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4243e-10, dtype=torch.float64)
secont condition:: tensor(6.4243e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.8416e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6338e-10, dtype=torch.float64)
secont condition:: tensor(6.6338e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.9974e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0897e-09, dtype=torch.float64)
secont condition:: tensor(2.0897e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2119e-11, dtype=torch.float64)
secont condition:: tensor(2.2119e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9056e-09, dtype=torch.float64)
secont condition:: tensor(4.9056e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1323e-08, dtype=torch.float64)
secont condition:: tensor(1.1323e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0078e-08, dtype=torch.float64)
secont condition:: tensor(1.0078e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0999e-09, dtype=torch.float64)
secont condition:: tensor(6.0999e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1700e-09, dtype=torch.float64)
secont condition:: tensor(5.1700e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0513e-08, dtype=torch.float64)
secont condition:: tensor(4.0513e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7985e-09, dtype=torch.float64)
secont condition:: tensor(3.7985e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8731e-09, dtype=torch.float64)
secont condition:: tensor(2.8731e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4931e-09, dtype=torch.float64)
secont condition:: tensor(1.4931e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7408e-09, dtype=torch.float64)
secont condition:: tensor(1.7408e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3551e-09, dtype=torch.float64)
secont condition:: tensor(2.3551e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4316e-10, dtype=torch.float64)
secont condition:: tensor(9.4316e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7844e-10, dtype=torch.float64)
secont condition:: tensor(7.7844e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6559e-09, dtype=torch.float64)
secont condition:: tensor(5.6559e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2767e-10, dtype=torch.float64)
secont condition:: tensor(5.2767e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0497e-09, dtype=torch.float64)
secont condition:: tensor(2.0497e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2146e-09, dtype=torch.float64)
secont condition:: tensor(9.2146e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9385e-09, dtype=torch.float64)
secont condition:: tensor(3.9385e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4893e-09, dtype=torch.float64)
secont condition:: tensor(4.4893e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6859e-09, dtype=torch.float64)
secont condition:: tensor(2.6859e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4204e-09, dtype=torch.float64)
secont condition:: tensor(4.4204e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.1410e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7753e-10, dtype=torch.float64)
secont condition:: tensor(8.7753e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6576e-09, dtype=torch.float64)
secont condition:: tensor(7.6576e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8430e-09, dtype=torch.float64)
secont condition:: tensor(1.8430e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9246e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4711e-09, dtype=torch.float64)
secont condition:: tensor(2.4711e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7459e-09, dtype=torch.float64)
secont condition:: tensor(1.7459e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4449e-08, dtype=torch.float64)
secont condition:: tensor(1.4449e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0562e-09, dtype=torch.float64)
secont condition:: tensor(6.0562e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3546e-09, dtype=torch.float64)
secont condition:: tensor(6.3546e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.292876958847046
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9978e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.1675e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1364e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2396e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4978e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4430e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218142
Train - Epoch 0, Batch: 10, Loss: 0.211598
Train - Epoch 0, Batch: 20, Loss: 0.199202
Train - Epoch 0, Batch: 30, Loss: 0.245662
Train - Epoch 0, Batch: 40, Loss: 0.209858
Train - Epoch 0, Batch: 50, Loss: 0.200280
Test Avg. Loss: 0.000211, Accuracy: 0.946000
Train - Epoch 1, Batch: 0, Loss: 0.195774
Train - Epoch 1, Batch: 10, Loss: 0.223962
Train - Epoch 1, Batch: 20, Loss: 0.228160
Train - Epoch 1, Batch: 30, Loss: 0.220456
Train - Epoch 1, Batch: 40, Loss: 0.225065
Train - Epoch 1, Batch: 50, Loss: 0.216160
Test Avg. Loss: 0.000210, Accuracy: 0.945800
training_time:: 2.1742546558380127
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4675524234771729
time_baseline:: 1.474198818206787
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3928e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4800e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4995e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0077e-33, dtype=torch.float64)
secont condition:: tensor(5.0077e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.2542e-32, dtype=torch.float64)
secont condition:: tensor(2.2542e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7770e-32, dtype=torch.float64)
secont condition:: tensor(2.7770e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9220e-32, dtype=torch.float64)
secont condition:: tensor(4.9220e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.9142e-32, dtype=torch.float64)
secont condition:: tensor(7.9142e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0660e-31, dtype=torch.float64)
secont condition:: tensor(1.0660e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5055e-31, dtype=torch.float64)
secont condition:: tensor(1.5055e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4426e-31, dtype=torch.float64)
secont condition:: tensor(1.4426e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.1538e-31, dtype=torch.float64)
secont condition:: tensor(2.1538e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4652e-31, dtype=torch.float64)
secont condition:: tensor(2.4652e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.8975e-31, dtype=torch.float64)
secont condition:: tensor(2.8975e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.3122e-31, dtype=torch.float64)
secont condition:: tensor(3.3122e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.6591e-31, dtype=torch.float64)
secont condition:: tensor(4.6591e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.6481e-31, dtype=torch.float64)
secont condition:: tensor(4.6481e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.7370e-31, dtype=torch.float64)
secont condition:: tensor(4.7370e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.1895e-31, dtype=torch.float64)
secont condition:: tensor(6.1895e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.0360e-31, dtype=torch.float64)
secont condition:: tensor(7.0360e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.8921e-31, dtype=torch.float64)
secont condition:: tensor(7.8921e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.0226e-31, dtype=torch.float64)
secont condition:: tensor(7.0226e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.4042e-31, dtype=torch.float64)
secont condition:: tensor(8.4042e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.8380e-09, dtype=torch.float64)
secont condition:: tensor(3.8380e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3394e-09, dtype=torch.float64)
secont condition:: tensor(6.3394e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4797e-09, dtype=torch.float64)
secont condition:: tensor(6.4797e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6115e-09, dtype=torch.float64)
secont condition:: tensor(3.6115e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6939e-09, dtype=torch.float64)
secont condition:: tensor(3.6939e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2337e-09, dtype=torch.float64)
secont condition:: tensor(3.2337e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5015e-09, dtype=torch.float64)
secont condition:: tensor(3.5015e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8554e-09, dtype=torch.float64)
secont condition:: tensor(1.8554e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0966e-09, dtype=torch.float64)
secont condition:: tensor(3.0966e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6601e-09, dtype=torch.float64)
secont condition:: tensor(1.6601e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7921e-09, dtype=torch.float64)
secont condition:: tensor(1.7921e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0888e-09, dtype=torch.float64)
secont condition:: tensor(1.0888e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6901e-09, dtype=torch.float64)
secont condition:: tensor(3.6901e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2723e-09, dtype=torch.float64)
secont condition:: tensor(2.2723e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6035e-10, dtype=torch.float64)
secont condition:: tensor(9.6035e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6171e-10, dtype=torch.float64)
secont condition:: tensor(9.6171e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3501e-09, dtype=torch.float64)
secont condition:: tensor(9.3501e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6963e-09, dtype=torch.float64)
secont condition:: tensor(8.6963e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3141e-09, dtype=torch.float64)
secont condition:: tensor(6.3141e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6126e-09, dtype=torch.float64)
secont condition:: tensor(3.6126e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7561e-09, dtype=torch.float64)
secont condition:: tensor(5.7561e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1813e-09, dtype=torch.float64)
secont condition:: tensor(1.1813e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2108e-09, dtype=torch.float64)
secont condition:: tensor(1.2108e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0812e-09, dtype=torch.float64)
secont condition:: tensor(1.0812e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6503e-10, dtype=torch.float64)
secont condition:: tensor(9.6503e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3986e-10, dtype=torch.float64)
secont condition:: tensor(2.3986e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6818e-09, dtype=torch.float64)
secont condition:: tensor(2.6818e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2096e-09, dtype=torch.float64)
secont condition:: tensor(2.2096e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7206e-10, dtype=torch.float64)
secont condition:: tensor(8.7206e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4404e-09, dtype=torch.float64)
secont condition:: tensor(1.4404e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3928e-10, dtype=torch.float64)
secont condition:: tensor(9.3928e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0160e-09, dtype=torch.float64)
secont condition:: tensor(2.0160e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6995e-09, dtype=torch.float64)
secont condition:: tensor(8.6995e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3983e-10, dtype=torch.float64)
secont condition:: tensor(6.3983e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0501e-10, dtype=torch.float64)
secont condition:: tensor(7.0501e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4746e-10, dtype=torch.float64)
secont condition:: tensor(6.4746e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9788e-09, dtype=torch.float64)
secont condition:: tensor(1.9788e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4396e-09, dtype=torch.float64)
secont condition:: tensor(5.4396e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2241e-08, dtype=torch.float64)
secont condition:: tensor(2.2241e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1534e-09, dtype=torch.float64)
secont condition:: tensor(1.1534e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.413064956665039
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0227e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5810e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4524e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7855e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9616e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
deletion rate:: 0.0001
python3 generate_rand_ids 0.0001  MNIST 0
tensor([ 2995, 54150, 32550, 30760, 17548, 54303])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.94336867332458
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.80469512939453
time_baseline:: 99.06848192214966
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4677e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4685e-11, dtype=torch.float64)
secont condition:: tensor(1.4685e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5130e-11, dtype=torch.float64)
secont condition:: tensor(4.5130e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5512e-11, dtype=torch.float64)
secont condition:: tensor(6.5512e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3636e-10, dtype=torch.float64)
secont condition:: tensor(1.3636e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6989e-10, dtype=torch.float64)
secont condition:: tensor(1.6989e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8597e-10, dtype=torch.float64)
secont condition:: tensor(1.8597e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2665e-10, dtype=torch.float64)
secont condition:: tensor(2.2665e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3672e-10, dtype=torch.float64)
secont condition:: tensor(2.3672e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6478e-10, dtype=torch.float64)
secont condition:: tensor(2.6478e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9606e-10, dtype=torch.float64)
secont condition:: tensor(2.9606e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1442e-10, dtype=torch.float64)
secont condition:: tensor(3.1442e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5719e-10, dtype=torch.float64)
secont condition:: tensor(3.5719e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7624e-10, dtype=torch.float64)
secont condition:: tensor(3.7624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0421e-10, dtype=torch.float64)
secont condition:: tensor(4.0421e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6741e-10, dtype=torch.float64)
secont condition:: tensor(3.6741e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5759e-10, dtype=torch.float64)
secont condition:: tensor(4.5759e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4482e-10, dtype=torch.float64)
secont condition:: tensor(4.4482e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8180e-10, dtype=torch.float64)
secont condition:: tensor(4.8180e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6100e-10, dtype=torch.float64)
secont condition:: tensor(4.6100e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7848e-10, dtype=torch.float64)
secont condition:: tensor(4.7848e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6563e-10, dtype=torch.float64)
secont condition:: tensor(4.6563e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8341e-10, dtype=torch.float64)
secont condition:: tensor(4.8341e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6669e-10, dtype=torch.float64)
secont condition:: tensor(5.6669e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1798e-10, dtype=torch.float64)
secont condition:: tensor(6.1798e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2593e-10, dtype=torch.float64)
secont condition:: tensor(6.2593e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7967e-10, dtype=torch.float64)
secont condition:: tensor(5.7967e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4814e-10, dtype=torch.float64)
secont condition:: tensor(5.4814e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2777e-10, dtype=torch.float64)
secont condition:: tensor(6.2777e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-10, dtype=torch.float64)
secont condition:: tensor(6.5088e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6221e-10, dtype=torch.float64)
secont condition:: tensor(6.6221e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5489e-10, dtype=torch.float64)
secont condition:: tensor(5.5489e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3651e-10, dtype=torch.float64)
secont condition:: tensor(7.3651e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8556e-10, dtype=torch.float64)
secont condition:: tensor(6.8556e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9140e-10, dtype=torch.float64)
secont condition:: tensor(6.9140e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9773e-10, dtype=torch.float64)
secont condition:: tensor(6.9773e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2085e-10, dtype=torch.float64)
secont condition:: tensor(7.2085e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9650e-10, dtype=torch.float64)
secont condition:: tensor(7.9650e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1701e-10, dtype=torch.float64)
secont condition:: tensor(9.1701e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1558e-10, dtype=torch.float64)
secont condition:: tensor(9.1558e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9410e-10, dtype=torch.float64)
secont condition:: tensor(9.9410e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0414e-09, dtype=torch.float64)
secont condition:: tensor(1.0414e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0854e-09, dtype=torch.float64)
secont condition:: tensor(1.0854e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3157e-09, dtype=torch.float64)
secont condition:: tensor(1.3157e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2173e-09, dtype=torch.float64)
secont condition:: tensor(1.2173e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2661e-09, dtype=torch.float64)
secont condition:: tensor(1.2661e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1169e-09, dtype=torch.float64)
secont condition:: tensor(1.1169e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3856e-09, dtype=torch.float64)
secont condition:: tensor(1.3856e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4458e-09, dtype=torch.float64)
secont condition:: tensor(1.4458e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-09, dtype=torch.float64)
secont condition:: tensor(1.4883e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6441e-09, dtype=torch.float64)
secont condition:: tensor(1.6441e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6331e-09, dtype=torch.float64)
secont condition:: tensor(1.6331e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4314e-09, dtype=torch.float64)
secont condition:: tensor(1.4314e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5950e-10, dtype=torch.float64)
secont condition:: tensor(9.5950e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-09, dtype=torch.float64)
secont condition:: tensor(1.2433e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8802e-10, dtype=torch.float64)
secont condition:: tensor(9.8802e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3974e-10, dtype=torch.float64)
secont condition:: tensor(8.3974e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.7814838886261
curr_diff: 0 tensor(4.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5896e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8337e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.14788627624512
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.27796506881714
time_baseline:: 99.54358768463135
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4677e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4685e-11, dtype=torch.float64)
secont condition:: tensor(1.4685e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5130e-11, dtype=torch.float64)
secont condition:: tensor(4.5130e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5512e-11, dtype=torch.float64)
secont condition:: tensor(6.5512e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3636e-10, dtype=torch.float64)
secont condition:: tensor(1.3636e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6989e-10, dtype=torch.float64)
secont condition:: tensor(1.6989e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8597e-10, dtype=torch.float64)
secont condition:: tensor(1.8597e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2665e-10, dtype=torch.float64)
secont condition:: tensor(2.2665e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3672e-10, dtype=torch.float64)
secont condition:: tensor(2.3672e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6478e-10, dtype=torch.float64)
secont condition:: tensor(2.6478e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9606e-10, dtype=torch.float64)
secont condition:: tensor(2.9606e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1442e-10, dtype=torch.float64)
secont condition:: tensor(3.1442e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5719e-10, dtype=torch.float64)
secont condition:: tensor(3.5719e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7624e-10, dtype=torch.float64)
secont condition:: tensor(3.7624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0421e-10, dtype=torch.float64)
secont condition:: tensor(4.0421e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6741e-10, dtype=torch.float64)
secont condition:: tensor(3.6741e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5759e-10, dtype=torch.float64)
secont condition:: tensor(4.5759e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4482e-10, dtype=torch.float64)
secont condition:: tensor(4.4482e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8180e-10, dtype=torch.float64)
secont condition:: tensor(4.8180e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6100e-10, dtype=torch.float64)
secont condition:: tensor(4.6100e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7848e-10, dtype=torch.float64)
secont condition:: tensor(4.7848e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6563e-10, dtype=torch.float64)
secont condition:: tensor(4.6563e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8341e-10, dtype=torch.float64)
secont condition:: tensor(4.8341e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6669e-10, dtype=torch.float64)
secont condition:: tensor(5.6669e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1798e-10, dtype=torch.float64)
secont condition:: tensor(6.1798e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2593e-10, dtype=torch.float64)
secont condition:: tensor(6.2593e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7967e-10, dtype=torch.float64)
secont condition:: tensor(5.7967e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4814e-10, dtype=torch.float64)
secont condition:: tensor(5.4814e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2777e-10, dtype=torch.float64)
secont condition:: tensor(6.2777e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-10, dtype=torch.float64)
secont condition:: tensor(6.5088e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6221e-10, dtype=torch.float64)
secont condition:: tensor(6.6221e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5489e-10, dtype=torch.float64)
secont condition:: tensor(5.5489e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3651e-10, dtype=torch.float64)
secont condition:: tensor(7.3651e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8556e-10, dtype=torch.float64)
secont condition:: tensor(6.8556e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9140e-10, dtype=torch.float64)
secont condition:: tensor(6.9140e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9773e-10, dtype=torch.float64)
secont condition:: tensor(6.9773e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2085e-10, dtype=torch.float64)
secont condition:: tensor(7.2085e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9650e-10, dtype=torch.float64)
secont condition:: tensor(7.9650e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1701e-10, dtype=torch.float64)
secont condition:: tensor(9.1701e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1558e-10, dtype=torch.float64)
secont condition:: tensor(9.1558e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9410e-10, dtype=torch.float64)
secont condition:: tensor(9.9410e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0414e-09, dtype=torch.float64)
secont condition:: tensor(1.0414e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0854e-09, dtype=torch.float64)
secont condition:: tensor(1.0854e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3157e-09, dtype=torch.float64)
secont condition:: tensor(1.3157e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2173e-09, dtype=torch.float64)
secont condition:: tensor(1.2173e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2661e-09, dtype=torch.float64)
secont condition:: tensor(1.2661e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1169e-09, dtype=torch.float64)
secont condition:: tensor(1.1169e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3856e-09, dtype=torch.float64)
secont condition:: tensor(1.3856e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4458e-09, dtype=torch.float64)
secont condition:: tensor(1.4458e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-09, dtype=torch.float64)
secont condition:: tensor(1.4883e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6441e-09, dtype=torch.float64)
secont condition:: tensor(1.6441e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6331e-09, dtype=torch.float64)
secont condition:: tensor(1.6331e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4314e-09, dtype=torch.float64)
secont condition:: tensor(1.4314e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5950e-10, dtype=torch.float64)
secont condition:: tensor(9.5950e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-09, dtype=torch.float64)
secont condition:: tensor(1.2433e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8802e-10, dtype=torch.float64)
secont condition:: tensor(9.8802e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3974e-10, dtype=torch.float64)
secont condition:: tensor(8.3974e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.823718547821045
curr_diff: 0 tensor(4.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5896e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8337e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.46743774414062
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.63949275016785
time_baseline:: 99.9024977684021
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4677e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4685e-11, dtype=torch.float64)
secont condition:: tensor(1.4685e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5130e-11, dtype=torch.float64)
secont condition:: tensor(4.5130e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5512e-11, dtype=torch.float64)
secont condition:: tensor(6.5512e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3636e-10, dtype=torch.float64)
secont condition:: tensor(1.3636e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6989e-10, dtype=torch.float64)
secont condition:: tensor(1.6989e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8597e-10, dtype=torch.float64)
secont condition:: tensor(1.8597e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2665e-10, dtype=torch.float64)
secont condition:: tensor(2.2665e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3672e-10, dtype=torch.float64)
secont condition:: tensor(2.3672e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6478e-10, dtype=torch.float64)
secont condition:: tensor(2.6478e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9606e-10, dtype=torch.float64)
secont condition:: tensor(2.9606e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1442e-10, dtype=torch.float64)
secont condition:: tensor(3.1442e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5719e-10, dtype=torch.float64)
secont condition:: tensor(3.5719e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7624e-10, dtype=torch.float64)
secont condition:: tensor(3.7624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0421e-10, dtype=torch.float64)
secont condition:: tensor(4.0421e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6741e-10, dtype=torch.float64)
secont condition:: tensor(3.6741e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5759e-10, dtype=torch.float64)
secont condition:: tensor(4.5759e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4482e-10, dtype=torch.float64)
secont condition:: tensor(4.4482e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8180e-10, dtype=torch.float64)
secont condition:: tensor(4.8180e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6100e-10, dtype=torch.float64)
secont condition:: tensor(4.6100e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7848e-10, dtype=torch.float64)
secont condition:: tensor(4.7848e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6563e-10, dtype=torch.float64)
secont condition:: tensor(4.6563e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8341e-10, dtype=torch.float64)
secont condition:: tensor(4.8341e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6669e-10, dtype=torch.float64)
secont condition:: tensor(5.6669e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1798e-10, dtype=torch.float64)
secont condition:: tensor(6.1798e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2593e-10, dtype=torch.float64)
secont condition:: tensor(6.2593e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7967e-10, dtype=torch.float64)
secont condition:: tensor(5.7967e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4814e-10, dtype=torch.float64)
secont condition:: tensor(5.4814e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2777e-10, dtype=torch.float64)
secont condition:: tensor(6.2777e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-10, dtype=torch.float64)
secont condition:: tensor(6.5088e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6221e-10, dtype=torch.float64)
secont condition:: tensor(6.6221e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5489e-10, dtype=torch.float64)
secont condition:: tensor(5.5489e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3651e-10, dtype=torch.float64)
secont condition:: tensor(7.3651e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8556e-10, dtype=torch.float64)
secont condition:: tensor(6.8556e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9140e-10, dtype=torch.float64)
secont condition:: tensor(6.9140e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9773e-10, dtype=torch.float64)
secont condition:: tensor(6.9773e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2085e-10, dtype=torch.float64)
secont condition:: tensor(7.2085e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9650e-10, dtype=torch.float64)
secont condition:: tensor(7.9650e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1701e-10, dtype=torch.float64)
secont condition:: tensor(9.1701e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1558e-10, dtype=torch.float64)
secont condition:: tensor(9.1558e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9410e-10, dtype=torch.float64)
secont condition:: tensor(9.9410e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0414e-09, dtype=torch.float64)
secont condition:: tensor(1.0414e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0854e-09, dtype=torch.float64)
secont condition:: tensor(1.0854e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3157e-09, dtype=torch.float64)
secont condition:: tensor(1.3157e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2173e-09, dtype=torch.float64)
secont condition:: tensor(1.2173e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2661e-09, dtype=torch.float64)
secont condition:: tensor(1.2661e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1169e-09, dtype=torch.float64)
secont condition:: tensor(1.1169e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3856e-09, dtype=torch.float64)
secont condition:: tensor(1.3856e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4458e-09, dtype=torch.float64)
secont condition:: tensor(1.4458e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-09, dtype=torch.float64)
secont condition:: tensor(1.4883e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6441e-09, dtype=torch.float64)
secont condition:: tensor(1.6441e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6331e-09, dtype=torch.float64)
secont condition:: tensor(1.6331e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4314e-09, dtype=torch.float64)
secont condition:: tensor(1.4314e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5950e-10, dtype=torch.float64)
secont condition:: tensor(9.5950e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-09, dtype=torch.float64)
secont condition:: tensor(1.2433e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8802e-10, dtype=torch.float64)
secont condition:: tensor(9.8802e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3974e-10, dtype=torch.float64)
secont condition:: tensor(8.3974e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.682210206985474
curr_diff: 0 tensor(4.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5896e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8337e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.86535334587097
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.85191679000854
time_baseline:: 99.11970448493958
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4677e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4685e-11, dtype=torch.float64)
secont condition:: tensor(1.4685e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5130e-11, dtype=torch.float64)
secont condition:: tensor(4.5130e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5512e-11, dtype=torch.float64)
secont condition:: tensor(6.5512e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3636e-10, dtype=torch.float64)
secont condition:: tensor(1.3636e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6989e-10, dtype=torch.float64)
secont condition:: tensor(1.6989e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8597e-10, dtype=torch.float64)
secont condition:: tensor(1.8597e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2665e-10, dtype=torch.float64)
secont condition:: tensor(2.2665e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3672e-10, dtype=torch.float64)
secont condition:: tensor(2.3672e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6478e-10, dtype=torch.float64)
secont condition:: tensor(2.6478e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9606e-10, dtype=torch.float64)
secont condition:: tensor(2.9606e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1442e-10, dtype=torch.float64)
secont condition:: tensor(3.1442e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5719e-10, dtype=torch.float64)
secont condition:: tensor(3.5719e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7624e-10, dtype=torch.float64)
secont condition:: tensor(3.7624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0421e-10, dtype=torch.float64)
secont condition:: tensor(4.0421e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6741e-10, dtype=torch.float64)
secont condition:: tensor(3.6741e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5759e-10, dtype=torch.float64)
secont condition:: tensor(4.5759e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4482e-10, dtype=torch.float64)
secont condition:: tensor(4.4482e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8180e-10, dtype=torch.float64)
secont condition:: tensor(4.8180e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6100e-10, dtype=torch.float64)
secont condition:: tensor(4.6100e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7848e-10, dtype=torch.float64)
secont condition:: tensor(4.7848e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6563e-10, dtype=torch.float64)
secont condition:: tensor(4.6563e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8341e-10, dtype=torch.float64)
secont condition:: tensor(4.8341e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6669e-10, dtype=torch.float64)
secont condition:: tensor(5.6669e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1798e-10, dtype=torch.float64)
secont condition:: tensor(6.1798e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2593e-10, dtype=torch.float64)
secont condition:: tensor(6.2593e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7967e-10, dtype=torch.float64)
secont condition:: tensor(5.7967e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4814e-10, dtype=torch.float64)
secont condition:: tensor(5.4814e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2777e-10, dtype=torch.float64)
secont condition:: tensor(6.2777e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-10, dtype=torch.float64)
secont condition:: tensor(6.5088e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6221e-10, dtype=torch.float64)
secont condition:: tensor(6.6221e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5489e-10, dtype=torch.float64)
secont condition:: tensor(5.5489e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3651e-10, dtype=torch.float64)
secont condition:: tensor(7.3651e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8556e-10, dtype=torch.float64)
secont condition:: tensor(6.8556e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9140e-10, dtype=torch.float64)
secont condition:: tensor(6.9140e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9773e-10, dtype=torch.float64)
secont condition:: tensor(6.9773e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2085e-10, dtype=torch.float64)
secont condition:: tensor(7.2085e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9650e-10, dtype=torch.float64)
secont condition:: tensor(7.9650e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1701e-10, dtype=torch.float64)
secont condition:: tensor(9.1701e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1558e-10, dtype=torch.float64)
secont condition:: tensor(9.1558e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9410e-10, dtype=torch.float64)
secont condition:: tensor(9.9410e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0414e-09, dtype=torch.float64)
secont condition:: tensor(1.0414e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0854e-09, dtype=torch.float64)
secont condition:: tensor(1.0854e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3157e-09, dtype=torch.float64)
secont condition:: tensor(1.3157e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2173e-09, dtype=torch.float64)
secont condition:: tensor(1.2173e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2661e-09, dtype=torch.float64)
secont condition:: tensor(1.2661e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1169e-09, dtype=torch.float64)
secont condition:: tensor(1.1169e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3856e-09, dtype=torch.float64)
secont condition:: tensor(1.3856e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4458e-09, dtype=torch.float64)
secont condition:: tensor(1.4458e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-09, dtype=torch.float64)
secont condition:: tensor(1.4883e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6441e-09, dtype=torch.float64)
secont condition:: tensor(1.6441e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6331e-09, dtype=torch.float64)
secont condition:: tensor(1.6331e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4314e-09, dtype=torch.float64)
secont condition:: tensor(1.4314e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5950e-10, dtype=torch.float64)
secont condition:: tensor(9.5950e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-09, dtype=torch.float64)
secont condition:: tensor(1.2433e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8802e-10, dtype=torch.float64)
secont condition:: tensor(9.8802e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3974e-10, dtype=torch.float64)
secont condition:: tensor(8.3974e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.703142881393433
curr_diff: 0 tensor(4.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5896e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8337e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 119.04855465888977
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.30554699897766
time_baseline:: 99.56928730010986
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8379e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4677e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4685e-11, dtype=torch.float64)
secont condition:: tensor(1.4685e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5130e-11, dtype=torch.float64)
secont condition:: tensor(4.5130e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5512e-11, dtype=torch.float64)
secont condition:: tensor(6.5512e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3636e-10, dtype=torch.float64)
secont condition:: tensor(1.3636e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6989e-10, dtype=torch.float64)
secont condition:: tensor(1.6989e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8597e-10, dtype=torch.float64)
secont condition:: tensor(1.8597e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2665e-10, dtype=torch.float64)
secont condition:: tensor(2.2665e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3672e-10, dtype=torch.float64)
secont condition:: tensor(2.3672e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6478e-10, dtype=torch.float64)
secont condition:: tensor(2.6478e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0470e-10, dtype=torch.float64)
secont condition:: tensor(3.0470e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9606e-10, dtype=torch.float64)
secont condition:: tensor(2.9606e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1442e-10, dtype=torch.float64)
secont condition:: tensor(3.1442e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5719e-10, dtype=torch.float64)
secont condition:: tensor(3.5719e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7624e-10, dtype=torch.float64)
secont condition:: tensor(3.7624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0421e-10, dtype=torch.float64)
secont condition:: tensor(4.0421e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6741e-10, dtype=torch.float64)
secont condition:: tensor(3.6741e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5759e-10, dtype=torch.float64)
secont condition:: tensor(4.5759e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4482e-10, dtype=torch.float64)
secont condition:: tensor(4.4482e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8180e-10, dtype=torch.float64)
secont condition:: tensor(4.8180e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6100e-10, dtype=torch.float64)
secont condition:: tensor(4.6100e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7848e-10, dtype=torch.float64)
secont condition:: tensor(4.7848e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6563e-10, dtype=torch.float64)
secont condition:: tensor(4.6563e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8341e-10, dtype=torch.float64)
secont condition:: tensor(4.8341e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6669e-10, dtype=torch.float64)
secont condition:: tensor(5.6669e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1798e-10, dtype=torch.float64)
secont condition:: tensor(6.1798e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2593e-10, dtype=torch.float64)
secont condition:: tensor(6.2593e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7967e-10, dtype=torch.float64)
secont condition:: tensor(5.7967e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4814e-10, dtype=torch.float64)
secont condition:: tensor(5.4814e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2777e-10, dtype=torch.float64)
secont condition:: tensor(6.2777e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-10, dtype=torch.float64)
secont condition:: tensor(6.5088e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6221e-10, dtype=torch.float64)
secont condition:: tensor(6.6221e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5489e-10, dtype=torch.float64)
secont condition:: tensor(5.5489e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3651e-10, dtype=torch.float64)
secont condition:: tensor(7.3651e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8556e-10, dtype=torch.float64)
secont condition:: tensor(6.8556e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9140e-10, dtype=torch.float64)
secont condition:: tensor(6.9140e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9773e-10, dtype=torch.float64)
secont condition:: tensor(6.9773e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2085e-10, dtype=torch.float64)
secont condition:: tensor(7.2085e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9650e-10, dtype=torch.float64)
secont condition:: tensor(7.9650e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1701e-10, dtype=torch.float64)
secont condition:: tensor(9.1701e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1558e-10, dtype=torch.float64)
secont condition:: tensor(9.1558e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9410e-10, dtype=torch.float64)
secont condition:: tensor(9.9410e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0414e-09, dtype=torch.float64)
secont condition:: tensor(1.0414e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0854e-09, dtype=torch.float64)
secont condition:: tensor(1.0854e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3157e-09, dtype=torch.float64)
secont condition:: tensor(1.3157e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1177e-09, dtype=torch.float64)
secont condition:: tensor(1.1177e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2173e-09, dtype=torch.float64)
secont condition:: tensor(1.2173e-09, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2661e-09, dtype=torch.float64)
secont condition:: tensor(1.2661e-09, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1169e-09, dtype=torch.float64)
secont condition:: tensor(1.1169e-09, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3856e-09, dtype=torch.float64)
secont condition:: tensor(1.3856e-09, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4458e-09, dtype=torch.float64)
secont condition:: tensor(1.4458e-09, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-09, dtype=torch.float64)
secont condition:: tensor(1.4883e-09, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6441e-09, dtype=torch.float64)
secont condition:: tensor(1.6441e-09, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6331e-09, dtype=torch.float64)
secont condition:: tensor(1.6331e-09, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4314e-09, dtype=torch.float64)
secont condition:: tensor(1.4314e-09, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3287e-09, dtype=torch.float64)
secont condition:: tensor(1.3287e-09, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5950e-10, dtype=torch.float64)
secont condition:: tensor(9.5950e-10, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-09, dtype=torch.float64)
secont condition:: tensor(1.2433e-09, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8802e-10, dtype=torch.float64)
secont condition:: tensor(9.8802e-10, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3974e-10, dtype=torch.float64)
secont condition:: tensor(8.3974e-10, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.64146399497986
curr_diff: 0 tensor(4.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5896e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8337e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252022
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.237010
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.226086
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222686
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.222804
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.224049
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220514
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.216266
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.217710
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.219362
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.217725
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.215473
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.220520
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218900
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.223178
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.220561
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.215558
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214997
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.220768
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215768
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.218253
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.214610
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.223368
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.218715
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215523
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.220820
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215733
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213946
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.216610
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.218843
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.218039
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217162
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.217015
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.214263
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.212941
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.215546
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.209956
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.216125
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216699
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215314
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.217430
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214395
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.217698
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.216309
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.212365
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215130
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.215809
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214844
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.215393
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.214259
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.212510
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.213665
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.213043
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.215458
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216342
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.218419
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215735
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216070
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.212127
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215250
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.47165846824646
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.65397906303406
time_baseline:: 44.7914400100708
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1167e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1515e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3821e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4615e-11, dtype=torch.float64)
secont condition:: tensor(3.4615e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5229e-11, dtype=torch.float64)
secont condition:: tensor(3.5229e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7033e-11, dtype=torch.float64)
secont condition:: tensor(8.7033e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6009e-11, dtype=torch.float64)
secont condition:: tensor(7.6009e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6257e-10, dtype=torch.float64)
secont condition:: tensor(1.6257e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5481e-10, dtype=torch.float64)
secont condition:: tensor(1.5481e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4739e-10, dtype=torch.float64)
secont condition:: tensor(2.4739e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1604e-10, dtype=torch.float64)
secont condition:: tensor(2.1604e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1381e-10, dtype=torch.float64)
secont condition:: tensor(3.1381e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6355e-10, dtype=torch.float64)
secont condition:: tensor(2.6355e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0603e-10, dtype=torch.float64)
secont condition:: tensor(2.0603e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1178e-10, dtype=torch.float64)
secont condition:: tensor(3.1178e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5839e-10, dtype=torch.float64)
secont condition:: tensor(2.5839e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6507e-10, dtype=torch.float64)
secont condition:: tensor(3.6507e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3251e-10, dtype=torch.float64)
secont condition:: tensor(3.3251e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4859e-10, dtype=torch.float64)
secont condition:: tensor(5.4859e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3752e-10, dtype=torch.float64)
secont condition:: tensor(3.3752e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0499e-10, dtype=torch.float64)
secont condition:: tensor(5.0499e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9969e-10, dtype=torch.float64)
secont condition:: tensor(4.9969e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0562e-10, dtype=torch.float64)
secont condition:: tensor(4.0562e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3802e-10, dtype=torch.float64)
secont condition:: tensor(5.3802e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4426e-10, dtype=torch.float64)
secont condition:: tensor(4.4426e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6371e-10, dtype=torch.float64)
secont condition:: tensor(6.6371e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6763e-10, dtype=torch.float64)
secont condition:: tensor(5.6763e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3942e-10, dtype=torch.float64)
secont condition:: tensor(6.3942e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3566e-10, dtype=torch.float64)
secont condition:: tensor(5.3566e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7745e-10, dtype=torch.float64)
secont condition:: tensor(6.7745e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7640e-10, dtype=torch.float64)
secont condition:: tensor(5.7640e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3997e-10, dtype=torch.float64)
secont condition:: tensor(5.3997e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0886e-10, dtype=torch.float64)
secont condition:: tensor(7.0886e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1210e-10, dtype=torch.float64)
secont condition:: tensor(6.1210e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8104e-10, dtype=torch.float64)
secont condition:: tensor(5.8104e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2414e-10, dtype=torch.float64)
secont condition:: tensor(8.2414e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5645e-10, dtype=torch.float64)
secont condition:: tensor(6.5645e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3023e-10, dtype=torch.float64)
secont condition:: tensor(6.3023e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5036e-10, dtype=torch.float64)
secont condition:: tensor(5.5036e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8176e-10, dtype=torch.float64)
secont condition:: tensor(6.8176e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7123e-10, dtype=torch.float64)
secont condition:: tensor(6.7123e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3910e-10, dtype=torch.float64)
secont condition:: tensor(7.3910e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0416e-09, dtype=torch.float64)
secont condition:: tensor(1.0416e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0659e-09, dtype=torch.float64)
secont condition:: tensor(1.0659e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2022e-09, dtype=torch.float64)
secont condition:: tensor(1.2022e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1859e-09, dtype=torch.float64)
secont condition:: tensor(1.1859e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0518e-09, dtype=torch.float64)
secont condition:: tensor(1.0518e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3312e-09, dtype=torch.float64)
secont condition:: tensor(1.3312e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3155e-09, dtype=torch.float64)
secont condition:: tensor(1.3155e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5910e-09, dtype=torch.float64)
secont condition:: tensor(1.5910e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4609e-09, dtype=torch.float64)
secont condition:: tensor(1.4609e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2172e-09, dtype=torch.float64)
secont condition:: tensor(1.2172e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5584e-09, dtype=torch.float64)
secont condition:: tensor(1.5584e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5555e-09, dtype=torch.float64)
secont condition:: tensor(1.5555e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6658e-09, dtype=torch.float64)
secont condition:: tensor(1.6658e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4765e-09, dtype=torch.float64)
secont condition:: tensor(1.4765e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6789e-09, dtype=torch.float64)
secont condition:: tensor(1.6789e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9208e-09, dtype=torch.float64)
secont condition:: tensor(1.9208e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9355e-09, dtype=torch.float64)
secont condition:: tensor(1.9355e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2326e-09, dtype=torch.float64)
secont condition:: tensor(2.2326e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9515e-09, dtype=torch.float64)
secont condition:: tensor(1.9515e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0938e-09, dtype=torch.float64)
secont condition:: tensor(2.0938e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4201e-09, dtype=torch.float64)
secont condition:: tensor(2.4201e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0508e-09, dtype=torch.float64)
secont condition:: tensor(2.0508e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0510e-09, dtype=torch.float64)
secont condition:: tensor(2.0510e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.024157285690308
curr_diff: 0 tensor(3.6940e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6276e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6216e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7166e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7297e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1097e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3678e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8226e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255833
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.234962
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.226220
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.220313
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.219825
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221712
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220695
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.221995
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216931
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.223572
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.218882
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 11, Batch: 0, Loss: 0.213468
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.219900
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.218080
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217121
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.214169
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.215584
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.220988
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.220481
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216345
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.219533
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.221866
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.214573
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.219457
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.214084
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.217080
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215325
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.217219
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.214012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217620
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217232
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215198
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.218512
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.219440
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.216554
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.218415
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.212067
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.213508
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.211942
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.214513
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.217368
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215052
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214398
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.218146
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.219392
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.218049
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.215722
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.213689
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.214003
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 50, Batch: 0, Loss: 0.214504
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.215245
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.212540
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213100
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214113
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.214683
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215078
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216359
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.217486
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.213757
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.45218825340271
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.00602149963379
time_baseline:: 45.14114046096802
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8762e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5113e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8762e-12, dtype=torch.float64)
secont condition:: tensor(2.8762e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2172e-11, dtype=torch.float64)
secont condition:: tensor(4.2172e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1292e-11, dtype=torch.float64)
secont condition:: tensor(3.1292e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0452e-10, dtype=torch.float64)
secont condition:: tensor(1.0452e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5805e-10, dtype=torch.float64)
secont condition:: tensor(1.5805e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-10, dtype=torch.float64)
secont condition:: tensor(1.6501e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8277e-10, dtype=torch.float64)
secont condition:: tensor(1.8277e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8489e-10, dtype=torch.float64)
secont condition:: tensor(1.8489e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0373e-10, dtype=torch.float64)
secont condition:: tensor(3.0373e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6763e-10, dtype=torch.float64)
secont condition:: tensor(2.6763e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8517e-10, dtype=torch.float64)
secont condition:: tensor(3.8517e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0200e-10, dtype=torch.float64)
secont condition:: tensor(3.0200e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4586e-10, dtype=torch.float64)
secont condition:: tensor(2.4586e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7527e-10, dtype=torch.float64)
secont condition:: tensor(3.7527e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0687e-10, dtype=torch.float64)
secont condition:: tensor(4.0687e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2707e-10, dtype=torch.float64)
secont condition:: tensor(4.2707e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0222e-10, dtype=torch.float64)
secont condition:: tensor(4.0222e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2586e-10, dtype=torch.float64)
secont condition:: tensor(4.2586e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1681e-10, dtype=torch.float64)
secont condition:: tensor(4.1681e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9527e-10, dtype=torch.float64)
secont condition:: tensor(3.9527e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2171e-10, dtype=torch.float64)
secont condition:: tensor(6.2171e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6385e-10, dtype=torch.float64)
secont condition:: tensor(4.6385e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6244e-10, dtype=torch.float64)
secont condition:: tensor(5.6244e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9884e-10, dtype=torch.float64)
secont condition:: tensor(5.9884e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5118e-10, dtype=torch.float64)
secont condition:: tensor(6.5118e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3122e-10, dtype=torch.float64)
secont condition:: tensor(6.3122e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4977e-10, dtype=torch.float64)
secont condition:: tensor(5.4977e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5665e-10, dtype=torch.float64)
secont condition:: tensor(6.5665e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4586e-10, dtype=torch.float64)
secont condition:: tensor(7.4586e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1538e-10, dtype=torch.float64)
secont condition:: tensor(7.1538e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2365e-10, dtype=torch.float64)
secont condition:: tensor(5.2365e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3495e-10, dtype=torch.float64)
secont condition:: tensor(6.3495e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6093e-10, dtype=torch.float64)
secont condition:: tensor(7.6093e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7909e-10, dtype=torch.float64)
secont condition:: tensor(7.7909e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6526e-10, dtype=torch.float64)
secont condition:: tensor(7.6526e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8724e-10, dtype=torch.float64)
secont condition:: tensor(5.8724e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1284e-10, dtype=torch.float64)
secont condition:: tensor(7.1284e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1449e-10, dtype=torch.float64)
secont condition:: tensor(7.1449e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2777e-10, dtype=torch.float64)
secont condition:: tensor(7.2777e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7589e-10, dtype=torch.float64)
secont condition:: tensor(8.7589e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0360e-09, dtype=torch.float64)
secont condition:: tensor(1.0360e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0390e-09, dtype=torch.float64)
secont condition:: tensor(1.0390e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9042e-10, dtype=torch.float64)
secont condition:: tensor(9.9042e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6686e-10, dtype=torch.float64)
secont condition:: tensor(8.6686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3176e-09, dtype=torch.float64)
secont condition:: tensor(1.3176e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4987e-09, dtype=torch.float64)
secont condition:: tensor(1.4987e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4317e-09, dtype=torch.float64)
secont condition:: tensor(1.4317e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0939e-09, dtype=torch.float64)
secont condition:: tensor(2.0939e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5978e-09, dtype=torch.float64)
secont condition:: tensor(1.5978e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3799e-09, dtype=torch.float64)
secont condition:: tensor(1.3799e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5728e-09, dtype=torch.float64)
secont condition:: tensor(1.5728e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9509e-09, dtype=torch.float64)
secont condition:: tensor(1.9509e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6390e-09, dtype=torch.float64)
secont condition:: tensor(1.6390e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9798e-09, dtype=torch.float64)
secont condition:: tensor(1.9798e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8286e-09, dtype=torch.float64)
secont condition:: tensor(1.8286e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8322e-09, dtype=torch.float64)
secont condition:: tensor(1.8322e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9461e-09, dtype=torch.float64)
secont condition:: tensor(1.9461e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0147e-09, dtype=torch.float64)
secont condition:: tensor(2.0147e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8930e-09, dtype=torch.float64)
secont condition:: tensor(1.8930e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0738e-09, dtype=torch.float64)
secont condition:: tensor(2.0738e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6509e-09, dtype=torch.float64)
secont condition:: tensor(2.6509e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2268e-09, dtype=torch.float64)
secont condition:: tensor(2.2268e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3350e-09, dtype=torch.float64)
secont condition:: tensor(2.3350e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.158788681030273
curr_diff: 0 tensor(3.4847e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3200e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6879e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2909e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5201e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6944e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4382e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9047e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249533
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.235531
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.230242
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225849
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.222770
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.219565
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220334
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217273
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218532
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.218633
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.218465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.217313
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217783
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.219369
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.221051
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216393
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.219520
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.218540
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.220897
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215445
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216299
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.212587
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.215443
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.215741
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.212217
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.219372
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.213789
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.219826
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.214358
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.218436
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.216310
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.214371
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215446
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.215005
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.217724
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.219565
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.219024
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.220409
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.218070
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.212759
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.213890
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213817
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214811
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217866
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.214642
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.210883
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.214607
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.212949
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.219605
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.211648
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214495
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.219278
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217011
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.212771
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214706
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216902
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.214379
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.212763
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.219348
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.214164
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 57.03301548957825
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.76796269416809
time_baseline:: 44.899935245513916
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8150e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1479e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4321e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9102e-11, dtype=torch.float64)
secont condition:: tensor(1.9102e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1498e-11, dtype=torch.float64)
secont condition:: tensor(4.1498e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2887e-10, dtype=torch.float64)
secont condition:: tensor(1.2887e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4910e-11, dtype=torch.float64)
secont condition:: tensor(9.4910e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4728e-10, dtype=torch.float64)
secont condition:: tensor(1.4728e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5448e-10, dtype=torch.float64)
secont condition:: tensor(1.5448e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4188e-10, dtype=torch.float64)
secont condition:: tensor(2.4188e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0556e-10, dtype=torch.float64)
secont condition:: tensor(2.0556e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9446e-10, dtype=torch.float64)
secont condition:: tensor(1.9446e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7263e-10, dtype=torch.float64)
secont condition:: tensor(2.7263e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0894e-10, dtype=torch.float64)
secont condition:: tensor(3.0894e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7698e-10, dtype=torch.float64)
secont condition:: tensor(2.7698e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1897e-10, dtype=torch.float64)
secont condition:: tensor(3.1897e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2174e-10, dtype=torch.float64)
secont condition:: tensor(3.2174e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7217e-10, dtype=torch.float64)
secont condition:: tensor(3.7217e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3410e-10, dtype=torch.float64)
secont condition:: tensor(4.3410e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7289e-10, dtype=torch.float64)
secont condition:: tensor(3.7289e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7392e-10, dtype=torch.float64)
secont condition:: tensor(3.7392e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2591e-10, dtype=torch.float64)
secont condition:: tensor(5.2591e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0263e-10, dtype=torch.float64)
secont condition:: tensor(4.0263e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2593e-10, dtype=torch.float64)
secont condition:: tensor(5.2593e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8968e-10, dtype=torch.float64)
secont condition:: tensor(4.8968e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8322e-10, dtype=torch.float64)
secont condition:: tensor(4.8322e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7231e-10, dtype=torch.float64)
secont condition:: tensor(5.7231e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6752e-10, dtype=torch.float64)
secont condition:: tensor(5.6752e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5210e-10, dtype=torch.float64)
secont condition:: tensor(5.5210e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3232e-10, dtype=torch.float64)
secont condition:: tensor(5.3232e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1436e-10, dtype=torch.float64)
secont condition:: tensor(6.1436e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9608e-10, dtype=torch.float64)
secont condition:: tensor(2.9608e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3246e-10, dtype=torch.float64)
secont condition:: tensor(6.3246e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8201e-10, dtype=torch.float64)
secont condition:: tensor(7.8201e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8872e-10, dtype=torch.float64)
secont condition:: tensor(6.8872e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6505e-10, dtype=torch.float64)
secont condition:: tensor(4.6505e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3758e-10, dtype=torch.float64)
secont condition:: tensor(7.3758e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4491e-10, dtype=torch.float64)
secont condition:: tensor(6.4491e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0832e-10, dtype=torch.float64)
secont condition:: tensor(9.0832e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7958e-10, dtype=torch.float64)
secont condition:: tensor(8.7958e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7989e-10, dtype=torch.float64)
secont condition:: tensor(7.7989e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9343e-10, dtype=torch.float64)
secont condition:: tensor(8.9343e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8252e-10, dtype=torch.float64)
secont condition:: tensor(8.8252e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6570e-10, dtype=torch.float64)
secont condition:: tensor(9.6570e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2778e-09, dtype=torch.float64)
secont condition:: tensor(1.2778e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2747e-09, dtype=torch.float64)
secont condition:: tensor(1.2747e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9401e-09, dtype=torch.float64)
secont condition:: tensor(1.9401e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3632e-09, dtype=torch.float64)
secont condition:: tensor(1.3632e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2327e-09, dtype=torch.float64)
secont condition:: tensor(1.2327e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2267e-09, dtype=torch.float64)
secont condition:: tensor(1.2267e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2456e-09, dtype=torch.float64)
secont condition:: tensor(1.2456e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3261e-09, dtype=torch.float64)
secont condition:: tensor(1.3261e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4432e-09, dtype=torch.float64)
secont condition:: tensor(1.4432e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5975e-09, dtype=torch.float64)
secont condition:: tensor(1.5975e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7293e-09, dtype=torch.float64)
secont condition:: tensor(1.7293e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4454e-09, dtype=torch.float64)
secont condition:: tensor(1.4454e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7656e-09, dtype=torch.float64)
secont condition:: tensor(1.7656e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6307e-09, dtype=torch.float64)
secont condition:: tensor(1.6307e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9786e-09, dtype=torch.float64)
secont condition:: tensor(1.9786e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8031e-09, dtype=torch.float64)
secont condition:: tensor(1.8031e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0544e-09, dtype=torch.float64)
secont condition:: tensor(2.0544e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5656e-09, dtype=torch.float64)
secont condition:: tensor(2.5656e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8462e-09, dtype=torch.float64)
secont condition:: tensor(1.8462e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7274e-09, dtype=torch.float64)
secont condition:: tensor(1.7274e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6206e-09, dtype=torch.float64)
secont condition:: tensor(3.6206e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7599e-09, dtype=torch.float64)
secont condition:: tensor(2.7599e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0474e-09, dtype=torch.float64)
secont condition:: tensor(3.0474e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.052725315093994
curr_diff: 0 tensor(3.6618e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5246e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9125e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2871e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.6997e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7077e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255142
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.233345
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.228999
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.221990
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.222379
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.220759
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217178
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.221436
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.220040
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.218751
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.220096
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.216841
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216011
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.216794
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.212375
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.219559
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.217903
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.213923
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.214290
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217580
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.216753
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.214928
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 23, Batch: 0, Loss: 0.218498
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215449
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.219177
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217772
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.214982
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217552
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.224311
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215504
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215293
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.216078
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.218912
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.217510
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.212326
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.217080
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.215986
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216686
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216345
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.215736
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214915
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217867
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215037
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.214518
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216172
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.216172
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.219192
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.214049
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 50, Batch: 0, Loss: 0.220832
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.222116
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214679
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.218397
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216770
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.217044
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.216035
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.217299
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.216470
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.214082
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.905754804611206
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.920300245285034
time_baseline:: 45.05357599258423
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9851e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1434e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3730e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9102e-11, dtype=torch.float64)
secont condition:: tensor(3.9102e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3494e-11, dtype=torch.float64)
secont condition:: tensor(4.3494e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7887e-11, dtype=torch.float64)
secont condition:: tensor(6.7887e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0115e-10, dtype=torch.float64)
secont condition:: tensor(1.0115e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7087e-10, dtype=torch.float64)
secont condition:: tensor(1.7087e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6302e-10, dtype=torch.float64)
secont condition:: tensor(1.6302e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3848e-10, dtype=torch.float64)
secont condition:: tensor(1.3848e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2967e-10, dtype=torch.float64)
secont condition:: tensor(2.2967e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4835e-10, dtype=torch.float64)
secont condition:: tensor(2.4835e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8002e-10, dtype=torch.float64)
secont condition:: tensor(2.8002e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4594e-10, dtype=torch.float64)
secont condition:: tensor(3.4594e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9566e-10, dtype=torch.float64)
secont condition:: tensor(2.9566e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1059e-10, dtype=torch.float64)
secont condition:: tensor(4.1059e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6833e-10, dtype=torch.float64)
secont condition:: tensor(3.6833e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5855e-10, dtype=torch.float64)
secont condition:: tensor(2.5855e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8523e-10, dtype=torch.float64)
secont condition:: tensor(3.8523e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2881e-10, dtype=torch.float64)
secont condition:: tensor(3.2881e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4269e-10, dtype=torch.float64)
secont condition:: tensor(4.4269e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9324e-10, dtype=torch.float64)
secont condition:: tensor(4.9324e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5636e-10, dtype=torch.float64)
secont condition:: tensor(3.5636e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7394e-10, dtype=torch.float64)
secont condition:: tensor(4.7394e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3801e-10, dtype=torch.float64)
secont condition:: tensor(5.3801e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2147e-10, dtype=torch.float64)
secont condition:: tensor(5.2147e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2984e-10, dtype=torch.float64)
secont condition:: tensor(5.2984e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1422e-10, dtype=torch.float64)
secont condition:: tensor(6.1422e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5845e-10, dtype=torch.float64)
secont condition:: tensor(5.5845e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1458e-10, dtype=torch.float64)
secont condition:: tensor(5.1458e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2643e-10, dtype=torch.float64)
secont condition:: tensor(6.2643e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0643e-10, dtype=torch.float64)
secont condition:: tensor(4.0643e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2006e-10, dtype=torch.float64)
secont condition:: tensor(5.2006e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3365e-10, dtype=torch.float64)
secont condition:: tensor(6.3365e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1839e-10, dtype=torch.float64)
secont condition:: tensor(7.1839e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3216e-10, dtype=torch.float64)
secont condition:: tensor(6.3216e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9275e-10, dtype=torch.float64)
secont condition:: tensor(6.9275e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4622e-10, dtype=torch.float64)
secont condition:: tensor(6.4622e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5685e-10, dtype=torch.float64)
secont condition:: tensor(6.5685e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0367e-10, dtype=torch.float64)
secont condition:: tensor(8.0367e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6598e-10, dtype=torch.float64)
secont condition:: tensor(7.6598e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2431e-10, dtype=torch.float64)
secont condition:: tensor(8.2431e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2679e-10, dtype=torch.float64)
secont condition:: tensor(8.2679e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3577e-10, dtype=torch.float64)
secont condition:: tensor(8.3577e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1726e-10, dtype=torch.float64)
secont condition:: tensor(9.1726e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3709e-09, dtype=torch.float64)
secont condition:: tensor(1.3709e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3785e-09, dtype=torch.float64)
secont condition:: tensor(1.3785e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1016e-09, dtype=torch.float64)
secont condition:: tensor(1.1016e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4316e-09, dtype=torch.float64)
secont condition:: tensor(1.4316e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2563e-09, dtype=torch.float64)
secont condition:: tensor(1.2563e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4261e-09, dtype=torch.float64)
secont condition:: tensor(1.4261e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2221e-09, dtype=torch.float64)
secont condition:: tensor(1.2221e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4017e-09, dtype=torch.float64)
secont condition:: tensor(1.4017e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4781e-09, dtype=torch.float64)
secont condition:: tensor(1.4781e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5506e-09, dtype=torch.float64)
secont condition:: tensor(1.5506e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6217e-09, dtype=torch.float64)
secont condition:: tensor(1.6217e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6561e-09, dtype=torch.float64)
secont condition:: tensor(1.6561e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6950e-09, dtype=torch.float64)
secont condition:: tensor(1.6950e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8531e-09, dtype=torch.float64)
secont condition:: tensor(1.8531e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8829e-09, dtype=torch.float64)
secont condition:: tensor(1.8829e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3652e-09, dtype=torch.float64)
secont condition:: tensor(2.3652e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9273e-09, dtype=torch.float64)
secont condition:: tensor(1.9273e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3166e-09, dtype=torch.float64)
secont condition:: tensor(2.3166e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1060e-09, dtype=torch.float64)
secont condition:: tensor(2.1060e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0422e-09, dtype=torch.float64)
secont condition:: tensor(2.0422e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0955e-09, dtype=torch.float64)
secont condition:: tensor(2.0955e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0045e-09, dtype=torch.float64)
secont condition:: tensor(3.0045e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2196e-09, dtype=torch.float64)
secont condition:: tensor(2.2196e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.0548574924469
curr_diff: 0 tensor(3.7187e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6681e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3232e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9325e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7517e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8819e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3701e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6782e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247784
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.237651
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.232086
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.224487
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.221249
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221019
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.219609
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217817
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.213849
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.216198
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.216915
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.218882
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.219831
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218444
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.214957
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217455
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.218491
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.215448
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.215014
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215567
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217532
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.216110
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 22, Batch: 0, Loss: 0.213964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217004
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214675
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217296
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215962
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.212283
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.212082
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217907
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.213037
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.217160
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.215446
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.213958
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.215384
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.218659
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 37, Batch: 0, Loss: 0.215683
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216975
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.218923
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.213683
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.216209
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.213358
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.218858
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216336
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.217483
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.215431
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.216575
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.215481
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.215423
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216568
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214117
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.218424
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213481
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.213854
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216818
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.213103
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.217438
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.214385
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.218231
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.270448446273804
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.091787338256836
time_baseline:: 45.22538161277771
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6948e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4331e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7000e-11, dtype=torch.float64)
secont condition:: tensor(3.7000e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1431e-11, dtype=torch.float64)
secont condition:: tensor(4.1431e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9400e-11, dtype=torch.float64)
secont condition:: tensor(4.9400e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0868e-10, dtype=torch.float64)
secont condition:: tensor(1.0868e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.4750e-11, dtype=torch.float64)
secont condition:: tensor(9.4750e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6352e-10, dtype=torch.float64)
secont condition:: tensor(1.6352e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1435e-10, dtype=torch.float64)
secont condition:: tensor(2.1435e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4544e-10, dtype=torch.float64)
secont condition:: tensor(2.4544e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9674e-10, dtype=torch.float64)
secont condition:: tensor(2.9674e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4557e-10, dtype=torch.float64)
secont condition:: tensor(2.4557e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6849e-10, dtype=torch.float64)
secont condition:: tensor(3.6849e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0189e-10, dtype=torch.float64)
secont condition:: tensor(3.0189e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7604e-10, dtype=torch.float64)
secont condition:: tensor(3.7604e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2256e-10, dtype=torch.float64)
secont condition:: tensor(3.2256e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0640e-10, dtype=torch.float64)
secont condition:: tensor(4.0640e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8210e-10, dtype=torch.float64)
secont condition:: tensor(3.8210e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8547e-10, dtype=torch.float64)
secont condition:: tensor(4.8547e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2984e-10, dtype=torch.float64)
secont condition:: tensor(4.2984e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4262e-10, dtype=torch.float64)
secont condition:: tensor(3.4262e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6066e-10, dtype=torch.float64)
secont condition:: tensor(4.6066e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8028e-10, dtype=torch.float64)
secont condition:: tensor(4.8028e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5693e-10, dtype=torch.float64)
secont condition:: tensor(3.5693e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9045e-10, dtype=torch.float64)
secont condition:: tensor(4.9045e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9666e-10, dtype=torch.float64)
secont condition:: tensor(5.9666e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4969e-10, dtype=torch.float64)
secont condition:: tensor(5.4969e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0701e-10, dtype=torch.float64)
secont condition:: tensor(5.0701e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1395e-10, dtype=torch.float64)
secont condition:: tensor(5.1395e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6639e-10, dtype=torch.float64)
secont condition:: tensor(6.6639e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7144e-10, dtype=torch.float64)
secont condition:: tensor(4.7144e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8224e-10, dtype=torch.float64)
secont condition:: tensor(6.8224e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6372e-10, dtype=torch.float64)
secont condition:: tensor(6.6372e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4984e-10, dtype=torch.float64)
secont condition:: tensor(4.4984e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4167e-10, dtype=torch.float64)
secont condition:: tensor(6.4167e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3017e-10, dtype=torch.float64)
secont condition:: tensor(7.3017e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6172e-10, dtype=torch.float64)
secont condition:: tensor(5.6172e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3860e-10, dtype=torch.float64)
secont condition:: tensor(5.3860e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1813e-10, dtype=torch.float64)
secont condition:: tensor(6.1813e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9395e-10, dtype=torch.float64)
secont condition:: tensor(6.9395e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3498e-10, dtype=torch.float64)
secont condition:: tensor(7.3498e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1423e-10, dtype=torch.float64)
secont condition:: tensor(9.1423e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0028e-09, dtype=torch.float64)
secont condition:: tensor(1.0028e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1420e-09, dtype=torch.float64)
secont condition:: tensor(1.1420e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2424e-09, dtype=torch.float64)
secont condition:: tensor(1.2424e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1437e-09, dtype=torch.float64)
secont condition:: tensor(1.1437e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0860e-09, dtype=torch.float64)
secont condition:: tensor(1.0860e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5697e-09, dtype=torch.float64)
secont condition:: tensor(1.5697e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0176e-09, dtype=torch.float64)
secont condition:: tensor(2.0176e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3501e-09, dtype=torch.float64)
secont condition:: tensor(1.3501e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4904e-09, dtype=torch.float64)
secont condition:: tensor(1.4904e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6265e-09, dtype=torch.float64)
secont condition:: tensor(1.6265e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4793e-09, dtype=torch.float64)
secont condition:: tensor(1.4793e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4948e-09, dtype=torch.float64)
secont condition:: tensor(1.4948e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5639e-09, dtype=torch.float64)
secont condition:: tensor(1.5639e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7708e-09, dtype=torch.float64)
secont condition:: tensor(1.7708e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4965e-09, dtype=torch.float64)
secont condition:: tensor(1.4965e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4724e-09, dtype=torch.float64)
secont condition:: tensor(1.4724e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7560e-09, dtype=torch.float64)
secont condition:: tensor(1.7560e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9466e-09, dtype=torch.float64)
secont condition:: tensor(1.9466e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9179e-09, dtype=torch.float64)
secont condition:: tensor(1.9179e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0735e-09, dtype=torch.float64)
secont condition:: tensor(2.0735e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0414e-09, dtype=torch.float64)
secont condition:: tensor(3.0414e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2562e-09, dtype=torch.float64)
secont condition:: tensor(2.2562e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.06784462928772
curr_diff: 0 tensor(3.5148e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5250e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.6237e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9350e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5422e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.3152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2941e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5675e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249698
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.226373
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.217923
Test Avg. Loss: 0.000021, Accuracy: 0.944000
Train - Epoch 3, Batch: 0, Loss: 0.212045
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.217438
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 5, Batch: 0, Loss: 0.216750
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.219731
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.218676
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.218417
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.218076
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.215983
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.215964
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.214370
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.218209
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.213005
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 15, Batch: 0, Loss: 0.212849
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.216774
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.220969
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.211960
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.216443
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.218791
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.212946
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.217023
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.212074
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.218816
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217005
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.212668
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216437
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.211779
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 30, Batch: 0, Loss: 0.217783
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.214809
Test Avg. Loss: 0.000021, Accuracy: 0.945800
training_time:: 30.89591932296753
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.638803720474243
time_baseline:: 22.70995545387268
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5705e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5986e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3052e-11, dtype=torch.float64)
secont condition:: tensor(8.3052e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3278e-11, dtype=torch.float64)
secont condition:: tensor(5.3278e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1469e-10, dtype=torch.float64)
secont condition:: tensor(1.1469e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2488e-11, dtype=torch.float64)
secont condition:: tensor(9.2488e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6030e-10, dtype=torch.float64)
secont condition:: tensor(1.6030e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2509e-10, dtype=torch.float64)
secont condition:: tensor(1.2509e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1879e-10, dtype=torch.float64)
secont condition:: tensor(1.1879e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2018e-10, dtype=torch.float64)
secont condition:: tensor(1.2018e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4113e-10, dtype=torch.float64)
secont condition:: tensor(4.4113e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5968e-10, dtype=torch.float64)
secont condition:: tensor(4.5968e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4310e-10, dtype=torch.float64)
secont condition:: tensor(3.4310e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5090e-10, dtype=torch.float64)
secont condition:: tensor(2.5090e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1790e-10, dtype=torch.float64)
secont condition:: tensor(5.1790e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9019e-10, dtype=torch.float64)
secont condition:: tensor(4.9019e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6150e-10, dtype=torch.float64)
secont condition:: tensor(4.6150e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1751e-10, dtype=torch.float64)
secont condition:: tensor(4.1751e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2620e-10, dtype=torch.float64)
secont condition:: tensor(3.2620e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7542e-10, dtype=torch.float64)
secont condition:: tensor(2.7542e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2530e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4378e-10, dtype=torch.float64)
secont condition:: tensor(6.4378e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6029e-10, dtype=torch.float64)
secont condition:: tensor(7.6029e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6504e-10, dtype=torch.float64)
secont condition:: tensor(8.6504e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7433e-10, dtype=torch.float64)
secont condition:: tensor(6.7433e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0940e-10, dtype=torch.float64)
secont condition:: tensor(6.0940e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1379e-10, dtype=torch.float64)
secont condition:: tensor(6.1379e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8349e-10, dtype=torch.float64)
secont condition:: tensor(6.8349e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7234e-10, dtype=torch.float64)
secont condition:: tensor(5.7234e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9993e-10, dtype=torch.float64)
secont condition:: tensor(5.9993e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4930e-10, dtype=torch.float64)
secont condition:: tensor(4.4930e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0127e-10, dtype=torch.float64)
secont condition:: tensor(6.0127e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2941e-10, dtype=torch.float64)
secont condition:: tensor(6.2941e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8907e-10, dtype=torch.float64)
secont condition:: tensor(8.8907e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5143e-10, dtype=torch.float64)
secont condition:: tensor(5.5143e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5555e-10, dtype=torch.float64)
secont condition:: tensor(6.5555e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9081e-10, dtype=torch.float64)
secont condition:: tensor(5.9081e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9146e-10, dtype=torch.float64)
secont condition:: tensor(6.9146e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0157e-10, dtype=torch.float64)
secont condition:: tensor(6.0157e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8443e-10, dtype=torch.float64)
secont condition:: tensor(6.8443e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1922e-10, dtype=torch.float64)
secont condition:: tensor(6.1922e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5298e-10, dtype=torch.float64)
secont condition:: tensor(8.5298e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1389e-10, dtype=torch.float64)
secont condition:: tensor(9.1389e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1124e-09, dtype=torch.float64)
secont condition:: tensor(1.1124e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1916e-09, dtype=torch.float64)
secont condition:: tensor(1.1916e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7008e-09, dtype=torch.float64)
secont condition:: tensor(1.7008e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7645e-09, dtype=torch.float64)
secont condition:: tensor(1.7645e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3452e-09, dtype=torch.float64)
secont condition:: tensor(1.3452e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7305e-09, dtype=torch.float64)
secont condition:: tensor(1.7305e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2686e-09, dtype=torch.float64)
secont condition:: tensor(2.2686e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5563e-09, dtype=torch.float64)
secont condition:: tensor(1.5563e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8302e-09, dtype=torch.float64)
secont condition:: tensor(1.8302e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8668e-09, dtype=torch.float64)
secont condition:: tensor(1.8668e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7703e-09, dtype=torch.float64)
secont condition:: tensor(1.7703e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5120e-09, dtype=torch.float64)
secont condition:: tensor(1.5120e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2249e-09, dtype=torch.float64)
secont condition:: tensor(2.2249e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5993e-09, dtype=torch.float64)
secont condition:: tensor(2.5993e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4732e-09, dtype=torch.float64)
secont condition:: tensor(1.4732e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6192e-09, dtype=torch.float64)
secont condition:: tensor(2.6192e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0404e-09, dtype=torch.float64)
secont condition:: tensor(3.0404e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.989435195922852
curr_diff: 0 tensor(4.6088e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3006e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7970e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6515e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6592e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.6850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252270
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.217775
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.218605
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.219644
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.220504
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.215778
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 6, Batch: 0, Loss: 0.218253
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.220048
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.226221
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.212393
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.216983
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.217426
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.213388
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.219680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.211328
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.214475
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.208859
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216396
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.216012
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 19, Batch: 0, Loss: 0.210767
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.212232
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.222171
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.218709
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.216187
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.216759
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 25, Batch: 0, Loss: 0.212731
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.221618
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.225708
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.208186
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.212527
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.219857
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.212637
Test Avg. Loss: 0.000021, Accuracy: 0.945800
training_time:: 31.06889319419861
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.74536418914795
time_baseline:: 22.815386295318604
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1324e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6375e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0643e-10, dtype=torch.float64)
secont condition:: tensor(1.0643e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.9877e-11, dtype=torch.float64)
secont condition:: tensor(9.9877e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1778e-11, dtype=torch.float64)
secont condition:: tensor(8.1778e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7043e-11, dtype=torch.float64)
secont condition:: tensor(8.7043e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7378e-11, dtype=torch.float64)
secont condition:: tensor(8.7378e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7432e-11, dtype=torch.float64)
secont condition:: tensor(8.7432e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2814e-10, dtype=torch.float64)
secont condition:: tensor(1.2814e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0856e-10, dtype=torch.float64)
secont condition:: tensor(3.0856e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8693e-10, dtype=torch.float64)
secont condition:: tensor(4.8693e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7230e-10, dtype=torch.float64)
secont condition:: tensor(3.7230e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3434e-10, dtype=torch.float64)
secont condition:: tensor(3.3434e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2215e-10, dtype=torch.float64)
secont condition:: tensor(3.2215e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0729e-10, dtype=torch.float64)
secont condition:: tensor(3.0729e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1759e-10, dtype=torch.float64)
secont condition:: tensor(4.1759e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1233e-10, dtype=torch.float64)
secont condition:: tensor(3.1233e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3868e-10, dtype=torch.float64)
secont condition:: tensor(3.3868e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5503e-10, dtype=torch.float64)
secont condition:: tensor(4.5503e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1827e-10, dtype=torch.float64)
secont condition:: tensor(4.1827e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9111e-10, dtype=torch.float64)
secont condition:: tensor(4.9111e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9410e-10, dtype=torch.float64)
secont condition:: tensor(3.9410e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5931e-10, dtype=torch.float64)
secont condition:: tensor(3.5931e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9746e-10, dtype=torch.float64)
secont condition:: tensor(5.9746e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2778e-10, dtype=torch.float64)
secont condition:: tensor(4.2778e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7415e-10, dtype=torch.float64)
secont condition:: tensor(6.7415e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4447e-10, dtype=torch.float64)
secont condition:: tensor(6.4447e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7699e-10, dtype=torch.float64)
secont condition:: tensor(5.7699e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2082e-10, dtype=torch.float64)
secont condition:: tensor(5.2082e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6219e-10, dtype=torch.float64)
secont condition:: tensor(5.6219e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3938e-10, dtype=torch.float64)
secont condition:: tensor(5.3938e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9828e-10, dtype=torch.float64)
secont condition:: tensor(5.9828e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5066e-10, dtype=torch.float64)
secont condition:: tensor(6.5066e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7705e-10, dtype=torch.float64)
secont condition:: tensor(6.7705e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9180e-10, dtype=torch.float64)
secont condition:: tensor(7.9180e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7177e-09, dtype=torch.float64)
secont condition:: tensor(1.7177e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4733e-10, dtype=torch.float64)
secont condition:: tensor(4.4733e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1101e-10, dtype=torch.float64)
secont condition:: tensor(8.1101e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5305e-10, dtype=torch.float64)
secont condition:: tensor(8.5305e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8509e-10, dtype=torch.float64)
secont condition:: tensor(9.8509e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9873e-10, dtype=torch.float64)
secont condition:: tensor(6.9873e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0864e-10, dtype=torch.float64)
secont condition:: tensor(6.0864e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3396e-09, dtype=torch.float64)
secont condition:: tensor(1.3396e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3620e-09, dtype=torch.float64)
secont condition:: tensor(1.3620e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4441e-09, dtype=torch.float64)
secont condition:: tensor(1.4441e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5365e-09, dtype=torch.float64)
secont condition:: tensor(1.5365e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4752e-09, dtype=torch.float64)
secont condition:: tensor(1.4752e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2561e-09, dtype=torch.float64)
secont condition:: tensor(1.2561e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6203e-09, dtype=torch.float64)
secont condition:: tensor(1.6203e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9895e-09, dtype=torch.float64)
secont condition:: tensor(1.9895e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2442e-09, dtype=torch.float64)
secont condition:: tensor(1.2442e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4446e-09, dtype=torch.float64)
secont condition:: tensor(1.4446e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9896e-09, dtype=torch.float64)
secont condition:: tensor(1.9896e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5031e-09, dtype=torch.float64)
secont condition:: tensor(1.5031e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9601e-09, dtype=torch.float64)
secont condition:: tensor(1.9601e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0799e-09, dtype=torch.float64)
secont condition:: tensor(2.0799e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3684e-09, dtype=torch.float64)
secont condition:: tensor(2.3684e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1947e-09, dtype=torch.float64)
secont condition:: tensor(2.1947e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5307e-09, dtype=torch.float64)
secont condition:: tensor(2.5307e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2682e-09, dtype=torch.float64)
secont condition:: tensor(3.2682e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.923018217086792
curr_diff: 0 tensor(4.2256e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3540e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7124e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1439e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2644e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5433e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5790e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8886e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251419
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.229504
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.221323
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.222746
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.217656
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.220989
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.215505
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 7, Batch: 0, Loss: 0.216572
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.217202
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.209219
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.216255
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.221597
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 12, Batch: 0, Loss: 0.217755
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.217286
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.218945
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 15, Batch: 0, Loss: 0.218110
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.221695
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.215900
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 18, Batch: 0, Loss: 0.216977
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 19, Batch: 0, Loss: 0.217323
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 20, Batch: 0, Loss: 0.216495
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.218130
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.213558
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.208036
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214751
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.220705
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.216736
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.213705
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217180
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.209328
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.213966
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.212764
Test Avg. Loss: 0.000021, Accuracy: 0.946100
training_time:: 31.17914605140686
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.60646390914917
time_baseline:: 22.677313089370728
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2329e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4472e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6767e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946100
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7647e-33, dtype=torch.float64)
secont condition:: tensor(5.7647e-33, dtype=torch.float64)
curr_secont condition:: tensor(3.2445e-11, dtype=torch.float64)
secont condition:: tensor(3.2445e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3272e-11, dtype=torch.float64)
secont condition:: tensor(9.3272e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2327e-10, dtype=torch.float64)
secont condition:: tensor(1.2327e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3140e-10, dtype=torch.float64)
secont condition:: tensor(3.3140e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8358e-10, dtype=torch.float64)
secont condition:: tensor(2.8358e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9254e-10, dtype=torch.float64)
secont condition:: tensor(2.9254e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4884e-10, dtype=torch.float64)
secont condition:: tensor(1.4884e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5636e-10, dtype=torch.float64)
secont condition:: tensor(1.5636e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3159e-10, dtype=torch.float64)
secont condition:: tensor(1.3159e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6855e-10, dtype=torch.float64)
secont condition:: tensor(1.6855e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7178e-10, dtype=torch.float64)
secont condition:: tensor(4.7178e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7056e-10, dtype=torch.float64)
secont condition:: tensor(4.7056e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3891e-10, dtype=torch.float64)
secont condition:: tensor(4.3891e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4762e-10, dtype=torch.float64)
secont condition:: tensor(3.4762e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0988e-10, dtype=torch.float64)
secont condition:: tensor(6.0988e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8042e-10, dtype=torch.float64)
secont condition:: tensor(4.8042e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6391e-10, dtype=torch.float64)
secont condition:: tensor(2.6391e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9863e-10, dtype=torch.float64)
secont condition:: tensor(7.9863e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1348e-10, dtype=torch.float64)
secont condition:: tensor(7.1348e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7856e-10, dtype=torch.float64)
secont condition:: tensor(6.7856e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0989e-10, dtype=torch.float64)
secont condition:: tensor(7.0989e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7405e-10, dtype=torch.float64)
secont condition:: tensor(6.7405e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6170e-10, dtype=torch.float64)
secont condition:: tensor(5.6170e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0903e-10, dtype=torch.float64)
secont condition:: tensor(5.0903e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3617e-10, dtype=torch.float64)
secont condition:: tensor(2.3617e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0374e-09, dtype=torch.float64)
secont condition:: tensor(1.0374e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2191e-10, dtype=torch.float64)
secont condition:: tensor(6.2191e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8943e-10, dtype=torch.float64)
secont condition:: tensor(5.8943e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1825e-10, dtype=torch.float64)
secont condition:: tensor(8.1825e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8534e-10, dtype=torch.float64)
secont condition:: tensor(6.8534e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3728e-10, dtype=torch.float64)
secont condition:: tensor(8.3728e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6860e-10, dtype=torch.float64)
secont condition:: tensor(4.6860e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5824e-10, dtype=torch.float64)
secont condition:: tensor(7.5824e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2669e-10, dtype=torch.float64)
secont condition:: tensor(6.2669e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0528e-10, dtype=torch.float64)
secont condition:: tensor(8.0528e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3817e-10, dtype=torch.float64)
secont condition:: tensor(6.3817e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8962e-10, dtype=torch.float64)
secont condition:: tensor(8.8962e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5457e-10, dtype=torch.float64)
secont condition:: tensor(7.5457e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4688e-10, dtype=torch.float64)
secont condition:: tensor(1.4688e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0231e-09, dtype=torch.float64)
secont condition:: tensor(1.0231e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0707e-09, dtype=torch.float64)
secont condition:: tensor(2.0707e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0944e-09, dtype=torch.float64)
secont condition:: tensor(1.0944e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7199e-09, dtype=torch.float64)
secont condition:: tensor(1.7199e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5617e-10, dtype=torch.float64)
secont condition:: tensor(9.5617e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8915e-09, dtype=torch.float64)
secont condition:: tensor(1.8915e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9005e-09, dtype=torch.float64)
secont condition:: tensor(1.9005e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3043e-09, dtype=torch.float64)
secont condition:: tensor(1.3043e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1605e-09, dtype=torch.float64)
secont condition:: tensor(2.1605e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6233e-09, dtype=torch.float64)
secont condition:: tensor(1.6233e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1164e-09, dtype=torch.float64)
secont condition:: tensor(2.1164e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9545e-10, dtype=torch.float64)
secont condition:: tensor(6.9545e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2738e-09, dtype=torch.float64)
secont condition:: tensor(2.2738e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5699e-09, dtype=torch.float64)
secont condition:: tensor(1.5699e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5148e-09, dtype=torch.float64)
secont condition:: tensor(2.5148e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4424e-09, dtype=torch.float64)
secont condition:: tensor(2.4424e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0482e-09, dtype=torch.float64)
secont condition:: tensor(2.0482e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0210e-09, dtype=torch.float64)
secont condition:: tensor(2.0210e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5818e-09, dtype=torch.float64)
secont condition:: tensor(3.5818e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7873e-09, dtype=torch.float64)
secont condition:: tensor(3.7873e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.717548847198486
curr_diff: 0 tensor(6.5349e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6787e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2717e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5205e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.5903e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8304e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1729e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251834
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.229494
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.218858
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.222690
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.214883
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.220417
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.212838
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.220902
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.211360
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.212917
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.214360
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.211446
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.219126
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.214024
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.216920
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.214365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.221971
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.215490
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 19, Batch: 0, Loss: 0.217143
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216008
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 21, Batch: 0, Loss: 0.215629
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.214299
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.213795
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 24, Batch: 0, Loss: 0.217407
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.220227
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.213001
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.213968
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.222519
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.216632
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.217014
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.215481
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.126218557357788
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.583245038986206
time_baseline:: 22.653414487838745
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5136e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2929e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5036e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0990e-10, dtype=torch.float64)
secont condition:: tensor(1.0990e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2968e-11, dtype=torch.float64)
secont condition:: tensor(8.2968e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1264e-11, dtype=torch.float64)
secont condition:: tensor(9.1264e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4479e-11, dtype=torch.float64)
secont condition:: tensor(8.4479e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1085e-10, dtype=torch.float64)
secont condition:: tensor(1.1085e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6970e-10, dtype=torch.float64)
secont condition:: tensor(2.6970e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1930e-11, dtype=torch.float64)
secont condition:: tensor(1.1930e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6440e-10, dtype=torch.float64)
secont condition:: tensor(1.6440e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5490e-10, dtype=torch.float64)
secont condition:: tensor(1.5490e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9252e-10, dtype=torch.float64)
secont condition:: tensor(2.9252e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6382e-10, dtype=torch.float64)
secont condition:: tensor(2.6382e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7167e-10, dtype=torch.float64)
secont condition:: tensor(2.7167e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3897e-10, dtype=torch.float64)
secont condition:: tensor(3.3897e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7378e-10, dtype=torch.float64)
secont condition:: tensor(3.7378e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2780e-10, dtype=torch.float64)
secont condition:: tensor(3.2780e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0377e-10, dtype=torch.float64)
secont condition:: tensor(3.0377e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4980e-10, dtype=torch.float64)
secont condition:: tensor(5.4980e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3794e-10, dtype=torch.float64)
secont condition:: tensor(4.3794e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1713e-10, dtype=torch.float64)
secont condition:: tensor(4.1713e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4691e-10, dtype=torch.float64)
secont condition:: tensor(3.4691e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5763e-10, dtype=torch.float64)
secont condition:: tensor(1.5763e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3040e-10, dtype=torch.float64)
secont condition:: tensor(4.3040e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3662e-10, dtype=torch.float64)
secont condition:: tensor(6.3662e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2940e-10, dtype=torch.float64)
secont condition:: tensor(4.2940e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3980e-10, dtype=torch.float64)
secont condition:: tensor(3.3980e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2517e-10, dtype=torch.float64)
secont condition:: tensor(6.2517e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5182e-10, dtype=torch.float64)
secont condition:: tensor(5.5182e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6727e-10, dtype=torch.float64)
secont condition:: tensor(4.6727e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3897e-10, dtype=torch.float64)
secont condition:: tensor(4.3897e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7352e-10, dtype=torch.float64)
secont condition:: tensor(4.7352e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4107e-10, dtype=torch.float64)
secont condition:: tensor(6.4107e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0194e-10, dtype=torch.float64)
secont condition:: tensor(3.0194e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2081e-10, dtype=torch.float64)
secont condition:: tensor(4.2081e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1803e-10, dtype=torch.float64)
secont condition:: tensor(6.1803e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6208e-10, dtype=torch.float64)
secont condition:: tensor(8.6208e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1307e-10, dtype=torch.float64)
secont condition:: tensor(5.1307e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8583e-10, dtype=torch.float64)
secont condition:: tensor(6.8583e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4182e-10, dtype=torch.float64)
secont condition:: tensor(8.4182e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6487e-10, dtype=torch.float64)
secont condition:: tensor(6.6487e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2063e-10, dtype=torch.float64)
secont condition:: tensor(7.2063e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2344e-09, dtype=torch.float64)
secont condition:: tensor(1.2344e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2726e-09, dtype=torch.float64)
secont condition:: tensor(1.2726e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6506e-09, dtype=torch.float64)
secont condition:: tensor(1.6506e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2609e-09, dtype=torch.float64)
secont condition:: tensor(1.2609e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3770e-09, dtype=torch.float64)
secont condition:: tensor(1.3770e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7441e-09, dtype=torch.float64)
secont condition:: tensor(1.7441e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4687e-09, dtype=torch.float64)
secont condition:: tensor(2.4687e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9912e-09, dtype=torch.float64)
secont condition:: tensor(1.9912e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5732e-09, dtype=torch.float64)
secont condition:: tensor(1.5732e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5041e-09, dtype=torch.float64)
secont condition:: tensor(1.5041e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1142e-09, dtype=torch.float64)
secont condition:: tensor(2.1142e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6716e-09, dtype=torch.float64)
secont condition:: tensor(3.6716e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4299e-09, dtype=torch.float64)
secont condition:: tensor(2.4299e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4305e-09, dtype=torch.float64)
secont condition:: tensor(2.4305e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2268e-09, dtype=torch.float64)
secont condition:: tensor(2.2268e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6626e-09, dtype=torch.float64)
secont condition:: tensor(1.6626e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1445e-09, dtype=torch.float64)
secont condition:: tensor(3.1445e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0268e-09, dtype=torch.float64)
secont condition:: tensor(3.0268e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5168e-09, dtype=torch.float64)
secont condition:: tensor(2.5168e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7541e-09, dtype=torch.float64)
secont condition:: tensor(1.7541e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.922987937927246
curr_diff: 0 tensor(5.3622e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.3363e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2738e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2398e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4058e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7638e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5452e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6536e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254370
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.224547
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.216785
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.223859
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 4, Batch: 0, Loss: 0.217903
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.214063
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.225299
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.216998
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.219900
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.216416
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.216671
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.214459
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.212478
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.216769
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 14, Batch: 0, Loss: 0.212783
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.209064
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.219366
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.214693
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.220010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.211883
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 20, Batch: 0, Loss: 0.210246
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215609
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 22, Batch: 0, Loss: 0.215036
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.206921
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.211573
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.212196
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.218718
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.217500
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.210792
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.215518
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.214357
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.215709
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 30.96941614151001
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.753836631774902
time_baseline:: 22.827152967453003
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3813e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5039e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5089e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2403e-33, dtype=torch.float64)
secont condition:: tensor(7.2403e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.6772e-11, dtype=torch.float64)
secont condition:: tensor(2.6772e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8830e-11, dtype=torch.float64)
secont condition:: tensor(8.8830e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7189e-10, dtype=torch.float64)
secont condition:: tensor(1.7189e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6483e-10, dtype=torch.float64)
secont condition:: tensor(1.6483e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4898e-10, dtype=torch.float64)
secont condition:: tensor(3.4898e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3741e-10, dtype=torch.float64)
secont condition:: tensor(2.3741e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6597e-10, dtype=torch.float64)
secont condition:: tensor(2.6597e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6758e-10, dtype=torch.float64)
secont condition:: tensor(4.6758e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1602e-10, dtype=torch.float64)
secont condition:: tensor(3.1602e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1729e-10, dtype=torch.float64)
secont condition:: tensor(4.1729e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0981e-10, dtype=torch.float64)
secont condition:: tensor(3.0981e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6906e-10, dtype=torch.float64)
secont condition:: tensor(2.6906e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8078e-10, dtype=torch.float64)
secont condition:: tensor(3.8078e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5706e-10, dtype=torch.float64)
secont condition:: tensor(4.5706e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8191e-10, dtype=torch.float64)
secont condition:: tensor(3.8191e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8694e-10, dtype=torch.float64)
secont condition:: tensor(4.8694e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6918e-10, dtype=torch.float64)
secont condition:: tensor(3.6918e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9888e-10, dtype=torch.float64)
secont condition:: tensor(4.9888e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2872e-10, dtype=torch.float64)
secont condition:: tensor(5.2872e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2715e-10, dtype=torch.float64)
secont condition:: tensor(6.2715e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6643e-10, dtype=torch.float64)
secont condition:: tensor(8.6643e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0885e-10, dtype=torch.float64)
secont condition:: tensor(5.0885e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7611e-10, dtype=torch.float64)
secont condition:: tensor(5.7611e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1742e-10, dtype=torch.float64)
secont condition:: tensor(5.1742e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4496e-10, dtype=torch.float64)
secont condition:: tensor(2.4496e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0276e-10, dtype=torch.float64)
secont condition:: tensor(5.0276e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4444e-10, dtype=torch.float64)
secont condition:: tensor(7.4444e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8855e-10, dtype=torch.float64)
secont condition:: tensor(5.8855e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5744e-10, dtype=torch.float64)
secont condition:: tensor(7.5744e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5704e-10, dtype=torch.float64)
secont condition:: tensor(7.5704e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9045e-10, dtype=torch.float64)
secont condition:: tensor(7.9045e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5137e-10, dtype=torch.float64)
secont condition:: tensor(8.5137e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1080e-10, dtype=torch.float64)
secont condition:: tensor(8.1080e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9336e-10, dtype=torch.float64)
secont condition:: tensor(8.9336e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2839e-10, dtype=torch.float64)
secont condition:: tensor(5.2839e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1849e-10, dtype=torch.float64)
secont condition:: tensor(8.1849e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8049e-10, dtype=torch.float64)
secont condition:: tensor(3.8049e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8639e-10, dtype=torch.float64)
secont condition:: tensor(6.8639e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1527e-09, dtype=torch.float64)
secont condition:: tensor(1.1527e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4442e-09, dtype=torch.float64)
secont condition:: tensor(1.4442e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3200e-09, dtype=torch.float64)
secont condition:: tensor(1.3200e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6435e-09, dtype=torch.float64)
secont condition:: tensor(1.6435e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9755e-09, dtype=torch.float64)
secont condition:: tensor(1.9755e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5029e-09, dtype=torch.float64)
secont condition:: tensor(1.5029e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8067e-09, dtype=torch.float64)
secont condition:: tensor(1.8067e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5988e-09, dtype=torch.float64)
secont condition:: tensor(1.5988e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0238e-09, dtype=torch.float64)
secont condition:: tensor(2.0238e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8146e-09, dtype=torch.float64)
secont condition:: tensor(1.8146e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8027e-10, dtype=torch.float64)
secont condition:: tensor(8.8027e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7021e-09, dtype=torch.float64)
secont condition:: tensor(2.7021e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3704e-09, dtype=torch.float64)
secont condition:: tensor(2.3704e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5932e-09, dtype=torch.float64)
secont condition:: tensor(2.5932e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8849e-09, dtype=torch.float64)
secont condition:: tensor(2.8849e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4237e-09, dtype=torch.float64)
secont condition:: tensor(1.4237e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3829e-09, dtype=torch.float64)
secont condition:: tensor(3.3829e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6592e-09, dtype=torch.float64)
secont condition:: tensor(2.6592e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7711e-09, dtype=torch.float64)
secont condition:: tensor(2.7711e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5864e-09, dtype=torch.float64)
secont condition:: tensor(2.5864e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8602e-09, dtype=torch.float64)
secont condition:: tensor(2.8602e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.770336866378784
curr_diff: 0 tensor(5.0526e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8631e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3992e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.1829e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.1050e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2496e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8721e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9924e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.261461
Train - Epoch 0, Batch: 10, Loss: 0.220525
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.226506
Train - Epoch 1, Batch: 10, Loss: 0.220071
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.218100
Train - Epoch 2, Batch: 10, Loss: 0.212725
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 3, Batch: 0, Loss: 0.215369
Train - Epoch 3, Batch: 10, Loss: 0.223055
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.219398
Train - Epoch 4, Batch: 10, Loss: 0.200558
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.214539
Train - Epoch 5, Batch: 10, Loss: 0.215133
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.210748
Train - Epoch 6, Batch: 10, Loss: 0.211478
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.217213
Train - Epoch 7, Batch: 10, Loss: 0.205421
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.121674060821533
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.881375074386597
time_baseline:: 4.899285316467285
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1678e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3690e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1661e-33, dtype=torch.float64)
secont condition:: tensor(8.1661e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6087e-32, dtype=torch.float64)
secont condition:: tensor(1.6087e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9331e-32, dtype=torch.float64)
secont condition:: tensor(2.9331e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.3388e-11, dtype=torch.float64)
secont condition:: tensor(3.3388e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2592e-10, dtype=torch.float64)
secont condition:: tensor(2.2592e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9258e-10, dtype=torch.float64)
secont condition:: tensor(1.9258e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1251e-10, dtype=torch.float64)
secont condition:: tensor(2.1251e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6663e-10, dtype=torch.float64)
secont condition:: tensor(4.6663e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6013e-10, dtype=torch.float64)
secont condition:: tensor(3.6013e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6222e-10, dtype=torch.float64)
secont condition:: tensor(3.6222e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7242e-10, dtype=torch.float64)
secont condition:: tensor(2.7242e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0808e-10, dtype=torch.float64)
secont condition:: tensor(2.0808e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8503e-10, dtype=torch.float64)
secont condition:: tensor(1.8503e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9804e-10, dtype=torch.float64)
secont condition:: tensor(7.9804e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8757e-10, dtype=torch.float64)
secont condition:: tensor(6.8757e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1871e-09, dtype=torch.float64)
secont condition:: tensor(1.1871e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1822e-09, dtype=torch.float64)
secont condition:: tensor(1.1822e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3889e-10, dtype=torch.float64)
secont condition:: tensor(9.3889e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6524e-10, dtype=torch.float64)
secont condition:: tensor(7.6524e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2902e-10, dtype=torch.float64)
secont condition:: tensor(7.2902e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8104e-10, dtype=torch.float64)
secont condition:: tensor(6.8104e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8658e-10, dtype=torch.float64)
secont condition:: tensor(4.8658e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7335e-10, dtype=torch.float64)
secont condition:: tensor(5.7335e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4702e-09, dtype=torch.float64)
secont condition:: tensor(1.4702e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2338e-09, dtype=torch.float64)
secont condition:: tensor(1.2338e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1036e-09, dtype=torch.float64)
secont condition:: tensor(1.1036e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2746e-10, dtype=torch.float64)
secont condition:: tensor(8.2746e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0368e-10, dtype=torch.float64)
secont condition:: tensor(5.0368e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7901e-10, dtype=torch.float64)
secont condition:: tensor(3.7901e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7247e-10, dtype=torch.float64)
secont condition:: tensor(7.7247e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3380e-10, dtype=torch.float64)
secont condition:: tensor(4.3380e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5062e-10, dtype=torch.float64)
secont condition:: tensor(8.5062e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0127e-10, dtype=torch.float64)
secont condition:: tensor(3.0127e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0024e-10, dtype=torch.float64)
secont condition:: tensor(3.0024e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3614e-10, dtype=torch.float64)
secont condition:: tensor(6.3614e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0980e-09, dtype=torch.float64)
secont condition:: tensor(1.0980e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5166e-09, dtype=torch.float64)
secont condition:: tensor(2.5166e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6363e-09, dtype=torch.float64)
secont condition:: tensor(1.6363e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3001e-09, dtype=torch.float64)
secont condition:: tensor(1.3001e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6955e-10, dtype=torch.float64)
secont condition:: tensor(7.6955e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9077e-10, dtype=torch.float64)
secont condition:: tensor(5.9077e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4103e-10, dtype=torch.float64)
secont condition:: tensor(5.4103e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1230e-09, dtype=torch.float64)
secont condition:: tensor(1.1230e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2084e-09, dtype=torch.float64)
secont condition:: tensor(1.2084e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1914e-09, dtype=torch.float64)
secont condition:: tensor(1.1914e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2930e-09, dtype=torch.float64)
secont condition:: tensor(3.2930e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3475e-09, dtype=torch.float64)
secont condition:: tensor(2.3475e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8906e-09, dtype=torch.float64)
secont condition:: tensor(1.8906e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4845e-09, dtype=torch.float64)
secont condition:: tensor(1.4845e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5163e-09, dtype=torch.float64)
secont condition:: tensor(1.5163e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2401e-09, dtype=torch.float64)
secont condition:: tensor(2.2401e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4956e-09, dtype=torch.float64)
secont condition:: tensor(1.4956e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2532e-09, dtype=torch.float64)
secont condition:: tensor(1.2532e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-09, dtype=torch.float64)
secont condition:: tensor(4.4326e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9832e-10, dtype=torch.float64)
secont condition:: tensor(3.9832e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9805e-09, dtype=torch.float64)
secont condition:: tensor(1.9805e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3155e-09, dtype=torch.float64)
secont condition:: tensor(2.3155e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6092e-09, dtype=torch.float64)
secont condition:: tensor(3.6092e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7276e-09, dtype=torch.float64)
secont condition:: tensor(3.7276e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.2064316272735596
curr_diff: 0 tensor(8.4270e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9154e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4344e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3272e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.5274e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1739e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4177e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0424e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239793
Train - Epoch 0, Batch: 10, Loss: 0.214573
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.225111
Train - Epoch 1, Batch: 10, Loss: 0.222247
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.204862
Train - Epoch 2, Batch: 10, Loss: 0.218730
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 3, Batch: 0, Loss: 0.216830
Train - Epoch 3, Batch: 10, Loss: 0.213530
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.223815
Train - Epoch 4, Batch: 10, Loss: 0.216270
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 5, Batch: 0, Loss: 0.202706
Train - Epoch 5, Batch: 10, Loss: 0.211829
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.210045
Train - Epoch 6, Batch: 10, Loss: 0.212798
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.218570
Train - Epoch 7, Batch: 10, Loss: 0.214621
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.3135833740234375
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.752846002578735
time_baseline:: 4.770853519439697
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.9353e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6896e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1840e-33, dtype=torch.float64)
secont condition:: tensor(6.1840e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7005e-32, dtype=torch.float64)
secont condition:: tensor(1.7005e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9179e-10, dtype=torch.float64)
secont condition:: tensor(1.9179e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8371e-10, dtype=torch.float64)
secont condition:: tensor(1.8371e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6497e-10, dtype=torch.float64)
secont condition:: tensor(1.6497e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1883e-10, dtype=torch.float64)
secont condition:: tensor(1.1883e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0877e-10, dtype=torch.float64)
secont condition:: tensor(1.0877e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9765e-10, dtype=torch.float64)
secont condition:: tensor(3.9765e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4217e-10, dtype=torch.float64)
secont condition:: tensor(4.4217e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3447e-10, dtype=torch.float64)
secont condition:: tensor(3.3447e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9004e-10, dtype=torch.float64)
secont condition:: tensor(3.9004e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2905e-10, dtype=torch.float64)
secont condition:: tensor(2.2905e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4241e-10, dtype=torch.float64)
secont condition:: tensor(8.4241e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6951e-10, dtype=torch.float64)
secont condition:: tensor(6.6951e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5091e-10, dtype=torch.float64)
secont condition:: tensor(5.5091e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7770e-10, dtype=torch.float64)
secont condition:: tensor(3.7770e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2856e-10, dtype=torch.float64)
secont condition:: tensor(3.2856e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8234e-10, dtype=torch.float64)
secont condition:: tensor(2.8234e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9853e-10, dtype=torch.float64)
secont condition:: tensor(4.9853e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5879e-10, dtype=torch.float64)
secont condition:: tensor(3.5879e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5291e-10, dtype=torch.float64)
secont condition:: tensor(2.5291e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1619e-10, dtype=torch.float64)
secont condition:: tensor(3.1619e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8079e-10, dtype=torch.float64)
secont condition:: tensor(2.8079e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8307e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0298e-09, dtype=torch.float64)
secont condition:: tensor(1.0298e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4566e-09, dtype=torch.float64)
secont condition:: tensor(1.4566e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7839e-09, dtype=torch.float64)
secont condition:: tensor(1.7839e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6974e-09, dtype=torch.float64)
secont condition:: tensor(1.6974e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.6729e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2378e-09, dtype=torch.float64)
secont condition:: tensor(1.2378e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.7834e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6651e-09, dtype=torch.float64)
secont condition:: tensor(1.6651e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6437e-09, dtype=torch.float64)
secont condition:: tensor(1.6437e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0723e-09, dtype=torch.float64)
secont condition:: tensor(2.0723e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7901e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3399e-09, dtype=torch.float64)
secont condition:: tensor(2.3399e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7017e-09, dtype=torch.float64)
secont condition:: tensor(1.7017e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1782e-09, dtype=torch.float64)
secont condition:: tensor(2.1782e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2131e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.8619e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3821e-09, dtype=torch.float64)
secont condition:: tensor(1.3821e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0724e-09, dtype=torch.float64)
secont condition:: tensor(1.0724e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8765e-09, dtype=torch.float64)
secont condition:: tensor(1.8765e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4556e-09, dtype=torch.float64)
secont condition:: tensor(1.4556e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1754e-09, dtype=torch.float64)
secont condition:: tensor(1.1754e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8148e-09, dtype=torch.float64)
secont condition:: tensor(2.8148e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3569e-09, dtype=torch.float64)
secont condition:: tensor(2.3569e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0106e-09, dtype=torch.float64)
secont condition:: tensor(2.0106e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1727e-09, dtype=torch.float64)
secont condition:: tensor(5.1727e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7876e-09, dtype=torch.float64)
secont condition:: tensor(1.7876e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5641e-09, dtype=torch.float64)
secont condition:: tensor(3.5641e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3425e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5176e-09, dtype=torch.float64)
secont condition:: tensor(2.5176e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3658e-09, dtype=torch.float64)
secont condition:: tensor(1.3658e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5620e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1355e-09, dtype=torch.float64)
secont condition:: tensor(1.1355e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9796e-09, dtype=torch.float64)
secont condition:: tensor(1.9796e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3889e-09, dtype=torch.float64)
secont condition:: tensor(5.3889e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8521e-09, dtype=torch.float64)
secont condition:: tensor(2.8521e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0729e-09, dtype=torch.float64)
secont condition:: tensor(3.0729e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.284003496170044
curr_diff: 0 tensor(9.2986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6733e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.9932e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6570e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.3585e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2783e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0637e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236430
Train - Epoch 0, Batch: 10, Loss: 0.218849
Test Avg. Loss: 0.000061, Accuracy: 0.944300
Train - Epoch 1, Batch: 0, Loss: 0.220363
Train - Epoch 1, Batch: 10, Loss: 0.216625
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.216527
Train - Epoch 2, Batch: 10, Loss: 0.208680
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.226639
Train - Epoch 3, Batch: 10, Loss: 0.217112
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.203239
Train - Epoch 4, Batch: 10, Loss: 0.227617
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.210244
Train - Epoch 5, Batch: 10, Loss: 0.208835
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.234019
Train - Epoch 6, Batch: 10, Loss: 0.210127
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.223543
Train - Epoch 7, Batch: 10, Loss: 0.208871
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.057788372039795
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.785869598388672
time_baseline:: 4.803725957870483
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8348e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1384e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2192e-33, dtype=torch.float64)
secont condition:: tensor(7.2192e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.8593e-32, dtype=torch.float64)
secont condition:: tensor(1.8593e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2453e-10, dtype=torch.float64)
secont condition:: tensor(2.2453e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6642e-10, dtype=torch.float64)
secont condition:: tensor(2.6642e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2010e-10, dtype=torch.float64)
secont condition:: tensor(2.2010e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9255e-10, dtype=torch.float64)
secont condition:: tensor(1.9255e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2482e-10, dtype=torch.float64)
secont condition:: tensor(4.2482e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4916e-10, dtype=torch.float64)
secont condition:: tensor(3.4916e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7824e-10, dtype=torch.float64)
secont condition:: tensor(6.7824e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4747e-10, dtype=torch.float64)
secont condition:: tensor(2.4747e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1071e-10, dtype=torch.float64)
secont condition:: tensor(2.1071e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2708e-10, dtype=torch.float64)
secont condition:: tensor(2.2708e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9031e-10, dtype=torch.float64)
secont condition:: tensor(8.9031e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8210e-10, dtype=torch.float64)
secont condition:: tensor(7.8210e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0142e-10, dtype=torch.float64)
secont condition:: tensor(5.0142e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9457e-10, dtype=torch.float64)
secont condition:: tensor(3.9457e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7448e-10, dtype=torch.float64)
secont condition:: tensor(6.7448e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2123e-10, dtype=torch.float64)
secont condition:: tensor(6.2123e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7159e-10, dtype=torch.float64)
secont condition:: tensor(8.7159e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3784e-10, dtype=torch.float64)
secont condition:: tensor(3.3784e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1075e-10, dtype=torch.float64)
secont condition:: tensor(2.1075e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6989e-10, dtype=torch.float64)
secont condition:: tensor(4.6989e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2575e-10, dtype=torch.float64)
secont condition:: tensor(7.2575e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2179e-10, dtype=torch.float64)
secont condition:: tensor(1.2179e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9571e-10, dtype=torch.float64)
secont condition:: tensor(4.9571e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4175e-09, dtype=torch.float64)
secont condition:: tensor(1.4175e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2014e-09, dtype=torch.float64)
secont condition:: tensor(1.2014e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1258e-09, dtype=torch.float64)
secont condition:: tensor(1.1258e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4211e-10, dtype=torch.float64)
secont condition:: tensor(4.4211e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9083e-10, dtype=torch.float64)
secont condition:: tensor(4.9083e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5279e-10, dtype=torch.float64)
secont condition:: tensor(5.5279e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0097e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0660e-10, dtype=torch.float64)
secont condition:: tensor(6.0660e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2367e-10, dtype=torch.float64)
secont condition:: tensor(3.2367e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6581e-10, dtype=torch.float64)
secont condition:: tensor(3.6581e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0606e-10, dtype=torch.float64)
secont condition:: tensor(6.0606e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1787e-10, dtype=torch.float64)
secont condition:: tensor(5.1787e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4580e-09, dtype=torch.float64)
secont condition:: tensor(1.4580e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7119e-09, dtype=torch.float64)
secont condition:: tensor(2.7119e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5897e-09, dtype=torch.float64)
secont condition:: tensor(1.5897e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7047e-10, dtype=torch.float64)
secont condition:: tensor(7.7047e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5705e-09, dtype=torch.float64)
secont condition:: tensor(1.5705e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3947e-09, dtype=torch.float64)
secont condition:: tensor(2.3947e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2095e-09, dtype=torch.float64)
secont condition:: tensor(1.2095e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6268e-10, dtype=torch.float64)
secont condition:: tensor(9.6268e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8921e-09, dtype=torch.float64)
secont condition:: tensor(3.8921e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4749e-09, dtype=torch.float64)
secont condition:: tensor(1.4749e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8012e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7809e-09, dtype=torch.float64)
secont condition:: tensor(3.7809e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5449e-09, dtype=torch.float64)
secont condition:: tensor(3.5449e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7984e-09, dtype=torch.float64)
secont condition:: tensor(3.7984e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0471e-08, dtype=torch.float64)
secont condition:: tensor(2.0471e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8873e-09, dtype=torch.float64)
secont condition:: tensor(6.8873e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0993e-09, dtype=torch.float64)
secont condition:: tensor(2.0993e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7933e-09, dtype=torch.float64)
secont condition:: tensor(2.7933e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8617e-09, dtype=torch.float64)
secont condition:: tensor(1.8617e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.369586944580078
curr_diff: 0 tensor(9.9338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8201e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.2793e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0730e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.9929e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7750e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3141e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233597
Train - Epoch 0, Batch: 10, Loss: 0.227189
Test Avg. Loss: 0.000061, Accuracy: 0.944900
Train - Epoch 1, Batch: 0, Loss: 0.213934
Train - Epoch 1, Batch: 10, Loss: 0.211401
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.208845
Train - Epoch 2, Batch: 10, Loss: 0.221327
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.211982
Train - Epoch 3, Batch: 10, Loss: 0.205273
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 4, Batch: 0, Loss: 0.219338
Train - Epoch 4, Batch: 10, Loss: 0.225021
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.209705
Train - Epoch 5, Batch: 10, Loss: 0.226482
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.216538
Train - Epoch 6, Batch: 10, Loss: 0.227666
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.221548
Train - Epoch 7, Batch: 10, Loss: 0.205284
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.067300319671631
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.788398265838623
time_baseline:: 4.8059914112091064
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0066e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0443e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6078e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5882e-33, dtype=torch.float64)
secont condition:: tensor(4.5882e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7103e-32, dtype=torch.float64)
secont condition:: tensor(1.7103e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2313e-32, dtype=torch.float64)
secont condition:: tensor(3.2313e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7946e-32, dtype=torch.float64)
secont condition:: tensor(4.7946e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.1381e-10, dtype=torch.float64)
secont condition:: tensor(6.1381e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6409e-10, dtype=torch.float64)
secont condition:: tensor(5.6409e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6184e-10, dtype=torch.float64)
secont condition:: tensor(7.6184e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2152e-10, dtype=torch.float64)
secont condition:: tensor(3.2152e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8741e-10, dtype=torch.float64)
secont condition:: tensor(3.8741e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5723e-10, dtype=torch.float64)
secont condition:: tensor(2.5723e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5394e-09, dtype=torch.float64)
secont condition:: tensor(1.5394e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2613e-08, dtype=torch.float64)
secont condition:: tensor(1.2613e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6827e-10, dtype=torch.float64)
secont condition:: tensor(4.6827e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9275e-10, dtype=torch.float64)
secont condition:: tensor(5.9275e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2871e-10, dtype=torch.float64)
secont condition:: tensor(4.2871e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4042e-10, dtype=torch.float64)
secont condition:: tensor(1.4042e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1779e-10, dtype=torch.float64)
secont condition:: tensor(3.1779e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8649e-11, dtype=torch.float64)
secont condition:: tensor(2.8649e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2022e-10, dtype=torch.float64)
secont condition:: tensor(3.2022e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4080e-10, dtype=torch.float64)
secont condition:: tensor(1.4080e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1708e-10, dtype=torch.float64)
secont condition:: tensor(6.1708e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7789e-09, dtype=torch.float64)
secont condition:: tensor(1.7789e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1705e-10, dtype=torch.float64)
secont condition:: tensor(4.1705e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1076e-09, dtype=torch.float64)
secont condition:: tensor(1.1076e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1567e-09, dtype=torch.float64)
secont condition:: tensor(1.1567e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4821e-09, dtype=torch.float64)
secont condition:: tensor(1.4821e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5046e-09, dtype=torch.float64)
secont condition:: tensor(1.5046e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2396e-10, dtype=torch.float64)
secont condition:: tensor(9.2396e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7984e-10, dtype=torch.float64)
secont condition:: tensor(5.7984e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3433e-10, dtype=torch.float64)
secont condition:: tensor(5.3433e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0807e-10, dtype=torch.float64)
secont condition:: tensor(7.0807e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6423e-10, dtype=torch.float64)
secont condition:: tensor(3.6423e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.4051e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2827e-09, dtype=torch.float64)
secont condition:: tensor(1.2827e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8374e-09, dtype=torch.float64)
secont condition:: tensor(1.8374e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6711e-09, dtype=torch.float64)
secont condition:: tensor(1.6711e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3984e-09, dtype=torch.float64)
secont condition:: tensor(1.3984e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4253e-09, dtype=torch.float64)
secont condition:: tensor(1.4253e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0893e-10, dtype=torch.float64)
secont condition:: tensor(6.0893e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1671e-09, dtype=torch.float64)
secont condition:: tensor(1.1671e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5283e-10, dtype=torch.float64)
secont condition:: tensor(7.5283e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4204e-09, dtype=torch.float64)
secont condition:: tensor(1.4204e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2463e-09, dtype=torch.float64)
secont condition:: tensor(1.2463e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0175e-09, dtype=torch.float64)
secont condition:: tensor(1.0175e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5238e-09, dtype=torch.float64)
secont condition:: tensor(1.5238e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1995e-09, dtype=torch.float64)
secont condition:: tensor(3.1995e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7610e-09, dtype=torch.float64)
secont condition:: tensor(1.7610e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6855e-09, dtype=torch.float64)
secont condition:: tensor(1.6855e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4236e-09, dtype=torch.float64)
secont condition:: tensor(2.4236e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0830e-09, dtype=torch.float64)
secont condition:: tensor(1.0830e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7265e-09, dtype=torch.float64)
secont condition:: tensor(3.7265e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2371e-09, dtype=torch.float64)
secont condition:: tensor(3.2371e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3151e-09, dtype=torch.float64)
secont condition:: tensor(3.3151e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8867e-09, dtype=torch.float64)
secont condition:: tensor(4.8867e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9334e-09, dtype=torch.float64)
secont condition:: tensor(2.9334e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2514e-09, dtype=torch.float64)
secont condition:: tensor(3.2514e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.468986749649048
curr_diff: 0 tensor(6.5584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1258e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.2555e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3079e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.6275e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4465e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2696e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.272451
Train - Epoch 0, Batch: 10, Loss: 0.203064
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.215964
Train - Epoch 1, Batch: 10, Loss: 0.213781
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.228790
Train - Epoch 2, Batch: 10, Loss: 0.224405
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.210628
Train - Epoch 3, Batch: 10, Loss: 0.207897
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 4, Batch: 0, Loss: 0.209653
Train - Epoch 4, Batch: 10, Loss: 0.220636
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.223162
Train - Epoch 5, Batch: 10, Loss: 0.211907
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.214542
Train - Epoch 6, Batch: 10, Loss: 0.217685
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.207101
Train - Epoch 7, Batch: 10, Loss: 0.214189
Test Avg. Loss: 0.000060, Accuracy: 0.945700
training_time:: 7.067309379577637
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.7228615283966064
time_baseline:: 4.740096807479858
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0866e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4901e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7898e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2331e-33, dtype=torch.float64)
secont condition:: tensor(3.2331e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.0567e-32, dtype=torch.float64)
secont condition:: tensor(2.0567e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6665e-32, dtype=torch.float64)
secont condition:: tensor(2.6665e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0734e-10, dtype=torch.float64)
secont condition:: tensor(2.0734e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9301e-10, dtype=torch.float64)
secont condition:: tensor(2.9301e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4492e-10, dtype=torch.float64)
secont condition:: tensor(2.4492e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6051e-10, dtype=torch.float64)
secont condition:: tensor(8.6051e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9715e-10, dtype=torch.float64)
secont condition:: tensor(6.9715e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3425e-10, dtype=torch.float64)
secont condition:: tensor(4.3425e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9712e-10, dtype=torch.float64)
secont condition:: tensor(4.9712e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7110e-10, dtype=torch.float64)
secont condition:: tensor(6.7110e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9564e-10, dtype=torch.float64)
secont condition:: tensor(7.9564e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5630e-10, dtype=torch.float64)
secont condition:: tensor(4.5630e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6769e-10, dtype=torch.float64)
secont condition:: tensor(3.6769e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0657e-10, dtype=torch.float64)
secont condition:: tensor(3.0657e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5055e-09, dtype=torch.float64)
secont condition:: tensor(1.5055e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7399e-10, dtype=torch.float64)
secont condition:: tensor(9.7399e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7889e-10, dtype=torch.float64)
secont condition:: tensor(7.7889e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3637e-09, dtype=torch.float64)
secont condition:: tensor(1.3637e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2589e-09, dtype=torch.float64)
secont condition:: tensor(1.2589e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2302e-10, dtype=torch.float64)
secont condition:: tensor(9.2302e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0557e-10, dtype=torch.float64)
secont condition:: tensor(7.0557e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8202e-10, dtype=torch.float64)
secont condition:: tensor(7.8202e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4455e-10, dtype=torch.float64)
secont condition:: tensor(7.4455e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5014e-10, dtype=torch.float64)
secont condition:: tensor(5.5014e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8383e-10, dtype=torch.float64)
secont condition:: tensor(4.8383e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1048e-10, dtype=torch.float64)
secont condition:: tensor(5.1048e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7530e-10, dtype=torch.float64)
secont condition:: tensor(5.7530e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7476e-10, dtype=torch.float64)
secont condition:: tensor(3.7476e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3415e-10, dtype=torch.float64)
secont condition:: tensor(5.3415e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2822e-10, dtype=torch.float64)
secont condition:: tensor(6.2822e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7803e-10, dtype=torch.float64)
secont condition:: tensor(4.7803e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4329e-10, dtype=torch.float64)
secont condition:: tensor(3.4329e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0482e-09, dtype=torch.float64)
secont condition:: tensor(1.0482e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9542e-10, dtype=torch.float64)
secont condition:: tensor(7.9542e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9488e-10, dtype=torch.float64)
secont condition:: tensor(7.9488e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8221e-10, dtype=torch.float64)
secont condition:: tensor(7.8221e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0158e-09, dtype=torch.float64)
secont condition:: tensor(1.0158e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4978e-09, dtype=torch.float64)
secont condition:: tensor(1.4978e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.2013e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3868e-10, dtype=torch.float64)
secont condition:: tensor(8.3868e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6479e-10, dtype=torch.float64)
secont condition:: tensor(9.6479e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3075e-10, dtype=torch.float64)
secont condition:: tensor(9.3075e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8992e-10, dtype=torch.float64)
secont condition:: tensor(7.8992e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8237e-09, dtype=torch.float64)
secont condition:: tensor(1.8237e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3159e-10, dtype=torch.float64)
secont condition:: tensor(6.3159e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2446e-09, dtype=torch.float64)
secont condition:: tensor(1.2446e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1011e-09, dtype=torch.float64)
secont condition:: tensor(3.1011e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3793e-09, dtype=torch.float64)
secont condition:: tensor(2.3793e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6237e-09, dtype=torch.float64)
secont condition:: tensor(1.6237e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4527e-09, dtype=torch.float64)
secont condition:: tensor(2.4527e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3027e-09, dtype=torch.float64)
secont condition:: tensor(4.3027e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7063e-09, dtype=torch.float64)
secont condition:: tensor(1.7063e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7907e-09, dtype=torch.float64)
secont condition:: tensor(4.7907e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4446e-09, dtype=torch.float64)
secont condition:: tensor(1.4446e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5629e-09, dtype=torch.float64)
secont condition:: tensor(2.5629e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4479e-09, dtype=torch.float64)
secont condition:: tensor(2.4479e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5234e-09, dtype=torch.float64)
secont condition:: tensor(4.5234e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7260e-11, dtype=torch.float64)
secont condition:: tensor(8.7260e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.2667713165283203
curr_diff: 0 tensor(8.1212e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.4114e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4443e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9814e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.1734e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0987e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8204e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9586e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.220305
Train - Epoch 0, Batch: 10, Loss: 0.227511
Train - Epoch 0, Batch: 20, Loss: 0.230132
Train - Epoch 0, Batch: 30, Loss: 0.231188
Train - Epoch 0, Batch: 40, Loss: 0.221538
Train - Epoch 0, Batch: 50, Loss: 0.200713
Test Avg. Loss: 0.000211, Accuracy: 0.945700
Train - Epoch 1, Batch: 0, Loss: 0.220208
Train - Epoch 1, Batch: 10, Loss: 0.190761
Train - Epoch 1, Batch: 20, Loss: 0.193599
Train - Epoch 1, Batch: 30, Loss: 0.221176
Train - Epoch 1, Batch: 40, Loss: 0.202436
Train - Epoch 1, Batch: 50, Loss: 0.255497
Test Avg. Loss: 0.000210, Accuracy: 0.945900
training_time:: 2.164097785949707
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3666129112243652
time_baseline:: 1.3713879585266113
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3861e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5124e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7777e-33, dtype=torch.float64)
secont condition:: tensor(5.7777e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.3197e-08, dtype=torch.float64)
secont condition:: tensor(1.3197e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6409e-08, dtype=torch.float64)
secont condition:: tensor(1.6409e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3302e-08, dtype=torch.float64)
secont condition:: tensor(1.3302e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0311e-08, dtype=torch.float64)
secont condition:: tensor(1.0311e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9886e-09, dtype=torch.float64)
secont condition:: tensor(5.9886e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9018e-09, dtype=torch.float64)
secont condition:: tensor(5.9018e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8694e-09, dtype=torch.float64)
secont condition:: tensor(6.8694e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4611e-10, dtype=torch.float64)
secont condition:: tensor(8.4611e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5027e-09, dtype=torch.float64)
secont condition:: tensor(3.5027e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8745e-09, dtype=torch.float64)
secont condition:: tensor(3.8745e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3093e-08, dtype=torch.float64)
secont condition:: tensor(1.3093e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5638e-09, dtype=torch.float64)
secont condition:: tensor(1.5638e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8271e-09, dtype=torch.float64)
secont condition:: tensor(1.8271e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.8426e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1944e-09, dtype=torch.float64)
secont condition:: tensor(1.1944e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1917e-09, dtype=torch.float64)
secont condition:: tensor(1.1917e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6164e-09, dtype=torch.float64)
secont condition:: tensor(1.6164e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1022e-09, dtype=torch.float64)
secont condition:: tensor(1.1022e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0375e-09, dtype=torch.float64)
secont condition:: tensor(1.0375e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1472e-09, dtype=torch.float64)
secont condition:: tensor(1.1472e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8929e-10, dtype=torch.float64)
secont condition:: tensor(2.8929e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7067e-09, dtype=torch.float64)
secont condition:: tensor(3.7067e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9281e-10, dtype=torch.float64)
secont condition:: tensor(8.9281e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0651e-10, dtype=torch.float64)
secont condition:: tensor(6.0651e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4472e-09, dtype=torch.float64)
secont condition:: tensor(1.4472e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.3203e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0198e-09, dtype=torch.float64)
secont condition:: tensor(1.0198e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5334e-09, dtype=torch.float64)
secont condition:: tensor(2.5334e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3840e-10, dtype=torch.float64)
secont condition:: tensor(6.3840e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5333e-09, dtype=torch.float64)
secont condition:: tensor(1.5333e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1367e-10, dtype=torch.float64)
secont condition:: tensor(6.1367e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3450e-09, dtype=torch.float64)
secont condition:: tensor(2.3450e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.9457e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1291e-09, dtype=torch.float64)
secont condition:: tensor(1.1291e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2513e-09, dtype=torch.float64)
secont condition:: tensor(1.2513e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3381e-10, dtype=torch.float64)
secont condition:: tensor(6.3381e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.0766e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8884e-09, dtype=torch.float64)
secont condition:: tensor(7.8884e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7963e-09, dtype=torch.float64)
secont condition:: tensor(2.7963e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2830e-10, dtype=torch.float64)
secont condition:: tensor(9.2830e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6848e-09, dtype=torch.float64)
secont condition:: tensor(6.6848e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7158e-09, dtype=torch.float64)
secont condition:: tensor(8.7158e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9690e-08, dtype=torch.float64)
secont condition:: tensor(1.9690e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1223e-09, dtype=torch.float64)
secont condition:: tensor(9.1223e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.9104e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1494e-08, dtype=torch.float64)
secont condition:: tensor(1.1494e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4083e-09, dtype=torch.float64)
secont condition:: tensor(2.4083e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.6997e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1322e-09, dtype=torch.float64)
secont condition:: tensor(1.1322e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9377e-10, dtype=torch.float64)
secont condition:: tensor(5.9377e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5747e-08, dtype=torch.float64)
secont condition:: tensor(1.5747e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.2613e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6421e-09, dtype=torch.float64)
secont condition:: tensor(5.6421e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5366e-08, dtype=torch.float64)
secont condition:: tensor(1.5366e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3791e-09, dtype=torch.float64)
secont condition:: tensor(7.3791e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4201e-09, dtype=torch.float64)
secont condition:: tensor(9.4201e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1440e-09, dtype=torch.float64)
secont condition:: tensor(9.1440e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3045e-09, dtype=torch.float64)
secont condition:: tensor(5.3045e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7542e-09, dtype=torch.float64)
secont condition:: tensor(1.7542e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.9042e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.6311e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6274e-08, dtype=torch.float64)
secont condition:: tensor(5.6274e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4292480945587158
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4691e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0414e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4079e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4522e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8390e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242162
Train - Epoch 0, Batch: 10, Loss: 0.223736
Train - Epoch 0, Batch: 20, Loss: 0.265070
Train - Epoch 0, Batch: 30, Loss: 0.190489
Train - Epoch 0, Batch: 40, Loss: 0.227502
Train - Epoch 0, Batch: 50, Loss: 0.216076
Test Avg. Loss: 0.000211, Accuracy: 0.945600
Train - Epoch 1, Batch: 0, Loss: 0.241718
Train - Epoch 1, Batch: 10, Loss: 0.228212
Train - Epoch 1, Batch: 20, Loss: 0.200711
Train - Epoch 1, Batch: 30, Loss: 0.211627
Train - Epoch 1, Batch: 40, Loss: 0.192299
Train - Epoch 1, Batch: 50, Loss: 0.214439
Test Avg. Loss: 0.000210, Accuracy: 0.945900
training_time:: 2.2302327156066895
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3800594806671143
time_baseline:: 1.384913682937622
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8044e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.8195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5338e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1654e-33, dtype=torch.float64)
secont condition:: tensor(8.1654e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.6228e-32, dtype=torch.float64)
secont condition:: tensor(2.6228e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3813e-32, dtype=torch.float64)
secont condition:: tensor(2.3813e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.5734e-32, dtype=torch.float64)
secont condition:: tensor(5.5734e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.2836e-09, dtype=torch.float64)
secont condition:: tensor(9.2836e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7897e-09, dtype=torch.float64)
secont condition:: tensor(8.7897e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7454e-09, dtype=torch.float64)
secont condition:: tensor(5.7454e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9930e-09, dtype=torch.float64)
secont condition:: tensor(4.9930e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8693e-09, dtype=torch.float64)
secont condition:: tensor(3.8693e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1046e-08, dtype=torch.float64)
secont condition:: tensor(1.1046e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7197e-09, dtype=torch.float64)
secont condition:: tensor(9.7197e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4970e-09, dtype=torch.float64)
secont condition:: tensor(6.4970e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5815e-09, dtype=torch.float64)
secont condition:: tensor(6.5815e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4777e-09, dtype=torch.float64)
secont condition:: tensor(3.4777e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4528e-09, dtype=torch.float64)
secont condition:: tensor(4.4528e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8352e-09, dtype=torch.float64)
secont condition:: tensor(3.8352e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8427e-09, dtype=torch.float64)
secont condition:: tensor(3.8427e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8150e-09, dtype=torch.float64)
secont condition:: tensor(2.8150e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8405e-09, dtype=torch.float64)
secont condition:: tensor(2.8405e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2916e-09, dtype=torch.float64)
secont condition:: tensor(2.2916e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5173e-09, dtype=torch.float64)
secont condition:: tensor(4.5173e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3924e-09, dtype=torch.float64)
secont condition:: tensor(2.3924e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4503e-09, dtype=torch.float64)
secont condition:: tensor(1.4503e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1122e-09, dtype=torch.float64)
secont condition:: tensor(1.1122e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9603e-10, dtype=torch.float64)
secont condition:: tensor(9.9603e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1582e-09, dtype=torch.float64)
secont condition:: tensor(1.1582e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1608e-10, dtype=torch.float64)
secont condition:: tensor(8.1608e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6396e-09, dtype=torch.float64)
secont condition:: tensor(1.6396e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7474e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9511e-10, dtype=torch.float64)
secont condition:: tensor(3.9511e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5908e-09, dtype=torch.float64)
secont condition:: tensor(1.5908e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6918e-10, dtype=torch.float64)
secont condition:: tensor(1.6918e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4639e-10, dtype=torch.float64)
secont condition:: tensor(5.4639e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3607e-09, dtype=torch.float64)
secont condition:: tensor(1.3607e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8709e-11, dtype=torch.float64)
secont condition:: tensor(8.8709e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6968e-10, dtype=torch.float64)
secont condition:: tensor(3.6968e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1257e-08, dtype=torch.float64)
secont condition:: tensor(1.1257e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.0630e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8774e-10, dtype=torch.float64)
secont condition:: tensor(3.8774e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3391e-10, dtype=torch.float64)
secont condition:: tensor(1.3391e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9263e-10, dtype=torch.float64)
secont condition:: tensor(2.9263e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9015e-09, dtype=torch.float64)
secont condition:: tensor(3.9015e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0747e-09, dtype=torch.float64)
secont condition:: tensor(5.0747e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7146e-09, dtype=torch.float64)
secont condition:: tensor(1.7146e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6804e-09, dtype=torch.float64)
secont condition:: tensor(1.6804e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6845e-09, dtype=torch.float64)
secont condition:: tensor(1.6845e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4061e-09, dtype=torch.float64)
secont condition:: tensor(3.4061e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5506e-09, dtype=torch.float64)
secont condition:: tensor(2.5506e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9577e-09, dtype=torch.float64)
secont condition:: tensor(1.9577e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3653e-08, dtype=torch.float64)
secont condition:: tensor(1.3653e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3788e-09, dtype=torch.float64)
secont condition:: tensor(4.3788e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0639e-09, dtype=torch.float64)
secont condition:: tensor(3.0639e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0905e-09, dtype=torch.float64)
secont condition:: tensor(2.0905e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2426e-09, dtype=torch.float64)
secont condition:: tensor(7.2426e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7441e-09, dtype=torch.float64)
secont condition:: tensor(3.7441e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5131e-09, dtype=torch.float64)
secont condition:: tensor(4.5131e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8336e-09, dtype=torch.float64)
secont condition:: tensor(3.8336e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4464e-09, dtype=torch.float64)
secont condition:: tensor(2.4464e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.3890998363494873
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6500e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.8715e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3718e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0557e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6331e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253689
Train - Epoch 0, Batch: 10, Loss: 0.228952
Train - Epoch 0, Batch: 20, Loss: 0.219541
Train - Epoch 0, Batch: 30, Loss: 0.221653
Train - Epoch 0, Batch: 40, Loss: 0.237635
Train - Epoch 0, Batch: 50, Loss: 0.206971
Test Avg. Loss: 0.000211, Accuracy: 0.945200
Train - Epoch 1, Batch: 0, Loss: 0.225167
Train - Epoch 1, Batch: 10, Loss: 0.214904
Train - Epoch 1, Batch: 20, Loss: 0.233969
Train - Epoch 1, Batch: 30, Loss: 0.207048
Train - Epoch 1, Batch: 40, Loss: 0.206381
Train - Epoch 1, Batch: 50, Loss: 0.272063
Test Avg. Loss: 0.000210, Accuracy: 0.945700
training_time:: 2.21820068359375
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.416337251663208
time_baseline:: 1.4212265014648438
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3992e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7702e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7557e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6207e-33, dtype=torch.float64)
secont condition:: tensor(8.6207e-33, dtype=torch.float64)
curr_secont condition:: tensor(9.1748e-09, dtype=torch.float64)
secont condition:: tensor(9.1748e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2471e-09, dtype=torch.float64)
secont condition:: tensor(9.2471e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1741e-09, dtype=torch.float64)
secont condition:: tensor(6.1741e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8614e-09, dtype=torch.float64)
secont condition:: tensor(5.8614e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5852e-09, dtype=torch.float64)
secont condition:: tensor(4.5852e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4988e-09, dtype=torch.float64)
secont condition:: tensor(2.4988e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4526e-09, dtype=torch.float64)
secont condition:: tensor(3.4526e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9163e-09, dtype=torch.float64)
secont condition:: tensor(3.9163e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8985e-09, dtype=torch.float64)
secont condition:: tensor(1.8985e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9825e-09, dtype=torch.float64)
secont condition:: tensor(2.9825e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0543e-09, dtype=torch.float64)
secont condition:: tensor(2.0543e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5428e-09, dtype=torch.float64)
secont condition:: tensor(1.5428e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7724e-09, dtype=torch.float64)
secont condition:: tensor(1.7724e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5497e-09, dtype=torch.float64)
secont condition:: tensor(2.5497e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3233e-09, dtype=torch.float64)
secont condition:: tensor(1.3233e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1778e-09, dtype=torch.float64)
secont condition:: tensor(1.1778e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4927e-09, dtype=torch.float64)
secont condition:: tensor(1.4927e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6720e-10, dtype=torch.float64)
secont condition:: tensor(7.6720e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4965e-10, dtype=torch.float64)
secont condition:: tensor(8.4965e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4939e-10, dtype=torch.float64)
secont condition:: tensor(8.4939e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9164e-10, dtype=torch.float64)
secont condition:: tensor(5.9164e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8201e-10, dtype=torch.float64)
secont condition:: tensor(4.8201e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3761e-10, dtype=torch.float64)
secont condition:: tensor(7.3761e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1354e-09, dtype=torch.float64)
secont condition:: tensor(1.1354e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2803e-10, dtype=torch.float64)
secont condition:: tensor(7.2803e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3559e-10, dtype=torch.float64)
secont condition:: tensor(7.3559e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4518e-10, dtype=torch.float64)
secont condition:: tensor(3.4518e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0593e-10, dtype=torch.float64)
secont condition:: tensor(6.0593e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8040e-10, dtype=torch.float64)
secont condition:: tensor(4.8040e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2317e-09, dtype=torch.float64)
secont condition:: tensor(1.2317e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6879e-10, dtype=torch.float64)
secont condition:: tensor(5.6879e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1456e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4854e-10, dtype=torch.float64)
secont condition:: tensor(9.4854e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0061e-10, dtype=torch.float64)
secont condition:: tensor(5.0061e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8828e-10, dtype=torch.float64)
secont condition:: tensor(4.8828e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8834e-10, dtype=torch.float64)
secont condition:: tensor(8.8834e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1584e-10, dtype=torch.float64)
secont condition:: tensor(4.1584e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4866e-09, dtype=torch.float64)
secont condition:: tensor(1.4866e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8032e-10, dtype=torch.float64)
secont condition:: tensor(3.8032e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2679e-10, dtype=torch.float64)
secont condition:: tensor(3.2679e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0051e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4872e-09, dtype=torch.float64)
secont condition:: tensor(1.4872e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2325e-09, dtype=torch.float64)
secont condition:: tensor(1.2325e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4012e-08, dtype=torch.float64)
secont condition:: tensor(1.4012e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7217e-09, dtype=torch.float64)
secont condition:: tensor(8.7217e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6034e-09, dtype=torch.float64)
secont condition:: tensor(7.6034e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7743e-09, dtype=torch.float64)
secont condition:: tensor(3.7743e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8818e-09, dtype=torch.float64)
secont condition:: tensor(1.8818e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5771e-09, dtype=torch.float64)
secont condition:: tensor(1.5771e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2126e-09, dtype=torch.float64)
secont condition:: tensor(1.2126e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4379e-10, dtype=torch.float64)
secont condition:: tensor(8.4379e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2346e-09, dtype=torch.float64)
secont condition:: tensor(2.2346e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0635e-09, dtype=torch.float64)
secont condition:: tensor(2.0635e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1976e-09, dtype=torch.float64)
secont condition:: tensor(3.1976e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2941e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0296e-09, dtype=torch.float64)
secont condition:: tensor(3.0296e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5184e-08, dtype=torch.float64)
secont condition:: tensor(2.5184e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8161e-08, dtype=torch.float64)
secont condition:: tensor(1.8161e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1288e-08, dtype=torch.float64)
secont condition:: tensor(1.1288e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5027e-10, dtype=torch.float64)
secont condition:: tensor(1.5027e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4732787609100342
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.2499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5245e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.224910
Train - Epoch 0, Batch: 10, Loss: 0.215107
Train - Epoch 0, Batch: 20, Loss: 0.211535
Train - Epoch 0, Batch: 30, Loss: 0.221558
Train - Epoch 0, Batch: 40, Loss: 0.271222
Train - Epoch 0, Batch: 50, Loss: 0.218157
Test Avg. Loss: 0.000210, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.243321
Train - Epoch 1, Batch: 10, Loss: 0.204902
Train - Epoch 1, Batch: 20, Loss: 0.206690
Train - Epoch 1, Batch: 30, Loss: 0.212042
Train - Epoch 1, Batch: 40, Loss: 0.224386
Train - Epoch 1, Batch: 50, Loss: 0.173365
Test Avg. Loss: 0.000210, Accuracy: 0.945500
training_time:: 2.286438465118408
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.372762680053711
time_baseline:: 1.3775296211242676
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4397e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6928e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945500
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4968e-09, dtype=torch.float64)
secont condition:: tensor(4.4968e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2224e-09, dtype=torch.float64)
secont condition:: tensor(9.2224e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7965e-09, dtype=torch.float64)
secont condition:: tensor(9.7965e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3186e-09, dtype=torch.float64)
secont condition:: tensor(7.3186e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8725e-09, dtype=torch.float64)
secont condition:: tensor(5.8725e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0386e-09, dtype=torch.float64)
secont condition:: tensor(5.0386e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6697e-09, dtype=torch.float64)
secont condition:: tensor(5.6697e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7140e-09, dtype=torch.float64)
secont condition:: tensor(3.7140e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4414e-09, dtype=torch.float64)
secont condition:: tensor(2.4414e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2007e-09, dtype=torch.float64)
secont condition:: tensor(2.2007e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4374e-09, dtype=torch.float64)
secont condition:: tensor(2.4374e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3394e-09, dtype=torch.float64)
secont condition:: tensor(2.3394e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0738e-09, dtype=torch.float64)
secont condition:: tensor(2.0738e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3021e-09, dtype=torch.float64)
secont condition:: tensor(2.3021e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2597e-09, dtype=torch.float64)
secont condition:: tensor(1.2597e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2548e-09, dtype=torch.float64)
secont condition:: tensor(1.2548e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3894e-09, dtype=torch.float64)
secont condition:: tensor(1.3894e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8445e-10, dtype=torch.float64)
secont condition:: tensor(8.8445e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1844e-09, dtype=torch.float64)
secont condition:: tensor(1.1844e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0604e-09, dtype=torch.float64)
secont condition:: tensor(1.0604e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1008e-08, dtype=torch.float64)
secont condition:: tensor(1.1008e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7357e-09, dtype=torch.float64)
secont condition:: tensor(5.7357e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9418e-09, dtype=torch.float64)
secont condition:: tensor(7.9418e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8829e-09, dtype=torch.float64)
secont condition:: tensor(5.8829e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5141e-09, dtype=torch.float64)
secont condition:: tensor(5.5141e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8103e-09, dtype=torch.float64)
secont condition:: tensor(3.8103e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4436e-09, dtype=torch.float64)
secont condition:: tensor(3.4436e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2835e-09, dtype=torch.float64)
secont condition:: tensor(3.2835e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0131e-09, dtype=torch.float64)
secont condition:: tensor(3.0131e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2060e-09, dtype=torch.float64)
secont condition:: tensor(2.2060e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0668e-09, dtype=torch.float64)
secont condition:: tensor(2.0668e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0539e-09, dtype=torch.float64)
secont condition:: tensor(2.0539e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6085e-09, dtype=torch.float64)
secont condition:: tensor(1.6085e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2872e-09, dtype=torch.float64)
secont condition:: tensor(1.2872e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2449e-09, dtype=torch.float64)
secont condition:: tensor(1.2449e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0964e-09, dtype=torch.float64)
secont condition:: tensor(1.0964e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3187e-09, dtype=torch.float64)
secont condition:: tensor(1.3187e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7250e-10, dtype=torch.float64)
secont condition:: tensor(8.7250e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5960e-09, dtype=torch.float64)
secont condition:: tensor(1.5960e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4349e-09, dtype=torch.float64)
secont condition:: tensor(1.4349e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9187e-10, dtype=torch.float64)
secont condition:: tensor(8.9187e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8680e-09, dtype=torch.float64)
secont condition:: tensor(2.8680e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1063e-10, dtype=torch.float64)
secont condition:: tensor(6.1063e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.2762e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9278e-10, dtype=torch.float64)
secont condition:: tensor(5.9278e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1315e-09, dtype=torch.float64)
secont condition:: tensor(4.1315e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8843e-09, dtype=torch.float64)
secont condition:: tensor(2.8843e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6293e-10, dtype=torch.float64)
secont condition:: tensor(9.6293e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6490e-08, dtype=torch.float64)
secont condition:: tensor(1.6490e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4590e-09, dtype=torch.float64)
secont condition:: tensor(1.4590e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2603e-09, dtype=torch.float64)
secont condition:: tensor(3.2603e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9948e-08, dtype=torch.float64)
secont condition:: tensor(1.9948e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7137e-09, dtype=torch.float64)
secont condition:: tensor(1.7137e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0859e-09, dtype=torch.float64)
secont condition:: tensor(3.0859e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.1873e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3823e-09, dtype=torch.float64)
secont condition:: tensor(1.3823e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0724e-09, dtype=torch.float64)
secont condition:: tensor(9.0724e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3511e-09, dtype=torch.float64)
secont condition:: tensor(8.3511e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9406e-09, dtype=torch.float64)
secont condition:: tensor(5.9406e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9867e-09, dtype=torch.float64)
secont condition:: tensor(5.9867e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0185e-09, dtype=torch.float64)
secont condition:: tensor(3.0185e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4398057460784912
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0492e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1039e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6954e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.6617e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5883e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.246704
Train - Epoch 0, Batch: 10, Loss: 0.222374
Train - Epoch 0, Batch: 20, Loss: 0.206974
Train - Epoch 0, Batch: 30, Loss: 0.241269
Train - Epoch 0, Batch: 40, Loss: 0.221866
Train - Epoch 0, Batch: 50, Loss: 0.246221
Test Avg. Loss: 0.000211, Accuracy: 0.945900
Train - Epoch 1, Batch: 0, Loss: 0.218981
Train - Epoch 1, Batch: 10, Loss: 0.226470
Train - Epoch 1, Batch: 20, Loss: 0.221819
Train - Epoch 1, Batch: 30, Loss: 0.245147
Train - Epoch 1, Batch: 40, Loss: 0.195054
Train - Epoch 1, Batch: 50, Loss: 0.228029
Test Avg. Loss: 0.000210, Accuracy: 0.945600
training_time:: 2.2047643661499023
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3691940307617188
time_baseline:: 1.3740012645721436
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2337e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6791e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8729e-09, dtype=torch.float64)
secont condition:: tensor(2.8729e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8329e-10, dtype=torch.float64)
secont condition:: tensor(9.8329e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2605e-10, dtype=torch.float64)
secont condition:: tensor(6.2605e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6221e-10, dtype=torch.float64)
secont condition:: tensor(4.6221e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4873e-10, dtype=torch.float64)
secont condition:: tensor(3.4873e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8974e-10, dtype=torch.float64)
secont condition:: tensor(2.8974e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1142e-09, dtype=torch.float64)
secont condition:: tensor(7.1142e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3886e-09, dtype=torch.float64)
secont condition:: tensor(8.3886e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3736e-09, dtype=torch.float64)
secont condition:: tensor(8.3736e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3114e-09, dtype=torch.float64)
secont condition:: tensor(6.3114e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8506e-09, dtype=torch.float64)
secont condition:: tensor(5.8506e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1896e-09, dtype=torch.float64)
secont condition:: tensor(3.1896e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4377e-08, dtype=torch.float64)
secont condition:: tensor(4.4377e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0061e-09, dtype=torch.float64)
secont condition:: tensor(5.0061e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4577e-09, dtype=torch.float64)
secont condition:: tensor(8.4577e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4582e-09, dtype=torch.float64)
secont condition:: tensor(9.4582e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6663e-09, dtype=torch.float64)
secont condition:: tensor(5.6663e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4787e-09, dtype=torch.float64)
secont condition:: tensor(3.4787e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7046e-09, dtype=torch.float64)
secont condition:: tensor(3.7046e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7973e-09, dtype=torch.float64)
secont condition:: tensor(3.7973e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9209e-09, dtype=torch.float64)
secont condition:: tensor(3.9209e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3180e-09, dtype=torch.float64)
secont condition:: tensor(5.3180e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7423e-09, dtype=torch.float64)
secont condition:: tensor(3.7423e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7775e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1214e-10, dtype=torch.float64)
secont condition:: tensor(7.1214e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4315e-09, dtype=torch.float64)
secont condition:: tensor(2.4315e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9823e-10, dtype=torch.float64)
secont condition:: tensor(3.9823e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3033e-09, dtype=torch.float64)
secont condition:: tensor(1.3033e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9380e-09, dtype=torch.float64)
secont condition:: tensor(1.9380e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3139e-09, dtype=torch.float64)
secont condition:: tensor(1.3139e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1693e-09, dtype=torch.float64)
secont condition:: tensor(5.1693e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3384e-08, dtype=torch.float64)
secont condition:: tensor(3.3384e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6209e-09, dtype=torch.float64)
secont condition:: tensor(1.6209e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.4566e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9316e-09, dtype=torch.float64)
secont condition:: tensor(7.9316e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1129e-09, dtype=torch.float64)
secont condition:: tensor(2.1129e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.9644e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8796e-11, dtype=torch.float64)
secont condition:: tensor(3.8796e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3386e-09, dtype=torch.float64)
secont condition:: tensor(1.3386e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7027e-09, dtype=torch.float64)
secont condition:: tensor(1.7027e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9085e-09, dtype=torch.float64)
secont condition:: tensor(4.9085e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7452e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8905e-10, dtype=torch.float64)
secont condition:: tensor(9.8905e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9078e-08, dtype=torch.float64)
secont condition:: tensor(4.9078e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.3423e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8522e-09, dtype=torch.float64)
secont condition:: tensor(8.8522e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.6487e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9355e-09, dtype=torch.float64)
secont condition:: tensor(1.9355e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7468e-09, dtype=torch.float64)
secont condition:: tensor(1.7468e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0627e-09, dtype=torch.float64)
secont condition:: tensor(5.0627e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5795e-09, dtype=torch.float64)
secont condition:: tensor(2.5795e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1308e-08, dtype=torch.float64)
secont condition:: tensor(1.1308e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5108e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5725e-09, dtype=torch.float64)
secont condition:: tensor(1.5725e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7722e-08, dtype=torch.float64)
secont condition:: tensor(1.7722e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1486e-09, dtype=torch.float64)
secont condition:: tensor(7.1486e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9004e-09, dtype=torch.float64)
secont condition:: tensor(5.9004e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7176e-09, dtype=torch.float64)
secont condition:: tensor(3.7176e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8936e-09, dtype=torch.float64)
secont condition:: tensor(5.8936e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0061e-09, dtype=torch.float64)
secont condition:: tensor(4.0061e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1469e-09, dtype=torch.float64)
secont condition:: tensor(4.1469e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0004e-09, dtype=torch.float64)
secont condition:: tensor(2.0004e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5322e-09, dtype=torch.float64)
secont condition:: tensor(4.5322e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8594e-09, dtype=torch.float64)
secont condition:: tensor(1.8594e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.338221549987793
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6638e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1522e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8194e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945500
deletion rate:: 0.0002
python3 generate_rand_ids 0.0002  MNIST 0
tensor([32550, 54150, 30760, 51787, 17548, 19372,  6510, 54866,  2995, 51707,
        51389, 54303])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.34024095535278
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.35142183303833
time_baseline:: 99.6171236038208
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6744e-11, dtype=torch.float64)
secont condition:: tensor(8.6744e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-10, dtype=torch.float64)
secont condition:: tensor(2.7662e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6543e-10, dtype=torch.float64)
secont condition:: tensor(4.6543e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8496e-10, dtype=torch.float64)
secont condition:: tensor(6.8496e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7582e-10, dtype=torch.float64)
secont condition:: tensor(9.7582e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2952e-09, dtype=torch.float64)
secont condition:: tensor(1.2952e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5356e-09, dtype=torch.float64)
secont condition:: tensor(1.5356e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7821e-09, dtype=torch.float64)
secont condition:: tensor(1.7821e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1930e-09, dtype=torch.float64)
secont condition:: tensor(2.1930e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4355e-09, dtype=torch.float64)
secont condition:: tensor(2.4355e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-09, dtype=torch.float64)
secont condition:: tensor(2.4691e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6303e-09, dtype=torch.float64)
secont condition:: tensor(2.6303e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7026e-09, dtype=torch.float64)
secont condition:: tensor(2.7026e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2061e-09, dtype=torch.float64)
secont condition:: tensor(3.2061e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3258e-09, dtype=torch.float64)
secont condition:: tensor(3.3258e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3509e-09, dtype=torch.float64)
secont condition:: tensor(3.3509e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7158e-09, dtype=torch.float64)
secont condition:: tensor(3.7158e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9862e-09, dtype=torch.float64)
secont condition:: tensor(3.9862e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0921e-09, dtype=torch.float64)
secont condition:: tensor(4.0921e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2378e-09, dtype=torch.float64)
secont condition:: tensor(4.2378e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2758e-09, dtype=torch.float64)
secont condition:: tensor(4.2758e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3879e-09, dtype=torch.float64)
secont condition:: tensor(4.3879e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6429e-09, dtype=torch.float64)
secont condition:: tensor(4.6429e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8800e-09, dtype=torch.float64)
secont condition:: tensor(4.8800e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0388e-09, dtype=torch.float64)
secont condition:: tensor(5.0388e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0112e-09, dtype=torch.float64)
secont condition:: tensor(5.0112e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8404e-09, dtype=torch.float64)
secont condition:: tensor(4.8404e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8225e-09, dtype=torch.float64)
secont condition:: tensor(4.8225e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3853e-09, dtype=torch.float64)
secont condition:: tensor(5.3853e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6051e-09, dtype=torch.float64)
secont condition:: tensor(5.6051e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-09, dtype=torch.float64)
secont condition:: tensor(5.5407e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2338e-09, dtype=torch.float64)
secont condition:: tensor(6.2338e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8134e-09, dtype=torch.float64)
secont condition:: tensor(5.8134e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0246e-09, dtype=torch.float64)
secont condition:: tensor(6.0246e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0928e-09, dtype=torch.float64)
secont condition:: tensor(6.0928e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4383e-09, dtype=torch.float64)
secont condition:: tensor(6.4383e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2669e-09, dtype=torch.float64)
secont condition:: tensor(6.2669e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4406e-09, dtype=torch.float64)
secont condition:: tensor(7.4406e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2576e-09, dtype=torch.float64)
secont condition:: tensor(7.2576e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4212e-09, dtype=torch.float64)
secont condition:: tensor(8.4212e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-09, dtype=torch.float64)
secont condition:: tensor(8.5275e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6726e-09, dtype=torch.float64)
secont condition:: tensor(8.6726e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0258e-08, dtype=torch.float64)
secont condition:: tensor(1.0258e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0998e-09, dtype=torch.float64)
secont condition:: tensor(9.0998e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-08, dtype=torch.float64)
secont condition:: tensor(1.0511e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0820e-08, dtype=torch.float64)
secont condition:: tensor(1.0820e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-08, dtype=torch.float64)
secont condition:: tensor(1.0762e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2190e-08, dtype=torch.float64)
secont condition:: tensor(1.2190e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1434e-08, dtype=torch.float64)
secont condition:: tensor(1.1434e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-08, dtype=torch.float64)
secont condition:: tensor(1.2622e-08, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-08, dtype=torch.float64)
secont condition:: tensor(1.2170e-08, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2696e-08, dtype=torch.float64)
secont condition:: tensor(1.2696e-08, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-08, dtype=torch.float64)
secont condition:: tensor(1.3680e-08, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4284e-08, dtype=torch.float64)
secont condition:: tensor(1.4284e-08, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-08, dtype=torch.float64)
secont condition:: tensor(1.5131e-08, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4822e-08, dtype=torch.float64)
secont condition:: tensor(1.4822e-08, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5205e-08, dtype=torch.float64)
secont condition:: tensor(1.5205e-08, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5389e-08, dtype=torch.float64)
secont condition:: tensor(1.5389e-08, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6269e-08, dtype=torch.float64)
secont condition:: tensor(1.6269e-08, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.7691752910614
curr_diff: 0 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2257e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.26204657554626
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.98911333084106
time_baseline:: 100.25432896614075
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6744e-11, dtype=torch.float64)
secont condition:: tensor(8.6744e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-10, dtype=torch.float64)
secont condition:: tensor(2.7662e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6543e-10, dtype=torch.float64)
secont condition:: tensor(4.6543e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8496e-10, dtype=torch.float64)
secont condition:: tensor(6.8496e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7582e-10, dtype=torch.float64)
secont condition:: tensor(9.7582e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2952e-09, dtype=torch.float64)
secont condition:: tensor(1.2952e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5356e-09, dtype=torch.float64)
secont condition:: tensor(1.5356e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7821e-09, dtype=torch.float64)
secont condition:: tensor(1.7821e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1930e-09, dtype=torch.float64)
secont condition:: tensor(2.1930e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4355e-09, dtype=torch.float64)
secont condition:: tensor(2.4355e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-09, dtype=torch.float64)
secont condition:: tensor(2.4691e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6303e-09, dtype=torch.float64)
secont condition:: tensor(2.6303e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7026e-09, dtype=torch.float64)
secont condition:: tensor(2.7026e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2061e-09, dtype=torch.float64)
secont condition:: tensor(3.2061e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3258e-09, dtype=torch.float64)
secont condition:: tensor(3.3258e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3509e-09, dtype=torch.float64)
secont condition:: tensor(3.3509e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7158e-09, dtype=torch.float64)
secont condition:: tensor(3.7158e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9862e-09, dtype=torch.float64)
secont condition:: tensor(3.9862e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0921e-09, dtype=torch.float64)
secont condition:: tensor(4.0921e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2378e-09, dtype=torch.float64)
secont condition:: tensor(4.2378e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2758e-09, dtype=torch.float64)
secont condition:: tensor(4.2758e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3879e-09, dtype=torch.float64)
secont condition:: tensor(4.3879e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6429e-09, dtype=torch.float64)
secont condition:: tensor(4.6429e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8800e-09, dtype=torch.float64)
secont condition:: tensor(4.8800e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0388e-09, dtype=torch.float64)
secont condition:: tensor(5.0388e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0112e-09, dtype=torch.float64)
secont condition:: tensor(5.0112e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8404e-09, dtype=torch.float64)
secont condition:: tensor(4.8404e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8225e-09, dtype=torch.float64)
secont condition:: tensor(4.8225e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3853e-09, dtype=torch.float64)
secont condition:: tensor(5.3853e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6051e-09, dtype=torch.float64)
secont condition:: tensor(5.6051e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-09, dtype=torch.float64)
secont condition:: tensor(5.5407e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2338e-09, dtype=torch.float64)
secont condition:: tensor(6.2338e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8134e-09, dtype=torch.float64)
secont condition:: tensor(5.8134e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0246e-09, dtype=torch.float64)
secont condition:: tensor(6.0246e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0928e-09, dtype=torch.float64)
secont condition:: tensor(6.0928e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4383e-09, dtype=torch.float64)
secont condition:: tensor(6.4383e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2669e-09, dtype=torch.float64)
secont condition:: tensor(6.2669e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4406e-09, dtype=torch.float64)
secont condition:: tensor(7.4406e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2576e-09, dtype=torch.float64)
secont condition:: tensor(7.2576e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4212e-09, dtype=torch.float64)
secont condition:: tensor(8.4212e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-09, dtype=torch.float64)
secont condition:: tensor(8.5275e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6726e-09, dtype=torch.float64)
secont condition:: tensor(8.6726e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0258e-08, dtype=torch.float64)
secont condition:: tensor(1.0258e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0998e-09, dtype=torch.float64)
secont condition:: tensor(9.0998e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-08, dtype=torch.float64)
secont condition:: tensor(1.0511e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0820e-08, dtype=torch.float64)
secont condition:: tensor(1.0820e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-08, dtype=torch.float64)
secont condition:: tensor(1.0762e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2190e-08, dtype=torch.float64)
secont condition:: tensor(1.2190e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1434e-08, dtype=torch.float64)
secont condition:: tensor(1.1434e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-08, dtype=torch.float64)
secont condition:: tensor(1.2622e-08, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-08, dtype=torch.float64)
secont condition:: tensor(1.2170e-08, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2696e-08, dtype=torch.float64)
secont condition:: tensor(1.2696e-08, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-08, dtype=torch.float64)
secont condition:: tensor(1.3680e-08, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4284e-08, dtype=torch.float64)
secont condition:: tensor(1.4284e-08, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-08, dtype=torch.float64)
secont condition:: tensor(1.5131e-08, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4822e-08, dtype=torch.float64)
secont condition:: tensor(1.4822e-08, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5205e-08, dtype=torch.float64)
secont condition:: tensor(1.5205e-08, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5389e-08, dtype=torch.float64)
secont condition:: tensor(1.5389e-08, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6269e-08, dtype=torch.float64)
secont condition:: tensor(1.6269e-08, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.647055864334106
curr_diff: 0 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2257e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.52690768241882
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.27226614952087
time_baseline:: 100.53680443763733
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6744e-11, dtype=torch.float64)
secont condition:: tensor(8.6744e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-10, dtype=torch.float64)
secont condition:: tensor(2.7662e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6543e-10, dtype=torch.float64)
secont condition:: tensor(4.6543e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8496e-10, dtype=torch.float64)
secont condition:: tensor(6.8496e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7582e-10, dtype=torch.float64)
secont condition:: tensor(9.7582e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2952e-09, dtype=torch.float64)
secont condition:: tensor(1.2952e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5356e-09, dtype=torch.float64)
secont condition:: tensor(1.5356e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7821e-09, dtype=torch.float64)
secont condition:: tensor(1.7821e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1930e-09, dtype=torch.float64)
secont condition:: tensor(2.1930e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4355e-09, dtype=torch.float64)
secont condition:: tensor(2.4355e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-09, dtype=torch.float64)
secont condition:: tensor(2.4691e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6303e-09, dtype=torch.float64)
secont condition:: tensor(2.6303e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7026e-09, dtype=torch.float64)
secont condition:: tensor(2.7026e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2061e-09, dtype=torch.float64)
secont condition:: tensor(3.2061e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3258e-09, dtype=torch.float64)
secont condition:: tensor(3.3258e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3509e-09, dtype=torch.float64)
secont condition:: tensor(3.3509e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7158e-09, dtype=torch.float64)
secont condition:: tensor(3.7158e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9862e-09, dtype=torch.float64)
secont condition:: tensor(3.9862e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0921e-09, dtype=torch.float64)
secont condition:: tensor(4.0921e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2378e-09, dtype=torch.float64)
secont condition:: tensor(4.2378e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2758e-09, dtype=torch.float64)
secont condition:: tensor(4.2758e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3879e-09, dtype=torch.float64)
secont condition:: tensor(4.3879e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6429e-09, dtype=torch.float64)
secont condition:: tensor(4.6429e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8800e-09, dtype=torch.float64)
secont condition:: tensor(4.8800e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0388e-09, dtype=torch.float64)
secont condition:: tensor(5.0388e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0112e-09, dtype=torch.float64)
secont condition:: tensor(5.0112e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8404e-09, dtype=torch.float64)
secont condition:: tensor(4.8404e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8225e-09, dtype=torch.float64)
secont condition:: tensor(4.8225e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3853e-09, dtype=torch.float64)
secont condition:: tensor(5.3853e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6051e-09, dtype=torch.float64)
secont condition:: tensor(5.6051e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-09, dtype=torch.float64)
secont condition:: tensor(5.5407e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2338e-09, dtype=torch.float64)
secont condition:: tensor(6.2338e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8134e-09, dtype=torch.float64)
secont condition:: tensor(5.8134e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0246e-09, dtype=torch.float64)
secont condition:: tensor(6.0246e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0928e-09, dtype=torch.float64)
secont condition:: tensor(6.0928e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4383e-09, dtype=torch.float64)
secont condition:: tensor(6.4383e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2669e-09, dtype=torch.float64)
secont condition:: tensor(6.2669e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4406e-09, dtype=torch.float64)
secont condition:: tensor(7.4406e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2576e-09, dtype=torch.float64)
secont condition:: tensor(7.2576e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4212e-09, dtype=torch.float64)
secont condition:: tensor(8.4212e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-09, dtype=torch.float64)
secont condition:: tensor(8.5275e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6726e-09, dtype=torch.float64)
secont condition:: tensor(8.6726e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0258e-08, dtype=torch.float64)
secont condition:: tensor(1.0258e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0998e-09, dtype=torch.float64)
secont condition:: tensor(9.0998e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-08, dtype=torch.float64)
secont condition:: tensor(1.0511e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0820e-08, dtype=torch.float64)
secont condition:: tensor(1.0820e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-08, dtype=torch.float64)
secont condition:: tensor(1.0762e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2190e-08, dtype=torch.float64)
secont condition:: tensor(1.2190e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1434e-08, dtype=torch.float64)
secont condition:: tensor(1.1434e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-08, dtype=torch.float64)
secont condition:: tensor(1.2622e-08, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-08, dtype=torch.float64)
secont condition:: tensor(1.2170e-08, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2696e-08, dtype=torch.float64)
secont condition:: tensor(1.2696e-08, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-08, dtype=torch.float64)
secont condition:: tensor(1.3680e-08, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4284e-08, dtype=torch.float64)
secont condition:: tensor(1.4284e-08, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-08, dtype=torch.float64)
secont condition:: tensor(1.5131e-08, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4822e-08, dtype=torch.float64)
secont condition:: tensor(1.4822e-08, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5205e-08, dtype=torch.float64)
secont condition:: tensor(1.5205e-08, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5389e-08, dtype=torch.float64)
secont condition:: tensor(1.5389e-08, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6269e-08, dtype=torch.float64)
secont condition:: tensor(1.6269e-08, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.749518156051636
curr_diff: 0 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2257e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.40818238258362
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.38513541221619
time_baseline:: 100.64866161346436
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6744e-11, dtype=torch.float64)
secont condition:: tensor(8.6744e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-10, dtype=torch.float64)
secont condition:: tensor(2.7662e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6543e-10, dtype=torch.float64)
secont condition:: tensor(4.6543e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8496e-10, dtype=torch.float64)
secont condition:: tensor(6.8496e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7582e-10, dtype=torch.float64)
secont condition:: tensor(9.7582e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2952e-09, dtype=torch.float64)
secont condition:: tensor(1.2952e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5356e-09, dtype=torch.float64)
secont condition:: tensor(1.5356e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7821e-09, dtype=torch.float64)
secont condition:: tensor(1.7821e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1930e-09, dtype=torch.float64)
secont condition:: tensor(2.1930e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4355e-09, dtype=torch.float64)
secont condition:: tensor(2.4355e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-09, dtype=torch.float64)
secont condition:: tensor(2.4691e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6303e-09, dtype=torch.float64)
secont condition:: tensor(2.6303e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7026e-09, dtype=torch.float64)
secont condition:: tensor(2.7026e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2061e-09, dtype=torch.float64)
secont condition:: tensor(3.2061e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3258e-09, dtype=torch.float64)
secont condition:: tensor(3.3258e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3509e-09, dtype=torch.float64)
secont condition:: tensor(3.3509e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7158e-09, dtype=torch.float64)
secont condition:: tensor(3.7158e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9862e-09, dtype=torch.float64)
secont condition:: tensor(3.9862e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0921e-09, dtype=torch.float64)
secont condition:: tensor(4.0921e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2378e-09, dtype=torch.float64)
secont condition:: tensor(4.2378e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2758e-09, dtype=torch.float64)
secont condition:: tensor(4.2758e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3879e-09, dtype=torch.float64)
secont condition:: tensor(4.3879e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6429e-09, dtype=torch.float64)
secont condition:: tensor(4.6429e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8800e-09, dtype=torch.float64)
secont condition:: tensor(4.8800e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0388e-09, dtype=torch.float64)
secont condition:: tensor(5.0388e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0112e-09, dtype=torch.float64)
secont condition:: tensor(5.0112e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8404e-09, dtype=torch.float64)
secont condition:: tensor(4.8404e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8225e-09, dtype=torch.float64)
secont condition:: tensor(4.8225e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3853e-09, dtype=torch.float64)
secont condition:: tensor(5.3853e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6051e-09, dtype=torch.float64)
secont condition:: tensor(5.6051e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-09, dtype=torch.float64)
secont condition:: tensor(5.5407e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2338e-09, dtype=torch.float64)
secont condition:: tensor(6.2338e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8134e-09, dtype=torch.float64)
secont condition:: tensor(5.8134e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0246e-09, dtype=torch.float64)
secont condition:: tensor(6.0246e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0928e-09, dtype=torch.float64)
secont condition:: tensor(6.0928e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4383e-09, dtype=torch.float64)
secont condition:: tensor(6.4383e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2669e-09, dtype=torch.float64)
secont condition:: tensor(6.2669e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4406e-09, dtype=torch.float64)
secont condition:: tensor(7.4406e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2576e-09, dtype=torch.float64)
secont condition:: tensor(7.2576e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4212e-09, dtype=torch.float64)
secont condition:: tensor(8.4212e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-09, dtype=torch.float64)
secont condition:: tensor(8.5275e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6726e-09, dtype=torch.float64)
secont condition:: tensor(8.6726e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0258e-08, dtype=torch.float64)
secont condition:: tensor(1.0258e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0998e-09, dtype=torch.float64)
secont condition:: tensor(9.0998e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-08, dtype=torch.float64)
secont condition:: tensor(1.0511e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0820e-08, dtype=torch.float64)
secont condition:: tensor(1.0820e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-08, dtype=torch.float64)
secont condition:: tensor(1.0762e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2190e-08, dtype=torch.float64)
secont condition:: tensor(1.2190e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1434e-08, dtype=torch.float64)
secont condition:: tensor(1.1434e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-08, dtype=torch.float64)
secont condition:: tensor(1.2622e-08, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-08, dtype=torch.float64)
secont condition:: tensor(1.2170e-08, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2696e-08, dtype=torch.float64)
secont condition:: tensor(1.2696e-08, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-08, dtype=torch.float64)
secont condition:: tensor(1.3680e-08, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4284e-08, dtype=torch.float64)
secont condition:: tensor(1.4284e-08, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-08, dtype=torch.float64)
secont condition:: tensor(1.5131e-08, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4822e-08, dtype=torch.float64)
secont condition:: tensor(1.4822e-08, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5205e-08, dtype=torch.float64)
secont condition:: tensor(1.5205e-08, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5389e-08, dtype=torch.float64)
secont condition:: tensor(1.5389e-08, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6269e-08, dtype=torch.float64)
secont condition:: tensor(1.6269e-08, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.729296445846558
curr_diff: 0 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2257e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.99493885040283
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.6698362827301
time_baseline:: 98.93665027618408
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6744e-11, dtype=torch.float64)
secont condition:: tensor(8.6744e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-10, dtype=torch.float64)
secont condition:: tensor(2.7662e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6543e-10, dtype=torch.float64)
secont condition:: tensor(4.6543e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8496e-10, dtype=torch.float64)
secont condition:: tensor(6.8496e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7582e-10, dtype=torch.float64)
secont condition:: tensor(9.7582e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2952e-09, dtype=torch.float64)
secont condition:: tensor(1.2952e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5356e-09, dtype=torch.float64)
secont condition:: tensor(1.5356e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7821e-09, dtype=torch.float64)
secont condition:: tensor(1.7821e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-09, dtype=torch.float64)
secont condition:: tensor(1.9258e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1930e-09, dtype=torch.float64)
secont condition:: tensor(2.1930e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4355e-09, dtype=torch.float64)
secont condition:: tensor(2.4355e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-09, dtype=torch.float64)
secont condition:: tensor(2.4691e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6303e-09, dtype=torch.float64)
secont condition:: tensor(2.6303e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7026e-09, dtype=torch.float64)
secont condition:: tensor(2.7026e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2061e-09, dtype=torch.float64)
secont condition:: tensor(3.2061e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3258e-09, dtype=torch.float64)
secont condition:: tensor(3.3258e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3509e-09, dtype=torch.float64)
secont condition:: tensor(3.3509e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7158e-09, dtype=torch.float64)
secont condition:: tensor(3.7158e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9862e-09, dtype=torch.float64)
secont condition:: tensor(3.9862e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0921e-09, dtype=torch.float64)
secont condition:: tensor(4.0921e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2378e-09, dtype=torch.float64)
secont condition:: tensor(4.2378e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2758e-09, dtype=torch.float64)
secont condition:: tensor(4.2758e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3879e-09, dtype=torch.float64)
secont condition:: tensor(4.3879e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6429e-09, dtype=torch.float64)
secont condition:: tensor(4.6429e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8800e-09, dtype=torch.float64)
secont condition:: tensor(4.8800e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0388e-09, dtype=torch.float64)
secont condition:: tensor(5.0388e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0112e-09, dtype=torch.float64)
secont condition:: tensor(5.0112e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8404e-09, dtype=torch.float64)
secont condition:: tensor(4.8404e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8225e-09, dtype=torch.float64)
secont condition:: tensor(4.8225e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3853e-09, dtype=torch.float64)
secont condition:: tensor(5.3853e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6051e-09, dtype=torch.float64)
secont condition:: tensor(5.6051e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-09, dtype=torch.float64)
secont condition:: tensor(5.5407e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2338e-09, dtype=torch.float64)
secont condition:: tensor(6.2338e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8134e-09, dtype=torch.float64)
secont condition:: tensor(5.8134e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0246e-09, dtype=torch.float64)
secont condition:: tensor(6.0246e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0928e-09, dtype=torch.float64)
secont condition:: tensor(6.0928e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4383e-09, dtype=torch.float64)
secont condition:: tensor(6.4383e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2669e-09, dtype=torch.float64)
secont condition:: tensor(6.2669e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4406e-09, dtype=torch.float64)
secont condition:: tensor(7.4406e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2576e-09, dtype=torch.float64)
secont condition:: tensor(7.2576e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4212e-09, dtype=torch.float64)
secont condition:: tensor(8.4212e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5275e-09, dtype=torch.float64)
secont condition:: tensor(8.5275e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6726e-09, dtype=torch.float64)
secont condition:: tensor(8.6726e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0258e-08, dtype=torch.float64)
secont condition:: tensor(1.0258e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0998e-09, dtype=torch.float64)
secont condition:: tensor(9.0998e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-08, dtype=torch.float64)
secont condition:: tensor(1.0511e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0820e-08, dtype=torch.float64)
secont condition:: tensor(1.0820e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-08, dtype=torch.float64)
secont condition:: tensor(1.0762e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2190e-08, dtype=torch.float64)
secont condition:: tensor(1.2190e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1434e-08, dtype=torch.float64)
secont condition:: tensor(1.1434e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-08, dtype=torch.float64)
secont condition:: tensor(1.2622e-08, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-08, dtype=torch.float64)
secont condition:: tensor(1.2170e-08, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2696e-08, dtype=torch.float64)
secont condition:: tensor(1.2696e-08, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-08, dtype=torch.float64)
secont condition:: tensor(1.3680e-08, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4284e-08, dtype=torch.float64)
secont condition:: tensor(1.4284e-08, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-08, dtype=torch.float64)
secont condition:: tensor(1.5131e-08, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4822e-08, dtype=torch.float64)
secont condition:: tensor(1.4822e-08, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5205e-08, dtype=torch.float64)
secont condition:: tensor(1.5205e-08, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5389e-08, dtype=torch.float64)
secont condition:: tensor(1.5389e-08, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6269e-08, dtype=torch.float64)
secont condition:: tensor(1.6269e-08, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.715336799621582
curr_diff: 0 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2257e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250248
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.233485
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.227394
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225820
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.222074
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.218387
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220024
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.223137
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216591
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.218334
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.217027
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.214474
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.212805
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218748
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.217045
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.212965
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.219190
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214601
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.216881
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.212715
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.215217
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215656
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 22, Batch: 0, Loss: 0.215105
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216861
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217968
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.217110
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213963
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.217257
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.214193
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.215717
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.214091
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 32, Batch: 0, Loss: 0.216613
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.213376
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.213861
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.215050
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.216449
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.216497
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.213145
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215736
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.212650
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213071
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.211473
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.215129
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.218039
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.217135
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.214136
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214924
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.220489
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.214567
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214516
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.217679
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217298
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216127
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.215402
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.220095
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.213502
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.215495
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.219088
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.217263
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.28695106506348
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.04113221168518
time_baseline:: 45.173890590667725
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9520e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4867e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0862e-11, dtype=torch.float64)
secont condition:: tensor(4.0862e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9712e-10, dtype=torch.float64)
secont condition:: tensor(2.9712e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1516e-10, dtype=torch.float64)
secont condition:: tensor(2.1516e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2400e-10, dtype=torch.float64)
secont condition:: tensor(8.2400e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0195e-09, dtype=torch.float64)
secont condition:: tensor(1.0195e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3514e-09, dtype=torch.float64)
secont condition:: tensor(1.3514e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3331e-09, dtype=torch.float64)
secont condition:: tensor(1.3331e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7897e-09, dtype=torch.float64)
secont condition:: tensor(1.7897e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6000e-09, dtype=torch.float64)
secont condition:: tensor(2.6000e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3224e-09, dtype=torch.float64)
secont condition:: tensor(2.3224e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2800e-09, dtype=torch.float64)
secont condition:: tensor(2.2800e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7197e-09, dtype=torch.float64)
secont condition:: tensor(2.7197e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3741e-09, dtype=torch.float64)
secont condition:: tensor(2.3741e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1415e-09, dtype=torch.float64)
secont condition:: tensor(3.1415e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4448e-09, dtype=torch.float64)
secont condition:: tensor(2.4448e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7351e-09, dtype=torch.float64)
secont condition:: tensor(3.7351e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0462e-09, dtype=torch.float64)
secont condition:: tensor(3.0462e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8746e-09, dtype=torch.float64)
secont condition:: tensor(3.8746e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1843e-09, dtype=torch.float64)
secont condition:: tensor(3.1843e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1323e-09, dtype=torch.float64)
secont condition:: tensor(4.1323e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5914e-09, dtype=torch.float64)
secont condition:: tensor(4.5914e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5633e-09, dtype=torch.float64)
secont condition:: tensor(4.5633e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9732e-09, dtype=torch.float64)
secont condition:: tensor(4.9732e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7094e-09, dtype=torch.float64)
secont condition:: tensor(4.7094e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9376e-09, dtype=torch.float64)
secont condition:: tensor(5.9376e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9945e-09, dtype=torch.float64)
secont condition:: tensor(4.9945e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8611e-09, dtype=torch.float64)
secont condition:: tensor(4.8611e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9948e-09, dtype=torch.float64)
secont condition:: tensor(4.9948e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7076e-09, dtype=torch.float64)
secont condition:: tensor(4.7076e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3504e-09, dtype=torch.float64)
secont condition:: tensor(5.3504e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2003e-09, dtype=torch.float64)
secont condition:: tensor(6.2003e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3390e-09, dtype=torch.float64)
secont condition:: tensor(5.3390e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7798e-09, dtype=torch.float64)
secont condition:: tensor(6.7798e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8833e-09, dtype=torch.float64)
secont condition:: tensor(5.8833e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3633e-09, dtype=torch.float64)
secont condition:: tensor(5.3633e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3429e-09, dtype=torch.float64)
secont condition:: tensor(6.3429e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0757e-09, dtype=torch.float64)
secont condition:: tensor(7.0757e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1718e-09, dtype=torch.float64)
secont condition:: tensor(6.1718e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5637e-09, dtype=torch.float64)
secont condition:: tensor(5.5637e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3756e-09, dtype=torch.float64)
secont condition:: tensor(6.3756e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2258e-09, dtype=torch.float64)
secont condition:: tensor(8.2258e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9997e-09, dtype=torch.float64)
secont condition:: tensor(7.9997e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2503e-09, dtype=torch.float64)
secont condition:: tensor(9.2503e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2835e-09, dtype=torch.float64)
secont condition:: tensor(8.2835e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5303e-09, dtype=torch.float64)
secont condition:: tensor(9.5303e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1810e-08, dtype=torch.float64)
secont condition:: tensor(1.1810e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1633e-08, dtype=torch.float64)
secont condition:: tensor(1.1633e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3672e-09, dtype=torch.float64)
secont condition:: tensor(9.3672e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1701e-08, dtype=torch.float64)
secont condition:: tensor(1.1701e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1238e-08, dtype=torch.float64)
secont condition:: tensor(1.1238e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1463e-08, dtype=torch.float64)
secont condition:: tensor(1.1463e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0341e-09, dtype=torch.float64)
secont condition:: tensor(9.0341e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2363e-08, dtype=torch.float64)
secont condition:: tensor(1.2363e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4605e-08, dtype=torch.float64)
secont condition:: tensor(1.4605e-08, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4380e-08, dtype=torch.float64)
secont condition:: tensor(1.4380e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2680e-08, dtype=torch.float64)
secont condition:: tensor(1.2680e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3485e-08, dtype=torch.float64)
secont condition:: tensor(1.3485e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5290e-08, dtype=torch.float64)
secont condition:: tensor(1.5290e-08, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4617e-08, dtype=torch.float64)
secont condition:: tensor(1.4617e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4004e-08, dtype=torch.float64)
secont condition:: tensor(1.4004e-08, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3974e-08, dtype=torch.float64)
secont condition:: tensor(1.3974e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5669e-08, dtype=torch.float64)
secont condition:: tensor(1.5669e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8929e-08, dtype=torch.float64)
secont condition:: tensor(1.8929e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7305e-08, dtype=torch.float64)
secont condition:: tensor(1.7305e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.04270625114441
curr_diff: 0 tensor(6.8647e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6145e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4141e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2646e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.9108e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.5528e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.248759
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.240323
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229304
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.221600
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.221394
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.220292
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217734
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.221682
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.220460
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.214283
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.215595
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.218511
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215384
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.215271
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.220350
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.218637
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.218634
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216173
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.219699
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218032
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.216791
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217584
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.214154
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216469
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.216444
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.212686
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214736
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.219484
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.213453
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217026
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.218166
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216257
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.214241
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.213205
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.217386
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.215396
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.217316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216773
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.208104
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.213640
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.218465
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214526
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.219190
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.219786
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.218507
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.215579
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214167
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.213728
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.213660
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.213054
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.216346
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217191
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216374
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.213039
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.214169
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215686
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216584
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.212186
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215868
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.38875198364258
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.114912033081055
time_baseline:: 45.247623443603516
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8941e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0511e-10, dtype=torch.float64)
secont condition:: tensor(1.0511e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1787e-10, dtype=torch.float64)
secont condition:: tensor(3.1787e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2313e-10, dtype=torch.float64)
secont condition:: tensor(3.2313e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8104e-10, dtype=torch.float64)
secont condition:: tensor(7.8104e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1662e-09, dtype=torch.float64)
secont condition:: tensor(1.1662e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2719e-09, dtype=torch.float64)
secont condition:: tensor(1.2719e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2939e-09, dtype=torch.float64)
secont condition:: tensor(1.2939e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6978e-09, dtype=torch.float64)
secont condition:: tensor(1.6978e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6727e-09, dtype=torch.float64)
secont condition:: tensor(2.6727e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1375e-09, dtype=torch.float64)
secont condition:: tensor(2.1375e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8047e-09, dtype=torch.float64)
secont condition:: tensor(1.8047e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5008e-09, dtype=torch.float64)
secont condition:: tensor(2.5008e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1293e-09, dtype=torch.float64)
secont condition:: tensor(2.1293e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4618e-09, dtype=torch.float64)
secont condition:: tensor(3.4618e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6364e-09, dtype=torch.float64)
secont condition:: tensor(3.6364e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2790e-09, dtype=torch.float64)
secont condition:: tensor(3.2790e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0592e-09, dtype=torch.float64)
secont condition:: tensor(3.0592e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3293e-09, dtype=torch.float64)
secont condition:: tensor(3.3293e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8626e-09, dtype=torch.float64)
secont condition:: tensor(2.8626e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8351e-09, dtype=torch.float64)
secont condition:: tensor(3.8351e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8059e-09, dtype=torch.float64)
secont condition:: tensor(4.8059e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0267e-09, dtype=torch.float64)
secont condition:: tensor(4.0267e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1112e-09, dtype=torch.float64)
secont condition:: tensor(4.1112e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8982e-09, dtype=torch.float64)
secont condition:: tensor(4.8982e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0763e-09, dtype=torch.float64)
secont condition:: tensor(4.0763e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4383e-09, dtype=torch.float64)
secont condition:: tensor(5.4383e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3340e-09, dtype=torch.float64)
secont condition:: tensor(6.3340e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9075e-09, dtype=torch.float64)
secont condition:: tensor(4.9075e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9378e-09, dtype=torch.float64)
secont condition:: tensor(6.9378e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3018e-09, dtype=torch.float64)
secont condition:: tensor(5.3018e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5936e-09, dtype=torch.float64)
secont condition:: tensor(6.5936e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6124e-09, dtype=torch.float64)
secont condition:: tensor(5.6124e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3958e-09, dtype=torch.float64)
secont condition:: tensor(6.3958e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7515e-09, dtype=torch.float64)
secont condition:: tensor(5.7515e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6871e-09, dtype=torch.float64)
secont condition:: tensor(4.6871e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2946e-09, dtype=torch.float64)
secont condition:: tensor(6.2946e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0115e-09, dtype=torch.float64)
secont condition:: tensor(6.0115e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5947e-09, dtype=torch.float64)
secont condition:: tensor(7.5947e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3250e-09, dtype=torch.float64)
secont condition:: tensor(7.3250e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0125e-09, dtype=torch.float64)
secont condition:: tensor(6.0125e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6182e-09, dtype=torch.float64)
secont condition:: tensor(7.6182e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0530e-09, dtype=torch.float64)
secont condition:: tensor(8.0530e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7738e-09, dtype=torch.float64)
secont condition:: tensor(9.7738e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0519e-08, dtype=torch.float64)
secont condition:: tensor(1.0519e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0013e-08, dtype=torch.float64)
secont condition:: tensor(1.0013e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8447e-09, dtype=torch.float64)
secont condition:: tensor(8.8447e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0553e-08, dtype=torch.float64)
secont condition:: tensor(1.0553e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2359e-08, dtype=torch.float64)
secont condition:: tensor(1.2359e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2151e-08, dtype=torch.float64)
secont condition:: tensor(1.2151e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4770e-08, dtype=torch.float64)
secont condition:: tensor(1.4770e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1945e-08, dtype=torch.float64)
secont condition:: tensor(1.1945e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3216e-08, dtype=torch.float64)
secont condition:: tensor(1.3216e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1579e-08, dtype=torch.float64)
secont condition:: tensor(1.1579e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2921e-08, dtype=torch.float64)
secont condition:: tensor(1.2921e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2638e-08, dtype=torch.float64)
secont condition:: tensor(1.2638e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5163e-08, dtype=torch.float64)
secont condition:: tensor(1.5163e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4669e-08, dtype=torch.float64)
secont condition:: tensor(1.4669e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3774e-08, dtype=torch.float64)
secont condition:: tensor(1.3774e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5499e-08, dtype=torch.float64)
secont condition:: tensor(1.5499e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6787e-08, dtype=torch.float64)
secont condition:: tensor(1.6787e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5564e-08, dtype=torch.float64)
secont condition:: tensor(1.5564e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4915e-08, dtype=torch.float64)
secont condition:: tensor(1.4915e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5518e-08, dtype=torch.float64)
secont condition:: tensor(1.5518e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.18937349319458
curr_diff: 0 tensor(5.8191e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.3219e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1475e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8366e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.8663e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9869e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7985e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251362
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.234685
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.230782
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225171
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.223436
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.216862
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.216132
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.218537
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218115
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.216727
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.217375
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.216103
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.217180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.216734
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.212228
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.218173
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.219991
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.216485
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218233
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.220749
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.212766
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.217444
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.213148
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.213798
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216078
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.216154
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216779
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.215065
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217631
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.215072
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216482
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.214137
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.217322
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.217682
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.217571
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.215374
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.215074
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.217803
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.220221
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.211633
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213318
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.214381
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.212166
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215899
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.216346
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.215559
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.215450
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.214833
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.215985
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.213511
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.211915
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.216861
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216332
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216535
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.212568
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215413
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.214419
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.213803
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.214634
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.57155394554138
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.907522201538086
time_baseline:: 45.04131460189819
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9269e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.6325e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9135e-11, dtype=torch.float64)
secont condition:: tensor(8.9135e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7754e-10, dtype=torch.float64)
secont condition:: tensor(2.7754e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3588e-10, dtype=torch.float64)
secont condition:: tensor(3.3588e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4103e-10, dtype=torch.float64)
secont condition:: tensor(8.4103e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6987e-10, dtype=torch.float64)
secont condition:: tensor(6.6987e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3091e-09, dtype=torch.float64)
secont condition:: tensor(1.3091e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6934e-09, dtype=torch.float64)
secont condition:: tensor(1.6934e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9554e-09, dtype=torch.float64)
secont condition:: tensor(1.9554e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4287e-09, dtype=torch.float64)
secont condition:: tensor(2.4287e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0784e-09, dtype=torch.float64)
secont condition:: tensor(2.0784e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9639e-09, dtype=torch.float64)
secont condition:: tensor(1.9639e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5850e-09, dtype=torch.float64)
secont condition:: tensor(2.5850e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3762e-09, dtype=torch.float64)
secont condition:: tensor(2.3762e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5425e-09, dtype=torch.float64)
secont condition:: tensor(2.5425e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9289e-09, dtype=torch.float64)
secont condition:: tensor(2.9289e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1511e-09, dtype=torch.float64)
secont condition:: tensor(3.1511e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4086e-09, dtype=torch.float64)
secont condition:: tensor(3.4086e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8595e-09, dtype=torch.float64)
secont condition:: tensor(3.8595e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6140e-09, dtype=torch.float64)
secont condition:: tensor(3.6140e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3286e-09, dtype=torch.float64)
secont condition:: tensor(4.3286e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0206e-09, dtype=torch.float64)
secont condition:: tensor(5.0206e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2026e-09, dtype=torch.float64)
secont condition:: tensor(4.2026e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7324e-09, dtype=torch.float64)
secont condition:: tensor(3.7324e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5875e-09, dtype=torch.float64)
secont condition:: tensor(4.5875e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5943e-09, dtype=torch.float64)
secont condition:: tensor(4.5943e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6042e-09, dtype=torch.float64)
secont condition:: tensor(5.6042e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3435e-09, dtype=torch.float64)
secont condition:: tensor(4.3435e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5104e-09, dtype=torch.float64)
secont condition:: tensor(5.5104e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1391e-09, dtype=torch.float64)
secont condition:: tensor(4.1391e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5574e-09, dtype=torch.float64)
secont condition:: tensor(5.5574e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1447e-09, dtype=torch.float64)
secont condition:: tensor(5.1447e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9067e-09, dtype=torch.float64)
secont condition:: tensor(5.9067e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0656e-09, dtype=torch.float64)
secont condition:: tensor(5.0656e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9960e-09, dtype=torch.float64)
secont condition:: tensor(5.9960e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9318e-09, dtype=torch.float64)
secont condition:: tensor(4.9318e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3560e-09, dtype=torch.float64)
secont condition:: tensor(6.3560e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1082e-09, dtype=torch.float64)
secont condition:: tensor(5.1082e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6769e-09, dtype=torch.float64)
secont condition:: tensor(6.6769e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9484e-09, dtype=torch.float64)
secont condition:: tensor(5.9484e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6159e-09, dtype=torch.float64)
secont condition:: tensor(6.6159e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7863e-09, dtype=torch.float64)
secont condition:: tensor(9.7863e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0056e-08, dtype=torch.float64)
secont condition:: tensor(1.0056e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7106e-09, dtype=torch.float64)
secont condition:: tensor(8.7106e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5796e-09, dtype=torch.float64)
secont condition:: tensor(9.5796e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7541e-09, dtype=torch.float64)
secont condition:: tensor(9.7541e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1723e-08, dtype=torch.float64)
secont condition:: tensor(1.1723e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1348e-08, dtype=torch.float64)
secont condition:: tensor(1.1348e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1415e-08, dtype=torch.float64)
secont condition:: tensor(1.1415e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2048e-08, dtype=torch.float64)
secont condition:: tensor(1.2048e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1817e-08, dtype=torch.float64)
secont condition:: tensor(1.1817e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2456e-08, dtype=torch.float64)
secont condition:: tensor(1.2456e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1400e-08, dtype=torch.float64)
secont condition:: tensor(1.1400e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0411e-08, dtype=torch.float64)
secont condition:: tensor(1.0411e-08, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2871e-08, dtype=torch.float64)
secont condition:: tensor(1.2871e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3954e-08, dtype=torch.float64)
secont condition:: tensor(1.3954e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4840e-08, dtype=torch.float64)
secont condition:: tensor(1.4840e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3628e-08, dtype=torch.float64)
secont condition:: tensor(1.3628e-08, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4583e-08, dtype=torch.float64)
secont condition:: tensor(1.4583e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7112e-08, dtype=torch.float64)
secont condition:: tensor(1.7112e-08, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4645e-08, dtype=torch.float64)
secont condition:: tensor(1.4645e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4954e-08, dtype=torch.float64)
secont condition:: tensor(1.4954e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5517e-08, dtype=torch.float64)
secont condition:: tensor(1.5517e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5874e-08, dtype=torch.float64)
secont condition:: tensor(1.5874e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.970269680023193
curr_diff: 0 tensor(6.0168e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9141e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1316e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6605e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.0511e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0182e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4750e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254005
Test Avg. Loss: 0.000023, Accuracy: 0.937900
Train - Epoch 1, Batch: 0, Loss: 0.234306
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.225161
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.224277
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.223317
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.219663
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.222145
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.213903
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216908
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 9, Batch: 0, Loss: 0.218612
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.217681
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.214001
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.218925
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218300
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.216682
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.213859
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.217541
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214634
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.217808
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215673
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.214637
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.213428
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.219847
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.214493
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217075
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.212042
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214833
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216328
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.215120
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.213433
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217575
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216686
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 32, Batch: 0, Loss: 0.215580
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.218439
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.213446
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217174
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.217164
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.215378
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216127
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214009
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.219803
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.218915
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215906
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.213606
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215254
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.212085
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.218010
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214969
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.218596
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.211366
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.218899
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.217052
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217647
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213149
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.214415
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.214597
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.210614
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.214984
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.216430
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.534035205841064
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.670490980148315
time_baseline:: 45.8105092048645
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4735e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9854e-11, dtype=torch.float64)
secont condition:: tensor(3.9854e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7348e-10, dtype=torch.float64)
secont condition:: tensor(2.7348e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9675e-10, dtype=torch.float64)
secont condition:: tensor(2.9675e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7060e-10, dtype=torch.float64)
secont condition:: tensor(7.7060e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1035e-10, dtype=torch.float64)
secont condition:: tensor(9.1035e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3635e-09, dtype=torch.float64)
secont condition:: tensor(1.3635e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8661e-09, dtype=torch.float64)
secont condition:: tensor(1.8661e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8258e-09, dtype=torch.float64)
secont condition:: tensor(1.8258e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3238e-09, dtype=torch.float64)
secont condition:: tensor(2.3238e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0934e-09, dtype=torch.float64)
secont condition:: tensor(2.0934e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3104e-09, dtype=torch.float64)
secont condition:: tensor(2.3104e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5072e-09, dtype=torch.float64)
secont condition:: tensor(2.5072e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4755e-09, dtype=torch.float64)
secont condition:: tensor(3.4755e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1225e-09, dtype=torch.float64)
secont condition:: tensor(3.1225e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2725e-09, dtype=torch.float64)
secont condition:: tensor(2.2725e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5705e-09, dtype=torch.float64)
secont condition:: tensor(3.5705e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6409e-09, dtype=torch.float64)
secont condition:: tensor(3.6409e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6717e-09, dtype=torch.float64)
secont condition:: tensor(3.6717e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9074e-09, dtype=torch.float64)
secont condition:: tensor(3.9074e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3059e-09, dtype=torch.float64)
secont condition:: tensor(4.3059e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5825e-09, dtype=torch.float64)
secont condition:: tensor(4.5825e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8383e-09, dtype=torch.float64)
secont condition:: tensor(3.8383e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1520e-09, dtype=torch.float64)
secont condition:: tensor(5.1520e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7300e-09, dtype=torch.float64)
secont condition:: tensor(4.7300e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2624e-09, dtype=torch.float64)
secont condition:: tensor(5.2624e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5999e-09, dtype=torch.float64)
secont condition:: tensor(4.5999e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1434e-09, dtype=torch.float64)
secont condition:: tensor(4.1434e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0165e-09, dtype=torch.float64)
secont condition:: tensor(5.0165e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9964e-09, dtype=torch.float64)
secont condition:: tensor(4.9964e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0487e-09, dtype=torch.float64)
secont condition:: tensor(5.0487e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2183e-09, dtype=torch.float64)
secont condition:: tensor(6.2183e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2311e-09, dtype=torch.float64)
secont condition:: tensor(5.2311e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1818e-09, dtype=torch.float64)
secont condition:: tensor(6.1818e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9395e-09, dtype=torch.float64)
secont condition:: tensor(5.9395e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4261e-09, dtype=torch.float64)
secont condition:: tensor(6.4261e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5357e-09, dtype=torch.float64)
secont condition:: tensor(6.5357e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5528e-09, dtype=torch.float64)
secont condition:: tensor(6.5528e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6070e-09, dtype=torch.float64)
secont condition:: tensor(6.6070e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9416e-09, dtype=torch.float64)
secont condition:: tensor(5.9416e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6725e-09, dtype=torch.float64)
secont condition:: tensor(6.6725e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4259e-09, dtype=torch.float64)
secont condition:: tensor(7.4259e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7081e-09, dtype=torch.float64)
secont condition:: tensor(8.7081e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8607e-09, dtype=torch.float64)
secont condition:: tensor(8.8607e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2145e-09, dtype=torch.float64)
secont condition:: tensor(9.2145e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5655e-09, dtype=torch.float64)
secont condition:: tensor(9.5655e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5911e-09, dtype=torch.float64)
secont condition:: tensor(9.5911e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3424e-09, dtype=torch.float64)
secont condition:: tensor(9.3424e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1610e-08, dtype=torch.float64)
secont condition:: tensor(1.1610e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0819e-08, dtype=torch.float64)
secont condition:: tensor(1.0819e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1790e-08, dtype=torch.float64)
secont condition:: tensor(1.1790e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0639e-08, dtype=torch.float64)
secont condition:: tensor(1.0639e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1211e-08, dtype=torch.float64)
secont condition:: tensor(1.1211e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3390e-08, dtype=torch.float64)
secont condition:: tensor(1.3390e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2185e-08, dtype=torch.float64)
secont condition:: tensor(1.2185e-08, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1786e-08, dtype=torch.float64)
secont condition:: tensor(1.1786e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3654e-08, dtype=torch.float64)
secont condition:: tensor(1.3654e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6711e-08, dtype=torch.float64)
secont condition:: tensor(1.6711e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2648e-08, dtype=torch.float64)
secont condition:: tensor(1.2648e-08, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6747e-08, dtype=torch.float64)
secont condition:: tensor(1.6747e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5790e-08, dtype=torch.float64)
secont condition:: tensor(1.5790e-08, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2650e-08, dtype=torch.float64)
secont condition:: tensor(1.2650e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7673e-08, dtype=torch.float64)
secont condition:: tensor(1.7673e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7803e-08, dtype=torch.float64)
secont condition:: tensor(1.7803e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9358e-08, dtype=torch.float64)
secont condition:: tensor(1.9358e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4941e-08, dtype=torch.float64)
secont condition:: tensor(1.4941e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.030638933181763
curr_diff: 0 tensor(6.8880e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.3037e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5374e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4405e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.9416e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0729e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7491e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252202
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.239189
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.226899
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.227504
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.221067
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.219983
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220466
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.216445
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216911
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.216371
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.216446
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.221626
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.220570
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216845
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.221184
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.215800
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.213871
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.219471
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.221298
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215904
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.215267
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.212598
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.211652
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.210953
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.221056
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.211442
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.217582
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217640
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.215915
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.216728
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217615
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215068
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 32, Batch: 0, Loss: 0.219291
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.212382
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.215814
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.217167
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.219315
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216208
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.212607
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214469
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.218299
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214485
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.216875
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214795
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.211067
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.213971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216657
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.213716
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.211178
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.216509
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.211315
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214051
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214845
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.217725
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.212730
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.215263
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.213616
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.211470
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.211947
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215526
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 56.2796733379364
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.57794213294983
time_baseline:: 45.71225309371948
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9681e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3353e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5096e-10, dtype=torch.float64)
secont condition:: tensor(1.5096e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8888e-10, dtype=torch.float64)
secont condition:: tensor(2.8888e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0857e-10, dtype=torch.float64)
secont condition:: tensor(8.0857e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4487e-10, dtype=torch.float64)
secont condition:: tensor(6.4487e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2902e-10, dtype=torch.float64)
secont condition:: tensor(6.2902e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2654e-09, dtype=torch.float64)
secont condition:: tensor(1.2654e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1511e-09, dtype=torch.float64)
secont condition:: tensor(1.1511e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8312e-09, dtype=torch.float64)
secont condition:: tensor(1.8312e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5776e-09, dtype=torch.float64)
secont condition:: tensor(1.5776e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3085e-09, dtype=torch.float64)
secont condition:: tensor(2.3085e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1704e-09, dtype=torch.float64)
secont condition:: tensor(3.1704e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7000e-09, dtype=torch.float64)
secont condition:: tensor(2.7000e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4102e-09, dtype=torch.float64)
secont condition:: tensor(2.4102e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8444e-09, dtype=torch.float64)
secont condition:: tensor(2.8444e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5715e-09, dtype=torch.float64)
secont condition:: tensor(2.5715e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2997e-09, dtype=torch.float64)
secont condition:: tensor(3.2997e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9733e-09, dtype=torch.float64)
secont condition:: tensor(3.9733e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6912e-09, dtype=torch.float64)
secont condition:: tensor(3.6912e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3054e-09, dtype=torch.float64)
secont condition:: tensor(3.3054e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2293e-09, dtype=torch.float64)
secont condition:: tensor(4.2293e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1417e-09, dtype=torch.float64)
secont condition:: tensor(5.1417e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1965e-09, dtype=torch.float64)
secont condition:: tensor(4.1965e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7171e-09, dtype=torch.float64)
secont condition:: tensor(3.7171e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3092e-09, dtype=torch.float64)
secont condition:: tensor(4.3092e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6624e-09, dtype=torch.float64)
secont condition:: tensor(6.6624e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4855e-09, dtype=torch.float64)
secont condition:: tensor(4.4855e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7758e-09, dtype=torch.float64)
secont condition:: tensor(5.7758e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1028e-09, dtype=torch.float64)
secont condition:: tensor(5.1028e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9980e-09, dtype=torch.float64)
secont condition:: tensor(3.9980e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3555e-09, dtype=torch.float64)
secont condition:: tensor(5.3555e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9278e-09, dtype=torch.float64)
secont condition:: tensor(4.9278e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4862e-09, dtype=torch.float64)
secont condition:: tensor(5.4862e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8345e-09, dtype=torch.float64)
secont condition:: tensor(4.8345e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8708e-09, dtype=torch.float64)
secont condition:: tensor(5.8708e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8067e-09, dtype=torch.float64)
secont condition:: tensor(6.8067e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1175e-09, dtype=torch.float64)
secont condition:: tensor(6.1175e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6777e-09, dtype=torch.float64)
secont condition:: tensor(7.6777e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3530e-09, dtype=torch.float64)
secont condition:: tensor(6.3530e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4364e-09, dtype=torch.float64)
secont condition:: tensor(6.4364e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3518e-09, dtype=torch.float64)
secont condition:: tensor(6.3518e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2362e-09, dtype=torch.float64)
secont condition:: tensor(9.2362e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5966e-09, dtype=torch.float64)
secont condition:: tensor(7.5966e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5296e-09, dtype=torch.float64)
secont condition:: tensor(9.5296e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0363e-08, dtype=torch.float64)
secont condition:: tensor(1.0363e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1890e-08, dtype=torch.float64)
secont condition:: tensor(1.1890e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0952e-08, dtype=torch.float64)
secont condition:: tensor(1.0952e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0816e-08, dtype=torch.float64)
secont condition:: tensor(1.0816e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0995e-09, dtype=torch.float64)
secont condition:: tensor(9.0995e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2557e-08, dtype=torch.float64)
secont condition:: tensor(1.2557e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2113e-08, dtype=torch.float64)
secont condition:: tensor(1.2113e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4567e-08, dtype=torch.float64)
secont condition:: tensor(1.4567e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0676e-08, dtype=torch.float64)
secont condition:: tensor(1.0676e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3335e-08, dtype=torch.float64)
secont condition:: tensor(1.3335e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2626e-08, dtype=torch.float64)
secont condition:: tensor(1.2626e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3764e-08, dtype=torch.float64)
secont condition:: tensor(1.3764e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5518e-08, dtype=torch.float64)
secont condition:: tensor(1.5518e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3891e-08, dtype=torch.float64)
secont condition:: tensor(1.3891e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4951e-08, dtype=torch.float64)
secont condition:: tensor(1.4951e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4542e-08, dtype=torch.float64)
secont condition:: tensor(1.4542e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4881e-08, dtype=torch.float64)
secont condition:: tensor(1.4881e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5741e-08, dtype=torch.float64)
secont condition:: tensor(1.5741e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8034e-08, dtype=torch.float64)
secont condition:: tensor(1.8034e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5316e-08, dtype=torch.float64)
secont condition:: tensor(1.5316e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 9.129657506942749
curr_diff: 0 tensor(6.9449e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.3304e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3030e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8237e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.9871e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0623e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4971e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251783
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.224341
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.221929
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.217002
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 4, Batch: 0, Loss: 0.215126
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.217915
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 6, Batch: 0, Loss: 0.217467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.211200
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.215957
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.216504
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.212945
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.216069
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.218224
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.218872
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.217347
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.214994
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.210245
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.216032
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.211167
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.212182
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.217745
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 21, Batch: 0, Loss: 0.214801
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 22, Batch: 0, Loss: 0.216948
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.215852
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 24, Batch: 0, Loss: 0.210985
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 25, Batch: 0, Loss: 0.217438
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 26, Batch: 0, Loss: 0.215681
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.215934
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.210318
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.209768
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.210975
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.209831
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.002560138702393
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.680999279022217
time_baseline:: 22.751113891601562
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1469e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0230e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2668e-10, dtype=torch.float64)
secont condition:: tensor(4.2668e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7775e-10, dtype=torch.float64)
secont condition:: tensor(7.7775e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8325e-10, dtype=torch.float64)
secont condition:: tensor(5.8325e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5919e-10, dtype=torch.float64)
secont condition:: tensor(5.5919e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4113e-10, dtype=torch.float64)
secont condition:: tensor(4.4113e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4301e-09, dtype=torch.float64)
secont condition:: tensor(1.4301e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1724e-09, dtype=torch.float64)
secont condition:: tensor(1.1724e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4512e-09, dtype=torch.float64)
secont condition:: tensor(1.4512e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5670e-09, dtype=torch.float64)
secont condition:: tensor(1.5670e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2685e-09, dtype=torch.float64)
secont condition:: tensor(1.2685e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0434e-09, dtype=torch.float64)
secont condition:: tensor(2.0434e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6696e-09, dtype=torch.float64)
secont condition:: tensor(2.6696e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5419e-09, dtype=torch.float64)
secont condition:: tensor(5.5419e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2439e-09, dtype=torch.float64)
secont condition:: tensor(4.2439e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3227e-09, dtype=torch.float64)
secont condition:: tensor(3.3227e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8421e-09, dtype=torch.float64)
secont condition:: tensor(2.8421e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5149e-09, dtype=torch.float64)
secont condition:: tensor(2.5149e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8650e-09, dtype=torch.float64)
secont condition:: tensor(1.8650e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3299e-09, dtype=torch.float64)
secont condition:: tensor(3.3299e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0149e-09, dtype=torch.float64)
secont condition:: tensor(4.0149e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7039e-09, dtype=torch.float64)
secont condition:: tensor(4.7039e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3243e-09, dtype=torch.float64)
secont condition:: tensor(5.3243e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1694e-09, dtype=torch.float64)
secont condition:: tensor(5.1694e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2040e-09, dtype=torch.float64)
secont condition:: tensor(4.2040e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4031e-09, dtype=torch.float64)
secont condition:: tensor(4.4031e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6869e-09, dtype=torch.float64)
secont condition:: tensor(3.6869e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0345e-09, dtype=torch.float64)
secont condition:: tensor(5.0345e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5836e-09, dtype=torch.float64)
secont condition:: tensor(4.5836e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9473e-09, dtype=torch.float64)
secont condition:: tensor(3.9473e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2403e-09, dtype=torch.float64)
secont condition:: tensor(6.2403e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8371e-09, dtype=torch.float64)
secont condition:: tensor(5.8371e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6926e-09, dtype=torch.float64)
secont condition:: tensor(4.6926e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4407e-09, dtype=torch.float64)
secont condition:: tensor(5.4407e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9425e-09, dtype=torch.float64)
secont condition:: tensor(4.9425e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5762e-09, dtype=torch.float64)
secont condition:: tensor(3.5762e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2000e-09, dtype=torch.float64)
secont condition:: tensor(7.2000e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1173e-09, dtype=torch.float64)
secont condition:: tensor(6.1173e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6180e-09, dtype=torch.float64)
secont condition:: tensor(5.6180e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7732e-09, dtype=torch.float64)
secont condition:: tensor(4.7732e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2545e-09, dtype=torch.float64)
secont condition:: tensor(7.2545e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6006e-09, dtype=torch.float64)
secont condition:: tensor(8.6006e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7175e-09, dtype=torch.float64)
secont condition:: tensor(9.7175e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0014e-08, dtype=torch.float64)
secont condition:: tensor(1.0014e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0340e-08, dtype=torch.float64)
secont condition:: tensor(1.0340e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2464e-08, dtype=torch.float64)
secont condition:: tensor(1.2464e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3826e-08, dtype=torch.float64)
secont condition:: tensor(1.3826e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4883e-08, dtype=torch.float64)
secont condition:: tensor(1.4883e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1783e-08, dtype=torch.float64)
secont condition:: tensor(1.1783e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5223e-08, dtype=torch.float64)
secont condition:: tensor(1.5223e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5244e-08, dtype=torch.float64)
secont condition:: tensor(1.5244e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4560e-08, dtype=torch.float64)
secont condition:: tensor(1.4560e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0676e-08, dtype=torch.float64)
secont condition:: tensor(1.0676e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-08, dtype=torch.float64)
secont condition:: tensor(1.8193e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6647e-08, dtype=torch.float64)
secont condition:: tensor(1.6647e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8137e-08, dtype=torch.float64)
secont condition:: tensor(1.8137e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5217e-08, dtype=torch.float64)
secont condition:: tensor(1.5217e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4121e-08, dtype=torch.float64)
secont condition:: tensor(1.4121e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9891e-08, dtype=torch.float64)
secont condition:: tensor(1.9891e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5972e-08, dtype=torch.float64)
secont condition:: tensor(1.5972e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5781e-08, dtype=torch.float64)
secont condition:: tensor(1.5781e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7703e-08, dtype=torch.float64)
secont condition:: tensor(1.7703e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.640136957168579
curr_diff: 0 tensor(8.7638e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6859e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.9088e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8987e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.8175e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3725e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4385e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252621
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.227225
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 2, Batch: 0, Loss: 0.220534
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.219474
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 4, Batch: 0, Loss: 0.225722
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.216355
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.216480
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.219802
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.221278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.212685
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.222878
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 11, Batch: 0, Loss: 0.211097
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.217449
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.212513
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.212557
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.220409
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.214599
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.213037
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.214846
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 19, Batch: 0, Loss: 0.221505
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.210675
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.210393
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.223753
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 24, Batch: 0, Loss: 0.211942
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.208889
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.213499
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.212611
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.214911
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.214293
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.211578
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.217786
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.120166063308716
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.704923629760742
time_baseline:: 22.785789251327515
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0060e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3403e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7062e-12, dtype=torch.float64)
secont condition:: tensor(5.7062e-12, dtype=torch.float64)
curr_secont condition:: tensor(8.1341e-10, dtype=torch.float64)
secont condition:: tensor(8.1341e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9832e-10, dtype=torch.float64)
secont condition:: tensor(6.9832e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5257e-10, dtype=torch.float64)
secont condition:: tensor(5.5257e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0661e-10, dtype=torch.float64)
secont condition:: tensor(8.0661e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7948e-09, dtype=torch.float64)
secont condition:: tensor(1.7948e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6085e-09, dtype=torch.float64)
secont condition:: tensor(1.6085e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4451e-09, dtype=torch.float64)
secont condition:: tensor(1.4451e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5282e-09, dtype=torch.float64)
secont condition:: tensor(2.5282e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9430e-09, dtype=torch.float64)
secont condition:: tensor(2.9430e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2196e-09, dtype=torch.float64)
secont condition:: tensor(2.2196e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8755e-09, dtype=torch.float64)
secont condition:: tensor(1.8755e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5553e-09, dtype=torch.float64)
secont condition:: tensor(1.5553e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3188e-09, dtype=torch.float64)
secont condition:: tensor(1.3188e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6959e-09, dtype=torch.float64)
secont condition:: tensor(2.6959e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1242e-09, dtype=torch.float64)
secont condition:: tensor(3.1242e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5481e-09, dtype=torch.float64)
secont condition:: tensor(2.5481e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4010e-09, dtype=torch.float64)
secont condition:: tensor(4.4010e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3103e-09, dtype=torch.float64)
secont condition:: tensor(3.3103e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1056e-09, dtype=torch.float64)
secont condition:: tensor(4.1056e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1172e-09, dtype=torch.float64)
secont condition:: tensor(3.1172e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9816e-09, dtype=torch.float64)
secont condition:: tensor(2.9816e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8175e-09, dtype=torch.float64)
secont condition:: tensor(4.8175e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4390e-09, dtype=torch.float64)
secont condition:: tensor(4.4390e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2472e-09, dtype=torch.float64)
secont condition:: tensor(6.2472e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8447e-09, dtype=torch.float64)
secont condition:: tensor(5.8447e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1537e-09, dtype=torch.float64)
secont condition:: tensor(5.1537e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0986e-09, dtype=torch.float64)
secont condition:: tensor(4.0986e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0996e-09, dtype=torch.float64)
secont condition:: tensor(4.0996e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5052e-09, dtype=torch.float64)
secont condition:: tensor(3.5052e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2376e-09, dtype=torch.float64)
secont condition:: tensor(3.2376e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4521e-09, dtype=torch.float64)
secont condition:: tensor(6.4521e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2238e-09, dtype=torch.float64)
secont condition:: tensor(5.2238e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8436e-09, dtype=torch.float64)
secont condition:: tensor(7.8436e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9939e-09, dtype=torch.float64)
secont condition:: tensor(6.9939e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2936e-09, dtype=torch.float64)
secont condition:: tensor(6.2936e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6715e-09, dtype=torch.float64)
secont condition:: tensor(4.6715e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4511e-09, dtype=torch.float64)
secont condition:: tensor(4.4511e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0824e-09, dtype=torch.float64)
secont condition:: tensor(4.0824e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6321e-09, dtype=torch.float64)
secont condition:: tensor(8.6321e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1451e-09, dtype=torch.float64)
secont condition:: tensor(7.1451e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9322e-09, dtype=torch.float64)
secont condition:: tensor(7.9322e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0521e-08, dtype=torch.float64)
secont condition:: tensor(1.0521e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1023e-08, dtype=torch.float64)
secont condition:: tensor(1.1023e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1929e-08, dtype=torch.float64)
secont condition:: tensor(1.1929e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7040e-08, dtype=torch.float64)
secont condition:: tensor(1.7040e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1754e-08, dtype=torch.float64)
secont condition:: tensor(1.1754e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8046e-08, dtype=torch.float64)
secont condition:: tensor(1.8046e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4716e-08, dtype=torch.float64)
secont condition:: tensor(1.4716e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9762e-08, dtype=torch.float64)
secont condition:: tensor(1.9762e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5181e-08, dtype=torch.float64)
secont condition:: tensor(1.5181e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5330e-08, dtype=torch.float64)
secont condition:: tensor(1.5330e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8148e-08, dtype=torch.float64)
secont condition:: tensor(1.8148e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4217e-08, dtype=torch.float64)
secont condition:: tensor(1.4217e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9402e-08, dtype=torch.float64)
secont condition:: tensor(1.9402e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8860e-08, dtype=torch.float64)
secont condition:: tensor(1.8860e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1222e-08, dtype=torch.float64)
secont condition:: tensor(2.1222e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.9794602394104
curr_diff: 0 tensor(8.4122e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0093e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4403e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9210e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.4752e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2854e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.9490e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.256630
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.224394
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.227772
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.218872
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 4, Batch: 0, Loss: 0.220450
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.218450
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.215912
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.217662
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.219967
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.218716
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.211406
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.213403
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.220251
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.220700
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.217675
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.214381
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 16, Batch: 0, Loss: 0.214563
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.215673
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.220300
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.218226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.215117
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 21, Batch: 0, Loss: 0.220011
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.211844
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.219230
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.220585
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 25, Batch: 0, Loss: 0.214240
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.218372
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.222350
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.215765
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.212716
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.217150
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.217450
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 31.08684778213501
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.64165949821472
time_baseline:: 22.712105989456177
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9655e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.0820e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8367e-10, dtype=torch.float64)
secont condition:: tensor(1.8367e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1759e-10, dtype=torch.float64)
secont condition:: tensor(8.1759e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4103e-10, dtype=torch.float64)
secont condition:: tensor(6.4103e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0651e-10, dtype=torch.float64)
secont condition:: tensor(6.0651e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3412e-10, dtype=torch.float64)
secont condition:: tensor(5.3412e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4879e-10, dtype=torch.float64)
secont condition:: tensor(5.4879e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8662e-09, dtype=torch.float64)
secont condition:: tensor(1.8662e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4144e-09, dtype=torch.float64)
secont condition:: tensor(1.4144e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1217e-09, dtype=torch.float64)
secont condition:: tensor(1.1217e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9736e-10, dtype=torch.float64)
secont condition:: tensor(9.9736e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6459e-10, dtype=torch.float64)
secont condition:: tensor(9.6459e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9037e-09, dtype=torch.float64)
secont condition:: tensor(3.9037e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1766e-09, dtype=torch.float64)
secont condition:: tensor(5.1766e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1234e-09, dtype=torch.float64)
secont condition:: tensor(4.1234e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2999e-09, dtype=torch.float64)
secont condition:: tensor(3.2999e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3737e-09, dtype=torch.float64)
secont condition:: tensor(4.3737e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4102e-09, dtype=torch.float64)
secont condition:: tensor(3.4102e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0755e-09, dtype=torch.float64)
secont condition:: tensor(3.0755e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1169e-09, dtype=torch.float64)
secont condition:: tensor(3.1169e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4162e-09, dtype=torch.float64)
secont condition:: tensor(7.4162e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4702e-09, dtype=torch.float64)
secont condition:: tensor(6.4702e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0197e-09, dtype=torch.float64)
secont condition:: tensor(7.0197e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4442e-09, dtype=torch.float64)
secont condition:: tensor(6.4442e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2024e-09, dtype=torch.float64)
secont condition:: tensor(5.2024e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6650e-09, dtype=torch.float64)
secont condition:: tensor(5.6650e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6981e-09, dtype=torch.float64)
secont condition:: tensor(6.6981e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2577e-09, dtype=torch.float64)
secont condition:: tensor(6.2577e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7338e-09, dtype=torch.float64)
secont condition:: tensor(4.7338e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6709e-09, dtype=torch.float64)
secont condition:: tensor(5.6709e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0192e-09, dtype=torch.float64)
secont condition:: tensor(8.0192e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4529e-09, dtype=torch.float64)
secont condition:: tensor(6.4529e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9388e-09, dtype=torch.float64)
secont condition:: tensor(5.9388e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8585e-09, dtype=torch.float64)
secont condition:: tensor(4.8585e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9926e-09, dtype=torch.float64)
secont condition:: tensor(6.9926e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1849e-09, dtype=torch.float64)
secont condition:: tensor(6.1849e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3043e-09, dtype=torch.float64)
secont condition:: tensor(5.3043e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9533e-09, dtype=torch.float64)
secont condition:: tensor(4.9533e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4561e-09, dtype=torch.float64)
secont condition:: tensor(4.4561e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4668e-09, dtype=torch.float64)
secont condition:: tensor(6.4668e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1557e-09, dtype=torch.float64)
secont condition:: tensor(5.1557e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6834e-09, dtype=torch.float64)
secont condition:: tensor(8.6834e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1453e-08, dtype=torch.float64)
secont condition:: tensor(1.1453e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3403e-08, dtype=torch.float64)
secont condition:: tensor(1.3403e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1408e-08, dtype=torch.float64)
secont condition:: tensor(1.1408e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2678e-08, dtype=torch.float64)
secont condition:: tensor(1.2678e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2205e-08, dtype=torch.float64)
secont condition:: tensor(1.2205e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2649e-08, dtype=torch.float64)
secont condition:: tensor(1.2649e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4556e-08, dtype=torch.float64)
secont condition:: tensor(1.4556e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6984e-08, dtype=torch.float64)
secont condition:: tensor(1.6984e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3494e-08, dtype=torch.float64)
secont condition:: tensor(1.3494e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3759e-08, dtype=torch.float64)
secont condition:: tensor(1.3759e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3682e-08, dtype=torch.float64)
secont condition:: tensor(1.3682e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4175e-08, dtype=torch.float64)
secont condition:: tensor(1.4175e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3458e-08, dtype=torch.float64)
secont condition:: tensor(1.3458e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5967e-08, dtype=torch.float64)
secont condition:: tensor(1.5967e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0382e-08, dtype=torch.float64)
secont condition:: tensor(2.0382e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9440e-08, dtype=torch.float64)
secont condition:: tensor(1.9440e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9321e-08, dtype=torch.float64)
secont condition:: tensor(1.9321e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4215e-08, dtype=torch.float64)
secont condition:: tensor(1.4215e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2943e-08, dtype=torch.float64)
secont condition:: tensor(1.2943e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.765700340270996
curr_diff: 0 tensor(8.6359e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3249e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.0923e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5125e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.6977e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1331e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6453e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253725
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.221213
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.220910
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.226028
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.222291
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.221452
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.213374
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.216281
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.221890
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.214344
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.213724
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.214584
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215936
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.212252
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.215058
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.221345
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 16, Batch: 0, Loss: 0.222526
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.216687
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.215152
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.216059
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.214285
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215030
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 22, Batch: 0, Loss: 0.216240
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.216401
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.210393
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.213957
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.213210
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216965
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.215228
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 29, Batch: 0, Loss: 0.217545
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 30, Batch: 0, Loss: 0.213547
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.212328
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 31.467251777648926
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.690940856933594
time_baseline:: 22.76179003715515
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0032e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4930e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0843e-10, dtype=torch.float64)
secont condition:: tensor(6.0843e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8560e-10, dtype=torch.float64)
secont condition:: tensor(6.8560e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1254e-10, dtype=torch.float64)
secont condition:: tensor(6.1254e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0864e-10, dtype=torch.float64)
secont condition:: tensor(5.0864e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3045e-10, dtype=torch.float64)
secont condition:: tensor(8.3045e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6665e-09, dtype=torch.float64)
secont condition:: tensor(1.6665e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6474e-09, dtype=torch.float64)
secont condition:: tensor(1.6474e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2225e-09, dtype=torch.float64)
secont condition:: tensor(1.2225e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1890e-09, dtype=torch.float64)
secont condition:: tensor(1.1890e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2293e-09, dtype=torch.float64)
secont condition:: tensor(1.2293e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3087e-09, dtype=torch.float64)
secont condition:: tensor(1.3087e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1926e-09, dtype=torch.float64)
secont condition:: tensor(3.1926e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5129e-09, dtype=torch.float64)
secont condition:: tensor(2.5129e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8741e-09, dtype=torch.float64)
secont condition:: tensor(2.8741e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3076e-09, dtype=torch.float64)
secont condition:: tensor(2.3076e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9036e-09, dtype=torch.float64)
secont condition:: tensor(4.9036e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3193e-09, dtype=torch.float64)
secont condition:: tensor(4.3193e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5312e-09, dtype=torch.float64)
secont condition:: tensor(3.5312e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9117e-09, dtype=torch.float64)
secont condition:: tensor(2.9117e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1497e-09, dtype=torch.float64)
secont condition:: tensor(7.1497e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4592e-09, dtype=torch.float64)
secont condition:: tensor(6.4592e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3781e-09, dtype=torch.float64)
secont condition:: tensor(9.3781e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8868e-09, dtype=torch.float64)
secont condition:: tensor(6.8868e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8824e-09, dtype=torch.float64)
secont condition:: tensor(6.8824e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7344e-09, dtype=torch.float64)
secont condition:: tensor(8.7344e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6235e-09, dtype=torch.float64)
secont condition:: tensor(7.6235e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5640e-09, dtype=torch.float64)
secont condition:: tensor(7.5640e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3885e-09, dtype=torch.float64)
secont condition:: tensor(5.3885e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1471e-09, dtype=torch.float64)
secont condition:: tensor(7.1471e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7860e-09, dtype=torch.float64)
secont condition:: tensor(6.7860e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6587e-09, dtype=torch.float64)
secont condition:: tensor(6.6587e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7968e-09, dtype=torch.float64)
secont condition:: tensor(6.7968e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7655e-09, dtype=torch.float64)
secont condition:: tensor(7.7655e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9056e-09, dtype=torch.float64)
secont condition:: tensor(6.9056e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1958e-09, dtype=torch.float64)
secont condition:: tensor(5.1958e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8203e-09, dtype=torch.float64)
secont condition:: tensor(6.8203e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6582e-09, dtype=torch.float64)
secont condition:: tensor(5.6582e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8172e-09, dtype=torch.float64)
secont condition:: tensor(6.8172e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7660e-09, dtype=torch.float64)
secont condition:: tensor(7.7660e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0511e-09, dtype=torch.float64)
secont condition:: tensor(7.0511e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9146e-09, dtype=torch.float64)
secont condition:: tensor(6.9146e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1803e-08, dtype=torch.float64)
secont condition:: tensor(1.1803e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0606e-08, dtype=torch.float64)
secont condition:: tensor(1.0606e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7756e-09, dtype=torch.float64)
secont condition:: tensor(9.7756e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0361e-08, dtype=torch.float64)
secont condition:: tensor(1.0361e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4166e-09, dtype=torch.float64)
secont condition:: tensor(9.4166e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4457e-08, dtype=torch.float64)
secont condition:: tensor(1.4457e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3918e-08, dtype=torch.float64)
secont condition:: tensor(1.3918e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4167e-08, dtype=torch.float64)
secont condition:: tensor(1.4167e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4886e-08, dtype=torch.float64)
secont condition:: tensor(1.4886e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1499e-08, dtype=torch.float64)
secont condition:: tensor(1.1499e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1657e-08, dtype=torch.float64)
secont condition:: tensor(2.1657e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5442e-08, dtype=torch.float64)
secont condition:: tensor(1.5442e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5693e-08, dtype=torch.float64)
secont condition:: tensor(1.5693e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3938e-08, dtype=torch.float64)
secont condition:: tensor(2.3938e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6122e-08, dtype=torch.float64)
secont condition:: tensor(1.6122e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8065e-08, dtype=torch.float64)
secont condition:: tensor(1.8065e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6975e-08, dtype=torch.float64)
secont condition:: tensor(1.6975e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8729e-08, dtype=torch.float64)
secont condition:: tensor(1.8729e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5989e-08, dtype=torch.float64)
secont condition:: tensor(1.5989e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.813987731933594
curr_diff: 0 tensor(8.4601e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1340e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7985e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5523e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.5190e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1278e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.8305e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249663
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.232075
Test Avg. Loss: 0.000022, Accuracy: 0.942500
Train - Epoch 2, Batch: 0, Loss: 0.226667
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.221529
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.222002
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.209295
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.218461
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.215900
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.215822
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.216202
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.218275
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 11, Batch: 0, Loss: 0.215861
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.217534
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.213758
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.209805
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.215478
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.221981
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.218706
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.210903
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.214068
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.217794
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.213765
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.218831
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217366
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.221879
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 25, Batch: 0, Loss: 0.207788
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.219401
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 27, Batch: 0, Loss: 0.212850
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.225520
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.218570
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.215225
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.209897
Test Avg. Loss: 0.000021, Accuracy: 0.945800
training_time:: 31.070897817611694
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.773951768875122
time_baseline:: 22.84377098083496
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0961e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6077e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1928e-10, dtype=torch.float64)
secont condition:: tensor(2.1928e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2113e-10, dtype=torch.float64)
secont condition:: tensor(3.2113e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8209e-10, dtype=torch.float64)
secont condition:: tensor(8.8209e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5781e-10, dtype=torch.float64)
secont condition:: tensor(6.5781e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4677e-09, dtype=torch.float64)
secont condition:: tensor(1.4677e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3403e-09, dtype=torch.float64)
secont condition:: tensor(1.3403e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3184e-09, dtype=torch.float64)
secont condition:: tensor(1.3184e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-09, dtype=torch.float64)
secont condition:: tensor(1.3584e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2855e-09, dtype=torch.float64)
secont condition:: tensor(1.2855e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7089e-09, dtype=torch.float64)
secont condition:: tensor(1.7089e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2681e-09, dtype=torch.float64)
secont condition:: tensor(1.2681e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3971e-09, dtype=torch.float64)
secont condition:: tensor(3.3971e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8514e-09, dtype=torch.float64)
secont condition:: tensor(2.8514e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2578e-09, dtype=torch.float64)
secont condition:: tensor(2.2578e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3302e-09, dtype=torch.float64)
secont condition:: tensor(2.3302e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2381e-09, dtype=torch.float64)
secont condition:: tensor(5.2381e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5921e-09, dtype=torch.float64)
secont condition:: tensor(4.5921e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0707e-09, dtype=torch.float64)
secont condition:: tensor(4.0707e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8042e-09, dtype=torch.float64)
secont condition:: tensor(3.8042e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1449e-09, dtype=torch.float64)
secont condition:: tensor(7.1449e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8496e-09, dtype=torch.float64)
secont condition:: tensor(7.8496e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2577e-09, dtype=torch.float64)
secont condition:: tensor(8.2577e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9654e-09, dtype=torch.float64)
secont condition:: tensor(6.9654e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8174e-09, dtype=torch.float64)
secont condition:: tensor(5.8174e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5630e-09, dtype=torch.float64)
secont condition:: tensor(6.5630e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9914e-09, dtype=torch.float64)
secont condition:: tensor(6.9914e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9301e-09, dtype=torch.float64)
secont condition:: tensor(5.9301e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1527e-09, dtype=torch.float64)
secont condition:: tensor(5.1527e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5534e-09, dtype=torch.float64)
secont condition:: tensor(4.5534e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3146e-09, dtype=torch.float64)
secont condition:: tensor(4.3146e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7692e-09, dtype=torch.float64)
secont condition:: tensor(3.7692e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4913e-09, dtype=torch.float64)
secont condition:: tensor(8.4913e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1828e-09, dtype=torch.float64)
secont condition:: tensor(9.1828e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2617e-09, dtype=torch.float64)
secont condition:: tensor(7.2617e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7298e-09, dtype=torch.float64)
secont condition:: tensor(7.7298e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1729e-09, dtype=torch.float64)
secont condition:: tensor(9.1729e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1351e-08, dtype=torch.float64)
secont condition:: tensor(1.1351e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9477e-09, dtype=torch.float64)
secont condition:: tensor(9.9477e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5196e-09, dtype=torch.float64)
secont condition:: tensor(7.5196e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2099e-09, dtype=torch.float64)
secont condition:: tensor(8.2099e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6290e-09, dtype=torch.float64)
secont condition:: tensor(8.6290e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7547e-09, dtype=torch.float64)
secont condition:: tensor(8.7547e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8748e-09, dtype=torch.float64)
secont condition:: tensor(8.8748e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0645e-08, dtype=torch.float64)
secont condition:: tensor(1.0645e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1294e-08, dtype=torch.float64)
secont condition:: tensor(1.1294e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1009e-08, dtype=torch.float64)
secont condition:: tensor(1.1009e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0910e-08, dtype=torch.float64)
secont condition:: tensor(1.0910e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1855e-08, dtype=torch.float64)
secont condition:: tensor(1.1855e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0756e-08, dtype=torch.float64)
secont condition:: tensor(1.0756e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2128e-08, dtype=torch.float64)
secont condition:: tensor(1.2128e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5116e-08, dtype=torch.float64)
secont condition:: tensor(1.5116e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1474e-08, dtype=torch.float64)
secont condition:: tensor(1.1474e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9247e-08, dtype=torch.float64)
secont condition:: tensor(1.9247e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5753e-08, dtype=torch.float64)
secont condition:: tensor(1.5753e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3390e-08, dtype=torch.float64)
secont condition:: tensor(1.3390e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6968e-08, dtype=torch.float64)
secont condition:: tensor(1.6968e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5689e-08, dtype=torch.float64)
secont condition:: tensor(1.5689e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8648e-08, dtype=torch.float64)
secont condition:: tensor(2.8648e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4668e-08, dtype=torch.float64)
secont condition:: tensor(1.4668e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8932e-08, dtype=torch.float64)
secont condition:: tensor(1.8932e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2543e-08, dtype=torch.float64)
secont condition:: tensor(2.2543e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 6.07069730758667
curr_diff: 0 tensor(9.7105e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3446e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.8140e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2017e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.7868e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2116e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0627e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.247997
Train - Epoch 0, Batch: 10, Loss: 0.219161
Test Avg. Loss: 0.000061, Accuracy: 0.944400
Train - Epoch 1, Batch: 0, Loss: 0.217644
Train - Epoch 1, Batch: 10, Loss: 0.215784
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.216341
Train - Epoch 2, Batch: 10, Loss: 0.225542
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 3, Batch: 0, Loss: 0.221747
Train - Epoch 3, Batch: 10, Loss: 0.217279
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 4, Batch: 0, Loss: 0.221229
Train - Epoch 4, Batch: 10, Loss: 0.205598
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 5, Batch: 0, Loss: 0.224581
Train - Epoch 5, Batch: 10, Loss: 0.214818
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.212168
Train - Epoch 6, Batch: 10, Loss: 0.220989
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.211224
Train - Epoch 7, Batch: 10, Loss: 0.212182
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.313500165939331
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.699118614196777
time_baseline:: 4.716987133026123
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1277e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7972e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0531e-10, dtype=torch.float64)
secont condition:: tensor(1.0531e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9160e-10, dtype=torch.float64)
secont condition:: tensor(6.9160e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1817e-10, dtype=torch.float64)
secont condition:: tensor(8.1817e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1602e-10, dtype=torch.float64)
secont condition:: tensor(6.1602e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1186e-10, dtype=torch.float64)
secont condition:: tensor(5.1186e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4581e-10, dtype=torch.float64)
secont condition:: tensor(3.4581e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3798e-10, dtype=torch.float64)
secont condition:: tensor(9.3798e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2234e-09, dtype=torch.float64)
secont condition:: tensor(1.2234e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4331e-10, dtype=torch.float64)
secont condition:: tensor(9.4331e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8322e-10, dtype=torch.float64)
secont condition:: tensor(8.8322e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2148e-09, dtype=torch.float64)
secont condition:: tensor(8.2148e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4369e-09, dtype=torch.float64)
secont condition:: tensor(7.4369e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0090e-09, dtype=torch.float64)
secont condition:: tensor(6.0090e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8804e-09, dtype=torch.float64)
secont condition:: tensor(4.8804e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6312e-09, dtype=torch.float64)
secont condition:: tensor(3.6312e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7295e-09, dtype=torch.float64)
secont condition:: tensor(2.7295e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6217e-09, dtype=torch.float64)
secont condition:: tensor(3.6217e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9701e-09, dtype=torch.float64)
secont condition:: tensor(2.9701e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1868e-09, dtype=torch.float64)
secont condition:: tensor(2.1868e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7933e-09, dtype=torch.float64)
secont condition:: tensor(1.7933e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2658e-09, dtype=torch.float64)
secont condition:: tensor(2.2658e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.0972e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7021e-10, dtype=torch.float64)
secont condition:: tensor(8.7021e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7584e-09, dtype=torch.float64)
secont condition:: tensor(1.7584e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6240e-09, dtype=torch.float64)
secont condition:: tensor(1.6240e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4060e-09, dtype=torch.float64)
secont condition:: tensor(3.4060e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0384e-09, dtype=torch.float64)
secont condition:: tensor(3.0384e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3906e-09, dtype=torch.float64)
secont condition:: tensor(2.3906e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4462e-09, dtype=torch.float64)
secont condition:: tensor(1.4462e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3584e-08, dtype=torch.float64)
secont condition:: tensor(2.3584e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7500e-08, dtype=torch.float64)
secont condition:: tensor(1.7500e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3565e-08, dtype=torch.float64)
secont condition:: tensor(1.3565e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4415e-08, dtype=torch.float64)
secont condition:: tensor(1.4415e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1021e-08, dtype=torch.float64)
secont condition:: tensor(1.1021e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6098e-09, dtype=torch.float64)
secont condition:: tensor(8.6098e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6649e-09, dtype=torch.float64)
secont condition:: tensor(7.6649e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0878e-09, dtype=torch.float64)
secont condition:: tensor(6.0878e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6747e-09, dtype=torch.float64)
secont condition:: tensor(4.6747e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5361e-09, dtype=torch.float64)
secont condition:: tensor(3.5361e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4964e-09, dtype=torch.float64)
secont condition:: tensor(7.4964e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3359e-08, dtype=torch.float64)
secont condition:: tensor(1.3359e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6066e-08, dtype=torch.float64)
secont condition:: tensor(1.6066e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8965e-09, dtype=torch.float64)
secont condition:: tensor(8.8965e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5953e-08, dtype=torch.float64)
secont condition:: tensor(2.5953e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1631e-08, dtype=torch.float64)
secont condition:: tensor(1.1631e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3166e-08, dtype=torch.float64)
secont condition:: tensor(1.3166e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0261e-08, dtype=torch.float64)
secont condition:: tensor(1.0261e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3272e-09, dtype=torch.float64)
secont condition:: tensor(6.3272e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2663e-08, dtype=torch.float64)
secont condition:: tensor(2.2663e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7843e-08, dtype=torch.float64)
secont condition:: tensor(1.7843e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5224e-08, dtype=torch.float64)
secont condition:: tensor(1.5224e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1078e-08, dtype=torch.float64)
secont condition:: tensor(1.1078e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1107e-08, dtype=torch.float64)
secont condition:: tensor(3.1107e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1674e-08, dtype=torch.float64)
secont condition:: tensor(2.1674e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6573e-08, dtype=torch.float64)
secont condition:: tensor(3.6573e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3539e-08, dtype=torch.float64)
secont condition:: tensor(2.3539e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6358e-08, dtype=torch.float64)
secont condition:: tensor(2.6358e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0883e-08, dtype=torch.float64)
secont condition:: tensor(2.0883e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.3515257835388184
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4339e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.5296e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4670e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9110e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236671
Train - Epoch 0, Batch: 10, Loss: 0.229195
Test Avg. Loss: 0.000061, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.207162
Train - Epoch 1, Batch: 10, Loss: 0.232072
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.198364
Train - Epoch 2, Batch: 10, Loss: 0.219062
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 3, Batch: 0, Loss: 0.208936
Train - Epoch 3, Batch: 10, Loss: 0.223081
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.222553
Train - Epoch 4, Batch: 10, Loss: 0.206473
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 5, Batch: 0, Loss: 0.213571
Train - Epoch 5, Batch: 10, Loss: 0.209553
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.222184
Train - Epoch 6, Batch: 10, Loss: 0.226874
Test Avg. Loss: 0.000060, Accuracy: 0.946000
Train - Epoch 7, Batch: 0, Loss: 0.219984
Train - Epoch 7, Batch: 10, Loss: 0.209877
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 7.050001621246338
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.661716938018799
time_baseline:: 4.679412603378296
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.9616e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2837e-10, dtype=torch.float64)
secont condition:: tensor(9.2837e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5579e-09, dtype=torch.float64)
secont condition:: tensor(1.5579e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1702e-09, dtype=torch.float64)
secont condition:: tensor(1.1702e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3892e-10, dtype=torch.float64)
secont condition:: tensor(9.3892e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5391e-10, dtype=torch.float64)
secont condition:: tensor(8.5391e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0506e-09, dtype=torch.float64)
secont condition:: tensor(1.0506e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4718e-10, dtype=torch.float64)
secont condition:: tensor(8.4718e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8721e-10, dtype=torch.float64)
secont condition:: tensor(7.8721e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4449e-10, dtype=torch.float64)
secont condition:: tensor(7.4449e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5522e-10, dtype=torch.float64)
secont condition:: tensor(5.5522e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0910e-10, dtype=torch.float64)
secont condition:: tensor(5.0910e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1552e-10, dtype=torch.float64)
secont condition:: tensor(4.1552e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8229e-10, dtype=torch.float64)
secont condition:: tensor(2.8229e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9017e-09, dtype=torch.float64)
secont condition:: tensor(5.9017e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7453e-09, dtype=torch.float64)
secont condition:: tensor(6.7453e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5433e-09, dtype=torch.float64)
secont condition:: tensor(8.5433e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6205e-09, dtype=torch.float64)
secont condition:: tensor(5.6205e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5862e-09, dtype=torch.float64)
secont condition:: tensor(5.5862e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0492e-09, dtype=torch.float64)
secont condition:: tensor(5.0492e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4910e-09, dtype=torch.float64)
secont condition:: tensor(6.4910e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7193e-09, dtype=torch.float64)
secont condition:: tensor(2.7193e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6710e-09, dtype=torch.float64)
secont condition:: tensor(2.6710e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4910e-09, dtype=torch.float64)
secont condition:: tensor(2.4910e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2223e-09, dtype=torch.float64)
secont condition:: tensor(2.2223e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6670e-09, dtype=torch.float64)
secont condition:: tensor(1.6670e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4946e-08, dtype=torch.float64)
secont condition:: tensor(1.4946e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0009e-08, dtype=torch.float64)
secont condition:: tensor(1.0009e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1008e-08, dtype=torch.float64)
secont condition:: tensor(1.1008e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3099e-09, dtype=torch.float64)
secont condition:: tensor(7.3099e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6853e-09, dtype=torch.float64)
secont condition:: tensor(7.6853e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1602e-09, dtype=torch.float64)
secont condition:: tensor(6.1602e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1161e-09, dtype=torch.float64)
secont condition:: tensor(7.1161e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9277e-09, dtype=torch.float64)
secont condition:: tensor(3.9277e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2722e-09, dtype=torch.float64)
secont condition:: tensor(4.2722e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8511e-09, dtype=torch.float64)
secont condition:: tensor(3.8511e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2217e-09, dtype=torch.float64)
secont condition:: tensor(3.2217e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6773e-09, dtype=torch.float64)
secont condition:: tensor(3.6773e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8556e-08, dtype=torch.float64)
secont condition:: tensor(1.8556e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6587e-08, dtype=torch.float64)
secont condition:: tensor(1.6587e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5853e-09, dtype=torch.float64)
secont condition:: tensor(7.5853e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2324e-09, dtype=torch.float64)
secont condition:: tensor(9.2324e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6538e-09, dtype=torch.float64)
secont condition:: tensor(8.6538e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5038e-09, dtype=torch.float64)
secont condition:: tensor(6.5038e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4931e-09, dtype=torch.float64)
secont condition:: tensor(5.4931e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0421e-09, dtype=torch.float64)
secont condition:: tensor(7.0421e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8499e-09, dtype=torch.float64)
secont condition:: tensor(4.8499e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0081e-08, dtype=torch.float64)
secont condition:: tensor(2.0081e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7529e-09, dtype=torch.float64)
secont condition:: tensor(8.7529e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0677e-08, dtype=torch.float64)
secont condition:: tensor(2.0677e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5806e-08, dtype=torch.float64)
secont condition:: tensor(1.5806e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4885e-08, dtype=torch.float64)
secont condition:: tensor(1.4885e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9347e-09, dtype=torch.float64)
secont condition:: tensor(8.9347e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3724e-08, dtype=torch.float64)
secont condition:: tensor(1.3724e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1747e-08, dtype=torch.float64)
secont condition:: tensor(1.1747e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6026e-08, dtype=torch.float64)
secont condition:: tensor(2.6026e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9241e-08, dtype=torch.float64)
secont condition:: tensor(1.9241e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8832e-08, dtype=torch.float64)
secont condition:: tensor(1.8832e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6689e-08, dtype=torch.float64)
secont condition:: tensor(1.6689e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.3320603370666504
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0935e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4445e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7181e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5141e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.248058
Train - Epoch 0, Batch: 10, Loss: 0.211541
Test Avg. Loss: 0.000061, Accuracy: 0.944600
Train - Epoch 1, Batch: 0, Loss: 0.216931
Train - Epoch 1, Batch: 10, Loss: 0.228458
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.228684
Train - Epoch 2, Batch: 10, Loss: 0.214997
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 3, Batch: 0, Loss: 0.201966
Train - Epoch 3, Batch: 10, Loss: 0.217773
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.205205
Train - Epoch 4, Batch: 10, Loss: 0.211580
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.208878
Train - Epoch 5, Batch: 10, Loss: 0.215228
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.218569
Train - Epoch 6, Batch: 10, Loss: 0.227370
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.213205
Train - Epoch 7, Batch: 10, Loss: 0.198789
Test Avg. Loss: 0.000060, Accuracy: 0.946000
training_time:: 7.125817775726318
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.800489902496338
time_baseline:: 4.81826376914978
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2105e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1326e-33, dtype=torch.float64)
secont condition:: tensor(6.1326e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7108e-32, dtype=torch.float64)
secont condition:: tensor(1.7108e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9834e-32, dtype=torch.float64)
secont condition:: tensor(3.9834e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.7706e-11, dtype=torch.float64)
secont condition:: tensor(7.7706e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8462e-10, dtype=torch.float64)
secont condition:: tensor(1.8462e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3336e-10, dtype=torch.float64)
secont condition:: tensor(1.3336e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0240e-10, dtype=torch.float64)
secont condition:: tensor(2.0240e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2762e-10, dtype=torch.float64)
secont condition:: tensor(6.2762e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1577e-10, dtype=torch.float64)
secont condition:: tensor(9.1577e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2170e-09, dtype=torch.float64)
secont condition:: tensor(1.2170e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1244e-10, dtype=torch.float64)
secont condition:: tensor(9.1244e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1816e-10, dtype=torch.float64)
secont condition:: tensor(8.1816e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0502e-10, dtype=torch.float64)
secont condition:: tensor(7.0502e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1481e-09, dtype=torch.float64)
secont condition:: tensor(9.1481e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6627e-09, dtype=torch.float64)
secont condition:: tensor(7.6627e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0460e-09, dtype=torch.float64)
secont condition:: tensor(7.0460e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8372e-08, dtype=torch.float64)
secont condition:: tensor(1.8372e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4241e-08, dtype=torch.float64)
secont condition:: tensor(1.4241e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5870e-08, dtype=torch.float64)
secont condition:: tensor(1.5870e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1118e-08, dtype=torch.float64)
secont condition:: tensor(1.1118e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6452e-08, dtype=torch.float64)
secont condition:: tensor(1.6452e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0367e-08, dtype=torch.float64)
secont condition:: tensor(1.0367e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3628e-09, dtype=torch.float64)
secont condition:: tensor(8.3628e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6995e-09, dtype=torch.float64)
secont condition:: tensor(6.6995e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5034e-09, dtype=torch.float64)
secont condition:: tensor(5.5034e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4068e-09, dtype=torch.float64)
secont condition:: tensor(4.4068e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7813e-09, dtype=torch.float64)
secont condition:: tensor(3.7813e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1682e-09, dtype=torch.float64)
secont condition:: tensor(4.1682e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4519e-09, dtype=torch.float64)
secont condition:: tensor(3.4519e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2856e-09, dtype=torch.float64)
secont condition:: tensor(3.2856e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2482e-09, dtype=torch.float64)
secont condition:: tensor(3.2482e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2771e-09, dtype=torch.float64)
secont condition:: tensor(5.2771e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5554e-09, dtype=torch.float64)
secont condition:: tensor(3.5554e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2176e-09, dtype=torch.float64)
secont condition:: tensor(2.2176e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8253e-09, dtype=torch.float64)
secont condition:: tensor(1.8253e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1701e-09, dtype=torch.float64)
secont condition:: tensor(2.1701e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5291e-09, dtype=torch.float64)
secont condition:: tensor(3.5291e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9897e-09, dtype=torch.float64)
secont condition:: tensor(2.9897e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6685e-10, dtype=torch.float64)
secont condition:: tensor(1.6685e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7600e-09, dtype=torch.float64)
secont condition:: tensor(8.7600e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0159e-09, dtype=torch.float64)
secont condition:: tensor(5.0159e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2258e-09, dtype=torch.float64)
secont condition:: tensor(5.2258e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7194e-09, dtype=torch.float64)
secont condition:: tensor(5.7194e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8716e-09, dtype=torch.float64)
secont condition:: tensor(5.8716e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1931e-09, dtype=torch.float64)
secont condition:: tensor(9.1931e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6612e-09, dtype=torch.float64)
secont condition:: tensor(9.6612e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1285e-08, dtype=torch.float64)
secont condition:: tensor(1.1285e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7627e-08, dtype=torch.float64)
secont condition:: tensor(1.7627e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6856e-08, dtype=torch.float64)
secont condition:: tensor(2.6856e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7824e-08, dtype=torch.float64)
secont condition:: tensor(1.7824e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8512e-08, dtype=torch.float64)
secont condition:: tensor(1.8512e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1449e-08, dtype=torch.float64)
secont condition:: tensor(1.1449e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2463e-08, dtype=torch.float64)
secont condition:: tensor(1.2463e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5922e-08, dtype=torch.float64)
secont condition:: tensor(2.5922e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6557e-08, dtype=torch.float64)
secont condition:: tensor(2.6557e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6515e-08, dtype=torch.float64)
secont condition:: tensor(1.6515e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2647e-09, dtype=torch.float64)
secont condition:: tensor(9.2647e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8805e-08, dtype=torch.float64)
secont condition:: tensor(1.8805e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2339e-08, dtype=torch.float64)
secont condition:: tensor(1.2339e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4005e-08, dtype=torch.float64)
secont condition:: tensor(2.4005e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7518e-08, dtype=torch.float64)
secont condition:: tensor(2.7518e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.244274377822876
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3006e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5894e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4001e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4043e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238783
Train - Epoch 0, Batch: 10, Loss: 0.207915
Test Avg. Loss: 0.000061, Accuracy: 0.944400
Train - Epoch 1, Batch: 0, Loss: 0.214577
Train - Epoch 1, Batch: 10, Loss: 0.213742
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.214993
Train - Epoch 2, Batch: 10, Loss: 0.222081
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 3, Batch: 0, Loss: 0.198953
Train - Epoch 3, Batch: 10, Loss: 0.222007
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.210228
Train - Epoch 4, Batch: 10, Loss: 0.216657
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.220427
Train - Epoch 5, Batch: 10, Loss: 0.214826
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.216290
Train - Epoch 6, Batch: 10, Loss: 0.213334
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.211340
Train - Epoch 7, Batch: 10, Loss: 0.222470
Test Avg. Loss: 0.000060, Accuracy: 0.945600
training_time:: 7.061763763427734
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.863203287124634
time_baseline:: 4.883376836776733
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3047e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3796e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4521e-09, dtype=torch.float64)
secont condition:: tensor(4.4521e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4413e-09, dtype=torch.float64)
secont condition:: tensor(3.4413e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2126e-09, dtype=torch.float64)
secont condition:: tensor(9.2126e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1475e-09, dtype=torch.float64)
secont condition:: tensor(8.1475e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9241e-09, dtype=torch.float64)
secont condition:: tensor(6.9241e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4206e-09, dtype=torch.float64)
secont condition:: tensor(4.4206e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9663e-09, dtype=torch.float64)
secont condition:: tensor(3.9663e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8777e-09, dtype=torch.float64)
secont condition:: tensor(2.8777e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3593e-09, dtype=torch.float64)
secont condition:: tensor(4.3593e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9589e-09, dtype=torch.float64)
secont condition:: tensor(2.9589e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8879e-09, dtype=torch.float64)
secont condition:: tensor(3.8879e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9480e-09, dtype=torch.float64)
secont condition:: tensor(1.9480e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0404e-09, dtype=torch.float64)
secont condition:: tensor(5.0404e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7316e-09, dtype=torch.float64)
secont condition:: tensor(1.7316e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0905e-09, dtype=torch.float64)
secont condition:: tensor(1.0905e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5177e-10, dtype=torch.float64)
secont condition:: tensor(6.5177e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5441e-10, dtype=torch.float64)
secont condition:: tensor(6.5441e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8652e-10, dtype=torch.float64)
secont condition:: tensor(7.8652e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9566e-09, dtype=torch.float64)
secont condition:: tensor(1.9566e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0552e-09, dtype=torch.float64)
secont condition:: tensor(2.0552e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6198e-10, dtype=torch.float64)
secont condition:: tensor(9.6198e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5691e-10, dtype=torch.float64)
secont condition:: tensor(6.5691e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3276e-09, dtype=torch.float64)
secont condition:: tensor(1.3276e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2654e-09, dtype=torch.float64)
secont condition:: tensor(1.2654e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1084e-08, dtype=torch.float64)
secont condition:: tensor(1.1084e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2797e-09, dtype=torch.float64)
secont condition:: tensor(8.2797e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5602e-09, dtype=torch.float64)
secont condition:: tensor(8.5602e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4925e-09, dtype=torch.float64)
secont condition:: tensor(5.4925e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2854e-09, dtype=torch.float64)
secont condition:: tensor(6.2854e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6452e-09, dtype=torch.float64)
secont condition:: tensor(4.6452e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4607e-09, dtype=torch.float64)
secont condition:: tensor(6.4607e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6797e-09, dtype=torch.float64)
secont condition:: tensor(4.6797e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8854e-09, dtype=torch.float64)
secont condition:: tensor(3.8854e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0294e-09, dtype=torch.float64)
secont condition:: tensor(3.0294e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6639e-09, dtype=torch.float64)
secont condition:: tensor(2.6639e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1407e-09, dtype=torch.float64)
secont condition:: tensor(2.1407e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.9573e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3200e-09, dtype=torch.float64)
secont condition:: tensor(3.3200e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0255e-09, dtype=torch.float64)
secont condition:: tensor(1.0255e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3439e-09, dtype=torch.float64)
secont condition:: tensor(3.3439e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1237e-08, dtype=torch.float64)
secont condition:: tensor(2.1237e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2922e-08, dtype=torch.float64)
secont condition:: tensor(1.2922e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5378e-08, dtype=torch.float64)
secont condition:: tensor(1.5378e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4086e-08, dtype=torch.float64)
secont condition:: tensor(1.4086e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0124e-08, dtype=torch.float64)
secont condition:: tensor(1.0124e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0522e-08, dtype=torch.float64)
secont condition:: tensor(2.0522e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4608e-08, dtype=torch.float64)
secont condition:: tensor(1.4608e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1843e-08, dtype=torch.float64)
secont condition:: tensor(1.1843e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3313e-08, dtype=torch.float64)
secont condition:: tensor(2.3313e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8895e-08, dtype=torch.float64)
secont condition:: tensor(1.8895e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5460e-08, dtype=torch.float64)
secont condition:: tensor(1.5460e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6956e-08, dtype=torch.float64)
secont condition:: tensor(1.6956e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0400e-08, dtype=torch.float64)
secont condition:: tensor(3.0400e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0064e-08, dtype=torch.float64)
secont condition:: tensor(2.0064e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4312e-08, dtype=torch.float64)
secont condition:: tensor(1.4312e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4174e-08, dtype=torch.float64)
secont condition:: tensor(3.4174e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8547e-08, dtype=torch.float64)
secont condition:: tensor(2.8547e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2674e-08, dtype=torch.float64)
secont condition:: tensor(1.2674e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6377e-08, dtype=torch.float64)
secont condition:: tensor(1.6377e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.301780939102173
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6388e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7011e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7288e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0216e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945500
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.248643
Train - Epoch 0, Batch: 10, Loss: 0.218848
Test Avg. Loss: 0.000061, Accuracy: 0.944600
Train - Epoch 1, Batch: 0, Loss: 0.209924
Train - Epoch 1, Batch: 10, Loss: 0.223378
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 2, Batch: 0, Loss: 0.214729
Train - Epoch 2, Batch: 10, Loss: 0.218580
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 3, Batch: 0, Loss: 0.220557
Train - Epoch 3, Batch: 10, Loss: 0.205543
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.210952
Train - Epoch 4, Batch: 10, Loss: 0.191216
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 5, Batch: 0, Loss: 0.235914
Train - Epoch 5, Batch: 10, Loss: 0.212217
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 6, Batch: 0, Loss: 0.210381
Train - Epoch 6, Batch: 10, Loss: 0.214214
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.227648
Train - Epoch 7, Batch: 10, Loss: 0.200105
Test Avg. Loss: 0.000060, Accuracy: 0.945300
training_time:: 7.194742679595947
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.924983501434326
time_baseline:: 4.942780494689941
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8454e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945300
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5380e-10, dtype=torch.float64)
secont condition:: tensor(1.5380e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9584e-10, dtype=torch.float64)
secont condition:: tensor(1.9584e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1937e-09, dtype=torch.float64)
secont condition:: tensor(1.1937e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3446e-10, dtype=torch.float64)
secont condition:: tensor(8.3446e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7606e-09, dtype=torch.float64)
secont condition:: tensor(5.7606e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4148e-09, dtype=torch.float64)
secont condition:: tensor(2.4148e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3700e-09, dtype=torch.float64)
secont condition:: tensor(7.3700e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6121e-09, dtype=torch.float64)
secont condition:: tensor(5.6121e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3512e-09, dtype=torch.float64)
secont condition:: tensor(4.3512e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3447e-09, dtype=torch.float64)
secont condition:: tensor(4.3447e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2784e-09, dtype=torch.float64)
secont condition:: tensor(3.2784e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0846e-09, dtype=torch.float64)
secont condition:: tensor(3.0846e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9145e-09, dtype=torch.float64)
secont condition:: tensor(2.9145e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0295e-09, dtype=torch.float64)
secont condition:: tensor(2.0295e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2182e-09, dtype=torch.float64)
secont condition:: tensor(2.2182e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2108e-09, dtype=torch.float64)
secont condition:: tensor(3.2108e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3724e-09, dtype=torch.float64)
secont condition:: tensor(2.3724e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1647e-09, dtype=torch.float64)
secont condition:: tensor(2.1647e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7402e-09, dtype=torch.float64)
secont condition:: tensor(1.7402e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5778e-09, dtype=torch.float64)
secont condition:: tensor(6.5778e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2473e-09, dtype=torch.float64)
secont condition:: tensor(3.2473e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3671e-09, dtype=torch.float64)
secont condition:: tensor(3.3671e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7580e-09, dtype=torch.float64)
secont condition:: tensor(2.7580e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6546e-09, dtype=torch.float64)
secont condition:: tensor(1.6546e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4175e-09, dtype=torch.float64)
secont condition:: tensor(1.4175e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7062e-09, dtype=torch.float64)
secont condition:: tensor(1.7062e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4379e-09, dtype=torch.float64)
secont condition:: tensor(1.4379e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5473e-09, dtype=torch.float64)
secont condition:: tensor(8.5473e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9566e-09, dtype=torch.float64)
secont condition:: tensor(7.9566e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4155e-08, dtype=torch.float64)
secont condition:: tensor(1.4155e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6977e-09, dtype=torch.float64)
secont condition:: tensor(4.6977e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1943e-09, dtype=torch.float64)
secont condition:: tensor(5.1943e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5951e-09, dtype=torch.float64)
secont condition:: tensor(3.5951e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2102e-09, dtype=torch.float64)
secont condition:: tensor(3.2102e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1356e-08, dtype=torch.float64)
secont condition:: tensor(2.1356e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2963e-08, dtype=torch.float64)
secont condition:: tensor(1.2963e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7668e-08, dtype=torch.float64)
secont condition:: tensor(1.7668e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5798e-08, dtype=torch.float64)
secont condition:: tensor(1.5798e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7511e-09, dtype=torch.float64)
secont condition:: tensor(9.7511e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5466e-09, dtype=torch.float64)
secont condition:: tensor(6.5466e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6413e-09, dtype=torch.float64)
secont condition:: tensor(5.6413e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1767e-09, dtype=torch.float64)
secont condition:: tensor(4.1767e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0080e-09, dtype=torch.float64)
secont condition:: tensor(9.0080e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2667e-08, dtype=torch.float64)
secont condition:: tensor(1.2667e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8339e-08, dtype=torch.float64)
secont condition:: tensor(1.8339e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4182e-08, dtype=torch.float64)
secont condition:: tensor(1.4182e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5598e-08, dtype=torch.float64)
secont condition:: tensor(1.5598e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1033e-08, dtype=torch.float64)
secont condition:: tensor(1.1033e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9522e-09, dtype=torch.float64)
secont condition:: tensor(1.9522e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1853e-08, dtype=torch.float64)
secont condition:: tensor(1.1853e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.8043e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1696e-08, dtype=torch.float64)
secont condition:: tensor(1.1696e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7873e-08, dtype=torch.float64)
secont condition:: tensor(1.7873e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0735e-08, dtype=torch.float64)
secont condition:: tensor(3.0735e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8172e-08, dtype=torch.float64)
secont condition:: tensor(1.8172e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1211e-08, dtype=torch.float64)
secont condition:: tensor(2.1211e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1680e-08, dtype=torch.float64)
secont condition:: tensor(3.1680e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5227e-08, dtype=torch.float64)
secont condition:: tensor(2.5227e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0498e-08, dtype=torch.float64)
secont condition:: tensor(2.0498e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.408200740814209
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2543e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1342e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1902e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4099e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4348e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.259932
Train - Epoch 0, Batch: 10, Loss: 0.211236
Train - Epoch 0, Batch: 20, Loss: 0.214335
Train - Epoch 0, Batch: 30, Loss: 0.213458
Train - Epoch 0, Batch: 40, Loss: 0.198184
Train - Epoch 0, Batch: 50, Loss: 0.222766
Test Avg. Loss: 0.000210, Accuracy: 0.945800
Train - Epoch 1, Batch: 0, Loss: 0.219150
Train - Epoch 1, Batch: 10, Loss: 0.244348
Train - Epoch 1, Batch: 20, Loss: 0.223606
Train - Epoch 1, Batch: 30, Loss: 0.221688
Train - Epoch 1, Batch: 40, Loss: 0.199661
Train - Epoch 1, Batch: 50, Loss: 0.230610
Test Avg. Loss: 0.000210, Accuracy: 0.946200
training_time:: 2.2623655796051025
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3860344886779785
time_baseline:: 1.3907151222229004
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5406e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5490e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946200
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0399e-33, dtype=torch.float64)
secont condition:: tensor(3.0399e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4976e-32, dtype=torch.float64)
secont condition:: tensor(1.4976e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8710e-32, dtype=torch.float64)
secont condition:: tensor(4.8710e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4204e-32, dtype=torch.float64)
secont condition:: tensor(5.4204e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.5737e-32, dtype=torch.float64)
secont condition:: tensor(9.5737e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1737e-31, dtype=torch.float64)
secont condition:: tensor(1.1737e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4150e-31, dtype=torch.float64)
secont condition:: tensor(1.4150e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7028e-31, dtype=torch.float64)
secont condition:: tensor(1.7028e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9643e-31, dtype=torch.float64)
secont condition:: tensor(1.9643e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.3696e-31, dtype=torch.float64)
secont condition:: tensor(2.3696e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.7094e-08, dtype=torch.float64)
secont condition:: tensor(7.7094e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1229e-08, dtype=torch.float64)
secont condition:: tensor(7.1229e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3978e-08, dtype=torch.float64)
secont condition:: tensor(5.3978e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2706e-08, dtype=torch.float64)
secont condition:: tensor(4.2706e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3577e-08, dtype=torch.float64)
secont condition:: tensor(3.3577e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9743e-08, dtype=torch.float64)
secont condition:: tensor(2.9743e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8725e-08, dtype=torch.float64)
secont condition:: tensor(1.8725e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3165e-08, dtype=torch.float64)
secont condition:: tensor(2.3165e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3949e-08, dtype=torch.float64)
secont condition:: tensor(1.3949e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1036e-08, dtype=torch.float64)
secont condition:: tensor(1.1036e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1710e-08, dtype=torch.float64)
secont condition:: tensor(1.1710e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0895e-09, dtype=torch.float64)
secont condition:: tensor(9.0895e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0020e-08, dtype=torch.float64)
secont condition:: tensor(1.0020e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1131e-08, dtype=torch.float64)
secont condition:: tensor(1.1131e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0548e-08, dtype=torch.float64)
secont condition:: tensor(1.0548e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7685e-09, dtype=torch.float64)
secont condition:: tensor(7.7685e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5145e-09, dtype=torch.float64)
secont condition:: tensor(6.5145e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3447e-09, dtype=torch.float64)
secont condition:: tensor(1.3447e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7713e-09, dtype=torch.float64)
secont condition:: tensor(7.7713e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9526e-09, dtype=torch.float64)
secont condition:: tensor(4.9526e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4925e-09, dtype=torch.float64)
secont condition:: tensor(4.4925e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3359e-09, dtype=torch.float64)
secont condition:: tensor(5.3359e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.6654e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1514e-09, dtype=torch.float64)
secont condition:: tensor(5.1514e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7438e-09, dtype=torch.float64)
secont condition:: tensor(4.7438e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0720e-08, dtype=torch.float64)
secont condition:: tensor(1.0720e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5805e-09, dtype=torch.float64)
secont condition:: tensor(5.5805e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6522e-09, dtype=torch.float64)
secont condition:: tensor(5.6522e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7341e-09, dtype=torch.float64)
secont condition:: tensor(6.7341e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0140e-09, dtype=torch.float64)
secont condition:: tensor(3.0140e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3001e-09, dtype=torch.float64)
secont condition:: tensor(2.3001e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5331e-09, dtype=torch.float64)
secont condition:: tensor(2.5331e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0356e-08, dtype=torch.float64)
secont condition:: tensor(1.0356e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0979e-08, dtype=torch.float64)
secont condition:: tensor(3.0979e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4187e-08, dtype=torch.float64)
secont condition:: tensor(1.4187e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7316e-09, dtype=torch.float64)
secont condition:: tensor(2.7316e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4870e-08, dtype=torch.float64)
secont condition:: tensor(1.4870e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0674e-08, dtype=torch.float64)
secont condition:: tensor(1.0674e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3449e-08, dtype=torch.float64)
secont condition:: tensor(2.3449e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2489e-08, dtype=torch.float64)
secont condition:: tensor(1.2489e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1740e-08, dtype=torch.float64)
secont condition:: tensor(1.1740e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3265e-08, dtype=torch.float64)
secont condition:: tensor(1.3265e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8846e-09, dtype=torch.float64)
secont condition:: tensor(1.8846e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.0593e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8711e-08, dtype=torch.float64)
secont condition:: tensor(5.8711e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.0023e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3929e-08, dtype=torch.float64)
secont condition:: tensor(1.3929e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6784e-09, dtype=torch.float64)
secont condition:: tensor(8.6784e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2602e-08, dtype=torch.float64)
secont condition:: tensor(1.2602e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8128e-08, dtype=torch.float64)
secont condition:: tensor(3.8128e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1292e-08, dtype=torch.float64)
secont condition:: tensor(6.1292e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.3472263813018799
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3246e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.0205e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5027e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8852e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.264779
Train - Epoch 0, Batch: 10, Loss: 0.228742
Train - Epoch 0, Batch: 20, Loss: 0.185155
Train - Epoch 0, Batch: 30, Loss: 0.207537
Train - Epoch 0, Batch: 40, Loss: 0.216757
Train - Epoch 0, Batch: 50, Loss: 0.219379
Test Avg. Loss: 0.000210, Accuracy: 0.945500
Train - Epoch 1, Batch: 0, Loss: 0.229915
Train - Epoch 1, Batch: 10, Loss: 0.221689
Train - Epoch 1, Batch: 20, Loss: 0.230964
Train - Epoch 1, Batch: 30, Loss: 0.196721
Train - Epoch 1, Batch: 40, Loss: 0.194666
Train - Epoch 1, Batch: 50, Loss: 0.252323
Test Avg. Loss: 0.000209, Accuracy: 0.945700
training_time:: 2.18243670463562
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.400134563446045
time_baseline:: 1.404914379119873
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5606e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5818e-33, dtype=torch.float64)
secont condition:: tensor(7.5818e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.6123e-32, dtype=torch.float64)
secont condition:: tensor(2.6123e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0677e-32, dtype=torch.float64)
secont condition:: tensor(2.0677e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4877e-32, dtype=torch.float64)
secont condition:: tensor(4.4877e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3441e-32, dtype=torch.float64)
secont condition:: tensor(5.3441e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1411e-31, dtype=torch.float64)
secont condition:: tensor(1.1411e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3400e-31, dtype=torch.float64)
secont condition:: tensor(1.3400e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2979e-31, dtype=torch.float64)
secont condition:: tensor(1.2979e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8499e-31, dtype=torch.float64)
secont condition:: tensor(1.8499e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9388e-31, dtype=torch.float64)
secont condition:: tensor(1.9388e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5877e-10, dtype=torch.float64)
secont condition:: tensor(1.5877e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1894e-10, dtype=torch.float64)
secont condition:: tensor(1.1894e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0614e-10, dtype=torch.float64)
secont condition:: tensor(1.0614e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0938e-11, dtype=torch.float64)
secont condition:: tensor(7.0938e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1161e-11, dtype=torch.float64)
secont condition:: tensor(6.1161e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1788e-11, dtype=torch.float64)
secont condition:: tensor(4.1788e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6744e-11, dtype=torch.float64)
secont condition:: tensor(3.6744e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6891e-11, dtype=torch.float64)
secont condition:: tensor(2.6891e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3597e-11, dtype=torch.float64)
secont condition:: tensor(2.3597e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5772e-11, dtype=torch.float64)
secont condition:: tensor(1.5772e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.0743e-10, dtype=torch.float64)
secont condition:: tensor(7.0743e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0821e-10, dtype=torch.float64)
secont condition:: tensor(4.0821e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3138e-10, dtype=torch.float64)
secont condition:: tensor(5.3138e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0165e-10, dtype=torch.float64)
secont condition:: tensor(5.0165e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3733e-10, dtype=torch.float64)
secont condition:: tensor(3.3733e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2096e-10, dtype=torch.float64)
secont condition:: tensor(3.2096e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2079e-10, dtype=torch.float64)
secont condition:: tensor(2.2079e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1001e-10, dtype=torch.float64)
secont condition:: tensor(2.1001e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6355e-10, dtype=torch.float64)
secont condition:: tensor(1.6355e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2918e-10, dtype=torch.float64)
secont condition:: tensor(1.2918e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1399e-09, dtype=torch.float64)
secont condition:: tensor(2.1399e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6417e-09, dtype=torch.float64)
secont condition:: tensor(2.6417e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7229e-09, dtype=torch.float64)
secont condition:: tensor(1.7229e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3928e-09, dtype=torch.float64)
secont condition:: tensor(1.3928e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9012e-09, dtype=torch.float64)
secont condition:: tensor(4.9012e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0117e-09, dtype=torch.float64)
secont condition:: tensor(4.0117e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7100e-09, dtype=torch.float64)
secont condition:: tensor(4.7100e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7423e-09, dtype=torch.float64)
secont condition:: tensor(3.7423e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1374e-09, dtype=torch.float64)
secont condition:: tensor(1.1374e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6712e-08, dtype=torch.float64)
secont condition:: tensor(2.6712e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0903e-08, dtype=torch.float64)
secont condition:: tensor(2.0903e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4965e-08, dtype=torch.float64)
secont condition:: tensor(1.4965e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8642e-08, dtype=torch.float64)
secont condition:: tensor(1.8642e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1190e-09, dtype=torch.float64)
secont condition:: tensor(8.1190e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9584e-09, dtype=torch.float64)
secont condition:: tensor(8.9584e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7401e-08, dtype=torch.float64)
secont condition:: tensor(2.7401e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4739e-08, dtype=torch.float64)
secont condition:: tensor(1.4739e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.7575e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5528e-09, dtype=torch.float64)
secont condition:: tensor(4.5528e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7584e-09, dtype=torch.float64)
secont condition:: tensor(8.7584e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8370e-09, dtype=torch.float64)
secont condition:: tensor(7.8370e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4967e-09, dtype=torch.float64)
secont condition:: tensor(5.4967e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5173e-08, dtype=torch.float64)
secont condition:: tensor(1.5173e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7992e-08, dtype=torch.float64)
secont condition:: tensor(4.7992e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2096e-08, dtype=torch.float64)
secont condition:: tensor(1.2096e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0435e-07, dtype=torch.float64)
secont condition:: tensor(1.0435e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4737513065338135
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5890e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7132e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6056e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9247e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251881
Train - Epoch 0, Batch: 10, Loss: 0.209802
Train - Epoch 0, Batch: 20, Loss: 0.235881
Train - Epoch 0, Batch: 30, Loss: 0.216985
Train - Epoch 0, Batch: 40, Loss: 0.250936
Train - Epoch 0, Batch: 50, Loss: 0.212271
Test Avg. Loss: 0.000211, Accuracy: 0.945500
Train - Epoch 1, Batch: 0, Loss: 0.210937
Train - Epoch 1, Batch: 10, Loss: 0.241694
Train - Epoch 1, Batch: 20, Loss: 0.226921
Train - Epoch 1, Batch: 30, Loss: 0.218884
Train - Epoch 1, Batch: 40, Loss: 0.244007
Train - Epoch 1, Batch: 50, Loss: 0.200514
Test Avg. Loss: 0.000210, Accuracy: 0.945700
training_time:: 2.188030958175659
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4178385734558105
time_baseline:: 1.4239695072174072
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3274e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1260e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0102e-33, dtype=torch.float64)
secont condition:: tensor(4.0102e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4451e-08, dtype=torch.float64)
secont condition:: tensor(1.4451e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1010e-08, dtype=torch.float64)
secont condition:: tensor(1.1010e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0427e-08, dtype=torch.float64)
secont condition:: tensor(1.0427e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7228e-09, dtype=torch.float64)
secont condition:: tensor(5.7228e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9345e-09, dtype=torch.float64)
secont condition:: tensor(4.9345e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5630e-09, dtype=torch.float64)
secont condition:: tensor(5.5630e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5721e-09, dtype=torch.float64)
secont condition:: tensor(3.5721e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7868e-09, dtype=torch.float64)
secont condition:: tensor(2.7868e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8245e-09, dtype=torch.float64)
secont condition:: tensor(2.8245e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6269e-09, dtype=torch.float64)
secont condition:: tensor(1.6269e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7126e-09, dtype=torch.float64)
secont condition:: tensor(1.7126e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7112e-09, dtype=torch.float64)
secont condition:: tensor(1.7112e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5040e-10, dtype=torch.float64)
secont condition:: tensor(9.5040e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9352e-09, dtype=torch.float64)
secont condition:: tensor(3.9352e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1983e-10, dtype=torch.float64)
secont condition:: tensor(9.1983e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5491e-09, dtype=torch.float64)
secont condition:: tensor(1.5491e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0182e-09, dtype=torch.float64)
secont condition:: tensor(1.0182e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1910e-10, dtype=torch.float64)
secont condition:: tensor(6.1910e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4457e-10, dtype=torch.float64)
secont condition:: tensor(6.4457e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8677e-10, dtype=torch.float64)
secont condition:: tensor(3.8677e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8251e-10, dtype=torch.float64)
secont condition:: tensor(2.8251e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3814e-10, dtype=torch.float64)
secont condition:: tensor(9.3814e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2513e-10, dtype=torch.float64)
secont condition:: tensor(3.2513e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5772e-09, dtype=torch.float64)
secont condition:: tensor(1.5772e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2788e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8403e-10, dtype=torch.float64)
secont condition:: tensor(2.8403e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8672e-09, dtype=torch.float64)
secont condition:: tensor(4.8672e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6270e-10, dtype=torch.float64)
secont condition:: tensor(5.6270e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9467e-10, dtype=torch.float64)
secont condition:: tensor(4.9467e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.9300e-10, dtype=torch.float64)
secont condition:: tensor(9.9300e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8292e-08, dtype=torch.float64)
secont condition:: tensor(8.8292e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3579e-08, dtype=torch.float64)
secont condition:: tensor(7.3579e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3946e-08, dtype=torch.float64)
secont condition:: tensor(6.3946e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3843e-08, dtype=torch.float64)
secont condition:: tensor(5.3843e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1044e-08, dtype=torch.float64)
secont condition:: tensor(4.1044e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4191e-08, dtype=torch.float64)
secont condition:: tensor(4.4191e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3741e-08, dtype=torch.float64)
secont condition:: tensor(2.3741e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7697e-08, dtype=torch.float64)
secont condition:: tensor(2.7697e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7232e-08, dtype=torch.float64)
secont condition:: tensor(2.7232e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3044e-09, dtype=torch.float64)
secont condition:: tensor(5.3044e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6942e-09, dtype=torch.float64)
secont condition:: tensor(6.6942e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1050e-08, dtype=torch.float64)
secont condition:: tensor(1.1050e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3966e-08, dtype=torch.float64)
secont condition:: tensor(3.3966e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8404e-09, dtype=torch.float64)
secont condition:: tensor(6.8404e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.4971e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1182e-09, dtype=torch.float64)
secont condition:: tensor(5.1182e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0941e-09, dtype=torch.float64)
secont condition:: tensor(5.0941e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7711e-09, dtype=torch.float64)
secont condition:: tensor(2.7711e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3720e-09, dtype=torch.float64)
secont condition:: tensor(6.3720e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3889e-09, dtype=torch.float64)
secont condition:: tensor(7.3889e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0285e-09, dtype=torch.float64)
secont condition:: tensor(5.0285e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6810e-09, dtype=torch.float64)
secont condition:: tensor(1.6810e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1070e-07, dtype=torch.float64)
secont condition:: tensor(1.1070e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9564e-08, dtype=torch.float64)
secont condition:: tensor(3.9564e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3985e-08, dtype=torch.float64)
secont condition:: tensor(6.3985e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8731e-08, dtype=torch.float64)
secont condition:: tensor(5.8731e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5688e-08, dtype=torch.float64)
secont condition:: tensor(2.5688e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7418e-08, dtype=torch.float64)
secont condition:: tensor(3.7418e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.5670511722564697
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5729e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4143e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4140e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0078e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.9862e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.292279
Train - Epoch 0, Batch: 10, Loss: 0.229840
Train - Epoch 0, Batch: 20, Loss: 0.194754
Train - Epoch 0, Batch: 30, Loss: 0.214094
Train - Epoch 0, Batch: 40, Loss: 0.218287
Train - Epoch 0, Batch: 50, Loss: 0.227248
Test Avg. Loss: 0.000211, Accuracy: 0.945500
Train - Epoch 1, Batch: 0, Loss: 0.215769
Train - Epoch 1, Batch: 10, Loss: 0.209859
Train - Epoch 1, Batch: 20, Loss: 0.204614
Train - Epoch 1, Batch: 30, Loss: 0.236741
Train - Epoch 1, Batch: 40, Loss: 0.212652
Train - Epoch 1, Batch: 50, Loss: 0.222235
Test Avg. Loss: 0.000210, Accuracy: 0.945500
training_time:: 2.178866147994995
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3581418991088867
time_baseline:: 1.3629534244537354
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6635e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945500
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3990e-32, dtype=torch.float64)
secont condition:: tensor(1.3990e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9080e-32, dtype=torch.float64)
secont condition:: tensor(2.9080e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.1826e-08, dtype=torch.float64)
secont condition:: tensor(7.1826e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0812e-07, dtype=torch.float64)
secont condition:: tensor(1.0812e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8633e-08, dtype=torch.float64)
secont condition:: tensor(4.8633e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9559e-08, dtype=torch.float64)
secont condition:: tensor(7.9559e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2289e-08, dtype=torch.float64)
secont condition:: tensor(7.2289e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6617e-08, dtype=torch.float64)
secont condition:: tensor(3.6617e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0452e-08, dtype=torch.float64)
secont condition:: tensor(4.0452e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5317e-08, dtype=torch.float64)
secont condition:: tensor(3.5317e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6031e-08, dtype=torch.float64)
secont condition:: tensor(4.6031e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0300e-08, dtype=torch.float64)
secont condition:: tensor(2.0300e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7783e-08, dtype=torch.float64)
secont condition:: tensor(1.7783e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6698e-08, dtype=torch.float64)
secont condition:: tensor(1.6698e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5928e-08, dtype=torch.float64)
secont condition:: tensor(1.5928e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.1624e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7934e-08, dtype=torch.float64)
secont condition:: tensor(1.7934e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7385e-08, dtype=torch.float64)
secont condition:: tensor(1.7385e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.1740e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3851e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.0198e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2172e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9039e-08, dtype=torch.float64)
secont condition:: tensor(1.9039e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.8493e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9835e-07, dtype=torch.float64)
secont condition:: tensor(1.9835e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2187e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6883e-08, dtype=torch.float64)
secont condition:: tensor(3.6883e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1177e-08, dtype=torch.float64)
secont condition:: tensor(3.1177e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9522e-08, dtype=torch.float64)
secont condition:: tensor(1.9522e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6500e-08, dtype=torch.float64)
secont condition:: tensor(1.6500e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4131e-08, dtype=torch.float64)
secont condition:: tensor(6.4131e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3578e-08, dtype=torch.float64)
secont condition:: tensor(2.3578e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2623e-09, dtype=torch.float64)
secont condition:: tensor(7.2623e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3277e-09, dtype=torch.float64)
secont condition:: tensor(7.3277e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1061e-08, dtype=torch.float64)
secont condition:: tensor(2.1061e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6157e-08, dtype=torch.float64)
secont condition:: tensor(9.6157e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5477e-09, dtype=torch.float64)
secont condition:: tensor(7.5477e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0874e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9861e-08, dtype=torch.float64)
secont condition:: tensor(5.9861e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5120e-09, dtype=torch.float64)
secont condition:: tensor(6.5120e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0016e-09, dtype=torch.float64)
secont condition:: tensor(9.0016e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.6871e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.2156e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7288e-08, dtype=torch.float64)
secont condition:: tensor(3.7288e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3609e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1183e-09, dtype=torch.float64)
secont condition:: tensor(4.1183e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0262e-08, dtype=torch.float64)
secont condition:: tensor(1.0262e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6049e-09, dtype=torch.float64)
secont condition:: tensor(2.6049e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1590e-09, dtype=torch.float64)
secont condition:: tensor(1.1590e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1873e-10, dtype=torch.float64)
secont condition:: tensor(8.1873e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7677e-09, dtype=torch.float64)
secont condition:: tensor(2.7677e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.7429e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7023e-08, dtype=torch.float64)
secont condition:: tensor(1.7023e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.7697e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.9175e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6328e-09, dtype=torch.float64)
secont condition:: tensor(1.6328e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8477e-08, dtype=torch.float64)
secont condition:: tensor(7.8477e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0704e-07, dtype=torch.float64)
secont condition:: tensor(1.0704e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3356e-08, dtype=torch.float64)
secont condition:: tensor(6.3356e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4364e-08, dtype=torch.float64)
secont condition:: tensor(5.4364e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1619e-08, dtype=torch.float64)
secont condition:: tensor(4.1619e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5344e-08, dtype=torch.float64)
secont condition:: tensor(8.5344e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0700e-08, dtype=torch.float64)
secont condition:: tensor(4.0700e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3194e-08, dtype=torch.float64)
secont condition:: tensor(1.3194e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1174e-08, dtype=torch.float64)
secont condition:: tensor(6.1174e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0347e-08, dtype=torch.float64)
secont condition:: tensor(1.0347e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4746332168579102
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4436e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6485e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6495e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.7863e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5126e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945500
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.221863
Train - Epoch 0, Batch: 10, Loss: 0.218820
Train - Epoch 0, Batch: 20, Loss: 0.218063
Train - Epoch 0, Batch: 30, Loss: 0.225142
Train - Epoch 0, Batch: 40, Loss: 0.231037
Train - Epoch 0, Batch: 50, Loss: 0.186986
Test Avg. Loss: 0.000211, Accuracy: 0.945600
Train - Epoch 1, Batch: 0, Loss: 0.237735
Train - Epoch 1, Batch: 10, Loss: 0.255383
Train - Epoch 1, Batch: 20, Loss: 0.210714
Train - Epoch 1, Batch: 30, Loss: 0.227932
Train - Epoch 1, Batch: 40, Loss: 0.212564
Train - Epoch 1, Batch: 50, Loss: 0.172157
Test Avg. Loss: 0.000210, Accuracy: 0.945300
training_time:: 2.1952710151672363
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4431993961334229
time_baseline:: 1.448042392730713
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1754e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0127e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945300
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0851e-32, dtype=torch.float64)
secont condition:: tensor(1.0851e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0658e-32, dtype=torch.float64)
secont condition:: tensor(1.0658e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2665e-32, dtype=torch.float64)
secont condition:: tensor(3.2665e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1549e-10, dtype=torch.float64)
secont condition:: tensor(5.1549e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2017e-09, dtype=torch.float64)
secont condition:: tensor(1.2017e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2014e-10, dtype=torch.float64)
secont condition:: tensor(8.2014e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4513e-10, dtype=torch.float64)
secont condition:: tensor(4.4513e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0081e-10, dtype=torch.float64)
secont condition:: tensor(3.0081e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5256e-10, dtype=torch.float64)
secont condition:: tensor(3.5256e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4391e-10, dtype=torch.float64)
secont condition:: tensor(2.4391e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1732e-10, dtype=torch.float64)
secont condition:: tensor(2.1732e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1202e-10, dtype=torch.float64)
secont condition:: tensor(2.1202e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.3093e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3212e-08, dtype=torch.float64)
secont condition:: tensor(9.3212e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4494e-08, dtype=torch.float64)
secont condition:: tensor(5.4494e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8011e-08, dtype=torch.float64)
secont condition:: tensor(5.8011e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1368e-08, dtype=torch.float64)
secont condition:: tensor(4.1368e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8873e-08, dtype=torch.float64)
secont condition:: tensor(3.8873e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4212e-08, dtype=torch.float64)
secont condition:: tensor(4.4212e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2983e-08, dtype=torch.float64)
secont condition:: tensor(2.2983e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4355e-09, dtype=torch.float64)
secont condition:: tensor(5.4355e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9326e-08, dtype=torch.float64)
secont condition:: tensor(1.9326e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4343e-08, dtype=torch.float64)
secont condition:: tensor(1.4343e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5201e-08, dtype=torch.float64)
secont condition:: tensor(1.5201e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1469e-08, dtype=torch.float64)
secont condition:: tensor(1.1469e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0518e-08, dtype=torch.float64)
secont condition:: tensor(1.0518e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7505e-09, dtype=torch.float64)
secont condition:: tensor(9.7505e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6473e-08, dtype=torch.float64)
secont condition:: tensor(1.6473e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7769e-09, dtype=torch.float64)
secont condition:: tensor(8.7769e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6315e-09, dtype=torch.float64)
secont condition:: tensor(8.6315e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6533e-09, dtype=torch.float64)
secont condition:: tensor(5.6533e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4831e-09, dtype=torch.float64)
secont condition:: tensor(6.4831e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0381e-09, dtype=torch.float64)
secont condition:: tensor(5.0381e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8629e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0897e-09, dtype=torch.float64)
secont condition:: tensor(8.0897e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9118e-09, dtype=torch.float64)
secont condition:: tensor(4.9118e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3652e-09, dtype=torch.float64)
secont condition:: tensor(4.3652e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0291e-09, dtype=torch.float64)
secont condition:: tensor(3.0291e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9215e-09, dtype=torch.float64)
secont condition:: tensor(3.9215e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0991e-08, dtype=torch.float64)
secont condition:: tensor(2.0991e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3892e-08, dtype=torch.float64)
secont condition:: tensor(2.3892e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0888e-08, dtype=torch.float64)
secont condition:: tensor(1.0888e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5133e-09, dtype=torch.float64)
secont condition:: tensor(4.5133e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7686e-09, dtype=torch.float64)
secont condition:: tensor(7.7686e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6480e-09, dtype=torch.float64)
secont condition:: tensor(7.6480e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1167e-09, dtype=torch.float64)
secont condition:: tensor(3.1167e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1212e-09, dtype=torch.float64)
secont condition:: tensor(3.1212e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2159e-09, dtype=torch.float64)
secont condition:: tensor(2.2159e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.4645e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.5260e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1792e-08, dtype=torch.float64)
secont condition:: tensor(3.1792e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6016e-09, dtype=torch.float64)
secont condition:: tensor(3.6016e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3211e-08, dtype=torch.float64)
secont condition:: tensor(2.3211e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3484e-09, dtype=torch.float64)
secont condition:: tensor(8.3484e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9210e-08, dtype=torch.float64)
secont condition:: tensor(1.9210e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5237e-09, dtype=torch.float64)
secont condition:: tensor(6.5237e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3522e-08, dtype=torch.float64)
secont condition:: tensor(7.3522e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3218e-08, dtype=torch.float64)
secont condition:: tensor(4.3218e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2991e-08, dtype=torch.float64)
secont condition:: tensor(3.2991e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8243e-08, dtype=torch.float64)
secont condition:: tensor(1.8243e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.5628337860107422
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2734e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0733e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2790e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
deletion rate:: 0.0005
python3 generate_rand_ids 0.0005  MNIST 0
tensor([  129, 27394, 54150, 51787, 17548, 54866, 41234, 55762, 58005, 10645,
         3038, 54303,  9632, 13982, 34276, 16228, 32550, 30760, 15592, 16554,
        19372,  6510, 48238,  2927, 26865, 43378,  2995, 39290, 51707, 51389])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.92905378341675
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.94555687904358
time_baseline:: 99.20988154411316
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6046e-09, dtype=torch.float64)
secont condition:: tensor(2.6046e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1633e-09, dtype=torch.float64)
secont condition:: tensor(4.1633e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5325e-09, dtype=torch.float64)
secont condition:: tensor(5.5325e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2753e-09, dtype=torch.float64)
secont condition:: tensor(7.2753e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0481e-09, dtype=torch.float64)
secont condition:: tensor(9.0481e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1187e-08, dtype=torch.float64)
secont condition:: tensor(1.1187e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2228e-08, dtype=torch.float64)
secont condition:: tensor(1.2228e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-08, dtype=torch.float64)
secont condition:: tensor(1.4011e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4782e-08, dtype=torch.float64)
secont condition:: tensor(1.4782e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7583e-08, dtype=torch.float64)
secont condition:: tensor(1.7583e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-08, dtype=torch.float64)
secont condition:: tensor(1.7339e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8149e-08, dtype=torch.float64)
secont condition:: tensor(1.8149e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0134e-08, dtype=torch.float64)
secont condition:: tensor(2.0134e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4141e-08, dtype=torch.float64)
secont condition:: tensor(2.4141e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3895e-08, dtype=torch.float64)
secont condition:: tensor(2.3895e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5346e-08, dtype=torch.float64)
secont condition:: tensor(2.5346e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7420e-08, dtype=torch.float64)
secont condition:: tensor(2.7420e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-08, dtype=torch.float64)
secont condition:: tensor(2.8776e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-08, dtype=torch.float64)
secont condition:: tensor(2.9985e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-08, dtype=torch.float64)
secont condition:: tensor(3.0034e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1260e-08, dtype=torch.float64)
secont condition:: tensor(3.1260e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2022e-08, dtype=torch.float64)
secont condition:: tensor(3.2022e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1642e-08, dtype=torch.float64)
secont condition:: tensor(3.1642e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4034e-08, dtype=torch.float64)
secont condition:: tensor(3.4034e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3396e-08, dtype=torch.float64)
secont condition:: tensor(3.3396e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4911e-08, dtype=torch.float64)
secont condition:: tensor(3.4911e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7619e-08, dtype=torch.float64)
secont condition:: tensor(3.7619e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8021e-08, dtype=torch.float64)
secont condition:: tensor(3.8021e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3011e-08, dtype=torch.float64)
secont condition:: tensor(4.3011e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2619e-08, dtype=torch.float64)
secont condition:: tensor(4.2619e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2743e-08, dtype=torch.float64)
secont condition:: tensor(4.2743e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5241e-08, dtype=torch.float64)
secont condition:: tensor(4.5241e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5979e-08, dtype=torch.float64)
secont condition:: tensor(4.5979e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7781e-08, dtype=torch.float64)
secont condition:: tensor(4.7781e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-08, dtype=torch.float64)
secont condition:: tensor(5.1742e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5110e-08, dtype=torch.float64)
secont condition:: tensor(5.5110e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9587e-08, dtype=torch.float64)
secont condition:: tensor(5.9587e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2556e-08, dtype=torch.float64)
secont condition:: tensor(6.2556e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2393e-08, dtype=torch.float64)
secont condition:: tensor(6.2393e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1903e-08, dtype=torch.float64)
secont condition:: tensor(6.1903e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6461e-08, dtype=torch.float64)
secont condition:: tensor(6.6461e-08, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3769e-08, dtype=torch.float64)
secont condition:: tensor(7.3769e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6065e-08, dtype=torch.float64)
secont condition:: tensor(7.6065e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0673e-08, dtype=torch.float64)
secont condition:: tensor(8.0673e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7967e-08, dtype=torch.float64)
secont condition:: tensor(8.7967e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8278e-08, dtype=torch.float64)
secont condition:: tensor(8.8278e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8334e-08, dtype=torch.float64)
secont condition:: tensor(8.8334e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0064e-07, dtype=torch.float64)
secont condition:: tensor(1.0064e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0042e-07, dtype=torch.float64)
secont condition:: tensor(1.0042e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0825e-07, dtype=torch.float64)
secont condition:: tensor(1.0825e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0948e-07, dtype=torch.float64)
secont condition:: tensor(1.0948e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0897e-07, dtype=torch.float64)
secont condition:: tensor(1.0897e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1907e-07, dtype=torch.float64)
secont condition:: tensor(1.1907e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2954e-07, dtype=torch.float64)
secont condition:: tensor(1.2954e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3303e-07, dtype=torch.float64)
secont condition:: tensor(1.3303e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2795e-07, dtype=torch.float64)
secont condition:: tensor(1.2795e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.74656653404236
curr_diff: 0 tensor(7.1300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0075e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9604e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6349e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.1755e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.28567266464233
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.89086723327637
time_baseline:: 99.15525221824646
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6046e-09, dtype=torch.float64)
secont condition:: tensor(2.6046e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1633e-09, dtype=torch.float64)
secont condition:: tensor(4.1633e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5325e-09, dtype=torch.float64)
secont condition:: tensor(5.5325e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2753e-09, dtype=torch.float64)
secont condition:: tensor(7.2753e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0481e-09, dtype=torch.float64)
secont condition:: tensor(9.0481e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1187e-08, dtype=torch.float64)
secont condition:: tensor(1.1187e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2228e-08, dtype=torch.float64)
secont condition:: tensor(1.2228e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-08, dtype=torch.float64)
secont condition:: tensor(1.4011e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4782e-08, dtype=torch.float64)
secont condition:: tensor(1.4782e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7583e-08, dtype=torch.float64)
secont condition:: tensor(1.7583e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-08, dtype=torch.float64)
secont condition:: tensor(1.7339e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8149e-08, dtype=torch.float64)
secont condition:: tensor(1.8149e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0134e-08, dtype=torch.float64)
secont condition:: tensor(2.0134e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4141e-08, dtype=torch.float64)
secont condition:: tensor(2.4141e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3895e-08, dtype=torch.float64)
secont condition:: tensor(2.3895e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5346e-08, dtype=torch.float64)
secont condition:: tensor(2.5346e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7420e-08, dtype=torch.float64)
secont condition:: tensor(2.7420e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-08, dtype=torch.float64)
secont condition:: tensor(2.8776e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-08, dtype=torch.float64)
secont condition:: tensor(2.9985e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-08, dtype=torch.float64)
secont condition:: tensor(3.0034e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1260e-08, dtype=torch.float64)
secont condition:: tensor(3.1260e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2022e-08, dtype=torch.float64)
secont condition:: tensor(3.2022e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1642e-08, dtype=torch.float64)
secont condition:: tensor(3.1642e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4034e-08, dtype=torch.float64)
secont condition:: tensor(3.4034e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3396e-08, dtype=torch.float64)
secont condition:: tensor(3.3396e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4911e-08, dtype=torch.float64)
secont condition:: tensor(3.4911e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7619e-08, dtype=torch.float64)
secont condition:: tensor(3.7619e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8021e-08, dtype=torch.float64)
secont condition:: tensor(3.8021e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3011e-08, dtype=torch.float64)
secont condition:: tensor(4.3011e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2619e-08, dtype=torch.float64)
secont condition:: tensor(4.2619e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2743e-08, dtype=torch.float64)
secont condition:: tensor(4.2743e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5241e-08, dtype=torch.float64)
secont condition:: tensor(4.5241e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5979e-08, dtype=torch.float64)
secont condition:: tensor(4.5979e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7781e-08, dtype=torch.float64)
secont condition:: tensor(4.7781e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-08, dtype=torch.float64)
secont condition:: tensor(5.1742e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5110e-08, dtype=torch.float64)
secont condition:: tensor(5.5110e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9587e-08, dtype=torch.float64)
secont condition:: tensor(5.9587e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2556e-08, dtype=torch.float64)
secont condition:: tensor(6.2556e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2393e-08, dtype=torch.float64)
secont condition:: tensor(6.2393e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1903e-08, dtype=torch.float64)
secont condition:: tensor(6.1903e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6461e-08, dtype=torch.float64)
secont condition:: tensor(6.6461e-08, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3769e-08, dtype=torch.float64)
secont condition:: tensor(7.3769e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6065e-08, dtype=torch.float64)
secont condition:: tensor(7.6065e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0673e-08, dtype=torch.float64)
secont condition:: tensor(8.0673e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7967e-08, dtype=torch.float64)
secont condition:: tensor(8.7967e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8278e-08, dtype=torch.float64)
secont condition:: tensor(8.8278e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8334e-08, dtype=torch.float64)
secont condition:: tensor(8.8334e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0064e-07, dtype=torch.float64)
secont condition:: tensor(1.0064e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0042e-07, dtype=torch.float64)
secont condition:: tensor(1.0042e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0825e-07, dtype=torch.float64)
secont condition:: tensor(1.0825e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0948e-07, dtype=torch.float64)
secont condition:: tensor(1.0948e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0897e-07, dtype=torch.float64)
secont condition:: tensor(1.0897e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1907e-07, dtype=torch.float64)
secont condition:: tensor(1.1907e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2954e-07, dtype=torch.float64)
secont condition:: tensor(1.2954e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3303e-07, dtype=torch.float64)
secont condition:: tensor(1.3303e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2795e-07, dtype=torch.float64)
secont condition:: tensor(1.2795e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.629724264144897
curr_diff: 0 tensor(7.1300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0075e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9604e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6349e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.1755e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.98274087905884
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.32649254798889
time_baseline:: 100.59362554550171
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6046e-09, dtype=torch.float64)
secont condition:: tensor(2.6046e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1633e-09, dtype=torch.float64)
secont condition:: tensor(4.1633e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5325e-09, dtype=torch.float64)
secont condition:: tensor(5.5325e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2753e-09, dtype=torch.float64)
secont condition:: tensor(7.2753e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0481e-09, dtype=torch.float64)
secont condition:: tensor(9.0481e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1187e-08, dtype=torch.float64)
secont condition:: tensor(1.1187e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2228e-08, dtype=torch.float64)
secont condition:: tensor(1.2228e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-08, dtype=torch.float64)
secont condition:: tensor(1.4011e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4782e-08, dtype=torch.float64)
secont condition:: tensor(1.4782e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7583e-08, dtype=torch.float64)
secont condition:: tensor(1.7583e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-08, dtype=torch.float64)
secont condition:: tensor(1.7339e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8149e-08, dtype=torch.float64)
secont condition:: tensor(1.8149e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0134e-08, dtype=torch.float64)
secont condition:: tensor(2.0134e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4141e-08, dtype=torch.float64)
secont condition:: tensor(2.4141e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3895e-08, dtype=torch.float64)
secont condition:: tensor(2.3895e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5346e-08, dtype=torch.float64)
secont condition:: tensor(2.5346e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7420e-08, dtype=torch.float64)
secont condition:: tensor(2.7420e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-08, dtype=torch.float64)
secont condition:: tensor(2.8776e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-08, dtype=torch.float64)
secont condition:: tensor(2.9985e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-08, dtype=torch.float64)
secont condition:: tensor(3.0034e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1260e-08, dtype=torch.float64)
secont condition:: tensor(3.1260e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2022e-08, dtype=torch.float64)
secont condition:: tensor(3.2022e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1642e-08, dtype=torch.float64)
secont condition:: tensor(3.1642e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4034e-08, dtype=torch.float64)
secont condition:: tensor(3.4034e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3396e-08, dtype=torch.float64)
secont condition:: tensor(3.3396e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4911e-08, dtype=torch.float64)
secont condition:: tensor(3.4911e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7619e-08, dtype=torch.float64)
secont condition:: tensor(3.7619e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8021e-08, dtype=torch.float64)
secont condition:: tensor(3.8021e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3011e-08, dtype=torch.float64)
secont condition:: tensor(4.3011e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2619e-08, dtype=torch.float64)
secont condition:: tensor(4.2619e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2743e-08, dtype=torch.float64)
secont condition:: tensor(4.2743e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5241e-08, dtype=torch.float64)
secont condition:: tensor(4.5241e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5979e-08, dtype=torch.float64)
secont condition:: tensor(4.5979e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7781e-08, dtype=torch.float64)
secont condition:: tensor(4.7781e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-08, dtype=torch.float64)
secont condition:: tensor(5.1742e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5110e-08, dtype=torch.float64)
secont condition:: tensor(5.5110e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9587e-08, dtype=torch.float64)
secont condition:: tensor(5.9587e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2556e-08, dtype=torch.float64)
secont condition:: tensor(6.2556e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2393e-08, dtype=torch.float64)
secont condition:: tensor(6.2393e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1903e-08, dtype=torch.float64)
secont condition:: tensor(6.1903e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6461e-08, dtype=torch.float64)
secont condition:: tensor(6.6461e-08, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3769e-08, dtype=torch.float64)
secont condition:: tensor(7.3769e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6065e-08, dtype=torch.float64)
secont condition:: tensor(7.6065e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0673e-08, dtype=torch.float64)
secont condition:: tensor(8.0673e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7967e-08, dtype=torch.float64)
secont condition:: tensor(8.7967e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8278e-08, dtype=torch.float64)
secont condition:: tensor(8.8278e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8334e-08, dtype=torch.float64)
secont condition:: tensor(8.8334e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0064e-07, dtype=torch.float64)
secont condition:: tensor(1.0064e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0042e-07, dtype=torch.float64)
secont condition:: tensor(1.0042e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0825e-07, dtype=torch.float64)
secont condition:: tensor(1.0825e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0948e-07, dtype=torch.float64)
secont condition:: tensor(1.0948e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0897e-07, dtype=torch.float64)
secont condition:: tensor(1.0897e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1907e-07, dtype=torch.float64)
secont condition:: tensor(1.1907e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2954e-07, dtype=torch.float64)
secont condition:: tensor(1.2954e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3303e-07, dtype=torch.float64)
secont condition:: tensor(1.3303e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2795e-07, dtype=torch.float64)
secont condition:: tensor(1.2795e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.774054050445557
curr_diff: 0 tensor(7.1300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0075e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9604e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6349e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.1755e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.78110265731812
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.23137283325195
time_baseline:: 99.50145864486694
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6046e-09, dtype=torch.float64)
secont condition:: tensor(2.6046e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1633e-09, dtype=torch.float64)
secont condition:: tensor(4.1633e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5325e-09, dtype=torch.float64)
secont condition:: tensor(5.5325e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2753e-09, dtype=torch.float64)
secont condition:: tensor(7.2753e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0481e-09, dtype=torch.float64)
secont condition:: tensor(9.0481e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1187e-08, dtype=torch.float64)
secont condition:: tensor(1.1187e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2228e-08, dtype=torch.float64)
secont condition:: tensor(1.2228e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-08, dtype=torch.float64)
secont condition:: tensor(1.4011e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4782e-08, dtype=torch.float64)
secont condition:: tensor(1.4782e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7583e-08, dtype=torch.float64)
secont condition:: tensor(1.7583e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-08, dtype=torch.float64)
secont condition:: tensor(1.7339e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8149e-08, dtype=torch.float64)
secont condition:: tensor(1.8149e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0134e-08, dtype=torch.float64)
secont condition:: tensor(2.0134e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4141e-08, dtype=torch.float64)
secont condition:: tensor(2.4141e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3895e-08, dtype=torch.float64)
secont condition:: tensor(2.3895e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5346e-08, dtype=torch.float64)
secont condition:: tensor(2.5346e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7420e-08, dtype=torch.float64)
secont condition:: tensor(2.7420e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-08, dtype=torch.float64)
secont condition:: tensor(2.8776e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-08, dtype=torch.float64)
secont condition:: tensor(2.9985e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-08, dtype=torch.float64)
secont condition:: tensor(3.0034e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1260e-08, dtype=torch.float64)
secont condition:: tensor(3.1260e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2022e-08, dtype=torch.float64)
secont condition:: tensor(3.2022e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1642e-08, dtype=torch.float64)
secont condition:: tensor(3.1642e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4034e-08, dtype=torch.float64)
secont condition:: tensor(3.4034e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3396e-08, dtype=torch.float64)
secont condition:: tensor(3.3396e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4911e-08, dtype=torch.float64)
secont condition:: tensor(3.4911e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7619e-08, dtype=torch.float64)
secont condition:: tensor(3.7619e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8021e-08, dtype=torch.float64)
secont condition:: tensor(3.8021e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3011e-08, dtype=torch.float64)
secont condition:: tensor(4.3011e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2619e-08, dtype=torch.float64)
secont condition:: tensor(4.2619e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2743e-08, dtype=torch.float64)
secont condition:: tensor(4.2743e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5241e-08, dtype=torch.float64)
secont condition:: tensor(4.5241e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5979e-08, dtype=torch.float64)
secont condition:: tensor(4.5979e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7781e-08, dtype=torch.float64)
secont condition:: tensor(4.7781e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-08, dtype=torch.float64)
secont condition:: tensor(5.1742e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5110e-08, dtype=torch.float64)
secont condition:: tensor(5.5110e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9587e-08, dtype=torch.float64)
secont condition:: tensor(5.9587e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2556e-08, dtype=torch.float64)
secont condition:: tensor(6.2556e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2393e-08, dtype=torch.float64)
secont condition:: tensor(6.2393e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1903e-08, dtype=torch.float64)
secont condition:: tensor(6.1903e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6461e-08, dtype=torch.float64)
secont condition:: tensor(6.6461e-08, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3769e-08, dtype=torch.float64)
secont condition:: tensor(7.3769e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6065e-08, dtype=torch.float64)
secont condition:: tensor(7.6065e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0673e-08, dtype=torch.float64)
secont condition:: tensor(8.0673e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7967e-08, dtype=torch.float64)
secont condition:: tensor(8.7967e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8278e-08, dtype=torch.float64)
secont condition:: tensor(8.8278e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8334e-08, dtype=torch.float64)
secont condition:: tensor(8.8334e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0064e-07, dtype=torch.float64)
secont condition:: tensor(1.0064e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0042e-07, dtype=torch.float64)
secont condition:: tensor(1.0042e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0825e-07, dtype=torch.float64)
secont condition:: tensor(1.0825e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0948e-07, dtype=torch.float64)
secont condition:: tensor(1.0948e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0897e-07, dtype=torch.float64)
secont condition:: tensor(1.0897e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1907e-07, dtype=torch.float64)
secont condition:: tensor(1.1907e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2954e-07, dtype=torch.float64)
secont condition:: tensor(1.2954e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3303e-07, dtype=torch.float64)
secont condition:: tensor(1.3303e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2795e-07, dtype=torch.float64)
secont condition:: tensor(1.2795e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.850701570510864
curr_diff: 0 tensor(7.1300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0075e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9604e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6349e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.1755e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.51318502426147
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.37375473976135
time_baseline:: 99.63887453079224
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5634e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4829e-09, dtype=torch.float64)
secont condition:: tensor(1.4829e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6046e-09, dtype=torch.float64)
secont condition:: tensor(2.6046e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1633e-09, dtype=torch.float64)
secont condition:: tensor(4.1633e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5325e-09, dtype=torch.float64)
secont condition:: tensor(5.5325e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2753e-09, dtype=torch.float64)
secont condition:: tensor(7.2753e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0481e-09, dtype=torch.float64)
secont condition:: tensor(9.0481e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1187e-08, dtype=torch.float64)
secont condition:: tensor(1.1187e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2228e-08, dtype=torch.float64)
secont condition:: tensor(1.2228e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-08, dtype=torch.float64)
secont condition:: tensor(1.4011e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4782e-08, dtype=torch.float64)
secont condition:: tensor(1.4782e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7583e-08, dtype=torch.float64)
secont condition:: tensor(1.7583e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-08, dtype=torch.float64)
secont condition:: tensor(1.7339e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8149e-08, dtype=torch.float64)
secont condition:: tensor(1.8149e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0134e-08, dtype=torch.float64)
secont condition:: tensor(2.0134e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4141e-08, dtype=torch.float64)
secont condition:: tensor(2.4141e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3895e-08, dtype=torch.float64)
secont condition:: tensor(2.3895e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5346e-08, dtype=torch.float64)
secont condition:: tensor(2.5346e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7420e-08, dtype=torch.float64)
secont condition:: tensor(2.7420e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-08, dtype=torch.float64)
secont condition:: tensor(2.8776e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-08, dtype=torch.float64)
secont condition:: tensor(2.9985e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-08, dtype=torch.float64)
secont condition:: tensor(3.0034e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1260e-08, dtype=torch.float64)
secont condition:: tensor(3.1260e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2022e-08, dtype=torch.float64)
secont condition:: tensor(3.2022e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1642e-08, dtype=torch.float64)
secont condition:: tensor(3.1642e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4034e-08, dtype=torch.float64)
secont condition:: tensor(3.4034e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3396e-08, dtype=torch.float64)
secont condition:: tensor(3.3396e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4911e-08, dtype=torch.float64)
secont condition:: tensor(3.4911e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7619e-08, dtype=torch.float64)
secont condition:: tensor(3.7619e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8021e-08, dtype=torch.float64)
secont condition:: tensor(3.8021e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8675e-08, dtype=torch.float64)
secont condition:: tensor(3.8675e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3011e-08, dtype=torch.float64)
secont condition:: tensor(4.3011e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2619e-08, dtype=torch.float64)
secont condition:: tensor(4.2619e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2743e-08, dtype=torch.float64)
secont condition:: tensor(4.2743e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5241e-08, dtype=torch.float64)
secont condition:: tensor(4.5241e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5979e-08, dtype=torch.float64)
secont condition:: tensor(4.5979e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7781e-08, dtype=torch.float64)
secont condition:: tensor(4.7781e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-08, dtype=torch.float64)
secont condition:: tensor(5.1742e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5110e-08, dtype=torch.float64)
secont condition:: tensor(5.5110e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9587e-08, dtype=torch.float64)
secont condition:: tensor(5.9587e-08, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2556e-08, dtype=torch.float64)
secont condition:: tensor(6.2556e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2393e-08, dtype=torch.float64)
secont condition:: tensor(6.2393e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1903e-08, dtype=torch.float64)
secont condition:: tensor(6.1903e-08, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6461e-08, dtype=torch.float64)
secont condition:: tensor(6.6461e-08, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3769e-08, dtype=torch.float64)
secont condition:: tensor(7.3769e-08, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6065e-08, dtype=torch.float64)
secont condition:: tensor(7.6065e-08, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0673e-08, dtype=torch.float64)
secont condition:: tensor(8.0673e-08, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7967e-08, dtype=torch.float64)
secont condition:: tensor(8.7967e-08, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8278e-08, dtype=torch.float64)
secont condition:: tensor(8.8278e-08, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8334e-08, dtype=torch.float64)
secont condition:: tensor(8.8334e-08, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0064e-07, dtype=torch.float64)
secont condition:: tensor(1.0064e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0042e-07, dtype=torch.float64)
secont condition:: tensor(1.0042e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0825e-07, dtype=torch.float64)
secont condition:: tensor(1.0825e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0948e-07, dtype=torch.float64)
secont condition:: tensor(1.0948e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0897e-07, dtype=torch.float64)
secont condition:: tensor(1.0897e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1907e-07, dtype=torch.float64)
secont condition:: tensor(1.1907e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2954e-07, dtype=torch.float64)
secont condition:: tensor(1.2954e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3303e-07, dtype=torch.float64)
secont condition:: tensor(1.3303e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2795e-07, dtype=torch.float64)
secont condition:: tensor(1.2795e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.714441299438477
curr_diff: 0 tensor(7.1300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0075e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9604e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6349e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.1755e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.252058
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.236864
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.231826
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.227022
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.220700
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.221048
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.214727
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.213816
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.220255
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.218399
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.220129
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.216881
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.214963
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.216078
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.214551
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.214279
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.216383
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216728
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.214617
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.217028
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217131
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.217962
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.221333
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 23, Batch: 0, Loss: 0.216967
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214745
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.214891
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215451
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215700
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.216501
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217502
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.214588
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.219399
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.219176
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.214656
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.214948
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.220012
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.216778
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.215133
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.211610
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.213803
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.215463
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214983
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.212479
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217350
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216379
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.218505
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.213633
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.213704
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.219090
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.213910
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.218289
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.213464
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.215130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.217995
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.215728
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.212537
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.216532
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.211887
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.216742
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215950
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 55.9785532951355
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.77116799354553
time_baseline:: 45.907569885253906
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7391e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3299e-09, dtype=torch.float64)
secont condition:: tensor(1.3299e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2536e-09, dtype=torch.float64)
secont condition:: tensor(1.2536e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0610e-09, dtype=torch.float64)
secont condition:: tensor(4.0610e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5401e-09, dtype=torch.float64)
secont condition:: tensor(3.5401e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1512e-09, dtype=torch.float64)
secont condition:: tensor(4.1512e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6385e-09, dtype=torch.float64)
secont condition:: tensor(7.6385e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1665e-08, dtype=torch.float64)
secont condition:: tensor(1.1665e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0675e-08, dtype=torch.float64)
secont condition:: tensor(1.0675e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2140e-08, dtype=torch.float64)
secont condition:: tensor(1.2140e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3786e-08, dtype=torch.float64)
secont condition:: tensor(1.3786e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4428e-08, dtype=torch.float64)
secont condition:: tensor(1.4428e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7677e-08, dtype=torch.float64)
secont condition:: tensor(1.7677e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3990e-08, dtype=torch.float64)
secont condition:: tensor(1.3990e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8966e-08, dtype=torch.float64)
secont condition:: tensor(1.8966e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2972e-08, dtype=torch.float64)
secont condition:: tensor(2.2972e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3909e-08, dtype=torch.float64)
secont condition:: tensor(2.3909e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4483e-08, dtype=torch.float64)
secont condition:: tensor(2.4483e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4291e-08, dtype=torch.float64)
secont condition:: tensor(2.4291e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8236e-08, dtype=torch.float64)
secont condition:: tensor(2.8236e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6370e-08, dtype=torch.float64)
secont condition:: tensor(2.6370e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4034e-08, dtype=torch.float64)
secont condition:: tensor(2.4034e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1727e-08, dtype=torch.float64)
secont condition:: tensor(3.1727e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9868e-08, dtype=torch.float64)
secont condition:: tensor(2.9868e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3699e-08, dtype=torch.float64)
secont condition:: tensor(3.3699e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8544e-08, dtype=torch.float64)
secont condition:: tensor(2.8544e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3271e-08, dtype=torch.float64)
secont condition:: tensor(3.3271e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4924e-08, dtype=torch.float64)
secont condition:: tensor(3.4924e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2980e-08, dtype=torch.float64)
secont condition:: tensor(3.2980e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0386e-08, dtype=torch.float64)
secont condition:: tensor(4.0386e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3823e-08, dtype=torch.float64)
secont condition:: tensor(3.3823e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9465e-08, dtype=torch.float64)
secont condition:: tensor(3.9465e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8878e-08, dtype=torch.float64)
secont condition:: tensor(3.8878e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7775e-08, dtype=torch.float64)
secont condition:: tensor(3.7775e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2314e-08, dtype=torch.float64)
secont condition:: tensor(4.2314e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6142e-08, dtype=torch.float64)
secont condition:: tensor(4.6142e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2517e-08, dtype=torch.float64)
secont condition:: tensor(4.2517e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1123e-08, dtype=torch.float64)
secont condition:: tensor(4.1123e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3576e-08, dtype=torch.float64)
secont condition:: tensor(4.3576e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6136e-08, dtype=torch.float64)
secont condition:: tensor(4.6136e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1465e-08, dtype=torch.float64)
secont condition:: tensor(5.1465e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2207e-08, dtype=torch.float64)
secont condition:: tensor(5.2207e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4111e-08, dtype=torch.float64)
secont condition:: tensor(5.4111e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2198e-08, dtype=torch.float64)
secont condition:: tensor(6.2198e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2635e-08, dtype=torch.float64)
secont condition:: tensor(6.2635e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9224e-08, dtype=torch.float64)
secont condition:: tensor(6.9224e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0585e-08, dtype=torch.float64)
secont condition:: tensor(6.0585e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8855e-08, dtype=torch.float64)
secont condition:: tensor(7.8855e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2879e-08, dtype=torch.float64)
secont condition:: tensor(7.2879e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1200e-08, dtype=torch.float64)
secont condition:: tensor(9.1200e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1951e-08, dtype=torch.float64)
secont condition:: tensor(8.1951e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6160e-08, dtype=torch.float64)
secont condition:: tensor(8.6160e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9959e-08, dtype=torch.float64)
secont condition:: tensor(8.9959e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3763e-08, dtype=torch.float64)
secont condition:: tensor(9.3763e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3241e-08, dtype=torch.float64)
secont condition:: tensor(8.3241e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0933e-07, dtype=torch.float64)
secont condition:: tensor(1.0933e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0596e-07, dtype=torch.float64)
secont condition:: tensor(1.0596e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0445e-07, dtype=torch.float64)
secont condition:: tensor(1.0445e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0677e-07, dtype=torch.float64)
secont condition:: tensor(1.0677e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2030e-07, dtype=torch.float64)
secont condition:: tensor(1.2030e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1872e-07, dtype=torch.float64)
secont condition:: tensor(1.1872e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2100e-07, dtype=torch.float64)
secont condition:: tensor(1.2100e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1572e-07, dtype=torch.float64)
secont condition:: tensor(1.1572e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3012e-07, dtype=torch.float64)
secont condition:: tensor(1.3012e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2778e-07, dtype=torch.float64)
secont condition:: tensor(1.2778e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2796e-07, dtype=torch.float64)
secont condition:: tensor(1.2796e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.781020402908325
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1760e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.8965e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7022e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7389e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.254067
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.240108
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229451
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225942
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.219164
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.215476
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.216873
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.213697
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 8, Batch: 0, Loss: 0.218360
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.218412
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.219421
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.214067
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.214998
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.214367
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.214304
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 15, Batch: 0, Loss: 0.216078
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.215997
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.211417
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.215176
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.213043
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.214726
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.209441
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.213074
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216822
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.217088
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216905
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215198
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215779
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.216107
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.211664
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.218950
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216144
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.213796
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.218329
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.211428
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.217120
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.215770
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.212375
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214347
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.215621
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213600
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.212923
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.213246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215965
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.216875
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216673
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.215228
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.210749
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.215986
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.215427
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.216239
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.213309
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216824
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214801
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.214859
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.216050
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.215344
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.212372
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.213199
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.51698684692383
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.40491032600403
time_baseline:: 45.53777861595154
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2989e-09, dtype=torch.float64)
secont condition:: tensor(1.2989e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2261e-09, dtype=torch.float64)
secont condition:: tensor(1.2261e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9336e-09, dtype=torch.float64)
secont condition:: tensor(2.9336e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8917e-09, dtype=torch.float64)
secont condition:: tensor(3.8917e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0798e-09, dtype=torch.float64)
secont condition:: tensor(7.0798e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7789e-09, dtype=torch.float64)
secont condition:: tensor(6.7789e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1889e-09, dtype=torch.float64)
secont condition:: tensor(9.1889e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0734e-08, dtype=torch.float64)
secont condition:: tensor(1.0734e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5112e-08, dtype=torch.float64)
secont condition:: tensor(1.5112e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2580e-08, dtype=torch.float64)
secont condition:: tensor(1.2580e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9141e-08, dtype=torch.float64)
secont condition:: tensor(1.9141e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6588e-08, dtype=torch.float64)
secont condition:: tensor(1.6588e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7051e-08, dtype=torch.float64)
secont condition:: tensor(1.7051e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-08, dtype=torch.float64)
secont condition:: tensor(1.8965e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6261e-08, dtype=torch.float64)
secont condition:: tensor(1.6261e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2672e-08, dtype=torch.float64)
secont condition:: tensor(2.2672e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0959e-08, dtype=torch.float64)
secont condition:: tensor(2.0959e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3409e-08, dtype=torch.float64)
secont condition:: tensor(2.3409e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3675e-08, dtype=torch.float64)
secont condition:: tensor(2.3675e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7268e-08, dtype=torch.float64)
secont condition:: tensor(2.7268e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0032e-08, dtype=torch.float64)
secont condition:: tensor(3.0032e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9574e-08, dtype=torch.float64)
secont condition:: tensor(2.9574e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7700e-08, dtype=torch.float64)
secont condition:: tensor(3.7700e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4157e-08, dtype=torch.float64)
secont condition:: tensor(3.4157e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8966e-08, dtype=torch.float64)
secont condition:: tensor(2.8966e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1042e-08, dtype=torch.float64)
secont condition:: tensor(3.1042e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0536e-08, dtype=torch.float64)
secont condition:: tensor(3.0536e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2019e-08, dtype=torch.float64)
secont condition:: tensor(3.2019e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8107e-08, dtype=torch.float64)
secont condition:: tensor(3.8107e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6319e-08, dtype=torch.float64)
secont condition:: tensor(3.6319e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3288e-08, dtype=torch.float64)
secont condition:: tensor(4.3288e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9842e-08, dtype=torch.float64)
secont condition:: tensor(3.9842e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8713e-08, dtype=torch.float64)
secont condition:: tensor(3.8713e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3793e-08, dtype=torch.float64)
secont condition:: tensor(4.3793e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1299e-08, dtype=torch.float64)
secont condition:: tensor(4.1299e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5431e-08, dtype=torch.float64)
secont condition:: tensor(4.5431e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4984e-08, dtype=torch.float64)
secont condition:: tensor(4.4984e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6019e-08, dtype=torch.float64)
secont condition:: tensor(4.6019e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3817e-08, dtype=torch.float64)
secont condition:: tensor(4.3817e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5173e-08, dtype=torch.float64)
secont condition:: tensor(4.5173e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6441e-08, dtype=torch.float64)
secont condition:: tensor(5.6441e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9660e-08, dtype=torch.float64)
secont condition:: tensor(5.9660e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0013e-08, dtype=torch.float64)
secont condition:: tensor(5.0013e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4264e-08, dtype=torch.float64)
secont condition:: tensor(6.4264e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3380e-08, dtype=torch.float64)
secont condition:: tensor(7.3380e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3759e-08, dtype=torch.float64)
secont condition:: tensor(6.3759e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7901e-08, dtype=torch.float64)
secont condition:: tensor(7.7901e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0653e-08, dtype=torch.float64)
secont condition:: tensor(8.0653e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6250e-08, dtype=torch.float64)
secont condition:: tensor(7.6250e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9853e-08, dtype=torch.float64)
secont condition:: tensor(7.9853e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6839e-08, dtype=torch.float64)
secont condition:: tensor(8.6839e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1130e-08, dtype=torch.float64)
secont condition:: tensor(9.1130e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0214e-07, dtype=torch.float64)
secont condition:: tensor(1.0214e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3762e-08, dtype=torch.float64)
secont condition:: tensor(9.3762e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7344e-08, dtype=torch.float64)
secont condition:: tensor(9.7344e-08, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1272e-07, dtype=torch.float64)
secont condition:: tensor(1.1272e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3209e-08, dtype=torch.float64)
secont condition:: tensor(9.3209e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1058e-07, dtype=torch.float64)
secont condition:: tensor(1.1058e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1817e-07, dtype=torch.float64)
secont condition:: tensor(1.1817e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2433e-07, dtype=torch.float64)
secont condition:: tensor(1.2433e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2229e-07, dtype=torch.float64)
secont condition:: tensor(1.2229e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2724e-07, dtype=torch.float64)
secont condition:: tensor(1.2724e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4024e-07, dtype=torch.float64)
secont condition:: tensor(1.4024e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3432e-07, dtype=torch.float64)
secont condition:: tensor(1.3432e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.782710790634155
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2238e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3997e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0498e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6729e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7261e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250149
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.238674
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229471
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225282
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.219739
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.218910
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217338
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.219305
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218663
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.215993
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.221619
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.218159
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.219324
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.215685
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.218150
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217788
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.216743
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216592
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.215077
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215870
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.218735
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215247
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.214037
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217531
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215295
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.212472
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.213557
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217152
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.213408
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217558
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.215848
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.214710
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215489
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.218129
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.216963
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.213859
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.215579
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.218386
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216344
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215876
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.216551
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.215354
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215411
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.216539
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.219878
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215649
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 46, Batch: 0, Loss: 0.212921
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.211668
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.216857
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.215587
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214358
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214349
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217641
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216511
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216454
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 55, Batch: 0, Loss: 0.213256
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.211607
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.215527
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.213332
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.214720
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.339969873428345
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.4638090133667
time_baseline:: 44.59660863876343
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6762e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7447e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3172e-09, dtype=torch.float64)
secont condition:: tensor(1.3172e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4470e-09, dtype=torch.float64)
secont condition:: tensor(1.4470e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3797e-09, dtype=torch.float64)
secont condition:: tensor(4.3797e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7454e-09, dtype=torch.float64)
secont condition:: tensor(3.7454e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8345e-09, dtype=torch.float64)
secont condition:: tensor(5.8345e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2744e-09, dtype=torch.float64)
secont condition:: tensor(7.2744e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4208e-09, dtype=torch.float64)
secont condition:: tensor(9.4208e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0904e-08, dtype=torch.float64)
secont condition:: tensor(1.0904e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0936e-08, dtype=torch.float64)
secont condition:: tensor(1.0936e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3633e-08, dtype=torch.float64)
secont condition:: tensor(1.3633e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6715e-08, dtype=torch.float64)
secont condition:: tensor(1.6715e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9057e-08, dtype=torch.float64)
secont condition:: tensor(1.9057e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0240e-08, dtype=torch.float64)
secont condition:: tensor(2.0240e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0098e-08, dtype=torch.float64)
secont condition:: tensor(2.0098e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5057e-08, dtype=torch.float64)
secont condition:: tensor(2.5057e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2002e-08, dtype=torch.float64)
secont condition:: tensor(2.2002e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3809e-08, dtype=torch.float64)
secont condition:: tensor(2.3809e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1402e-08, dtype=torch.float64)
secont condition:: tensor(2.1402e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1698e-08, dtype=torch.float64)
secont condition:: tensor(2.1698e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6125e-08, dtype=torch.float64)
secont condition:: tensor(2.6125e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2849e-08, dtype=torch.float64)
secont condition:: tensor(2.2849e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0572e-08, dtype=torch.float64)
secont condition:: tensor(3.0572e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2791e-08, dtype=torch.float64)
secont condition:: tensor(3.2791e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0643e-08, dtype=torch.float64)
secont condition:: tensor(3.0643e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3864e-08, dtype=torch.float64)
secont condition:: tensor(3.3864e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1055e-08, dtype=torch.float64)
secont condition:: tensor(3.1055e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9682e-08, dtype=torch.float64)
secont condition:: tensor(2.9682e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3744e-08, dtype=torch.float64)
secont condition:: tensor(3.3744e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9090e-08, dtype=torch.float64)
secont condition:: tensor(3.9090e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7013e-08, dtype=torch.float64)
secont condition:: tensor(3.7013e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5741e-08, dtype=torch.float64)
secont condition:: tensor(4.5741e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0708e-08, dtype=torch.float64)
secont condition:: tensor(4.0708e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8072e-08, dtype=torch.float64)
secont condition:: tensor(3.8072e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3202e-08, dtype=torch.float64)
secont condition:: tensor(4.3202e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1791e-08, dtype=torch.float64)
secont condition:: tensor(4.1791e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5831e-08, dtype=torch.float64)
secont condition:: tensor(4.5831e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9595e-08, dtype=torch.float64)
secont condition:: tensor(3.9595e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1276e-08, dtype=torch.float64)
secont condition:: tensor(5.1276e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7125e-08, dtype=torch.float64)
secont condition:: tensor(4.7125e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1901e-08, dtype=torch.float64)
secont condition:: tensor(5.1901e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9011e-08, dtype=torch.float64)
secont condition:: tensor(5.9011e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0442e-08, dtype=torch.float64)
secont condition:: tensor(6.0442e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4790e-08, dtype=torch.float64)
secont condition:: tensor(5.4790e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0606e-08, dtype=torch.float64)
secont condition:: tensor(6.0606e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1607e-08, dtype=torch.float64)
secont condition:: tensor(7.1607e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8658e-08, dtype=torch.float64)
secont condition:: tensor(5.8658e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3816e-08, dtype=torch.float64)
secont condition:: tensor(7.3816e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8667e-08, dtype=torch.float64)
secont condition:: tensor(6.8667e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2706e-08, dtype=torch.float64)
secont condition:: tensor(8.2706e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7885e-08, dtype=torch.float64)
secont condition:: tensor(7.7885e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9658e-08, dtype=torch.float64)
secont condition:: tensor(7.9658e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9807e-08, dtype=torch.float64)
secont condition:: tensor(9.9807e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6039e-08, dtype=torch.float64)
secont condition:: tensor(7.6039e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1461e-07, dtype=torch.float64)
secont condition:: tensor(1.1461e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0670e-07, dtype=torch.float64)
secont condition:: tensor(1.0670e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1176e-07, dtype=torch.float64)
secont condition:: tensor(1.1176e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5625e-08, dtype=torch.float64)
secont condition:: tensor(9.5625e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0751e-07, dtype=torch.float64)
secont condition:: tensor(1.0751e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2303e-07, dtype=torch.float64)
secont condition:: tensor(1.2303e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2142e-07, dtype=torch.float64)
secont condition:: tensor(1.2142e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2845e-07, dtype=torch.float64)
secont condition:: tensor(1.2845e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3216e-07, dtype=torch.float64)
secont condition:: tensor(1.3216e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2159e-07, dtype=torch.float64)
secont condition:: tensor(1.2159e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4605e-07, dtype=torch.float64)
secont condition:: tensor(1.4605e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5081e-07, dtype=torch.float64)
secont condition:: tensor(1.5081e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.915460348129272
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3458e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.6124e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2681e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8389e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7920e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253915
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.235970
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229431
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.219191
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.219213
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.218681
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.218671
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.220285
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.216992
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.219331
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.216356
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.216653
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215009
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.220061
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.220242
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216333
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.216483
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.217998
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.221005
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.218191
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.213276
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.218511
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.215827
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.213719
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.213468
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.212989
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.216080
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216812
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.218398
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.216002
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217236
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215895
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.215080
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.217710
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.211696
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.214293
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.216355
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.214870
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214840
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.217057
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.213141
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214577
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.220190
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.218483
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.213460
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215684
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.213419
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.217935
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.213458
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.214979
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.214365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214582
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.214751
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213055
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.213383
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.218277
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.213705
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.218289
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.212464
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.210632
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.67252588272095
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.85473918914795
time_baseline:: 44.9876766204834
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6421e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7762e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1100e-09, dtype=torch.float64)
secont condition:: tensor(2.1100e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4043e-09, dtype=torch.float64)
secont condition:: tensor(1.4043e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8569e-09, dtype=torch.float64)
secont condition:: tensor(1.8569e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3069e-09, dtype=torch.float64)
secont condition:: tensor(4.3069e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1504e-09, dtype=torch.float64)
secont condition:: tensor(6.1504e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7694e-09, dtype=torch.float64)
secont condition:: tensor(6.7694e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9206e-09, dtype=torch.float64)
secont condition:: tensor(9.9206e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1021e-08, dtype=torch.float64)
secont condition:: tensor(1.1021e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7796e-08, dtype=torch.float64)
secont condition:: tensor(1.7796e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2511e-08, dtype=torch.float64)
secont condition:: tensor(1.2511e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3969e-08, dtype=torch.float64)
secont condition:: tensor(1.3969e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6661e-08, dtype=torch.float64)
secont condition:: tensor(1.6661e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7996e-08, dtype=torch.float64)
secont condition:: tensor(1.7996e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9916e-08, dtype=torch.float64)
secont condition:: tensor(1.9916e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0167e-08, dtype=torch.float64)
secont condition:: tensor(2.0167e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1835e-08, dtype=torch.float64)
secont condition:: tensor(2.1835e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6230e-08, dtype=torch.float64)
secont condition:: tensor(2.6230e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1658e-08, dtype=torch.float64)
secont condition:: tensor(2.1658e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8261e-08, dtype=torch.float64)
secont condition:: tensor(2.8261e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6045e-08, dtype=torch.float64)
secont condition:: tensor(2.6045e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1188e-08, dtype=torch.float64)
secont condition:: tensor(3.1188e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8378e-08, dtype=torch.float64)
secont condition:: tensor(2.8378e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8986e-08, dtype=torch.float64)
secont condition:: tensor(2.8986e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0931e-08, dtype=torch.float64)
secont condition:: tensor(3.0931e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9368e-08, dtype=torch.float64)
secont condition:: tensor(2.9368e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1656e-08, dtype=torch.float64)
secont condition:: tensor(3.1656e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2775e-08, dtype=torch.float64)
secont condition:: tensor(3.2775e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6984e-08, dtype=torch.float64)
secont condition:: tensor(3.6984e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0036e-08, dtype=torch.float64)
secont condition:: tensor(4.0036e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8403e-08, dtype=torch.float64)
secont condition:: tensor(3.8403e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7676e-08, dtype=torch.float64)
secont condition:: tensor(3.7676e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7983e-08, dtype=torch.float64)
secont condition:: tensor(3.7983e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6521e-08, dtype=torch.float64)
secont condition:: tensor(3.6521e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3433e-08, dtype=torch.float64)
secont condition:: tensor(4.3433e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1767e-08, dtype=torch.float64)
secont condition:: tensor(4.1767e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6049e-08, dtype=torch.float64)
secont condition:: tensor(4.6049e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5573e-08, dtype=torch.float64)
secont condition:: tensor(3.5573e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5638e-08, dtype=torch.float64)
secont condition:: tensor(4.5638e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0731e-08, dtype=torch.float64)
secont condition:: tensor(5.0731e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0002e-08, dtype=torch.float64)
secont condition:: tensor(5.0002e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6710e-08, dtype=torch.float64)
secont condition:: tensor(5.6710e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9789e-08, dtype=torch.float64)
secont condition:: tensor(6.9789e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2342e-08, dtype=torch.float64)
secont condition:: tensor(6.2342e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8133e-08, dtype=torch.float64)
secont condition:: tensor(6.8133e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2354e-08, dtype=torch.float64)
secont condition:: tensor(6.2354e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1241e-08, dtype=torch.float64)
secont condition:: tensor(7.1241e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8114e-08, dtype=torch.float64)
secont condition:: tensor(7.8114e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8669e-08, dtype=torch.float64)
secont condition:: tensor(7.8669e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2941e-08, dtype=torch.float64)
secont condition:: tensor(8.2941e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5701e-08, dtype=torch.float64)
secont condition:: tensor(8.5701e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7074e-08, dtype=torch.float64)
secont condition:: tensor(8.7074e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1927e-08, dtype=torch.float64)
secont condition:: tensor(8.1927e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6544e-08, dtype=torch.float64)
secont condition:: tensor(9.6544e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0323e-07, dtype=torch.float64)
secont condition:: tensor(1.0323e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0319e-07, dtype=torch.float64)
secont condition:: tensor(1.0319e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1507e-07, dtype=torch.float64)
secont condition:: tensor(1.1507e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0473e-07, dtype=torch.float64)
secont condition:: tensor(1.0473e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0626e-07, dtype=torch.float64)
secont condition:: tensor(1.0626e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2664e-07, dtype=torch.float64)
secont condition:: tensor(1.2664e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2246e-07, dtype=torch.float64)
secont condition:: tensor(1.2246e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2060e-07, dtype=torch.float64)
secont condition:: tensor(1.2060e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2027e-07, dtype=torch.float64)
secont condition:: tensor(1.2027e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3730e-07, dtype=torch.float64)
secont condition:: tensor(1.3730e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4360e-07, dtype=torch.float64)
secont condition:: tensor(1.4360e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.924669981002808
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0011e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1111e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7469e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250500
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.235615
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229220
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.222910
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.219630
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.217640
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.220256
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.216836
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218459
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.217412
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.215006
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.223698
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217365
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.214676
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.215261
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216720
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.219433
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.213038
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.220896
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.212992
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.212741
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.214776
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.215774
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.217102
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214410
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217308
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.214170
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215715
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.217840
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.218512
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217245
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.215135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.217662
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.215713
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.217720
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.210846
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.219398
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.214948
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.218294
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.218419
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.217873
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.220365
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.216904
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.216819
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.219286
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.213612
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.220723
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.212443
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.216710
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.216110
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216498
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.217673
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.213158
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.207954
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.216841
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216628
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.215786
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.217355
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215729
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.216489
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.49573087692261
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.35421133041382
time_baseline:: 45.48620820045471
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5752e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7537e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5643e-09, dtype=torch.float64)
secont condition:: tensor(1.5643e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2681e-09, dtype=torch.float64)
secont condition:: tensor(1.2681e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4049e-09, dtype=torch.float64)
secont condition:: tensor(4.4049e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8544e-09, dtype=torch.float64)
secont condition:: tensor(3.8544e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1529e-09, dtype=torch.float64)
secont condition:: tensor(5.1529e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3885e-09, dtype=torch.float64)
secont condition:: tensor(6.3885e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2691e-09, dtype=torch.float64)
secont condition:: tensor(8.2691e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0611e-08, dtype=torch.float64)
secont condition:: tensor(1.0611e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0909e-08, dtype=torch.float64)
secont condition:: tensor(1.0909e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3207e-08, dtype=torch.float64)
secont condition:: tensor(1.3207e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4916e-08, dtype=torch.float64)
secont condition:: tensor(1.4916e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6410e-08, dtype=torch.float64)
secont condition:: tensor(1.6410e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8572e-08, dtype=torch.float64)
secont condition:: tensor(1.8572e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8391e-08, dtype=torch.float64)
secont condition:: tensor(1.8391e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9667e-08, dtype=torch.float64)
secont condition:: tensor(1.9667e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3269e-08, dtype=torch.float64)
secont condition:: tensor(2.3269e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8750e-08, dtype=torch.float64)
secont condition:: tensor(2.8750e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3079e-08, dtype=torch.float64)
secont condition:: tensor(2.3079e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4941e-08, dtype=torch.float64)
secont condition:: tensor(2.4941e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8395e-08, dtype=torch.float64)
secont condition:: tensor(2.8395e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4617e-08, dtype=torch.float64)
secont condition:: tensor(3.4617e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7339e-08, dtype=torch.float64)
secont condition:: tensor(2.7339e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9595e-08, dtype=torch.float64)
secont condition:: tensor(2.9595e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2489e-08, dtype=torch.float64)
secont condition:: tensor(3.2489e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2613e-08, dtype=torch.float64)
secont condition:: tensor(3.2613e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1424e-08, dtype=torch.float64)
secont condition:: tensor(3.1424e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0347e-08, dtype=torch.float64)
secont condition:: tensor(4.0347e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3610e-08, dtype=torch.float64)
secont condition:: tensor(3.3610e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5122e-08, dtype=torch.float64)
secont condition:: tensor(3.5122e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7890e-08, dtype=torch.float64)
secont condition:: tensor(3.7890e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0474e-08, dtype=torch.float64)
secont condition:: tensor(3.0474e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9911e-08, dtype=torch.float64)
secont condition:: tensor(3.9911e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6576e-08, dtype=torch.float64)
secont condition:: tensor(4.6576e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3087e-08, dtype=torch.float64)
secont condition:: tensor(4.3087e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3880e-08, dtype=torch.float64)
secont condition:: tensor(4.3880e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5191e-08, dtype=torch.float64)
secont condition:: tensor(4.5191e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1309e-08, dtype=torch.float64)
secont condition:: tensor(4.1309e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1113e-08, dtype=torch.float64)
secont condition:: tensor(4.1113e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7977e-08, dtype=torch.float64)
secont condition:: tensor(3.7977e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0274e-08, dtype=torch.float64)
secont condition:: tensor(5.0274e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3232e-08, dtype=torch.float64)
secont condition:: tensor(5.3232e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1072e-08, dtype=torch.float64)
secont condition:: tensor(6.1072e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2196e-08, dtype=torch.float64)
secont condition:: tensor(6.2196e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9077e-08, dtype=torch.float64)
secont condition:: tensor(6.9077e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2134e-08, dtype=torch.float64)
secont condition:: tensor(6.2134e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2752e-08, dtype=torch.float64)
secont condition:: tensor(7.2752e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5965e-08, dtype=torch.float64)
secont condition:: tensor(7.5965e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1303e-08, dtype=torch.float64)
secont condition:: tensor(8.1303e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4533e-08, dtype=torch.float64)
secont condition:: tensor(7.4533e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5897e-08, dtype=torch.float64)
secont condition:: tensor(7.5897e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5226e-08, dtype=torch.float64)
secont condition:: tensor(9.5226e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1187e-08, dtype=torch.float64)
secont condition:: tensor(9.1187e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3574e-08, dtype=torch.float64)
secont condition:: tensor(8.3574e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7876e-08, dtype=torch.float64)
secont condition:: tensor(9.7876e-08, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1308e-07, dtype=torch.float64)
secont condition:: tensor(1.1308e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0801e-07, dtype=torch.float64)
secont condition:: tensor(1.0801e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1289e-07, dtype=torch.float64)
secont condition:: tensor(1.1289e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0506e-07, dtype=torch.float64)
secont condition:: tensor(1.0506e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2135e-07, dtype=torch.float64)
secont condition:: tensor(1.2135e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2739e-07, dtype=torch.float64)
secont condition:: tensor(1.2739e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3668e-07, dtype=torch.float64)
secont condition:: tensor(1.3668e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5278e-07, dtype=torch.float64)
secont condition:: tensor(1.5278e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2213e-07, dtype=torch.float64)
secont condition:: tensor(1.2213e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3104e-07, dtype=torch.float64)
secont condition:: tensor(1.3104e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.875548362731934
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1682e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0215e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1965e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6151e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7232e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255073
Test Avg. Loss: 0.000022, Accuracy: 0.940400
Train - Epoch 1, Batch: 0, Loss: 0.229634
Test Avg. Loss: 0.000022, Accuracy: 0.942500
Train - Epoch 2, Batch: 0, Loss: 0.221357
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.210367
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.219784
Test Avg. Loss: 0.000021, Accuracy: 0.945300
Train - Epoch 5, Batch: 0, Loss: 0.218287
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 6, Batch: 0, Loss: 0.215283
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.219401
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.222512
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.222954
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.211053
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.214546
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.215232
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.210845
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.211327
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.214664
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.214296
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.210102
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.223469
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.212157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.213338
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.213737
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.217671
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 23, Batch: 0, Loss: 0.211087
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 24, Batch: 0, Loss: 0.211257
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.218995
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 26, Batch: 0, Loss: 0.216189
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.217743
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.209316
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.213979
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.214629
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.216570
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.10305690765381
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.90776538848877
time_baseline:: 22.978702068328857
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0545e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0855e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0550e-09, dtype=torch.float64)
secont condition:: tensor(2.0550e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3152e-09, dtype=torch.float64)
secont condition:: tensor(3.3152e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3772e-09, dtype=torch.float64)
secont condition:: tensor(4.3772e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7012e-09, dtype=torch.float64)
secont condition:: tensor(3.7012e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2162e-09, dtype=torch.float64)
secont condition:: tensor(4.2162e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4965e-09, dtype=torch.float64)
secont condition:: tensor(3.4965e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7494e-09, dtype=torch.float64)
secont condition:: tensor(5.7494e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-08, dtype=torch.float64)
secont condition:: tensor(1.3010e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5034e-08, dtype=torch.float64)
secont condition:: tensor(1.5034e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5818e-08, dtype=torch.float64)
secont condition:: tensor(1.5818e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2034e-08, dtype=torch.float64)
secont condition:: tensor(2.2034e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8758e-08, dtype=torch.float64)
secont condition:: tensor(1.8758e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9116e-08, dtype=torch.float64)
secont condition:: tensor(1.9116e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1004e-08, dtype=torch.float64)
secont condition:: tensor(2.1004e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4707e-08, dtype=torch.float64)
secont condition:: tensor(2.4707e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3471e-08, dtype=torch.float64)
secont condition:: tensor(2.3471e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7677e-08, dtype=torch.float64)
secont condition:: tensor(1.7677e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1790e-08, dtype=torch.float64)
secont condition:: tensor(2.1790e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2181e-08, dtype=torch.float64)
secont condition:: tensor(2.2181e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6863e-08, dtype=torch.float64)
secont condition:: tensor(2.6863e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3069e-08, dtype=torch.float64)
secont condition:: tensor(3.3069e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9905e-08, dtype=torch.float64)
secont condition:: tensor(3.9905e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4082e-08, dtype=torch.float64)
secont condition:: tensor(3.4082e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7160e-08, dtype=torch.float64)
secont condition:: tensor(2.7160e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0140e-08, dtype=torch.float64)
secont condition:: tensor(3.0140e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7486e-08, dtype=torch.float64)
secont condition:: tensor(3.7486e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5697e-08, dtype=torch.float64)
secont condition:: tensor(3.5697e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0522e-08, dtype=torch.float64)
secont condition:: tensor(3.0522e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3556e-08, dtype=torch.float64)
secont condition:: tensor(3.3556e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6839e-08, dtype=torch.float64)
secont condition:: tensor(3.6839e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8116e-08, dtype=torch.float64)
secont condition:: tensor(3.8116e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4515e-08, dtype=torch.float64)
secont condition:: tensor(3.4515e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7331e-08, dtype=torch.float64)
secont condition:: tensor(3.7331e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4892e-08, dtype=torch.float64)
secont condition:: tensor(4.4892e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2424e-08, dtype=torch.float64)
secont condition:: tensor(4.2424e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0925e-08, dtype=torch.float64)
secont condition:: tensor(4.0925e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2233e-08, dtype=torch.float64)
secont condition:: tensor(3.2233e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9854e-08, dtype=torch.float64)
secont condition:: tensor(3.9854e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1059e-08, dtype=torch.float64)
secont condition:: tensor(4.1059e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3500e-08, dtype=torch.float64)
secont condition:: tensor(4.3500e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2063e-08, dtype=torch.float64)
secont condition:: tensor(5.2063e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0759e-08, dtype=torch.float64)
secont condition:: tensor(8.0759e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4532e-08, dtype=torch.float64)
secont condition:: tensor(9.4532e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7767e-08, dtype=torch.float64)
secont condition:: tensor(8.7767e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3180e-08, dtype=torch.float64)
secont condition:: tensor(9.3180e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5031e-08, dtype=torch.float64)
secont condition:: tensor(9.5031e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2549e-07, dtype=torch.float64)
secont condition:: tensor(1.2549e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2161e-07, dtype=torch.float64)
secont condition:: tensor(1.2161e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3743e-07, dtype=torch.float64)
secont condition:: tensor(1.3743e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3946e-07, dtype=torch.float64)
secont condition:: tensor(1.3946e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0917e-07, dtype=torch.float64)
secont condition:: tensor(1.0917e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4040e-07, dtype=torch.float64)
secont condition:: tensor(1.4040e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4018e-07, dtype=torch.float64)
secont condition:: tensor(1.4018e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2660e-07, dtype=torch.float64)
secont condition:: tensor(1.2660e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5436e-07, dtype=torch.float64)
secont condition:: tensor(1.5436e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4691e-07, dtype=torch.float64)
secont condition:: tensor(1.4691e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5460e-07, dtype=torch.float64)
secont condition:: tensor(1.5460e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5207e-07, dtype=torch.float64)
secont condition:: tensor(1.5207e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 6.018446922302246
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6838e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0387e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2997e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0325e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250908
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.228702
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.226017
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.216230
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.221154
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.218214
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.206621
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.216954
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.214242
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.220802
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.215458
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 11, Batch: 0, Loss: 0.217456
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.221902
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.215037
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.216818
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.214056
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.215698
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.216541
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.212736
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 19, Batch: 0, Loss: 0.211595
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.223919
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 21, Batch: 0, Loss: 0.221170
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.215830
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 23, Batch: 0, Loss: 0.213348
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 24, Batch: 0, Loss: 0.210846
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.209009
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.210474
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.216581
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.219397
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.212612
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.214466
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.214831
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 30.784422159194946
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.639553546905518
time_baseline:: 22.719897747039795
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0430e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0001e-09, dtype=torch.float64)
secont condition:: tensor(3.0001e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4638e-09, dtype=torch.float64)
secont condition:: tensor(4.4638e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1807e-09, dtype=torch.float64)
secont condition:: tensor(3.1807e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1647e-09, dtype=torch.float64)
secont condition:: tensor(3.1647e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8055e-09, dtype=torch.float64)
secont condition:: tensor(4.8055e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5067e-09, dtype=torch.float64)
secont condition:: tensor(5.5067e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4579e-09, dtype=torch.float64)
secont condition:: tensor(8.4579e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2106e-08, dtype=torch.float64)
secont condition:: tensor(1.2106e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1551e-08, dtype=torch.float64)
secont condition:: tensor(1.1551e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4691e-09, dtype=torch.float64)
secont condition:: tensor(8.4691e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0351e-08, dtype=torch.float64)
secont condition:: tensor(2.0351e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5024e-08, dtype=torch.float64)
secont condition:: tensor(1.5024e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5264e-08, dtype=torch.float64)
secont condition:: tensor(1.5264e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1664e-08, dtype=torch.float64)
secont condition:: tensor(1.1664e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4687e-08, dtype=torch.float64)
secont condition:: tensor(2.4687e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0364e-08, dtype=torch.float64)
secont condition:: tensor(2.0364e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5746e-08, dtype=torch.float64)
secont condition:: tensor(1.5746e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5390e-08, dtype=torch.float64)
secont condition:: tensor(1.5390e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6958e-08, dtype=torch.float64)
secont condition:: tensor(1.6958e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6708e-08, dtype=torch.float64)
secont condition:: tensor(3.6708e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8390e-08, dtype=torch.float64)
secont condition:: tensor(2.8390e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5401e-08, dtype=torch.float64)
secont condition:: tensor(2.5401e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9501e-08, dtype=torch.float64)
secont condition:: tensor(2.9501e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9283e-08, dtype=torch.float64)
secont condition:: tensor(3.9283e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1927e-08, dtype=torch.float64)
secont condition:: tensor(4.1927e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4473e-08, dtype=torch.float64)
secont condition:: tensor(3.4473e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3992e-08, dtype=torch.float64)
secont condition:: tensor(3.3992e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4970e-08, dtype=torch.float64)
secont condition:: tensor(4.4970e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3164e-08, dtype=torch.float64)
secont condition:: tensor(4.3164e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1495e-08, dtype=torch.float64)
secont condition:: tensor(5.1495e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0915e-08, dtype=torch.float64)
secont condition:: tensor(5.0915e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2194e-08, dtype=torch.float64)
secont condition:: tensor(4.2194e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9578e-08, dtype=torch.float64)
secont condition:: tensor(3.9578e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8822e-08, dtype=torch.float64)
secont condition:: tensor(4.8822e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2617e-08, dtype=torch.float64)
secont condition:: tensor(4.2617e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6988e-08, dtype=torch.float64)
secont condition:: tensor(4.6988e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0998e-08, dtype=torch.float64)
secont condition:: tensor(6.0998e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3713e-08, dtype=torch.float64)
secont condition:: tensor(4.3713e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8212e-08, dtype=torch.float64)
secont condition:: tensor(5.8212e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3946e-08, dtype=torch.float64)
secont condition:: tensor(5.3946e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0241e-08, dtype=torch.float64)
secont condition:: tensor(5.0241e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2029e-08, dtype=torch.float64)
secont condition:: tensor(6.2029e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9036e-08, dtype=torch.float64)
secont condition:: tensor(6.9036e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9557e-08, dtype=torch.float64)
secont condition:: tensor(6.9557e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0052e-08, dtype=torch.float64)
secont condition:: tensor(8.0052e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8618e-08, dtype=torch.float64)
secont condition:: tensor(9.8618e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2471e-08, dtype=torch.float64)
secont condition:: tensor(9.2471e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0849e-07, dtype=torch.float64)
secont condition:: tensor(1.0849e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1414e-07, dtype=torch.float64)
secont condition:: tensor(1.1414e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0152e-07, dtype=torch.float64)
secont condition:: tensor(1.0152e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2494e-07, dtype=torch.float64)
secont condition:: tensor(1.2494e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2823e-07, dtype=torch.float64)
secont condition:: tensor(1.2823e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2079e-07, dtype=torch.float64)
secont condition:: tensor(1.2079e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4269e-07, dtype=torch.float64)
secont condition:: tensor(1.4269e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2508e-07, dtype=torch.float64)
secont condition:: tensor(1.2508e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3375e-07, dtype=torch.float64)
secont condition:: tensor(1.3375e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2002e-07, dtype=torch.float64)
secont condition:: tensor(1.2002e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4111e-07, dtype=torch.float64)
secont condition:: tensor(1.4111e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8604e-07, dtype=torch.float64)
secont condition:: tensor(1.8604e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5912e-07, dtype=torch.float64)
secont condition:: tensor(1.5912e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.872961759567261
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9022e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2590e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7227e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1149e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250836
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.235085
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.223366
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.222236
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 4, Batch: 0, Loss: 0.217098
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.225153
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.217246
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.218254
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.217494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.218511
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.216026
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.218317
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.212944
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 13, Batch: 0, Loss: 0.223386
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 14, Batch: 0, Loss: 0.211075
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.223560
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 16, Batch: 0, Loss: 0.219392
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.215190
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.216848
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.211969
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.217257
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.214694
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.211796
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.214877
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.213595
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.212658
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.219828
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.212748
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.211417
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.214614
Test Avg. Loss: 0.000021, Accuracy: 0.946100
Train - Epoch 30, Batch: 0, Loss: 0.215695
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.215316
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 30.779698371887207
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.515153169631958
time_baseline:: 22.58466863632202
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8408e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0217e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8240e-09, dtype=torch.float64)
secont condition:: tensor(2.8240e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6399e-09, dtype=torch.float64)
secont condition:: tensor(5.6399e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2620e-09, dtype=torch.float64)
secont condition:: tensor(3.2620e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7472e-09, dtype=torch.float64)
secont condition:: tensor(2.7472e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5453e-09, dtype=torch.float64)
secont condition:: tensor(3.5453e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9621e-09, dtype=torch.float64)
secont condition:: tensor(7.9621e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6659e-09, dtype=torch.float64)
secont condition:: tensor(6.6659e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3005e-08, dtype=torch.float64)
secont condition:: tensor(1.3005e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6780e-08, dtype=torch.float64)
secont condition:: tensor(2.6780e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1270e-08, dtype=torch.float64)
secont condition:: tensor(2.1270e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6137e-08, dtype=torch.float64)
secont condition:: tensor(1.6137e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6024e-08, dtype=torch.float64)
secont condition:: tensor(1.6024e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6384e-08, dtype=torch.float64)
secont condition:: tensor(1.6384e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0633e-08, dtype=torch.float64)
secont condition:: tensor(2.0633e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2407e-08, dtype=torch.float64)
secont condition:: tensor(2.2407e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0274e-08, dtype=torch.float64)
secont condition:: tensor(2.0274e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4522e-08, dtype=torch.float64)
secont condition:: tensor(2.4522e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2879e-08, dtype=torch.float64)
secont condition:: tensor(3.2879e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6519e-08, dtype=torch.float64)
secont condition:: tensor(2.6519e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5214e-08, dtype=torch.float64)
secont condition:: tensor(2.5214e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9310e-08, dtype=torch.float64)
secont condition:: tensor(2.9310e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8642e-08, dtype=torch.float64)
secont condition:: tensor(2.8642e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4202e-08, dtype=torch.float64)
secont condition:: tensor(2.4202e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2363e-08, dtype=torch.float64)
secont condition:: tensor(3.2363e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5648e-08, dtype=torch.float64)
secont condition:: tensor(2.5648e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8831e-08, dtype=torch.float64)
secont condition:: tensor(1.8831e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1742e-08, dtype=torch.float64)
secont condition:: tensor(2.1742e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4026e-08, dtype=torch.float64)
secont condition:: tensor(4.4026e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7999e-08, dtype=torch.float64)
secont condition:: tensor(4.7999e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1798e-08, dtype=torch.float64)
secont condition:: tensor(5.1798e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9270e-08, dtype=torch.float64)
secont condition:: tensor(3.9270e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7697e-08, dtype=torch.float64)
secont condition:: tensor(4.7697e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1839e-08, dtype=torch.float64)
secont condition:: tensor(6.1839e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2216e-08, dtype=torch.float64)
secont condition:: tensor(6.2216e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5564e-08, dtype=torch.float64)
secont condition:: tensor(4.5564e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4296e-08, dtype=torch.float64)
secont condition:: tensor(4.4296e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8986e-08, dtype=torch.float64)
secont condition:: tensor(3.8986e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2418e-08, dtype=torch.float64)
secont condition:: tensor(3.2418e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8132e-08, dtype=torch.float64)
secont condition:: tensor(5.8132e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3959e-08, dtype=torch.float64)
secont condition:: tensor(7.3959e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8294e-08, dtype=torch.float64)
secont condition:: tensor(5.8294e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1471e-08, dtype=torch.float64)
secont condition:: tensor(7.1471e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5261e-08, dtype=torch.float64)
secont condition:: tensor(7.5261e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7348e-08, dtype=torch.float64)
secont condition:: tensor(9.7348e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0142e-08, dtype=torch.float64)
secont condition:: tensor(9.0142e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0467e-07, dtype=torch.float64)
secont condition:: tensor(1.0467e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0424e-07, dtype=torch.float64)
secont condition:: tensor(1.0424e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1474e-07, dtype=torch.float64)
secont condition:: tensor(1.1474e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2540e-08, dtype=torch.float64)
secont condition:: tensor(9.2540e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-07, dtype=torch.float64)
secont condition:: tensor(1.2170e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9103e-08, dtype=torch.float64)
secont condition:: tensor(8.9103e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2409e-07, dtype=torch.float64)
secont condition:: tensor(1.2409e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5589e-07, dtype=torch.float64)
secont condition:: tensor(1.5589e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3637e-07, dtype=torch.float64)
secont condition:: tensor(1.3637e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6757e-07, dtype=torch.float64)
secont condition:: tensor(1.6757e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3929e-07, dtype=torch.float64)
secont condition:: tensor(1.3929e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4746e-07, dtype=torch.float64)
secont condition:: tensor(1.4746e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9062e-07, dtype=torch.float64)
secont condition:: tensor(1.9062e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6917e-07, dtype=torch.float64)
secont condition:: tensor(1.6917e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5198e-07, dtype=torch.float64)
secont condition:: tensor(1.5198e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.95050048828125
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6210e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4921e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8623e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7919e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1262e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.249576
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.232269
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 2, Batch: 0, Loss: 0.222566
Test Avg. Loss: 0.000021, Accuracy: 0.944300
Train - Epoch 3, Batch: 0, Loss: 0.221847
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 4, Batch: 0, Loss: 0.221764
Test Avg. Loss: 0.000021, Accuracy: 0.945300
Train - Epoch 5, Batch: 0, Loss: 0.219806
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.214974
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.216590
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.219379
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.215946
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.220705
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.215426
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 12, Batch: 0, Loss: 0.218921
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.219223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.217328
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.211398
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.211437
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.210500
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.211539
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.218620
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.218506
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.208688
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.216876
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.216990
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217049
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.219543
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.210961
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.217200
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.216261
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 30, Batch: 0, Loss: 0.216759
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.214730
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 31.110355138778687
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.71977686882019
time_baseline:: 22.789682149887085
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8314e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9593e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6166e-09, dtype=torch.float64)
secont condition:: tensor(2.6166e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3315e-09, dtype=torch.float64)
secont condition:: tensor(2.3315e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5928e-09, dtype=torch.float64)
secont condition:: tensor(1.5928e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8314e-09, dtype=torch.float64)
secont condition:: tensor(5.8314e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9694e-09, dtype=torch.float64)
secont condition:: tensor(6.9694e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1773e-09, dtype=torch.float64)
secont condition:: tensor(9.1773e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1117e-08, dtype=torch.float64)
secont condition:: tensor(1.1117e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4490e-08, dtype=torch.float64)
secont condition:: tensor(1.4490e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1573e-08, dtype=torch.float64)
secont condition:: tensor(1.1573e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2131e-08, dtype=torch.float64)
secont condition:: tensor(1.2131e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8200e-08, dtype=torch.float64)
secont condition:: tensor(1.8200e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2616e-08, dtype=torch.float64)
secont condition:: tensor(2.2616e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7289e-08, dtype=torch.float64)
secont condition:: tensor(2.7289e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2640e-08, dtype=torch.float64)
secont condition:: tensor(2.2640e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4702e-08, dtype=torch.float64)
secont condition:: tensor(2.4702e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8374e-08, dtype=torch.float64)
secont condition:: tensor(2.8374e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8359e-08, dtype=torch.float64)
secont condition:: tensor(3.8359e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8695e-08, dtype=torch.float64)
secont condition:: tensor(2.8695e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2436e-08, dtype=torch.float64)
secont condition:: tensor(2.2436e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2424e-08, dtype=torch.float64)
secont condition:: tensor(3.2424e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4016e-08, dtype=torch.float64)
secont condition:: tensor(4.4016e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8908e-08, dtype=torch.float64)
secont condition:: tensor(4.8908e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0379e-08, dtype=torch.float64)
secont condition:: tensor(4.0379e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2809e-08, dtype=torch.float64)
secont condition:: tensor(3.2809e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7689e-08, dtype=torch.float64)
secont condition:: tensor(3.7689e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6409e-08, dtype=torch.float64)
secont condition:: tensor(3.6409e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3123e-08, dtype=torch.float64)
secont condition:: tensor(3.3123e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4012e-08, dtype=torch.float64)
secont condition:: tensor(3.4012e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4961e-08, dtype=torch.float64)
secont condition:: tensor(4.4961e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6677e-08, dtype=torch.float64)
secont condition:: tensor(5.6677e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2956e-08, dtype=torch.float64)
secont condition:: tensor(4.2956e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5457e-08, dtype=torch.float64)
secont condition:: tensor(3.5457e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9280e-08, dtype=torch.float64)
secont condition:: tensor(3.9280e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3040e-08, dtype=torch.float64)
secont condition:: tensor(4.3040e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0500e-08, dtype=torch.float64)
secont condition:: tensor(4.0500e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3147e-08, dtype=torch.float64)
secont condition:: tensor(4.3147e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8717e-08, dtype=torch.float64)
secont condition:: tensor(4.8717e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4568e-08, dtype=torch.float64)
secont condition:: tensor(5.4568e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3084e-08, dtype=torch.float64)
secont condition:: tensor(4.3084e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9019e-08, dtype=torch.float64)
secont condition:: tensor(8.9019e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5697e-08, dtype=torch.float64)
secont condition:: tensor(9.5697e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0775e-07, dtype=torch.float64)
secont condition:: tensor(1.0775e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0518e-07, dtype=torch.float64)
secont condition:: tensor(1.0518e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0204e-07, dtype=torch.float64)
secont condition:: tensor(1.0204e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6865e-08, dtype=torch.float64)
secont condition:: tensor(9.6865e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4351e-08, dtype=torch.float64)
secont condition:: tensor(9.4351e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3307e-07, dtype=torch.float64)
secont condition:: tensor(1.3307e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5110e-07, dtype=torch.float64)
secont condition:: tensor(1.5110e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0515e-07, dtype=torch.float64)
secont condition:: tensor(1.0515e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3590e-07, dtype=torch.float64)
secont condition:: tensor(1.3590e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0660e-07, dtype=torch.float64)
secont condition:: tensor(1.0660e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5294e-07, dtype=torch.float64)
secont condition:: tensor(1.5294e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3151e-07, dtype=torch.float64)
secont condition:: tensor(1.3151e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3959e-07, dtype=torch.float64)
secont condition:: tensor(1.3959e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-07, dtype=torch.float64)
secont condition:: tensor(1.7534e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6094e-07, dtype=torch.float64)
secont condition:: tensor(1.6094e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4864e-07, dtype=torch.float64)
secont condition:: tensor(1.4864e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4493e-07, dtype=torch.float64)
secont condition:: tensor(1.4493e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.937363862991333
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8401e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2216e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0681e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9387e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.244676
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.222578
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.220424
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.944700
Train - Epoch 4, Batch: 0, Loss: 0.219437
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.215428
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.212698
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.217503
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.206361
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 9, Batch: 0, Loss: 0.215359
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.219943
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.222471
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.215256
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.218989
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.218351
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 15, Batch: 0, Loss: 0.212190
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.216897
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.215721
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 18, Batch: 0, Loss: 0.223052
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 19, Batch: 0, Loss: 0.224186
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.211450
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.209558
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.221207
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217651
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.214839
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.211105
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 26, Batch: 0, Loss: 0.216564
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213653
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.213293
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.215041
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.215893
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.221059
Test Avg. Loss: 0.000021, Accuracy: 0.946000
training_time:: 30.824097871780396
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.64773964881897
time_baseline:: 22.72104573249817
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8167e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0164e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7944e-09, dtype=torch.float64)
secont condition:: tensor(2.7944e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3886e-09, dtype=torch.float64)
secont condition:: tensor(4.3886e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1662e-09, dtype=torch.float64)
secont condition:: tensor(3.1662e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9256e-09, dtype=torch.float64)
secont condition:: tensor(3.9256e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7722e-09, dtype=torch.float64)
secont condition:: tensor(9.7722e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1993e-09, dtype=torch.float64)
secont condition:: tensor(7.1993e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9708e-09, dtype=torch.float64)
secont condition:: tensor(8.9708e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0628e-08, dtype=torch.float64)
secont condition:: tensor(1.0628e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1505e-09, dtype=torch.float64)
secont condition:: tensor(9.1505e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0112e-08, dtype=torch.float64)
secont condition:: tensor(1.0112e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2769e-08, dtype=torch.float64)
secont condition:: tensor(1.2769e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1443e-08, dtype=torch.float64)
secont condition:: tensor(2.1443e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2247e-08, dtype=torch.float64)
secont condition:: tensor(2.2247e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3377e-08, dtype=torch.float64)
secont condition:: tensor(2.3377e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9681e-08, dtype=torch.float64)
secont condition:: tensor(2.9681e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6717e-08, dtype=torch.float64)
secont condition:: tensor(2.6717e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1193e-08, dtype=torch.float64)
secont condition:: tensor(3.1193e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7059e-08, dtype=torch.float64)
secont condition:: tensor(2.7059e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0383e-08, dtype=torch.float64)
secont condition:: tensor(2.0383e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9634e-08, dtype=torch.float64)
secont condition:: tensor(2.9634e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6122e-08, dtype=torch.float64)
secont condition:: tensor(3.6122e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4832e-08, dtype=torch.float64)
secont condition:: tensor(3.4832e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5463e-08, dtype=torch.float64)
secont condition:: tensor(2.5463e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3181e-08, dtype=torch.float64)
secont condition:: tensor(4.3181e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3582e-08, dtype=torch.float64)
secont condition:: tensor(4.3582e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2341e-08, dtype=torch.float64)
secont condition:: tensor(4.2341e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1608e-08, dtype=torch.float64)
secont condition:: tensor(4.1608e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8487e-08, dtype=torch.float64)
secont condition:: tensor(4.8487e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4265e-08, dtype=torch.float64)
secont condition:: tensor(4.4265e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5476e-08, dtype=torch.float64)
secont condition:: tensor(4.5476e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8856e-08, dtype=torch.float64)
secont condition:: tensor(4.8856e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5603e-08, dtype=torch.float64)
secont condition:: tensor(4.5603e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0322e-08, dtype=torch.float64)
secont condition:: tensor(5.0322e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9194e-08, dtype=torch.float64)
secont condition:: tensor(3.9194e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5274e-08, dtype=torch.float64)
secont condition:: tensor(4.5274e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3436e-08, dtype=torch.float64)
secont condition:: tensor(4.3436e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2770e-08, dtype=torch.float64)
secont condition:: tensor(4.2770e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8367e-08, dtype=torch.float64)
secont condition:: tensor(3.8367e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5277e-08, dtype=torch.float64)
secont condition:: tensor(4.5277e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6737e-08, dtype=torch.float64)
secont condition:: tensor(4.6737e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0287e-08, dtype=torch.float64)
secont condition:: tensor(5.0287e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4466e-08, dtype=torch.float64)
secont condition:: tensor(5.4466e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3408e-08, dtype=torch.float64)
secont condition:: tensor(6.3408e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4221e-08, dtype=torch.float64)
secont condition:: tensor(8.4221e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1008e-08, dtype=torch.float64)
secont condition:: tensor(8.1008e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3780e-08, dtype=torch.float64)
secont condition:: tensor(7.3780e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9053e-08, dtype=torch.float64)
secont condition:: tensor(8.9053e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0102e-07, dtype=torch.float64)
secont condition:: tensor(1.0102e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0919e-08, dtype=torch.float64)
secont condition:: tensor(8.0919e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0137e-07, dtype=torch.float64)
secont condition:: tensor(1.0137e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0005e-07, dtype=torch.float64)
secont condition:: tensor(1.0005e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1595e-07, dtype=torch.float64)
secont condition:: tensor(1.1595e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2500e-07, dtype=torch.float64)
secont condition:: tensor(1.2500e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2413e-07, dtype=torch.float64)
secont condition:: tensor(1.2413e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1763e-07, dtype=torch.float64)
secont condition:: tensor(1.1763e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5171e-07, dtype=torch.float64)
secont condition:: tensor(1.5171e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3570e-07, dtype=torch.float64)
secont condition:: tensor(1.3570e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5150e-07, dtype=torch.float64)
secont condition:: tensor(1.5150e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6326e-07, dtype=torch.float64)
secont condition:: tensor(1.6326e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4415e-07, dtype=torch.float64)
secont condition:: tensor(1.4415e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.979103326797485
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7142e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0348e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9504e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.257813
Train - Epoch 0, Batch: 10, Loss: 0.213477
Test Avg. Loss: 0.000061, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.195584
Train - Epoch 1, Batch: 10, Loss: 0.229214
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.226453
Train - Epoch 2, Batch: 10, Loss: 0.209182
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 3, Batch: 0, Loss: 0.221902
Train - Epoch 3, Batch: 10, Loss: 0.214755
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.206124
Train - Epoch 4, Batch: 10, Loss: 0.222678
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.208729
Train - Epoch 5, Batch: 10, Loss: 0.211027
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.217909
Train - Epoch 6, Batch: 10, Loss: 0.217630
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.217277
Train - Epoch 7, Batch: 10, Loss: 0.227653
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 7.073561668395996
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.720476150512695
time_baseline:: 4.738076686859131
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8800e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3909e-07, dtype=torch.float64)
secont condition:: tensor(1.3909e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3011e-08, dtype=torch.float64)
secont condition:: tensor(9.3011e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3810e-08, dtype=torch.float64)
secont condition:: tensor(5.3810e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6885e-08, dtype=torch.float64)
secont condition:: tensor(3.6885e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6976e-08, dtype=torch.float64)
secont condition:: tensor(2.6976e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9099e-08, dtype=torch.float64)
secont condition:: tensor(2.9099e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2801e-08, dtype=torch.float64)
secont condition:: tensor(2.2801e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7914e-08, dtype=torch.float64)
secont condition:: tensor(2.7914e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5189e-08, dtype=torch.float64)
secont condition:: tensor(2.5189e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3740e-08, dtype=torch.float64)
secont condition:: tensor(2.3740e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5477e-08, dtype=torch.float64)
secont condition:: tensor(1.5477e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2729e-08, dtype=torch.float64)
secont condition:: tensor(1.2729e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3608e-08, dtype=torch.float64)
secont condition:: tensor(1.3608e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8253e-08, dtype=torch.float64)
secont condition:: tensor(3.8253e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0206e-08, dtype=torch.float64)
secont condition:: tensor(3.0206e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2752e-08, dtype=torch.float64)
secont condition:: tensor(3.2752e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0520e-08, dtype=torch.float64)
secont condition:: tensor(2.0520e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5984e-08, dtype=torch.float64)
secont condition:: tensor(1.5984e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6348e-08, dtype=torch.float64)
secont condition:: tensor(1.6348e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3163e-08, dtype=torch.float64)
secont condition:: tensor(2.3163e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6645e-08, dtype=torch.float64)
secont condition:: tensor(1.6645e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7619e-09, dtype=torch.float64)
secont condition:: tensor(3.7619e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2529e-08, dtype=torch.float64)
secont condition:: tensor(2.2529e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5600e-08, dtype=torch.float64)
secont condition:: tensor(1.5600e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6495e-08, dtype=torch.float64)
secont condition:: tensor(7.6495e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6463e-08, dtype=torch.float64)
secont condition:: tensor(5.6463e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2559e-08, dtype=torch.float64)
secont condition:: tensor(5.2559e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9880e-08, dtype=torch.float64)
secont condition:: tensor(7.9880e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0321e-08, dtype=torch.float64)
secont condition:: tensor(3.0321e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5211e-08, dtype=torch.float64)
secont condition:: tensor(5.5211e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6621e-08, dtype=torch.float64)
secont condition:: tensor(3.6621e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2807e-07, dtype=torch.float64)
secont condition:: tensor(1.2807e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9668e-08, dtype=torch.float64)
secont condition:: tensor(7.9668e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2803e-07, dtype=torch.float64)
secont condition:: tensor(1.2803e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1735e-08, dtype=torch.float64)
secont condition:: tensor(7.1735e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3495e-08, dtype=torch.float64)
secont condition:: tensor(5.3495e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7369e-08, dtype=torch.float64)
secont condition:: tensor(3.7369e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3150e-08, dtype=torch.float64)
secont condition:: tensor(3.3150e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7104e-08, dtype=torch.float64)
secont condition:: tensor(3.7104e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3482e-08, dtype=torch.float64)
secont condition:: tensor(7.3482e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5128e-07, dtype=torch.float64)
secont condition:: tensor(1.5128e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4084e-07, dtype=torch.float64)
secont condition:: tensor(1.4084e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1018e-07, dtype=torch.float64)
secont condition:: tensor(1.1018e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3156e-07, dtype=torch.float64)
secont condition:: tensor(1.3156e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5292e-07, dtype=torch.float64)
secont condition:: tensor(1.5292e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9381e-08, dtype=torch.float64)
secont condition:: tensor(9.9381e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0755e-08, dtype=torch.float64)
secont condition:: tensor(9.0755e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5014e-08, dtype=torch.float64)
secont condition:: tensor(7.5014e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8222e-07, dtype=torch.float64)
secont condition:: tensor(1.8222e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8515e-07, dtype=torch.float64)
secont condition:: tensor(1.8515e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7078e-08, dtype=torch.float64)
secont condition:: tensor(9.7078e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.6133534908294678
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6283e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.5839e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9616e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7199e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.265004
Train - Epoch 0, Batch: 10, Loss: 0.200543
Test Avg. Loss: 0.000061, Accuracy: 0.944900
Train - Epoch 1, Batch: 0, Loss: 0.225103
Train - Epoch 1, Batch: 10, Loss: 0.235019
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.228942
Train - Epoch 2, Batch: 10, Loss: 0.216044
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.224194
Train - Epoch 3, Batch: 10, Loss: 0.210745
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.230696
Train - Epoch 4, Batch: 10, Loss: 0.217150
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.209585
Train - Epoch 5, Batch: 10, Loss: 0.215268
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.210066
Train - Epoch 6, Batch: 10, Loss: 0.223110
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 7, Batch: 0, Loss: 0.209542
Train - Epoch 7, Batch: 10, Loss: 0.215240
Test Avg. Loss: 0.000060, Accuracy: 0.945700
training_time:: 7.165633201599121
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.772313356399536
time_baseline:: 4.792018890380859
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7969e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5104e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7548e-08, dtype=torch.float64)
secont condition:: tensor(1.7548e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3781e-08, dtype=torch.float64)
secont condition:: tensor(1.3781e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5560e-08, dtype=torch.float64)
secont condition:: tensor(2.5560e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6311e-08, dtype=torch.float64)
secont condition:: tensor(2.6311e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8503e-08, dtype=torch.float64)
secont condition:: tensor(1.8503e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3515e-08, dtype=torch.float64)
secont condition:: tensor(1.3515e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6300e-09, dtype=torch.float64)
secont condition:: tensor(9.6300e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2014e-09, dtype=torch.float64)
secont condition:: tensor(6.2014e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1795e-08, dtype=torch.float64)
secont condition:: tensor(3.1795e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3648e-08, dtype=torch.float64)
secont condition:: tensor(2.3648e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1346e-08, dtype=torch.float64)
secont condition:: tensor(2.1346e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6129e-08, dtype=torch.float64)
secont condition:: tensor(1.6129e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2139e-08, dtype=torch.float64)
secont condition:: tensor(3.2139e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5498e-08, dtype=torch.float64)
secont condition:: tensor(3.5498e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1907e-08, dtype=torch.float64)
secont condition:: tensor(2.1907e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6797e-08, dtype=torch.float64)
secont condition:: tensor(6.6797e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9176e-08, dtype=torch.float64)
secont condition:: tensor(4.9176e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0092e-08, dtype=torch.float64)
secont condition:: tensor(5.0092e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7721e-08, dtype=torch.float64)
secont condition:: tensor(4.7721e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0674e-08, dtype=torch.float64)
secont condition:: tensor(8.0674e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7439e-08, dtype=torch.float64)
secont condition:: tensor(6.7439e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4296e-08, dtype=torch.float64)
secont condition:: tensor(6.4296e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8148e-08, dtype=torch.float64)
secont condition:: tensor(5.8148e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5293e-08, dtype=torch.float64)
secont condition:: tensor(4.5293e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7776e-08, dtype=torch.float64)
secont condition:: tensor(4.7776e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5744e-08, dtype=torch.float64)
secont condition:: tensor(2.5744e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2516e-08, dtype=torch.float64)
secont condition:: tensor(4.2516e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6629e-08, dtype=torch.float64)
secont condition:: tensor(3.6629e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6539e-08, dtype=torch.float64)
secont condition:: tensor(3.6539e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6590e-08, dtype=torch.float64)
secont condition:: tensor(2.6590e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3298e-08, dtype=torch.float64)
secont condition:: tensor(1.3298e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1220e-08, dtype=torch.float64)
secont condition:: tensor(2.1220e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4195e-08, dtype=torch.float64)
secont condition:: tensor(3.4195e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1109e-08, dtype=torch.float64)
secont condition:: tensor(3.1109e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0040e-08, dtype=torch.float64)
secont condition:: tensor(3.0040e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7945e-08, dtype=torch.float64)
secont condition:: tensor(3.7945e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2126e-08, dtype=torch.float64)
secont condition:: tensor(2.2126e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8483e-08, dtype=torch.float64)
secont condition:: tensor(2.8483e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4816e-08, dtype=torch.float64)
secont condition:: tensor(6.4816e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6147e-08, dtype=torch.float64)
secont condition:: tensor(6.6147e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9627e-08, dtype=torch.float64)
secont condition:: tensor(6.9627e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0495e-07, dtype=torch.float64)
secont condition:: tensor(1.0495e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9062e-08, dtype=torch.float64)
secont condition:: tensor(6.9062e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4487e-07, dtype=torch.float64)
secont condition:: tensor(1.4487e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1496e-07, dtype=torch.float64)
secont condition:: tensor(1.1496e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3421e-08, dtype=torch.float64)
secont condition:: tensor(6.3421e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3846e-07, dtype=torch.float64)
secont condition:: tensor(1.3846e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1975e-08, dtype=torch.float64)
secont condition:: tensor(7.1975e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0026e-07, dtype=torch.float64)
secont condition:: tensor(1.0026e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5020e-07, dtype=torch.float64)
secont condition:: tensor(1.5020e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5317e-07, dtype=torch.float64)
secont condition:: tensor(1.5317e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.604152202606201
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8506e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.5908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3275e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5651e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.240935
Train - Epoch 0, Batch: 10, Loss: 0.217246
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.200474
Train - Epoch 1, Batch: 10, Loss: 0.211932
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.231047
Train - Epoch 2, Batch: 10, Loss: 0.217182
Test Avg. Loss: 0.000060, Accuracy: 0.945300
Train - Epoch 3, Batch: 0, Loss: 0.205667
Train - Epoch 3, Batch: 10, Loss: 0.220114
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.216167
Train - Epoch 4, Batch: 10, Loss: 0.217057
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.212185
Train - Epoch 5, Batch: 10, Loss: 0.211352
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.211469
Train - Epoch 6, Batch: 10, Loss: 0.202957
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.219932
Train - Epoch 7, Batch: 10, Loss: 0.216139
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 7.1403186321258545
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.612796068191528
time_baseline:: 4.630144357681274
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8997e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9290e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5379e-10, dtype=torch.float64)
secont condition:: tensor(4.5379e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5183e-09, dtype=torch.float64)
secont condition:: tensor(1.5183e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0101e-08, dtype=torch.float64)
secont condition:: tensor(1.0101e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0317e-08, dtype=torch.float64)
secont condition:: tensor(1.0317e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5220e-09, dtype=torch.float64)
secont condition:: tensor(7.5220e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5220e-09, dtype=torch.float64)
secont condition:: tensor(5.5220e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8845e-09, dtype=torch.float64)
secont condition:: tensor(8.8845e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7885e-08, dtype=torch.float64)
secont condition:: tensor(3.7885e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6280e-08, dtype=torch.float64)
secont condition:: tensor(2.6280e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1075e-08, dtype=torch.float64)
secont condition:: tensor(2.1075e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1721e-08, dtype=torch.float64)
secont condition:: tensor(1.1721e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1974e-08, dtype=torch.float64)
secont condition:: tensor(1.1974e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5511e-08, dtype=torch.float64)
secont condition:: tensor(3.5511e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9061e-08, dtype=torch.float64)
secont condition:: tensor(2.9061e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3230e-08, dtype=torch.float64)
secont condition:: tensor(5.3230e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6006e-08, dtype=torch.float64)
secont condition:: tensor(5.6006e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8911e-08, dtype=torch.float64)
secont condition:: tensor(4.8911e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3931e-08, dtype=torch.float64)
secont condition:: tensor(3.3931e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0530e-08, dtype=torch.float64)
secont condition:: tensor(3.0530e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2841e-08, dtype=torch.float64)
secont condition:: tensor(3.2841e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1536e-08, dtype=torch.float64)
secont condition:: tensor(2.1536e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3483e-08, dtype=torch.float64)
secont condition:: tensor(2.3483e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7059e-08, dtype=torch.float64)
secont condition:: tensor(1.7059e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5332e-08, dtype=torch.float64)
secont condition:: tensor(4.5332e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4408e-08, dtype=torch.float64)
secont condition:: tensor(4.4408e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7133e-08, dtype=torch.float64)
secont condition:: tensor(3.7133e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0420e-08, dtype=torch.float64)
secont condition:: tensor(3.0420e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7954e-08, dtype=torch.float64)
secont condition:: tensor(8.7954e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1342e-08, dtype=torch.float64)
secont condition:: tensor(7.1342e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0612e-08, dtype=torch.float64)
secont condition:: tensor(7.0612e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4211e-08, dtype=torch.float64)
secont condition:: tensor(4.4211e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8810e-08, dtype=torch.float64)
secont condition:: tensor(4.8810e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0653e-08, dtype=torch.float64)
secont condition:: tensor(3.0653e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5600e-08, dtype=torch.float64)
secont condition:: tensor(3.5600e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8436e-08, dtype=torch.float64)
secont condition:: tensor(2.8436e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1613e-08, dtype=torch.float64)
secont condition:: tensor(5.1613e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5786e-08, dtype=torch.float64)
secont condition:: tensor(4.5786e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0324e-08, dtype=torch.float64)
secont condition:: tensor(8.0324e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5204e-08, dtype=torch.float64)
secont condition:: tensor(4.5204e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9569e-08, dtype=torch.float64)
secont condition:: tensor(8.9569e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0351e-07, dtype=torch.float64)
secont condition:: tensor(1.0351e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4855e-08, dtype=torch.float64)
secont condition:: tensor(9.4855e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1315e-07, dtype=torch.float64)
secont condition:: tensor(1.1315e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4567e-07, dtype=torch.float64)
secont condition:: tensor(1.4567e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7222e-08, dtype=torch.float64)
secont condition:: tensor(8.7222e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9878e-08, dtype=torch.float64)
secont condition:: tensor(7.9878e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1470e-07, dtype=torch.float64)
secont condition:: tensor(1.1470e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3384e-07, dtype=torch.float64)
secont condition:: tensor(1.3384e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0779e-07, dtype=torch.float64)
secont condition:: tensor(2.0779e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0062e-07, dtype=torch.float64)
secont condition:: tensor(2.0062e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9908e-07, dtype=torch.float64)
secont condition:: tensor(1.9908e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.6086506843566895
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.3632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1994e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253097
Train - Epoch 0, Batch: 10, Loss: 0.219460
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.214619
Train - Epoch 1, Batch: 10, Loss: 0.225805
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.204361
Train - Epoch 2, Batch: 10, Loss: 0.209843
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 3, Batch: 0, Loss: 0.224493
Train - Epoch 3, Batch: 10, Loss: 0.217512
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.223059
Train - Epoch 4, Batch: 10, Loss: 0.213737
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.216526
Train - Epoch 5, Batch: 10, Loss: 0.202501
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.212762
Train - Epoch 6, Batch: 10, Loss: 0.208654
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.215538
Train - Epoch 7, Batch: 10, Loss: 0.219094
Test Avg. Loss: 0.000060, Accuracy: 0.945700
training_time:: 7.130184650421143
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.726161003112793
time_baseline:: 4.743895053863525
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0410e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0856e-08, dtype=torch.float64)
secont condition:: tensor(2.0856e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4994e-08, dtype=torch.float64)
secont condition:: tensor(1.4994e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6214e-08, dtype=torch.float64)
secont condition:: tensor(6.6214e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1109e-08, dtype=torch.float64)
secont condition:: tensor(4.1109e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7102e-08, dtype=torch.float64)
secont condition:: tensor(4.7102e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7265e-08, dtype=torch.float64)
secont condition:: tensor(3.7265e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2302e-08, dtype=torch.float64)
secont condition:: tensor(6.2302e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3605e-08, dtype=torch.float64)
secont condition:: tensor(4.3605e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3182e-08, dtype=torch.float64)
secont condition:: tensor(1.3182e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1681e-08, dtype=torch.float64)
secont condition:: tensor(2.1681e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4459e-08, dtype=torch.float64)
secont condition:: tensor(2.4459e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5192e-08, dtype=torch.float64)
secont condition:: tensor(1.5192e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0655e-08, dtype=torch.float64)
secont condition:: tensor(1.0655e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7723e-09, dtype=torch.float64)
secont condition:: tensor(4.7723e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6724e-09, dtype=torch.float64)
secont condition:: tensor(9.6724e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8292e-08, dtype=torch.float64)
secont condition:: tensor(1.8292e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4180e-08, dtype=torch.float64)
secont condition:: tensor(5.4180e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5354e-08, dtype=torch.float64)
secont condition:: tensor(5.5354e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4414e-08, dtype=torch.float64)
secont condition:: tensor(2.4414e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0697e-08, dtype=torch.float64)
secont condition:: tensor(4.0697e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4225e-08, dtype=torch.float64)
secont condition:: tensor(3.4225e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0356e-08, dtype=torch.float64)
secont condition:: tensor(4.0356e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7769e-08, dtype=torch.float64)
secont condition:: tensor(2.7769e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8096e-08, dtype=torch.float64)
secont condition:: tensor(2.8096e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5122e-08, dtype=torch.float64)
secont condition:: tensor(1.5122e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0163e-08, dtype=torch.float64)
secont condition:: tensor(2.0163e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1051e-08, dtype=torch.float64)
secont condition:: tensor(5.1051e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2442e-08, dtype=torch.float64)
secont condition:: tensor(4.2442e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8963e-08, dtype=torch.float64)
secont condition:: tensor(7.8963e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7825e-08, dtype=torch.float64)
secont condition:: tensor(6.7825e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1328e-08, dtype=torch.float64)
secont condition:: tensor(6.1328e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8426e-08, dtype=torch.float64)
secont condition:: tensor(7.8426e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3121e-08, dtype=torch.float64)
secont condition:: tensor(4.3121e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0299e-08, dtype=torch.float64)
secont condition:: tensor(7.0299e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3117e-08, dtype=torch.float64)
secont condition:: tensor(8.3117e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1602e-08, dtype=torch.float64)
secont condition:: tensor(6.1602e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9750e-08, dtype=torch.float64)
secont condition:: tensor(4.9750e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1326e-08, dtype=torch.float64)
secont condition:: tensor(4.1326e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0068e-08, dtype=torch.float64)
secont condition:: tensor(9.0068e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5813e-08, dtype=torch.float64)
secont condition:: tensor(4.5813e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6496e-08, dtype=torch.float64)
secont condition:: tensor(9.6496e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1692e-08, dtype=torch.float64)
secont condition:: tensor(8.1692e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3128e-07, dtype=torch.float64)
secont condition:: tensor(1.3128e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2129e-07, dtype=torch.float64)
secont condition:: tensor(1.2129e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5908e-08, dtype=torch.float64)
secont condition:: tensor(8.5908e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2154e-07, dtype=torch.float64)
secont condition:: tensor(1.2154e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1835e-08, dtype=torch.float64)
secont condition:: tensor(9.1835e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6977e-07, dtype=torch.float64)
secont condition:: tensor(1.6977e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0481e-07, dtype=torch.float64)
secont condition:: tensor(2.0481e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5738e-07, dtype=torch.float64)
secont condition:: tensor(1.5738e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3149e-07, dtype=torch.float64)
secont condition:: tensor(1.3149e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1294e-07, dtype=torch.float64)
secont condition:: tensor(1.1294e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.6197829246520996
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2915e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6473e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3750e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4488e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253563
Train - Epoch 0, Batch: 10, Loss: 0.223047
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.222621
Train - Epoch 1, Batch: 10, Loss: 0.224204
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 2, Batch: 0, Loss: 0.197133
Train - Epoch 2, Batch: 10, Loss: 0.226845
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.224199
Train - Epoch 3, Batch: 10, Loss: 0.221309
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.224118
Train - Epoch 4, Batch: 10, Loss: 0.218826
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.216860
Train - Epoch 5, Batch: 10, Loss: 0.206604
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.213437
Train - Epoch 6, Batch: 10, Loss: 0.202361
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 7, Batch: 0, Loss: 0.225332
Train - Epoch 7, Batch: 10, Loss: 0.206651
Test Avg. Loss: 0.000060, Accuracy: 0.946000
training_time:: 7.217212200164795
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.71034836769104
time_baseline:: 4.727633714675903
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.4075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2855e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8604e-09, dtype=torch.float64)
secont condition:: tensor(4.8604e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5088e-09, dtype=torch.float64)
secont condition:: tensor(9.5088e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3031e-09, dtype=torch.float64)
secont condition:: tensor(7.3031e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3412e-09, dtype=torch.float64)
secont condition:: tensor(6.3412e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2805e-09, dtype=torch.float64)
secont condition:: tensor(4.2805e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4174e-08, dtype=torch.float64)
secont condition:: tensor(4.4174e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5725e-08, dtype=torch.float64)
secont condition:: tensor(2.5725e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5055e-08, dtype=torch.float64)
secont condition:: tensor(5.5055e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8228e-08, dtype=torch.float64)
secont condition:: tensor(2.8228e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6639e-08, dtype=torch.float64)
secont condition:: tensor(1.6639e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2106e-08, dtype=torch.float64)
secont condition:: tensor(2.2106e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7055e-08, dtype=torch.float64)
secont condition:: tensor(2.7055e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5109e-08, dtype=torch.float64)
secont condition:: tensor(2.5109e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1315e-08, dtype=torch.float64)
secont condition:: tensor(2.1315e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8842e-08, dtype=torch.float64)
secont condition:: tensor(1.8842e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7483e-08, dtype=torch.float64)
secont condition:: tensor(1.7483e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3416e-08, dtype=torch.float64)
secont condition:: tensor(5.3416e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0823e-08, dtype=torch.float64)
secont condition:: tensor(5.0823e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6666e-08, dtype=torch.float64)
secont condition:: tensor(4.6666e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2939e-08, dtype=torch.float64)
secont condition:: tensor(6.2939e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7977e-08, dtype=torch.float64)
secont condition:: tensor(3.7977e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6614e-08, dtype=torch.float64)
secont condition:: tensor(5.6614e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1019e-08, dtype=torch.float64)
secont condition:: tensor(4.1019e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6942e-08, dtype=torch.float64)
secont condition:: tensor(3.6942e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5760e-08, dtype=torch.float64)
secont condition:: tensor(2.5760e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1207e-08, dtype=torch.float64)
secont condition:: tensor(5.1207e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7753e-08, dtype=torch.float64)
secont condition:: tensor(2.7753e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2223e-08, dtype=torch.float64)
secont condition:: tensor(5.2223e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5636e-08, dtype=torch.float64)
secont condition:: tensor(5.5636e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1301e-08, dtype=torch.float64)
secont condition:: tensor(3.1301e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4882e-08, dtype=torch.float64)
secont condition:: tensor(3.4882e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5726e-08, dtype=torch.float64)
secont condition:: tensor(6.5726e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7076e-08, dtype=torch.float64)
secont condition:: tensor(5.7076e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0294e-08, dtype=torch.float64)
secont condition:: tensor(5.0294e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1994e-07, dtype=torch.float64)
secont condition:: tensor(1.1994e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9782e-08, dtype=torch.float64)
secont condition:: tensor(8.9782e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0170e-07, dtype=torch.float64)
secont condition:: tensor(1.0170e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9827e-08, dtype=torch.float64)
secont condition:: tensor(7.9827e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4721e-08, dtype=torch.float64)
secont condition:: tensor(6.4721e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2764e-08, dtype=torch.float64)
secont condition:: tensor(5.2764e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3387e-08, dtype=torch.float64)
secont condition:: tensor(4.3387e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3040e-08, dtype=torch.float64)
secont condition:: tensor(5.3040e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9175e-08, dtype=torch.float64)
secont condition:: tensor(4.9175e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0176e-07, dtype=torch.float64)
secont condition:: tensor(1.0176e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3792e-07, dtype=torch.float64)
secont condition:: tensor(1.3792e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1697e-07, dtype=torch.float64)
secont condition:: tensor(1.1697e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5104e-07, dtype=torch.float64)
secont condition:: tensor(1.5104e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1821e-07, dtype=torch.float64)
secont condition:: tensor(1.1821e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0727e-07, dtype=torch.float64)
secont condition:: tensor(1.0727e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1407e-07, dtype=torch.float64)
secont condition:: tensor(2.1407e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9099e-07, dtype=torch.float64)
secont condition:: tensor(1.9099e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5767e-07, dtype=torch.float64)
secont condition:: tensor(1.5767e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.592381715774536
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0150e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8885e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7128e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9137e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3404e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251501
Train - Epoch 0, Batch: 10, Loss: 0.219200
Train - Epoch 0, Batch: 20, Loss: 0.231472
Train - Epoch 0, Batch: 30, Loss: 0.242531
Train - Epoch 0, Batch: 40, Loss: 0.227263
Train - Epoch 0, Batch: 50, Loss: 0.226823
Test Avg. Loss: 0.000210, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.182945
Train - Epoch 1, Batch: 10, Loss: 0.228563
Train - Epoch 1, Batch: 20, Loss: 0.249932
Train - Epoch 1, Batch: 30, Loss: 0.214011
Train - Epoch 1, Batch: 40, Loss: 0.209751
Train - Epoch 1, Batch: 50, Loss: 0.204482
Test Avg. Loss: 0.000209, Accuracy: 0.945500
training_time:: 2.210984468460083
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.377159833908081
time_baseline:: 1.3819329738616943
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4273e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3966e-33, dtype=torch.float64)
secont condition:: tensor(4.3966e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2216e-08, dtype=torch.float64)
secont condition:: tensor(1.2216e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0856e-09, dtype=torch.float64)
secont condition:: tensor(9.0856e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3459e-09, dtype=torch.float64)
secont condition:: tensor(6.3459e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8888e-08, dtype=torch.float64)
secont condition:: tensor(2.8888e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2218e-08, dtype=torch.float64)
secont condition:: tensor(1.2218e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6318e-08, dtype=torch.float64)
secont condition:: tensor(7.6318e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5393e-08, dtype=torch.float64)
secont condition:: tensor(4.5393e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9394e-08, dtype=torch.float64)
secont condition:: tensor(2.9394e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2765e-08, dtype=torch.float64)
secont condition:: tensor(2.2765e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0259e-08, dtype=torch.float64)
secont condition:: tensor(2.0259e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7093e-08, dtype=torch.float64)
secont condition:: tensor(1.7093e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1040e-08, dtype=torch.float64)
secont condition:: tensor(1.1040e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0032e-08, dtype=torch.float64)
secont condition:: tensor(1.0032e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3035e-07, dtype=torch.float64)
secont condition:: tensor(1.3035e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2542e-08, dtype=torch.float64)
secont condition:: tensor(7.2542e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6685e-08, dtype=torch.float64)
secont condition:: tensor(6.6685e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8535e-08, dtype=torch.float64)
secont condition:: tensor(3.8535e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5692e-08, dtype=torch.float64)
secont condition:: tensor(3.5692e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8654e-08, dtype=torch.float64)
secont condition:: tensor(2.8654e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8781e-08, dtype=torch.float64)
secont condition:: tensor(1.8781e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3623e-08, dtype=torch.float64)
secont condition:: tensor(2.3623e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4653e-08, dtype=torch.float64)
secont condition:: tensor(2.4653e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2537e-08, dtype=torch.float64)
secont condition:: tensor(1.2537e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1069e-08, dtype=torch.float64)
secont condition:: tensor(1.1069e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0895e-09, dtype=torch.float64)
secont condition:: tensor(9.0895e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8404e-09, dtype=torch.float64)
secont condition:: tensor(7.8404e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4718e-09, dtype=torch.float64)
secont condition:: tensor(6.4718e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7337e-08, dtype=torch.float64)
secont condition:: tensor(5.7337e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6484e-08, dtype=torch.float64)
secont condition:: tensor(4.6484e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6798e-07, dtype=torch.float64)
secont condition:: tensor(4.6798e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1586e-07, dtype=torch.float64)
secont condition:: tensor(3.1586e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5626e-07, dtype=torch.float64)
secont condition:: tensor(2.5626e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6509e-07, dtype=torch.float64)
secont condition:: tensor(1.6509e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7058e-07, dtype=torch.float64)
secont condition:: tensor(1.7058e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6590e-07, dtype=torch.float64)
secont condition:: tensor(1.6590e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3031e-07, dtype=torch.float64)
secont condition:: tensor(1.3031e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2483e-07, dtype=torch.float64)
secont condition:: tensor(1.2483e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3672e-08, dtype=torch.float64)
secont condition:: tensor(8.3672e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6257e-08, dtype=torch.float64)
secont condition:: tensor(7.6257e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6050e-07, dtype=torch.float64)
secont condition:: tensor(4.6050e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7060e-09, dtype=torch.float64)
secont condition:: tensor(6.7060e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8070e-07, dtype=torch.float64)
secont condition:: tensor(1.8070e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7157e-07, dtype=torch.float64)
secont condition:: tensor(5.7157e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0666e-07, dtype=torch.float64)
secont condition:: tensor(2.0666e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9014e-07, dtype=torch.float64)
secont condition:: tensor(3.9014e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1173e-07, dtype=torch.float64)
secont condition:: tensor(3.1173e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6477e-07, dtype=torch.float64)
secont condition:: tensor(3.6477e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8915e-07, dtype=torch.float64)
secont condition:: tensor(1.8915e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9460e-07, dtype=torch.float64)
secont condition:: tensor(1.9460e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4555e-07, dtype=torch.float64)
secont condition:: tensor(2.4555e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1223e-07, dtype=torch.float64)
secont condition:: tensor(2.1223e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.582482099533081
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.8274e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5055e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3660e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0312e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.946100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.279976
Train - Epoch 0, Batch: 10, Loss: 0.235163
Train - Epoch 0, Batch: 20, Loss: 0.205422
Train - Epoch 0, Batch: 30, Loss: 0.194860
Train - Epoch 0, Batch: 40, Loss: 0.244330
Train - Epoch 0, Batch: 50, Loss: 0.222221
Test Avg. Loss: 0.000211, Accuracy: 0.945600
Train - Epoch 1, Batch: 0, Loss: 0.240451
Train - Epoch 1, Batch: 10, Loss: 0.214950
Train - Epoch 1, Batch: 20, Loss: 0.181301
Train - Epoch 1, Batch: 30, Loss: 0.198084
Train - Epoch 1, Batch: 40, Loss: 0.230148
Train - Epoch 1, Batch: 50, Loss: 0.212971
Test Avg. Loss: 0.000210, Accuracy: 0.946000
training_time:: 2.252558946609497
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.355806589126587
time_baseline:: 1.3607165813446045
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6527e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3625e-06, dtype=torch.float64)
secont condition:: tensor(1.3625e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.3636e-07, dtype=torch.float64)
secont condition:: tensor(9.3636e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4578e-07, dtype=torch.float64)
secont condition:: tensor(5.4578e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3588e-07, dtype=torch.float64)
secont condition:: tensor(4.3588e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9224e-07, dtype=torch.float64)
secont condition:: tensor(3.9224e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1234e-07, dtype=torch.float64)
secont condition:: tensor(3.1234e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3534e-07, dtype=torch.float64)
secont condition:: tensor(2.3534e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6024e-07, dtype=torch.float64)
secont condition:: tensor(1.6024e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8857e-07, dtype=torch.float64)
secont condition:: tensor(1.8857e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1851e-07, dtype=torch.float64)
secont condition:: tensor(1.1851e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6279e-07, dtype=torch.float64)
secont condition:: tensor(1.6279e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2780e-07, dtype=torch.float64)
secont condition:: tensor(1.2780e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0090e-07, dtype=torch.float64)
secont condition:: tensor(3.0090e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7402e-07, dtype=torch.float64)
secont condition:: tensor(3.7402e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1119e-07, dtype=torch.float64)
secont condition:: tensor(2.1119e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9946e-07, dtype=torch.float64)
secont condition:: tensor(1.9946e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5605e-07, dtype=torch.float64)
secont condition:: tensor(1.5605e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8797e-07, dtype=torch.float64)
secont condition:: tensor(6.8797e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9568e-07, dtype=torch.float64)
secont condition:: tensor(4.9568e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5961e-07, dtype=torch.float64)
secont condition:: tensor(3.5961e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2272e-07, dtype=torch.float64)
secont condition:: tensor(3.2272e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1982e-07, dtype=torch.float64)
secont condition:: tensor(2.1982e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0256e-07, dtype=torch.float64)
secont condition:: tensor(2.0256e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2863e-07, dtype=torch.float64)
secont condition:: tensor(1.2863e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6853e-07, dtype=torch.float64)
secont condition:: tensor(1.6853e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8714e-08, dtype=torch.float64)
secont condition:: tensor(3.8714e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3635e-08, dtype=torch.float64)
secont condition:: tensor(6.3635e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3393e-07, dtype=torch.float64)
secont condition:: tensor(2.3393e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5749e-07, dtype=torch.float64)
secont condition:: tensor(1.5749e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6488e-07, dtype=torch.float64)
secont condition:: tensor(1.6488e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5351e-07, dtype=torch.float64)
secont condition:: tensor(1.5351e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7122e-08, dtype=torch.float64)
secont condition:: tensor(9.7122e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3288e-07, dtype=torch.float64)
secont condition:: tensor(1.3288e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1978e-07, dtype=torch.float64)
secont condition:: tensor(1.1978e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4782e-07, dtype=torch.float64)
secont condition:: tensor(4.4782e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8327e-07, dtype=torch.float64)
secont condition:: tensor(2.8327e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0349e-07, dtype=torch.float64)
secont condition:: tensor(2.0349e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9571e-07, dtype=torch.float64)
secont condition:: tensor(1.9571e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3775e-07, dtype=torch.float64)
secont condition:: tensor(1.3775e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8674e-08, dtype=torch.float64)
secont condition:: tensor(9.8674e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1139e-07, dtype=torch.float64)
secont condition:: tensor(2.1139e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2900e-08, dtype=torch.float64)
secont condition:: tensor(9.2900e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2189e-08, dtype=torch.float64)
secont condition:: tensor(6.2189e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1493e-08, dtype=torch.float64)
secont condition:: tensor(7.1493e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8371e-08, dtype=torch.float64)
secont condition:: tensor(5.8371e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3911e-08, dtype=torch.float64)
secont condition:: tensor(6.3911e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2760e-07, dtype=torch.float64)
secont condition:: tensor(1.2760e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3714e-08, dtype=torch.float64)
secont condition:: tensor(8.3714e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0494e-07, dtype=torch.float64)
secont condition:: tensor(3.0494e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4803e-08, dtype=torch.float64)
secont condition:: tensor(9.4803e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5871e-07, dtype=torch.float64)
secont condition:: tensor(8.5871e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4960e-07, dtype=torch.float64)
secont condition:: tensor(5.4960e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6269e-07, dtype=torch.float64)
secont condition:: tensor(3.6269e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1061e-07, dtype=torch.float64)
secont condition:: tensor(2.1061e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5160e-07, dtype=torch.float64)
secont condition:: tensor(3.5160e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0993e-07, dtype=torch.float64)
secont condition:: tensor(1.0993e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1026e-07, dtype=torch.float64)
secont condition:: tensor(5.1026e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.4828708171844482
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.4756e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0391e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6325e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237905
Train - Epoch 0, Batch: 10, Loss: 0.186572
Train - Epoch 0, Batch: 20, Loss: 0.237737
Train - Epoch 0, Batch: 30, Loss: 0.218649
Train - Epoch 0, Batch: 40, Loss: 0.263308
Train - Epoch 0, Batch: 50, Loss: 0.198563
Test Avg. Loss: 0.000211, Accuracy: 0.945900
Train - Epoch 1, Batch: 0, Loss: 0.238177
Train - Epoch 1, Batch: 10, Loss: 0.227251
Train - Epoch 1, Batch: 20, Loss: 0.212439
Train - Epoch 1, Batch: 30, Loss: 0.225361
Train - Epoch 1, Batch: 40, Loss: 0.208820
Train - Epoch 1, Batch: 50, Loss: 0.203309
Test Avg. Loss: 0.000210, Accuracy: 0.945200
training_time:: 2.1822502613067627
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.36720609664917
time_baseline:: 1.3719096183776855
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0268e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945200
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5075e-33, dtype=torch.float64)
secont condition:: tensor(5.5075e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.9661e-32, dtype=torch.float64)
secont condition:: tensor(1.9661e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6642e-32, dtype=torch.float64)
secont condition:: tensor(3.6642e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3244e-09, dtype=torch.float64)
secont condition:: tensor(1.3244e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0005e-09, dtype=torch.float64)
secont condition:: tensor(1.0005e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4421e-10, dtype=torch.float64)
secont condition:: tensor(6.4421e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6604e-08, dtype=torch.float64)
secont condition:: tensor(4.6604e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6605e-08, dtype=torch.float64)
secont condition:: tensor(8.6605e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1859e-07, dtype=torch.float64)
secont condition:: tensor(2.1859e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2849e-07, dtype=torch.float64)
secont condition:: tensor(1.2849e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3199e-07, dtype=torch.float64)
secont condition:: tensor(1.3199e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1094e-07, dtype=torch.float64)
secont condition:: tensor(6.1094e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6970e-07, dtype=torch.float64)
secont condition:: tensor(5.6970e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9203e-07, dtype=torch.float64)
secont condition:: tensor(3.9203e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0440e-07, dtype=torch.float64)
secont condition:: tensor(3.0440e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8917e-07, dtype=torch.float64)
secont condition:: tensor(3.8917e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9132e-07, dtype=torch.float64)
secont condition:: tensor(2.9132e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1487e-07, dtype=torch.float64)
secont condition:: tensor(3.1487e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8862e-07, dtype=torch.float64)
secont condition:: tensor(1.8862e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7414e-07, dtype=torch.float64)
secont condition:: tensor(1.7414e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3804e-07, dtype=torch.float64)
secont condition:: tensor(1.3804e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8154e-08, dtype=torch.float64)
secont condition:: tensor(7.8154e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6641e-08, dtype=torch.float64)
secont condition:: tensor(9.6641e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8076e-08, dtype=torch.float64)
secont condition:: tensor(8.8076e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0703e-08, dtype=torch.float64)
secont condition:: tensor(7.0703e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3379e-08, dtype=torch.float64)
secont condition:: tensor(7.3379e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5255e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8782e-08, dtype=torch.float64)
secont condition:: tensor(5.8782e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6935e-08, dtype=torch.float64)
secont condition:: tensor(3.6935e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4807e-08, dtype=torch.float64)
secont condition:: tensor(6.4807e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4673e-08, dtype=torch.float64)
secont condition:: tensor(2.4673e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4214e-08, dtype=torch.float64)
secont condition:: tensor(7.4214e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1030e-08, dtype=torch.float64)
secont condition:: tensor(5.1030e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8583e-08, dtype=torch.float64)
secont condition:: tensor(3.8583e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8082e-08, dtype=torch.float64)
secont condition:: tensor(3.8082e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3963e-08, dtype=torch.float64)
secont condition:: tensor(5.3963e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7705e-08, dtype=torch.float64)
secont condition:: tensor(3.7705e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3820e-08, dtype=torch.float64)
secont condition:: tensor(4.3820e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4110e-08, dtype=torch.float64)
secont condition:: tensor(3.4110e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4073e-07, dtype=torch.float64)
secont condition:: tensor(1.4073e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7826e-08, dtype=torch.float64)
secont condition:: tensor(9.7826e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2714e-07, dtype=torch.float64)
secont condition:: tensor(1.2714e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9466e-08, dtype=torch.float64)
secont condition:: tensor(9.9466e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0963e-07, dtype=torch.float64)
secont condition:: tensor(2.0963e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3744e-07, dtype=torch.float64)
secont condition:: tensor(1.3744e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0935e-08, dtype=torch.float64)
secont condition:: tensor(8.0935e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7323e-08, dtype=torch.float64)
secont condition:: tensor(6.7323e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2810e-08, dtype=torch.float64)
secont condition:: tensor(9.2810e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0026e-08, dtype=torch.float64)
secont condition:: tensor(5.0026e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3011e-07, dtype=torch.float64)
secont condition:: tensor(3.3011e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6987e-07, dtype=torch.float64)
secont condition:: tensor(1.6987e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2494e-07, dtype=torch.float64)
secont condition:: tensor(2.2494e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6653e-07, dtype=torch.float64)
secont condition:: tensor(3.6653e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8088e-07, dtype=torch.float64)
secont condition:: tensor(2.8088e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.5884175300598145
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2661e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6468e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9118e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.260819
Train - Epoch 0, Batch: 10, Loss: 0.195584
Train - Epoch 0, Batch: 20, Loss: 0.186564
Train - Epoch 0, Batch: 30, Loss: 0.226806
Train - Epoch 0, Batch: 40, Loss: 0.202953
Train - Epoch 0, Batch: 50, Loss: 0.220052
Test Avg. Loss: 0.000210, Accuracy: 0.945400
Train - Epoch 1, Batch: 0, Loss: 0.228318
Train - Epoch 1, Batch: 10, Loss: 0.207569
Train - Epoch 1, Batch: 20, Loss: 0.230322
Train - Epoch 1, Batch: 30, Loss: 0.209414
Train - Epoch 1, Batch: 40, Loss: 0.215239
Train - Epoch 1, Batch: 50, Loss: 0.206990
Test Avg. Loss: 0.000210, Accuracy: 0.945600
training_time:: 2.211939811706543
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3699679374694824
time_baseline:: 1.3747034072875977
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2715e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8617e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7904e-09, dtype=torch.float64)
secont condition:: tensor(1.7904e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1504e-09, dtype=torch.float64)
secont condition:: tensor(1.1504e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8491e-10, dtype=torch.float64)
secont condition:: tensor(6.8491e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2467e-08, dtype=torch.float64)
secont condition:: tensor(5.2467e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8143e-08, dtype=torch.float64)
secont condition:: tensor(3.8143e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0937e-09, dtype=torch.float64)
secont condition:: tensor(7.0937e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0791e-09, dtype=torch.float64)
secont condition:: tensor(5.0791e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7045e-09, dtype=torch.float64)
secont condition:: tensor(4.7045e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3038e-09, dtype=torch.float64)
secont condition:: tensor(3.3038e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1677e-07, dtype=torch.float64)
secont condition:: tensor(1.1677e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5764e-07, dtype=torch.float64)
secont condition:: tensor(1.5764e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7624e-08, dtype=torch.float64)
secont condition:: tensor(7.7624e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9521e-08, dtype=torch.float64)
secont condition:: tensor(7.9521e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9032e-08, dtype=torch.float64)
secont condition:: tensor(6.9032e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0860e-08, dtype=torch.float64)
secont condition:: tensor(6.0860e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1315e-08, dtype=torch.float64)
secont condition:: tensor(6.1315e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5522e-08, dtype=torch.float64)
secont condition:: tensor(3.5522e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3394e-08, dtype=torch.float64)
secont condition:: tensor(2.3394e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7989e-08, dtype=torch.float64)
secont condition:: tensor(6.7989e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6521e-08, dtype=torch.float64)
secont condition:: tensor(4.6521e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2779e-08, dtype=torch.float64)
secont condition:: tensor(1.2779e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5834e-08, dtype=torch.float64)
secont condition:: tensor(3.5834e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3588e-08, dtype=torch.float64)
secont condition:: tensor(3.3588e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1280e-07, dtype=torch.float64)
secont condition:: tensor(1.1280e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9443e-07, dtype=torch.float64)
secont condition:: tensor(2.9443e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6190e-07, dtype=torch.float64)
secont condition:: tensor(3.6190e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0376e-07, dtype=torch.float64)
secont condition:: tensor(3.0376e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9130e-07, dtype=torch.float64)
secont condition:: tensor(1.9130e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8628e-08, dtype=torch.float64)
secont condition:: tensor(9.8628e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9732e-07, dtype=torch.float64)
secont condition:: tensor(1.9732e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1475e-07, dtype=torch.float64)
secont condition:: tensor(2.1475e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5445e-07, dtype=torch.float64)
secont condition:: tensor(2.5445e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1153e-07, dtype=torch.float64)
secont condition:: tensor(1.1153e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5449e-08, dtype=torch.float64)
secont condition:: tensor(9.5449e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1319e-08, dtype=torch.float64)
secont condition:: tensor(4.1319e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1114e-08, dtype=torch.float64)
secont condition:: tensor(7.1114e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0996e-07, dtype=torch.float64)
secont condition:: tensor(1.0996e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4899e-08, dtype=torch.float64)
secont condition:: tensor(8.4899e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0862e-08, dtype=torch.float64)
secont condition:: tensor(5.0862e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6522e-08, dtype=torch.float64)
secont condition:: tensor(6.6522e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7553e-08, dtype=torch.float64)
secont condition:: tensor(6.7553e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4304e-06, dtype=torch.float64)
secont condition:: tensor(1.4304e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4080e-07, dtype=torch.float64)
secont condition:: tensor(3.4080e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6913e-07, dtype=torch.float64)
secont condition:: tensor(1.6913e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0703e-07, dtype=torch.float64)
secont condition:: tensor(1.0703e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7513e-07, dtype=torch.float64)
secont condition:: tensor(1.7513e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0340e-07, dtype=torch.float64)
secont condition:: tensor(4.0340e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9900e-07, dtype=torch.float64)
secont condition:: tensor(2.9900e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6207e-07, dtype=torch.float64)
secont condition:: tensor(2.6207e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5794e-07, dtype=torch.float64)
secont condition:: tensor(1.5794e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8048e-07, dtype=torch.float64)
secont condition:: tensor(3.8048e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7155e-07, dtype=torch.float64)
secont condition:: tensor(2.7155e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.744786262512207
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4037e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6786e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.9538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9658e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242326
Train - Epoch 0, Batch: 10, Loss: 0.234107
Train - Epoch 0, Batch: 20, Loss: 0.222684
Train - Epoch 0, Batch: 30, Loss: 0.210544
Train - Epoch 0, Batch: 40, Loss: 0.222393
Train - Epoch 0, Batch: 50, Loss: 0.227928
Test Avg. Loss: 0.000211, Accuracy: 0.945700
Train - Epoch 1, Batch: 0, Loss: 0.207662
Train - Epoch 1, Batch: 10, Loss: 0.228097
Train - Epoch 1, Batch: 20, Loss: 0.220919
Train - Epoch 1, Batch: 30, Loss: 0.201363
Train - Epoch 1, Batch: 40, Loss: 0.214013
Train - Epoch 1, Batch: 50, Loss: 0.219612
Test Avg. Loss: 0.000210, Accuracy: 0.945700
training_time:: 2.211836576461792
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4082636833190918
time_baseline:: 1.4130523204803467
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2792e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7381e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0106e-09, dtype=torch.float64)
secont condition:: tensor(2.0106e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3362e-09, dtype=torch.float64)
secont condition:: tensor(1.3362e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1344e-10, dtype=torch.float64)
secont condition:: tensor(9.1344e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6921e-09, dtype=torch.float64)
secont condition:: tensor(1.6921e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4157e-09, dtype=torch.float64)
secont condition:: tensor(8.4157e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3601e-09, dtype=torch.float64)
secont condition:: tensor(6.3601e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8914e-09, dtype=torch.float64)
secont condition:: tensor(3.8914e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4479e-09, dtype=torch.float64)
secont condition:: tensor(5.4479e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3438e-09, dtype=torch.float64)
secont condition:: tensor(3.3438e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6835e-09, dtype=torch.float64)
secont condition:: tensor(3.6835e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1206e-07, dtype=torch.float64)
secont condition:: tensor(5.1206e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0766e-07, dtype=torch.float64)
secont condition:: tensor(4.0766e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5001e-07, dtype=torch.float64)
secont condition:: tensor(3.5001e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1847e-07, dtype=torch.float64)
secont condition:: tensor(3.1847e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9653e-07, dtype=torch.float64)
secont condition:: tensor(1.9653e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1866e-07, dtype=torch.float64)
secont condition:: tensor(2.1866e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9928e-07, dtype=torch.float64)
secont condition:: tensor(1.9928e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6852e-07, dtype=torch.float64)
secont condition:: tensor(1.6852e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4233e-07, dtype=torch.float64)
secont condition:: tensor(1.4233e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6151e-08, dtype=torch.float64)
secont condition:: tensor(8.6151e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0248e-08, dtype=torch.float64)
secont condition:: tensor(9.0248e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5539e-08, dtype=torch.float64)
secont condition:: tensor(8.5539e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4137e-08, dtype=torch.float64)
secont condition:: tensor(8.4137e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7128e-08, dtype=torch.float64)
secont condition:: tensor(8.7128e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7998e-08, dtype=torch.float64)
secont condition:: tensor(3.7998e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8448e-08, dtype=torch.float64)
secont condition:: tensor(6.8448e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2346e-08, dtype=torch.float64)
secont condition:: tensor(3.2346e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7589e-08, dtype=torch.float64)
secont condition:: tensor(3.7589e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7710e-08, dtype=torch.float64)
secont condition:: tensor(2.7710e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0917e-08, dtype=torch.float64)
secont condition:: tensor(5.0917e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4286e-08, dtype=torch.float64)
secont condition:: tensor(1.4286e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7118e-08, dtype=torch.float64)
secont condition:: tensor(2.7118e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3421e-08, dtype=torch.float64)
secont condition:: tensor(3.3421e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0626e-08, dtype=torch.float64)
secont condition:: tensor(2.0626e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5392e-08, dtype=torch.float64)
secont condition:: tensor(6.5392e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0465e-08, dtype=torch.float64)
secont condition:: tensor(4.0465e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9938e-08, dtype=torch.float64)
secont condition:: tensor(2.9938e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5793e-08, dtype=torch.float64)
secont condition:: tensor(5.5793e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7722e-08, dtype=torch.float64)
secont condition:: tensor(1.7722e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9613e-07, dtype=torch.float64)
secont condition:: tensor(2.9613e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8645e-07, dtype=torch.float64)
secont condition:: tensor(1.8645e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-07, dtype=torch.float64)
secont condition:: tensor(2.5998e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3804e-07, dtype=torch.float64)
secont condition:: tensor(2.3804e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6953e-07, dtype=torch.float64)
secont condition:: tensor(1.6953e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9740e-07, dtype=torch.float64)
secont condition:: tensor(3.9740e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1791e-07, dtype=torch.float64)
secont condition:: tensor(2.1791e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3603e-07, dtype=torch.float64)
secont condition:: tensor(4.3603e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3940e-07, dtype=torch.float64)
secont condition:: tensor(4.3940e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2494e-07, dtype=torch.float64)
secont condition:: tensor(2.2494e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1213e-07, dtype=torch.float64)
secont condition:: tensor(2.1213e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5014e-08, dtype=torch.float64)
secont condition:: tensor(3.5014e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0712e-07, dtype=torch.float64)
secont condition:: tensor(4.0712e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8098e-07, dtype=torch.float64)
secont condition:: tensor(2.8098e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.691145658493042
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5819e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0375e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1387e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5200e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.946000
deletion rate:: 0.001
python3 generate_rand_ids 0.001  MNIST 0
tensor([36096,   129, 27394, 42882, 54150, 33674, 22411, 17548, 30863, 41234,
        58005, 10645, 19734, 19991, 43928, 13982, 54303,  9632,  2462, 25631,
        32550, 30760, 37673, 16554,  8874, 19372, 39085,  8881, 38578,  2995,
         9658, 51389, 47806, 49215, 23744, 30913, 18626, 51787, 32973, 54866,
        55762, 26583, 19160, 15323,  3038, 38112, 34276, 16228, 15592,  6510,
        48238,  2927, 26865, 43378, 36207, 46833, 18801, 35188, 39290, 51707])
batch size:: 60000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.74808049201965
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 98.59885859489441
time_baseline:: 98.86938285827637
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3089e-10, dtype=torch.float64)
secont condition:: tensor(8.3089e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0432e-09, dtype=torch.float64)
secont condition:: tensor(3.0432e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3851e-09, dtype=torch.float64)
secont condition:: tensor(5.3851e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3396e-09, dtype=torch.float64)
secont condition:: tensor(8.3396e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1460e-08, dtype=torch.float64)
secont condition:: tensor(1.1460e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-08, dtype=torch.float64)
secont condition:: tensor(1.4412e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7643e-08, dtype=torch.float64)
secont condition:: tensor(1.7643e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-08, dtype=torch.float64)
secont condition:: tensor(2.3862e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-08, dtype=torch.float64)
secont condition:: tensor(2.7662e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9236e-08, dtype=torch.float64)
secont condition:: tensor(2.9236e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2995e-08, dtype=torch.float64)
secont condition:: tensor(3.2995e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3627e-08, dtype=torch.float64)
secont condition:: tensor(3.3627e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7598e-08, dtype=torch.float64)
secont condition:: tensor(3.7598e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8769e-08, dtype=torch.float64)
secont condition:: tensor(3.8769e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4045e-08, dtype=torch.float64)
secont condition:: tensor(4.4045e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5228e-08, dtype=torch.float64)
secont condition:: tensor(4.5228e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7540e-08, dtype=torch.float64)
secont condition:: tensor(4.7540e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8484e-08, dtype=torch.float64)
secont condition:: tensor(4.8484e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0577e-08, dtype=torch.float64)
secont condition:: tensor(5.0577e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2796e-08, dtype=torch.float64)
secont condition:: tensor(5.2796e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5228e-08, dtype=torch.float64)
secont condition:: tensor(5.5228e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6648e-08, dtype=torch.float64)
secont condition:: tensor(5.6648e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9572e-08, dtype=torch.float64)
secont condition:: tensor(5.9572e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1544e-08, dtype=torch.float64)
secont condition:: tensor(6.1544e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9964e-08, dtype=torch.float64)
secont condition:: tensor(5.9964e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3765e-08, dtype=torch.float64)
secont condition:: tensor(6.3765e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2748e-08, dtype=torch.float64)
secont condition:: tensor(6.2748e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4504e-08, dtype=torch.float64)
secont condition:: tensor(6.4504e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7986e-08, dtype=torch.float64)
secont condition:: tensor(6.7986e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0580e-08, dtype=torch.float64)
secont condition:: tensor(7.0580e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2165e-08, dtype=torch.float64)
secont condition:: tensor(7.2165e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2603e-08, dtype=torch.float64)
secont condition:: tensor(7.2603e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7265e-08, dtype=torch.float64)
secont condition:: tensor(7.7265e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5710e-08, dtype=torch.float64)
secont condition:: tensor(7.5710e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8893e-08, dtype=torch.float64)
secont condition:: tensor(7.8893e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9173e-08, dtype=torch.float64)
secont condition:: tensor(7.9173e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1054e-08, dtype=torch.float64)
secont condition:: tensor(8.1054e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1824e-08, dtype=torch.float64)
secont condition:: tensor(8.1824e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7534e-08, dtype=torch.float64)
secont condition:: tensor(8.7534e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0982e-08, dtype=torch.float64)
secont condition:: tensor(9.0982e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0886e-07, dtype=torch.float64)
secont condition:: tensor(1.0886e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1244e-07, dtype=torch.float64)
secont condition:: tensor(1.1244e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1325e-07, dtype=torch.float64)
secont condition:: tensor(1.1325e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2287e-07, dtype=torch.float64)
secont condition:: tensor(1.2287e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5504e-07, dtype=torch.float64)
secont condition:: tensor(1.5504e-07, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5099e-07, dtype=torch.float64)
secont condition:: tensor(1.5099e-07, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5273e-07, dtype=torch.float64)
secont condition:: tensor(1.5273e-07, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7288e-07, dtype=torch.float64)
secont condition:: tensor(1.7288e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-07, dtype=torch.float64)
secont condition:: tensor(1.6809e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7637e-07, dtype=torch.float64)
secont condition:: tensor(1.7637e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8233e-07, dtype=torch.float64)
secont condition:: tensor(1.8233e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9496e-07, dtype=torch.float64)
secont condition:: tensor(1.9496e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9264e-07, dtype=torch.float64)
secont condition:: tensor(1.9264e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-07, dtype=torch.float64)
secont condition:: tensor(2.0260e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1133e-07, dtype=torch.float64)
secont condition:: tensor(2.1133e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1528e-07, dtype=torch.float64)
secont condition:: tensor(2.1528e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2054e-07, dtype=torch.float64)
secont condition:: tensor(2.2054e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.76917004585266
curr_diff: 0 tensor(7.5675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.6122e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.676513671875
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.47931289672852
time_baseline:: 100.75596475601196
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3089e-10, dtype=torch.float64)
secont condition:: tensor(8.3089e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0432e-09, dtype=torch.float64)
secont condition:: tensor(3.0432e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3851e-09, dtype=torch.float64)
secont condition:: tensor(5.3851e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3396e-09, dtype=torch.float64)
secont condition:: tensor(8.3396e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1460e-08, dtype=torch.float64)
secont condition:: tensor(1.1460e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-08, dtype=torch.float64)
secont condition:: tensor(1.4412e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7643e-08, dtype=torch.float64)
secont condition:: tensor(1.7643e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-08, dtype=torch.float64)
secont condition:: tensor(2.3862e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-08, dtype=torch.float64)
secont condition:: tensor(2.7662e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9236e-08, dtype=torch.float64)
secont condition:: tensor(2.9236e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2995e-08, dtype=torch.float64)
secont condition:: tensor(3.2995e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3627e-08, dtype=torch.float64)
secont condition:: tensor(3.3627e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7598e-08, dtype=torch.float64)
secont condition:: tensor(3.7598e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8769e-08, dtype=torch.float64)
secont condition:: tensor(3.8769e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4045e-08, dtype=torch.float64)
secont condition:: tensor(4.4045e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5228e-08, dtype=torch.float64)
secont condition:: tensor(4.5228e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7540e-08, dtype=torch.float64)
secont condition:: tensor(4.7540e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8484e-08, dtype=torch.float64)
secont condition:: tensor(4.8484e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0577e-08, dtype=torch.float64)
secont condition:: tensor(5.0577e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2796e-08, dtype=torch.float64)
secont condition:: tensor(5.2796e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5228e-08, dtype=torch.float64)
secont condition:: tensor(5.5228e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6648e-08, dtype=torch.float64)
secont condition:: tensor(5.6648e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9572e-08, dtype=torch.float64)
secont condition:: tensor(5.9572e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1544e-08, dtype=torch.float64)
secont condition:: tensor(6.1544e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9964e-08, dtype=torch.float64)
secont condition:: tensor(5.9964e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3765e-08, dtype=torch.float64)
secont condition:: tensor(6.3765e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2748e-08, dtype=torch.float64)
secont condition:: tensor(6.2748e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4504e-08, dtype=torch.float64)
secont condition:: tensor(6.4504e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7986e-08, dtype=torch.float64)
secont condition:: tensor(6.7986e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0580e-08, dtype=torch.float64)
secont condition:: tensor(7.0580e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2165e-08, dtype=torch.float64)
secont condition:: tensor(7.2165e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2603e-08, dtype=torch.float64)
secont condition:: tensor(7.2603e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7265e-08, dtype=torch.float64)
secont condition:: tensor(7.7265e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5710e-08, dtype=torch.float64)
secont condition:: tensor(7.5710e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8893e-08, dtype=torch.float64)
secont condition:: tensor(7.8893e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9173e-08, dtype=torch.float64)
secont condition:: tensor(7.9173e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1054e-08, dtype=torch.float64)
secont condition:: tensor(8.1054e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1824e-08, dtype=torch.float64)
secont condition:: tensor(8.1824e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7534e-08, dtype=torch.float64)
secont condition:: tensor(8.7534e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0982e-08, dtype=torch.float64)
secont condition:: tensor(9.0982e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0886e-07, dtype=torch.float64)
secont condition:: tensor(1.0886e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1244e-07, dtype=torch.float64)
secont condition:: tensor(1.1244e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1325e-07, dtype=torch.float64)
secont condition:: tensor(1.1325e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2287e-07, dtype=torch.float64)
secont condition:: tensor(1.2287e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5504e-07, dtype=torch.float64)
secont condition:: tensor(1.5504e-07, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5099e-07, dtype=torch.float64)
secont condition:: tensor(1.5099e-07, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5273e-07, dtype=torch.float64)
secont condition:: tensor(1.5273e-07, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7288e-07, dtype=torch.float64)
secont condition:: tensor(1.7288e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-07, dtype=torch.float64)
secont condition:: tensor(1.6809e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7637e-07, dtype=torch.float64)
secont condition:: tensor(1.7637e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8233e-07, dtype=torch.float64)
secont condition:: tensor(1.8233e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9496e-07, dtype=torch.float64)
secont condition:: tensor(1.9496e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9264e-07, dtype=torch.float64)
secont condition:: tensor(1.9264e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-07, dtype=torch.float64)
secont condition:: tensor(2.0260e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1133e-07, dtype=torch.float64)
secont condition:: tensor(2.1133e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1528e-07, dtype=torch.float64)
secont condition:: tensor(2.1528e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2054e-07, dtype=torch.float64)
secont condition:: tensor(2.2054e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.93484330177307
curr_diff: 0 tensor(7.5675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.6122e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.96808433532715
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.81018042564392
time_baseline:: 100.07355546951294
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3089e-10, dtype=torch.float64)
secont condition:: tensor(8.3089e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0432e-09, dtype=torch.float64)
secont condition:: tensor(3.0432e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3851e-09, dtype=torch.float64)
secont condition:: tensor(5.3851e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3396e-09, dtype=torch.float64)
secont condition:: tensor(8.3396e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1460e-08, dtype=torch.float64)
secont condition:: tensor(1.1460e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-08, dtype=torch.float64)
secont condition:: tensor(1.4412e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7643e-08, dtype=torch.float64)
secont condition:: tensor(1.7643e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-08, dtype=torch.float64)
secont condition:: tensor(2.3862e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-08, dtype=torch.float64)
secont condition:: tensor(2.7662e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9236e-08, dtype=torch.float64)
secont condition:: tensor(2.9236e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2995e-08, dtype=torch.float64)
secont condition:: tensor(3.2995e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3627e-08, dtype=torch.float64)
secont condition:: tensor(3.3627e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7598e-08, dtype=torch.float64)
secont condition:: tensor(3.7598e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8769e-08, dtype=torch.float64)
secont condition:: tensor(3.8769e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4045e-08, dtype=torch.float64)
secont condition:: tensor(4.4045e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5228e-08, dtype=torch.float64)
secont condition:: tensor(4.5228e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7540e-08, dtype=torch.float64)
secont condition:: tensor(4.7540e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8484e-08, dtype=torch.float64)
secont condition:: tensor(4.8484e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0577e-08, dtype=torch.float64)
secont condition:: tensor(5.0577e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2796e-08, dtype=torch.float64)
secont condition:: tensor(5.2796e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5228e-08, dtype=torch.float64)
secont condition:: tensor(5.5228e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6648e-08, dtype=torch.float64)
secont condition:: tensor(5.6648e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9572e-08, dtype=torch.float64)
secont condition:: tensor(5.9572e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1544e-08, dtype=torch.float64)
secont condition:: tensor(6.1544e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9964e-08, dtype=torch.float64)
secont condition:: tensor(5.9964e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3765e-08, dtype=torch.float64)
secont condition:: tensor(6.3765e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2748e-08, dtype=torch.float64)
secont condition:: tensor(6.2748e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4504e-08, dtype=torch.float64)
secont condition:: tensor(6.4504e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7986e-08, dtype=torch.float64)
secont condition:: tensor(6.7986e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0580e-08, dtype=torch.float64)
secont condition:: tensor(7.0580e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2165e-08, dtype=torch.float64)
secont condition:: tensor(7.2165e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2603e-08, dtype=torch.float64)
secont condition:: tensor(7.2603e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7265e-08, dtype=torch.float64)
secont condition:: tensor(7.7265e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5710e-08, dtype=torch.float64)
secont condition:: tensor(7.5710e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8893e-08, dtype=torch.float64)
secont condition:: tensor(7.8893e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9173e-08, dtype=torch.float64)
secont condition:: tensor(7.9173e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1054e-08, dtype=torch.float64)
secont condition:: tensor(8.1054e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1824e-08, dtype=torch.float64)
secont condition:: tensor(8.1824e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7534e-08, dtype=torch.float64)
secont condition:: tensor(8.7534e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0982e-08, dtype=torch.float64)
secont condition:: tensor(9.0982e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0886e-07, dtype=torch.float64)
secont condition:: tensor(1.0886e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1244e-07, dtype=torch.float64)
secont condition:: tensor(1.1244e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1325e-07, dtype=torch.float64)
secont condition:: tensor(1.1325e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2287e-07, dtype=torch.float64)
secont condition:: tensor(1.2287e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5504e-07, dtype=torch.float64)
secont condition:: tensor(1.5504e-07, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5099e-07, dtype=torch.float64)
secont condition:: tensor(1.5099e-07, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5273e-07, dtype=torch.float64)
secont condition:: tensor(1.5273e-07, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7288e-07, dtype=torch.float64)
secont condition:: tensor(1.7288e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-07, dtype=torch.float64)
secont condition:: tensor(1.6809e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7637e-07, dtype=torch.float64)
secont condition:: tensor(1.7637e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8233e-07, dtype=torch.float64)
secont condition:: tensor(1.8233e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9496e-07, dtype=torch.float64)
secont condition:: tensor(1.9496e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9264e-07, dtype=torch.float64)
secont condition:: tensor(1.9264e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-07, dtype=torch.float64)
secont condition:: tensor(2.0260e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1133e-07, dtype=torch.float64)
secont condition:: tensor(2.1133e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1528e-07, dtype=torch.float64)
secont condition:: tensor(2.1528e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2054e-07, dtype=torch.float64)
secont condition:: tensor(2.2054e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.821123600006104
curr_diff: 0 tensor(7.5675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.6122e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 118.26992011070251
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 99.60722541809082
time_baseline:: 99.87097930908203
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3089e-10, dtype=torch.float64)
secont condition:: tensor(8.3089e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0432e-09, dtype=torch.float64)
secont condition:: tensor(3.0432e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3851e-09, dtype=torch.float64)
secont condition:: tensor(5.3851e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3396e-09, dtype=torch.float64)
secont condition:: tensor(8.3396e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1460e-08, dtype=torch.float64)
secont condition:: tensor(1.1460e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-08, dtype=torch.float64)
secont condition:: tensor(1.4412e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7643e-08, dtype=torch.float64)
secont condition:: tensor(1.7643e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-08, dtype=torch.float64)
secont condition:: tensor(2.3862e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-08, dtype=torch.float64)
secont condition:: tensor(2.7662e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9236e-08, dtype=torch.float64)
secont condition:: tensor(2.9236e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2995e-08, dtype=torch.float64)
secont condition:: tensor(3.2995e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3627e-08, dtype=torch.float64)
secont condition:: tensor(3.3627e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7598e-08, dtype=torch.float64)
secont condition:: tensor(3.7598e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8769e-08, dtype=torch.float64)
secont condition:: tensor(3.8769e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4045e-08, dtype=torch.float64)
secont condition:: tensor(4.4045e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5228e-08, dtype=torch.float64)
secont condition:: tensor(4.5228e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7540e-08, dtype=torch.float64)
secont condition:: tensor(4.7540e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8484e-08, dtype=torch.float64)
secont condition:: tensor(4.8484e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0577e-08, dtype=torch.float64)
secont condition:: tensor(5.0577e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2796e-08, dtype=torch.float64)
secont condition:: tensor(5.2796e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5228e-08, dtype=torch.float64)
secont condition:: tensor(5.5228e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6648e-08, dtype=torch.float64)
secont condition:: tensor(5.6648e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9572e-08, dtype=torch.float64)
secont condition:: tensor(5.9572e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1544e-08, dtype=torch.float64)
secont condition:: tensor(6.1544e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9964e-08, dtype=torch.float64)
secont condition:: tensor(5.9964e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3765e-08, dtype=torch.float64)
secont condition:: tensor(6.3765e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2748e-08, dtype=torch.float64)
secont condition:: tensor(6.2748e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4504e-08, dtype=torch.float64)
secont condition:: tensor(6.4504e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7986e-08, dtype=torch.float64)
secont condition:: tensor(6.7986e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0580e-08, dtype=torch.float64)
secont condition:: tensor(7.0580e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2165e-08, dtype=torch.float64)
secont condition:: tensor(7.2165e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2603e-08, dtype=torch.float64)
secont condition:: tensor(7.2603e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7265e-08, dtype=torch.float64)
secont condition:: tensor(7.7265e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5710e-08, dtype=torch.float64)
secont condition:: tensor(7.5710e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8893e-08, dtype=torch.float64)
secont condition:: tensor(7.8893e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9173e-08, dtype=torch.float64)
secont condition:: tensor(7.9173e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1054e-08, dtype=torch.float64)
secont condition:: tensor(8.1054e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1824e-08, dtype=torch.float64)
secont condition:: tensor(8.1824e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7534e-08, dtype=torch.float64)
secont condition:: tensor(8.7534e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0982e-08, dtype=torch.float64)
secont condition:: tensor(9.0982e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0886e-07, dtype=torch.float64)
secont condition:: tensor(1.0886e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1244e-07, dtype=torch.float64)
secont condition:: tensor(1.1244e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1325e-07, dtype=torch.float64)
secont condition:: tensor(1.1325e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2287e-07, dtype=torch.float64)
secont condition:: tensor(1.2287e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5504e-07, dtype=torch.float64)
secont condition:: tensor(1.5504e-07, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5099e-07, dtype=torch.float64)
secont condition:: tensor(1.5099e-07, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5273e-07, dtype=torch.float64)
secont condition:: tensor(1.5273e-07, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7288e-07, dtype=torch.float64)
secont condition:: tensor(1.7288e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-07, dtype=torch.float64)
secont condition:: tensor(1.6809e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7637e-07, dtype=torch.float64)
secont condition:: tensor(1.7637e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8233e-07, dtype=torch.float64)
secont condition:: tensor(1.8233e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9496e-07, dtype=torch.float64)
secont condition:: tensor(1.9496e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9264e-07, dtype=torch.float64)
secont condition:: tensor(1.9264e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-07, dtype=torch.float64)
secont condition:: tensor(2.0260e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1133e-07, dtype=torch.float64)
secont condition:: tensor(2.1133e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1528e-07, dtype=torch.float64)
secont condition:: tensor(2.1528e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2054e-07, dtype=torch.float64)
secont condition:: tensor(2.2054e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.896151065826416
curr_diff: 0 tensor(7.5675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.6122e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251944
Test Avg. Loss: 0.000024, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.242335
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 2, Batch: 0, Loss: 0.235812
Test Avg. Loss: 0.000023, Accuracy: 0.939400
Train - Epoch 3, Batch: 0, Loss: 0.231236
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 4, Batch: 0, Loss: 0.227946
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 5, Batch: 0, Loss: 0.225535
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 6, Batch: 0, Loss: 0.223740
Test Avg. Loss: 0.000022, Accuracy: 0.942100
Train - Epoch 7, Batch: 0, Loss: 0.222385
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 8, Batch: 0, Loss: 0.221352
Test Avg. Loss: 0.000021, Accuracy: 0.943200
Train - Epoch 9, Batch: 0, Loss: 0.220554
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 10, Batch: 0, Loss: 0.219933
Test Avg. Loss: 0.000021, Accuracy: 0.943600
Train - Epoch 11, Batch: 0, Loss: 0.219443
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 12, Batch: 0, Loss: 0.219053
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 13, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 14, Batch: 0, Loss: 0.218484
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 15, Batch: 0, Loss: 0.218274
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 16, Batch: 0, Loss: 0.218100
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 17, Batch: 0, Loss: 0.217952
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 18, Batch: 0, Loss: 0.217827
Test Avg. Loss: 0.000021, Accuracy: 0.945200
Train - Epoch 19, Batch: 0, Loss: 0.217718
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 20, Batch: 0, Loss: 0.217623
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.217539
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.217465
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.217397
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 24, Batch: 0, Loss: 0.217335
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.217278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.217226
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217176
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.217130
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 29, Batch: 0, Loss: 0.217085
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.217043
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 31, Batch: 0, Loss: 0.217003
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.216964
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 33, Batch: 0, Loss: 0.216926
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 34, Batch: 0, Loss: 0.216890
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 35, Batch: 0, Loss: 0.216855
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 36, Batch: 0, Loss: 0.216821
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.216788
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216724
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.216693
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 41, Batch: 0, Loss: 0.216663
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 42, Batch: 0, Loss: 0.216633
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 43, Batch: 0, Loss: 0.216604
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 44, Batch: 0, Loss: 0.216576
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 45, Batch: 0, Loss: 0.216548
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 46, Batch: 0, Loss: 0.216521
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.216494
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216467
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 49, Batch: 0, Loss: 0.216441
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 50, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 51, Batch: 0, Loss: 0.216390
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 52, Batch: 0, Loss: 0.216365
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 53, Batch: 0, Loss: 0.216341
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 54, Batch: 0, Loss: 0.216316
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 55, Batch: 0, Loss: 0.216293
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 56, Batch: 0, Loss: 0.216269
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 57, Batch: 0, Loss: 0.216246
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 58, Batch: 0, Loss: 0.216223
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 59, Batch: 0, Loss: 0.216201
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 60, Batch: 0, Loss: 0.216179
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 61, Batch: 0, Loss: 0.216157
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 62, Batch: 0, Loss: 0.216135
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 63, Batch: 0, Loss: 0.216114
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 64, Batch: 0, Loss: 0.216093
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 65, Batch: 0, Loss: 0.216072
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 66, Batch: 0, Loss: 0.216051
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 67, Batch: 0, Loss: 0.216031
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 68, Batch: 0, Loss: 0.216010
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 69, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 70, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 71, Batch: 0, Loss: 0.215951
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 72, Batch: 0, Loss: 0.215932
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 73, Batch: 0, Loss: 0.215913
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 74, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 75, Batch: 0, Loss: 0.215875
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 76, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 77, Batch: 0, Loss: 0.215838
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 78, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 79, Batch: 0, Loss: 0.215802
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 80, Batch: 0, Loss: 0.215784
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 81, Batch: 0, Loss: 0.215766
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 82, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 83, Batch: 0, Loss: 0.215732
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 84, Batch: 0, Loss: 0.215714
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 85, Batch: 0, Loss: 0.215697
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 86, Batch: 0, Loss: 0.215680
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 87, Batch: 0, Loss: 0.215663
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 88, Batch: 0, Loss: 0.215647
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 89, Batch: 0, Loss: 0.215630
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 90, Batch: 0, Loss: 0.215614
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 91, Batch: 0, Loss: 0.215597
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 92, Batch: 0, Loss: 0.215581
Test Avg. Loss: 0.000021, Accuracy: 0.945600/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.215565
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 94, Batch: 0, Loss: 0.215549
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 95, Batch: 0, Loss: 0.215533
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 96, Batch: 0, Loss: 0.215517
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 97, Batch: 0, Loss: 0.215502
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 98, Batch: 0, Loss: 0.215486
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 99, Batch: 0, Loss: 0.215471
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 100, Batch: 0, Loss: 0.215455
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 101, Batch: 0, Loss: 0.215440
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 102, Batch: 0, Loss: 0.215425
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 103, Batch: 0, Loss: 0.215410
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 104, Batch: 0, Loss: 0.215395
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 105, Batch: 0, Loss: 0.215380
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 106, Batch: 0, Loss: 0.215365
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 107, Batch: 0, Loss: 0.215350
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 108, Batch: 0, Loss: 0.215336
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 109, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 110, Batch: 0, Loss: 0.215307
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 111, Batch: 0, Loss: 0.215292
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 112, Batch: 0, Loss: 0.215278
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 113, Batch: 0, Loss: 0.215264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 114, Batch: 0, Loss: 0.215249
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 115, Batch: 0, Loss: 0.215235
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 116, Batch: 0, Loss: 0.215221
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 117, Batch: 0, Loss: 0.215207
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 118, Batch: 0, Loss: 0.215193
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 119, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 117.98655009269714
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 100.52947783470154
time_baseline:: 100.80570363998413
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3089e-10, dtype=torch.float64)
secont condition:: tensor(8.3089e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0432e-09, dtype=torch.float64)
secont condition:: tensor(3.0432e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3851e-09, dtype=torch.float64)
secont condition:: tensor(5.3851e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3396e-09, dtype=torch.float64)
secont condition:: tensor(8.3396e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1460e-08, dtype=torch.float64)
secont condition:: tensor(1.1460e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-08, dtype=torch.float64)
secont condition:: tensor(1.4412e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7643e-08, dtype=torch.float64)
secont condition:: tensor(1.7643e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-08, dtype=torch.float64)
secont condition:: tensor(2.3862e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7662e-08, dtype=torch.float64)
secont condition:: tensor(2.7662e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9236e-08, dtype=torch.float64)
secont condition:: tensor(2.9236e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2995e-08, dtype=torch.float64)
secont condition:: tensor(3.2995e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3627e-08, dtype=torch.float64)
secont condition:: tensor(3.3627e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7598e-08, dtype=torch.float64)
secont condition:: tensor(3.7598e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8769e-08, dtype=torch.float64)
secont condition:: tensor(3.8769e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4045e-08, dtype=torch.float64)
secont condition:: tensor(4.4045e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5228e-08, dtype=torch.float64)
secont condition:: tensor(4.5228e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7540e-08, dtype=torch.float64)
secont condition:: tensor(4.7540e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8484e-08, dtype=torch.float64)
secont condition:: tensor(4.8484e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0577e-08, dtype=torch.float64)
secont condition:: tensor(5.0577e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2796e-08, dtype=torch.float64)
secont condition:: tensor(5.2796e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5228e-08, dtype=torch.float64)
secont condition:: tensor(5.5228e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6648e-08, dtype=torch.float64)
secont condition:: tensor(5.6648e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9572e-08, dtype=torch.float64)
secont condition:: tensor(5.9572e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1544e-08, dtype=torch.float64)
secont condition:: tensor(6.1544e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9964e-08, dtype=torch.float64)
secont condition:: tensor(5.9964e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3765e-08, dtype=torch.float64)
secont condition:: tensor(6.3765e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2748e-08, dtype=torch.float64)
secont condition:: tensor(6.2748e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4504e-08, dtype=torch.float64)
secont condition:: tensor(6.4504e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7986e-08, dtype=torch.float64)
secont condition:: tensor(6.7986e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0580e-08, dtype=torch.float64)
secont condition:: tensor(7.0580e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2165e-08, dtype=torch.float64)
secont condition:: tensor(7.2165e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2603e-08, dtype=torch.float64)
secont condition:: tensor(7.2603e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7265e-08, dtype=torch.float64)
secont condition:: tensor(7.7265e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5710e-08, dtype=torch.float64)
secont condition:: tensor(7.5710e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8893e-08, dtype=torch.float64)
secont condition:: tensor(7.8893e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9173e-08, dtype=torch.float64)
secont condition:: tensor(7.9173e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1054e-08, dtype=torch.float64)
secont condition:: tensor(8.1054e-08, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1824e-08, dtype=torch.float64)
secont condition:: tensor(8.1824e-08, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7534e-08, dtype=torch.float64)
secont condition:: tensor(8.7534e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0982e-08, dtype=torch.float64)
secont condition:: tensor(9.0982e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7466e-08, dtype=torch.float64)
secont condition:: tensor(9.7466e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0886e-07, dtype=torch.float64)
secont condition:: tensor(1.0886e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1244e-07, dtype=torch.float64)
secont condition:: tensor(1.1244e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1325e-07, dtype=torch.float64)
secont condition:: tensor(1.1325e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
epoch  62
	calling Sampler:__iter__
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2287e-07, dtype=torch.float64)
secont condition:: tensor(1.2287e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-07, dtype=torch.float64)
secont condition:: tensor(1.2925e-07, dtype=torch.float64)
epoch  67
	calling Sampler:__iter__
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
epoch  73
	calling Sampler:__iter__
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5504e-07, dtype=torch.float64)
secont condition:: tensor(1.5504e-07, dtype=torch.float64)
epoch  76
	calling Sampler:__iter__
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5099e-07, dtype=torch.float64)
secont condition:: tensor(1.5099e-07, dtype=torch.float64)
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5273e-07, dtype=torch.float64)
secont condition:: tensor(1.5273e-07, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7288e-07, dtype=torch.float64)
secont condition:: tensor(1.7288e-07, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-07, dtype=torch.float64)
secont condition:: tensor(1.6809e-07, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7637e-07, dtype=torch.float64)
secont condition:: tensor(1.7637e-07, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8233e-07, dtype=torch.float64)
secont condition:: tensor(1.8233e-07, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9496e-07, dtype=torch.float64)
secont condition:: tensor(1.9496e-07, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9264e-07, dtype=torch.float64)
secont condition:: tensor(1.9264e-07, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0260e-07, dtype=torch.float64)
secont condition:: tensor(2.0260e-07, dtype=torch.float64)
epoch  109
	calling Sampler:__iter__
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1133e-07, dtype=torch.float64)
secont condition:: tensor(2.1133e-07, dtype=torch.float64)
epoch  112
	calling Sampler:__iter__
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1528e-07, dtype=torch.float64)
secont condition:: tensor(2.1528e-07, dtype=torch.float64)
epoch  115
	calling Sampler:__iter__
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2054e-07, dtype=torch.float64)
secont condition:: tensor(2.2054e-07, dtype=torch.float64)
epoch  118
	calling Sampler:__iter__
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 16.787562131881714
curr_diff: 0 tensor(7.5675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.5352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.6122e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 30000
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250358
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.236528
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.224929
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.229468
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.222380
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.222380
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217822
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217792
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.218312
Test Avg. Loss: 0.000021, Accuracy: 0.945100
Train - Epoch 9, Batch: 0, Loss: 0.217600
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.213930
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.218094
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.221182
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.217576
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.218440
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.213922
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.216455
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216577
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.217982
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.216701
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.218451
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.216497
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.217066
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216005
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215387
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.215769
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215111
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217077
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.217673
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.214614
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.215463
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.216759
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.213716
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.213452
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.218126
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 35, Batch: 0, Loss: 0.209591
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.214841
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.216725
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.219340
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.217034
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.218684
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.214180
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215321
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.214789
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.211258
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.214450
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216060
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.214577
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.219724
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 49, Batch: 0, Loss: 0.221996
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.215749
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214617
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.215989
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216113
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.213432
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216143
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.219363
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.212884
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.218108
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215532
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.10887026786804
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.95734357833862
time_baseline:: 45.09507942199707
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7221e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5708e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5582e-09, dtype=torch.float64)
secont condition:: tensor(2.5582e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2456e-09, dtype=torch.float64)
secont condition:: tensor(3.2456e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6936e-09, dtype=torch.float64)
secont condition:: tensor(7.6936e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3571e-09, dtype=torch.float64)
secont condition:: tensor(8.3571e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6567e-08, dtype=torch.float64)
secont condition:: tensor(1.6567e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3723e-08, dtype=torch.float64)
secont condition:: tensor(1.3723e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7910e-08, dtype=torch.float64)
secont condition:: tensor(1.7910e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0498e-08, dtype=torch.float64)
secont condition:: tensor(2.0498e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4807e-08, dtype=torch.float64)
secont condition:: tensor(2.4807e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7806e-08, dtype=torch.float64)
secont condition:: tensor(2.7806e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8560e-08, dtype=torch.float64)
secont condition:: tensor(2.8560e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0796e-08, dtype=torch.float64)
secont condition:: tensor(3.0796e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0281e-08, dtype=torch.float64)
secont condition:: tensor(3.0281e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9250e-08, dtype=torch.float64)
secont condition:: tensor(3.9250e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1159e-08, dtype=torch.float64)
secont condition:: tensor(4.1159e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1896e-08, dtype=torch.float64)
secont condition:: tensor(4.1896e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6434e-08, dtype=torch.float64)
secont condition:: tensor(5.6434e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4329e-08, dtype=torch.float64)
secont condition:: tensor(4.4329e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4773e-08, dtype=torch.float64)
secont condition:: tensor(4.4773e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9796e-08, dtype=torch.float64)
secont condition:: tensor(4.9796e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9376e-08, dtype=torch.float64)
secont condition:: tensor(5.9376e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5407e-08, dtype=torch.float64)
secont condition:: tensor(5.5407e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3451e-08, dtype=torch.float64)
secont condition:: tensor(5.3451e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8742e-08, dtype=torch.float64)
secont condition:: tensor(5.8742e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6228e-08, dtype=torch.float64)
secont condition:: tensor(5.6228e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8014e-08, dtype=torch.float64)
secont condition:: tensor(5.8014e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8488e-08, dtype=torch.float64)
secont condition:: tensor(5.8488e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5722e-08, dtype=torch.float64)
secont condition:: tensor(6.5722e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3546e-08, dtype=torch.float64)
secont condition:: tensor(6.3546e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0865e-08, dtype=torch.float64)
secont condition:: tensor(7.0865e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3660e-08, dtype=torch.float64)
secont condition:: tensor(7.3660e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5024e-08, dtype=torch.float64)
secont condition:: tensor(7.5024e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8826e-08, dtype=torch.float64)
secont condition:: tensor(7.8826e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6558e-08, dtype=torch.float64)
secont condition:: tensor(7.6558e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6296e-08, dtype=torch.float64)
secont condition:: tensor(7.6296e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3286e-08, dtype=torch.float64)
secont condition:: tensor(8.3286e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3631e-08, dtype=torch.float64)
secont condition:: tensor(8.3631e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8762e-08, dtype=torch.float64)
secont condition:: tensor(7.8762e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9123e-08, dtype=torch.float64)
secont condition:: tensor(7.9123e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4667e-08, dtype=torch.float64)
secont condition:: tensor(8.4667e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1327e-08, dtype=torch.float64)
secont condition:: tensor(9.1327e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5338e-08, dtype=torch.float64)
secont condition:: tensor(9.5338e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0927e-07, dtype=torch.float64)
secont condition:: tensor(1.0927e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1596e-07, dtype=torch.float64)
secont condition:: tensor(1.1596e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1085e-07, dtype=torch.float64)
secont condition:: tensor(1.1085e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-07, dtype=torch.float64)
secont condition:: tensor(1.2282e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2674e-07, dtype=torch.float64)
secont condition:: tensor(1.2674e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3383e-07, dtype=torch.float64)
secont condition:: tensor(1.3383e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-07, dtype=torch.float64)
secont condition:: tensor(1.3150e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4648e-07, dtype=torch.float64)
secont condition:: tensor(1.4648e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4618e-07, dtype=torch.float64)
secont condition:: tensor(1.4618e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5003e-07, dtype=torch.float64)
secont condition:: tensor(1.5003e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6581e-07, dtype=torch.float64)
secont condition:: tensor(1.6581e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6045e-07, dtype=torch.float64)
secont condition:: tensor(1.6045e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8455e-07, dtype=torch.float64)
secont condition:: tensor(1.8455e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6789e-07, dtype=torch.float64)
secont condition:: tensor(1.6789e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8144e-07, dtype=torch.float64)
secont condition:: tensor(1.8144e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7145e-07, dtype=torch.float64)
secont condition:: tensor(1.7145e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8030e-07, dtype=torch.float64)
secont condition:: tensor(1.8030e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9856e-07, dtype=torch.float64)
secont condition:: tensor(1.9856e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1928e-07, dtype=torch.float64)
secont condition:: tensor(2.1928e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9895e-07, dtype=torch.float64)
secont condition:: tensor(1.9895e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1163e-07, dtype=torch.float64)
secont condition:: tensor(2.1163e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2543e-07, dtype=torch.float64)
secont condition:: tensor(2.2543e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2113e-07, dtype=torch.float64)
secont condition:: tensor(2.2113e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.804322481155396
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1164e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.0100e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.9240e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7853e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5898e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.256125
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.231345
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.225600
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.223591
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.222901
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.218282
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.219703
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.216511
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.220571
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.216888
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.215854
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.213340
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.219807
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.217743
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.217307
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216088
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.216919
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.216336
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.220549
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.214349
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.220243
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.215820
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.215600
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.216416
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.211936
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.215323
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.216211
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.219732
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 28, Batch: 0, Loss: 0.216193
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217866
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.213105
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.220689
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.215359
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.209140
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 34, Batch: 0, Loss: 0.219987
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.216387
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 36, Batch: 0, Loss: 0.215371
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 37, Batch: 0, Loss: 0.217079
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.213756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.216659
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.215983
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.211069
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.213878
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.212595
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.214410
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.211417
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.213970
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 47, Batch: 0, Loss: 0.218139
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.211903
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.218730
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216085
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.219299
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.217883
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213171
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.211092
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.217122
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.217261
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216992
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.211797
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215638
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.35091543197632
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 44.91126298904419
time_baseline:: 45.04466271400452
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8664e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5577e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3399e-10, dtype=torch.float64)
secont condition:: tensor(9.3399e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0430e-09, dtype=torch.float64)
secont condition:: tensor(3.0430e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7686e-09, dtype=torch.float64)
secont condition:: tensor(4.7686e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6382e-09, dtype=torch.float64)
secont condition:: tensor(8.6382e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2773e-08, dtype=torch.float64)
secont condition:: tensor(1.2773e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5884e-08, dtype=torch.float64)
secont condition:: tensor(1.5884e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7753e-08, dtype=torch.float64)
secont condition:: tensor(1.7753e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1172e-08, dtype=torch.float64)
secont condition:: tensor(2.1172e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3409e-08, dtype=torch.float64)
secont condition:: tensor(2.3409e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9071e-08, dtype=torch.float64)
secont condition:: tensor(2.9071e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5793e-08, dtype=torch.float64)
secont condition:: tensor(2.5793e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3276e-08, dtype=torch.float64)
secont condition:: tensor(3.3276e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6080e-08, dtype=torch.float64)
secont condition:: tensor(3.6080e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9874e-08, dtype=torch.float64)
secont condition:: tensor(3.9874e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1302e-08, dtype=torch.float64)
secont condition:: tensor(4.1302e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3503e-08, dtype=torch.float64)
secont condition:: tensor(4.3503e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0301e-08, dtype=torch.float64)
secont condition:: tensor(4.0301e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0019e-08, dtype=torch.float64)
secont condition:: tensor(5.0019e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7365e-08, dtype=torch.float64)
secont condition:: tensor(4.7365e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4163e-08, dtype=torch.float64)
secont condition:: tensor(5.4163e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2639e-08, dtype=torch.float64)
secont condition:: tensor(6.2639e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6596e-08, dtype=torch.float64)
secont condition:: tensor(5.6596e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4274e-08, dtype=torch.float64)
secont condition:: tensor(6.4274e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9888e-08, dtype=torch.float64)
secont condition:: tensor(5.9888e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0738e-08, dtype=torch.float64)
secont condition:: tensor(7.0738e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0744e-08, dtype=torch.float64)
secont condition:: tensor(6.0744e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0848e-08, dtype=torch.float64)
secont condition:: tensor(7.0848e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0101e-08, dtype=torch.float64)
secont condition:: tensor(6.0101e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7595e-08, dtype=torch.float64)
secont condition:: tensor(6.7595e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5361e-08, dtype=torch.float64)
secont condition:: tensor(6.5361e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0430e-08, dtype=torch.float64)
secont condition:: tensor(8.0430e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8716e-08, dtype=torch.float64)
secont condition:: tensor(6.8716e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5587e-08, dtype=torch.float64)
secont condition:: tensor(7.5587e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1863e-08, dtype=torch.float64)
secont condition:: tensor(7.1863e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6600e-08, dtype=torch.float64)
secont condition:: tensor(6.6600e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1428e-08, dtype=torch.float64)
secont condition:: tensor(8.1428e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1788e-08, dtype=torch.float64)
secont condition:: tensor(8.1788e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9014e-08, dtype=torch.float64)
secont condition:: tensor(7.9014e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7740e-08, dtype=torch.float64)
secont condition:: tensor(7.7740e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7968e-08, dtype=torch.float64)
secont condition:: tensor(8.7968e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3596e-08, dtype=torch.float64)
secont condition:: tensor(8.3596e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8725e-08, dtype=torch.float64)
secont condition:: tensor(9.8725e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0670e-07, dtype=torch.float64)
secont condition:: tensor(1.0670e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1431e-07, dtype=torch.float64)
secont condition:: tensor(1.1431e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1476e-07, dtype=torch.float64)
secont condition:: tensor(1.1476e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1806e-07, dtype=torch.float64)
secont condition:: tensor(1.1806e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1601e-07, dtype=torch.float64)
secont condition:: tensor(1.1601e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2942e-07, dtype=torch.float64)
secont condition:: tensor(1.2942e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4650e-07, dtype=torch.float64)
secont condition:: tensor(1.4650e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4764e-07, dtype=torch.float64)
secont condition:: tensor(1.4764e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4905e-07, dtype=torch.float64)
secont condition:: tensor(1.4905e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5337e-07, dtype=torch.float64)
secont condition:: tensor(1.5337e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4631e-07, dtype=torch.float64)
secont condition:: tensor(1.4631e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5700e-07, dtype=torch.float64)
secont condition:: tensor(1.5700e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-07, dtype=torch.float64)
secont condition:: tensor(1.5521e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7195e-07, dtype=torch.float64)
secont condition:: tensor(1.7195e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7270e-07, dtype=torch.float64)
secont condition:: tensor(1.7270e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9525e-07, dtype=torch.float64)
secont condition:: tensor(1.9525e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0313e-07, dtype=torch.float64)
secont condition:: tensor(2.0313e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9193e-07, dtype=torch.float64)
secont condition:: tensor(1.9193e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9136e-07, dtype=torch.float64)
secont condition:: tensor(1.9136e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1499e-07, dtype=torch.float64)
secont condition:: tensor(2.1499e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0058e-07, dtype=torch.float64)
secont condition:: tensor(2.0058e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2628e-07, dtype=torch.float64)
secont condition:: tensor(2.2628e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2839e-07, dtype=torch.float64)
secont condition:: tensor(2.2839e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.809937238693237
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5115e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.1958e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2587e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5563e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.256007
Test Avg. Loss: 0.000023, Accuracy: 0.937900
Train - Epoch 1, Batch: 0, Loss: 0.238685
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.224626
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.225781
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 4, Batch: 0, Loss: 0.217038
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.217732
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217431
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.221135
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.220434
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.220031
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.220389
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 11, Batch: 0, Loss: 0.217805
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.217699
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.218394
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.215058
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217227
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.213241
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.214365
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.213776
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.216957
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.217364
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.218875
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.217200
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.218437
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215098
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.216798
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.216200
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.217842
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.216610
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.217645
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.214760
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.220946
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.216257
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.211912
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.218024
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.219481
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.215166
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.214987
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.216746
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.214770
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 40, Batch: 0, Loss: 0.213463
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.215094
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.215169
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217225
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.216415
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.218204
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216953
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.212829
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 48, Batch: 0, Loss: 0.216279
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.219464
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.217553
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.217922
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.216493
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.213005
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.215210
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216155
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.216187
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.219967
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.210844
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215655
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.546441078186035
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.3750216960907
time_baseline:: 45.50866484642029
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8738e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5314e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1135e-09, dtype=torch.float64)
secont condition:: tensor(3.1135e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7744e-09, dtype=torch.float64)
secont condition:: tensor(2.7744e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7136e-09, dtype=torch.float64)
secont condition:: tensor(3.7136e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5683e-09, dtype=torch.float64)
secont condition:: tensor(8.5683e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0939e-08, dtype=torch.float64)
secont condition:: tensor(1.0939e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4636e-08, dtype=torch.float64)
secont condition:: tensor(1.4636e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0776e-08, dtype=torch.float64)
secont condition:: tensor(2.0776e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0806e-08, dtype=torch.float64)
secont condition:: tensor(2.0806e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6033e-08, dtype=torch.float64)
secont condition:: tensor(2.6033e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6432e-08, dtype=torch.float64)
secont condition:: tensor(2.6432e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0870e-08, dtype=torch.float64)
secont condition:: tensor(3.0870e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2175e-08, dtype=torch.float64)
secont condition:: tensor(3.2175e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1612e-08, dtype=torch.float64)
secont condition:: tensor(3.1612e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9961e-08, dtype=torch.float64)
secont condition:: tensor(3.9961e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5977e-08, dtype=torch.float64)
secont condition:: tensor(3.5977e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6102e-08, dtype=torch.float64)
secont condition:: tensor(4.6102e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4822e-08, dtype=torch.float64)
secont condition:: tensor(4.4822e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6784e-08, dtype=torch.float64)
secont condition:: tensor(4.6784e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3802e-08, dtype=torch.float64)
secont condition:: tensor(4.3802e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2621e-08, dtype=torch.float64)
secont condition:: tensor(5.2621e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6974e-08, dtype=torch.float64)
secont condition:: tensor(6.6974e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6184e-08, dtype=torch.float64)
secont condition:: tensor(5.6184e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3432e-08, dtype=torch.float64)
secont condition:: tensor(6.3432e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3715e-08, dtype=torch.float64)
secont condition:: tensor(5.3715e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7243e-08, dtype=torch.float64)
secont condition:: tensor(5.7243e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2258e-08, dtype=torch.float64)
secont condition:: tensor(6.2258e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3291e-08, dtype=torch.float64)
secont condition:: tensor(6.3291e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3087e-08, dtype=torch.float64)
secont condition:: tensor(6.3087e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9023e-08, dtype=torch.float64)
secont condition:: tensor(6.9023e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5854e-08, dtype=torch.float64)
secont condition:: tensor(6.5854e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0322e-08, dtype=torch.float64)
secont condition:: tensor(7.0322e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9516e-08, dtype=torch.float64)
secont condition:: tensor(6.9516e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9357e-08, dtype=torch.float64)
secont condition:: tensor(6.9357e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4458e-08, dtype=torch.float64)
secont condition:: tensor(7.4458e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6845e-08, dtype=torch.float64)
secont condition:: tensor(8.6845e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8934e-08, dtype=torch.float64)
secont condition:: tensor(7.8934e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0588e-08, dtype=torch.float64)
secont condition:: tensor(8.0588e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2697e-08, dtype=torch.float64)
secont condition:: tensor(8.2697e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5167e-08, dtype=torch.float64)
secont condition:: tensor(8.5167e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8129e-08, dtype=torch.float64)
secont condition:: tensor(8.8129e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8282e-08, dtype=torch.float64)
secont condition:: tensor(7.8282e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5615e-08, dtype=torch.float64)
secont condition:: tensor(9.5615e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1274e-07, dtype=torch.float64)
secont condition:: tensor(1.1274e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2274e-07, dtype=torch.float64)
secont condition:: tensor(1.2274e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1594e-07, dtype=torch.float64)
secont condition:: tensor(1.1594e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2212e-07, dtype=torch.float64)
secont condition:: tensor(1.2212e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1981e-07, dtype=torch.float64)
secont condition:: tensor(1.1981e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3536e-07, dtype=torch.float64)
secont condition:: tensor(1.3536e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3314e-07, dtype=torch.float64)
secont condition:: tensor(1.3314e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4336e-07, dtype=torch.float64)
secont condition:: tensor(1.4336e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5936e-07, dtype=torch.float64)
secont condition:: tensor(1.5936e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4690e-07, dtype=torch.float64)
secont condition:: tensor(1.4690e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5219e-07, dtype=torch.float64)
secont condition:: tensor(1.5219e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7708e-07, dtype=torch.float64)
secont condition:: tensor(1.7708e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7544e-07, dtype=torch.float64)
secont condition:: tensor(1.7544e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7805e-07, dtype=torch.float64)
secont condition:: tensor(1.7805e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7766e-07, dtype=torch.float64)
secont condition:: tensor(1.7766e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8876e-07, dtype=torch.float64)
secont condition:: tensor(1.8876e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9168e-07, dtype=torch.float64)
secont condition:: tensor(1.9168e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9533e-07, dtype=torch.float64)
secont condition:: tensor(1.9533e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9559e-07, dtype=torch.float64)
secont condition:: tensor(1.9559e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1161e-07, dtype=torch.float64)
secont condition:: tensor(2.1161e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0100e-07, dtype=torch.float64)
secont condition:: tensor(2.0100e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1821e-07, dtype=torch.float64)
secont condition:: tensor(2.1821e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3984e-07, dtype=torch.float64)
secont condition:: tensor(2.3984e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.803807020187378
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2410e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6992e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5146e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8691e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5560e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255857
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.234741
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.229567
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.224865
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.221818
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.216395
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.215169
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217542
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.217787
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 9, Batch: 0, Loss: 0.222873
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.214226
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.220860
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215673
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.221213
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 14, Batch: 0, Loss: 0.216768
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216631
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.217056
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.218861
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.212580
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.215493
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.219759
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.216161
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 22, Batch: 0, Loss: 0.218063
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.215807
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215034
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.214764
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.221753
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.215864
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.212509
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.218029
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.215271
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.217580
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 32, Batch: 0, Loss: 0.216884
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 33, Batch: 0, Loss: 0.218209
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.215894
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.211471
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.218921
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.213636
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214614
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.217019
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.215086
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.213195
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.217756
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.215285
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.214286
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.216396
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216944
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 47, Batch: 0, Loss: 0.209955
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.216696
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.217672
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.215131
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.214309
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.215512
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.216558
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.212293
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.216054
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.219835
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216943
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.215856
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.215991
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.18831133842468
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.56235218048096
time_baseline:: 45.695714473724365
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8214e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5128e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1562e-09, dtype=torch.float64)
secont condition:: tensor(2.1562e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9244e-09, dtype=torch.float64)
secont condition:: tensor(2.9244e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8459e-09, dtype=torch.float64)
secont condition:: tensor(6.8459e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0848e-09, dtype=torch.float64)
secont condition:: tensor(9.0848e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4043e-09, dtype=torch.float64)
secont condition:: tensor(8.4043e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4938e-08, dtype=torch.float64)
secont condition:: tensor(1.4938e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5848e-08, dtype=torch.float64)
secont condition:: tensor(1.5848e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2741e-08, dtype=torch.float64)
secont condition:: tensor(2.2741e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0966e-08, dtype=torch.float64)
secont condition:: tensor(2.0966e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9225e-08, dtype=torch.float64)
secont condition:: tensor(2.9225e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2994e-08, dtype=torch.float64)
secont condition:: tensor(2.2994e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6722e-08, dtype=torch.float64)
secont condition:: tensor(3.6722e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6882e-08, dtype=torch.float64)
secont condition:: tensor(3.6882e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0791e-08, dtype=torch.float64)
secont condition:: tensor(4.0791e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4741e-08, dtype=torch.float64)
secont condition:: tensor(4.4741e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6862e-08, dtype=torch.float64)
secont condition:: tensor(4.6862e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9133e-08, dtype=torch.float64)
secont condition:: tensor(3.9133e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9191e-08, dtype=torch.float64)
secont condition:: tensor(4.9191e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0544e-08, dtype=torch.float64)
secont condition:: tensor(5.0544e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2047e-08, dtype=torch.float64)
secont condition:: tensor(5.2047e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1515e-08, dtype=torch.float64)
secont condition:: tensor(5.1515e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4365e-08, dtype=torch.float64)
secont condition:: tensor(5.4365e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0385e-08, dtype=torch.float64)
secont condition:: tensor(6.0385e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3193e-08, dtype=torch.float64)
secont condition:: tensor(6.3193e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6446e-08, dtype=torch.float64)
secont condition:: tensor(6.6446e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1932e-08, dtype=torch.float64)
secont condition:: tensor(6.1932e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4720e-08, dtype=torch.float64)
secont condition:: tensor(5.4720e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7573e-08, dtype=torch.float64)
secont condition:: tensor(6.7573e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8632e-08, dtype=torch.float64)
secont condition:: tensor(6.8632e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1122e-08, dtype=torch.float64)
secont condition:: tensor(7.1122e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3483e-08, dtype=torch.float64)
secont condition:: tensor(8.3483e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2131e-08, dtype=torch.float64)
secont condition:: tensor(7.2131e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6275e-08, dtype=torch.float64)
secont condition:: tensor(6.6275e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2822e-08, dtype=torch.float64)
secont condition:: tensor(7.2822e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6030e-08, dtype=torch.float64)
secont condition:: tensor(7.6030e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4245e-08, dtype=torch.float64)
secont condition:: tensor(8.4245e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8277e-08, dtype=torch.float64)
secont condition:: tensor(7.8277e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6399e-08, dtype=torch.float64)
secont condition:: tensor(7.6399e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1077e-08, dtype=torch.float64)
secont condition:: tensor(7.1077e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3714e-08, dtype=torch.float64)
secont condition:: tensor(8.3714e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4319e-08, dtype=torch.float64)
secont condition:: tensor(9.4319e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8006e-08, dtype=torch.float64)
secont condition:: tensor(9.8006e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0880e-07, dtype=torch.float64)
secont condition:: tensor(1.0880e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1777e-07, dtype=torch.float64)
secont condition:: tensor(1.1777e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0830e-07, dtype=torch.float64)
secont condition:: tensor(1.0830e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0882e-07, dtype=torch.float64)
secont condition:: tensor(1.0882e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3680e-07, dtype=torch.float64)
secont condition:: tensor(1.3680e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3354e-07, dtype=torch.float64)
secont condition:: tensor(1.3354e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2129e-07, dtype=torch.float64)
secont condition:: tensor(1.2129e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4296e-07, dtype=torch.float64)
secont condition:: tensor(1.4296e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5499e-07, dtype=torch.float64)
secont condition:: tensor(1.5499e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6963e-07, dtype=torch.float64)
secont condition:: tensor(1.6963e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5626e-07, dtype=torch.float64)
secont condition:: tensor(1.5626e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6474e-07, dtype=torch.float64)
secont condition:: tensor(1.6474e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7524e-07, dtype=torch.float64)
secont condition:: tensor(1.7524e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7792e-07, dtype=torch.float64)
secont condition:: tensor(1.7792e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8571e-07, dtype=torch.float64)
secont condition:: tensor(1.8571e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8559e-07, dtype=torch.float64)
secont condition:: tensor(1.8559e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9219e-07, dtype=torch.float64)
secont condition:: tensor(1.9219e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8608e-07, dtype=torch.float64)
secont condition:: tensor(1.8608e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0051e-07, dtype=torch.float64)
secont condition:: tensor(2.0051e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0738e-07, dtype=torch.float64)
secont condition:: tensor(2.0738e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2439e-07, dtype=torch.float64)
secont condition:: tensor(2.2439e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2773e-07, dtype=torch.float64)
secont condition:: tensor(2.2773e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2557e-07, dtype=torch.float64)
secont condition:: tensor(2.2557e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.754158973693848
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5583e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1704e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6719e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6384e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250701
Test Avg. Loss: 0.000023, Accuracy: 0.937800
Train - Epoch 1, Batch: 0, Loss: 0.233997
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 2, Batch: 0, Loss: 0.226181
Test Avg. Loss: 0.000022, Accuracy: 0.941100
Train - Epoch 3, Batch: 0, Loss: 0.223521
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 4, Batch: 0, Loss: 0.220451
Test Avg. Loss: 0.000021, Accuracy: 0.943500
Train - Epoch 5, Batch: 0, Loss: 0.217714
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 6, Batch: 0, Loss: 0.217444
Test Avg. Loss: 0.000021, Accuracy: 0.944400
Train - Epoch 7, Batch: 0, Loss: 0.217171
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 8, Batch: 0, Loss: 0.219442
Test Avg. Loss: 0.000021, Accuracy: 0.945000
Train - Epoch 9, Batch: 0, Loss: 0.216442
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 10, Batch: 0, Loss: 0.214992
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 11, Batch: 0, Loss: 0.213349
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.216482
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 13, Batch: 0, Loss: 0.219226
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 14, Batch: 0, Loss: 0.219329
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.217520
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.221000
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 17, Batch: 0, Loss: 0.213320
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.215794
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.214721
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.213137
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 21, Batch: 0, Loss: 0.217380
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.215051
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 23, Batch: 0, Loss: 0.218238
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.216722
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217273
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 26, Batch: 0, Loss: 0.215979
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 27, Batch: 0, Loss: 0.213155
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.214639
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215901
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.216814
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 31, Batch: 0, Loss: 0.214688
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 32, Batch: 0, Loss: 0.218691
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 33, Batch: 0, Loss: 0.215461
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 34, Batch: 0, Loss: 0.216905
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 35, Batch: 0, Loss: 0.215026
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 36, Batch: 0, Loss: 0.213164
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 37, Batch: 0, Loss: 0.213674
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 38, Batch: 0, Loss: 0.214890
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 39, Batch: 0, Loss: 0.215247
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 40, Batch: 0, Loss: 0.217048
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 41, Batch: 0, Loss: 0.215855
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 42, Batch: 0, Loss: 0.217706
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 43, Batch: 0, Loss: 0.217710
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 44, Batch: 0, Loss: 0.215062
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 45, Batch: 0, Loss: 0.215237
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 46, Batch: 0, Loss: 0.216829
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 47, Batch: 0, Loss: 0.215405
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 48, Batch: 0, Loss: 0.216264
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 49, Batch: 0, Loss: 0.215272
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 50, Batch: 0, Loss: 0.216270
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 51, Batch: 0, Loss: 0.215180
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 52, Batch: 0, Loss: 0.212820
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 53, Batch: 0, Loss: 0.214777
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 54, Batch: 0, Loss: 0.214305
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 55, Batch: 0, Loss: 0.212410
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 56, Batch: 0, Loss: 0.217202
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 57, Batch: 0, Loss: 0.216749
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 58, Batch: 0, Loss: 0.213049
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 59, Batch: 0, Loss: 0.213847
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 56.11646771430969
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 45.27995777130127
time_baseline:: 45.412715911865234
curr_diff: 0 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8459e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5152e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.946000
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5902e-09, dtype=torch.float64)
secont condition:: tensor(1.5902e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6896e-09, dtype=torch.float64)
secont condition:: tensor(2.6896e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1650e-09, dtype=torch.float64)
secont condition:: tensor(6.1650e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4591e-09, dtype=torch.float64)
secont condition:: tensor(8.4591e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1568e-08, dtype=torch.float64)
secont condition:: tensor(1.1568e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5873e-08, dtype=torch.float64)
secont condition:: tensor(1.5873e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7162e-08, dtype=torch.float64)
secont condition:: tensor(1.7162e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1555e-08, dtype=torch.float64)
secont condition:: tensor(2.1555e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9406e-08, dtype=torch.float64)
secont condition:: tensor(1.9406e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9276e-08, dtype=torch.float64)
secont condition:: tensor(2.9276e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8925e-08, dtype=torch.float64)
secont condition:: tensor(2.8925e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2020e-08, dtype=torch.float64)
secont condition:: tensor(3.2020e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6346e-08, dtype=torch.float64)
secont condition:: tensor(3.6346e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4481e-08, dtype=torch.float64)
secont condition:: tensor(3.4481e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6789e-08, dtype=torch.float64)
secont condition:: tensor(4.6789e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5240e-08, dtype=torch.float64)
secont condition:: tensor(4.5240e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3704e-08, dtype=torch.float64)
secont condition:: tensor(5.3704e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4281e-08, dtype=torch.float64)
secont condition:: tensor(4.4281e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5420e-08, dtype=torch.float64)
secont condition:: tensor(4.5420e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0538e-08, dtype=torch.float64)
secont condition:: tensor(5.0538e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8423e-08, dtype=torch.float64)
secont condition:: tensor(4.8423e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6573e-08, dtype=torch.float64)
secont condition:: tensor(5.6573e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2273e-08, dtype=torch.float64)
secont condition:: tensor(5.2273e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8116e-08, dtype=torch.float64)
secont condition:: tensor(5.8116e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0914e-08, dtype=torch.float64)
secont condition:: tensor(6.0914e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0018e-08, dtype=torch.float64)
secont condition:: tensor(6.0018e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3796e-08, dtype=torch.float64)
secont condition:: tensor(6.3796e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1671e-08, dtype=torch.float64)
secont condition:: tensor(7.1671e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0447e-08, dtype=torch.float64)
secont condition:: tensor(7.0447e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6398e-08, dtype=torch.float64)
secont condition:: tensor(7.6398e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9076e-08, dtype=torch.float64)
secont condition:: tensor(6.9076e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5264e-08, dtype=torch.float64)
secont condition:: tensor(7.5264e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8321e-08, dtype=torch.float64)
secont condition:: tensor(7.8321e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3256e-08, dtype=torch.float64)
secont condition:: tensor(8.3256e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0146e-08, dtype=torch.float64)
secont condition:: tensor(8.0146e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8663e-08, dtype=torch.float64)
secont condition:: tensor(8.8663e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2709e-08, dtype=torch.float64)
secont condition:: tensor(7.2709e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2619e-08, dtype=torch.float64)
secont condition:: tensor(8.2619e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8206e-08, dtype=torch.float64)
secont condition:: tensor(8.8206e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6122e-08, dtype=torch.float64)
secont condition:: tensor(8.6122e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6494e-08, dtype=torch.float64)
secont condition:: tensor(9.6494e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1323e-07, dtype=torch.float64)
secont condition:: tensor(1.1323e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0764e-07, dtype=torch.float64)
secont condition:: tensor(1.0764e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1936e-07, dtype=torch.float64)
secont condition:: tensor(1.1936e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1925e-07, dtype=torch.float64)
secont condition:: tensor(1.1925e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1823e-07, dtype=torch.float64)
secont condition:: tensor(1.1823e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2609e-07, dtype=torch.float64)
secont condition:: tensor(1.2609e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3055e-07, dtype=torch.float64)
secont condition:: tensor(1.3055e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5274e-07, dtype=torch.float64)
secont condition:: tensor(1.5274e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6899e-07, dtype=torch.float64)
secont condition:: tensor(1.6899e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4837e-07, dtype=torch.float64)
secont condition:: tensor(1.4837e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6776e-07, dtype=torch.float64)
secont condition:: tensor(1.6776e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5618e-07, dtype=torch.float64)
secont condition:: tensor(1.5618e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7065e-07, dtype=torch.float64)
secont condition:: tensor(1.7065e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7744e-07, dtype=torch.float64)
secont condition:: tensor(1.7744e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7308e-07, dtype=torch.float64)
secont condition:: tensor(1.7308e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8477e-07, dtype=torch.float64)
secont condition:: tensor(1.8477e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8443e-07, dtype=torch.float64)
secont condition:: tensor(1.8443e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7423e-07, dtype=torch.float64)
secont condition:: tensor(1.7423e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0807e-07, dtype=torch.float64)
secont condition:: tensor(2.0807e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9433e-07, dtype=torch.float64)
secont condition:: tensor(1.9433e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0236e-07, dtype=torch.float64)
secont condition:: tensor(2.0236e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2009e-07, dtype=torch.float64)
secont condition:: tensor(2.2009e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2410e-07, dtype=torch.float64)
secont condition:: tensor(2.2410e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 8.800650358200073
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3352e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5063e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0967e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5251e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 16384
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251349
Test Avg. Loss: 0.000022, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.227818
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.223632
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.219248
Test Avg. Loss: 0.000021, Accuracy: 0.944500
Train - Epoch 4, Batch: 0, Loss: 0.222435
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.213947
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.213193
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.213261
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 8, Batch: 0, Loss: 0.214433
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.219608
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.218531
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.209721
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 12, Batch: 0, Loss: 0.209617
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 13, Batch: 0, Loss: 0.218674
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.216453
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 15, Batch: 0, Loss: 0.218467
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 16, Batch: 0, Loss: 0.215739
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 17, Batch: 0, Loss: 0.211082
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.222577
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 19, Batch: 0, Loss: 0.212912
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.213024
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.214143
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.211299
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.215216
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 24, Batch: 0, Loss: 0.213796
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 25, Batch: 0, Loss: 0.218780
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.217548
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.215105
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 28, Batch: 0, Loss: 0.215454
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 29, Batch: 0, Loss: 0.212628
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.223745
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 31, Batch: 0, Loss: 0.212996
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 31.059829711914062
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.92856526374817
time_baseline:: 22.999109983444214
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1137e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8076e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-09, dtype=torch.float64)
secont condition:: tensor(3.7787e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7175e-09, dtype=torch.float64)
secont condition:: tensor(4.7175e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7422e-09, dtype=torch.float64)
secont condition:: tensor(7.7422e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6651e-09, dtype=torch.float64)
secont condition:: tensor(9.6651e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7774e-09, dtype=torch.float64)
secont condition:: tensor(9.7774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3180e-08, dtype=torch.float64)
secont condition:: tensor(1.3180e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5435e-08, dtype=torch.float64)
secont condition:: tensor(2.5435e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3739e-08, dtype=torch.float64)
secont condition:: tensor(2.3739e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1040e-08, dtype=torch.float64)
secont condition:: tensor(2.1040e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6354e-08, dtype=torch.float64)
secont condition:: tensor(3.6354e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3154e-08, dtype=torch.float64)
secont condition:: tensor(3.3154e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1639e-08, dtype=torch.float64)
secont condition:: tensor(3.1639e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9344e-08, dtype=torch.float64)
secont condition:: tensor(4.9344e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2760e-08, dtype=torch.float64)
secont condition:: tensor(4.2760e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1217e-08, dtype=torch.float64)
secont condition:: tensor(4.1217e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8865e-08, dtype=torch.float64)
secont condition:: tensor(3.8865e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0441e-08, dtype=torch.float64)
secont condition:: tensor(4.0441e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9612e-08, dtype=torch.float64)
secont condition:: tensor(4.9612e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2044e-08, dtype=torch.float64)
secont condition:: tensor(4.2044e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6369e-08, dtype=torch.float64)
secont condition:: tensor(5.6369e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2590e-08, dtype=torch.float64)
secont condition:: tensor(5.2590e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7918e-08, dtype=torch.float64)
secont condition:: tensor(5.7918e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3409e-08, dtype=torch.float64)
secont condition:: tensor(5.3409e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8358e-08, dtype=torch.float64)
secont condition:: tensor(6.8358e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4740e-08, dtype=torch.float64)
secont condition:: tensor(5.4740e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4336e-08, dtype=torch.float64)
secont condition:: tensor(6.4336e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2172e-08, dtype=torch.float64)
secont condition:: tensor(6.2172e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4855e-08, dtype=torch.float64)
secont condition:: tensor(7.4855e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1952e-08, dtype=torch.float64)
secont condition:: tensor(8.1952e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6907e-08, dtype=torch.float64)
secont condition:: tensor(7.6907e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6425e-08, dtype=torch.float64)
secont condition:: tensor(7.6425e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4519e-08, dtype=torch.float64)
secont condition:: tensor(8.4519e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4008e-08, dtype=torch.float64)
secont condition:: tensor(8.4008e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8054e-08, dtype=torch.float64)
secont condition:: tensor(8.8054e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3875e-08, dtype=torch.float64)
secont condition:: tensor(8.3875e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9224e-08, dtype=torch.float64)
secont condition:: tensor(8.9224e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6531e-08, dtype=torch.float64)
secont condition:: tensor(8.6531e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0901e-08, dtype=torch.float64)
secont condition:: tensor(9.0901e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4688e-08, dtype=torch.float64)
secont condition:: tensor(9.4688e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1353e-07, dtype=torch.float64)
secont condition:: tensor(1.1353e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-07, dtype=torch.float64)
secont condition:: tensor(1.2373e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7556e-07, dtype=torch.float64)
secont condition:: tensor(1.7556e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3276e-07, dtype=torch.float64)
secont condition:: tensor(1.3276e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5886e-07, dtype=torch.float64)
secont condition:: tensor(1.5886e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6166e-07, dtype=torch.float64)
secont condition:: tensor(1.6166e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8265e-07, dtype=torch.float64)
secont condition:: tensor(1.8265e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5895e-07, dtype=torch.float64)
secont condition:: tensor(1.5895e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7623e-07, dtype=torch.float64)
secont condition:: tensor(1.7623e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8621e-07, dtype=torch.float64)
secont condition:: tensor(1.8621e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7932e-07, dtype=torch.float64)
secont condition:: tensor(1.7932e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9433e-07, dtype=torch.float64)
secont condition:: tensor(1.9433e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7947e-07, dtype=torch.float64)
secont condition:: tensor(1.7947e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0239e-07, dtype=torch.float64)
secont condition:: tensor(2.0239e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1507e-07, dtype=torch.float64)
secont condition:: tensor(2.1507e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0504e-07, dtype=torch.float64)
secont condition:: tensor(2.0504e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3580e-07, dtype=torch.float64)
secont condition:: tensor(2.3580e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4750e-07, dtype=torch.float64)
secont condition:: tensor(2.4750e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1576e-07, dtype=torch.float64)
secont condition:: tensor(2.1576e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-07, dtype=torch.float64)
secont condition:: tensor(2.4398e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7717e-07, dtype=torch.float64)
secont condition:: tensor(2.7717e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9562e-07, dtype=torch.float64)
secont condition:: tensor(1.9562e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.749119281768799
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2685e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3628e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5760e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8541e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.253436
Test Avg. Loss: 0.000022, Accuracy: 0.940300
Train - Epoch 1, Batch: 0, Loss: 0.229898
Test Avg. Loss: 0.000022, Accuracy: 0.942700
Train - Epoch 2, Batch: 0, Loss: 0.217804
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.217523
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.215181
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.211138
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.213779
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.209651
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 8, Batch: 0, Loss: 0.219365
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 9, Batch: 0, Loss: 0.215909
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 10, Batch: 0, Loss: 0.216971
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 11, Batch: 0, Loss: 0.219892
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 12, Batch: 0, Loss: 0.220041
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.208375
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 14, Batch: 0, Loss: 0.215074
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 15, Batch: 0, Loss: 0.216789
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 16, Batch: 0, Loss: 0.217851
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.215971
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.218583
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.225234
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 20, Batch: 0, Loss: 0.215896
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.218200
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.216858
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 23, Batch: 0, Loss: 0.217172
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.211654
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.216582
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.220216
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.210613
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 28, Batch: 0, Loss: 0.218530
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.214370
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.210871
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.220740
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 30.972978353500366
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.611634016036987
time_baseline:: 22.68241238594055
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2883e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0093e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7950e-09, dtype=torch.float64)
secont condition:: tensor(2.7950e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4358e-09, dtype=torch.float64)
secont condition:: tensor(2.4358e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9225e-09, dtype=torch.float64)
secont condition:: tensor(7.9225e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9368e-09, dtype=torch.float64)
secont condition:: tensor(7.9368e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6010e-08, dtype=torch.float64)
secont condition:: tensor(1.6010e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5384e-08, dtype=torch.float64)
secont condition:: tensor(1.5384e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4579e-08, dtype=torch.float64)
secont condition:: tensor(1.4579e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8963e-08, dtype=torch.float64)
secont condition:: tensor(2.8963e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9883e-08, dtype=torch.float64)
secont condition:: tensor(2.9883e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3298e-08, dtype=torch.float64)
secont condition:: tensor(5.3298e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9831e-08, dtype=torch.float64)
secont condition:: tensor(3.9831e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2587e-08, dtype=torch.float64)
secont condition:: tensor(3.2587e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5124e-08, dtype=torch.float64)
secont condition:: tensor(3.5124e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6350e-08, dtype=torch.float64)
secont condition:: tensor(4.6350e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3721e-08, dtype=torch.float64)
secont condition:: tensor(4.3721e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9779e-08, dtype=torch.float64)
secont condition:: tensor(3.9779e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0907e-08, dtype=torch.float64)
secont condition:: tensor(4.0907e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6769e-08, dtype=torch.float64)
secont condition:: tensor(3.6769e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6060e-08, dtype=torch.float64)
secont condition:: tensor(4.6060e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2938e-08, dtype=torch.float64)
secont condition:: tensor(5.2938e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5048e-08, dtype=torch.float64)
secont condition:: tensor(5.5048e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1174e-08, dtype=torch.float64)
secont condition:: tensor(6.1174e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2138e-08, dtype=torch.float64)
secont condition:: tensor(5.2138e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5876e-08, dtype=torch.float64)
secont condition:: tensor(8.5876e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2883e-08, dtype=torch.float64)
secont condition:: tensor(8.2883e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6724e-08, dtype=torch.float64)
secont condition:: tensor(6.6724e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6835e-08, dtype=torch.float64)
secont condition:: tensor(7.6835e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9147e-08, dtype=torch.float64)
secont condition:: tensor(6.9147e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8684e-08, dtype=torch.float64)
secont condition:: tensor(8.8684e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9710e-08, dtype=torch.float64)
secont condition:: tensor(9.9710e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9422e-08, dtype=torch.float64)
secont condition:: tensor(7.9422e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5619e-08, dtype=torch.float64)
secont condition:: tensor(6.5619e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4273e-08, dtype=torch.float64)
secont condition:: tensor(6.4273e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5082e-08, dtype=torch.float64)
secont condition:: tensor(5.5082e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5643e-08, dtype=torch.float64)
secont condition:: tensor(7.5643e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6634e-08, dtype=torch.float64)
secont condition:: tensor(7.6634e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5508e-08, dtype=torch.float64)
secont condition:: tensor(8.5508e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7356e-08, dtype=torch.float64)
secont condition:: tensor(7.7356e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9666e-08, dtype=torch.float64)
secont condition:: tensor(8.9666e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1505e-07, dtype=torch.float64)
secont condition:: tensor(1.1505e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3957e-07, dtype=torch.float64)
secont condition:: tensor(1.3957e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4107e-07, dtype=torch.float64)
secont condition:: tensor(1.4107e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3175e-07, dtype=torch.float64)
secont condition:: tensor(1.3175e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7668e-07, dtype=torch.float64)
secont condition:: tensor(1.7668e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8059e-07, dtype=torch.float64)
secont condition:: tensor(1.8059e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8688e-07, dtype=torch.float64)
secont condition:: tensor(1.8688e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1675e-07, dtype=torch.float64)
secont condition:: tensor(2.1675e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7642e-07, dtype=torch.float64)
secont condition:: tensor(1.7642e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8607e-07, dtype=torch.float64)
secont condition:: tensor(1.8607e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8585e-07, dtype=torch.float64)
secont condition:: tensor(1.8585e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0997e-07, dtype=torch.float64)
secont condition:: tensor(2.0997e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1144e-07, dtype=torch.float64)
secont condition:: tensor(2.1144e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9488e-07, dtype=torch.float64)
secont condition:: tensor(1.9488e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2787e-07, dtype=torch.float64)
secont condition:: tensor(2.2787e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1962e-07, dtype=torch.float64)
secont condition:: tensor(2.1962e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3359e-07, dtype=torch.float64)
secont condition:: tensor(2.3359e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4640e-07, dtype=torch.float64)
secont condition:: tensor(2.4640e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5428e-07, dtype=torch.float64)
secont condition:: tensor(2.5428e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4548e-07, dtype=torch.float64)
secont condition:: tensor(2.4548e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 6.090623378753662
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2617e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6804e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0641e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.251707
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.225555
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.220002
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.225485
Test Avg. Loss: 0.000021, Accuracy: 0.944800
Train - Epoch 4, Batch: 0, Loss: 0.216411
Test Avg. Loss: 0.000021, Accuracy: 0.945300
Train - Epoch 5, Batch: 0, Loss: 0.216008
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.218935
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.211992
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 8, Batch: 0, Loss: 0.216090
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.219416
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.221721
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 11, Batch: 0, Loss: 0.223668
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 12, Batch: 0, Loss: 0.215004
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.217123
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 14, Batch: 0, Loss: 0.213952
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.218617
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 16, Batch: 0, Loss: 0.220045
Test Avg. Loss: 0.000021, Accuracy: 0.945400
Train - Epoch 17, Batch: 0, Loss: 0.210323
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 18, Batch: 0, Loss: 0.213968
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 19, Batch: 0, Loss: 0.222435
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.221531
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.212760
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 22, Batch: 0, Loss: 0.213583
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.218756
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.215863
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 25, Batch: 0, Loss: 0.217806
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 26, Batch: 0, Loss: 0.219290
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.214666
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.216776
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 29, Batch: 0, Loss: 0.215238
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 30, Batch: 0, Loss: 0.210238
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.217067
Test Avg. Loss: 0.000021, Accuracy: 0.945800
training_time:: 30.969231128692627
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.54130506515503
time_baseline:: 22.611762285232544
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3315e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7376e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9338e-09, dtype=torch.float64)
secont condition:: tensor(5.9338e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7718e-09, dtype=torch.float64)
secont condition:: tensor(5.7718e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9178e-09, dtype=torch.float64)
secont condition:: tensor(6.9178e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3008e-09, dtype=torch.float64)
secont condition:: tensor(7.3008e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0461e-08, dtype=torch.float64)
secont condition:: tensor(1.0461e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3389e-08, dtype=torch.float64)
secont condition:: tensor(1.3389e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5838e-08, dtype=torch.float64)
secont condition:: tensor(1.5838e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3723e-08, dtype=torch.float64)
secont condition:: tensor(2.3723e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9890e-08, dtype=torch.float64)
secont condition:: tensor(2.9890e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8815e-08, dtype=torch.float64)
secont condition:: tensor(2.8815e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5180e-08, dtype=torch.float64)
secont condition:: tensor(3.5180e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4010e-08, dtype=torch.float64)
secont condition:: tensor(3.4010e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0533e-08, dtype=torch.float64)
secont condition:: tensor(5.0533e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1679e-08, dtype=torch.float64)
secont condition:: tensor(4.1679e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2989e-08, dtype=torch.float64)
secont condition:: tensor(4.2989e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1187e-08, dtype=torch.float64)
secont condition:: tensor(4.1187e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3709e-08, dtype=torch.float64)
secont condition:: tensor(5.3709e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2190e-08, dtype=torch.float64)
secont condition:: tensor(4.2190e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5318e-08, dtype=torch.float64)
secont condition:: tensor(5.5318e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0718e-08, dtype=torch.float64)
secont condition:: tensor(4.0718e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9619e-08, dtype=torch.float64)
secont condition:: tensor(2.9619e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4121e-08, dtype=torch.float64)
secont condition:: tensor(3.4121e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4338e-08, dtype=torch.float64)
secont condition:: tensor(4.4338e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6996e-08, dtype=torch.float64)
secont condition:: tensor(6.6996e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4712e-08, dtype=torch.float64)
secont condition:: tensor(5.4712e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8441e-08, dtype=torch.float64)
secont condition:: tensor(4.8441e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6721e-08, dtype=torch.float64)
secont condition:: tensor(4.6721e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1813e-08, dtype=torch.float64)
secont condition:: tensor(9.1813e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0285e-07, dtype=torch.float64)
secont condition:: tensor(1.0285e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9351e-08, dtype=torch.float64)
secont condition:: tensor(8.9351e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3105e-08, dtype=torch.float64)
secont condition:: tensor(9.3105e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6106e-08, dtype=torch.float64)
secont condition:: tensor(7.6106e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2366e-08, dtype=torch.float64)
secont condition:: tensor(8.2366e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7080e-08, dtype=torch.float64)
secont condition:: tensor(8.7080e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8569e-08, dtype=torch.float64)
secont condition:: tensor(7.8569e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2286e-08, dtype=torch.float64)
secont condition:: tensor(8.2286e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0724e-07, dtype=torch.float64)
secont condition:: tensor(1.0724e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3637e-08, dtype=torch.float64)
secont condition:: tensor(9.3637e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3640e-08, dtype=torch.float64)
secont condition:: tensor(8.3640e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2023e-07, dtype=torch.float64)
secont condition:: tensor(1.2023e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1635e-08, dtype=torch.float64)
secont condition:: tensor(7.1635e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0036e-07, dtype=torch.float64)
secont condition:: tensor(1.0036e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0172e-07, dtype=torch.float64)
secont condition:: tensor(1.0172e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0947e-07, dtype=torch.float64)
secont condition:: tensor(1.0947e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5113e-07, dtype=torch.float64)
secont condition:: tensor(1.5113e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4887e-07, dtype=torch.float64)
secont condition:: tensor(1.4887e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8257e-07, dtype=torch.float64)
secont condition:: tensor(1.8257e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5763e-07, dtype=torch.float64)
secont condition:: tensor(1.5763e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8850e-07, dtype=torch.float64)
secont condition:: tensor(1.8850e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7220e-07, dtype=torch.float64)
secont condition:: tensor(1.7220e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8553e-07, dtype=torch.float64)
secont condition:: tensor(1.8553e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7739e-07, dtype=torch.float64)
secont condition:: tensor(1.7739e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5991e-07, dtype=torch.float64)
secont condition:: tensor(1.5991e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2829e-07, dtype=torch.float64)
secont condition:: tensor(2.2829e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9879e-07, dtype=torch.float64)
secont condition:: tensor(1.9879e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1846e-07, dtype=torch.float64)
secont condition:: tensor(2.1846e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1691e-07, dtype=torch.float64)
secont condition:: tensor(2.1691e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2810e-07, dtype=torch.float64)
secont condition:: tensor(2.2810e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5657e-07, dtype=torch.float64)
secont condition:: tensor(2.5657e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3596e-07, dtype=torch.float64)
secont condition:: tensor(2.3596e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6167e-07, dtype=torch.float64)
secont condition:: tensor(2.6167e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6691e-07, dtype=torch.float64)
secont condition:: tensor(2.6691e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7913e-07, dtype=torch.float64)
secont condition:: tensor(2.7913e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.850921154022217
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0536e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4482e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9005e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7325e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250700
Test Avg. Loss: 0.000022, Accuracy: 0.940500
Train - Epoch 1, Batch: 0, Loss: 0.230351
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 2, Batch: 0, Loss: 0.221574
Test Avg. Loss: 0.000021, Accuracy: 0.944100
Train - Epoch 3, Batch: 0, Loss: 0.221164
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.213693
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 5, Batch: 0, Loss: 0.216335
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.212463
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.216038
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.212711
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 9, Batch: 0, Loss: 0.219616
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 10, Batch: 0, Loss: 0.215391
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.218739
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 12, Batch: 0, Loss: 0.214611
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 13, Batch: 0, Loss: 0.216290
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 14, Batch: 0, Loss: 0.217525
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.214457
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 16, Batch: 0, Loss: 0.216299
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.214200
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 18, Batch: 0, Loss: 0.224527
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 19, Batch: 0, Loss: 0.218730
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.213442
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 21, Batch: 0, Loss: 0.213187
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 22, Batch: 0, Loss: 0.216828
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 23, Batch: 0, Loss: 0.216902
Test Avg. Loss: 0.000021, Accuracy: 0.946000
Train - Epoch 24, Batch: 0, Loss: 0.214475
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.220000
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 26, Batch: 0, Loss: 0.221958
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 27, Batch: 0, Loss: 0.228773
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.212311
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 29, Batch: 0, Loss: 0.218271
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.214435
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 31, Batch: 0, Loss: 0.214032
Test Avg. Loss: 0.000021, Accuracy: 0.945700
training_time:: 30.98555564880371
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.929149389266968
time_baseline:: 22.998660564422607
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1374e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8005e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9547e-09, dtype=torch.float64)
secont condition:: tensor(3.9547e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1886e-09, dtype=torch.float64)
secont condition:: tensor(3.1886e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2115e-08, dtype=torch.float64)
secont condition:: tensor(1.2115e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2211e-09, dtype=torch.float64)
secont condition:: tensor(7.2211e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4181e-08, dtype=torch.float64)
secont condition:: tensor(1.4181e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4634e-08, dtype=torch.float64)
secont condition:: tensor(1.4634e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8218e-08, dtype=torch.float64)
secont condition:: tensor(1.8218e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0548e-08, dtype=torch.float64)
secont condition:: tensor(2.0548e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6049e-08, dtype=torch.float64)
secont condition:: tensor(2.6049e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6266e-08, dtype=torch.float64)
secont condition:: tensor(2.6266e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6364e-08, dtype=torch.float64)
secont condition:: tensor(3.6364e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0293e-08, dtype=torch.float64)
secont condition:: tensor(3.0293e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0554e-08, dtype=torch.float64)
secont condition:: tensor(3.0554e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2213e-08, dtype=torch.float64)
secont condition:: tensor(3.2213e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1394e-08, dtype=torch.float64)
secont condition:: tensor(4.1394e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6830e-08, dtype=torch.float64)
secont condition:: tensor(3.6830e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5667e-08, dtype=torch.float64)
secont condition:: tensor(4.5667e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5664e-08, dtype=torch.float64)
secont condition:: tensor(5.5664e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1660e-08, dtype=torch.float64)
secont condition:: tensor(4.1660e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0743e-08, dtype=torch.float64)
secont condition:: tensor(5.0743e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2648e-08, dtype=torch.float64)
secont condition:: tensor(7.2648e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0751e-08, dtype=torch.float64)
secont condition:: tensor(6.0751e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6594e-08, dtype=torch.float64)
secont condition:: tensor(5.6594e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5500e-08, dtype=torch.float64)
secont condition:: tensor(5.5500e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7762e-08, dtype=torch.float64)
secont condition:: tensor(5.7762e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7145e-08, dtype=torch.float64)
secont condition:: tensor(5.7145e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1894e-08, dtype=torch.float64)
secont condition:: tensor(6.1894e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2984e-08, dtype=torch.float64)
secont condition:: tensor(6.2984e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9125e-08, dtype=torch.float64)
secont condition:: tensor(6.9125e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9966e-08, dtype=torch.float64)
secont condition:: tensor(7.9966e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3770e-08, dtype=torch.float64)
secont condition:: tensor(6.3770e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3855e-08, dtype=torch.float64)
secont condition:: tensor(7.3855e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1955e-08, dtype=torch.float64)
secont condition:: tensor(7.1955e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1486e-08, dtype=torch.float64)
secont condition:: tensor(6.1486e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6838e-08, dtype=torch.float64)
secont condition:: tensor(9.6838e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4107e-08, dtype=torch.float64)
secont condition:: tensor(8.4107e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2106e-08, dtype=torch.float64)
secont condition:: tensor(7.2106e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2951e-08, dtype=torch.float64)
secont condition:: tensor(8.2951e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1005e-08, dtype=torch.float64)
secont condition:: tensor(7.1005e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0711e-08, dtype=torch.float64)
secont condition:: tensor(8.0711e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0048e-07, dtype=torch.float64)
secont condition:: tensor(1.0048e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2219e-07, dtype=torch.float64)
secont condition:: tensor(1.2219e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1441e-07, dtype=torch.float64)
secont condition:: tensor(1.1441e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6089e-07, dtype=torch.float64)
secont condition:: tensor(1.6089e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7106e-07, dtype=torch.float64)
secont condition:: tensor(1.7106e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3486e-07, dtype=torch.float64)
secont condition:: tensor(1.3486e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5944e-07, dtype=torch.float64)
secont condition:: tensor(1.5944e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7242e-07, dtype=torch.float64)
secont condition:: tensor(1.7242e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7083e-07, dtype=torch.float64)
secont condition:: tensor(1.7083e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1304e-07, dtype=torch.float64)
secont condition:: tensor(2.1304e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3934e-07, dtype=torch.float64)
secont condition:: tensor(2.3934e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8664e-07, dtype=torch.float64)
secont condition:: tensor(1.8664e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0340e-07, dtype=torch.float64)
secont condition:: tensor(2.0340e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7934e-07, dtype=torch.float64)
secont condition:: tensor(1.7934e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3866e-07, dtype=torch.float64)
secont condition:: tensor(2.3866e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4951e-07, dtype=torch.float64)
secont condition:: tensor(2.4951e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3021e-07, dtype=torch.float64)
secont condition:: tensor(2.3021e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2654e-07, dtype=torch.float64)
secont condition:: tensor(2.2654e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7518e-07, dtype=torch.float64)
secont condition:: tensor(2.7518e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3385e-07, dtype=torch.float64)
secont condition:: tensor(2.3385e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.79589056968689
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8484e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4185e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3953e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.250969
Test Avg. Loss: 0.000022, Accuracy: 0.940200
Train - Epoch 1, Batch: 0, Loss: 0.234018
Test Avg. Loss: 0.000022, Accuracy: 0.942800
Train - Epoch 2, Batch: 0, Loss: 0.220359
Test Avg. Loss: 0.000021, Accuracy: 0.944200
Train - Epoch 3, Batch: 0, Loss: 0.217600
Test Avg. Loss: 0.000021, Accuracy: 0.944900
Train - Epoch 4, Batch: 0, Loss: 0.213762
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 5, Batch: 0, Loss: 0.216569
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 6, Batch: 0, Loss: 0.218075
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.218556
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 8, Batch: 0, Loss: 0.216230
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 9, Batch: 0, Loss: 0.220839
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 10, Batch: 0, Loss: 0.220257
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 11, Batch: 0, Loss: 0.217544
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 12, Batch: 0, Loss: 0.215768
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 13, Batch: 0, Loss: 0.219261
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 14, Batch: 0, Loss: 0.216483
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 15, Batch: 0, Loss: 0.213198
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 16, Batch: 0, Loss: 0.214137
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 17, Batch: 0, Loss: 0.214971
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 18, Batch: 0, Loss: 0.218663
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 19, Batch: 0, Loss: 0.213657
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 20, Batch: 0, Loss: 0.218869
Test Avg. Loss: 0.000021, Accuracy: 0.945600
Train - Epoch 21, Batch: 0, Loss: 0.214290
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 22, Batch: 0, Loss: 0.214353
Test Avg. Loss: 0.000021, Accuracy: 0.945500
Train - Epoch 23, Batch: 0, Loss: 0.211399
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 24, Batch: 0, Loss: 0.212229
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 25, Batch: 0, Loss: 0.214415
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 26, Batch: 0, Loss: 0.215990
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 27, Batch: 0, Loss: 0.220709
Test Avg. Loss: 0.000021, Accuracy: 0.945800
Train - Epoch 28, Batch: 0, Loss: 0.218776
Test Avg. Loss: 0.000021, Accuracy: 0.945700
Train - Epoch 29, Batch: 0, Loss: 0.217035
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 30, Batch: 0, Loss: 0.216292
Test Avg. Loss: 0.000021, Accuracy: 0.945900
Train - Epoch 31, Batch: 0, Loss: 0.214864
Test Avg. Loss: 0.000021, Accuracy: 0.945900
training_time:: 30.93893337249756
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 22.603415489196777
time_baseline:: 22.67355751991272
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9115e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6866e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8619e-10, dtype=torch.float64)
secont condition:: tensor(6.8619e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8740e-09, dtype=torch.float64)
secont condition:: tensor(2.8740e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3198e-09, dtype=torch.float64)
secont condition:: tensor(6.3198e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0872e-08, dtype=torch.float64)
secont condition:: tensor(1.0872e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8743e-09, dtype=torch.float64)
secont condition:: tensor(9.8743e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0598e-08, dtype=torch.float64)
secont condition:: tensor(2.0598e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8848e-08, dtype=torch.float64)
secont condition:: tensor(1.8848e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5080e-08, dtype=torch.float64)
secont condition:: tensor(2.5080e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4087e-08, dtype=torch.float64)
secont condition:: tensor(2.4087e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8126e-08, dtype=torch.float64)
secont condition:: tensor(3.8126e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5707e-08, dtype=torch.float64)
secont condition:: tensor(3.5707e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3939e-08, dtype=torch.float64)
secont condition:: tensor(3.3939e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2031e-08, dtype=torch.float64)
secont condition:: tensor(4.2031e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3450e-08, dtype=torch.float64)
secont condition:: tensor(5.3450e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3462e-08, dtype=torch.float64)
secont condition:: tensor(4.3462e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5362e-08, dtype=torch.float64)
secont condition:: tensor(3.5362e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7296e-08, dtype=torch.float64)
secont condition:: tensor(5.7296e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1382e-08, dtype=torch.float64)
secont condition:: tensor(4.1382e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1099e-08, dtype=torch.float64)
secont condition:: tensor(4.1099e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0415e-08, dtype=torch.float64)
secont condition:: tensor(5.0415e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4692e-08, dtype=torch.float64)
secont condition:: tensor(5.4692e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0861e-08, dtype=torch.float64)
secont condition:: tensor(6.0861e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1047e-08, dtype=torch.float64)
secont condition:: tensor(5.1047e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6867e-08, dtype=torch.float64)
secont condition:: tensor(5.6867e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4639e-08, dtype=torch.float64)
secont condition:: tensor(6.4639e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6100e-08, dtype=torch.float64)
secont condition:: tensor(6.6100e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2068e-08, dtype=torch.float64)
secont condition:: tensor(6.2068e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1461e-08, dtype=torch.float64)
secont condition:: tensor(6.1461e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6323e-08, dtype=torch.float64)
secont condition:: tensor(6.6323e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4667e-08, dtype=torch.float64)
secont condition:: tensor(7.4667e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7532e-08, dtype=torch.float64)
secont condition:: tensor(6.7532e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0206e-08, dtype=torch.float64)
secont condition:: tensor(7.0206e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2574e-08, dtype=torch.float64)
secont condition:: tensor(7.2574e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1020e-08, dtype=torch.float64)
secont condition:: tensor(8.1020e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9584e-08, dtype=torch.float64)
secont condition:: tensor(8.9584e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8011e-08, dtype=torch.float64)
secont condition:: tensor(7.8011e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9688e-08, dtype=torch.float64)
secont condition:: tensor(8.9688e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5276e-08, dtype=torch.float64)
secont condition:: tensor(9.5276e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8095e-08, dtype=torch.float64)
secont condition:: tensor(8.8095e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0595e-07, dtype=torch.float64)
secont condition:: tensor(1.0595e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1060e-07, dtype=torch.float64)
secont condition:: tensor(1.1060e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4351e-07, dtype=torch.float64)
secont condition:: tensor(1.4351e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4208e-07, dtype=torch.float64)
secont condition:: tensor(1.4208e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4184e-07, dtype=torch.float64)
secont condition:: tensor(1.4184e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6612e-07, dtype=torch.float64)
secont condition:: tensor(1.6612e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5556e-07, dtype=torch.float64)
secont condition:: tensor(1.5556e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7744e-07, dtype=torch.float64)
secont condition:: tensor(1.7744e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7159e-07, dtype=torch.float64)
secont condition:: tensor(1.7159e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2033e-07, dtype=torch.float64)
secont condition:: tensor(2.2033e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8764e-07, dtype=torch.float64)
secont condition:: tensor(1.8764e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6964e-07, dtype=torch.float64)
secont condition:: tensor(1.6964e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6945e-07, dtype=torch.float64)
secont condition:: tensor(1.6945e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7729e-07, dtype=torch.float64)
secont condition:: tensor(1.7729e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3733e-07, dtype=torch.float64)
secont condition:: tensor(2.3733e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5274e-07, dtype=torch.float64)
secont condition:: tensor(2.5274e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2474e-07, dtype=torch.float64)
secont condition:: tensor(2.2474e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3480e-07, dtype=torch.float64)
secont condition:: tensor(2.3480e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3364e-07, dtype=torch.float64)
secont condition:: tensor(2.3364e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4104e-07, dtype=torch.float64)
secont condition:: tensor(2.4104e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5241e-07, dtype=torch.float64)
secont condition:: tensor(2.5241e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7756e-07, dtype=torch.float64)
secont condition:: tensor(2.7756e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 5.894037246704102
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8737e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4628e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8709e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0840e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6836e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000021, Accuracy: 0.945900
batch size:: 4096
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242798
Train - Epoch 0, Batch: 10, Loss: 0.214863
Test Avg. Loss: 0.000061, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.212367
Train - Epoch 1, Batch: 10, Loss: 0.216863
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.210734
Train - Epoch 2, Batch: 10, Loss: 0.219858
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.213674
Train - Epoch 3, Batch: 10, Loss: 0.219856
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 4, Batch: 0, Loss: 0.216231
Train - Epoch 4, Batch: 10, Loss: 0.211400
Test Avg. Loss: 0.000060, Accuracy: 0.946100
Train - Epoch 5, Batch: 0, Loss: 0.212713
Train - Epoch 5, Batch: 10, Loss: 0.212039
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.227407
Train - Epoch 6, Batch: 10, Loss: 0.210863
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 7, Batch: 0, Loss: 0.221664
Train - Epoch 7, Batch: 10, Loss: 0.231799
Test Avg. Loss: 0.000060, Accuracy: 0.946100
training_time:: 7.142254114151001
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.715131998062134
time_baseline:: 4.73278546333313
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5471e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1549e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946100
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5281e-09, dtype=torch.float64)
secont condition:: tensor(1.5281e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0106e-08, dtype=torch.float64)
secont condition:: tensor(1.0106e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6197e-08, dtype=torch.float64)
secont condition:: tensor(1.6197e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1219e-08, dtype=torch.float64)
secont condition:: tensor(2.1219e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6776e-08, dtype=torch.float64)
secont condition:: tensor(1.6776e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4541e-08, dtype=torch.float64)
secont condition:: tensor(1.4541e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2147e-08, dtype=torch.float64)
secont condition:: tensor(1.2147e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1122e-08, dtype=torch.float64)
secont condition:: tensor(1.1122e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2369e-08, dtype=torch.float64)
secont condition:: tensor(2.2369e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6932e-08, dtype=torch.float64)
secont condition:: tensor(8.6932e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8186e-08, dtype=torch.float64)
secont condition:: tensor(8.8186e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7676e-08, dtype=torch.float64)
secont condition:: tensor(7.7676e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4773e-08, dtype=torch.float64)
secont condition:: tensor(6.4773e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8452e-08, dtype=torch.float64)
secont condition:: tensor(7.8452e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1923e-08, dtype=torch.float64)
secont condition:: tensor(5.1923e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0522e-08, dtype=torch.float64)
secont condition:: tensor(8.0522e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7158e-08, dtype=torch.float64)
secont condition:: tensor(7.7158e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6440e-08, dtype=torch.float64)
secont condition:: tensor(5.6440e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7678e-08, dtype=torch.float64)
secont condition:: tensor(6.7678e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1281e-08, dtype=torch.float64)
secont condition:: tensor(6.1281e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8338e-08, dtype=torch.float64)
secont condition:: tensor(5.8338e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6332e-08, dtype=torch.float64)
secont condition:: tensor(4.6332e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2200e-08, dtype=torch.float64)
secont condition:: tensor(6.2200e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1769e-08, dtype=torch.float64)
secont condition:: tensor(6.1769e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8772e-08, dtype=torch.float64)
secont condition:: tensor(5.8772e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9315e-08, dtype=torch.float64)
secont condition:: tensor(3.9315e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4655e-08, dtype=torch.float64)
secont condition:: tensor(4.4655e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4285e-08, dtype=torch.float64)
secont condition:: tensor(8.4285e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0359e-07, dtype=torch.float64)
secont condition:: tensor(2.0359e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5776e-07, dtype=torch.float64)
secont condition:: tensor(1.5776e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2569e-07, dtype=torch.float64)
secont condition:: tensor(1.2569e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6024e-08, dtype=torch.float64)
secont condition:: tensor(9.6024e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4020e-08, dtype=torch.float64)
secont condition:: tensor(7.4020e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7575e-08, dtype=torch.float64)
secont condition:: tensor(6.7575e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6056e-08, dtype=torch.float64)
secont condition:: tensor(5.6056e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3308e-08, dtype=torch.float64)
secont condition:: tensor(4.3308e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6753e-08, dtype=torch.float64)
secont condition:: tensor(4.6753e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0153e-08, dtype=torch.float64)
secont condition:: tensor(9.0153e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5033e-08, dtype=torch.float64)
secont condition:: tensor(5.5033e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6618e-07, dtype=torch.float64)
secont condition:: tensor(1.6618e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2899e-07, dtype=torch.float64)
secont condition:: tensor(2.2899e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3547e-07, dtype=torch.float64)
secont condition:: tensor(1.3547e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3847e-07, dtype=torch.float64)
secont condition:: tensor(1.3847e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4686e-07, dtype=torch.float64)
secont condition:: tensor(2.4686e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1498e-07, dtype=torch.float64)
secont condition:: tensor(2.1498e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0934e-07, dtype=torch.float64)
secont condition:: tensor(2.0934e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.9830164909362793
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7121e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.5294e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5028e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2155e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.266264
Train - Epoch 0, Batch: 10, Loss: 0.233398
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.223414
Train - Epoch 1, Batch: 10, Loss: 0.211487
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.217472
Train - Epoch 2, Batch: 10, Loss: 0.209197
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 3, Batch: 0, Loss: 0.206068
Train - Epoch 3, Batch: 10, Loss: 0.223526
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.231877
Train - Epoch 4, Batch: 10, Loss: 0.224548
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 5, Batch: 0, Loss: 0.218152
Train - Epoch 5, Batch: 10, Loss: 0.207548
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.216277
Train - Epoch 6, Batch: 10, Loss: 0.220367
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 7, Batch: 0, Loss: 0.220317
Train - Epoch 7, Batch: 10, Loss: 0.204411
Test Avg. Loss: 0.000060, Accuracy: 0.945900
training_time:: 6.968023777008057
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.827124357223511
time_baseline:: 4.844911813735962
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9738e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1985e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0319e-10, dtype=torch.float64)
secont condition:: tensor(9.0319e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8688e-09, dtype=torch.float64)
secont condition:: tensor(2.8688e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3162e-09, dtype=torch.float64)
secont condition:: tensor(3.3162e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3251e-08, dtype=torch.float64)
secont condition:: tensor(2.3251e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6218e-08, dtype=torch.float64)
secont condition:: tensor(3.6218e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4336e-08, dtype=torch.float64)
secont condition:: tensor(3.4336e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6167e-08, dtype=torch.float64)
secont condition:: tensor(2.6167e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6014e-08, dtype=torch.float64)
secont condition:: tensor(3.6014e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2894e-08, dtype=torch.float64)
secont condition:: tensor(3.2894e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4028e-08, dtype=torch.float64)
secont condition:: tensor(2.4028e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8731e-08, dtype=torch.float64)
secont condition:: tensor(2.8731e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8623e-08, dtype=torch.float64)
secont condition:: tensor(2.8623e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1903e-08, dtype=torch.float64)
secont condition:: tensor(4.1903e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5551e-08, dtype=torch.float64)
secont condition:: tensor(9.5551e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4367e-08, dtype=torch.float64)
secont condition:: tensor(7.4367e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1174e-08, dtype=torch.float64)
secont condition:: tensor(6.1174e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8557e-08, dtype=torch.float64)
secont condition:: tensor(5.8557e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9613e-08, dtype=torch.float64)
secont condition:: tensor(8.9613e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6076e-08, dtype=torch.float64)
secont condition:: tensor(6.6076e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0525e-08, dtype=torch.float64)
secont condition:: tensor(9.0525e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0443e-08, dtype=torch.float64)
secont condition:: tensor(8.0443e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2608e-08, dtype=torch.float64)
secont condition:: tensor(8.2608e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8138e-08, dtype=torch.float64)
secont condition:: tensor(5.8138e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8232e-08, dtype=torch.float64)
secont condition:: tensor(3.8232e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1699e-08, dtype=torch.float64)
secont condition:: tensor(5.1699e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8894e-08, dtype=torch.float64)
secont condition:: tensor(3.8894e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4934e-08, dtype=torch.float64)
secont condition:: tensor(6.4934e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1670e-07, dtype=torch.float64)
secont condition:: tensor(1.1670e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0413e-07, dtype=torch.float64)
secont condition:: tensor(1.0413e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9531e-08, dtype=torch.float64)
secont condition:: tensor(7.9531e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8424e-08, dtype=torch.float64)
secont condition:: tensor(7.8424e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7905e-08, dtype=torch.float64)
secont condition:: tensor(5.7905e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6914e-08, dtype=torch.float64)
secont condition:: tensor(7.6914e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0094e-08, dtype=torch.float64)
secont condition:: tensor(5.0094e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5172e-07, dtype=torch.float64)
secont condition:: tensor(1.5172e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6862e-07, dtype=torch.float64)
secont condition:: tensor(1.6862e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1821e-07, dtype=torch.float64)
secont condition:: tensor(1.1821e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0788e-07, dtype=torch.float64)
secont condition:: tensor(1.0788e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3288e-08, dtype=torch.float64)
secont condition:: tensor(7.3288e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0596e-07, dtype=torch.float64)
secont condition:: tensor(1.0596e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1027e-07, dtype=torch.float64)
secont condition:: tensor(1.1027e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2858e-07, dtype=torch.float64)
secont condition:: tensor(1.2858e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0585e-07, dtype=torch.float64)
secont condition:: tensor(2.0585e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4338e-07, dtype=torch.float64)
secont condition:: tensor(2.4338e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2649e-07, dtype=torch.float64)
secont condition:: tensor(2.2649e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1658e-07, dtype=torch.float64)
secont condition:: tensor(2.1658e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1942e-07, dtype=torch.float64)
secont condition:: tensor(1.1942e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.8523318767547607
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6244e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.0489e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3125e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2947e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255010
Train - Epoch 0, Batch: 10, Loss: 0.218171
Test Avg. Loss: 0.000061, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.206854
Train - Epoch 1, Batch: 10, Loss: 0.218755
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.210513
Train - Epoch 2, Batch: 10, Loss: 0.209288
Test Avg. Loss: 0.000060, Accuracy: 0.946200
Train - Epoch 3, Batch: 0, Loss: 0.221864
Train - Epoch 3, Batch: 10, Loss: 0.210783
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 4, Batch: 0, Loss: 0.226020
Train - Epoch 4, Batch: 10, Loss: 0.217107
Test Avg. Loss: 0.000060, Accuracy: 0.945300
Train - Epoch 5, Batch: 0, Loss: 0.223594
Train - Epoch 5, Batch: 10, Loss: 0.202661
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.218267
Train - Epoch 6, Batch: 10, Loss: 0.214903
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.208134
Train - Epoch 7, Batch: 10, Loss: 0.216588
Test Avg. Loss: 0.000060, Accuracy: 0.945500
training_time:: 7.300696611404419
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.676669597625732
time_baseline:: 4.693893909454346
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4599e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9523e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5780e-09, dtype=torch.float64)
secont condition:: tensor(6.5780e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4334e-09, dtype=torch.float64)
secont condition:: tensor(6.4334e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0216e-08, dtype=torch.float64)
secont condition:: tensor(1.0216e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0131e-09, dtype=torch.float64)
secont condition:: tensor(8.0131e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4971e-08, dtype=torch.float64)
secont condition:: tensor(2.4971e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6912e-08, dtype=torch.float64)
secont condition:: tensor(1.6912e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3141e-08, dtype=torch.float64)
secont condition:: tensor(1.3141e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4811e-08, dtype=torch.float64)
secont condition:: tensor(1.4811e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4361e-08, dtype=torch.float64)
secont condition:: tensor(5.4361e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9403e-08, dtype=torch.float64)
secont condition:: tensor(5.9403e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4517e-08, dtype=torch.float64)
secont condition:: tensor(4.4517e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7927e-08, dtype=torch.float64)
secont condition:: tensor(3.7927e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6222e-08, dtype=torch.float64)
secont condition:: tensor(3.6222e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3890e-08, dtype=torch.float64)
secont condition:: tensor(3.3890e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2858e-07, dtype=torch.float64)
secont condition:: tensor(1.2858e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5627e-08, dtype=torch.float64)
secont condition:: tensor(9.5627e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6203e-07, dtype=torch.float64)
secont condition:: tensor(1.6203e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2236e-07, dtype=torch.float64)
secont condition:: tensor(1.2236e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0263e-07, dtype=torch.float64)
secont condition:: tensor(1.0263e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0543e-08, dtype=torch.float64)
secont condition:: tensor(6.0543e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4860e-08, dtype=torch.float64)
secont condition:: tensor(5.4860e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0820e-08, dtype=torch.float64)
secont condition:: tensor(6.0820e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9870e-08, dtype=torch.float64)
secont condition:: tensor(4.9870e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8679e-08, dtype=torch.float64)
secont condition:: tensor(3.8679e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7091e-08, dtype=torch.float64)
secont condition:: tensor(7.7091e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6315e-08, dtype=torch.float64)
secont condition:: tensor(7.6315e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6028e-08, dtype=torch.float64)
secont condition:: tensor(4.6028e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8397e-08, dtype=torch.float64)
secont condition:: tensor(6.8397e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2632e-07, dtype=torch.float64)
secont condition:: tensor(1.2632e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3840e-07, dtype=torch.float64)
secont condition:: tensor(1.3840e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3536e-07, dtype=torch.float64)
secont condition:: tensor(1.3536e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1664e-07, dtype=torch.float64)
secont condition:: tensor(1.1664e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1179e-08, dtype=torch.float64)
secont condition:: tensor(8.1179e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1471e-07, dtype=torch.float64)
secont condition:: tensor(1.1471e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5409e-08, dtype=torch.float64)
secont condition:: tensor(9.5409e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3604e-08, dtype=torch.float64)
secont condition:: tensor(7.3604e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1507e-07, dtype=torch.float64)
secont condition:: tensor(1.1507e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3953e-08, dtype=torch.float64)
secont condition:: tensor(9.3953e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7453e-08, dtype=torch.float64)
secont condition:: tensor(7.7453e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9170e-07, dtype=torch.float64)
secont condition:: tensor(1.9170e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2702e-07, dtype=torch.float64)
secont condition:: tensor(1.2702e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9885e-07, dtype=torch.float64)
secont condition:: tensor(1.9885e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-07, dtype=torch.float64)
secont condition:: tensor(1.8525e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5042e-07, dtype=torch.float64)
secont condition:: tensor(2.5042e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.9031898975372314
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7385e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.0717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5452e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7957e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945500
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239941
Train - Epoch 0, Batch: 10, Loss: 0.223487
Test Avg. Loss: 0.000061, Accuracy: 0.944800
Train - Epoch 1, Batch: 0, Loss: 0.223580
Train - Epoch 1, Batch: 10, Loss: 0.211072
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 2, Batch: 0, Loss: 0.227651
Train - Epoch 2, Batch: 10, Loss: 0.219181
Test Avg. Loss: 0.000060, Accuracy: 0.945900
Train - Epoch 3, Batch: 0, Loss: 0.230408
Train - Epoch 3, Batch: 10, Loss: 0.205695
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 4, Batch: 0, Loss: 0.208924
Train - Epoch 4, Batch: 10, Loss: 0.210855
Test Avg. Loss: 0.000060, Accuracy: 0.945400
Train - Epoch 5, Batch: 0, Loss: 0.212654
Train - Epoch 5, Batch: 10, Loss: 0.215916
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 6, Batch: 0, Loss: 0.209076
Train - Epoch 6, Batch: 10, Loss: 0.208071
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 7, Batch: 0, Loss: 0.206518
Train - Epoch 7, Batch: 10, Loss: 0.225332
Test Avg. Loss: 0.000060, Accuracy: 0.945500
training_time:: 7.035045623779297
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.787306308746338
time_baseline:: 4.8051276206970215
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9489e-10, dtype=torch.float64)
secont condition:: tensor(6.9489e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9854e-09, dtype=torch.float64)
secont condition:: tensor(1.9854e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2849e-09, dtype=torch.float64)
secont condition:: tensor(7.2849e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9556e-08, dtype=torch.float64)
secont condition:: tensor(4.9556e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3494e-08, dtype=torch.float64)
secont condition:: tensor(3.3494e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9155e-08, dtype=torch.float64)
secont condition:: tensor(2.9155e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4633e-08, dtype=torch.float64)
secont condition:: tensor(2.4633e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5122e-08, dtype=torch.float64)
secont condition:: tensor(6.5122e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1118e-08, dtype=torch.float64)
secont condition:: tensor(9.1118e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6166e-08, dtype=torch.float64)
secont condition:: tensor(5.6166e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4853e-08, dtype=torch.float64)
secont condition:: tensor(6.4853e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7114e-08, dtype=torch.float64)
secont condition:: tensor(4.7114e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4005e-08, dtype=torch.float64)
secont condition:: tensor(4.4005e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3302e-08, dtype=torch.float64)
secont condition:: tensor(7.3302e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5993e-08, dtype=torch.float64)
secont condition:: tensor(5.5993e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8967e-08, dtype=torch.float64)
secont condition:: tensor(3.8967e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8697e-08, dtype=torch.float64)
secont condition:: tensor(7.8697e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8153e-08, dtype=torch.float64)
secont condition:: tensor(7.8153e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0283e-08, dtype=torch.float64)
secont condition:: tensor(6.0283e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1820e-07, dtype=torch.float64)
secont condition:: tensor(1.1820e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3373e-07, dtype=torch.float64)
secont condition:: tensor(1.3373e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1010e-07, dtype=torch.float64)
secont condition:: tensor(1.1010e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1457e-08, dtype=torch.float64)
secont condition:: tensor(9.1457e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3306e-07, dtype=torch.float64)
secont condition:: tensor(1.3306e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1290e-08, dtype=torch.float64)
secont condition:: tensor(9.1290e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4641e-08, dtype=torch.float64)
secont condition:: tensor(8.4641e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3026e-08, dtype=torch.float64)
secont condition:: tensor(7.3026e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8127e-08, dtype=torch.float64)
secont condition:: tensor(5.8127e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6638e-08, dtype=torch.float64)
secont condition:: tensor(4.6638e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2637e-08, dtype=torch.float64)
secont condition:: tensor(6.2637e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1855e-08, dtype=torch.float64)
secont condition:: tensor(5.1855e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3215e-08, dtype=torch.float64)
secont condition:: tensor(6.3215e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1227e-07, dtype=torch.float64)
secont condition:: tensor(1.1227e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0231e-08, dtype=torch.float64)
secont condition:: tensor(7.0231e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7595e-08, dtype=torch.float64)
secont condition:: tensor(9.7595e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3901e-08, dtype=torch.float64)
secont condition:: tensor(8.3901e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0665e-07, dtype=torch.float64)
secont condition:: tensor(1.0665e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0066e-07, dtype=torch.float64)
secont condition:: tensor(1.0066e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2147e-08, dtype=torch.float64)
secont condition:: tensor(8.2147e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9755e-08, dtype=torch.float64)
secont condition:: tensor(7.9755e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2159e-07, dtype=torch.float64)
secont condition:: tensor(1.2159e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4566e-07, dtype=torch.float64)
secont condition:: tensor(1.4566e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3622e-07, dtype=torch.float64)
secont condition:: tensor(1.3622e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1828e-07, dtype=torch.float64)
secont condition:: tensor(2.1828e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9522e-07, dtype=torch.float64)
secont condition:: tensor(1.9522e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5026e-07, dtype=torch.float64)
secont condition:: tensor(1.5026e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0895e-07, dtype=torch.float64)
secont condition:: tensor(2.0895e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7789e-07, dtype=torch.float64)
secont condition:: tensor(1.7789e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0587e-07, dtype=torch.float64)
secont condition:: tensor(3.0587e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1222e-07, dtype=torch.float64)
secont condition:: tensor(3.1222e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.891380548477173
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3329e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1490e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3772e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2303e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.946100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.246765
Train - Epoch 0, Batch: 10, Loss: 0.231732
Test Avg. Loss: 0.000061, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.220478
Train - Epoch 1, Batch: 10, Loss: 0.205966
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 2, Batch: 0, Loss: 0.219604
Train - Epoch 2, Batch: 10, Loss: 0.224245
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 3, Batch: 0, Loss: 0.211169
Train - Epoch 3, Batch: 10, Loss: 0.228500
Test Avg. Loss: 0.000060, Accuracy: 0.945600
Train - Epoch 4, Batch: 0, Loss: 0.220840
Train - Epoch 4, Batch: 10, Loss: 0.206241
Test Avg. Loss: 0.000060, Accuracy: 0.945700
Train - Epoch 5, Batch: 0, Loss: 0.210823
Train - Epoch 5, Batch: 10, Loss: 0.206673
Test Avg. Loss: 0.000060, Accuracy: 0.945800
Train - Epoch 6, Batch: 0, Loss: 0.214896
Train - Epoch 6, Batch: 10, Loss: 0.200479
Test Avg. Loss: 0.000060, Accuracy: 0.945500
Train - Epoch 7, Batch: 0, Loss: 0.216402
Train - Epoch 7, Batch: 10, Loss: 0.211108
Test Avg. Loss: 0.000060, Accuracy: 0.945800
training_time:: 7.088217258453369
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 4.719440698623657
time_baseline:: 4.737035274505615
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7480e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2660e-09, dtype=torch.float64)
secont condition:: tensor(9.2660e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4986e-08, dtype=torch.float64)
secont condition:: tensor(1.4986e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2611e-08, dtype=torch.float64)
secont condition:: tensor(2.2611e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1054e-08, dtype=torch.float64)
secont condition:: tensor(2.1054e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6964e-08, dtype=torch.float64)
secont condition:: tensor(1.6964e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8577e-08, dtype=torch.float64)
secont condition:: tensor(1.8577e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6488e-08, dtype=torch.float64)
secont condition:: tensor(3.6488e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2599e-08, dtype=torch.float64)
secont condition:: tensor(2.2599e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8555e-08, dtype=torch.float64)
secont condition:: tensor(2.8555e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1162e-08, dtype=torch.float64)
secont condition:: tensor(2.1162e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0426e-08, dtype=torch.float64)
secont condition:: tensor(4.0426e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1805e-08, dtype=torch.float64)
secont condition:: tensor(3.1805e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4240e-08, dtype=torch.float64)
secont condition:: tensor(7.4240e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1972e-08, dtype=torch.float64)
secont condition:: tensor(6.1972e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7365e-08, dtype=torch.float64)
secont condition:: tensor(7.7365e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3833e-08, dtype=torch.float64)
secont condition:: tensor(6.3833e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1933e-07, dtype=torch.float64)
secont condition:: tensor(1.1933e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3748e-07, dtype=torch.float64)
secont condition:: tensor(1.3748e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5811e-07, dtype=torch.float64)
secont condition:: tensor(1.5811e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7747e-07, dtype=torch.float64)
secont condition:: tensor(1.7747e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5829e-07, dtype=torch.float64)
secont condition:: tensor(1.5829e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1950e-07, dtype=torch.float64)
secont condition:: tensor(1.1950e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1513e-07, dtype=torch.float64)
secont condition:: tensor(1.1513e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8346e-08, dtype=torch.float64)
secont condition:: tensor(7.8346e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6291e-08, dtype=torch.float64)
secont condition:: tensor(7.6291e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8267e-08, dtype=torch.float64)
secont condition:: tensor(4.8267e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0107e-08, dtype=torch.float64)
secont condition:: tensor(4.0107e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7958e-08, dtype=torch.float64)
secont condition:: tensor(7.7958e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9578e-08, dtype=torch.float64)
secont condition:: tensor(5.9578e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2452e-08, dtype=torch.float64)
secont condition:: tensor(4.2452e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0889e-08, dtype=torch.float64)
secont condition:: tensor(7.0889e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4710e-08, dtype=torch.float64)
secont condition:: tensor(9.4710e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5260e-08, dtype=torch.float64)
secont condition:: tensor(8.5260e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3301e-08, dtype=torch.float64)
secont condition:: tensor(7.3301e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0528e-08, dtype=torch.float64)
secont condition:: tensor(7.0528e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0462e-08, dtype=torch.float64)
secont condition:: tensor(7.0462e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6927e-08, dtype=torch.float64)
secont condition:: tensor(4.6927e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1596e-08, dtype=torch.float64)
secont condition:: tensor(6.1596e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4602e-08, dtype=torch.float64)
secont condition:: tensor(3.4602e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1277e-07, dtype=torch.float64)
secont condition:: tensor(1.1277e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8530e-07, dtype=torch.float64)
secont condition:: tensor(1.8530e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9689e-07, dtype=torch.float64)
secont condition:: tensor(1.9689e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5698e-07, dtype=torch.float64)
secont condition:: tensor(1.5698e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9251e-07, dtype=torch.float64)
secont condition:: tensor(1.9251e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6022e-07, dtype=torch.float64)
secont condition:: tensor(1.6022e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0799e-07, dtype=torch.float64)
secont condition:: tensor(3.0799e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0898e-07, dtype=torch.float64)
secont condition:: tensor(2.0898e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2224e-07, dtype=torch.float64)
secont condition:: tensor(2.2224e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4031e-07, dtype=torch.float64)
secont condition:: tensor(2.4031e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 2.7925946712493896
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7365e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8627e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2700e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2905e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8310e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000060, Accuracy: 0.945900
batch size:: 1024
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.245577
Train - Epoch 0, Batch: 10, Loss: 0.203565
Train - Epoch 0, Batch: 20, Loss: 0.211540
Train - Epoch 0, Batch: 30, Loss: 0.226510
Train - Epoch 0, Batch: 40, Loss: 0.206416
Train - Epoch 0, Batch: 50, Loss: 0.220038
Test Avg. Loss: 0.000211, Accuracy: 0.945800
Train - Epoch 1, Batch: 0, Loss: 0.222581
Train - Epoch 1, Batch: 10, Loss: 0.249524
Train - Epoch 1, Batch: 20, Loss: 0.216021
Train - Epoch 1, Batch: 30, Loss: 0.211431
Train - Epoch 1, Batch: 40, Loss: 0.208187
Train - Epoch 1, Batch: 50, Loss: 0.200812
Test Avg. Loss: 0.000210, Accuracy: 0.945900
training_time:: 2.1634321212768555
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3881254196166992
time_baseline:: 1.3930463790893555
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0166e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0149e-09, dtype=torch.float64)
secont condition:: tensor(2.0149e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3707e-08, dtype=torch.float64)
secont condition:: tensor(1.3707e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6640e-08, dtype=torch.float64)
secont condition:: tensor(4.6640e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0989e-08, dtype=torch.float64)
secont condition:: tensor(4.0989e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9885e-08, dtype=torch.float64)
secont condition:: tensor(4.9885e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3453e-08, dtype=torch.float64)
secont condition:: tensor(4.3453e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2760e-08, dtype=torch.float64)
secont condition:: tensor(4.2760e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5945e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3962e-08, dtype=torch.float64)
secont condition:: tensor(3.3962e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1647e-08, dtype=torch.float64)
secont condition:: tensor(3.1647e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1570e-07, dtype=torch.float64)
secont condition:: tensor(1.1570e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2984e-08, dtype=torch.float64)
secont condition:: tensor(2.2984e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0719e-08, dtype=torch.float64)
secont condition:: tensor(2.0719e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3398e-08, dtype=torch.float64)
secont condition:: tensor(3.3398e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2931e-08, dtype=torch.float64)
secont condition:: tensor(4.2931e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6967e-08, dtype=torch.float64)
secont condition:: tensor(4.6967e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5424e-08, dtype=torch.float64)
secont condition:: tensor(3.5424e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4563e-08, dtype=torch.float64)
secont condition:: tensor(1.4563e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4749e-08, dtype=torch.float64)
secont condition:: tensor(1.4749e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7850e-08, dtype=torch.float64)
secont condition:: tensor(1.7850e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8216e-08, dtype=torch.float64)
secont condition:: tensor(1.8216e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9996e-08, dtype=torch.float64)
secont condition:: tensor(1.9996e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7609e-08, dtype=torch.float64)
secont condition:: tensor(1.7609e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0268e-08, dtype=torch.float64)
secont condition:: tensor(8.0268e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8696e-08, dtype=torch.float64)
secont condition:: tensor(4.8696e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5072e-08, dtype=torch.float64)
secont condition:: tensor(3.5072e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1820e-07, dtype=torch.float64)
secont condition:: tensor(1.1820e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6388e-08, dtype=torch.float64)
secont condition:: tensor(1.6388e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2193e-07, dtype=torch.float64)
secont condition:: tensor(1.2193e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0362e-08, dtype=torch.float64)
secont condition:: tensor(4.0362e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4142e-08, dtype=torch.float64)
secont condition:: tensor(4.4142e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5552e-07, dtype=torch.float64)
secont condition:: tensor(5.5552e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9364e-07, dtype=torch.float64)
secont condition:: tensor(4.9364e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8334e-07, dtype=torch.float64)
secont condition:: tensor(5.8334e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6280e-07, dtype=torch.float64)
secont condition:: tensor(4.6280e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9866e-07, dtype=torch.float64)
secont condition:: tensor(1.9866e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9422e-07, dtype=torch.float64)
secont condition:: tensor(2.9422e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8489e-07, dtype=torch.float64)
secont condition:: tensor(1.8489e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1992e-08, dtype=torch.float64)
secont condition:: tensor(9.1992e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8328e-07, dtype=torch.float64)
secont condition:: tensor(1.8328e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0370e-07, dtype=torch.float64)
secont condition:: tensor(1.0370e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6978e-07, dtype=torch.float64)
secont condition:: tensor(1.6978e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6702e-07, dtype=torch.float64)
secont condition:: tensor(1.6702e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1968e-07, dtype=torch.float64)
secont condition:: tensor(2.1968e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3165e-07, dtype=torch.float64)
secont condition:: tensor(3.3165e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0797e-07, dtype=torch.float64)
secont condition:: tensor(2.0797e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9978e-07, dtype=torch.float64)
secont condition:: tensor(1.9978e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0108e-07, dtype=torch.float64)
secont condition:: tensor(3.0108e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6878e-07, dtype=torch.float64)
secont condition:: tensor(5.6878e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9851e-07, dtype=torch.float64)
secont condition:: tensor(3.9851e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.6941697597503662
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8393e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6889e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2694e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8980e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.266401
Train - Epoch 0, Batch: 10, Loss: 0.233349
Train - Epoch 0, Batch: 20, Loss: 0.234758
Train - Epoch 0, Batch: 30, Loss: 0.235727
Train - Epoch 0, Batch: 40, Loss: 0.241101
Train - Epoch 0, Batch: 50, Loss: 0.229554
Test Avg. Loss: 0.000211, Accuracy: 0.945400
Train - Epoch 1, Batch: 0, Loss: 0.212482
Train - Epoch 1, Batch: 10, Loss: 0.255224
Train - Epoch 1, Batch: 20, Loss: 0.219542
Train - Epoch 1, Batch: 30, Loss: 0.190775
Train - Epoch 1, Batch: 40, Loss: 0.220829
Train - Epoch 1, Batch: 50, Loss: 0.208401
Test Avg. Loss: 0.000209, Accuracy: 0.945900
training_time:: 2.2090768814086914
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3613967895507812
time_baseline:: 1.3662748336791992
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7280e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2009e-08, dtype=torch.float64)
secont condition:: tensor(1.2009e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4829e-08, dtype=torch.float64)
secont condition:: tensor(2.4829e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3230e-08, dtype=torch.float64)
secont condition:: tensor(2.3230e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5608e-08, dtype=torch.float64)
secont condition:: tensor(1.5608e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3670e-07, dtype=torch.float64)
secont condition:: tensor(5.3670e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1823e-07, dtype=torch.float64)
secont condition:: tensor(4.1823e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9701e-07, dtype=torch.float64)
secont condition:: tensor(8.9701e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7988e-07, dtype=torch.float64)
secont condition:: tensor(6.7988e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5130e-07, dtype=torch.float64)
secont condition:: tensor(4.5130e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4095e-07, dtype=torch.float64)
secont condition:: tensor(4.4095e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2299e-07, dtype=torch.float64)
secont condition:: tensor(4.2299e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8892e-07, dtype=torch.float64)
secont condition:: tensor(2.8892e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1630e-07, dtype=torch.float64)
secont condition:: tensor(2.1630e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6839e-07, dtype=torch.float64)
secont condition:: tensor(2.6839e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6780e-07, dtype=torch.float64)
secont condition:: tensor(1.6780e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8097e-07, dtype=torch.float64)
secont condition:: tensor(1.8097e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1569e-07, dtype=torch.float64)
secont condition:: tensor(1.1569e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2489e-08, dtype=torch.float64)
secont condition:: tensor(7.2489e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7102e-08, dtype=torch.float64)
secont condition:: tensor(7.7102e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8223e-08, dtype=torch.float64)
secont condition:: tensor(5.8223e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9396e-08, dtype=torch.float64)
secont condition:: tensor(4.9396e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0083e-08, dtype=torch.float64)
secont condition:: tensor(9.0083e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6575e-08, dtype=torch.float64)
secont condition:: tensor(8.6575e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2026e-08, dtype=torch.float64)
secont condition:: tensor(7.2026e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1455e-08, dtype=torch.float64)
secont condition:: tensor(8.1455e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6914e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5616e-08, dtype=torch.float64)
secont condition:: tensor(5.5616e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5977e-08, dtype=torch.float64)
secont condition:: tensor(5.5977e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2435e-08, dtype=torch.float64)
secont condition:: tensor(5.2435e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5703e-07, dtype=torch.float64)
secont condition:: tensor(2.5703e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4526e-07, dtype=torch.float64)
secont condition:: tensor(2.4526e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8054e-07, dtype=torch.float64)
secont condition:: tensor(1.8054e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4746e-07, dtype=torch.float64)
secont condition:: tensor(1.4746e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7908e-08, dtype=torch.float64)
secont condition:: tensor(5.7908e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3135e-07, dtype=torch.float64)
secont condition:: tensor(1.3135e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2239e-07, dtype=torch.float64)
secont condition:: tensor(2.2239e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5756e-08, dtype=torch.float64)
secont condition:: tensor(7.5756e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6929e-07, dtype=torch.float64)
secont condition:: tensor(1.6929e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2773e-07, dtype=torch.float64)
secont condition:: tensor(1.2773e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2404e-07, dtype=torch.float64)
secont condition:: tensor(4.2404e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4076e-07, dtype=torch.float64)
secont condition:: tensor(2.4076e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1667e-07, dtype=torch.float64)
secont condition:: tensor(2.1667e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2910e-07, dtype=torch.float64)
secont condition:: tensor(5.2910e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2762e-07, dtype=torch.float64)
secont condition:: tensor(4.2762e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4717e-07, dtype=torch.float64)
secont condition:: tensor(3.4717e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1827e-07, dtype=torch.float64)
secont condition:: tensor(2.1827e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2374e-07, dtype=torch.float64)
secont condition:: tensor(3.2374e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8429e-07, dtype=torch.float64)
secont condition:: tensor(2.8429e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4287e-07, dtype=torch.float64)
secont condition:: tensor(2.4287e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3486e-07, dtype=torch.float64)
secont condition:: tensor(2.3486e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3264e-07, dtype=torch.float64)
secont condition:: tensor(6.3264e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2025e-07, dtype=torch.float64)
secont condition:: tensor(4.2025e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9786e-07, dtype=torch.float64)
secont condition:: tensor(2.9786e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4052e-07, dtype=torch.float64)
secont condition:: tensor(3.4052e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0369e-07, dtype=torch.float64)
secont condition:: tensor(5.0369e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.6293396949768066
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.3131e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5310e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255669
Train - Epoch 0, Batch: 10, Loss: 0.201043
Train - Epoch 0, Batch: 20, Loss: 0.213805
Train - Epoch 0, Batch: 30, Loss: 0.196843
Train - Epoch 0, Batch: 40, Loss: 0.202368
Train - Epoch 0, Batch: 50, Loss: 0.212471
Test Avg. Loss: 0.000210, Accuracy: 0.945400
Train - Epoch 1, Batch: 0, Loss: 0.248786
Train - Epoch 1, Batch: 10, Loss: 0.233457
Train - Epoch 1, Batch: 20, Loss: 0.240352
Train - Epoch 1, Batch: 30, Loss: 0.214416
Train - Epoch 1, Batch: 40, Loss: 0.203986
Train - Epoch 1, Batch: 50, Loss: 0.188019
Test Avg. Loss: 0.000209, Accuracy: 0.945600
training_time:: 2.1661860942840576
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.4217746257781982
time_baseline:: 1.426727533340454
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2468e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000209, Accuracy: 0.945600
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8563e-33, dtype=torch.float64)
secont condition:: tensor(6.8563e-33, dtype=torch.float64)
curr_secont condition:: tensor(5.7692e-10, dtype=torch.float64)
secont condition:: tensor(5.7692e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0683e-09, dtype=torch.float64)
secont condition:: tensor(9.0683e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1686e-07, dtype=torch.float64)
secont condition:: tensor(2.1686e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1998e-07, dtype=torch.float64)
secont condition:: tensor(1.1998e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8598e-08, dtype=torch.float64)
secont condition:: tensor(8.8598e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7118e-07, dtype=torch.float64)
secont condition:: tensor(1.7118e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7344e-07, dtype=torch.float64)
secont condition:: tensor(2.7344e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9390e-07, dtype=torch.float64)
secont condition:: tensor(1.9390e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8988e-07, dtype=torch.float64)
secont condition:: tensor(1.8988e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3087e-07, dtype=torch.float64)
secont condition:: tensor(1.3087e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6516e-07, dtype=torch.float64)
secont condition:: tensor(4.6516e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8245e-07, dtype=torch.float64)
secont condition:: tensor(3.8245e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2559e-07, dtype=torch.float64)
secont condition:: tensor(2.2559e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1339e-07, dtype=torch.float64)
secont condition:: tensor(3.1339e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0650e-07, dtype=torch.float64)
secont condition:: tensor(3.0650e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5585e-07, dtype=torch.float64)
secont condition:: tensor(1.5585e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1106e-07, dtype=torch.float64)
secont condition:: tensor(2.1106e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3913e-07, dtype=torch.float64)
secont condition:: tensor(1.3913e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6936e-07, dtype=torch.float64)
secont condition:: tensor(1.6936e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9484e-07, dtype=torch.float64)
secont condition:: tensor(1.9484e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1918e-07, dtype=torch.float64)
secont condition:: tensor(1.1918e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0719e-08, dtype=torch.float64)
secont condition:: tensor(9.0719e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2806e-07, dtype=torch.float64)
secont condition:: tensor(2.2806e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9242e-07, dtype=torch.float64)
secont condition:: tensor(2.9242e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2735e-07, dtype=torch.float64)
secont condition:: tensor(2.2735e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0319e-07, dtype=torch.float64)
secont condition:: tensor(1.0319e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8708e-08, dtype=torch.float64)
secont condition:: tensor(8.8708e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9310e-08, dtype=torch.float64)
secont condition:: tensor(3.9310e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6917e-08, dtype=torch.float64)
secont condition:: tensor(9.6917e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0204e-07, dtype=torch.float64)
secont condition:: tensor(1.0204e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1149e-07, dtype=torch.float64)
secont condition:: tensor(1.1149e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1730e-07, dtype=torch.float64)
secont condition:: tensor(6.1730e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9582e-07, dtype=torch.float64)
secont condition:: tensor(4.9582e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1537e-07, dtype=torch.float64)
secont condition:: tensor(4.1537e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0303e-07, dtype=torch.float64)
secont condition:: tensor(3.0303e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4292e-07, dtype=torch.float64)
secont condition:: tensor(2.4292e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1698e-07, dtype=torch.float64)
secont condition:: tensor(2.1698e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2901e-07, dtype=torch.float64)
secont condition:: tensor(2.2901e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5937e-07, dtype=torch.float64)
secont condition:: tensor(1.5937e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3109e-07, dtype=torch.float64)
secont condition:: tensor(1.3109e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7985e-08, dtype=torch.float64)
secont condition:: tensor(9.7985e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4846e-07, dtype=torch.float64)
secont condition:: tensor(5.4846e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2774e-07, dtype=torch.float64)
secont condition:: tensor(3.2774e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2774e-07, dtype=torch.float64)
secont condition:: tensor(3.2774e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6655e-07, dtype=torch.float64)
secont condition:: tensor(3.6655e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3129e-07, dtype=torch.float64)
secont condition:: tensor(5.3129e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3142e-07, dtype=torch.float64)
secont condition:: tensor(7.3142e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0873e-07, dtype=torch.float64)
secont condition:: tensor(2.0873e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6538e-07, dtype=torch.float64)
secont condition:: tensor(1.6538e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5183e-07, dtype=torch.float64)
secont condition:: tensor(3.5183e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.689070224761963
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4275e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5909e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0715e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5439e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236150
Train - Epoch 0, Batch: 10, Loss: 0.214722
Train - Epoch 0, Batch: 20, Loss: 0.208182
Train - Epoch 0, Batch: 30, Loss: 0.210124
Train - Epoch 0, Batch: 40, Loss: 0.220306
Train - Epoch 0, Batch: 50, Loss: 0.211520
Test Avg. Loss: 0.000211, Accuracy: 0.945100
Train - Epoch 1, Batch: 0, Loss: 0.189317
Train - Epoch 1, Batch: 10, Loss: 0.233006
Train - Epoch 1, Batch: 20, Loss: 0.239828
Train - Epoch 1, Batch: 30, Loss: 0.210086
Train - Epoch 1, Batch: 40, Loss: 0.216890
Train - Epoch 1, Batch: 50, Loss: 0.188159
Test Avg. Loss: 0.000210, Accuracy: 0.946000
training_time:: 2.2473466396331787
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.3814043998718262
time_baseline:: 1.3863115310668945
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9366e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946100
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7541e-10, dtype=torch.float64)
secont condition:: tensor(8.7541e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4483e-10, dtype=torch.float64)
secont condition:: tensor(5.4483e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8662e-10, dtype=torch.float64)
secont condition:: tensor(3.8662e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2970e-08, dtype=torch.float64)
secont condition:: tensor(2.2970e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5079e-08, dtype=torch.float64)
secont condition:: tensor(4.5079e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3126e-08, dtype=torch.float64)
secont condition:: tensor(4.3126e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3244e-08, dtype=torch.float64)
secont condition:: tensor(6.3244e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1528e-08, dtype=torch.float64)
secont condition:: tensor(4.1528e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8772e-08, dtype=torch.float64)
secont condition:: tensor(2.8772e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5376e-08, dtype=torch.float64)
secont condition:: tensor(1.5376e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4913e-08, dtype=torch.float64)
secont condition:: tensor(1.4913e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1223e-08, dtype=torch.float64)
secont condition:: tensor(1.1223e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3031e-08, dtype=torch.float64)
secont condition:: tensor(2.3031e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6337e-09, dtype=torch.float64)
secont condition:: tensor(8.6337e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8021e-09, dtype=torch.float64)
secont condition:: tensor(9.8021e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1745e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0096e-09, dtype=torch.float64)
secont condition:: tensor(6.0096e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2836e-09, dtype=torch.float64)
secont condition:: tensor(6.2836e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5833e-09, dtype=torch.float64)
secont condition:: tensor(5.5833e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3775e-09, dtype=torch.float64)
secont condition:: tensor(9.3775e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8780e-09, dtype=torch.float64)
secont condition:: tensor(5.8780e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0315e-07, dtype=torch.float64)
secont condition:: tensor(1.0315e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4413e-08, dtype=torch.float64)
secont condition:: tensor(8.4413e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1089e-08, dtype=torch.float64)
secont condition:: tensor(7.1089e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3148e-08, dtype=torch.float64)
secont condition:: tensor(5.3148e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2799e-08, dtype=torch.float64)
secont condition:: tensor(5.2799e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9388e-08, dtype=torch.float64)
secont condition:: tensor(3.9388e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3952e-08, dtype=torch.float64)
secont condition:: tensor(3.3952e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5517e-08, dtype=torch.float64)
secont condition:: tensor(3.5517e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5291e-08, dtype=torch.float64)
secont condition:: tensor(2.5291e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0604e-07, dtype=torch.float64)
secont condition:: tensor(1.0604e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8623e-08, dtype=torch.float64)
secont condition:: tensor(9.8623e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2783e-07, dtype=torch.float64)
secont condition:: tensor(1.2783e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4020e-07, dtype=torch.float64)
secont condition:: tensor(4.4020e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1307e-07, dtype=torch.float64)
secont condition:: tensor(3.1307e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4292e-07, dtype=torch.float64)
secont condition:: tensor(2.4292e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3284e-07, dtype=torch.float64)
secont condition:: tensor(6.3284e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3759e-07, dtype=torch.float64)
secont condition:: tensor(4.3759e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0727e-06, dtype=torch.float64)
secont condition:: tensor(1.0727e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8312e-07, dtype=torch.float64)
secont condition:: tensor(4.8312e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-07, dtype=torch.float64)
secont condition:: tensor(1.4212e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4116e-07, dtype=torch.float64)
secont condition:: tensor(2.4116e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5163e-07, dtype=torch.float64)
secont condition:: tensor(5.5163e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3720e-07, dtype=torch.float64)
secont condition:: tensor(2.3720e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4879e-07, dtype=torch.float64)
secont condition:: tensor(1.4879e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4476e-07, dtype=torch.float64)
secont condition:: tensor(3.4476e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0972e-07, dtype=torch.float64)
secont condition:: tensor(8.0972e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2850e-07, dtype=torch.float64)
secont condition:: tensor(6.2850e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.8653078079223633
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7058e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6802e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3200e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.946000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.199899
Train - Epoch 0, Batch: 10, Loss: 0.209452
Train - Epoch 0, Batch: 20, Loss: 0.235040
Train - Epoch 0, Batch: 30, Loss: 0.245857
Train - Epoch 0, Batch: 40, Loss: 0.234840
Train - Epoch 0, Batch: 50, Loss: 0.227000
Test Avg. Loss: 0.000211, Accuracy: 0.945600
Train - Epoch 1, Batch: 0, Loss: 0.171838
Train - Epoch 1, Batch: 10, Loss: 0.237188
Train - Epoch 1, Batch: 20, Loss: 0.225397
Train - Epoch 1, Batch: 30, Loss: 0.214050
Train - Epoch 1, Batch: 40, Loss: 0.197019
Train - Epoch 1, Batch: 50, Loss: 0.225865
Test Avg. Loss: 0.000210, Accuracy: 0.945800
training_time:: 2.1711411476135254
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 1.389768123626709
time_baseline:: 1.3947608470916748
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.9743e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7885e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3168e-07, dtype=torch.float64)
secont condition:: tensor(3.3168e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3975e-07, dtype=torch.float64)
secont condition:: tensor(2.3975e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4928e-07, dtype=torch.float64)
secont condition:: tensor(1.4928e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2744e-07, dtype=torch.float64)
secont condition:: tensor(1.2744e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7324e-07, dtype=torch.float64)
secont condition:: tensor(6.7324e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8020e-07, dtype=torch.float64)
secont condition:: tensor(5.8020e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7728e-07, dtype=torch.float64)
secont condition:: tensor(4.7728e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7326e-07, dtype=torch.float64)
secont condition:: tensor(3.7326e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0744e-06, dtype=torch.float64)
secont condition:: tensor(1.0744e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4715e-07, dtype=torch.float64)
secont condition:: tensor(6.4715e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9032e-07, dtype=torch.float64)
secont condition:: tensor(4.9032e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7923e-07, dtype=torch.float64)
secont condition:: tensor(3.7923e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2222e-07, dtype=torch.float64)
secont condition:: tensor(3.2222e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3008e-07, dtype=torch.float64)
secont condition:: tensor(2.3008e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9420e-07, dtype=torch.float64)
secont condition:: tensor(1.9420e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0224e-07, dtype=torch.float64)
secont condition:: tensor(2.0224e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1901e-07, dtype=torch.float64)
secont condition:: tensor(1.1901e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8802e-07, dtype=torch.float64)
secont condition:: tensor(1.8802e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2431e-08, dtype=torch.float64)
secont condition:: tensor(3.2431e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4262e-07, dtype=torch.float64)
secont condition:: tensor(4.4262e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1830e-07, dtype=torch.float64)
secont condition:: tensor(3.1830e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2040e-07, dtype=torch.float64)
secont condition:: tensor(2.2040e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6898e-07, dtype=torch.float64)
secont condition:: tensor(1.6898e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7852e-07, dtype=torch.float64)
secont condition:: tensor(1.7852e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4992e-07, dtype=torch.float64)
secont condition:: tensor(2.4992e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3747e-07, dtype=torch.float64)
secont condition:: tensor(1.3747e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2092e-07, dtype=torch.float64)
secont condition:: tensor(1.2092e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9956e-07, dtype=torch.float64)
secont condition:: tensor(1.9956e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1083e-07, dtype=torch.float64)
secont condition:: tensor(1.1083e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0937e-08, dtype=torch.float64)
secont condition:: tensor(8.0937e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9531e-08, dtype=torch.float64)
secont condition:: tensor(6.9531e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.3954e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7860e-08, dtype=torch.float64)
secont condition:: tensor(6.7860e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5489e-08, dtype=torch.float64)
secont condition:: tensor(5.5489e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9067e-08, dtype=torch.float64)
secont condition:: tensor(4.9067e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1948e-08, dtype=torch.float64)
secont condition:: tensor(4.1948e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3732e-07, dtype=torch.float64)
secont condition:: tensor(5.3732e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7566e-07, dtype=torch.float64)
secont condition:: tensor(3.7566e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0424e-07, dtype=torch.float64)
secont condition:: tensor(3.0424e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4739e-07, dtype=torch.float64)
secont condition:: tensor(1.4739e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5593e-07, dtype=torch.float64)
secont condition:: tensor(1.5593e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2924e-07, dtype=torch.float64)
secont condition:: tensor(6.2924e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9220e-07, dtype=torch.float64)
secont condition:: tensor(4.9220e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6628e-07, dtype=torch.float64)
secont condition:: tensor(4.6628e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9901e-07, dtype=torch.float64)
secont condition:: tensor(4.9901e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4536e-07, dtype=torch.float64)
secont condition:: tensor(2.4536e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3287e-07, dtype=torch.float64)
secont condition:: tensor(2.3287e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7301e-07, dtype=torch.float64)
secont condition:: tensor(1.7301e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3652e-07, dtype=torch.float64)
secont condition:: tensor(3.3652e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8541e-07, dtype=torch.float64)
secont condition:: tensor(3.8541e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1858e-07, dtype=torch.float64)
secont condition:: tensor(2.1858e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0115e-07, dtype=torch.float64)
secont condition:: tensor(3.0115e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 1.8024084568023682
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.5492e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3310e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1033e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000210, Accuracy: 0.945700
