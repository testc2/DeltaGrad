varied deletion rate::
varied number of samples::
deletion rate:: 0.00002
python3 generate_rand_ids 0.00002  MNIST 1
tensor([25355])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.192917
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.183214
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.179116
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.172746
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.172431
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 5, Batch: 0, Loss: 0.179664
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.181778
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.173965
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.170961
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.185335
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.178745
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.174247
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.178641
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.176081
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.174222
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 15, Batch: 0, Loss: 0.178523
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.173202
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.175853
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.176558
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.179043
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.68168830871582
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.118566036224365
time_baseline:: 14.163887977600098
curr_diff: 0 tensor(5.8416e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9150e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7911e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7308e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.1495e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5684e-32, dtype=torch.float64)
secont condition:: tensor(1.5684e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.2652e-32, dtype=torch.float64)
secont condition:: tensor(4.2652e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6579e-12, dtype=torch.float64)
secont condition:: tensor(2.6579e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8199e-12, dtype=torch.float64)
secont condition:: tensor(1.8199e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.5213e-12, dtype=torch.float64)
secont condition:: tensor(1.5213e-12, dtype=torch.float64)
curr_secont condition:: tensor(3.7191e-12, dtype=torch.float64)
secont condition:: tensor(3.7191e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.4463e-12, dtype=torch.float64)
secont condition:: tensor(2.4463e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7890e-12, dtype=torch.float64)
secont condition:: tensor(1.7890e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.2367e-12, dtype=torch.float64)
secont condition:: tensor(1.2367e-12, dtype=torch.float64)
curr_secont condition:: tensor(8.8059e-13, dtype=torch.float64)
secont condition:: tensor(8.8059e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.2657e-12, dtype=torch.float64)
secont condition:: tensor(1.2657e-12, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6284e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.7258e-12, dtype=torch.float64)
secont condition:: tensor(1.7258e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.6121e-12, dtype=torch.float64)
secont condition:: tensor(1.6121e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.1203e-12, dtype=torch.float64)
secont condition:: tensor(1.1203e-12, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2797e-13, dtype=torch.float64)
secont condition:: tensor(9.2797e-13, dtype=torch.float64)
curr_secont condition:: tensor(7.8825e-13, dtype=torch.float64)
secont condition:: tensor(7.8825e-13, dtype=torch.float64)
curr_secont condition:: tensor(6.5648e-13, dtype=torch.float64)
secont condition:: tensor(6.5648e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.4242e-13, dtype=torch.float64)
secont condition:: tensor(5.4242e-13, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4741e-13, dtype=torch.float64)
secont condition:: tensor(6.4741e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.2563e-13, dtype=torch.float64)
secont condition:: tensor(5.2563e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.7743e-12, dtype=torch.float64)
secont condition:: tensor(1.7743e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.6059e-13, dtype=torch.float64)
secont condition:: tensor(4.6059e-13, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1588e-13, dtype=torch.float64)
secont condition:: tensor(4.1588e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.8920e-13, dtype=torch.float64)
secont condition:: tensor(3.8920e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.0840e-13, dtype=torch.float64)
secont condition:: tensor(5.0840e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.6133e-13, dtype=torch.float64)
secont condition:: tensor(4.6133e-13, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0899e-13, dtype=torch.float64)
secont condition:: tensor(4.0899e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.9020e-13, dtype=torch.float64)
secont condition:: tensor(3.9020e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.5918e-13, dtype=torch.float64)
secont condition:: tensor(3.5918e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.4186e-13, dtype=torch.float64)
secont condition:: tensor(4.4186e-13, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0891e-13, dtype=torch.float64)
secont condition:: tensor(4.0891e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.8151e-13, dtype=torch.float64)
secont condition:: tensor(3.8151e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.8919e-13, dtype=torch.float64)
secont condition:: tensor(4.8919e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.0733e-13, dtype=torch.float64)
secont condition:: tensor(5.0733e-13, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1367e-13, dtype=torch.float64)
secont condition:: tensor(7.1367e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.5291e-13, dtype=torch.float64)
secont condition:: tensor(5.5291e-13, dtype=torch.float64)
curr_secont condition:: tensor(-9.4096e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.4026e-13, dtype=torch.float64)
secont condition:: tensor(5.4026e-13, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2776e-13, dtype=torch.float64)
secont condition:: tensor(8.2776e-13, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5831e-13, dtype=torch.float64)
secont condition:: tensor(4.5831e-13, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1903e-13, dtype=torch.float64)
secont condition:: tensor(4.1903e-13, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0168e-13, dtype=torch.float64)
secont condition:: tensor(4.0168e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.0305e-13, dtype=torch.float64)
secont condition:: tensor(4.0305e-13, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9135e-13, dtype=torch.float64)
secont condition:: tensor(4.9135e-13, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6540e-13, dtype=torch.float64)
secont condition:: tensor(4.6540e-13, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5193e-13, dtype=torch.float64)
secont condition:: tensor(4.5193e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.5150e-13, dtype=torch.float64)
secont condition:: tensor(4.5150e-13, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5895e-13, dtype=torch.float64)
secont condition:: tensor(4.5895e-13, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0157e-13, dtype=torch.float64)
secont condition:: tensor(5.0157e-13, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1398e-12, dtype=torch.float64)
secont condition:: tensor(1.1398e-12, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.819138288497925
curr_diff: 0 tensor(1.6166e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0318e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7068e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0220e-09, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.6300e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.5535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.2233e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7938e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2887e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.8695e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.194292
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 1, Batch: 0, Loss: 0.182436
Test Avg. Loss: 0.000017, Accuracy: 0.951200
Train - Epoch 2, Batch: 0, Loss: 0.179516
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 3, Batch: 0, Loss: 0.182256
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 4, Batch: 0, Loss: 0.176710
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 5, Batch: 0, Loss: 0.175839
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 6, Batch: 0, Loss: 0.176811
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.173251
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.175035
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.173966
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.173028
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.180436
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.178089
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.180451
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.183319
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.179790
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.175381
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 17, Batch: 0, Loss: 0.179133
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 18, Batch: 0, Loss: 0.173875
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 19, Batch: 0, Loss: 0.173833
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.36824083328247
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.131138801574707
time_baseline:: 14.176356792449951
curr_diff: 0 tensor(1.0360e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.2921e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6438e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.0509e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4807e-32, dtype=torch.float64)
secont condition:: tensor(1.4807e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.5360e-32, dtype=torch.float64)
secont condition:: tensor(4.5360e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9731e-12, dtype=torch.float64)
secont condition:: tensor(1.9731e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3818e-12, dtype=torch.float64)
secont condition:: tensor(1.3818e-12, dtype=torch.float64)
curr_secont condition:: tensor(8.8123e-13, dtype=torch.float64)
secont condition:: tensor(8.8123e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.4341e-13, dtype=torch.float64)
secont condition:: tensor(5.4341e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.7429e-12, dtype=torch.float64)
secont condition:: tensor(1.7429e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2234e-12, dtype=torch.float64)
secont condition:: tensor(1.2234e-12, dtype=torch.float64)
curr_secont condition:: tensor(8.0125e-13, dtype=torch.float64)
secont condition:: tensor(8.0125e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.8814e-13, dtype=torch.float64)
secont condition:: tensor(5.8814e-13, dtype=torch.float64)
curr_secont condition:: tensor(9.6143e-13, dtype=torch.float64)
secont condition:: tensor(9.6143e-13, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8817e-13, dtype=torch.float64)
secont condition:: tensor(6.8817e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.0329e-12, dtype=torch.float64)
secont condition:: tensor(1.0329e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.1189e-12, dtype=torch.float64)
secont condition:: tensor(1.1189e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.8387e-13, dtype=torch.float64)
secont condition:: tensor(5.8387e-13, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3172e-13, dtype=torch.float64)
secont condition:: tensor(3.3172e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.1691e-13, dtype=torch.float64)
secont condition:: tensor(3.1691e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.8383e-13, dtype=torch.float64)
secont condition:: tensor(3.8383e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.7112e-13, dtype=torch.float64)
secont condition:: tensor(2.7112e-13, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2025e-13, dtype=torch.float64)
secont condition:: tensor(2.2025e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.8320e-13, dtype=torch.float64)
secont condition:: tensor(1.8320e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.7143e-13, dtype=torch.float64)
secont condition:: tensor(2.7143e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.3258e-13, dtype=torch.float64)
secont condition:: tensor(2.3258e-13, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9137e-13, dtype=torch.float64)
secont condition:: tensor(1.9137e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.4420e-13, dtype=torch.float64)
secont condition:: tensor(3.4420e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.3470e-13, dtype=torch.float64)
secont condition:: tensor(1.3470e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.6506e-13, dtype=torch.float64)
secont condition:: tensor(1.6506e-13, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3371e-13, dtype=torch.float64)
secont condition:: tensor(1.3371e-13, dtype=torch.float64)
curr_secont condition:: tensor(-1.3063e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.1582e-13, dtype=torch.float64)
secont condition:: tensor(1.1582e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.9975e-13, dtype=torch.float64)
secont condition:: tensor(1.9975e-13, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7357e-13, dtype=torch.float64)
secont condition:: tensor(1.7357e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.4808e-13, dtype=torch.float64)
secont condition:: tensor(1.4808e-13, dtype=torch.float64)
curr_secont condition:: tensor(-2.7785e-14, dtype=torch.float64)
curr_secont condition:: tensor(2.0546e-13, dtype=torch.float64)
secont condition:: tensor(2.0546e-13, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6845e-13, dtype=torch.float64)
secont condition:: tensor(1.6845e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.6612e-13, dtype=torch.float64)
secont condition:: tensor(1.6612e-13, dtype=torch.float64)
curr_secont condition:: tensor(7.4998e-14, dtype=torch.float64)
secont condition:: tensor(7.4998e-14, dtype=torch.float64)
curr_secont condition:: tensor(1.6926e-13, dtype=torch.float64)
secont condition:: tensor(1.6926e-13, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.5116e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6042e-11, dtype=torch.float64)
secont condition:: tensor(3.6042e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7760e-11, dtype=torch.float64)
secont condition:: tensor(6.7760e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1843e-12, dtype=torch.float64)
secont condition:: tensor(5.1843e-12, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2583e-12, dtype=torch.float64)
secont condition:: tensor(4.2583e-12, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8782e-11, dtype=torch.float64)
secont condition:: tensor(2.8782e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6969e-12, dtype=torch.float64)
secont condition:: tensor(6.6969e-12, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0464e-10, dtype=torch.float64)
secont condition:: tensor(2.0464e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5035e-12, dtype=torch.float64)
secont condition:: tensor(3.5035e-12, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4341e-11, dtype=torch.float64)
secont condition:: tensor(1.4341e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9007e-11, dtype=torch.float64)
secont condition:: tensor(1.9007e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.7377e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.9937e-12, dtype=torch.float64)
secont condition:: tensor(2.9937e-12, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3761e-12, dtype=torch.float64)
secont condition:: tensor(3.3761e-12, dtype=torch.float64)
curr_secont condition:: tensor(-1.0285e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9988811016082764
curr_diff: 0 tensor(6.5301e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8516e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3130e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3455e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.5745e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.1602e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6509e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7326e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3231e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.1771e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.203601
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.186271
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.174743
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 3, Batch: 0, Loss: 0.178580
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 4, Batch: 0, Loss: 0.176560
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.171152
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.175634
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 7, Batch: 0, Loss: 0.174313
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.176548
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.181544
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.179145
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.173675
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.175817
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.179953
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.176536
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.179201
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.181469
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 17, Batch: 0, Loss: 0.180611
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.175782
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.177410
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.58798885345459
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.04909086227417
time_baseline:: 14.094157218933105
curr_diff: 0 tensor(3.0794e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.4235e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6087e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1775e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.1196e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2468e-32, dtype=torch.float64)
secont condition:: tensor(1.2468e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.0221e-32, dtype=torch.float64)
secont condition:: tensor(4.0221e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.3276e-32, dtype=torch.float64)
secont condition:: tensor(9.3276e-32, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5963e-12, dtype=torch.float64)
secont condition:: tensor(3.5963e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.3969e-12, dtype=torch.float64)
secont condition:: tensor(2.3969e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.5755e-12, dtype=torch.float64)
secont condition:: tensor(1.5755e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.1165e-12, dtype=torch.float64)
secont condition:: tensor(1.1165e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9119e-12, dtype=torch.float64)
secont condition:: tensor(2.9119e-12, dtype=torch.float64)
curr_secont condition:: tensor(3.5410e-12, dtype=torch.float64)
secont condition:: tensor(3.5410e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.3941e-12, dtype=torch.float64)
secont condition:: tensor(1.3941e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.7710e-13, dtype=torch.float64)
secont condition:: tensor(9.7710e-13, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7452e-12, dtype=torch.float64)
secont condition:: tensor(2.7452e-12, dtype=torch.float64)
curr_secont condition:: tensor(-1.2057e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2357e-11, dtype=torch.float64)
secont condition:: tensor(5.2357e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5786e-10, dtype=torch.float64)
secont condition:: tensor(1.5786e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7228e-11, dtype=torch.float64)
secont condition:: tensor(8.7228e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8756e-11, dtype=torch.float64)
secont condition:: tensor(3.8756e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6296e-11, dtype=torch.float64)
secont condition:: tensor(3.6296e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7475e-11, dtype=torch.float64)
secont condition:: tensor(1.7475e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5172e-11, dtype=torch.float64)
secont condition:: tensor(1.5172e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.5093e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0438e-10, dtype=torch.float64)
secont condition:: tensor(1.0438e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4246e-11, dtype=torch.float64)
secont condition:: tensor(2.4246e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0476e-11, dtype=torch.float64)
secont condition:: tensor(5.0476e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1314e-11, dtype=torch.float64)
secont condition:: tensor(2.1314e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1433e-11, dtype=torch.float64)
secont condition:: tensor(1.1433e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6884e-11, dtype=torch.float64)
secont condition:: tensor(1.6884e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4206e-12, dtype=torch.float64)
secont condition:: tensor(7.4206e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.1358e-11, dtype=torch.float64)
secont condition:: tensor(9.1358e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7666e-11, dtype=torch.float64)
secont condition:: tensor(1.7666e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2162e-12, dtype=torch.float64)
secont condition:: tensor(5.2162e-12, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5391e-11, dtype=torch.float64)
secont condition:: tensor(4.5391e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0217e-11, dtype=torch.float64)
secont condition:: tensor(1.0217e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5030e-10, dtype=torch.float64)
secont condition:: tensor(3.5030e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5148e-11, dtype=torch.float64)
secont condition:: tensor(1.5148e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1826e-11, dtype=torch.float64)
secont condition:: tensor(1.1826e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0105e-11, dtype=torch.float64)
secont condition:: tensor(2.0105e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3974e-11, dtype=torch.float64)
secont condition:: tensor(2.3974e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9496e-11, dtype=torch.float64)
secont condition:: tensor(1.9496e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6646e-10, dtype=torch.float64)
secont condition:: tensor(6.6646e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7495e-10, dtype=torch.float64)
secont condition:: tensor(1.7495e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8972e-11, dtype=torch.float64)
secont condition:: tensor(1.8972e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9599e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1110e-10, dtype=torch.float64)
secont condition:: tensor(1.1110e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9412e-10, dtype=torch.float64)
secont condition:: tensor(4.9412e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2439e-11, dtype=torch.float64)
secont condition:: tensor(1.2439e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7518e-11, dtype=torch.float64)
secont condition:: tensor(4.7518e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1037e-11, dtype=torch.float64)
secont condition:: tensor(1.1037e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4109e-10, dtype=torch.float64)
secont condition:: tensor(3.4109e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0003e-11, dtype=torch.float64)
secont condition:: tensor(5.0003e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4829e-11, dtype=torch.float64)
secont condition:: tensor(1.4829e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4025e-11, dtype=torch.float64)
secont condition:: tensor(1.4025e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.029849052429199
curr_diff: 0 tensor(1.4837e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2439e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.1661e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0841e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.4907e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.9543e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2681e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.9926e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197489
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 1, Batch: 0, Loss: 0.188217
Test Avg. Loss: 0.000017, Accuracy: 0.951600
Train - Epoch 2, Batch: 0, Loss: 0.176632
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.182570
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.178224
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 5, Batch: 0, Loss: 0.179047
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.176944
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.179918
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.181230
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.181772
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.175966
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.178544
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 12, Batch: 0, Loss: 0.173703
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.172035
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.178408
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.177234
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.177830
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.180554
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.178540
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.182472
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.32837700843811
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.021974802017212
time_baseline:: 14.066588878631592
curr_diff: 0 tensor(9.3520e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0526e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6643e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9544e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.5572e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3790e-32, dtype=torch.float64)
secont condition:: tensor(1.3790e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6427e-12, dtype=torch.float64)
secont condition:: tensor(3.6427e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.1934e-12, dtype=torch.float64)
secont condition:: tensor(2.1934e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6698e-12, dtype=torch.float64)
secont condition:: tensor(1.6698e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.5331e-12, dtype=torch.float64)
secont condition:: tensor(4.5331e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.5900e-12, dtype=torch.float64)
secont condition:: tensor(2.5900e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.0934e-12, dtype=torch.float64)
secont condition:: tensor(1.0934e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5615e-12, dtype=torch.float64)
secont condition:: tensor(1.5615e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.3783e-12, dtype=torch.float64)
secont condition:: tensor(2.3783e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.6363e-12, dtype=torch.float64)
secont condition:: tensor(1.6363e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.1237e-12, dtype=torch.float64)
secont condition:: tensor(1.1237e-12, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3441e-13, dtype=torch.float64)
secont condition:: tensor(8.3441e-13, dtype=torch.float64)
curr_secont condition:: tensor(6.3685e-13, dtype=torch.float64)
secont condition:: tensor(6.3685e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.4298e-13, dtype=torch.float64)
secont condition:: tensor(4.4298e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.9493e-13, dtype=torch.float64)
secont condition:: tensor(4.9493e-13, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7110e-13, dtype=torch.float64)
secont condition:: tensor(3.7110e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.8391e-13, dtype=torch.float64)
secont condition:: tensor(2.8391e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.1148e-13, dtype=torch.float64)
secont condition:: tensor(4.1148e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.4004e-13, dtype=torch.float64)
secont condition:: tensor(2.4004e-13, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5794e-13, dtype=torch.float64)
secont condition:: tensor(2.5794e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.8876e-13, dtype=torch.float64)
secont condition:: tensor(2.8876e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.5842e-12, dtype=torch.float64)
secont condition:: tensor(1.5842e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.6377e-13, dtype=torch.float64)
secont condition:: tensor(4.6377e-13, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9327e-13, dtype=torch.float64)
secont condition:: tensor(3.9327e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.5447e-13, dtype=torch.float64)
secont condition:: tensor(3.5447e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.2608e-13, dtype=torch.float64)
secont condition:: tensor(3.2608e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.2889e-13, dtype=torch.float64)
secont condition:: tensor(4.2889e-13, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8766e-13, dtype=torch.float64)
secont condition:: tensor(5.8766e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.3939e-13, dtype=torch.float64)
secont condition:: tensor(3.3939e-13, dtype=torch.float64)
curr_secont condition:: tensor(-2.8630e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.0085e-12, dtype=torch.float64)
secont condition:: tensor(9.0085e-12, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0735e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7685e-13, dtype=torch.float64)
secont condition:: tensor(3.7685e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.5476e-13, dtype=torch.float64)
secont condition:: tensor(3.5476e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.6976e-11, dtype=torch.float64)
secont condition:: tensor(3.6976e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0379e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4970e-12, dtype=torch.float64)
secont condition:: tensor(4.4970e-12, dtype=torch.float64)
curr_secont condition:: tensor(6.2635e-13, dtype=torch.float64)
secont condition:: tensor(6.2635e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.0810e-12, dtype=torch.float64)
secont condition:: tensor(1.0810e-12, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.6256e-12, dtype=torch.float64)
curr_secont condition:: tensor(-8.1122e-12, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8469e-13, dtype=torch.float64)
secont condition:: tensor(8.8469e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.0673e-12, dtype=torch.float64)
secont condition:: tensor(1.0673e-12, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2186e-13, dtype=torch.float64)
secont condition:: tensor(8.2186e-13, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.8864e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.3640e-13, dtype=torch.float64)
secont condition:: tensor(8.3640e-13, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9656e-13, dtype=torch.float64)
secont condition:: tensor(7.9656e-13, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.5394e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.4719e-12, dtype=torch.float64)
secont condition:: tensor(1.4719e-12, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2109e-12, dtype=torch.float64)
secont condition:: tensor(1.2109e-12, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2253e-13, dtype=torch.float64)
secont condition:: tensor(8.2253e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.4254e-11, dtype=torch.float64)
secont condition:: tensor(3.4254e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1977e-11, dtype=torch.float64)
secont condition:: tensor(2.1977e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2774e-11, dtype=torch.float64)
secont condition:: tensor(4.2774e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.113492965698242
curr_diff: 0 tensor(1.2632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7265e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.9960e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8584e-09, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.2671e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.1862e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0494e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6653e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8903e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(9.3949e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.193905
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.182963
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.182545
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.180153
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 4, Batch: 0, Loss: 0.179220
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.176422
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 6, Batch: 0, Loss: 0.178475
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.179269
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.178103
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.180158
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.179336
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.176335
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.177843
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 13, Batch: 0, Loss: 0.174526
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.175138
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.181783
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.180796
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.179029
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.172382
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.182840
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.441865921020508
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.196446418762207
time_baseline:: 14.241950750350952
curr_diff: 0 tensor(1.1890e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5493e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9831e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.2062e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 1
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-32, dtype=torch.float64)
secont condition:: tensor(1.7300e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8486e-12, dtype=torch.float64)
secont condition:: tensor(3.8486e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.0184e-12, dtype=torch.float64)
secont condition:: tensor(2.0184e-12, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3243e-12, dtype=torch.float64)
secont condition:: tensor(1.3243e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.2893e-12, dtype=torch.float64)
secont condition:: tensor(1.2893e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.7320e-12, dtype=torch.float64)
secont condition:: tensor(2.7320e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.7857e-12, dtype=torch.float64)
secont condition:: tensor(1.7857e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0962e-12, dtype=torch.float64)
secont condition:: tensor(1.0962e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.0743e-13, dtype=torch.float64)
secont condition:: tensor(7.0743e-13, dtype=torch.float64)
curr_secont condition:: tensor(-2.3399e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.2426e-12, dtype=torch.float64)
secont condition:: tensor(1.2426e-12, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1236e-13, dtype=torch.float64)
secont condition:: tensor(9.1236e-13, dtype=torch.float64)
curr_secont condition:: tensor(6.5925e-13, dtype=torch.float64)
secont condition:: tensor(6.5925e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.8046e-13, dtype=torch.float64)
secont condition:: tensor(4.8046e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.5471e-13, dtype=torch.float64)
secont condition:: tensor(3.5471e-13, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3675e-13, dtype=torch.float64)
secont condition:: tensor(9.3675e-13, dtype=torch.float64)
curr_secont condition:: tensor(8.5168e-13, dtype=torch.float64)
secont condition:: tensor(8.5168e-13, dtype=torch.float64)
curr_secont condition:: tensor(6.1773e-13, dtype=torch.float64)
secont condition:: tensor(6.1773e-13, dtype=torch.float64)
curr_secont condition:: tensor(5.4952e-13, dtype=torch.float64)
secont condition:: tensor(5.4952e-13, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8076e-13, dtype=torch.float64)
secont condition:: tensor(3.8076e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.2557e-12, dtype=torch.float64)
secont condition:: tensor(2.2557e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.6252e-13, dtype=torch.float64)
secont condition:: tensor(2.6252e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.5918e-13, dtype=torch.float64)
secont condition:: tensor(3.5918e-13, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2874e-13, dtype=torch.float64)
secont condition:: tensor(3.2874e-13, dtype=torch.float64)
curr_secont condition:: tensor(4.1154e-13, dtype=torch.float64)
secont condition:: tensor(4.1154e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.8794e-13, dtype=torch.float64)
secont condition:: tensor(2.8794e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.0738e-12, dtype=torch.float64)
secont condition:: tensor(2.0738e-12, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0298e-13, dtype=torch.float64)
secont condition:: tensor(2.0298e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.0768e-13, dtype=torch.float64)
secont condition:: tensor(2.0768e-13, dtype=torch.float64)
curr_secont condition:: tensor(6.4798e-12, dtype=torch.float64)
secont condition:: tensor(6.4798e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.0755e-13, dtype=torch.float64)
secont condition:: tensor(2.0755e-13, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8823e-13, dtype=torch.float64)
secont condition:: tensor(1.8823e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.2356e-13, dtype=torch.float64)
secont condition:: tensor(1.2356e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.3176e-13, dtype=torch.float64)
secont condition:: tensor(2.3176e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.1459e-13, dtype=torch.float64)
secont condition:: tensor(2.1459e-13, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4600e-13, dtype=torch.float64)
secont condition:: tensor(2.4600e-13, dtype=torch.float64)
curr_secont condition:: tensor(3.2897e-13, dtype=torch.float64)
secont condition:: tensor(3.2897e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.6373e-13, dtype=torch.float64)
secont condition:: tensor(1.6373e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.9689e-13, dtype=torch.float64)
secont condition:: tensor(1.9689e-13, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8682e-13, dtype=torch.float64)
secont condition:: tensor(5.8682e-13, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5256e-12, dtype=torch.float64)
secont condition:: tensor(1.5256e-12, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1975e-11, dtype=torch.float64)
secont condition:: tensor(1.1975e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4415e-10, dtype=torch.float64)
secont condition:: tensor(6.4415e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3865e-13, dtype=torch.float64)
secont condition:: tensor(5.3865e-13, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2303e-12, dtype=torch.float64)
secont condition:: tensor(2.2303e-12, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4440e-12, dtype=torch.float64)
secont condition:: tensor(2.4440e-12, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1236e-12, dtype=torch.float64)
secont condition:: tensor(2.1236e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.0397e-12, dtype=torch.float64)
secont condition:: tensor(2.0397e-12, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0617e-12, dtype=torch.float64)
secont condition:: tensor(3.0617e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1280e-12, dtype=torch.float64)
secont condition:: tensor(2.1280e-12, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0385e-12, dtype=torch.float64)
secont condition:: tensor(2.0385e-12, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.825688123703003
curr_diff: 0 tensor(3.9689e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0182e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8680e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1635e-09, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.9896e-06, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.1355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9476e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8883e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.2942e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.1532e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
deletion rate:: 0.00005
python3 generate_rand_ids 0.00005  MNIST 0
tensor([25355, 15364, 36847])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197767
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.181438
Test Avg. Loss: 0.000017, Accuracy: 0.951600
Train - Epoch 2, Batch: 0, Loss: 0.177361
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.175646
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.176203
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 5, Batch: 0, Loss: 0.176610
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.179460
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.177206
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.174285
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.169470
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.174256
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.178509
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.181024
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.181501
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.181875
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.175302
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 16, Batch: 0, Loss: 0.178308
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 17, Batch: 0, Loss: 0.180626
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 18, Batch: 0, Loss: 0.174663
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.180952
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.553698301315308
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.173847198486328
time_baseline:: 14.218682050704956
curr_diff: 0 tensor(3.7354e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7939e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.0331e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.8312e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3976e-12, dtype=torch.float64)
secont condition:: tensor(6.3976e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.0798e-11, dtype=torch.float64)
secont condition:: tensor(1.0798e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5550e-11, dtype=torch.float64)
secont condition:: tensor(3.5550e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6153e-11, dtype=torch.float64)
secont condition:: tensor(2.6153e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.5906e-11, dtype=torch.float64)
secont condition:: tensor(7.5906e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5760e-11, dtype=torch.float64)
secont condition:: tensor(4.5760e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4271e-11, dtype=torch.float64)
secont condition:: tensor(3.4271e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9250e-11, dtype=torch.float64)
secont condition:: tensor(1.9250e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3659e-11, dtype=torch.float64)
secont condition:: tensor(1.3659e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4638e-11, dtype=torch.float64)
secont condition:: tensor(2.4638e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1498e-11, dtype=torch.float64)
secont condition:: tensor(4.1498e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6696e-11, dtype=torch.float64)
secont condition:: tensor(3.6696e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.2303e-11, dtype=torch.float64)
secont condition:: tensor(7.2303e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4708e-11, dtype=torch.float64)
secont condition:: tensor(4.4708e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9611e-11, dtype=torch.float64)
secont condition:: tensor(2.9611e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1009e-10, dtype=torch.float64)
secont condition:: tensor(1.1009e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4889e-11, dtype=torch.float64)
secont condition:: tensor(1.4889e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.8823e-12, dtype=torch.float64)
curr_secont condition:: tensor(6.0235e-11, dtype=torch.float64)
secont condition:: tensor(6.0235e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0330e-11, dtype=torch.float64)
secont condition:: tensor(3.0330e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8660e-11, dtype=torch.float64)
secont condition:: tensor(2.8660e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5863e-11, dtype=torch.float64)
secont condition:: tensor(1.5863e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.9973e-12, dtype=torch.float64)
secont condition:: tensor(9.9973e-12, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4522e-11, dtype=torch.float64)
secont condition:: tensor(6.4522e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9778e-11, dtype=torch.float64)
secont condition:: tensor(8.9778e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3656e-11, dtype=torch.float64)
secont condition:: tensor(5.3656e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4794e-11, dtype=torch.float64)
secont condition:: tensor(2.4794e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4592e-11, dtype=torch.float64)
secont condition:: tensor(9.4592e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2253e-10, dtype=torch.float64)
secont condition:: tensor(1.2253e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0786e-10, dtype=torch.float64)
secont condition:: tensor(1.0786e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1812e-11, dtype=torch.float64)
secont condition:: tensor(6.1812e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1567e-11, dtype=torch.float64)
secont condition:: tensor(3.1567e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.1361e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3816e-10, dtype=torch.float64)
secont condition:: tensor(1.3816e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4258e-11, dtype=torch.float64)
secont condition:: tensor(7.4258e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1817e-11, dtype=torch.float64)
secont condition:: tensor(1.1817e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.4370e-11, dtype=torch.float64)
secont condition:: tensor(9.4370e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.9365e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2393e-11, dtype=torch.float64)
secont condition:: tensor(2.2393e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7522e-11, dtype=torch.float64)
secont condition:: tensor(6.7522e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7486e-11, dtype=torch.float64)
secont condition:: tensor(3.7486e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5431e-11, dtype=torch.float64)
secont condition:: tensor(5.5431e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1217e-11, dtype=torch.float64)
secont condition:: tensor(6.1217e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.5247e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4083e-10, dtype=torch.float64)
secont condition:: tensor(1.4083e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6276e-11, dtype=torch.float64)
secont condition:: tensor(6.6276e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0727e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.9836e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4602e-11, dtype=torch.float64)
secont condition:: tensor(7.4602e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2362e-10, dtype=torch.float64)
secont condition:: tensor(1.2362e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0916e-10, dtype=torch.float64)
secont condition:: tensor(1.0916e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5073e-10, dtype=torch.float64)
secont condition:: tensor(1.5073e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.412147283554077
curr_diff: 0 tensor(1.5866e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2471e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3940e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6017e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.5928e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7454e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.0580e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5844e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198670
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 1, Batch: 0, Loss: 0.185831
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.179641
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.176089
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.170539
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 5, Batch: 0, Loss: 0.179957
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.173028
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 7, Batch: 0, Loss: 0.177624
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.170160
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 9, Batch: 0, Loss: 0.174234
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.173915
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.179270
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.176334
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.179567
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.179998
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.177711
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 16, Batch: 0, Loss: 0.178068
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 17, Batch: 0, Loss: 0.181555
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.172407
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.176800
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.41787886619568
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.065244913101196
time_baseline:: 14.110519170761108
curr_diff: 0 tensor(4.8338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1755e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1459e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8878e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.9199e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5832e-32, dtype=torch.float64)
secont condition:: tensor(1.5832e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.0448e-11, dtype=torch.float64)
secont condition:: tensor(5.0448e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7423e-11, dtype=torch.float64)
secont condition:: tensor(2.7423e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.5850e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.3893e-10, dtype=torch.float64)
secont condition:: tensor(1.3893e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0367e-10, dtype=torch.float64)
secont condition:: tensor(1.0367e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0979e-11, dtype=torch.float64)
secont condition:: tensor(5.0979e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5130e-11, dtype=torch.float64)
secont condition:: tensor(1.5130e-11, dtype=torch.float64)
curr_secont condition:: tensor(-8.0348e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9500e-10, dtype=torch.float64)
secont condition:: tensor(1.9500e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4994e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2572e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1350e-09, dtype=torch.float64)
secont condition:: tensor(1.1350e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8296e-11, dtype=torch.float64)
secont condition:: tensor(3.8296e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6019e-11, dtype=torch.float64)
secont condition:: tensor(1.6019e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8356e-11, dtype=torch.float64)
secont condition:: tensor(3.8356e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8563e-10, dtype=torch.float64)
secont condition:: tensor(1.8563e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4872e-11, dtype=torch.float64)
secont condition:: tensor(7.4872e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0593e-11, dtype=torch.float64)
secont condition:: tensor(3.0593e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5315e-10, dtype=torch.float64)
secont condition:: tensor(6.5315e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7848e-10, dtype=torch.float64)
secont condition:: tensor(2.7848e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0477e-11, dtype=torch.float64)
secont condition:: tensor(4.0477e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3837e-11, dtype=torch.float64)
secont condition:: tensor(5.3837e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4903e-10, dtype=torch.float64)
secont condition:: tensor(8.4903e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9183e-11, dtype=torch.float64)
secont condition:: tensor(4.9183e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.3824e-11, dtype=torch.float64)
secont condition:: tensor(7.3824e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7815e-11, dtype=torch.float64)
secont condition:: tensor(3.7815e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3135e-11, dtype=torch.float64)
secont condition:: tensor(3.3135e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.9145e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.2490e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5828e-11, dtype=torch.float64)
secont condition:: tensor(8.5828e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0964e-10, dtype=torch.float64)
secont condition:: tensor(1.0964e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1549e-10, dtype=torch.float64)
secont condition:: tensor(1.1549e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7078e-11, dtype=torch.float64)
secont condition:: tensor(6.7078e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.2442e-11, dtype=torch.float64)
secont condition:: tensor(7.2442e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2195e-11, dtype=torch.float64)
secont condition:: tensor(6.2195e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9856e-11, dtype=torch.float64)
secont condition:: tensor(7.9856e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3543e-11, dtype=torch.float64)
secont condition:: tensor(9.3543e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.0641e-11, dtype=torch.float64)
secont condition:: tensor(8.0641e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.7606e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2364e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6797e-09, dtype=torch.float64)
secont condition:: tensor(4.6797e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5836e-10, dtype=torch.float64)
secont condition:: tensor(1.5836e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9816e-11, dtype=torch.float64)
secont condition:: tensor(4.9816e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2444e-10, dtype=torch.float64)
secont condition:: tensor(4.2444e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4547e-10, dtype=torch.float64)
secont condition:: tensor(1.4547e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3318e-10, dtype=torch.float64)
secont condition:: tensor(1.3318e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.8259e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5288e-10, dtype=torch.float64)
secont condition:: tensor(1.5288e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7504e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9837e-10, dtype=torch.float64)
secont condition:: tensor(1.9837e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2554e-10, dtype=torch.float64)
secont condition:: tensor(1.2554e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.6361e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.6569e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.0874128341674805
curr_diff: 0 tensor(1.4971e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8059e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.2166e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.5054e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.7276e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0409e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1276e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7446e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.8141e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.200436
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.178763
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.173600
Test Avg. Loss: 0.000017, Accuracy: 0.952200
Train - Epoch 3, Batch: 0, Loss: 0.178492
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.185347
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 5, Batch: 0, Loss: 0.181580
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 6, Batch: 0, Loss: 0.170908
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 7, Batch: 0, Loss: 0.182600
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.176069
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.178701
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.170859
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.175420
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.174758
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.181871
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.180335
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.178642
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.177524
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.180310
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.179605
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.176886
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.32640027999878
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.05620002746582
time_baseline:: 14.103628635406494
curr_diff: 0 tensor(7.2676e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7532e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.9574e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8086e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.3669e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3762e-32, dtype=torch.float64)
secont condition:: tensor(1.3762e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9246e-12, dtype=torch.float64)
secont condition:: tensor(3.9246e-12, dtype=torch.float64)
curr_secont condition:: tensor(3.8203e-11, dtype=torch.float64)
secont condition:: tensor(3.8203e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1764e-11, dtype=torch.float64)
secont condition:: tensor(4.1764e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.7514e-11, dtype=torch.float64)
secont condition:: tensor(5.7514e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4700e-11, dtype=torch.float64)
secont condition:: tensor(3.4700e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6071e-11, dtype=torch.float64)
secont condition:: tensor(3.6071e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0035e-11, dtype=torch.float64)
secont condition:: tensor(2.0035e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3410e-11, dtype=torch.float64)
secont condition:: tensor(1.3410e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6831e-11, dtype=torch.float64)
secont condition:: tensor(1.6831e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3623e-11, dtype=torch.float64)
secont condition:: tensor(1.3623e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0078e-11, dtype=torch.float64)
secont condition:: tensor(5.0078e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.3657e-12, dtype=torch.float64)
secont condition:: tensor(4.3657e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.3627e-11, dtype=torch.float64)
secont condition:: tensor(2.3627e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3206e-10, dtype=torch.float64)
secont condition:: tensor(1.3206e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0820e-11, dtype=torch.float64)
secont condition:: tensor(5.0820e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.1143e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.4206e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7728e-11, dtype=torch.float64)
secont condition:: tensor(6.7728e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0599e-11, dtype=torch.float64)
secont condition:: tensor(3.0599e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8082e-11, dtype=torch.float64)
secont condition:: tensor(6.8082e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4329e-11, dtype=torch.float64)
secont condition:: tensor(5.4329e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5606e-11, dtype=torch.float64)
secont condition:: tensor(8.5606e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9527e-11, dtype=torch.float64)
secont condition:: tensor(9.9527e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2806e-10, dtype=torch.float64)
secont condition:: tensor(1.2806e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1851e-11, dtype=torch.float64)
secont condition:: tensor(7.1851e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8332e-11, dtype=torch.float64)
secont condition:: tensor(2.8332e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1818e-11, dtype=torch.float64)
secont condition:: tensor(4.1818e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1846e-10, dtype=torch.float64)
secont condition:: tensor(1.1846e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3502e-11, dtype=torch.float64)
secont condition:: tensor(3.3502e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7738e-10, dtype=torch.float64)
secont condition:: tensor(3.7738e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.3907e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0317e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3187e-09, dtype=torch.float64)
secont condition:: tensor(1.3187e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3354e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4404e-10, dtype=torch.float64)
secont condition:: tensor(1.4404e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.3562e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9892e-10, dtype=torch.float64)
secont condition:: tensor(1.9892e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0619e-09, dtype=torch.float64)
secont condition:: tensor(1.0619e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.7088e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.5701e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.3133e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0117e-11, dtype=torch.float64)
secont condition:: tensor(8.0117e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2702e-10, dtype=torch.float64)
secont condition:: tensor(6.2702e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1422e-10, dtype=torch.float64)
secont condition:: tensor(3.1422e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3731e-11, dtype=torch.float64)
secont condition:: tensor(9.3731e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4059e-10, dtype=torch.float64)
secont condition:: tensor(3.4059e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.7157e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0624e-10, dtype=torch.float64)
secont condition:: tensor(5.0624e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8187e-09, dtype=torch.float64)
secont condition:: tensor(3.8187e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1681e-10, dtype=torch.float64)
secont condition:: tensor(6.1681e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6656e-10, dtype=torch.float64)
secont condition:: tensor(6.6656e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1751e-10, dtype=torch.float64)
secont condition:: tensor(7.1751e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1714e-10, dtype=torch.float64)
secont condition:: tensor(8.1714e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.284560203552246
curr_diff: 0 tensor(1.8745e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3784e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7336e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9293e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.8904e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.7828e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4395e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0102e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0404e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.8797e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.205818
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.174265
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.180739
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.174820
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 4, Batch: 0, Loss: 0.178656
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.174390
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.175551
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.176073
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 8, Batch: 0, Loss: 0.183400
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 9, Batch: 0, Loss: 0.173926
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.175900
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 11, Batch: 0, Loss: 0.181934
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.173007
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.179572
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.177202
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 15, Batch: 0, Loss: 0.174187
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.188513
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.180855
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.184469
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.177455
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.713168382644653
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.064642906188965
time_baseline:: 14.110190153121948
curr_diff: 0 tensor(4.3861e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6964e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.4249e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9067e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4745e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1164e-32, dtype=torch.float64)
secont condition:: tensor(1.1164e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2797e-12, dtype=torch.float64)
secont condition:: tensor(3.2797e-12, dtype=torch.float64)
curr_secont condition:: tensor(3.6934e-11, dtype=torch.float64)
secont condition:: tensor(3.6934e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2201e-11, dtype=torch.float64)
secont condition:: tensor(2.2201e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3061e-11, dtype=torch.float64)
secont condition:: tensor(1.3061e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9778e-12, dtype=torch.float64)
secont condition:: tensor(8.9778e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.2971e-11, dtype=torch.float64)
secont condition:: tensor(1.2971e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9027e-11, dtype=torch.float64)
secont condition:: tensor(5.9027e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0576e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6847e-10, dtype=torch.float64)
secont condition:: tensor(5.6847e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6588e-11, dtype=torch.float64)
secont condition:: tensor(6.6588e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6305e-10, dtype=torch.float64)
secont condition:: tensor(2.6305e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8363e-10, dtype=torch.float64)
secont condition:: tensor(2.8363e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4206e-11, dtype=torch.float64)
secont condition:: tensor(6.4206e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7738e-11, dtype=torch.float64)
secont condition:: tensor(4.7738e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8918e-11, dtype=torch.float64)
secont condition:: tensor(5.8918e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8533e-10, dtype=torch.float64)
secont condition:: tensor(3.8533e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8720e-10, dtype=torch.float64)
secont condition:: tensor(5.8720e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1542e-11, dtype=torch.float64)
secont condition:: tensor(6.1542e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9770e-11, dtype=torch.float64)
secont condition:: tensor(6.9770e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9747e-11, dtype=torch.float64)
secont condition:: tensor(2.9747e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6979e-11, dtype=torch.float64)
secont condition:: tensor(5.6979e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1708e-11, dtype=torch.float64)
secont condition:: tensor(2.1708e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5709e-11, dtype=torch.float64)
secont condition:: tensor(8.5709e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5230e-11, dtype=torch.float64)
secont condition:: tensor(8.5230e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7349e-11, dtype=torch.float64)
secont condition:: tensor(6.7349e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7852e-11, dtype=torch.float64)
secont condition:: tensor(3.7852e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6725e-11, dtype=torch.float64)
secont condition:: tensor(7.6725e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5576e-10, dtype=torch.float64)
secont condition:: tensor(1.5576e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1352e-10, dtype=torch.float64)
secont condition:: tensor(1.1352e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2545e-11, dtype=torch.float64)
secont condition:: tensor(1.2545e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3686e-10, dtype=torch.float64)
secont condition:: tensor(1.3686e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0841e-11, dtype=torch.float64)
secont condition:: tensor(5.0841e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1933e-11, dtype=torch.float64)
secont condition:: tensor(9.1933e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0638e-10, dtype=torch.float64)
secont condition:: tensor(1.0638e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.2371e-12, dtype=torch.float64)
curr_secont condition:: tensor(6.6962e-11, dtype=torch.float64)
secont condition:: tensor(6.6962e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.4935e-11, dtype=torch.float64)
secont condition:: tensor(8.4935e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3337e-11, dtype=torch.float64)
secont condition:: tensor(5.3337e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3347e-10, dtype=torch.float64)
secont condition:: tensor(1.3347e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3933e-11, dtype=torch.float64)
secont condition:: tensor(7.3933e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2496e-11, dtype=torch.float64)
secont condition:: tensor(7.2496e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0746e-10, dtype=torch.float64)
secont condition:: tensor(1.0746e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2398e-11, dtype=torch.float64)
secont condition:: tensor(7.2398e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6931e-10, dtype=torch.float64)
secont condition:: tensor(4.6931e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8030e-11, dtype=torch.float64)
secont condition:: tensor(9.8030e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1632e-11, dtype=torch.float64)
secont condition:: tensor(8.1632e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0297e-10, dtype=torch.float64)
secont condition:: tensor(1.0297e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2155e-10, dtype=torch.float64)
secont condition:: tensor(6.2155e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2204e-11, dtype=torch.float64)
secont condition:: tensor(8.2204e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.032379865646362
curr_diff: 0 tensor(1.1334e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2150e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3553e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.1605e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.1417e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.3487e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7051e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.5073e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8799e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4395e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.201908
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.179166
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.183618
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 3, Batch: 0, Loss: 0.175291
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.173922
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 5, Batch: 0, Loss: 0.174020
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.181314
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.183244
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.179488
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.177858
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.176094
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 11, Batch: 0, Loss: 0.175563
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.175818
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.178684
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.177391
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.173205
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 16, Batch: 0, Loss: 0.179370
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 17, Batch: 0, Loss: 0.178416
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.183756
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.179130
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.575745582580566
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 13.94884204864502
time_baseline:: 13.993706464767456
curr_diff: 0 tensor(3.2906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0209e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.8416e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6663e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3889e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 3
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2216e-11, dtype=torch.float64)
secont condition:: tensor(2.2216e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4118e-11, dtype=torch.float64)
secont condition:: tensor(1.4118e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9365e-11, dtype=torch.float64)
secont condition:: tensor(3.9365e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3567e-11, dtype=torch.float64)
secont condition:: tensor(2.3567e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5249e-11, dtype=torch.float64)
secont condition:: tensor(1.5249e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0407e-11, dtype=torch.float64)
secont condition:: tensor(1.0407e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5971e-11, dtype=torch.float64)
secont condition:: tensor(4.5971e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0768e-11, dtype=torch.float64)
secont condition:: tensor(3.0768e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3271e-11, dtype=torch.float64)
secont condition:: tensor(2.3271e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4463e-11, dtype=torch.float64)
secont condition:: tensor(1.4463e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2380e-11, dtype=torch.float64)
secont condition:: tensor(2.2380e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7391e-11, dtype=torch.float64)
secont condition:: tensor(4.7391e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7175e-10, dtype=torch.float64)
secont condition:: tensor(1.7175e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0272e-11, dtype=torch.float64)
secont condition:: tensor(4.0272e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8038e-11, dtype=torch.float64)
secont condition:: tensor(4.8038e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9267e-11, dtype=torch.float64)
secont condition:: tensor(1.9267e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0821e-11, dtype=torch.float64)
secont condition:: tensor(1.0821e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4768e-11, dtype=torch.float64)
secont condition:: tensor(4.4768e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5552e-11, dtype=torch.float64)
secont condition:: tensor(2.5552e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0857e-11, dtype=torch.float64)
curr_secont condition:: tensor(-9.2037e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0344e-11, dtype=torch.float64)
secont condition:: tensor(4.0344e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6524e-11, dtype=torch.float64)
secont condition:: tensor(2.6524e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5800e-11, dtype=torch.float64)
secont condition:: tensor(5.5800e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0622e-11, dtype=torch.float64)
secont condition:: tensor(5.0622e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5804e-11, dtype=torch.float64)
secont condition:: tensor(4.5804e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4621e-11, dtype=torch.float64)
secont condition:: tensor(2.4621e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1298e-11, dtype=torch.float64)
secont condition:: tensor(6.1298e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5014e-11, dtype=torch.float64)
secont condition:: tensor(4.5014e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.3326e-11, dtype=torch.float64)
secont condition:: tensor(8.3326e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6682e-11, dtype=torch.float64)
secont condition:: tensor(4.6682e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3585e-11, dtype=torch.float64)
secont condition:: tensor(6.3585e-11, dtype=torch.float64)
curr_secont condition:: tensor(-9.7074e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.4629e-10, dtype=torch.float64)
secont condition:: tensor(2.4629e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0380e-10, dtype=torch.float64)
secont condition:: tensor(1.0380e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9299e-11, dtype=torch.float64)
secont condition:: tensor(1.9299e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3280e-11, dtype=torch.float64)
secont condition:: tensor(6.3280e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0552e-10, dtype=torch.float64)
secont condition:: tensor(1.0552e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9184e-10, dtype=torch.float64)
secont condition:: tensor(1.9184e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2884e-11, dtype=torch.float64)
secont condition:: tensor(3.2884e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3202e-11, dtype=torch.float64)
secont condition:: tensor(8.3202e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7162e-11, dtype=torch.float64)
secont condition:: tensor(7.7162e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.2848e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1455e-11, dtype=torch.float64)
secont condition:: tensor(5.1455e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2628e-11, dtype=torch.float64)
secont condition:: tensor(5.2628e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1517e-11, dtype=torch.float64)
secont condition:: tensor(8.1517e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2580e-11, dtype=torch.float64)
secont condition:: tensor(9.2580e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6105e-10, dtype=torch.float64)
secont condition:: tensor(1.6105e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.092596530914307
curr_diff: 0 tensor(1.4421e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2663e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.9111e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9609e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.4485e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1295e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0555e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.9715e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4794e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2360e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
deletion rate:: 0.0001
python3 generate_rand_ids 0.0001  MNIST 0
tensor([ 1425, 44907, 15364, 25355,  9231, 36847])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.194688
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.181545
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.177118
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.178851
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.175555
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 5, Batch: 0, Loss: 0.173511
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.176615
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.178893
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.177590
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.178514
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.174686
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.177997
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.182007
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.176643
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.179523
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.179032
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.179617
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.185931
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.176360
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.176439
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.558287143707275
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.168588399887085
time_baseline:: 14.21394157409668
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.4227e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7438e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8138e-12, dtype=torch.float64)
secont condition:: tensor(6.8138e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.2457e-12, dtype=torch.float64)
secont condition:: tensor(4.2457e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.3761e-11, dtype=torch.float64)
secont condition:: tensor(4.3761e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4156e-09, dtype=torch.float64)
secont condition:: tensor(1.4156e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0840e-09, dtype=torch.float64)
secont condition:: tensor(1.0840e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6022e-10, dtype=torch.float64)
secont condition:: tensor(6.6022e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1149e-10, dtype=torch.float64)
secont condition:: tensor(5.1149e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0921e-09, dtype=torch.float64)
secont condition:: tensor(3.0921e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2574e-09, dtype=torch.float64)
secont condition:: tensor(2.2574e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0922e-09, dtype=torch.float64)
secont condition:: tensor(4.0922e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0243e-09, dtype=torch.float64)
secont condition:: tensor(3.0243e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7211e-09, dtype=torch.float64)
secont condition:: tensor(2.7211e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8656e-09, dtype=torch.float64)
secont condition:: tensor(1.8656e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6758e-09, dtype=torch.float64)
secont condition:: tensor(1.6758e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0663e-09, dtype=torch.float64)
secont condition:: tensor(4.0663e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1961e-09, dtype=torch.float64)
secont condition:: tensor(4.1961e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0199e-09, dtype=torch.float64)
secont condition:: tensor(5.0199e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8688e-09, dtype=torch.float64)
secont condition:: tensor(3.8688e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0887e-09, dtype=torch.float64)
secont condition:: tensor(6.0887e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7722e-09, dtype=torch.float64)
secont condition:: tensor(3.7722e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0827e-09, dtype=torch.float64)
secont condition:: tensor(3.0827e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3177e-09, dtype=torch.float64)
secont condition:: tensor(4.3177e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1746e-09, dtype=torch.float64)
secont condition:: tensor(4.1746e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4055e-09, dtype=torch.float64)
secont condition:: tensor(4.4055e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2312e-09, dtype=torch.float64)
secont condition:: tensor(4.2312e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9634e-09, dtype=torch.float64)
secont condition:: tensor(1.9634e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7484e-09, dtype=torch.float64)
secont condition:: tensor(2.7484e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1855e-09, dtype=torch.float64)
secont condition:: tensor(6.1855e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4830e-10, dtype=torch.float64)
secont condition:: tensor(3.4830e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2374e-09, dtype=torch.float64)
secont condition:: tensor(3.2374e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7354e-09, dtype=torch.float64)
secont condition:: tensor(2.7354e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5599e-09, dtype=torch.float64)
secont condition:: tensor(1.5599e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0973e-09, dtype=torch.float64)
secont condition:: tensor(5.0973e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9991e-09, dtype=torch.float64)
secont condition:: tensor(7.9991e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5868e-09, dtype=torch.float64)
secont condition:: tensor(7.5868e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5505e-09, dtype=torch.float64)
secont condition:: tensor(8.5505e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3719e-09, dtype=torch.float64)
secont condition:: tensor(6.3719e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7395e-09, dtype=torch.float64)
secont condition:: tensor(5.7395e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9064e-09, dtype=torch.float64)
secont condition:: tensor(5.9064e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5013e-09, dtype=torch.float64)
secont condition:: tensor(8.5013e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1679e-08, dtype=torch.float64)
secont condition:: tensor(1.1679e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5622e-09, dtype=torch.float64)
secont condition:: tensor(5.5622e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3511e-09, dtype=torch.float64)
secont condition:: tensor(9.3511e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7072e-09, dtype=torch.float64)
secont condition:: tensor(6.7072e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0145e-08, dtype=torch.float64)
secont condition:: tensor(1.0145e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4116e-09, dtype=torch.float64)
secont condition:: tensor(7.4116e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7847e-09, dtype=torch.float64)
secont condition:: tensor(5.7847e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5050e-09, dtype=torch.float64)
secont condition:: tensor(9.5050e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3706e-09, dtype=torch.float64)
secont condition:: tensor(8.3706e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9769105911254883
curr_diff: 0 tensor(4.5878e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2414e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.8489e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8100e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6340e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5421e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6314e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3085e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197421
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.180255
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.174572
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.182221
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.179233
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.173772
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.182565
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.177283
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 8, Batch: 0, Loss: 0.177601
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.177092
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.177769
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.175924
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.178055
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.178331
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.172919
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.180502
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.176638
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.185258
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.181951
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.179501
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.56219506263733
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.308630228042603
time_baseline:: 14.35504674911499
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1483e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.7502e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7997e-10, dtype=torch.float64)
secont condition:: tensor(7.7997e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.9914e-10, dtype=torch.float64)
secont condition:: tensor(8.9914e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0657e-10, dtype=torch.float64)
secont condition:: tensor(3.0657e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2877e-10, dtype=torch.float64)
secont condition:: tensor(5.2877e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9318e-09, dtype=torch.float64)
secont condition:: tensor(2.9318e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2389e-09, dtype=torch.float64)
secont condition:: tensor(1.2389e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7197e-10, dtype=torch.float64)
secont condition:: tensor(7.7197e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1317e-10, dtype=torch.float64)
secont condition:: tensor(4.1317e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7483e-10, dtype=torch.float64)
secont condition:: tensor(5.7483e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3520e-10, dtype=torch.float64)
secont condition:: tensor(6.3520e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0830e-09, dtype=torch.float64)
secont condition:: tensor(2.0830e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8289e-09, dtype=torch.float64)
secont condition:: tensor(1.8289e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5051e-09, dtype=torch.float64)
secont condition:: tensor(1.5051e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7245e-09, dtype=torch.float64)
secont condition:: tensor(2.7245e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9548e-09, dtype=torch.float64)
secont condition:: tensor(1.9548e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2597e-09, dtype=torch.float64)
secont condition:: tensor(1.2597e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1270e-09, dtype=torch.float64)
secont condition:: tensor(3.1270e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9633e-09, dtype=torch.float64)
secont condition:: tensor(2.9633e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0583e-09, dtype=torch.float64)
secont condition:: tensor(2.0583e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2779e-09, dtype=torch.float64)
secont condition:: tensor(1.2779e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3751e-09, dtype=torch.float64)
secont condition:: tensor(1.3751e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9547e-10, dtype=torch.float64)
secont condition:: tensor(8.9547e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4305e-09, dtype=torch.float64)
secont condition:: tensor(1.4305e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7069e-09, dtype=torch.float64)
secont condition:: tensor(2.7069e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7984e-09, dtype=torch.float64)
secont condition:: tensor(2.7984e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8404e-09, dtype=torch.float64)
secont condition:: tensor(5.8404e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6280e-10, dtype=torch.float64)
secont condition:: tensor(3.6280e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8654e-09, dtype=torch.float64)
secont condition:: tensor(1.8654e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4770e-09, dtype=torch.float64)
secont condition:: tensor(5.4770e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2720e-09, dtype=torch.float64)
secont condition:: tensor(5.2720e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6888e-09, dtype=torch.float64)
secont condition:: tensor(3.6888e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1985e-09, dtype=torch.float64)
secont condition:: tensor(2.1985e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7463e-10, dtype=torch.float64)
secont condition:: tensor(4.7463e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8672e-09, dtype=torch.float64)
secont condition:: tensor(4.8672e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2855e-09, dtype=torch.float64)
secont condition:: tensor(5.2855e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5289e-10, dtype=torch.float64)
secont condition:: tensor(8.5289e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3537e-09, dtype=torch.float64)
secont condition:: tensor(5.3537e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9403e-09, dtype=torch.float64)
secont condition:: tensor(5.9403e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2569e-09, dtype=torch.float64)
secont condition:: tensor(5.2569e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3561e-09, dtype=torch.float64)
secont condition:: tensor(7.3561e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2421e-09, dtype=torch.float64)
secont condition:: tensor(4.2421e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7726e-09, dtype=torch.float64)
secont condition:: tensor(2.7726e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1997e-09, dtype=torch.float64)
secont condition:: tensor(5.1997e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3696e-09, dtype=torch.float64)
secont condition:: tensor(7.3696e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8525e-09, dtype=torch.float64)
secont condition:: tensor(6.8525e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1404e-09, dtype=torch.float64)
secont condition:: tensor(8.1404e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6969e-09, dtype=torch.float64)
secont condition:: tensor(3.6969e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5814e-09, dtype=torch.float64)
secont condition:: tensor(7.5814e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4805e-09, dtype=torch.float64)
secont condition:: tensor(8.4805e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.001843452453613
curr_diff: 0 tensor(4.9785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9846e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4542e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2830e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.0156e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2416e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.9264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3736e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198272
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.186205
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.179976
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.181384
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.184070
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.181862
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.172559
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 7, Batch: 0, Loss: 0.181256
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 8, Batch: 0, Loss: 0.176470
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 9, Batch: 0, Loss: 0.174889
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.168327
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.176544
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 12, Batch: 0, Loss: 0.177832
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.188242
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.182279
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.175644
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 16, Batch: 0, Loss: 0.177962
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.178727
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.179872
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.178629
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.44363570213318
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.32593584060669
time_baseline:: 14.3730628490448
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1955e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.7426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.1122e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1049e-10, dtype=torch.float64)
secont condition:: tensor(1.1049e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8470e-10, dtype=torch.float64)
secont condition:: tensor(5.8470e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9950e-10, dtype=torch.float64)
secont condition:: tensor(5.9950e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3400e-10, dtype=torch.float64)
secont condition:: tensor(4.3400e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2162e-09, dtype=torch.float64)
secont condition:: tensor(1.2162e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5244e-09, dtype=torch.float64)
secont condition:: tensor(1.5244e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1298e-10, dtype=torch.float64)
secont condition:: tensor(7.1298e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0349e-09, dtype=torch.float64)
secont condition:: tensor(1.0349e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8618e-09, dtype=torch.float64)
secont condition:: tensor(1.8618e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6966e-09, dtype=torch.float64)
secont condition:: tensor(1.6966e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6196e-09, dtype=torch.float64)
secont condition:: tensor(1.6196e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1386e-09, dtype=torch.float64)
secont condition:: tensor(1.1386e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8356e-09, dtype=torch.float64)
secont condition:: tensor(1.8356e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5289e-10, dtype=torch.float64)
secont condition:: tensor(8.5289e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6302e-09, dtype=torch.float64)
secont condition:: tensor(1.6302e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3801e-09, dtype=torch.float64)
secont condition:: tensor(2.3801e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2171e-09, dtype=torch.float64)
secont condition:: tensor(2.2171e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9663e-09, dtype=torch.float64)
secont condition:: tensor(2.9663e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4934e-09, dtype=torch.float64)
secont condition:: tensor(2.4934e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6430e-09, dtype=torch.float64)
secont condition:: tensor(2.6430e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5123e-09, dtype=torch.float64)
secont condition:: tensor(1.5123e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4046e-09, dtype=torch.float64)
secont condition:: tensor(2.4046e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4278e-09, dtype=torch.float64)
secont condition:: tensor(1.4278e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9383e-09, dtype=torch.float64)
secont condition:: tensor(3.9383e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6653e-09, dtype=torch.float64)
secont condition:: tensor(3.6653e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3913e-09, dtype=torch.float64)
secont condition:: tensor(5.3913e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3672e-09, dtype=torch.float64)
secont condition:: tensor(4.3672e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2504e-09, dtype=torch.float64)
secont condition:: tensor(3.2504e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3389e-09, dtype=torch.float64)
secont condition:: tensor(2.3389e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6748e-09, dtype=torch.float64)
secont condition:: tensor(5.6748e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6545e-09, dtype=torch.float64)
secont condition:: tensor(4.6545e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2069e-09, dtype=torch.float64)
secont condition:: tensor(3.2069e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3565e-09, dtype=torch.float64)
secont condition:: tensor(1.3565e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7385e-09, dtype=torch.float64)
secont condition:: tensor(4.7385e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6902e-09, dtype=torch.float64)
secont condition:: tensor(4.6902e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4356e-09, dtype=torch.float64)
secont condition:: tensor(5.4356e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8427e-09, dtype=torch.float64)
secont condition:: tensor(6.8427e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3879e-09, dtype=torch.float64)
secont condition:: tensor(5.3879e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8372e-09, dtype=torch.float64)
secont condition:: tensor(4.8372e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1593e-09, dtype=torch.float64)
secont condition:: tensor(9.1593e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6330e-09, dtype=torch.float64)
secont condition:: tensor(7.6330e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3177e-09, dtype=torch.float64)
secont condition:: tensor(1.3177e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7567e-09, dtype=torch.float64)
secont condition:: tensor(5.7567e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7225e-09, dtype=torch.float64)
secont condition:: tensor(6.7225e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3019e-09, dtype=torch.float64)
secont condition:: tensor(6.3019e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0366e-09, dtype=torch.float64)
secont condition:: tensor(8.0366e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6616e-09, dtype=torch.float64)
secont condition:: tensor(4.6616e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3833e-09, dtype=torch.float64)
secont condition:: tensor(9.3833e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2683e-09, dtype=torch.float64)
secont condition:: tensor(5.2683e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.064310073852539
curr_diff: 0 tensor(4.5688e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8615e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4967e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1518e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6171e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1702e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.9406e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7808e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.192364
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.183012
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.183987
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.181952
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.180378
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.171088
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.173692
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 7, Batch: 0, Loss: 0.178079
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.174188
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.180562
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.175729
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.178707
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.180221
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.179137
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.181971
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.177540
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.180437
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.172139
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.175684
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.179839
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.47774028778076
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.176806926727295
time_baseline:: 14.22235894203186
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0881e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6767e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3900e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1534e-12, dtype=torch.float64)
secont condition:: tensor(5.1534e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.5772e-10, dtype=torch.float64)
secont condition:: tensor(7.5772e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5865e-10, dtype=torch.float64)
secont condition:: tensor(4.5865e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7945e-10, dtype=torch.float64)
secont condition:: tensor(4.7945e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7118e-10, dtype=torch.float64)
secont condition:: tensor(4.7118e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2723e-10, dtype=torch.float64)
secont condition:: tensor(3.2723e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4214e-10, dtype=torch.float64)
secont condition:: tensor(2.4214e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8568e-09, dtype=torch.float64)
secont condition:: tensor(1.8568e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0323e-09, dtype=torch.float64)
secont condition:: tensor(3.0323e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7893e-09, dtype=torch.float64)
secont condition:: tensor(2.7893e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1751e-09, dtype=torch.float64)
secont condition:: tensor(2.1751e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2054e-09, dtype=torch.float64)
secont condition:: tensor(1.2054e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5639e-09, dtype=torch.float64)
secont condition:: tensor(1.5639e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6775e-09, dtype=torch.float64)
secont condition:: tensor(1.6775e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4391e-09, dtype=torch.float64)
secont condition:: tensor(2.4391e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6879e-09, dtype=torch.float64)
secont condition:: tensor(2.6879e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7998e-09, dtype=torch.float64)
secont condition:: tensor(2.7998e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1394e-09, dtype=torch.float64)
secont condition:: tensor(2.1394e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5102e-09, dtype=torch.float64)
secont condition:: tensor(3.5102e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2987e-09, dtype=torch.float64)
secont condition:: tensor(4.2987e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4376e-09, dtype=torch.float64)
secont condition:: tensor(5.4376e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0062e-09, dtype=torch.float64)
secont condition:: tensor(4.0062e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5885e-09, dtype=torch.float64)
secont condition:: tensor(2.5885e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5687e-09, dtype=torch.float64)
secont condition:: tensor(2.5687e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3697e-09, dtype=torch.float64)
secont condition:: tensor(3.3697e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6944e-09, dtype=torch.float64)
secont condition:: tensor(2.6944e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7195e-09, dtype=torch.float64)
secont condition:: tensor(3.7195e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1906e-09, dtype=torch.float64)
secont condition:: tensor(4.1906e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4152e-09, dtype=torch.float64)
secont condition:: tensor(1.4152e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0871e-09, dtype=torch.float64)
secont condition:: tensor(2.0871e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1220e-09, dtype=torch.float64)
secont condition:: tensor(4.1220e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5535e-09, dtype=torch.float64)
secont condition:: tensor(3.5535e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8577e-09, dtype=torch.float64)
secont condition:: tensor(6.8577e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0870e-09, dtype=torch.float64)
secont condition:: tensor(5.0870e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4934e-09, dtype=torch.float64)
secont condition:: tensor(3.4934e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9838e-09, dtype=torch.float64)
secont condition:: tensor(3.9838e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9292e-09, dtype=torch.float64)
secont condition:: tensor(6.9292e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7802e-09, dtype=torch.float64)
secont condition:: tensor(3.7802e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9812e-09, dtype=torch.float64)
secont condition:: tensor(7.9812e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0722e-09, dtype=torch.float64)
secont condition:: tensor(4.0722e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1380e-09, dtype=torch.float64)
secont condition:: tensor(7.1380e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4457e-09, dtype=torch.float64)
secont condition:: tensor(4.4457e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1995e-09, dtype=torch.float64)
secont condition:: tensor(6.1995e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4393e-09, dtype=torch.float64)
secont condition:: tensor(6.4393e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4545e-10, dtype=torch.float64)
secont condition:: tensor(3.4545e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1515e-09, dtype=torch.float64)
secont condition:: tensor(6.1515e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4137e-09, dtype=torch.float64)
secont condition:: tensor(4.4137e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8434e-09, dtype=torch.float64)
secont condition:: tensor(4.8434e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0359e-08, dtype=torch.float64)
secont condition:: tensor(1.0359e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.019214153289795
curr_diff: 0 tensor(4.1032e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4370e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.4301e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9752e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.1416e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.8660e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8648e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198672
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 1, Batch: 0, Loss: 0.183901
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.171178
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.170934
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.178529
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 5, Batch: 0, Loss: 0.176352
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.175520
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.176464
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.178431
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.176016
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.178175
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 11, Batch: 0, Loss: 0.177795
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.179386
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.177125
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.180588
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.175022
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.177641
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.176605
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.179946
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.179941
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.28119397163391
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 13.950071811676025
time_baseline:: 14.004629850387573
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.9607e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7044e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 6
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0683e-10, dtype=torch.float64)
secont condition:: tensor(7.0683e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2389e-10, dtype=torch.float64)
secont condition:: tensor(5.2389e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8905e-10, dtype=torch.float64)
secont condition:: tensor(3.8905e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1702e-10, dtype=torch.float64)
secont condition:: tensor(3.1702e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8570e-10, dtype=torch.float64)
secont condition:: tensor(2.8570e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0961e-10, dtype=torch.float64)
secont condition:: tensor(3.0961e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0447e-10, dtype=torch.float64)
secont condition:: tensor(2.0447e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8401e-09, dtype=torch.float64)
secont condition:: tensor(1.8401e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7946e-09, dtype=torch.float64)
secont condition:: tensor(3.7946e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3436e-09, dtype=torch.float64)
secont condition:: tensor(3.3436e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1187e-09, dtype=torch.float64)
secont condition:: tensor(2.1187e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7291e-09, dtype=torch.float64)
secont condition:: tensor(1.7291e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6636e-09, dtype=torch.float64)
secont condition:: tensor(1.6636e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7020e-10, dtype=torch.float64)
secont condition:: tensor(5.7020e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2770e-09, dtype=torch.float64)
secont condition:: tensor(2.2770e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6805e-09, dtype=torch.float64)
secont condition:: tensor(1.6805e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6935e-09, dtype=torch.float64)
secont condition:: tensor(1.6935e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6521e-09, dtype=torch.float64)
secont condition:: tensor(1.6521e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7021e-09, dtype=torch.float64)
secont condition:: tensor(2.7021e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9503e-09, dtype=torch.float64)
secont condition:: tensor(2.9503e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9564e-09, dtype=torch.float64)
secont condition:: tensor(1.9564e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2923e-09, dtype=torch.float64)
secont condition:: tensor(2.2923e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5218e-09, dtype=torch.float64)
secont condition:: tensor(3.5218e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5736e-09, dtype=torch.float64)
secont condition:: tensor(2.5736e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2566e-09, dtype=torch.float64)
secont condition:: tensor(2.2566e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5918e-09, dtype=torch.float64)
secont condition:: tensor(2.5918e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3480e-09, dtype=torch.float64)
secont condition:: tensor(4.3480e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6012e-09, dtype=torch.float64)
secont condition:: tensor(2.6012e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6388e-09, dtype=torch.float64)
secont condition:: tensor(5.6388e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2937e-09, dtype=torch.float64)
secont condition:: tensor(5.2937e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8242e-09, dtype=torch.float64)
secont condition:: tensor(3.8242e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3151e-09, dtype=torch.float64)
secont condition:: tensor(3.3151e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2293e-09, dtype=torch.float64)
secont condition:: tensor(4.2293e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5662e-09, dtype=torch.float64)
secont condition:: tensor(5.5662e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8054e-09, dtype=torch.float64)
secont condition:: tensor(3.8054e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4949e-09, dtype=torch.float64)
secont condition:: tensor(4.4949e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0882e-09, dtype=torch.float64)
secont condition:: tensor(3.0882e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2669e-09, dtype=torch.float64)
secont condition:: tensor(3.2669e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5492e-09, dtype=torch.float64)
secont condition:: tensor(4.5492e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5769e-09, dtype=torch.float64)
secont condition:: tensor(4.5769e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4874e-09, dtype=torch.float64)
secont condition:: tensor(5.4874e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2181e-09, dtype=torch.float64)
secont condition:: tensor(7.2181e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2245e-09, dtype=torch.float64)
secont condition:: tensor(5.2245e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8035e-09, dtype=torch.float64)
secont condition:: tensor(5.8035e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7952e-09, dtype=torch.float64)
secont condition:: tensor(5.7952e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4408e-09, dtype=torch.float64)
secont condition:: tensor(7.4408e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-08, dtype=torch.float64)
secont condition:: tensor(1.0208e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4829e-09, dtype=torch.float64)
secont condition:: tensor(7.4829e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7703e-09, dtype=torch.float64)
secont condition:: tensor(6.7703e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0572e-08, dtype=torch.float64)
secont condition:: tensor(1.0572e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.104034185409546
curr_diff: 0 tensor(4.7398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6741e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3702e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4983e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.7937e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3109e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2216e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4581e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
deletion rate:: 0.0002
python3 generate_rand_ids 0.0002  MNIST 0
tensor([15364, 40137,  8362, 44907, 25355,  7533, 36847,  9231,  1425, 10099,
        22931, 11518])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.199249
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.182897
Test Avg. Loss: 0.000017, Accuracy: 0.951200
Train - Epoch 2, Batch: 0, Loss: 0.181155
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 3, Batch: 0, Loss: 0.183275
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 4, Batch: 0, Loss: 0.178885
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.175545
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 6, Batch: 0, Loss: 0.174922
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.177264
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.175531
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 9, Batch: 0, Loss: 0.180775
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.179135
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.179510
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.177686
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.181507
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.190364
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.176537
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.171995
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.176610
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.177370
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.177614
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.463515043258667
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 13.972737312316895
time_baseline:: 14.01777720451355
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6548e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0750e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9518e-11, dtype=torch.float64)
secont condition:: tensor(4.9518e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7246e-10, dtype=torch.float64)
secont condition:: tensor(6.7246e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7545e-10, dtype=torch.float64)
secont condition:: tensor(3.7545e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3056e-09, dtype=torch.float64)
secont condition:: tensor(1.3056e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2910e-09, dtype=torch.float64)
secont condition:: tensor(3.2910e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8681e-09, dtype=torch.float64)
secont condition:: tensor(2.8681e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6137e-09, dtype=torch.float64)
secont condition:: tensor(1.6137e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2622e-09, dtype=torch.float64)
secont condition:: tensor(1.2622e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5277e-09, dtype=torch.float64)
secont condition:: tensor(3.5277e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7583e-09, dtype=torch.float64)
secont condition:: tensor(4.7583e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7649e-09, dtype=torch.float64)
secont condition:: tensor(1.7649e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6054e-09, dtype=torch.float64)
secont condition:: tensor(3.6054e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0711e-09, dtype=torch.float64)
secont condition:: tensor(3.0711e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8292e-09, dtype=torch.float64)
secont condition:: tensor(2.8292e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7345e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4260e-09, dtype=torch.float64)
secont condition:: tensor(3.4260e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4312e-09, dtype=torch.float64)
secont condition:: tensor(3.4312e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6581e-09, dtype=torch.float64)
secont condition:: tensor(2.6581e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6839e-09, dtype=torch.float64)
secont condition:: tensor(2.6839e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4843e-09, dtype=torch.float64)
secont condition:: tensor(2.4843e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8901e-09, dtype=torch.float64)
secont condition:: tensor(4.8901e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0292e-09, dtype=torch.float64)
secont condition:: tensor(4.0292e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3759e-09, dtype=torch.float64)
secont condition:: tensor(4.3759e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1150e-09, dtype=torch.float64)
secont condition:: tensor(4.1150e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7620e-09, dtype=torch.float64)
secont condition:: tensor(7.7620e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5370e-09, dtype=torch.float64)
secont condition:: tensor(3.5370e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9368e-10, dtype=torch.float64)
secont condition:: tensor(2.9368e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6980e-09, dtype=torch.float64)
secont condition:: tensor(4.6980e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4634e-09, dtype=torch.float64)
secont condition:: tensor(3.4634e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6824e-09, dtype=torch.float64)
secont condition:: tensor(2.6824e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1904e-09, dtype=torch.float64)
secont condition:: tensor(9.1904e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.2221e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0160e-08, dtype=torch.float64)
secont condition:: tensor(1.0160e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1082e-09, dtype=torch.float64)
secont condition:: tensor(7.1082e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0708e-09, dtype=torch.float64)
secont condition:: tensor(8.0708e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5368e-09, dtype=torch.float64)
secont condition:: tensor(9.5368e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6667e-09, dtype=torch.float64)
secont condition:: tensor(6.6667e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2285e-08, dtype=torch.float64)
secont condition:: tensor(1.2285e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0121e-08, dtype=torch.float64)
secont condition:: tensor(1.0121e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0395e-08, dtype=torch.float64)
secont condition:: tensor(1.0395e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1436e-09, dtype=torch.float64)
secont condition:: tensor(5.1436e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1247e-08, dtype=torch.float64)
secont condition:: tensor(1.1247e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3212e-09, dtype=torch.float64)
secont condition:: tensor(6.3212e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8870e-08, dtype=torch.float64)
secont condition:: tensor(1.8870e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2791e-08, dtype=torch.float64)
secont condition:: tensor(1.2791e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6257e-08, dtype=torch.float64)
secont condition:: tensor(1.6257e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2321e-08, dtype=torch.float64)
secont condition:: tensor(1.2321e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0172e-08, dtype=torch.float64)
secont condition:: tensor(1.0172e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2290e-08, dtype=torch.float64)
secont condition:: tensor(1.2290e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0713e-08, dtype=torch.float64)
secont condition:: tensor(1.0713e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0380e-08, dtype=torch.float64)
secont condition:: tensor(1.0380e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9989395141601562
curr_diff: 0 tensor(5.5251e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7523e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8526e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5558e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5862e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6811e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197366
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.182021
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.179150
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.179635
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 4, Batch: 0, Loss: 0.173978
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.167417
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.172852
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.172203
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.174908
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.177832
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.176375
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.178071
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.180083
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.177547
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.179344
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.179192
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 16, Batch: 0, Loss: 0.175657
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 17, Batch: 0, Loss: 0.171522
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 18, Batch: 0, Loss: 0.175957
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 19, Batch: 0, Loss: 0.173884
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.275967597961426
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.292408466339111
time_baseline:: 14.338247776031494
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.4716e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0355e-10, dtype=torch.float64)
secont condition:: tensor(7.0355e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2075e-10, dtype=torch.float64)
secont condition:: tensor(4.2075e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0668e-10, dtype=torch.float64)
secont condition:: tensor(2.0668e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3221e-10, dtype=torch.float64)
secont condition:: tensor(7.3221e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4784e-10, dtype=torch.float64)
secont condition:: tensor(8.4784e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5308e-09, dtype=torch.float64)
secont condition:: tensor(2.5308e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7939e-09, dtype=torch.float64)
secont condition:: tensor(1.7939e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3647e-09, dtype=torch.float64)
secont condition:: tensor(1.3647e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6629e-09, dtype=torch.float64)
secont condition:: tensor(1.6629e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5352e-09, dtype=torch.float64)
secont condition:: tensor(1.5352e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9447e-09, dtype=torch.float64)
secont condition:: tensor(2.9447e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.3851e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0321e-09, dtype=torch.float64)
secont condition:: tensor(2.0321e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9334e-09, dtype=torch.float64)
secont condition:: tensor(3.9334e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4679e-09, dtype=torch.float64)
secont condition:: tensor(2.4679e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4287e-09, dtype=torch.float64)
secont condition:: tensor(3.4287e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3190e-09, dtype=torch.float64)
secont condition:: tensor(5.3190e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2000e-09, dtype=torch.float64)
secont condition:: tensor(4.2000e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7301e-09, dtype=torch.float64)
secont condition:: tensor(4.7301e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0753e-09, dtype=torch.float64)
secont condition:: tensor(3.0753e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4630e-09, dtype=torch.float64)
secont condition:: tensor(3.4630e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6350e-09, dtype=torch.float64)
secont condition:: tensor(2.6350e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7208e-09, dtype=torch.float64)
secont condition:: tensor(3.7208e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9215e-09, dtype=torch.float64)
secont condition:: tensor(3.9215e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5077e-09, dtype=torch.float64)
secont condition:: tensor(2.5077e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3394e-09, dtype=torch.float64)
secont condition:: tensor(5.3394e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8693e-09, dtype=torch.float64)
secont condition:: tensor(3.8693e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5817e-09, dtype=torch.float64)
secont condition:: tensor(7.5817e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5424e-09, dtype=torch.float64)
secont condition:: tensor(7.5424e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4683e-09, dtype=torch.float64)
secont condition:: tensor(6.4683e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9253e-09, dtype=torch.float64)
secont condition:: tensor(6.9253e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8285e-09, dtype=torch.float64)
secont condition:: tensor(5.8285e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0204e-09, dtype=torch.float64)
secont condition:: tensor(5.0204e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3309e-09, dtype=torch.float64)
secont condition:: tensor(8.3309e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2761e-09, dtype=torch.float64)
secont condition:: tensor(7.2761e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1815e-09, dtype=torch.float64)
secont condition:: tensor(5.1815e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6522e-09, dtype=torch.float64)
secont condition:: tensor(8.6522e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3359e-09, dtype=torch.float64)
secont condition:: tensor(9.3359e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3688e-09, dtype=torch.float64)
secont condition:: tensor(9.3688e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5250e-09, dtype=torch.float64)
secont condition:: tensor(6.5250e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6991e-09, dtype=torch.float64)
secont condition:: tensor(8.6991e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8505e-09, dtype=torch.float64)
secont condition:: tensor(4.8505e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4297e-09, dtype=torch.float64)
secont condition:: tensor(9.4297e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8845e-09, dtype=torch.float64)
secont condition:: tensor(8.8845e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7222e-09, dtype=torch.float64)
secont condition:: tensor(9.7222e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0343e-08, dtype=torch.float64)
secont condition:: tensor(1.0343e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3490e-08, dtype=torch.float64)
secont condition:: tensor(1.3490e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4134e-08, dtype=torch.float64)
secont condition:: tensor(1.4134e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1858e-08, dtype=torch.float64)
secont condition:: tensor(1.1858e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8381e-09, dtype=torch.float64)
secont condition:: tensor(8.8381e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9036684036254883
curr_diff: 0 tensor(5.7800e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1708e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1761e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.8494e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8225e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1049e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.953100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.186645
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.183858
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.174804
Test Avg. Loss: 0.000017, Accuracy: 0.952200
Train - Epoch 3, Batch: 0, Loss: 0.179902
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 4, Batch: 0, Loss: 0.179368
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.174959
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.175196
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.179509
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.176480
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 9, Batch: 0, Loss: 0.181273
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.174530
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.176370
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 12, Batch: 0, Loss: 0.174782
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.172355
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.176912
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.177827
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.179773
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.174055
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.174385
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 19, Batch: 0, Loss: 0.175540
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.626747131347656
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.044057846069336
time_baseline:: 14.088473796844482
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5448e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8187e-10, dtype=torch.float64)
secont condition:: tensor(5.8187e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9954e-10, dtype=torch.float64)
secont condition:: tensor(7.9954e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1524e-10, dtype=torch.float64)
secont condition:: tensor(5.1524e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3535e-10, dtype=torch.float64)
secont condition:: tensor(4.3535e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5170e-09, dtype=torch.float64)
secont condition:: tensor(2.5170e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7663e-09, dtype=torch.float64)
secont condition:: tensor(1.7663e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0428e-09, dtype=torch.float64)
secont condition:: tensor(1.0428e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2525e-09, dtype=torch.float64)
secont condition:: tensor(1.2525e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1854e-09, dtype=torch.float64)
secont condition:: tensor(1.1854e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8768e-09, dtype=torch.float64)
secont condition:: tensor(1.8768e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7593e-09, dtype=torch.float64)
secont condition:: tensor(1.7593e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6029e-09, dtype=torch.float64)
secont condition:: tensor(1.6029e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1924e-09, dtype=torch.float64)
secont condition:: tensor(3.1924e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8974e-09, dtype=torch.float64)
secont condition:: tensor(2.8974e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6939e-09, dtype=torch.float64)
secont condition:: tensor(1.6939e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8504e-09, dtype=torch.float64)
secont condition:: tensor(2.8504e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9746e-09, dtype=torch.float64)
secont condition:: tensor(4.9746e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5063e-09, dtype=torch.float64)
secont condition:: tensor(3.5063e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2452e-09, dtype=torch.float64)
secont condition:: tensor(3.2452e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9826e-09, dtype=torch.float64)
secont condition:: tensor(2.9826e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6396e-09, dtype=torch.float64)
secont condition:: tensor(3.6396e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8890e-09, dtype=torch.float64)
secont condition:: tensor(3.8890e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7179e-09, dtype=torch.float64)
secont condition:: tensor(5.7179e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6822e-09, dtype=torch.float64)
secont condition:: tensor(4.6822e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5639e-09, dtype=torch.float64)
secont condition:: tensor(4.5639e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9301e-09, dtype=torch.float64)
secont condition:: tensor(3.9301e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6908e-09, dtype=torch.float64)
secont condition:: tensor(2.6908e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8714e-09, dtype=torch.float64)
secont condition:: tensor(4.8714e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3679e-09, dtype=torch.float64)
secont condition:: tensor(4.3679e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4625e-09, dtype=torch.float64)
secont condition:: tensor(3.4625e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0763e-09, dtype=torch.float64)
secont condition:: tensor(4.0763e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0729e-09, dtype=torch.float64)
secont condition:: tensor(5.0729e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9358e-09, dtype=torch.float64)
secont condition:: tensor(4.9358e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7700e-09, dtype=torch.float64)
secont condition:: tensor(8.7700e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4223e-09, dtype=torch.float64)
secont condition:: tensor(5.4223e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9386e-09, dtype=torch.float64)
secont condition:: tensor(5.9386e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2479e-09, dtype=torch.float64)
secont condition:: tensor(5.2479e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5870e-09, dtype=torch.float64)
secont condition:: tensor(5.5870e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7232e-09, dtype=torch.float64)
secont condition:: tensor(4.7232e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0631e-09, dtype=torch.float64)
secont condition:: tensor(7.0631e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1233e-08, dtype=torch.float64)
secont condition:: tensor(1.1233e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1851e-09, dtype=torch.float64)
secont condition:: tensor(9.1851e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1150e-09, dtype=torch.float64)
secont condition:: tensor(9.1150e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7093e-08, dtype=torch.float64)
secont condition:: tensor(1.7093e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1411e-08, dtype=torch.float64)
secont condition:: tensor(1.1411e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4710e-09, dtype=torch.float64)
secont condition:: tensor(8.4710e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3672e-09, dtype=torch.float64)
secont condition:: tensor(8.3672e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0856e-08, dtype=torch.float64)
secont condition:: tensor(1.0856e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2756e-09, dtype=torch.float64)
secont condition:: tensor(7.2756e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0606e-08, dtype=torch.float64)
secont condition:: tensor(1.0606e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.009420156478882
curr_diff: 0 tensor(5.4205e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.3613e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.8472e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9295e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4607e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8124e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198646
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.179378
Test Avg. Loss: 0.000017, Accuracy: 0.951600
Train - Epoch 2, Batch: 0, Loss: 0.169273
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.173793
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 4, Batch: 0, Loss: 0.176442
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 5, Batch: 0, Loss: 0.174019
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.173340
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.182000
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.175078
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.177389
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.182025
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 11, Batch: 0, Loss: 0.177540
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 12, Batch: 0, Loss: 0.185491
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 13, Batch: 0, Loss: 0.177793
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.181176
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.178275
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.174708
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.182582
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.176547
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.171888
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.390406131744385
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.199991941452026
time_baseline:: 14.244267225265503
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0121e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2678e-10, dtype=torch.float64)
secont condition:: tensor(7.2678e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4726e-10, dtype=torch.float64)
secont condition:: tensor(5.4726e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3921e-10, dtype=torch.float64)
secont condition:: tensor(7.3921e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2466e-10, dtype=torch.float64)
secont condition:: tensor(5.2466e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0744e-09, dtype=torch.float64)
secont condition:: tensor(1.0744e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2197e-10, dtype=torch.float64)
secont condition:: tensor(6.2197e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4817e-09, dtype=torch.float64)
secont condition:: tensor(1.4817e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2004e-09, dtype=torch.float64)
secont condition:: tensor(1.2004e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4199e-09, dtype=torch.float64)
secont condition:: tensor(1.4199e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0060e-09, dtype=torch.float64)
secont condition:: tensor(1.0060e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2322e-10, dtype=torch.float64)
secont condition:: tensor(7.2322e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4678e-09, dtype=torch.float64)
secont condition:: tensor(3.4678e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0245e-09, dtype=torch.float64)
secont condition:: tensor(2.0245e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5629e-09, dtype=torch.float64)
secont condition:: tensor(1.5629e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8100e-09, dtype=torch.float64)
secont condition:: tensor(3.8100e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3575e-09, dtype=torch.float64)
secont condition:: tensor(5.3575e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0404e-09, dtype=torch.float64)
secont condition:: tensor(4.0404e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0485e-09, dtype=torch.float64)
secont condition:: tensor(6.0485e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1746e-09, dtype=torch.float64)
secont condition:: tensor(5.1746e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7254e-09, dtype=torch.float64)
secont condition:: tensor(3.7254e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3675e-09, dtype=torch.float64)
secont condition:: tensor(4.3675e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7638e-09, dtype=torch.float64)
secont condition:: tensor(4.7638e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7902e-09, dtype=torch.float64)
secont condition:: tensor(2.7902e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3353e-09, dtype=torch.float64)
secont condition:: tensor(7.3353e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1860e-09, dtype=torch.float64)
secont condition:: tensor(5.1860e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9385e-09, dtype=torch.float64)
secont condition:: tensor(4.9385e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6731e-09, dtype=torch.float64)
secont condition:: tensor(3.6731e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7913e-09, dtype=torch.float64)
secont condition:: tensor(4.7913e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5683e-09, dtype=torch.float64)
secont condition:: tensor(5.5683e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7896e-09, dtype=torch.float64)
secont condition:: tensor(7.7896e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2593e-09, dtype=torch.float64)
secont condition:: tensor(5.2593e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3400e-09, dtype=torch.float64)
secont condition:: tensor(5.3400e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2907e-09, dtype=torch.float64)
secont condition:: tensor(7.2907e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5911e-09, dtype=torch.float64)
secont condition:: tensor(5.5911e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9553e-09, dtype=torch.float64)
secont condition:: tensor(6.9553e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1371e-08, dtype=torch.float64)
secont condition:: tensor(1.1371e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4714e-09, dtype=torch.float64)
secont condition:: tensor(7.4714e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1160e-08, dtype=torch.float64)
secont condition:: tensor(1.1160e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3495e-09, dtype=torch.float64)
secont condition:: tensor(8.3495e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1014e-08, dtype=torch.float64)
secont condition:: tensor(1.1014e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0090e-08, dtype=torch.float64)
secont condition:: tensor(1.0090e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2067e-08, dtype=torch.float64)
secont condition:: tensor(1.2067e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4221e-08, dtype=torch.float64)
secont condition:: tensor(1.4221e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2861e-08, dtype=torch.float64)
secont condition:: tensor(1.2861e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3502e-08, dtype=torch.float64)
secont condition:: tensor(1.3502e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2385e-08, dtype=torch.float64)
secont condition:: tensor(1.2385e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6155e-09, dtype=torch.float64)
secont condition:: tensor(8.6155e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0508e-08, dtype=torch.float64)
secont condition:: tensor(1.0508e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9024e-08, dtype=torch.float64)
secont condition:: tensor(1.9024e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1274e-08, dtype=torch.float64)
secont condition:: tensor(1.1274e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6054e-08, dtype=torch.float64)
secont condition:: tensor(1.6054e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.895089864730835
curr_diff: 0 tensor(6.2343e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.3300e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7354e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3233e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.2929e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7972e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5305e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197303
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.182887
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.179816
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.177900
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 4, Batch: 0, Loss: 0.174352
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 5, Batch: 0, Loss: 0.176714
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.177230
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.177445
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.172955
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.178314
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.169971
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.178750
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.173597
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.177048
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.180371
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.176105
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.172619
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.177715
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.178926
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.172077
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.61636734008789
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.103622436523438
time_baseline:: 14.148188829421997
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0560e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 12
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9022e-10, dtype=torch.float64)
secont condition:: tensor(6.9022e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5203e-10, dtype=torch.float64)
secont condition:: tensor(6.5203e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5002e-10, dtype=torch.float64)
secont condition:: tensor(4.5002e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8391e-10, dtype=torch.float64)
secont condition:: tensor(5.8391e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0688e-09, dtype=torch.float64)
secont condition:: tensor(1.0688e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5593e-09, dtype=torch.float64)
secont condition:: tensor(1.5593e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2362e-10, dtype=torch.float64)
secont condition:: tensor(8.2362e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6330e-09, dtype=torch.float64)
secont condition:: tensor(1.6330e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0865e-09, dtype=torch.float64)
secont condition:: tensor(2.0865e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1084e-09, dtype=torch.float64)
secont condition:: tensor(1.1084e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9953e-09, dtype=torch.float64)
secont condition:: tensor(2.9953e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0864e-09, dtype=torch.float64)
secont condition:: tensor(3.0864e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3094e-09, dtype=torch.float64)
secont condition:: tensor(3.3094e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6378e-09, dtype=torch.float64)
secont condition:: tensor(3.6378e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7409e-09, dtype=torch.float64)
secont condition:: tensor(2.7409e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2121e-09, dtype=torch.float64)
secont condition:: tensor(2.2121e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8014e-09, dtype=torch.float64)
secont condition:: tensor(3.8014e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2859e-09, dtype=torch.float64)
secont condition:: tensor(1.2859e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5048e-09, dtype=torch.float64)
secont condition:: tensor(5.5048e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1276e-09, dtype=torch.float64)
secont condition:: tensor(2.1276e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6628e-09, dtype=torch.float64)
secont condition:: tensor(1.6628e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6514e-09, dtype=torch.float64)
secont condition:: tensor(1.6514e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8560e-09, dtype=torch.float64)
secont condition:: tensor(4.8560e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1204e-09, dtype=torch.float64)
secont condition:: tensor(5.1204e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2497e-09, dtype=torch.float64)
secont condition:: tensor(2.2497e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4746e-09, dtype=torch.float64)
secont condition:: tensor(1.4746e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0149e-09, dtype=torch.float64)
secont condition:: tensor(6.0149e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0068e-09, dtype=torch.float64)
secont condition:: tensor(5.0068e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0522e-09, dtype=torch.float64)
secont condition:: tensor(5.0522e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5438e-09, dtype=torch.float64)
secont condition:: tensor(1.5438e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3931e-09, dtype=torch.float64)
secont condition:: tensor(5.3931e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7004e-09, dtype=torch.float64)
secont condition:: tensor(3.7004e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1042e-08, dtype=torch.float64)
secont condition:: tensor(1.1042e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2649e-09, dtype=torch.float64)
secont condition:: tensor(7.2649e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9256e-09, dtype=torch.float64)
secont condition:: tensor(5.9256e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5703e-09, dtype=torch.float64)
secont condition:: tensor(5.5703e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9263e-09, dtype=torch.float64)
secont condition:: tensor(2.9263e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5188e-09, dtype=torch.float64)
secont condition:: tensor(5.5188e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3343e-09, dtype=torch.float64)
secont condition:: tensor(9.3343e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5796e-09, dtype=torch.float64)
secont condition:: tensor(3.5796e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9185e-09, dtype=torch.float64)
secont condition:: tensor(7.9185e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0633e-08, dtype=torch.float64)
secont condition:: tensor(1.0633e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2467e-09, dtype=torch.float64)
secont condition:: tensor(9.2467e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7573e-08, dtype=torch.float64)
secont condition:: tensor(1.7573e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8027e-09, dtype=torch.float64)
secont condition:: tensor(9.8027e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0635e-08, dtype=torch.float64)
secont condition:: tensor(1.0635e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1688e-08, dtype=torch.float64)
secont condition:: tensor(1.1688e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0432e-08, dtype=torch.float64)
secont condition:: tensor(1.0432e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2857e-09, dtype=torch.float64)
secont condition:: tensor(7.2857e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7388e-09, dtype=torch.float64)
secont condition:: tensor(3.7388e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.102330207824707
curr_diff: 0 tensor(5.1759e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6097e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8393e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0174e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2395e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6857e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7524e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
deletion rate:: 0.0005
python3 generate_rand_ids 0.0005  MNIST 0
tensor([ 4225, 15364, 41927, 25928, 40137, 25355, 41294,  9231, 30799,  1425,
        32785, 22931, 20563, 18325, 32472,  4056, 40346, 59102, 53280, 28578,
        18791,  8362, 44907, 15274,  7533, 25902, 36847, 47218, 10099, 11518])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.203367
Test Avg. Loss: 0.000018, Accuracy: 0.950200
Train - Epoch 1, Batch: 0, Loss: 0.188523
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 2, Batch: 0, Loss: 0.185455
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.178818
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.172140
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 5, Batch: 0, Loss: 0.185143
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.178350
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.179931
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.182081
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 9, Batch: 0, Loss: 0.178224
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.178295
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.181377
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.180949
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.177837
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 14, Batch: 0, Loss: 0.174491
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 15, Batch: 0, Loss: 0.181818
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 16, Batch: 0, Loss: 0.170198
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 17, Batch: 0, Loss: 0.181838
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 18, Batch: 0, Loss: 0.176700
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.176498
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.34587836265564
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.020793914794922
time_baseline:: 14.066096067428589
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2236e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1838e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5379e-10, dtype=torch.float64)
secont condition:: tensor(1.5379e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0611e-09, dtype=torch.float64)
secont condition:: tensor(7.0611e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0645e-08, dtype=torch.float64)
secont condition:: tensor(1.0645e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3722e-09, dtype=torch.float64)
secont condition:: tensor(6.3722e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3217e-09, dtype=torch.float64)
secont condition:: tensor(4.3217e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2348e-08, dtype=torch.float64)
secont condition:: tensor(1.2348e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0554e-08, dtype=torch.float64)
secont condition:: tensor(2.0554e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6469e-08, dtype=torch.float64)
secont condition:: tensor(1.6469e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3265e-08, dtype=torch.float64)
secont condition:: tensor(1.3265e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1491e-08, dtype=torch.float64)
secont condition:: tensor(3.1491e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4231e-08, dtype=torch.float64)
secont condition:: tensor(2.4231e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6062e-08, dtype=torch.float64)
secont condition:: tensor(1.6062e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4327e-08, dtype=torch.float64)
secont condition:: tensor(3.4327e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1835e-08, dtype=torch.float64)
secont condition:: tensor(2.1835e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5960e-08, dtype=torch.float64)
secont condition:: tensor(1.5960e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0011e-08, dtype=torch.float64)
secont condition:: tensor(3.0011e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1986e-08, dtype=torch.float64)
secont condition:: tensor(4.1986e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5551e-08, dtype=torch.float64)
secont condition:: tensor(5.5551e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2728e-08, dtype=torch.float64)
secont condition:: tensor(3.2728e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8228e-08, dtype=torch.float64)
secont condition:: tensor(2.8228e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2001e-08, dtype=torch.float64)
secont condition:: tensor(3.2001e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5738e-08, dtype=torch.float64)
secont condition:: tensor(2.5738e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4393e-08, dtype=torch.float64)
secont condition:: tensor(2.4393e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7668e-08, dtype=torch.float64)
secont condition:: tensor(6.7668e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5888e-08, dtype=torch.float64)
secont condition:: tensor(6.5888e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6892e-08, dtype=torch.float64)
secont condition:: tensor(7.6892e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7208e-08, dtype=torch.float64)
secont condition:: tensor(6.7208e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1090e-08, dtype=torch.float64)
secont condition:: tensor(6.1090e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5721e-08, dtype=torch.float64)
secont condition:: tensor(6.5721e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5805e-08, dtype=torch.float64)
secont condition:: tensor(5.5805e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4644e-08, dtype=torch.float64)
secont condition:: tensor(3.4644e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2156e-08, dtype=torch.float64)
secont condition:: tensor(5.2156e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2976e-08, dtype=torch.float64)
secont condition:: tensor(4.2976e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6024e-08, dtype=torch.float64)
secont condition:: tensor(4.6024e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1391e-08, dtype=torch.float64)
secont condition:: tensor(5.1391e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8507e-08, dtype=torch.float64)
secont condition:: tensor(7.8507e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5626e-08, dtype=torch.float64)
secont condition:: tensor(6.5626e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7534e-08, dtype=torch.float64)
secont condition:: tensor(5.7534e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6343e-08, dtype=torch.float64)
secont condition:: tensor(9.6343e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4554e-08, dtype=torch.float64)
secont condition:: tensor(9.4554e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0364e-07, dtype=torch.float64)
secont condition:: tensor(1.0364e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7857e-08, dtype=torch.float64)
secont condition:: tensor(9.7857e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1535e-07, dtype=torch.float64)
secont condition:: tensor(1.1535e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8291e-08, dtype=torch.float64)
secont condition:: tensor(9.8291e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1627e-07, dtype=torch.float64)
secont condition:: tensor(1.1627e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6190e-08, dtype=torch.float64)
secont condition:: tensor(9.6190e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1978e-07, dtype=torch.float64)
secont condition:: tensor(1.1978e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3226e-07, dtype=torch.float64)
secont condition:: tensor(1.3226e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1562e-07, dtype=torch.float64)
secont condition:: tensor(1.1562e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0729e-07, dtype=torch.float64)
secont condition:: tensor(1.0729e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1008e-07, dtype=torch.float64)
secont condition:: tensor(1.1008e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9092729091644287
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1779e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0008e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4170e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.196168
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.182927
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.174687
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.169934
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.178252
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 5, Batch: 0, Loss: 0.174855
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.183425
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.177742
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.178527
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.181535
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.173936
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.175421
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.179278
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.179547
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.181140
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.173877
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.175994
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.174801
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.172169
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.176637
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.402092456817627
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.102499008178711
time_baseline:: 14.149269580841064
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1678e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0133e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2907e-08, dtype=torch.float64)
secont condition:: tensor(1.2907e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6313e-09, dtype=torch.float64)
secont condition:: tensor(8.6313e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8495e-09, dtype=torch.float64)
secont condition:: tensor(4.8495e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3510e-09, dtype=torch.float64)
secont condition:: tensor(3.3510e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2606e-08, dtype=torch.float64)
secont condition:: tensor(1.2606e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5444e-08, dtype=torch.float64)
secont condition:: tensor(1.5444e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0363e-08, dtype=torch.float64)
secont condition:: tensor(1.0363e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3124e-09, dtype=torch.float64)
secont condition:: tensor(8.3124e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3479e-09, dtype=torch.float64)
secont condition:: tensor(8.3479e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8219e-08, dtype=torch.float64)
secont condition:: tensor(1.8219e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2160e-08, dtype=torch.float64)
secont condition:: tensor(2.2160e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7206e-08, dtype=torch.float64)
secont condition:: tensor(1.7206e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7947e-08, dtype=torch.float64)
secont condition:: tensor(3.7947e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1922e-08, dtype=torch.float64)
secont condition:: tensor(2.1922e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7502e-08, dtype=torch.float64)
secont condition:: tensor(1.7502e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0136e-08, dtype=torch.float64)
secont condition:: tensor(3.0136e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6341e-08, dtype=torch.float64)
secont condition:: tensor(5.6341e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3047e-08, dtype=torch.float64)
secont condition:: tensor(4.3047e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1375e-08, dtype=torch.float64)
secont condition:: tensor(3.1375e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4068e-08, dtype=torch.float64)
secont condition:: tensor(2.4068e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0953e-08, dtype=torch.float64)
secont condition:: tensor(3.0953e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1055e-08, dtype=torch.float64)
secont condition:: tensor(4.1055e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8224e-08, dtype=torch.float64)
secont condition:: tensor(4.8224e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9745e-08, dtype=torch.float64)
secont condition:: tensor(3.9745e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8448e-08, dtype=torch.float64)
secont condition:: tensor(2.8448e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2005e-08, dtype=torch.float64)
secont condition:: tensor(4.2005e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4379e-08, dtype=torch.float64)
secont condition:: tensor(4.4379e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3932e-08, dtype=torch.float64)
secont condition:: tensor(1.3932e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3547e-08, dtype=torch.float64)
secont condition:: tensor(4.3547e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3737e-08, dtype=torch.float64)
secont condition:: tensor(3.3737e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0263e-08, dtype=torch.float64)
secont condition:: tensor(5.0263e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9665e-08, dtype=torch.float64)
secont condition:: tensor(6.9665e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8055e-08, dtype=torch.float64)
secont condition:: tensor(7.8055e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4109e-08, dtype=torch.float64)
secont condition:: tensor(7.4109e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7520e-08, dtype=torch.float64)
secont condition:: tensor(4.7520e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6624e-08, dtype=torch.float64)
secont condition:: tensor(6.6624e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0939e-08, dtype=torch.float64)
secont condition:: tensor(9.0939e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8801e-08, dtype=torch.float64)
secont condition:: tensor(7.8801e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8859e-08, dtype=torch.float64)
secont condition:: tensor(7.8859e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8903e-08, dtype=torch.float64)
secont condition:: tensor(7.8903e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8816e-08, dtype=torch.float64)
secont condition:: tensor(6.8816e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1946e-08, dtype=torch.float64)
secont condition:: tensor(7.1946e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0343e-08, dtype=torch.float64)
secont condition:: tensor(8.0343e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0436e-07, dtype=torch.float64)
secont condition:: tensor(1.0436e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9509e-08, dtype=torch.float64)
secont condition:: tensor(7.9509e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2577e-08, dtype=torch.float64)
secont condition:: tensor(8.2577e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0367e-07, dtype=torch.float64)
secont condition:: tensor(1.0367e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3298e-08, dtype=torch.float64)
secont condition:: tensor(9.3298e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4769e-08, dtype=torch.float64)
secont condition:: tensor(9.4769e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5420e-08, dtype=torch.float64)
secont condition:: tensor(9.5420e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.024587869644165
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5662e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2114e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.3988e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9673e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.203770
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.175272
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.171455
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.175402
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.175942
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 5, Batch: 0, Loss: 0.181223
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.178079
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.179030
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.177191
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.179983
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.180249
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.179367
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 12, Batch: 0, Loss: 0.170861
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.178566
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.178388
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 15, Batch: 0, Loss: 0.177424
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 16, Batch: 0, Loss: 0.179018
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 17, Batch: 0, Loss: 0.179729
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 18, Batch: 0, Loss: 0.172488
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 19, Batch: 0, Loss: 0.175194
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.479146003723145
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.26972246170044
time_baseline:: 14.314590692520142
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2496e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2192e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1956e-09, dtype=torch.float64)
secont condition:: tensor(7.1956e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2879e-09, dtype=torch.float64)
secont condition:: tensor(4.2879e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4809e-09, dtype=torch.float64)
secont condition:: tensor(3.4809e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4810e-08, dtype=torch.float64)
secont condition:: tensor(1.4810e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3168e-08, dtype=torch.float64)
secont condition:: tensor(2.3168e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5532e-08, dtype=torch.float64)
secont condition:: tensor(1.5532e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0240e-08, dtype=torch.float64)
secont condition:: tensor(1.0240e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5702e-08, dtype=torch.float64)
secont condition:: tensor(2.5702e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9926e-08, dtype=torch.float64)
secont condition:: tensor(2.9926e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3169e-08, dtype=torch.float64)
secont condition:: tensor(2.3169e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4174e-08, dtype=torch.float64)
secont condition:: tensor(1.4174e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4980e-08, dtype=torch.float64)
secont condition:: tensor(4.4980e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1590e-08, dtype=torch.float64)
secont condition:: tensor(3.1590e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1677e-08, dtype=torch.float64)
secont condition:: tensor(2.1677e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2485e-08, dtype=torch.float64)
secont condition:: tensor(2.2485e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2238e-08, dtype=torch.float64)
secont condition:: tensor(6.2238e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5762e-08, dtype=torch.float64)
secont condition:: tensor(4.5762e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2721e-08, dtype=torch.float64)
secont condition:: tensor(2.2721e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6721e-08, dtype=torch.float64)
secont condition:: tensor(5.6721e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8577e-08, dtype=torch.float64)
secont condition:: tensor(4.8577e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6660e-08, dtype=torch.float64)
secont condition:: tensor(5.6660e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8845e-08, dtype=torch.float64)
secont condition:: tensor(4.8845e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0487e-08, dtype=torch.float64)
secont condition:: tensor(4.0487e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5585e-08, dtype=torch.float64)
secont condition:: tensor(5.5585e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2507e-08, dtype=torch.float64)
secont condition:: tensor(4.2507e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0276e-08, dtype=torch.float64)
secont condition:: tensor(3.0276e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2679e-08, dtype=torch.float64)
secont condition:: tensor(5.2679e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9162e-08, dtype=torch.float64)
secont condition:: tensor(6.9162e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2615e-08, dtype=torch.float64)
secont condition:: tensor(8.2615e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9889e-08, dtype=torch.float64)
secont condition:: tensor(4.9889e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4236e-08, dtype=torch.float64)
secont condition:: tensor(6.4236e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4176e-08, dtype=torch.float64)
secont condition:: tensor(9.4176e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2039e-07, dtype=torch.float64)
secont condition:: tensor(1.2039e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0473e-07, dtype=torch.float64)
secont condition:: tensor(1.0473e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6532e-08, dtype=torch.float64)
secont condition:: tensor(9.6532e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5868e-08, dtype=torch.float64)
secont condition:: tensor(7.5868e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8225e-08, dtype=torch.float64)
secont condition:: tensor(8.8225e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9027e-08, dtype=torch.float64)
secont condition:: tensor(9.9027e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8949e-08, dtype=torch.float64)
secont condition:: tensor(7.8949e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2972e-08, dtype=torch.float64)
secont condition:: tensor(7.2972e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0240e-08, dtype=torch.float64)
secont condition:: tensor(6.0240e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5003e-08, dtype=torch.float64)
secont condition:: tensor(7.5003e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0842e-08, dtype=torch.float64)
secont condition:: tensor(9.0842e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9009e-08, dtype=torch.float64)
secont condition:: tensor(7.9009e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5895e-08, dtype=torch.float64)
secont condition:: tensor(8.5895e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1126e-07, dtype=torch.float64)
secont condition:: tensor(1.1126e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1102e-07, dtype=torch.float64)
secont condition:: tensor(1.1102e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1902e-07, dtype=torch.float64)
secont condition:: tensor(1.1902e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0590e-07, dtype=torch.float64)
secont condition:: tensor(1.0590e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.009656190872192
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4319e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.7877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3816e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6316e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2242e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.193878
Test Avg. Loss: 0.000018, Accuracy: 0.950200
Train - Epoch 1, Batch: 0, Loss: 0.184692
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.179030
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.170474
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.178147
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 5, Batch: 0, Loss: 0.181637
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 6, Batch: 0, Loss: 0.172428
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 7, Batch: 0, Loss: 0.180346
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.179033
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.178280
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.179740
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.180725
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.175130
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.180622
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.172441
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.173182
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.185713
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 17, Batch: 0, Loss: 0.170202
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.177246
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.180225
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.66857886314392
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.01870322227478
time_baseline:: 14.063665866851807
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9715e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3756e-09, dtype=torch.float64)
secont condition:: tensor(6.3756e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8016e-09, dtype=torch.float64)
secont condition:: tensor(8.8016e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3423e-09, dtype=torch.float64)
secont condition:: tensor(5.3423e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1168e-09, dtype=torch.float64)
secont condition:: tensor(4.1168e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3847e-09, dtype=torch.float64)
secont condition:: tensor(4.3847e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2275e-09, dtype=torch.float64)
secont condition:: tensor(2.2275e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4692e-08, dtype=torch.float64)
secont condition:: tensor(1.4692e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2201e-08, dtype=torch.float64)
secont condition:: tensor(2.2201e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2449e-08, dtype=torch.float64)
secont condition:: tensor(3.2449e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2591e-08, dtype=torch.float64)
secont condition:: tensor(2.2591e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3042e-08, dtype=torch.float64)
secont condition:: tensor(3.3042e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6801e-08, dtype=torch.float64)
secont condition:: tensor(1.6801e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4308e-08, dtype=torch.float64)
secont condition:: tensor(1.4308e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5886e-08, dtype=torch.float64)
secont condition:: tensor(2.5886e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0345e-08, dtype=torch.float64)
secont condition:: tensor(2.0345e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7160e-08, dtype=torch.float64)
secont condition:: tensor(3.7160e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5632e-08, dtype=torch.float64)
secont condition:: tensor(6.5632e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0282e-08, dtype=torch.float64)
secont condition:: tensor(5.0282e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0761e-08, dtype=torch.float64)
secont condition:: tensor(2.0761e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3794e-08, dtype=torch.float64)
secont condition:: tensor(2.3794e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0316e-08, dtype=torch.float64)
secont condition:: tensor(3.0316e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7150e-08, dtype=torch.float64)
secont condition:: tensor(2.7150e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4727e-08, dtype=torch.float64)
secont condition:: tensor(4.4727e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1327e-08, dtype=torch.float64)
secont condition:: tensor(4.1327e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9419e-08, dtype=torch.float64)
secont condition:: tensor(4.9419e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5200e-08, dtype=torch.float64)
secont condition:: tensor(5.5200e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9201e-08, dtype=torch.float64)
secont condition:: tensor(4.9201e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3198e-08, dtype=torch.float64)
secont condition:: tensor(4.3198e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8830e-08, dtype=torch.float64)
secont condition:: tensor(3.8830e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6436e-08, dtype=torch.float64)
secont condition:: tensor(5.6436e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8347e-08, dtype=torch.float64)
secont condition:: tensor(5.8347e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4529e-08, dtype=torch.float64)
secont condition:: tensor(4.4529e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6427e-08, dtype=torch.float64)
secont condition:: tensor(5.6427e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8643e-08, dtype=torch.float64)
secont condition:: tensor(7.8643e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7589e-08, dtype=torch.float64)
secont condition:: tensor(6.7589e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7564e-08, dtype=torch.float64)
secont condition:: tensor(5.7564e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2474e-08, dtype=torch.float64)
secont condition:: tensor(5.2474e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3856e-08, dtype=torch.float64)
secont condition:: tensor(4.3856e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9052e-08, dtype=torch.float64)
secont condition:: tensor(5.9052e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1518e-07, dtype=torch.float64)
secont condition:: tensor(1.1518e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2621e-08, dtype=torch.float64)
secont condition:: tensor(8.2621e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0128e-08, dtype=torch.float64)
secont condition:: tensor(8.0128e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0424e-07, dtype=torch.float64)
secont condition:: tensor(1.0424e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3519e-07, dtype=torch.float64)
secont condition:: tensor(1.3519e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7422e-08, dtype=torch.float64)
secont condition:: tensor(9.7422e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0233e-08, dtype=torch.float64)
secont condition:: tensor(9.0233e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9418e-08, dtype=torch.float64)
secont condition:: tensor(9.9418e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0203e-07, dtype=torch.float64)
secont condition:: tensor(1.0203e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2694e-08, dtype=torch.float64)
secont condition:: tensor(9.2694e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7386e-08, dtype=torch.float64)
secont condition:: tensor(8.7386e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.051138162612915
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.9477e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3041e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.1939e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.3629e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9477e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.197730
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.178742
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 2, Batch: 0, Loss: 0.182386
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.176190
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.178726
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 5, Batch: 0, Loss: 0.175768
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.181859
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.173746
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.177793
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.181010
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.181530
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.180963
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.181788
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 13, Batch: 0, Loss: 0.183176
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 14, Batch: 0, Loss: 0.183388
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.177638
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.177764
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.175313
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.173494
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.178247
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.46608066558838
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.033412456512451
time_baseline:: 14.079124689102173
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1306e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0367e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 30
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2235e-09, dtype=torch.float64)
secont condition:: tensor(7.2235e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2618e-09, dtype=torch.float64)
secont condition:: tensor(4.2618e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1301e-08, dtype=torch.float64)
secont condition:: tensor(1.1301e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9599e-09, dtype=torch.float64)
secont condition:: tensor(3.9599e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7201e-09, dtype=torch.float64)
secont condition:: tensor(3.7201e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0487e-08, dtype=torch.float64)
secont condition:: tensor(2.0487e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3032e-08, dtype=torch.float64)
secont condition:: tensor(1.3032e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2984e-09, dtype=torch.float64)
secont condition:: tensor(9.2984e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7200e-09, dtype=torch.float64)
secont condition:: tensor(6.7200e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9882e-08, dtype=torch.float64)
secont condition:: tensor(1.9882e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7541e-08, dtype=torch.float64)
secont condition:: tensor(1.7541e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5896e-08, dtype=torch.float64)
secont condition:: tensor(1.5896e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3261e-08, dtype=torch.float64)
secont condition:: tensor(1.3261e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8041e-08, dtype=torch.float64)
secont condition:: tensor(1.8041e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2129e-08, dtype=torch.float64)
secont condition:: tensor(3.2129e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5958e-08, dtype=torch.float64)
secont condition:: tensor(2.5958e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0823e-08, dtype=torch.float64)
secont condition:: tensor(2.0823e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9485e-08, dtype=torch.float64)
secont condition:: tensor(2.9485e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3445e-08, dtype=torch.float64)
secont condition:: tensor(4.3445e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6881e-08, dtype=torch.float64)
secont condition:: tensor(2.6881e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5040e-08, dtype=torch.float64)
secont condition:: tensor(5.5040e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4799e-08, dtype=torch.float64)
secont condition:: tensor(5.4799e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6684e-08, dtype=torch.float64)
secont condition:: tensor(3.6684e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8512e-08, dtype=torch.float64)
secont condition:: tensor(2.8512e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3956e-08, dtype=torch.float64)
secont condition:: tensor(2.3956e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4095e-08, dtype=torch.float64)
secont condition:: tensor(3.4095e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3836e-08, dtype=torch.float64)
secont condition:: tensor(4.3836e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3692e-08, dtype=torch.float64)
secont condition:: tensor(4.3692e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4879e-08, dtype=torch.float64)
secont condition:: tensor(3.4879e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6680e-08, dtype=torch.float64)
secont condition:: tensor(3.6680e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5675e-08, dtype=torch.float64)
secont condition:: tensor(5.5675e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3415e-08, dtype=torch.float64)
secont condition:: tensor(6.3415e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3682e-08, dtype=torch.float64)
secont condition:: tensor(5.3682e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0821e-08, dtype=torch.float64)
secont condition:: tensor(6.0821e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3586e-08, dtype=torch.float64)
secont condition:: tensor(5.3586e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0442e-08, dtype=torch.float64)
secont condition:: tensor(7.0442e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0840e-07, dtype=torch.float64)
secont condition:: tensor(1.0840e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8852e-08, dtype=torch.float64)
secont condition:: tensor(8.8852e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9939e-08, dtype=torch.float64)
secont condition:: tensor(6.9939e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7914e-08, dtype=torch.float64)
secont condition:: tensor(6.7914e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6381e-08, dtype=torch.float64)
secont condition:: tensor(7.6381e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8623e-08, dtype=torch.float64)
secont condition:: tensor(7.8623e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0055e-08, dtype=torch.float64)
secont condition:: tensor(9.0055e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4824e-08, dtype=torch.float64)
secont condition:: tensor(8.4824e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1323e-08, dtype=torch.float64)
secont condition:: tensor(7.1323e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8231e-08, dtype=torch.float64)
secont condition:: tensor(9.8231e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6628e-08, dtype=torch.float64)
secont condition:: tensor(9.6628e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5691e-08, dtype=torch.float64)
secont condition:: tensor(8.5691e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1285e-07, dtype=torch.float64)
secont condition:: tensor(1.1285e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1871e-08, dtype=torch.float64)
secont condition:: tensor(9.1871e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0299e-07, dtype=torch.float64)
secont condition:: tensor(1.0299e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9951436519622803
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1041e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.8831e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2199e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0790e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
deletion rate:: 0.001
python3 generate_rand_ids 0.001  MNIST 0
tensor([ 4225, 15364, 24198, 25355,  9231, 59791,  1425, 32785, 22931, 45072,
        18325, 46228,  6548, 27669, 59543, 40346, 18462, 33439, 53280, 28578,
        16034, 15139, 49186,  8362, 15274, 40876, 25902, 34484, 58046, 30016,
        31300, 41927, 25928, 40137, 16972, 41294, 30799, 11602, 20563, 46419,
         4056, 32472, 59102, 58464, 30305, 13669, 18791, 51561, 27114, 44907,
         2156,  7533, 47085, 36847, 35822, 47218, 10099, 35321, 22269, 11518])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198381
Test Avg. Loss: 0.000018, Accuracy: 0.950000
Train - Epoch 1, Batch: 0, Loss: 0.182210
Test Avg. Loss: 0.000017, Accuracy: 0.951600
Train - Epoch 2, Batch: 0, Loss: 0.175371
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.181497
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 4, Batch: 0, Loss: 0.177577
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 5, Batch: 0, Loss: 0.174718
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.174747
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.176529
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 8, Batch: 0, Loss: 0.173558
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.179471
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.179770
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 11, Batch: 0, Loss: 0.171468
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 12, Batch: 0, Loss: 0.176100
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.175206
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.176732
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.186123
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.180311
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.178829
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.174671
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 19, Batch: 0, Loss: 0.178404
Test Avg. Loss: 0.000017, Accuracy: 0.953000
training_time:: 19.384560346603394
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 13.997789859771729
time_baseline:: 14.042626142501831
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3794e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7868e-08, dtype=torch.float64)
secont condition:: tensor(1.7868e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5975e-08, dtype=torch.float64)
secont condition:: tensor(1.5975e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0749e-08, dtype=torch.float64)
secont condition:: tensor(1.0749e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6168e-08, dtype=torch.float64)
secont condition:: tensor(2.6168e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5050e-08, dtype=torch.float64)
secont condition:: tensor(3.5050e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5689e-08, dtype=torch.float64)
secont condition:: tensor(6.5689e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1953e-08, dtype=torch.float64)
secont condition:: tensor(3.1953e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2122e-08, dtype=torch.float64)
secont condition:: tensor(2.2122e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9051e-08, dtype=torch.float64)
secont condition:: tensor(1.9051e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8570e-08, dtype=torch.float64)
secont condition:: tensor(2.8570e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2781e-08, dtype=torch.float64)
secont condition:: tensor(4.2781e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7119e-08, dtype=torch.float64)
secont condition:: tensor(4.7119e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1517e-08, dtype=torch.float64)
secont condition:: tensor(6.1517e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3394e-08, dtype=torch.float64)
secont condition:: tensor(7.3394e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5199e-08, dtype=torch.float64)
secont condition:: tensor(5.5199e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3281e-08, dtype=torch.float64)
secont condition:: tensor(5.3281e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7804e-08, dtype=torch.float64)
secont condition:: tensor(6.7804e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5081e-08, dtype=torch.float64)
secont condition:: tensor(6.5081e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3214e-08, dtype=torch.float64)
secont condition:: tensor(6.3214e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8773e-08, dtype=torch.float64)
secont condition:: tensor(6.8773e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6393e-08, dtype=torch.float64)
secont condition:: tensor(8.6393e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0302e-07, dtype=torch.float64)
secont condition:: tensor(1.0302e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7626e-08, dtype=torch.float64)
secont condition:: tensor(8.7626e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3372e-08, dtype=torch.float64)
secont condition:: tensor(9.3372e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3740e-07, dtype=torch.float64)
secont condition:: tensor(1.3740e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3888e-07, dtype=torch.float64)
secont condition:: tensor(1.3888e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6134e-08, dtype=torch.float64)
secont condition:: tensor(9.6134e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1105e-07, dtype=torch.float64)
secont condition:: tensor(1.1105e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2207e-07, dtype=torch.float64)
secont condition:: tensor(1.2207e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1880e-07, dtype=torch.float64)
secont condition:: tensor(1.1880e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3711e-07, dtype=torch.float64)
secont condition:: tensor(1.3711e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6090e-07, dtype=torch.float64)
secont condition:: tensor(1.6090e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6678e-07, dtype=torch.float64)
secont condition:: tensor(1.6678e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5677e-07, dtype=torch.float64)
secont condition:: tensor(1.5677e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1126e-07, dtype=torch.float64)
secont condition:: tensor(2.1126e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5995e-07, dtype=torch.float64)
secont condition:: tensor(1.5995e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1871e-07, dtype=torch.float64)
secont condition:: tensor(1.1871e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6619e-07, dtype=torch.float64)
secont condition:: tensor(1.6619e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9525e-07, dtype=torch.float64)
secont condition:: tensor(1.9525e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7911e-07, dtype=torch.float64)
secont condition:: tensor(1.7911e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9684e-07, dtype=torch.float64)
secont condition:: tensor(1.9684e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0977e-07, dtype=torch.float64)
secont condition:: tensor(2.0977e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6588e-07, dtype=torch.float64)
secont condition:: tensor(2.6588e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4069e-07, dtype=torch.float64)
secont condition:: tensor(2.4069e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2109e-07, dtype=torch.float64)
secont condition:: tensor(2.2109e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2697e-07, dtype=torch.float64)
secont condition:: tensor(2.2697e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9980e-07, dtype=torch.float64)
secont condition:: tensor(2.9980e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4988e-07, dtype=torch.float64)
secont condition:: tensor(2.4988e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6715e-07, dtype=torch.float64)
secont condition:: tensor(2.6715e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6401e-07, dtype=torch.float64)
secont condition:: tensor(2.6401e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9405e-07, dtype=torch.float64)
secont condition:: tensor(2.9405e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2862e-07, dtype=torch.float64)
secont condition:: tensor(2.2862e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.8291704654693604
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7165e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5143e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.201182
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 1, Batch: 0, Loss: 0.181561
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.177576
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 3, Batch: 0, Loss: 0.176026
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.184673
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.175901
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.178372
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.176393
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.179506
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.176823
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 10, Batch: 0, Loss: 0.178337
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 11, Batch: 0, Loss: 0.175525
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.175963
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.176616
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 14, Batch: 0, Loss: 0.181149
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.178610
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.180191
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.175455
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.181538
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.177304
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.412659645080566
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.093931436538696
time_baseline:: 14.13805103302002
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6231e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0652e-08, dtype=torch.float64)
secont condition:: tensor(1.0652e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3062e-09, dtype=torch.float64)
secont condition:: tensor(8.3062e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0461e-08, dtype=torch.float64)
secont condition:: tensor(1.0461e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4828e-09, dtype=torch.float64)
secont condition:: tensor(8.4828e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7677e-08, dtype=torch.float64)
secont condition:: tensor(1.7677e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0568e-08, dtype=torch.float64)
secont condition:: tensor(2.0568e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6092e-08, dtype=torch.float64)
secont condition:: tensor(3.6092e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5818e-08, dtype=torch.float64)
secont condition:: tensor(2.5818e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4312e-08, dtype=torch.float64)
secont condition:: tensor(4.4312e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5472e-08, dtype=torch.float64)
secont condition:: tensor(5.5472e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4259e-08, dtype=torch.float64)
secont condition:: tensor(3.4259e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0642e-08, dtype=torch.float64)
secont condition:: tensor(5.0642e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0838e-08, dtype=torch.float64)
secont condition:: tensor(5.0838e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7015e-08, dtype=torch.float64)
secont condition:: tensor(6.7015e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6803e-08, dtype=torch.float64)
secont condition:: tensor(4.6803e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0080e-08, dtype=torch.float64)
secont condition:: tensor(9.0080e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9186e-08, dtype=torch.float64)
secont condition:: tensor(6.9186e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2204e-08, dtype=torch.float64)
secont condition:: tensor(7.2204e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0219e-07, dtype=torch.float64)
secont condition:: tensor(1.0219e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0540e-08, dtype=torch.float64)
secont condition:: tensor(8.0540e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1987e-07, dtype=torch.float64)
secont condition:: tensor(1.1987e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1412e-07, dtype=torch.float64)
secont condition:: tensor(1.1412e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0688e-07, dtype=torch.float64)
secont condition:: tensor(1.0688e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-07, dtype=torch.float64)
secont condition:: tensor(1.0369e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1550e-07, dtype=torch.float64)
secont condition:: tensor(1.1550e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6688e-08, dtype=torch.float64)
secont condition:: tensor(8.6688e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6393e-07, dtype=torch.float64)
secont condition:: tensor(1.6393e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2276e-07, dtype=torch.float64)
secont condition:: tensor(1.2276e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0321e-07, dtype=torch.float64)
secont condition:: tensor(1.0321e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0931e-08, dtype=torch.float64)
secont condition:: tensor(9.0931e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1450e-07, dtype=torch.float64)
secont condition:: tensor(1.1450e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6957e-07, dtype=torch.float64)
secont condition:: tensor(1.6957e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0412e-07, dtype=torch.float64)
secont condition:: tensor(2.0412e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4859e-07, dtype=torch.float64)
secont condition:: tensor(1.4859e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0021e-07, dtype=torch.float64)
secont condition:: tensor(2.0021e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8975e-07, dtype=torch.float64)
secont condition:: tensor(1.8975e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9415e-07, dtype=torch.float64)
secont condition:: tensor(1.9415e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9080e-07, dtype=torch.float64)
secont condition:: tensor(1.9080e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2496e-07, dtype=torch.float64)
secont condition:: tensor(2.2496e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4731e-07, dtype=torch.float64)
secont condition:: tensor(2.4731e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3206e-07, dtype=torch.float64)
secont condition:: tensor(2.3206e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1656e-07, dtype=torch.float64)
secont condition:: tensor(2.1656e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6384e-07, dtype=torch.float64)
secont condition:: tensor(2.6384e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8636e-07, dtype=torch.float64)
secont condition:: tensor(1.8636e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6047e-07, dtype=torch.float64)
secont condition:: tensor(2.6047e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3984e-07, dtype=torch.float64)
secont condition:: tensor(2.3984e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6156e-07, dtype=torch.float64)
secont condition:: tensor(2.6156e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1852e-07, dtype=torch.float64)
secont condition:: tensor(2.1852e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8151e-07, dtype=torch.float64)
secont condition:: tensor(2.8151e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4943e-07, dtype=torch.float64)
secont condition:: tensor(2.4943e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6883e-07, dtype=torch.float64)
secont condition:: tensor(2.6883e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.865576982498169
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1554e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5763e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6056e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.201149
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.184397
Test Avg. Loss: 0.000017, Accuracy: 0.951400
Train - Epoch 2, Batch: 0, Loss: 0.178946
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.175052
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 4, Batch: 0, Loss: 0.176260
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 5, Batch: 0, Loss: 0.180208
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.175008
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 7, Batch: 0, Loss: 0.177779
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 8, Batch: 0, Loss: 0.181536
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.174108
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 10, Batch: 0, Loss: 0.181082
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.174445
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.175033
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.173745
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 14, Batch: 0, Loss: 0.178891
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 15, Batch: 0, Loss: 0.177006
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.178399
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.184738
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 18, Batch: 0, Loss: 0.175065
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.181733
Test Avg. Loss: 0.000017, Accuracy: 0.952800
training_time:: 19.514695644378662
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 13.890597820281982
time_baseline:: 13.935269355773926
curr_diff: 0 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2555e-08, dtype=torch.float64)
secont condition:: tensor(2.2555e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2545e-08, dtype=torch.float64)
secont condition:: tensor(1.2545e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1057e-08, dtype=torch.float64)
secont condition:: tensor(1.1057e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9704e-09, dtype=torch.float64)
secont condition:: tensor(5.9704e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9870e-08, dtype=torch.float64)
secont condition:: tensor(2.9870e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4011e-08, dtype=torch.float64)
secont condition:: tensor(4.4011e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8988e-08, dtype=torch.float64)
secont condition:: tensor(2.8988e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2724e-08, dtype=torch.float64)
secont condition:: tensor(2.2724e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9866e-08, dtype=torch.float64)
secont condition:: tensor(1.9866e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5806e-08, dtype=torch.float64)
secont condition:: tensor(2.5806e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1830e-08, dtype=torch.float64)
secont condition:: tensor(3.1830e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9884e-08, dtype=torch.float64)
secont condition:: tensor(5.9884e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5686e-08, dtype=torch.float64)
secont condition:: tensor(8.5686e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0217e-08, dtype=torch.float64)
secont condition:: tensor(9.0217e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0197e-08, dtype=torch.float64)
secont condition:: tensor(7.0197e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5292e-08, dtype=torch.float64)
secont condition:: tensor(6.5292e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2004e-08, dtype=torch.float64)
secont condition:: tensor(8.2004e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0512e-07, dtype=torch.float64)
secont condition:: tensor(1.0512e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3574e-08, dtype=torch.float64)
secont condition:: tensor(8.3574e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0161e-08, dtype=torch.float64)
secont condition:: tensor(8.0161e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7492e-08, dtype=torch.float64)
secont condition:: tensor(8.7492e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0179e-08, dtype=torch.float64)
secont condition:: tensor(9.0179e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4760e-08, dtype=torch.float64)
secont condition:: tensor(9.4760e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5663e-08, dtype=torch.float64)
secont condition:: tensor(9.5663e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2825e-07, dtype=torch.float64)
secont condition:: tensor(1.2825e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8749e-08, dtype=torch.float64)
secont condition:: tensor(8.8749e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5879e-08, dtype=torch.float64)
secont condition:: tensor(5.5879e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5345e-07, dtype=torch.float64)
secont condition:: tensor(1.5345e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4514e-07, dtype=torch.float64)
secont condition:: tensor(1.4514e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5895e-07, dtype=torch.float64)
secont condition:: tensor(1.5895e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5745e-07, dtype=torch.float64)
secont condition:: tensor(1.5745e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3611e-07, dtype=torch.float64)
secont condition:: tensor(1.3611e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4874e-07, dtype=torch.float64)
secont condition:: tensor(1.4874e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7093e-07, dtype=torch.float64)
secont condition:: tensor(1.7093e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0237e-07, dtype=torch.float64)
secont condition:: tensor(1.0237e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9008e-07, dtype=torch.float64)
secont condition:: tensor(1.9008e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3586e-07, dtype=torch.float64)
secont condition:: tensor(2.3586e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5919e-07, dtype=torch.float64)
secont condition:: tensor(1.5919e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3748e-07, dtype=torch.float64)
secont condition:: tensor(2.3748e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6622e-07, dtype=torch.float64)
secont condition:: tensor(2.6622e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1603e-07, dtype=torch.float64)
secont condition:: tensor(2.1603e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9284e-07, dtype=torch.float64)
secont condition:: tensor(1.9284e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4140e-07, dtype=torch.float64)
secont condition:: tensor(2.4140e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3557e-07, dtype=torch.float64)
secont condition:: tensor(2.3557e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9191e-07, dtype=torch.float64)
secont condition:: tensor(1.9191e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4301e-07, dtype=torch.float64)
secont condition:: tensor(3.4301e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0653e-07, dtype=torch.float64)
secont condition:: tensor(3.0653e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0275e-07, dtype=torch.float64)
secont condition:: tensor(3.0275e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1166e-07, dtype=torch.float64)
secont condition:: tensor(3.1166e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7004e-07, dtype=torch.float64)
secont condition:: tensor(2.7004e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1995e-07, dtype=torch.float64)
secont condition:: tensor(3.1995e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9288854598999023
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.5610e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5350e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.200222
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.187277
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.178756
Test Avg. Loss: 0.000017, Accuracy: 0.952100
Train - Epoch 3, Batch: 0, Loss: 0.174297
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 4, Batch: 0, Loss: 0.171094
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.184751
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.176111
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 7, Batch: 0, Loss: 0.178558
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.177880
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 9, Batch: 0, Loss: 0.173578
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.171159
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.180356
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 12, Batch: 0, Loss: 0.171466
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.181820
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.178625
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.179379
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 16, Batch: 0, Loss: 0.175501
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 17, Batch: 0, Loss: 0.175135
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 18, Batch: 0, Loss: 0.182006
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 19, Batch: 0, Loss: 0.178586
Test Avg. Loss: 0.000017, Accuracy: 0.952700
training_time:: 19.433050632476807
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.253974199295044
time_baseline:: 14.299129962921143
curr_diff: 0 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4175e-09, dtype=torch.float64)
secont condition:: tensor(1.4175e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9450e-09, dtype=torch.float64)
secont condition:: tensor(1.9450e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6173e-08, dtype=torch.float64)
secont condition:: tensor(2.6173e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5968e-08, dtype=torch.float64)
secont condition:: tensor(1.5968e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1964e-08, dtype=torch.float64)
secont condition:: tensor(1.1964e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5109e-08, dtype=torch.float64)
secont condition:: tensor(1.5109e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7244e-08, dtype=torch.float64)
secont condition:: tensor(1.7244e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2797e-08, dtype=torch.float64)
secont condition:: tensor(6.2797e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4019e-08, dtype=torch.float64)
secont condition:: tensor(6.4019e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1366e-08, dtype=torch.float64)
secont condition:: tensor(7.1366e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4277e-08, dtype=torch.float64)
secont condition:: tensor(6.4277e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9045e-08, dtype=torch.float64)
secont condition:: tensor(7.9045e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1719e-07, dtype=torch.float64)
secont condition:: tensor(1.1719e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0386e-07, dtype=torch.float64)
secont condition:: tensor(1.0386e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5081e-08, dtype=torch.float64)
secont condition:: tensor(7.5081e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9615e-08, dtype=torch.float64)
secont condition:: tensor(5.9615e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6592e-08, dtype=torch.float64)
secont condition:: tensor(4.6592e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6005e-08, dtype=torch.float64)
secont condition:: tensor(7.6005e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0067e-08, dtype=torch.float64)
secont condition:: tensor(9.0067e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1700e-07, dtype=torch.float64)
secont condition:: tensor(1.1700e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0814e-07, dtype=torch.float64)
secont condition:: tensor(1.0814e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1620e-07, dtype=torch.float64)
secont condition:: tensor(1.1620e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3115e-08, dtype=torch.float64)
secont condition:: tensor(9.3115e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4716e-07, dtype=torch.float64)
secont condition:: tensor(1.4716e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6225e-07, dtype=torch.float64)
secont condition:: tensor(1.6225e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2448e-07, dtype=torch.float64)
secont condition:: tensor(1.2448e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4418e-07, dtype=torch.float64)
secont condition:: tensor(1.4418e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6683e-07, dtype=torch.float64)
secont condition:: tensor(1.6683e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3757e-07, dtype=torch.float64)
secont condition:: tensor(1.3757e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4688e-07, dtype=torch.float64)
secont condition:: tensor(1.4688e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7661e-07, dtype=torch.float64)
secont condition:: tensor(1.7661e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0240e-07, dtype=torch.float64)
secont condition:: tensor(2.0240e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7259e-07, dtype=torch.float64)
secont condition:: tensor(1.7259e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1093e-07, dtype=torch.float64)
secont condition:: tensor(2.1093e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9522e-07, dtype=torch.float64)
secont condition:: tensor(1.9522e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7751e-07, dtype=torch.float64)
secont condition:: tensor(1.7751e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5899e-07, dtype=torch.float64)
secont condition:: tensor(1.5899e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8317e-07, dtype=torch.float64)
secont condition:: tensor(1.8317e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5408e-07, dtype=torch.float64)
secont condition:: tensor(1.5408e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1684e-07, dtype=torch.float64)
secont condition:: tensor(2.1684e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5857e-07, dtype=torch.float64)
secont condition:: tensor(2.5857e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2131e-07, dtype=torch.float64)
secont condition:: tensor(2.2131e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6587e-07, dtype=torch.float64)
secont condition:: tensor(2.6587e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5289e-07, dtype=torch.float64)
secont condition:: tensor(2.5289e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2783e-07, dtype=torch.float64)
secont condition:: tensor(2.2783e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9954e-07, dtype=torch.float64)
secont condition:: tensor(2.9954e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9887e-07, dtype=torch.float64)
secont condition:: tensor(2.9887e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9396e-07, dtype=torch.float64)
secont condition:: tensor(2.9396e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2564e-07, dtype=torch.float64)
secont condition:: tensor(3.2564e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7158e-07, dtype=torch.float64)
secont condition:: tensor(2.7158e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8700e-07, dtype=torch.float64)
secont condition:: tensor(2.8700e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6153e-07, dtype=torch.float64)
secont condition:: tensor(3.6153e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.932673692703247
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7110e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.3980e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.9638e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 20 [0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.02] DNNModel MNIST 0.2 0.005 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.202559
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 1, Batch: 0, Loss: 0.173535
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 2, Batch: 0, Loss: 0.178913
Test Avg. Loss: 0.000017, Accuracy: 0.952000
Train - Epoch 3, Batch: 0, Loss: 0.179811
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 4, Batch: 0, Loss: 0.185566
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 5, Batch: 0, Loss: 0.180938
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 6, Batch: 0, Loss: 0.181057
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 7, Batch: 0, Loss: 0.182659
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.177309
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 9, Batch: 0, Loss: 0.181043
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 10, Batch: 0, Loss: 0.182000
Test Avg. Loss: 0.000017, Accuracy: 0.953000
Train - Epoch 11, Batch: 0, Loss: 0.174619
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 12, Batch: 0, Loss: 0.181528
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 13, Batch: 0, Loss: 0.176037
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.180904
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 15, Batch: 0, Loss: 0.179654
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 16, Batch: 0, Loss: 0.183937
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 17, Batch: 0, Loss: 0.172229
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 18, Batch: 0, Loss: 0.178572
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 19, Batch: 0, Loss: 0.174459
Test Avg. Loss: 0.000017, Accuracy: 0.952900
training_time:: 19.59640669822693
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type DNNModel. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
training time is 14.074548244476318
time_baseline:: 14.119274854660034
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952900
incremental updates::
python3 incremental_updates_provenance5.py 40 3
max_epoch:: 20
delta_size:: 60
max_epoch:: 20
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1652e-09, dtype=torch.float64)
secont condition:: tensor(8.1652e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5435e-09, dtype=torch.float64)
secont condition:: tensor(8.5435e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1396e-08, dtype=torch.float64)
secont condition:: tensor(1.1396e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9576e-09, dtype=torch.float64)
secont condition:: tensor(6.9576e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7360e-09, dtype=torch.float64)
secont condition:: tensor(8.7360e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2915e-08, dtype=torch.float64)
secont condition:: tensor(2.2915e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7555e-08, dtype=torch.float64)
secont condition:: tensor(2.7555e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5578e-08, dtype=torch.float64)
secont condition:: tensor(3.5578e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6458e-08, dtype=torch.float64)
secont condition:: tensor(3.6458e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1531e-08, dtype=torch.float64)
secont condition:: tensor(3.1531e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8876e-08, dtype=torch.float64)
secont condition:: tensor(3.8876e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2829e-08, dtype=torch.float64)
secont condition:: tensor(8.2829e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9716e-08, dtype=torch.float64)
secont condition:: tensor(7.9716e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8130e-08, dtype=torch.float64)
secont condition:: tensor(7.8130e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6232e-08, dtype=torch.float64)
secont condition:: tensor(6.6232e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4275e-08, dtype=torch.float64)
secont condition:: tensor(7.4275e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9175e-08, dtype=torch.float64)
secont condition:: tensor(7.9175e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0311e-07, dtype=torch.float64)
secont condition:: tensor(1.0311e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0010e-07, dtype=torch.float64)
secont condition:: tensor(1.0010e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8043e-08, dtype=torch.float64)
secont condition:: tensor(9.8043e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5991e-08, dtype=torch.float64)
secont condition:: tensor(7.5991e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0906e-08, dtype=torch.float64)
secont condition:: tensor(8.0906e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0145e-07, dtype=torch.float64)
secont condition:: tensor(1.0145e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0078e-07, dtype=torch.float64)
secont condition:: tensor(1.0078e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1761e-07, dtype=torch.float64)
secont condition:: tensor(1.1761e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1479e-07, dtype=torch.float64)
secont condition:: tensor(1.1479e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5257e-07, dtype=torch.float64)
secont condition:: tensor(1.5257e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5456e-07, dtype=torch.float64)
secont condition:: tensor(1.5456e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4063e-07, dtype=torch.float64)
secont condition:: tensor(1.4063e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2365e-07, dtype=torch.float64)
secont condition:: tensor(1.2365e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5252e-07, dtype=torch.float64)
secont condition:: tensor(1.5252e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3037e-07, dtype=torch.float64)
secont condition:: tensor(1.3037e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1573e-07, dtype=torch.float64)
secont condition:: tensor(1.1573e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1696e-07, dtype=torch.float64)
secont condition:: tensor(1.1696e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1498e-07, dtype=torch.float64)
secont condition:: tensor(1.1498e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8217e-07, dtype=torch.float64)
secont condition:: tensor(1.8217e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0696e-07, dtype=torch.float64)
secont condition:: tensor(2.0696e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0152e-07, dtype=torch.float64)
secont condition:: tensor(2.0152e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0871e-07, dtype=torch.float64)
secont condition:: tensor(2.0871e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1418e-07, dtype=torch.float64)
secont condition:: tensor(2.1418e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1815e-07, dtype=torch.float64)
secont condition:: tensor(2.1815e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3506e-07, dtype=torch.float64)
secont condition:: tensor(2.3506e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3221e-07, dtype=torch.float64)
secont condition:: tensor(2.3221e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6923e-07, dtype=torch.float64)
secont condition:: tensor(2.6923e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1901e-07, dtype=torch.float64)
secont condition:: tensor(3.1901e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1396e-07, dtype=torch.float64)
secont condition:: tensor(2.1396e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3093e-07, dtype=torch.float64)
secont condition:: tensor(2.3093e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2626e-07, dtype=torch.float64)
secont condition:: tensor(2.2626e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9307e-07, dtype=torch.float64)
secont condition:: tensor(2.9307e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3848e-07, dtype=torch.float64)
secont condition:: tensor(2.3848e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6915e-07, dtype=torch.float64)
secont condition:: tensor(2.6915e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.8526923656463623
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4956e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0757e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.2420e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4955e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000017, Accuracy: 0.952800
