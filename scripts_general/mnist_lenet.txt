varied deletion rate::
varied number of samples::
python3 benchmark_exp_more_complex_prep.py 0.001 256 2 [0.2,0.1,0.5,0.2,0.2,0.2,0.1,0.1]  LeNet5 MNIST 0.2 0.02 1 2
deletion rate:: 0.00002
random set 1
python3 generate_rand_ids 0.00002  MNIST
tensor([9338])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232836
Test Avg. Loss: 0.000025, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.275537
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.163206
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 3, Batch: 0, Loss: 0.157851
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.151901
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 5, Batch: 0, Loss: 0.154818
Test Avg. Loss: 0.000020, Accuracy: 0.940900
Train - Epoch 6, Batch: 0, Loss: 0.215726
Test Avg. Loss: 0.000040, Accuracy: 0.883400
Train - Epoch 7, Batch: 0, Loss: 0.423159
Test Avg. Loss: 0.000016, Accuracy: 0.956300
Train - Epoch 8, Batch: 0, Loss: 0.176960
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 9, Batch: 0, Loss: 0.160085
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 10, Batch: 0, Loss: 0.159223
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 11, Batch: 0, Loss: 0.155885
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 12, Batch: 0, Loss: 0.152698
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 13, Batch: 0, Loss: 0.151913
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.155055
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.159385
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 16, Batch: 0, Loss: 0.158756
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.153739
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.150304
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 19, Batch: 0, Loss: 0.153988
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 20, Batch: 0, Loss: 0.156384
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 21, Batch: 0, Loss: 0.147790
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 22, Batch: 0, Loss: 0.151958
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.157258
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.148413
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.148065
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.156128
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.152396
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.147382
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 169.63356590270996
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.43614172935486
time_baseline:: 117.5005989074707
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8418e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3422e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0696e-32, dtype=torch.float64)
secont condition:: tensor(3.0696e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.9714e-08, dtype=torch.float64)
secont condition:: tensor(5.9714e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3721e-08, dtype=torch.float64)
secont condition:: tensor(5.3721e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2963e-08, dtype=torch.float64)
secont condition:: tensor(5.2963e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4124e-08, dtype=torch.float64)
secont condition:: tensor(3.4124e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1850e-09, dtype=torch.float64)
secont condition:: tensor(6.1850e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.4617e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2370e-09, dtype=torch.float64)
secont condition:: tensor(5.2370e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4002e-09, dtype=torch.float64)
secont condition:: tensor(1.4002e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3494e-08, dtype=torch.float64)
secont condition:: tensor(2.3494e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2756e-08, dtype=torch.float64)
secont condition:: tensor(1.2756e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4127e-08, dtype=torch.float64)
secont condition:: tensor(1.4127e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7980e-08, dtype=torch.float64)
secont condition:: tensor(2.7980e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8843e-08, dtype=torch.float64)
secont condition:: tensor(1.8843e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3900e-09, dtype=torch.float64)
secont condition:: tensor(4.3900e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9563e-09, dtype=torch.float64)
secont condition:: tensor(5.9563e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4934e-09, dtype=torch.float64)
secont condition:: tensor(9.4934e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4655e-08, dtype=torch.float64)
secont condition:: tensor(2.4655e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9230e-06, dtype=torch.float64)
secont condition:: tensor(2.9230e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8471e-08, dtype=torch.float64)
secont condition:: tensor(1.8471e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5046e-08, dtype=torch.float64)
secont condition:: tensor(4.5046e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2969e-06, dtype=torch.float64)
secont condition:: tensor(1.2969e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1021e-07, dtype=torch.float64)
secont condition:: tensor(2.1021e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4995e-06, dtype=torch.float64)
secont condition:: tensor(5.4995e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0076e-06, dtype=torch.float64)
secont condition:: tensor(4.0076e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.3335e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2341e-05, dtype=torch.float64)
secont condition:: tensor(9.2341e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5695e-05, dtype=torch.float64)
secont condition:: tensor(6.5695e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7402e-05, dtype=torch.float64)
secont condition:: tensor(4.7402e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5752e-06, dtype=torch.float64)
secont condition:: tensor(4.5752e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4058e-06, dtype=torch.float64)
secont condition:: tensor(1.4058e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6502e-06, dtype=torch.float64)
secont condition:: tensor(1.6502e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1972e-06, dtype=torch.float64)
secont condition:: tensor(1.1972e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1196e-06, dtype=torch.float64)
secont condition:: tensor(1.1196e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7938e-07, dtype=torch.float64)
secont condition:: tensor(2.7938e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2082e-06, dtype=torch.float64)
secont condition:: tensor(1.2082e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2366e-07, dtype=torch.float64)
secont condition:: tensor(2.2366e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0728e-06, dtype=torch.float64)
secont condition:: tensor(1.0728e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7641e-07, dtype=torch.float64)
secont condition:: tensor(6.7641e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0108e-06, dtype=torch.float64)
secont condition:: tensor(2.0108e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2611e-06, dtype=torch.float64)
secont condition:: tensor(1.2611e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6293e-06, dtype=torch.float64)
secont condition:: tensor(1.6293e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8702e-07, dtype=torch.float64)
secont condition:: tensor(5.8702e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7881e-07, dtype=torch.float64)
secont condition:: tensor(2.7881e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2739e-06, dtype=torch.float64)
secont condition:: tensor(1.2739e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3854e-07, dtype=torch.float64)
secont condition:: tensor(2.3854e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4365e-06, dtype=torch.float64)
secont condition:: tensor(1.4365e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7212e-07, dtype=torch.float64)
secont condition:: tensor(1.7212e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6120e-07, dtype=torch.float64)
secont condition:: tensor(2.6120e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2852e-07, dtype=torch.float64)
secont condition:: tensor(4.2852e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2230e-07, dtype=torch.float64)
secont condition:: tensor(7.2230e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4034e-06, dtype=torch.float64)
secont condition:: tensor(1.4034e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3257e-07, dtype=torch.float64)
secont condition:: tensor(7.3257e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9509e-06, dtype=torch.float64)
secont condition:: tensor(5.9509e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5029e-07, dtype=torch.float64)
secont condition:: tensor(3.5029e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9507e-07, dtype=torch.float64)
secont condition:: tensor(2.9507e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4765e-07, dtype=torch.float64)
secont condition:: tensor(5.4765e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7858e-07, dtype=torch.float64)
secont condition:: tensor(9.7858e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3907e-07, dtype=torch.float64)
secont condition:: tensor(2.3907e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2990e-07, dtype=torch.float64)
secont condition:: tensor(1.2990e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3008e-07, dtype=torch.float64)
secont condition:: tensor(8.3008e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1486e-07, dtype=torch.float64)
secont condition:: tensor(2.1486e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7483e-07, dtype=torch.float64)
secont condition:: tensor(2.7483e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5790e-07, dtype=torch.float64)
secont condition:: tensor(1.5790e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2768e-07, dtype=torch.float64)
secont condition:: tensor(2.2768e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1036e-07, dtype=torch.float64)
secont condition:: tensor(2.1036e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0727e-07, dtype=torch.float64)
secont condition:: tensor(2.0727e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5603e-07, dtype=torch.float64)
secont condition:: tensor(2.5603e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4641e-07, dtype=torch.float64)
secont condition:: tensor(2.4641e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8806e-07, dtype=torch.float64)
secont condition:: tensor(1.8806e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7587e-07, dtype=torch.float64)
secont condition:: tensor(1.7587e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6229e-07, dtype=torch.float64)
secont condition:: tensor(9.6229e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2008e-07, dtype=torch.float64)
secont condition:: tensor(2.2008e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4050e-07, dtype=torch.float64)
secont condition:: tensor(2.4050e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2360e-07, dtype=torch.float64)
secont condition:: tensor(1.2360e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2670e-07, dtype=torch.float64)
secont condition:: tensor(5.2670e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9861e-07, dtype=torch.float64)
secont condition:: tensor(1.9861e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7990e-07, dtype=torch.float64)
secont condition:: tensor(2.7990e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.689696788787842
curr_diff: 0 tensor(1.3229e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.9598e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.4666e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2277e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.5491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.0917e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0893e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9564e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2853e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9071e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.5195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234512
Test Avg. Loss: 0.000024, Accuracy: 0.939400
Train - Epoch 1, Batch: 0, Loss: 0.265051
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.161483
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.161411
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.159540
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 5, Batch: 0, Loss: 0.166710
Test Avg. Loss: 0.000034, Accuracy: 0.887400
Train - Epoch 6, Batch: 0, Loss: 0.354699
Test Avg. Loss: 0.000031, Accuracy: 0.932500
Train - Epoch 7, Batch: 0, Loss: 0.336745
Test Avg. Loss: 0.000017, Accuracy: 0.954400
Train - Epoch 8, Batch: 0, Loss: 0.181923
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 9, Batch: 0, Loss: 0.161926
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 10, Batch: 0, Loss: 0.159381
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 11, Batch: 0, Loss: 0.162456
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.157342
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.162496
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.151912
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 15, Batch: 0, Loss: 0.154364
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.155762
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.156093
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 18, Batch: 0, Loss: 0.152349
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.160241
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.158395
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.151500
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.151600
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 23, Batch: 0, Loss: 0.154973
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.150470
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.149367
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 26, Batch: 0, Loss: 0.155849
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.153660
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.151195
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.151120
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 171.5586760044098
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.5485143661499
time_baseline:: 116.6148431301117
curr_diff: 0 tensor(8.4047e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5462e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3848e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.8352e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2763e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4092e-08, dtype=torch.float64)
secont condition:: tensor(4.4092e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9336e-08, dtype=torch.float64)
secont condition:: tensor(1.9336e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3226e-08, dtype=torch.float64)
secont condition:: tensor(1.3226e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3848e-09, dtype=torch.float64)
secont condition:: tensor(8.3848e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6335e-08, dtype=torch.float64)
secont condition:: tensor(1.6335e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4842e-09, dtype=torch.float64)
secont condition:: tensor(4.4842e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4929e-08, dtype=torch.float64)
secont condition:: tensor(1.4929e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2200e-09, dtype=torch.float64)
secont condition:: tensor(5.2200e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4884e-09, dtype=torch.float64)
secont condition:: tensor(1.4884e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1187e-09, dtype=torch.float64)
secont condition:: tensor(7.1187e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8782e-09, dtype=torch.float64)
secont condition:: tensor(6.8782e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4816e-08, dtype=torch.float64)
secont condition:: tensor(1.4816e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4010e-09, dtype=torch.float64)
secont condition:: tensor(8.4010e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0862e-09, dtype=torch.float64)
secont condition:: tensor(2.0862e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.2290e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7456e-08, dtype=torch.float64)
secont condition:: tensor(1.7456e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7903e-09, dtype=torch.float64)
secont condition:: tensor(6.7903e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7408e-08, dtype=torch.float64)
secont condition:: tensor(1.7408e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9239e-08, dtype=torch.float64)
secont condition:: tensor(2.9239e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6752e-08, dtype=torch.float64)
secont condition:: tensor(3.6752e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2959e-08, dtype=torch.float64)
secont condition:: tensor(9.2959e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3337e-07, dtype=torch.float64)
secont condition:: tensor(2.3337e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9334e-07, dtype=torch.float64)
secont condition:: tensor(6.9334e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9130e-07, dtype=torch.float64)
secont condition:: tensor(8.9130e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1523e-06, dtype=torch.float64)
secont condition:: tensor(2.1523e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1273e-06, dtype=torch.float64)
secont condition:: tensor(5.1273e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3698e-07, dtype=torch.float64)
secont condition:: tensor(8.3698e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8943e-07, dtype=torch.float64)
secont condition:: tensor(1.8943e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9062e-07, dtype=torch.float64)
secont condition:: tensor(1.9062e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4170e-07, dtype=torch.float64)
secont condition:: tensor(1.4170e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2589e-07, dtype=torch.float64)
secont condition:: tensor(1.2589e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8258e-07, dtype=torch.float64)
secont condition:: tensor(2.8258e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1509e-07, dtype=torch.float64)
secont condition:: tensor(1.1509e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1651e-07, dtype=torch.float64)
secont condition:: tensor(1.1651e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0945e-09, dtype=torch.float64)
secont condition:: tensor(5.0945e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0708e-07, dtype=torch.float64)
secont condition:: tensor(1.0708e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6503e-08, dtype=torch.float64)
secont condition:: tensor(1.6503e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6019e-09, dtype=torch.float64)
secont condition:: tensor(3.6019e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1251e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3473e-07, dtype=torch.float64)
secont condition:: tensor(5.3473e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2633e-08, dtype=torch.float64)
secont condition:: tensor(3.2633e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1169e-07, dtype=torch.float64)
secont condition:: tensor(1.1169e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0432e-07, dtype=torch.float64)
secont condition:: tensor(1.0432e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8659e-08, dtype=torch.float64)
secont condition:: tensor(7.8659e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9967e-08, dtype=torch.float64)
secont condition:: tensor(4.9967e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1525e-07, dtype=torch.float64)
secont condition:: tensor(1.1525e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3329e-08, dtype=torch.float64)
secont condition:: tensor(9.3329e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3797e-08, dtype=torch.float64)
secont condition:: tensor(7.3797e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8498e-08, dtype=torch.float64)
secont condition:: tensor(1.8498e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3904e-09, dtype=torch.float64)
secont condition:: tensor(4.3904e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0621e-08, dtype=torch.float64)
secont condition:: tensor(2.0621e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1480e-08, dtype=torch.float64)
secont condition:: tensor(6.1480e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6457e-08, dtype=torch.float64)
secont condition:: tensor(5.6457e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7613e-08, dtype=torch.float64)
secont condition:: tensor(8.7613e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8999e-08, dtype=torch.float64)
secont condition:: tensor(2.8999e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0079e-08, dtype=torch.float64)
secont condition:: tensor(1.0079e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7837e-08, dtype=torch.float64)
secont condition:: tensor(1.7837e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3535e-08, dtype=torch.float64)
secont condition:: tensor(8.3535e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9248e-08, dtype=torch.float64)
secont condition:: tensor(7.9248e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2621e-09, dtype=torch.float64)
secont condition:: tensor(7.2621e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2294e-08, dtype=torch.float64)
secont condition:: tensor(9.2294e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9840e-08, dtype=torch.float64)
secont condition:: tensor(6.9840e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1247e-08, dtype=torch.float64)
secont condition:: tensor(5.1247e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0257e-08, dtype=torch.float64)
secont condition:: tensor(3.0257e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8075e-08, dtype=torch.float64)
secont condition:: tensor(4.8075e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0411e-08, dtype=torch.float64)
secont condition:: tensor(4.0411e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6827e-08, dtype=torch.float64)
secont condition:: tensor(5.6827e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0489e-08, dtype=torch.float64)
secont condition:: tensor(6.0489e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3751e-08, dtype=torch.float64)
secont condition:: tensor(4.3751e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2167e-08, dtype=torch.float64)
secont condition:: tensor(1.2167e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7047e-08, dtype=torch.float64)
secont condition:: tensor(1.7047e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6501e-08, dtype=torch.float64)
secont condition:: tensor(3.6501e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1207e-08, dtype=torch.float64)
secont condition:: tensor(4.1207e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1079e-08, dtype=torch.float64)
secont condition:: tensor(4.1079e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6733e-08, dtype=torch.float64)
secont condition:: tensor(4.6733e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3990e-08, dtype=torch.float64)
secont condition:: tensor(2.3990e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3137e-08, dtype=torch.float64)
secont condition:: tensor(2.3137e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.311333417892456
curr_diff: 0 tensor(1.3545e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3957e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4038e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7334e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.6965e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6023e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.2133e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0816e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4518e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3003e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.2181e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.9166e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239691
Test Avg. Loss: 0.000023, Accuracy: 0.945300
Train - Epoch 1, Batch: 0, Loss: 0.241001
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 2, Batch: 0, Loss: 0.170931
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.152994
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 4, Batch: 0, Loss: 0.164008
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.151660
Test Avg. Loss: 0.000017, Accuracy: 0.946400
Train - Epoch 6, Batch: 0, Loss: 0.182051
Test Avg. Loss: 0.000059, Accuracy: 0.887400
Train - Epoch 7, Batch: 0, Loss: 0.616060
Test Avg. Loss: 0.000017, Accuracy: 0.953900
Train - Epoch 8, Batch: 0, Loss: 0.182470
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 9, Batch: 0, Loss: 0.167140
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 10, Batch: 0, Loss: 0.162094
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.156969
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 12, Batch: 0, Loss: 0.159032
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 13, Batch: 0, Loss: 0.158634
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.161388
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 15, Batch: 0, Loss: 0.155532
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 16, Batch: 0, Loss: 0.154084
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.151380
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.153176
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.149522
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.149878
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.153923
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 22, Batch: 0, Loss: 0.156281
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.157933
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 24, Batch: 0, Loss: 0.154788
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.155027
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 26, Batch: 0, Loss: 0.152097
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 27, Batch: 0, Loss: 0.149971
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.151124
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 29, Batch: 0, Loss: 0.154656
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 169.29483914375305
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.07551789283752
time_baseline:: 117.1398913860321
curr_diff: 0 tensor(4.6977e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3412e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6835e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.7340e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.3396e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4113e-32, dtype=torch.float64)
secont condition:: tensor(1.4113e-32, dtype=torch.float64)
curr_secont condition:: tensor(-1.6529e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.5929e-09, dtype=torch.float64)
secont condition:: tensor(5.5929e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3567e-09, dtype=torch.float64)
secont condition:: tensor(6.3567e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6831e-09, dtype=torch.float64)
secont condition:: tensor(3.6831e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1558e-09, dtype=torch.float64)
secont condition:: tensor(1.1558e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0845e-10, dtype=torch.float64)
secont condition:: tensor(5.0845e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8452e-09, dtype=torch.float64)
secont condition:: tensor(1.8452e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5105e-09, dtype=torch.float64)
secont condition:: tensor(2.5105e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7774e-09, dtype=torch.float64)
secont condition:: tensor(5.7774e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8853e-09, dtype=torch.float64)
secont condition:: tensor(6.8853e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7395e-10, dtype=torch.float64)
secont condition:: tensor(3.7395e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3663e-09, dtype=torch.float64)
secont condition:: tensor(5.3663e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5698e-09, dtype=torch.float64)
secont condition:: tensor(2.5698e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7646e-09, dtype=torch.float64)
secont condition:: tensor(3.7646e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8997e-09, dtype=torch.float64)
secont condition:: tensor(4.8997e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1365e-09, dtype=torch.float64)
secont condition:: tensor(1.1365e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6911e-09, dtype=torch.float64)
secont condition:: tensor(3.6911e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0248e-09, dtype=torch.float64)
secont condition:: tensor(6.0248e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5662e-08, dtype=torch.float64)
secont condition:: tensor(1.5662e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9199e-09, dtype=torch.float64)
secont condition:: tensor(6.9199e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4385e-08, dtype=torch.float64)
secont condition:: tensor(1.4385e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7945e-08, dtype=torch.float64)
secont condition:: tensor(2.7945e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1236e-08, dtype=torch.float64)
secont condition:: tensor(5.1236e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7167e-07, dtype=torch.float64)
secont condition:: tensor(1.7167e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6613e-07, dtype=torch.float64)
secont condition:: tensor(5.6613e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.4878e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7925e-06, dtype=torch.float64)
secont condition:: tensor(6.7925e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1153e-07, dtype=torch.float64)
secont condition:: tensor(9.1153e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1034e-07, dtype=torch.float64)
secont condition:: tensor(2.1034e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0078e-07, dtype=torch.float64)
secont condition:: tensor(1.0078e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8330e-08, dtype=torch.float64)
secont condition:: tensor(8.8330e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8160e-08, dtype=torch.float64)
secont condition:: tensor(2.8160e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0279e-07, dtype=torch.float64)
secont condition:: tensor(1.0279e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9769e-08, dtype=torch.float64)
secont condition:: tensor(8.9769e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1349e-08, dtype=torch.float64)
secont condition:: tensor(7.1349e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1803e-07, dtype=torch.float64)
secont condition:: tensor(1.1803e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6806e-08, dtype=torch.float64)
secont condition:: tensor(3.6806e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0623e-07, dtype=torch.float64)
secont condition:: tensor(1.0623e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1392e-07, dtype=torch.float64)
secont condition:: tensor(1.1392e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0380e-07, dtype=torch.float64)
secont condition:: tensor(1.0380e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6314e-08, dtype=torch.float64)
secont condition:: tensor(6.6314e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4932e-08, dtype=torch.float64)
secont condition:: tensor(1.4932e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2938e-08, dtype=torch.float64)
secont condition:: tensor(2.2938e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0954e-08, dtype=torch.float64)
secont condition:: tensor(8.0954e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9913e-08, dtype=torch.float64)
secont condition:: tensor(6.9913e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7521e-08, dtype=torch.float64)
secont condition:: tensor(6.7521e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7061e-08, dtype=torch.float64)
secont condition:: tensor(9.7061e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5300e-07, dtype=torch.float64)
secont condition:: tensor(8.5300e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4917e-08, dtype=torch.float64)
secont condition:: tensor(4.4917e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.2678e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4456e-08, dtype=torch.float64)
secont condition:: tensor(6.4456e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5942e-08, dtype=torch.float64)
secont condition:: tensor(5.5942e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0077e-08, dtype=torch.float64)
secont condition:: tensor(3.0077e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7290e-08, dtype=torch.float64)
secont condition:: tensor(5.7290e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7032e-08, dtype=torch.float64)
secont condition:: tensor(4.7032e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0486e-08, dtype=torch.float64)
secont condition:: tensor(1.0486e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8130e-08, dtype=torch.float64)
secont condition:: tensor(4.8130e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6876e-08, dtype=torch.float64)
secont condition:: tensor(6.6876e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8529e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3160e-08, dtype=torch.float64)
secont condition:: tensor(3.3160e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3073e-08, dtype=torch.float64)
secont condition:: tensor(5.3073e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1900e-08, dtype=torch.float64)
secont condition:: tensor(4.1900e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6388e-08, dtype=torch.float64)
secont condition:: tensor(2.6388e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.6667e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5443e-09, dtype=torch.float64)
secont condition:: tensor(5.5443e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9397e-08, dtype=torch.float64)
secont condition:: tensor(2.9397e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7140e-08, dtype=torch.float64)
secont condition:: tensor(2.7140e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9595e-08, dtype=torch.float64)
secont condition:: tensor(1.9595e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.8064e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7794e-08, dtype=torch.float64)
secont condition:: tensor(4.7794e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.1618e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9474e-08, dtype=torch.float64)
secont condition:: tensor(1.9474e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8440e-08, dtype=torch.float64)
secont condition:: tensor(3.8440e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8921e-08, dtype=torch.float64)
secont condition:: tensor(3.8921e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5683e-08, dtype=torch.float64)
secont condition:: tensor(2.5683e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.3906e-11, dtype=torch.float64)
curr_secont condition:: tensor(-5.2620e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8360e-08, dtype=torch.float64)
secont condition:: tensor(1.8360e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.1800e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5283e-08, dtype=torch.float64)
secont condition:: tensor(1.5283e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5135e-10, dtype=torch.float64)
secont condition:: tensor(8.5135e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6413e-08, dtype=torch.float64)
secont condition:: tensor(2.6413e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5205e-08, dtype=torch.float64)
secont condition:: tensor(2.5205e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 32.001086473464966
curr_diff: 0 tensor(8.3865e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8718e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2929e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8830e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1371e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.3558e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.1428e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8061e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4759e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.7122e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5350e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5840e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3678e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.8561e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.5315e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232849
Test Avg. Loss: 0.000025, Accuracy: 0.935500
Train - Epoch 1, Batch: 0, Loss: 0.272215
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.158606
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 3, Batch: 0, Loss: 0.164758
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 4, Batch: 0, Loss: 0.163210
Test Avg. Loss: 0.000017, Accuracy: 0.949500
Train - Epoch 5, Batch: 0, Loss: 0.184525
Test Avg. Loss: 0.000071, Accuracy: 0.740100
Train - Epoch 6, Batch: 0, Loss: 0.739504
Test Avg. Loss: 0.000017, Accuracy: 0.955200
Train - Epoch 7, Batch: 0, Loss: 0.186266
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 8, Batch: 0, Loss: 0.163096
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 9, Batch: 0, Loss: 0.164355
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 10, Batch: 0, Loss: 0.151818
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 11, Batch: 0, Loss: 0.153916
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 12, Batch: 0, Loss: 0.154254
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 13, Batch: 0, Loss: 0.152373
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.152277
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 15, Batch: 0, Loss: 0.157888
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 16, Batch: 0, Loss: 0.150374
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.155541
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 18, Batch: 0, Loss: 0.152489
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 19, Batch: 0, Loss: 0.152479
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 20, Batch: 0, Loss: 0.155503
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 21, Batch: 0, Loss: 0.153112
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.157731
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.151599
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.150272
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.153842
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 26, Batch: 0, Loss: 0.153823
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 27, Batch: 0, Loss: 0.154967
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.156714
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 178.5119445323944
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.09000968933105
time_baseline:: 116.1556384563446
curr_diff: 0 tensor(6.9429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.4059e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7267e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.0857e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2418e-31, dtype=torch.float64)
secont condition:: tensor(1.2418e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.9607e-08, dtype=torch.float64)
secont condition:: tensor(4.9607e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2665e-08, dtype=torch.float64)
secont condition:: tensor(3.2665e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8609e-08, dtype=torch.float64)
secont condition:: tensor(1.8609e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2588e-08, dtype=torch.float64)
secont condition:: tensor(2.2588e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5823e-08, dtype=torch.float64)
secont condition:: tensor(1.5823e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2376e-09, dtype=torch.float64)
secont condition:: tensor(2.2376e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2752e-09, dtype=torch.float64)
secont condition:: tensor(7.2752e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4103e-09, dtype=torch.float64)
secont condition:: tensor(7.4103e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2413e-10, dtype=torch.float64)
secont condition:: tensor(3.2413e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1759e-09, dtype=torch.float64)
secont condition:: tensor(3.1759e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1916e-09, dtype=torch.float64)
secont condition:: tensor(1.1916e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8161e-09, dtype=torch.float64)
secont condition:: tensor(7.8161e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3720e-08, dtype=torch.float64)
secont condition:: tensor(1.3720e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.9480e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4256e-08, dtype=torch.float64)
secont condition:: tensor(1.4256e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9194e-08, dtype=torch.float64)
secont condition:: tensor(1.9194e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5348e-09, dtype=torch.float64)
secont condition:: tensor(2.5348e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4428e-08, dtype=torch.float64)
secont condition:: tensor(3.4428e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9542e-08, dtype=torch.float64)
secont condition:: tensor(3.9542e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0116e-08, dtype=torch.float64)
secont condition:: tensor(9.0116e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9546e-07, dtype=torch.float64)
secont condition:: tensor(2.9546e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2191e-07, dtype=torch.float64)
secont condition:: tensor(7.2191e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2180e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1998e-06, dtype=torch.float64)
secont condition:: tensor(6.1998e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3794e-06, dtype=torch.float64)
secont condition:: tensor(1.3794e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4616e-07, dtype=torch.float64)
secont condition:: tensor(1.4616e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8979e-08, dtype=torch.float64)
secont condition:: tensor(5.8979e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2476e-08, dtype=torch.float64)
secont condition:: tensor(6.2476e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4387e-08, dtype=torch.float64)
secont condition:: tensor(9.4387e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1389e-09, dtype=torch.float64)
secont condition:: tensor(7.1389e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0852e-07, dtype=torch.float64)
secont condition:: tensor(1.0852e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0971e-08, dtype=torch.float64)
secont condition:: tensor(4.0971e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1143e-07, dtype=torch.float64)
secont condition:: tensor(1.1143e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6417e-09, dtype=torch.float64)
secont condition:: tensor(4.6417e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7199e-08, dtype=torch.float64)
secont condition:: tensor(6.7199e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0921e-08, dtype=torch.float64)
secont condition:: tensor(9.0921e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9682e-08, dtype=torch.float64)
secont condition:: tensor(2.9682e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0106e-10, dtype=torch.float64)
secont condition:: tensor(1.0106e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2995e-08, dtype=torch.float64)
secont condition:: tensor(6.2995e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6144e-08, dtype=torch.float64)
secont condition:: tensor(2.6144e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2727e-08, dtype=torch.float64)
secont condition:: tensor(7.2727e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.5663e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2742e-07, dtype=torch.float64)
secont condition:: tensor(2.2742e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1769e-06, dtype=torch.float64)
secont condition:: tensor(7.1769e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.1985e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4839e-08, dtype=torch.float64)
secont condition:: tensor(4.4839e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0004e-07, dtype=torch.float64)
secont condition:: tensor(1.0004e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4700e-08, dtype=torch.float64)
secont condition:: tensor(5.4700e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1776e-08, dtype=torch.float64)
secont condition:: tensor(6.1776e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5975e-08, dtype=torch.float64)
secont condition:: tensor(6.5975e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5230e-08, dtype=torch.float64)
secont condition:: tensor(5.5230e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4658e-08, dtype=torch.float64)
secont condition:: tensor(5.4658e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0996e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.0162e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9284e-07, dtype=torch.float64)
secont condition:: tensor(9.9284e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0574e-08, dtype=torch.float64)
secont condition:: tensor(3.0574e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9419e-08, dtype=torch.float64)
secont condition:: tensor(7.9419e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8560e-06, dtype=torch.float64)
secont condition:: tensor(5.8560e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0285e-08, dtype=torch.float64)
secont condition:: tensor(3.0285e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9893e-08, dtype=torch.float64)
secont condition:: tensor(5.9893e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6399e-08, dtype=torch.float64)
secont condition:: tensor(7.6399e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.7516e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5269e-08, dtype=torch.float64)
secont condition:: tensor(1.5269e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0264e-08, dtype=torch.float64)
secont condition:: tensor(1.0264e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0560e-08, dtype=torch.float64)
secont condition:: tensor(1.0560e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7783e-10, dtype=torch.float64)
secont condition:: tensor(4.7783e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1677e-08, dtype=torch.float64)
secont condition:: tensor(4.1677e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5217e-08, dtype=torch.float64)
secont condition:: tensor(4.5217e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8822e-08, dtype=torch.float64)
secont condition:: tensor(3.8822e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.9326e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5414e-08, dtype=torch.float64)
secont condition:: tensor(3.5414e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8240e-08, dtype=torch.float64)
secont condition:: tensor(2.8240e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.4307e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7712e-08, dtype=torch.float64)
secont condition:: tensor(2.7712e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0075e-08, dtype=torch.float64)
secont condition:: tensor(2.0075e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4109e-08, dtype=torch.float64)
secont condition:: tensor(3.4109e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7456e-08, dtype=torch.float64)
secont condition:: tensor(1.7456e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.0811e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5686e-08, dtype=torch.float64)
secont condition:: tensor(1.5686e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.30434560775757
curr_diff: 0 tensor(9.1102e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6728e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2847e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.6783e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.9895e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3322e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5539e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(7.3039e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3789e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8253e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2081e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236050
Test Avg. Loss: 0.000024, Accuracy: 0.940700
Train - Epoch 1, Batch: 0, Loss: 0.254717
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.173192
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.166473
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.154725
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 5, Batch: 0, Loss: 0.162533
Test Avg. Loss: 0.000020, Accuracy: 0.941600
Train - Epoch 6, Batch: 0, Loss: 0.224856
Test Avg. Loss: 0.000034, Accuracy: 0.920000
Train - Epoch 7, Batch: 0, Loss: 0.355022
Test Avg. Loss: 0.000016, Accuracy: 0.956000
Train - Epoch 8, Batch: 0, Loss: 0.172276
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 9, Batch: 0, Loss: 0.160819
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 10, Batch: 0, Loss: 0.163839
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 11, Batch: 0, Loss: 0.161381
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 12, Batch: 0, Loss: 0.155881
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 13, Batch: 0, Loss: 0.155751
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 14, Batch: 0, Loss: 0.155235
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.155989
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 16, Batch: 0, Loss: 0.158452
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 17, Batch: 0, Loss: 0.156104
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 18, Batch: 0, Loss: 0.151491
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.148551
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 20, Batch: 0, Loss: 0.148479
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 21, Batch: 0, Loss: 0.147876
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.160509
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 23, Batch: 0, Loss: 0.157557
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.150719
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 25, Batch: 0, Loss: 0.153430
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.162398
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.148275
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.155777
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.155336
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 169.96195125579834
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.58546566963196
time_baseline:: 116.65285849571228
curr_diff: 0 tensor(6.5312e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7018e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.8301e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.6829e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3648e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-32, dtype=torch.float64)
secont condition:: tensor(1.2950e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5244e-31, dtype=torch.float64)
secont condition:: tensor(2.5244e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.3698e-09, dtype=torch.float64)
secont condition:: tensor(6.3698e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0838e-08, dtype=torch.float64)
secont condition:: tensor(1.0838e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0683e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7868e-08, dtype=torch.float64)
secont condition:: tensor(1.7868e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1191e-09, dtype=torch.float64)
secont condition:: tensor(2.1191e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9299e-09, dtype=torch.float64)
secont condition:: tensor(1.9299e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6988e-10, dtype=torch.float64)
secont condition:: tensor(5.6988e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8729e-09, dtype=torch.float64)
secont condition:: tensor(2.8729e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.6346e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8776e-09, dtype=torch.float64)
secont condition:: tensor(3.8776e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0123e-08, dtype=torch.float64)
secont condition:: tensor(1.0123e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.9739e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.8785e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.4723e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9822e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1765e-08, dtype=torch.float64)
secont condition:: tensor(2.1765e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3433e-08, dtype=torch.float64)
secont condition:: tensor(1.3433e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6434e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7135e-08, dtype=torch.float64)
secont condition:: tensor(7.7135e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0695e-07, dtype=torch.float64)
secont condition:: tensor(1.0695e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6396e-08, dtype=torch.float64)
secont condition:: tensor(9.6396e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9199e-07, dtype=torch.float64)
secont condition:: tensor(2.9199e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0813e-06, dtype=torch.float64)
secont condition:: tensor(1.0813e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.2701e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2603e-05, dtype=torch.float64)
secont condition:: tensor(2.2603e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1309e-05, dtype=torch.float64)
secont condition:: tensor(1.1309e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6250e-06, dtype=torch.float64)
secont condition:: tensor(3.6250e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5134e-07, dtype=torch.float64)
secont condition:: tensor(5.5134e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9860e-07, dtype=torch.float64)
secont condition:: tensor(2.9860e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5130e-07, dtype=torch.float64)
secont condition:: tensor(3.5130e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1020e-07, dtype=torch.float64)
secont condition:: tensor(4.1020e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4039e-07, dtype=torch.float64)
secont condition:: tensor(1.4039e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2790e-08, dtype=torch.float64)
secont condition:: tensor(4.2790e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-07, dtype=torch.float64)
secont condition:: tensor(1.2036e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4152e-09, dtype=torch.float64)
secont condition:: tensor(3.4152e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1905e-07, dtype=torch.float64)
secont condition:: tensor(1.1905e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5594e-07, dtype=torch.float64)
secont condition:: tensor(9.5594e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2975e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3980e-07, dtype=torch.float64)
secont condition:: tensor(1.3980e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.5647e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4056e-08, dtype=torch.float64)
secont condition:: tensor(2.4056e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.0675e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6206e-08, dtype=torch.float64)
secont condition:: tensor(5.6206e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5791e-07, dtype=torch.float64)
secont condition:: tensor(4.5791e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3145e-06, dtype=torch.float64)
secont condition:: tensor(7.3145e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8081e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1224e-07, dtype=torch.float64)
secont condition:: tensor(1.1224e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9097e-08, dtype=torch.float64)
secont condition:: tensor(5.9097e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4271e-07, dtype=torch.float64)
secont condition:: tensor(1.4271e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1274e-07, dtype=torch.float64)
secont condition:: tensor(2.1274e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.7067e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.8473e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6990e-07, dtype=torch.float64)
secont condition:: tensor(8.6990e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3894e-06, dtype=torch.float64)
secont condition:: tensor(8.3894e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1905e-07, dtype=torch.float64)
secont condition:: tensor(1.1905e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1708e-07, dtype=torch.float64)
secont condition:: tensor(1.1708e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.5709e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3953e-08, dtype=torch.float64)
secont condition:: tensor(5.3953e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6471e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3261e-08, dtype=torch.float64)
secont condition:: tensor(6.3261e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4210e-08, dtype=torch.float64)
secont condition:: tensor(3.4210e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8594e-08, dtype=torch.float64)
secont condition:: tensor(7.8594e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1830e-07, dtype=torch.float64)
secont condition:: tensor(4.1830e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0988e-07, dtype=torch.float64)
secont condition:: tensor(1.0988e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0334e-07, dtype=torch.float64)
secont condition:: tensor(1.0334e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9374e-08, dtype=torch.float64)
secont condition:: tensor(5.9374e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9066e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1134e-08, dtype=torch.float64)
secont condition:: tensor(7.1134e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7992e-08, dtype=torch.float64)
secont condition:: tensor(3.7992e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1386e-07, dtype=torch.float64)
secont condition:: tensor(1.1386e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3404e-11, dtype=torch.float64)
secont condition:: tensor(2.3404e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1093e-08, dtype=torch.float64)
secont condition:: tensor(2.1093e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0372e-07, dtype=torch.float64)
secont condition:: tensor(1.0372e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9390e-08, dtype=torch.float64)
secont condition:: tensor(5.9390e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8035e-08, dtype=torch.float64)
secont condition:: tensor(4.8035e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6474e-08, dtype=torch.float64)
secont condition:: tensor(7.6474e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0830e-08, dtype=torch.float64)
secont condition:: tensor(8.0830e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.654183864593506
curr_diff: 0 tensor(1.0978e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5336e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.9127e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.5446e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3521e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9423e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(7.0459e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9942e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.8444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7727e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.4715e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
random set 2
python3 generate_rand_ids 0.00002  MNIST
tensor([4687])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236371
Test Avg. Loss: 0.000023, Accuracy: 0.941300
Train - Epoch 1, Batch: 0, Loss: 0.250839
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.169566
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.160985
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.163513
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 5, Batch: 0, Loss: 0.164952
Test Avg. Loss: 0.000019, Accuracy: 0.940500
Train - Epoch 6, Batch: 0, Loss: 0.204630
Test Avg. Loss: 0.000081, Accuracy: 0.751400
Train - Epoch 7, Batch: 0, Loss: 0.829656
Test Avg. Loss: 0.000023, Accuracy: 0.942600
Train - Epoch 8, Batch: 0, Loss: 0.244730
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 9, Batch: 0, Loss: 0.190687
Test Avg. Loss: 0.000016, Accuracy: 0.951200
Train - Epoch 10, Batch: 0, Loss: 0.178437
Test Avg. Loss: 0.000016, Accuracy: 0.953600
Train - Epoch 11, Batch: 0, Loss: 0.180779
Test Avg. Loss: 0.000015, Accuracy: 0.954000
Train - Epoch 12, Batch: 0, Loss: 0.169403
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 13, Batch: 0, Loss: 0.162512
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 14, Batch: 0, Loss: 0.158911
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 15, Batch: 0, Loss: 0.162288
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 16, Batch: 0, Loss: 0.151019
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 17, Batch: 0, Loss: 0.158063
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 18, Batch: 0, Loss: 0.162459
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 19, Batch: 0, Loss: 0.158912
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 20, Batch: 0, Loss: 0.153999
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 21, Batch: 0, Loss: 0.159115
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 22, Batch: 0, Loss: 0.155643
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 23, Batch: 0, Loss: 0.157521
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 24, Batch: 0, Loss: 0.155513
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 25, Batch: 0, Loss: 0.157143
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 26, Batch: 0, Loss: 0.153245
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 27, Batch: 0, Loss: 0.156179
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 28, Batch: 0, Loss: 0.152408
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 29, Batch: 0, Loss: 0.159090
Test Avg. Loss: 0.000014, Accuracy: 0.960400
training_time:: 170.69263672828674
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.74767565727234
time_baseline:: 115.81450152397156
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.9811e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0043, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5003e-09, dtype=torch.float64)
secont condition:: tensor(4.5003e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6218e-08, dtype=torch.float64)
secont condition:: tensor(1.6218e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.0955e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4847e-08, dtype=torch.float64)
secont condition:: tensor(2.4847e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0842e-08, dtype=torch.float64)
secont condition:: tensor(1.0842e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8827e-09, dtype=torch.float64)
secont condition:: tensor(3.8827e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4823e-09, dtype=torch.float64)
secont condition:: tensor(2.4823e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8097e-10, dtype=torch.float64)
secont condition:: tensor(5.8097e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8859e-09, dtype=torch.float64)
secont condition:: tensor(6.8859e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2967e-09, dtype=torch.float64)
secont condition:: tensor(7.2967e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2215e-10, dtype=torch.float64)
secont condition:: tensor(5.2215e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1119e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2009e-08, dtype=torch.float64)
secont condition:: tensor(1.2009e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0891e-08, dtype=torch.float64)
secont condition:: tensor(1.0891e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6042e-08, dtype=torch.float64)
secont condition:: tensor(1.6042e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3430e-08, dtype=torch.float64)
secont condition:: tensor(1.3430e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1901e-08, dtype=torch.float64)
secont condition:: tensor(1.1901e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8627e-08, dtype=torch.float64)
secont condition:: tensor(1.8627e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8513e-08, dtype=torch.float64)
secont condition:: tensor(1.8513e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2984e-08, dtype=torch.float64)
secont condition:: tensor(4.2984e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8929e-08, dtype=torch.float64)
secont condition:: tensor(5.8929e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2671e-07, dtype=torch.float64)
secont condition:: tensor(1.2671e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2485e-07, dtype=torch.float64)
secont condition:: tensor(2.2485e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7814e-07, dtype=torch.float64)
secont condition:: tensor(5.7814e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6479e-06, dtype=torch.float64)
secont condition:: tensor(1.6479e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0290e-06, dtype=torch.float64)
secont condition:: tensor(1.0290e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2408e-05, dtype=torch.float64)
secont condition:: tensor(3.2408e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8183e-05, dtype=torch.float64)
secont condition:: tensor(1.8183e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.1832e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.5408e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8701e-06, dtype=torch.float64)
secont condition:: tensor(6.8701e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9204e-05, dtype=torch.float64)
secont condition:: tensor(1.9204e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2982e-05, dtype=torch.float64)
secont condition:: tensor(1.2982e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6174e-06, dtype=torch.float64)
secont condition:: tensor(3.6174e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9305e-06, dtype=torch.float64)
secont condition:: tensor(2.9305e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1174e-06, dtype=torch.float64)
secont condition:: tensor(2.1174e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0443e-06, dtype=torch.float64)
secont condition:: tensor(4.0443e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6619e-06, dtype=torch.float64)
secont condition:: tensor(1.6619e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2726e-06, dtype=torch.float64)
secont condition:: tensor(4.2726e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9618e-07, dtype=torch.float64)
secont condition:: tensor(4.9618e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5237e-06, dtype=torch.float64)
secont condition:: tensor(3.5237e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4525e-07, dtype=torch.float64)
secont condition:: tensor(7.4525e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8640e-06, dtype=torch.float64)
secont condition:: tensor(1.8640e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7708e-06, dtype=torch.float64)
secont condition:: tensor(2.7708e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3023e-06, dtype=torch.float64)
secont condition:: tensor(2.3023e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0526e-06, dtype=torch.float64)
secont condition:: tensor(2.0526e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3351e-06, dtype=torch.float64)
secont condition:: tensor(2.3351e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2483e-06, dtype=torch.float64)
secont condition:: tensor(2.2483e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3281e-06, dtype=torch.float64)
secont condition:: tensor(1.3281e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0739e-06, dtype=torch.float64)
secont condition:: tensor(1.0739e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9731e-06, dtype=torch.float64)
secont condition:: tensor(2.9731e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.8994e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7724e-06, dtype=torch.float64)
secont condition:: tensor(1.7724e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2619e-07, dtype=torch.float64)
secont condition:: tensor(6.2619e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3390e-06, dtype=torch.float64)
secont condition:: tensor(2.3390e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4805e-06, dtype=torch.float64)
secont condition:: tensor(1.4805e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8194e-07, dtype=torch.float64)
secont condition:: tensor(2.8194e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9946e-07, dtype=torch.float64)
secont condition:: tensor(7.9946e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6517e-07, dtype=torch.float64)
secont condition:: tensor(4.6517e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1390e-06, dtype=torch.float64)
secont condition:: tensor(1.1390e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3958e-07, dtype=torch.float64)
secont condition:: tensor(7.3958e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0570e-06, dtype=torch.float64)
secont condition:: tensor(2.0570e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5758e-06, dtype=torch.float64)
secont condition:: tensor(2.5758e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6596e-07, dtype=torch.float64)
secont condition:: tensor(9.6596e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8997e-07, dtype=torch.float64)
secont condition:: tensor(9.8997e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4746e-06, dtype=torch.float64)
secont condition:: tensor(4.4746e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6431e-07, dtype=torch.float64)
secont condition:: tensor(8.6431e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1971e-06, dtype=torch.float64)
secont condition:: tensor(1.1971e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2144e-06, dtype=torch.float64)
secont condition:: tensor(1.2144e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0654e-06, dtype=torch.float64)
secont condition:: tensor(2.0654e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6397e-06, dtype=torch.float64)
secont condition:: tensor(1.6397e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-06, dtype=torch.float64)
secont condition:: tensor(1.6679e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9659e-07, dtype=torch.float64)
secont condition:: tensor(7.9659e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6484e-06, dtype=torch.float64)
secont condition:: tensor(1.6484e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1330e-06, dtype=torch.float64)
secont condition:: tensor(1.1330e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0335e-06, dtype=torch.float64)
secont condition:: tensor(2.0335e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1917e-07, dtype=torch.float64)
secont condition:: tensor(7.1917e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4061e-06, dtype=torch.float64)
secont condition:: tensor(1.4061e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6900e-07, dtype=torch.float64)
secont condition:: tensor(6.6900e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.711987733840942
curr_diff: 0 tensor(4.9683e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.8153e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0967e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0767e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0136e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.0561e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0044, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960400
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238699
Test Avg. Loss: 0.000026, Accuracy: 0.936600
Train - Epoch 1, Batch: 0, Loss: 0.275952
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.171777
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 3, Batch: 0, Loss: 0.153036
Test Avg. Loss: 0.000014, Accuracy: 0.956700
Train - Epoch 4, Batch: 0, Loss: 0.154057
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 5, Batch: 0, Loss: 0.155416
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 6, Batch: 0, Loss: 0.161736
Test Avg. Loss: 0.000015, Accuracy: 0.953700
Train - Epoch 7, Batch: 0, Loss: 0.163711
Test Avg. Loss: 0.000117, Accuracy: 0.645200
Train - Epoch 8, Batch: 0, Loss: 1.178517
Test Avg. Loss: 0.000045, Accuracy: 0.878200
Train - Epoch 9, Batch: 0, Loss: 0.475749
Test Avg. Loss: 0.000027, Accuracy: 0.936400
Train - Epoch 10, Batch: 0, Loss: 0.287249
Test Avg. Loss: 0.000020, Accuracy: 0.948500
Train - Epoch 11, Batch: 0, Loss: 0.216053
Test Avg. Loss: 0.000018, Accuracy: 0.952500
Train - Epoch 12, Batch: 0, Loss: 0.195040
Test Avg. Loss: 0.000017, Accuracy: 0.954000
Train - Epoch 13, Batch: 0, Loss: 0.182692
Test Avg. Loss: 0.000016, Accuracy: 0.954600
Train - Epoch 14, Batch: 0, Loss: 0.175850
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 15, Batch: 0, Loss: 0.170164
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 16, Batch: 0, Loss: 0.164399
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 17, Batch: 0, Loss: 0.172079
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 18, Batch: 0, Loss: 0.163527
Test Avg. Loss: 0.000015, Accuracy: 0.958900
Train - Epoch 19, Batch: 0, Loss: 0.164177
Test Avg. Loss: 0.000015, Accuracy: 0.959100
Train - Epoch 20, Batch: 0, Loss: 0.160291
Test Avg. Loss: 0.000015, Accuracy: 0.959500
Train - Epoch 21, Batch: 0, Loss: 0.162623
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 22, Batch: 0, Loss: 0.163003
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 23, Batch: 0, Loss: 0.167322
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 24, Batch: 0, Loss: 0.163389
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 25, Batch: 0, Loss: 0.162556
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 26, Batch: 0, Loss: 0.163080
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 27, Batch: 0, Loss: 0.162651
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 28, Batch: 0, Loss: 0.158967
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 29, Batch: 0, Loss: 0.153867
Test Avg. Loss: 0.000014, Accuracy: 0.960400
training_time:: 170.75232338905334
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.10196352005005
time_baseline:: 118.16792130470276
curr_diff: 0 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0398, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0501, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0208, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0151, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0695, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0939e-32, dtype=torch.float64)
secont condition:: tensor(4.0939e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4375e-07, dtype=torch.float64)
secont condition:: tensor(1.4375e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4858e-08, dtype=torch.float64)
secont condition:: tensor(9.4858e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3817e-08, dtype=torch.float64)
secont condition:: tensor(7.3817e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4776e-08, dtype=torch.float64)
secont condition:: tensor(6.4776e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7799e-08, dtype=torch.float64)
secont condition:: tensor(1.7799e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5259e-09, dtype=torch.float64)
secont condition:: tensor(2.5259e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8842e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8081e-08, dtype=torch.float64)
secont condition:: tensor(4.8081e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8544e-08, dtype=torch.float64)
secont condition:: tensor(2.8544e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5965e-09, dtype=torch.float64)
secont condition:: tensor(8.5965e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.9648e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0974e-08, dtype=torch.float64)
secont condition:: tensor(1.0974e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.4851e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.6118e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9097e-08, dtype=torch.float64)
secont condition:: tensor(2.9097e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.4519e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4665e-08, dtype=torch.float64)
secont condition:: tensor(3.4665e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3965e-09, dtype=torch.float64)
secont condition:: tensor(9.3965e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0231e-08, dtype=torch.float64)
secont condition:: tensor(4.0231e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0517e-08, dtype=torch.float64)
secont condition:: tensor(6.0517e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1651e-07, dtype=torch.float64)
secont condition:: tensor(1.1651e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6498e-07, dtype=torch.float64)
secont condition:: tensor(1.6498e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5863e-07, dtype=torch.float64)
secont condition:: tensor(4.5863e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1936e-06, dtype=torch.float64)
secont condition:: tensor(1.1936e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8693e-06, dtype=torch.float64)
secont condition:: tensor(2.8693e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4214e-06, dtype=torch.float64)
secont condition:: tensor(7.4214e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1179e-05, dtype=torch.float64)
secont condition:: tensor(2.1179e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2091e-05, dtype=torch.float64)
secont condition:: tensor(7.2091e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0131, dtype=torch.float64)
secont condition:: tensor(0.0131, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0008, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(9.8225e-05, dtype=torch.float64)
secont condition:: tensor(9.8225e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6464e-05, dtype=torch.float64)
secont condition:: tensor(7.6464e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9295e-05, dtype=torch.float64)
secont condition:: tensor(1.9295e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.7113e-05, dtype=torch.float64)
secont condition:: tensor(6.7113e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.5201e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7334e-05, dtype=torch.float64)
secont condition:: tensor(3.7334e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(5.9520e-05, dtype=torch.float64)
secont condition:: tensor(5.9520e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(1.9465e-05, dtype=torch.float64)
secont condition:: tensor(1.9465e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.5245e-05, dtype=torch.float64)
secont condition:: tensor(7.5245e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9114e-05, dtype=torch.float64)
secont condition:: tensor(8.9114e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4805e-05, dtype=torch.float64)
secont condition:: tensor(4.4805e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(6.2665e-05, dtype=torch.float64)
secont condition:: tensor(6.2665e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6452e-05, dtype=torch.float64)
secont condition:: tensor(7.6452e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8332e-05, dtype=torch.float64)
secont condition:: tensor(2.8332e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2376e-05, dtype=torch.float64)
secont condition:: tensor(5.2376e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0388e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.1496e-05, dtype=torch.float64)
secont condition:: tensor(8.1496e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2238e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(2.5019e-05, dtype=torch.float64)
secont condition:: tensor(2.5019e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6319e-05, dtype=torch.float64)
secont condition:: tensor(6.6319e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0238e-05, dtype=torch.float64)
secont condition:: tensor(1.0238e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3280e-05, dtype=torch.float64)
secont condition:: tensor(1.3280e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9147e-05, dtype=torch.float64)
secont condition:: tensor(1.9147e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5157e-07, dtype=torch.float64)
secont condition:: tensor(6.5157e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5982e-05, dtype=torch.float64)
secont condition:: tensor(5.5982e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.5369e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0084e-05, dtype=torch.float64)
secont condition:: tensor(4.0084e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.686964988708496
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2269e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.4028e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.8575e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0041, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0387, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0498, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0210, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0037, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0155, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0688, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237452
Test Avg. Loss: 0.000022, Accuracy: 0.944500
Train - Epoch 1, Batch: 0, Loss: 0.237548
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.161625
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 3, Batch: 0, Loss: 0.163533
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 4, Batch: 0, Loss: 0.152335
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 5, Batch: 0, Loss: 0.152155
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 6, Batch: 0, Loss: 0.172843
Test Avg. Loss: 0.000116, Accuracy: 0.565400
Train - Epoch 7, Batch: 0, Loss: 1.198455
Test Avg. Loss: 0.000036, Accuracy: 0.899500
Train - Epoch 8, Batch: 0, Loss: 0.372819
Test Avg. Loss: 0.000018, Accuracy: 0.950300
Train - Epoch 9, Batch: 0, Loss: 0.203930
Test Avg. Loss: 0.000017, Accuracy: 0.950700
Train - Epoch 10, Batch: 0, Loss: 0.186857
Test Avg. Loss: 0.000017, Accuracy: 0.950900
Train - Epoch 11, Batch: 0, Loss: 0.176628
Test Avg. Loss: 0.000016, Accuracy: 0.951700
Train - Epoch 12, Batch: 0, Loss: 0.175427
Test Avg. Loss: 0.000016, Accuracy: 0.953200
Train - Epoch 13, Batch: 0, Loss: 0.175018
Test Avg. Loss: 0.000016, Accuracy: 0.954700
Train - Epoch 14, Batch: 0, Loss: 0.172502
Test Avg. Loss: 0.000015, Accuracy: 0.954300
Train - Epoch 15, Batch: 0, Loss: 0.165520
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 16, Batch: 0, Loss: 0.164431
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 17, Batch: 0, Loss: 0.162650
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 18, Batch: 0, Loss: 0.162122
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 19, Batch: 0, Loss: 0.162874
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 20, Batch: 0, Loss: 0.166275
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 21, Batch: 0, Loss: 0.164443
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 22, Batch: 0, Loss: 0.167046
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 23, Batch: 0, Loss: 0.163707
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 24, Batch: 0, Loss: 0.158504
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 25, Batch: 0, Loss: 0.163421
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 26, Batch: 0, Loss: 0.164759
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 27, Batch: 0, Loss: 0.158645
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 28, Batch: 0, Loss: 0.154076
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 29, Batch: 0, Loss: 0.162856
Test Avg. Loss: 0.000014, Accuracy: 0.958400
training_time:: 170.40159559249878
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.21390008926392
time_baseline:: 115.27813220024109
curr_diff: 0 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0091, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0116, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0047, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0167, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.958200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4638e-32, dtype=torch.float64)
secont condition:: tensor(1.4638e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9014e-32, dtype=torch.float64)
secont condition:: tensor(4.9014e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.0508e-09, dtype=torch.float64)
secont condition:: tensor(4.0508e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1377e-08, dtype=torch.float64)
secont condition:: tensor(1.1377e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0850e-08, dtype=torch.float64)
secont condition:: tensor(1.0850e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2174e-08, dtype=torch.float64)
secont condition:: tensor(1.2174e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6381e-09, dtype=torch.float64)
secont condition:: tensor(2.6381e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3196e-09, dtype=torch.float64)
secont condition:: tensor(8.3196e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8886e-09, dtype=torch.float64)
secont condition:: tensor(8.8886e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9607e-08, dtype=torch.float64)
secont condition:: tensor(1.9607e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6416e-10, dtype=torch.float64)
secont condition:: tensor(1.6416e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2915e-08, dtype=torch.float64)
secont condition:: tensor(1.2915e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7158e-09, dtype=torch.float64)
secont condition:: tensor(5.7158e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3943e-08, dtype=torch.float64)
secont condition:: tensor(1.3943e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4804e-08, dtype=torch.float64)
secont condition:: tensor(2.4804e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2874e-08, dtype=torch.float64)
secont condition:: tensor(2.2874e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2621e-08, dtype=torch.float64)
secont condition:: tensor(3.2621e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6055e-08, dtype=torch.float64)
secont condition:: tensor(3.6055e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1966e-08, dtype=torch.float64)
secont condition:: tensor(4.1966e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2974e-08, dtype=torch.float64)
secont condition:: tensor(6.2974e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0027e-08, dtype=torch.float64)
secont condition:: tensor(5.0027e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0564e-07, dtype=torch.float64)
secont condition:: tensor(1.0564e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3929e-07, dtype=torch.float64)
secont condition:: tensor(2.3929e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7119e-07, dtype=torch.float64)
secont condition:: tensor(6.7119e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3686e-06, dtype=torch.float64)
secont condition:: tensor(2.3686e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1674e-05, dtype=torch.float64)
secont condition:: tensor(1.1674e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.2955e-06, dtype=torch.float64)
secont condition:: tensor(6.2955e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(4.2932e-05, dtype=torch.float64)
secont condition:: tensor(4.2932e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.8884e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.2557e-05, dtype=torch.float64)
secont condition:: tensor(8.2557e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8551e-05, dtype=torch.float64)
secont condition:: tensor(5.8551e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8680e-05, dtype=torch.float64)
secont condition:: tensor(3.8680e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9893e-05, dtype=torch.float64)
secont condition:: tensor(5.9893e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8326e-05, dtype=torch.float64)
secont condition:: tensor(2.8326e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1214e-05, dtype=torch.float64)
secont condition:: tensor(4.1214e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6521e-05, dtype=torch.float64)
secont condition:: tensor(4.6521e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2082e-05, dtype=torch.float64)
secont condition:: tensor(3.2082e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3819e-05, dtype=torch.float64)
secont condition:: tensor(3.3819e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0681e-05, dtype=torch.float64)
secont condition:: tensor(3.0681e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6588e-05, dtype=torch.float64)
secont condition:: tensor(1.6588e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1467e-05, dtype=torch.float64)
secont condition:: tensor(2.1467e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6881e-05, dtype=torch.float64)
secont condition:: tensor(1.6881e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4130e-05, dtype=torch.float64)
secont condition:: tensor(1.4130e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0095e-05, dtype=torch.float64)
secont condition:: tensor(2.0095e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1571e-05, dtype=torch.float64)
secont condition:: tensor(1.1571e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6247e-05, dtype=torch.float64)
secont condition:: tensor(1.6247e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5982e-05, dtype=torch.float64)
secont condition:: tensor(1.5982e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1423e-05, dtype=torch.float64)
secont condition:: tensor(1.1423e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2571e-06, dtype=torch.float64)
secont condition:: tensor(4.2571e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9227e-06, dtype=torch.float64)
secont condition:: tensor(9.9227e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7842e-06, dtype=torch.float64)
secont condition:: tensor(5.7842e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1064e-06, dtype=torch.float64)
secont condition:: tensor(5.1064e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4412e-06, dtype=torch.float64)
secont condition:: tensor(2.4412e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.3042e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1518e-05, dtype=torch.float64)
secont condition:: tensor(1.1518e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6075e-06, dtype=torch.float64)
secont condition:: tensor(8.6075e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6561e-06, dtype=torch.float64)
secont condition:: tensor(3.6561e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1686e-05, dtype=torch.float64)
secont condition:: tensor(1.1686e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2647e-06, dtype=torch.float64)
secont condition:: tensor(3.2647e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9659e-06, dtype=torch.float64)
secont condition:: tensor(3.9659e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6188e-06, dtype=torch.float64)
secont condition:: tensor(4.6188e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9748e-06, dtype=torch.float64)
secont condition:: tensor(3.9748e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2211e-06, dtype=torch.float64)
secont condition:: tensor(4.2211e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.9239e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9542e-06, dtype=torch.float64)
secont condition:: tensor(6.9542e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.8779e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9164e-06, dtype=torch.float64)
secont condition:: tensor(3.9164e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1689e-05, dtype=torch.float64)
secont condition:: tensor(1.1689e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4791e-06, dtype=torch.float64)
secont condition:: tensor(1.4791e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.7907e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0573e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1481e-05, dtype=torch.float64)
secont condition:: tensor(1.1481e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3519e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1863e-06, dtype=torch.float64)
secont condition:: tensor(5.1863e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0274e-05, dtype=torch.float64)
secont condition:: tensor(1.0274e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.1122e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.52364158630371
curr_diff: 0 tensor(9.2758e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8137e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0810e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3432e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0303e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6015e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0083, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0116, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0164, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.958500
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241857
Test Avg. Loss: 0.000023, Accuracy: 0.943400
Train - Epoch 1, Batch: 0, Loss: 0.249695
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.168328
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.168443
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.163695
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 5, Batch: 0, Loss: 0.153068
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 6, Batch: 0, Loss: 0.166251
Test Avg. Loss: 0.000117, Accuracy: 0.581400
Train - Epoch 7, Batch: 0, Loss: 1.211306
Test Avg. Loss: 0.000053, Accuracy: 0.851500
Train - Epoch 8, Batch: 0, Loss: 0.553273
Test Avg. Loss: 0.000023, Accuracy: 0.942300
Train - Epoch 9, Batch: 0, Loss: 0.255440
Test Avg. Loss: 0.000020, Accuracy: 0.947100
Train - Epoch 10, Batch: 0, Loss: 0.213413
Test Avg. Loss: 0.000018, Accuracy: 0.948700
Train - Epoch 11, Batch: 0, Loss: 0.193096
Test Avg. Loss: 0.000017, Accuracy: 0.950500
Train - Epoch 12, Batch: 0, Loss: 0.186392
Test Avg. Loss: 0.000017, Accuracy: 0.950800
Train - Epoch 13, Batch: 0, Loss: 0.189077
Test Avg. Loss: 0.000016, Accuracy: 0.952400
Train - Epoch 14, Batch: 0, Loss: 0.174092
Test Avg. Loss: 0.000016, Accuracy: 0.953000
Train - Epoch 15, Batch: 0, Loss: 0.179058
Test Avg. Loss: 0.000016, Accuracy: 0.954800
Train - Epoch 16, Batch: 0, Loss: 0.170445
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 17, Batch: 0, Loss: 0.168549
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 18, Batch: 0, Loss: 0.165532
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 19, Batch: 0, Loss: 0.167914
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 20, Batch: 0, Loss: 0.162044
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 21, Batch: 0, Loss: 0.161619
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 22, Batch: 0, Loss: 0.166654
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 23, Batch: 0, Loss: 0.163163
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 24, Batch: 0, Loss: 0.162905
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 25, Batch: 0, Loss: 0.162122
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 26, Batch: 0, Loss: 0.159472
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 27, Batch: 0, Loss: 0.163070
Test Avg. Loss: 0.000015, Accuracy: 0.958900
Train - Epoch 28, Batch: 0, Loss: 0.164252
Test Avg. Loss: 0.000015, Accuracy: 0.958900
Train - Epoch 29, Batch: 0, Loss: 0.156601
Test Avg. Loss: 0.000015, Accuracy: 0.959000
training_time:: 170.09624409675598
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.26942253112793
time_baseline:: 116.33505868911743
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0043, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.959000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.9457e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4391e-07, dtype=torch.float64)
secont condition:: tensor(1.4391e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1433e-07, dtype=torch.float64)
secont condition:: tensor(1.1433e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0874e-08, dtype=torch.float64)
secont condition:: tensor(5.0874e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8387e-08, dtype=torch.float64)
secont condition:: tensor(2.8387e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9822e-09, dtype=torch.float64)
secont condition:: tensor(2.9822e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1930e-09, dtype=torch.float64)
secont condition:: tensor(7.1930e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2204e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3997e-09, dtype=torch.float64)
secont condition:: tensor(8.3997e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7036e-09, dtype=torch.float64)
secont condition:: tensor(6.7036e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3071e-09, dtype=torch.float64)
secont condition:: tensor(5.3071e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1937e-08, dtype=torch.float64)
secont condition:: tensor(3.1937e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3058e-08, dtype=torch.float64)
secont condition:: tensor(1.3058e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6642e-09, dtype=torch.float64)
secont condition:: tensor(3.6642e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1508e-08, dtype=torch.float64)
secont condition:: tensor(2.1508e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4318e-08, dtype=torch.float64)
secont condition:: tensor(2.4318e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9136e-08, dtype=torch.float64)
secont condition:: tensor(2.9136e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9342e-08, dtype=torch.float64)
secont condition:: tensor(1.9342e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5282e-08, dtype=torch.float64)
secont condition:: tensor(1.5282e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6314e-08, dtype=torch.float64)
secont condition:: tensor(3.6314e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5290e-08, dtype=torch.float64)
secont condition:: tensor(5.5290e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1812e-07, dtype=torch.float64)
secont condition:: tensor(1.1812e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2873e-07, dtype=torch.float64)
secont condition:: tensor(2.2873e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8097e-07, dtype=torch.float64)
secont condition:: tensor(5.8097e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3350e-06, dtype=torch.float64)
secont condition:: tensor(1.3350e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1602e-06, dtype=torch.float64)
secont condition:: tensor(4.1602e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.1560e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9357e-05, dtype=torch.float64)
secont condition:: tensor(7.9357e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.4490e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.2215e-05, dtype=torch.float64)
secont condition:: tensor(8.2215e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9571e-06, dtype=torch.float64)
secont condition:: tensor(8.9571e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1608e-06, dtype=torch.float64)
secont condition:: tensor(4.1608e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1597e-06, dtype=torch.float64)
secont condition:: tensor(4.1597e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9049e-06, dtype=torch.float64)
secont condition:: tensor(1.9049e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2557e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7585e-06, dtype=torch.float64)
secont condition:: tensor(1.7585e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2082e-06, dtype=torch.float64)
secont condition:: tensor(1.2082e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6840e-08, dtype=torch.float64)
secont condition:: tensor(7.6840e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6139e-06, dtype=torch.float64)
secont condition:: tensor(1.6139e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5044e-07, dtype=torch.float64)
secont condition:: tensor(6.5044e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6183e-06, dtype=torch.float64)
secont condition:: tensor(1.6183e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8005e-07, dtype=torch.float64)
secont condition:: tensor(9.8005e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2302e-07, dtype=torch.float64)
secont condition:: tensor(8.2302e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7689e-06, dtype=torch.float64)
secont condition:: tensor(2.7689e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6319e-07, dtype=torch.float64)
secont condition:: tensor(5.6319e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.2925e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6063e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4787e-07, dtype=torch.float64)
secont condition:: tensor(9.4787e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2198e-06, dtype=torch.float64)
secont condition:: tensor(1.2198e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9657e-07, dtype=torch.float64)
secont condition:: tensor(2.9657e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0775e-07, dtype=torch.float64)
secont condition:: tensor(5.0775e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3279e-06, dtype=torch.float64)
secont condition:: tensor(1.3279e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1311e-06, dtype=torch.float64)
secont condition:: tensor(1.1311e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1467e-07, dtype=torch.float64)
secont condition:: tensor(5.1467e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1472e-06, dtype=torch.float64)
secont condition:: tensor(1.1472e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9906e-07, dtype=torch.float64)
secont condition:: tensor(4.9906e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0752e-06, dtype=torch.float64)
secont condition:: tensor(1.0752e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4510e-08, dtype=torch.float64)
secont condition:: tensor(8.4510e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0875e-06, dtype=torch.float64)
secont condition:: tensor(1.0875e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1658e-06, dtype=torch.float64)
secont condition:: tensor(1.1658e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7591e-07, dtype=torch.float64)
secont condition:: tensor(6.7591e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9648e-07, dtype=torch.float64)
secont condition:: tensor(4.9648e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6208e-07, dtype=torch.float64)
secont condition:: tensor(6.6208e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7413e-07, dtype=torch.float64)
secont condition:: tensor(5.7413e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2953e-07, dtype=torch.float64)
secont condition:: tensor(3.2953e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7491e-07, dtype=torch.float64)
secont condition:: tensor(9.7491e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7936e-06, dtype=torch.float64)
secont condition:: tensor(1.7936e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1768e-07, dtype=torch.float64)
secont condition:: tensor(1.1768e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8290e-06, dtype=torch.float64)
secont condition:: tensor(1.8290e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9869e-07, dtype=torch.float64)
secont condition:: tensor(9.9869e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7449e-07, dtype=torch.float64)
secont condition:: tensor(4.7449e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0482e-06, dtype=torch.float64)
secont condition:: tensor(1.0482e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9060e-07, dtype=torch.float64)
secont condition:: tensor(4.9060e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1268e-07, dtype=torch.float64)
secont condition:: tensor(8.1268e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9929e-07, dtype=torch.float64)
secont condition:: tensor(3.9929e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-07, dtype=torch.float64)
secont condition:: tensor(5.2763e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.514410257339478
curr_diff: 0 tensor(3.4169e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4432e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2445e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9000e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.7627e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0044, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.958800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.244342
Test Avg. Loss: 0.000024, Accuracy: 0.941500
Train - Epoch 1, Batch: 0, Loss: 0.257377
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.162636
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 3, Batch: 0, Loss: 0.160790
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.152530
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 5, Batch: 0, Loss: 0.155084
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 6, Batch: 0, Loss: 0.166323
Test Avg. Loss: 0.000155, Accuracy: 0.627400
Train - Epoch 7, Batch: 0, Loss: 1.573124
Test Avg. Loss: 0.000021, Accuracy: 0.948800
Train - Epoch 8, Batch: 0, Loss: 0.232659
Test Avg. Loss: 0.000016, Accuracy: 0.953100
Train - Epoch 9, Batch: 0, Loss: 0.178283
Test Avg. Loss: 0.000016, Accuracy: 0.953400
Train - Epoch 10, Batch: 0, Loss: 0.173653
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 11, Batch: 0, Loss: 0.171507
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 12, Batch: 0, Loss: 0.159410
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 13, Batch: 0, Loss: 0.155842
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 14, Batch: 0, Loss: 0.165652
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 15, Batch: 0, Loss: 0.155463
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 16, Batch: 0, Loss: 0.165600
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 17, Batch: 0, Loss: 0.154926
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 18, Batch: 0, Loss: 0.162881
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 19, Batch: 0, Loss: 0.153966
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 20, Batch: 0, Loss: 0.159229
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 21, Batch: 0, Loss: 0.157022
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 22, Batch: 0, Loss: 0.159690
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 23, Batch: 0, Loss: 0.157200
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 24, Batch: 0, Loss: 0.153030
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 25, Batch: 0, Loss: 0.155413
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 26, Batch: 0, Loss: 0.158935
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 27, Batch: 0, Loss: 0.160007
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 28, Batch: 0, Loss: 0.147550
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 29, Batch: 0, Loss: 0.156321
Test Avg. Loss: 0.000014, Accuracy: 0.960300
training_time:: 167.67808437347412
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.02937436103821
time_baseline:: 115.09386157989502
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0055, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0359e-09, dtype=torch.float64)
secont condition:: tensor(4.0359e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3727e-08, dtype=torch.float64)
secont condition:: tensor(1.3727e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1185e-09, dtype=torch.float64)
secont condition:: tensor(2.1185e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3017e-08, dtype=torch.float64)
secont condition:: tensor(5.3017e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7262e-08, dtype=torch.float64)
secont condition:: tensor(1.7262e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7983e-09, dtype=torch.float64)
secont condition:: tensor(7.7983e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5034e-09, dtype=torch.float64)
secont condition:: tensor(2.5034e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6330e-08, dtype=torch.float64)
secont condition:: tensor(1.6330e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2478e-08, dtype=torch.float64)
secont condition:: tensor(2.2478e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8636e-08, dtype=torch.float64)
secont condition:: tensor(1.8636e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9462e-09, dtype=torch.float64)
secont condition:: tensor(8.9462e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8529e-09, dtype=torch.float64)
secont condition:: tensor(4.8529e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9040e-09, dtype=torch.float64)
secont condition:: tensor(7.9040e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0875e-08, dtype=torch.float64)
secont condition:: tensor(1.0875e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9321e-09, dtype=torch.float64)
secont condition:: tensor(7.9321e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5991e-09, dtype=torch.float64)
secont condition:: tensor(1.5991e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0841e-09, dtype=torch.float64)
secont condition:: tensor(8.0841e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.3008e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1404e-09, dtype=torch.float64)
secont condition:: tensor(9.1404e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4815e-08, dtype=torch.float64)
secont condition:: tensor(1.4815e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2825e-08, dtype=torch.float64)
secont condition:: tensor(1.2825e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5279e-08, dtype=torch.float64)
secont condition:: tensor(6.5279e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5609e-07, dtype=torch.float64)
secont condition:: tensor(1.5609e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1797e-07, dtype=torch.float64)
secont condition:: tensor(4.1797e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3521e-06, dtype=torch.float64)
secont condition:: tensor(1.3521e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5839e-06, dtype=torch.float64)
secont condition:: tensor(5.5839e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4599e-05, dtype=torch.float64)
secont condition:: tensor(2.4599e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.1880e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.8505e-05, dtype=torch.float64)
secont condition:: tensor(9.8505e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9077e-05, dtype=torch.float64)
secont condition:: tensor(5.9077e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9238e-05, dtype=torch.float64)
secont condition:: tensor(1.9238e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.6690e-06, dtype=torch.float64)
secont condition:: tensor(7.6690e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2857e-06, dtype=torch.float64)
secont condition:: tensor(6.2857e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7985e-06, dtype=torch.float64)
secont condition:: tensor(7.7985e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1422e-06, dtype=torch.float64)
secont condition:: tensor(3.1422e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2181e-06, dtype=torch.float64)
secont condition:: tensor(1.2181e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1952e-06, dtype=torch.float64)
secont condition:: tensor(4.1952e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3046e-06, dtype=torch.float64)
secont condition:: tensor(3.3046e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6197e-06, dtype=torch.float64)
secont condition:: tensor(2.6197e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8475e-06, dtype=torch.float64)
secont condition:: tensor(2.8475e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0069e-06, dtype=torch.float64)
secont condition:: tensor(3.0069e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1799e-06, dtype=torch.float64)
secont condition:: tensor(1.1799e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1643e-06, dtype=torch.float64)
secont condition:: tensor(2.1643e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2287e-06, dtype=torch.float64)
secont condition:: tensor(4.2287e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0373e-06, dtype=torch.float64)
secont condition:: tensor(3.0373e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3632e-06, dtype=torch.float64)
secont condition:: tensor(3.3632e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2380e-06, dtype=torch.float64)
secont condition:: tensor(1.2380e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7181e-07, dtype=torch.float64)
secont condition:: tensor(8.7181e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3425e-06, dtype=torch.float64)
secont condition:: tensor(1.3425e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0539e-06, dtype=torch.float64)
secont condition:: tensor(2.0539e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1525e-06, dtype=torch.float64)
secont condition:: tensor(2.1525e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8114e-06, dtype=torch.float64)
secont condition:: tensor(1.8114e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7913e-06, dtype=torch.float64)
secont condition:: tensor(1.7913e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8607e-07, dtype=torch.float64)
secont condition:: tensor(4.8607e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4803e-06, dtype=torch.float64)
secont condition:: tensor(2.4803e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9809e-06, dtype=torch.float64)
secont condition:: tensor(1.9809e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3707e-06, dtype=torch.float64)
secont condition:: tensor(2.3707e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2546e-07, dtype=torch.float64)
secont condition:: tensor(7.2546e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8212e-06, dtype=torch.float64)
secont condition:: tensor(1.8212e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8252e-06, dtype=torch.float64)
secont condition:: tensor(1.8252e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2712e-06, dtype=torch.float64)
secont condition:: tensor(2.2712e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6430e-07, dtype=torch.float64)
secont condition:: tensor(8.6430e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0839e-06, dtype=torch.float64)
secont condition:: tensor(1.0839e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7772e-07, dtype=torch.float64)
secont condition:: tensor(6.7772e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3226e-06, dtype=torch.float64)
secont condition:: tensor(2.3226e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8372e-06, dtype=torch.float64)
secont condition:: tensor(1.8372e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3314e-07, dtype=torch.float64)
secont condition:: tensor(3.3314e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3977e-06, dtype=torch.float64)
secont condition:: tensor(1.3977e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1403e-06, dtype=torch.float64)
secont condition:: tensor(1.1403e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8551e-06, dtype=torch.float64)
secont condition:: tensor(1.8551e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0697e-06, dtype=torch.float64)
secont condition:: tensor(1.0697e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5691e-07, dtype=torch.float64)
secont condition:: tensor(8.5691e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8433e-07, dtype=torch.float64)
secont condition:: tensor(4.8433e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4490e-07, dtype=torch.float64)
secont condition:: tensor(9.4490e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7528e-06, dtype=torch.float64)
secont condition:: tensor(1.7528e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7146e-07, dtype=torch.float64)
secont condition:: tensor(7.7146e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4182e-07, dtype=torch.float64)
secont condition:: tensor(9.4182e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.144968271255493
curr_diff: 0 tensor(2.9709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6115e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.0786e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0750e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.7033e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0057, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
random set 3
python3 generate_rand_ids 0.00002  MNIST
tensor([382])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235352
Test Avg. Loss: 0.000025, Accuracy: 0.936900
Train - Epoch 1, Batch: 0, Loss: 0.266573
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.172834
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 3, Batch: 0, Loss: 0.166660
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.167804
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 5, Batch: 0, Loss: 0.159265
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 6, Batch: 0, Loss: 0.158802
Test Avg. Loss: 0.000026, Accuracy: 0.914600
Train - Epoch 7, Batch: 0, Loss: 0.283665
Test Avg. Loss: 0.000059, Accuracy: 0.835600
Train - Epoch 8, Batch: 0, Loss: 0.603363
Test Avg. Loss: 0.000022, Accuracy: 0.943400
Train - Epoch 9, Batch: 0, Loss: 0.230269
Test Avg. Loss: 0.000019, Accuracy: 0.948700
Train - Epoch 10, Batch: 0, Loss: 0.204702
Test Avg. Loss: 0.000017, Accuracy: 0.949600
Train - Epoch 11, Batch: 0, Loss: 0.185587
Test Avg. Loss: 0.000017, Accuracy: 0.950300
Train - Epoch 12, Batch: 0, Loss: 0.190542
Test Avg. Loss: 0.000016, Accuracy: 0.951600
Train - Epoch 13, Batch: 0, Loss: 0.178614
Test Avg. Loss: 0.000016, Accuracy: 0.952400
Train - Epoch 14, Batch: 0, Loss: 0.172587
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 15, Batch: 0, Loss: 0.177339
Test Avg. Loss: 0.000015, Accuracy: 0.954300
Train - Epoch 16, Batch: 0, Loss: 0.172170
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 17, Batch: 0, Loss: 0.162897
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 18, Batch: 0, Loss: 0.160365
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 19, Batch: 0, Loss: 0.154720
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 20, Batch: 0, Loss: 0.165293
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 21, Batch: 0, Loss: 0.162247
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 22, Batch: 0, Loss: 0.158019
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 23, Batch: 0, Loss: 0.162459
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 24, Batch: 0, Loss: 0.160865
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 25, Batch: 0, Loss: 0.160182
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 26, Batch: 0, Loss: 0.157314
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 27, Batch: 0, Loss: 0.160290
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 28, Batch: 0, Loss: 0.159630
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 29, Batch: 0, Loss: 0.159386
Test Avg. Loss: 0.000015, Accuracy: 0.958100
training_time:: 169.9232497215271
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.45585083961487
time_baseline:: 115.52018713951111
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0113, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0155, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.958100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2220e-32, dtype=torch.float64)
secont condition:: tensor(1.2220e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0269e-31, dtype=torch.float64)
secont condition:: tensor(1.0269e-31, dtype=torch.float64)
curr_secont condition:: tensor(4.2711e-09, dtype=torch.float64)
secont condition:: tensor(4.2711e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3679e-08, dtype=torch.float64)
secont condition:: tensor(1.3679e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4604e-09, dtype=torch.float64)
secont condition:: tensor(3.4604e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.6466e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9890e-08, dtype=torch.float64)
secont condition:: tensor(1.9890e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4808e-09, dtype=torch.float64)
secont condition:: tensor(8.4808e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8567e-09, dtype=torch.float64)
secont condition:: tensor(9.8567e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8722e-09, dtype=torch.float64)
secont condition:: tensor(8.8722e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0975e-09, dtype=torch.float64)
secont condition:: tensor(4.0975e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0447e-09, dtype=torch.float64)
secont condition:: tensor(2.0447e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5059e-09, dtype=torch.float64)
secont condition:: tensor(6.5059e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7474e-09, dtype=torch.float64)
secont condition:: tensor(6.7474e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4795e-09, dtype=torch.float64)
secont condition:: tensor(2.4795e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1983e-08, dtype=torch.float64)
secont condition:: tensor(1.1983e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2169e-09, dtype=torch.float64)
secont condition:: tensor(2.2169e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7662e-09, dtype=torch.float64)
secont condition:: tensor(5.7662e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9793e-09, dtype=torch.float64)
secont condition:: tensor(2.9793e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4882e-09, dtype=torch.float64)
secont condition:: tensor(5.4882e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9690e-09, dtype=torch.float64)
secont condition:: tensor(6.9690e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0959e-08, dtype=torch.float64)
secont condition:: tensor(2.0959e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8608e-08, dtype=torch.float64)
secont condition:: tensor(2.8608e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8121e-08, dtype=torch.float64)
secont condition:: tensor(7.8121e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0249e-07, dtype=torch.float64)
secont condition:: tensor(2.0249e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9742e-07, dtype=torch.float64)
secont condition:: tensor(5.9742e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2557e-06, dtype=torch.float64)
secont condition:: tensor(2.2557e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1655e-05, dtype=torch.float64)
secont condition:: tensor(1.1655e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5751e-05, dtype=torch.float64)
secont condition:: tensor(1.5751e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.3851e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-4.5036e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.4657e-05, dtype=torch.float64)
secont condition:: tensor(7.4657e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5804e-05, dtype=torch.float64)
secont condition:: tensor(5.5804e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2260e-05, dtype=torch.float64)
secont condition:: tensor(7.2260e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.0941e-05, dtype=torch.float64)
secont condition:: tensor(7.0941e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0419e-05, dtype=torch.float64)
secont condition:: tensor(3.0419e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9412e-05, dtype=torch.float64)
secont condition:: tensor(2.9412e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1824e-05, dtype=torch.float64)
secont condition:: tensor(5.1824e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5462e-05, dtype=torch.float64)
secont condition:: tensor(3.5462e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.5038e-05, dtype=torch.float64)
secont condition:: tensor(7.5038e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3575e-05, dtype=torch.float64)
secont condition:: tensor(5.3575e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4937e-05, dtype=torch.float64)
secont condition:: tensor(3.4937e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9997e-05, dtype=torch.float64)
secont condition:: tensor(2.9997e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8676e-05, dtype=torch.float64)
secont condition:: tensor(3.8676e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7866e-05, dtype=torch.float64)
secont condition:: tensor(2.7866e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5665e-05, dtype=torch.float64)
secont condition:: tensor(3.5665e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7303e-05, dtype=torch.float64)
secont condition:: tensor(2.7303e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3506e-05, dtype=torch.float64)
secont condition:: tensor(2.3506e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1145e-05, dtype=torch.float64)
secont condition:: tensor(2.1145e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3017e-05, dtype=torch.float64)
secont condition:: tensor(2.3017e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6725e-05, dtype=torch.float64)
secont condition:: tensor(1.6725e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9494e-05, dtype=torch.float64)
secont condition:: tensor(1.9494e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8570e-05, dtype=torch.float64)
secont condition:: tensor(1.8570e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1656e-05, dtype=torch.float64)
secont condition:: tensor(1.1656e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2579e-05, dtype=torch.float64)
secont condition:: tensor(1.2579e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3898e-06, dtype=torch.float64)
secont condition:: tensor(5.3898e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0775e-06, dtype=torch.float64)
secont condition:: tensor(2.0775e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0567e-05, dtype=torch.float64)
secont condition:: tensor(1.0567e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0803e-05, dtype=torch.float64)
secont condition:: tensor(1.0803e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0036e-06, dtype=torch.float64)
secont condition:: tensor(7.0036e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1878e-06, dtype=torch.float64)
secont condition:: tensor(2.1878e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5781e-07, dtype=torch.float64)
secont condition:: tensor(4.5781e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3357e-06, dtype=torch.float64)
secont condition:: tensor(8.3357e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3796e-06, dtype=torch.float64)
secont condition:: tensor(4.3796e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5199e-07, dtype=torch.float64)
secont condition:: tensor(2.5199e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4208e-06, dtype=torch.float64)
secont condition:: tensor(6.4208e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9769e-07, dtype=torch.float64)
secont condition:: tensor(5.9769e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7850e-06, dtype=torch.float64)
secont condition:: tensor(3.7850e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5978e-06, dtype=torch.float64)
secont condition:: tensor(4.5978e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5161e-06, dtype=torch.float64)
secont condition:: tensor(2.5161e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8235e-06, dtype=torch.float64)
secont condition:: tensor(2.8235e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.9555e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3187e-06, dtype=torch.float64)
secont condition:: tensor(2.3187e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.070735216140747
curr_diff: 0 tensor(9.7337e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6285e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6165e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8686e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0072, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0112, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0052, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0045, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0152, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.958200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235933
Test Avg. Loss: 0.000025, Accuracy: 0.938300
Train - Epoch 1, Batch: 0, Loss: 0.264044
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 2, Batch: 0, Loss: 0.167021
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.164003
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 4, Batch: 0, Loss: 0.155183
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.159177
Test Avg. Loss: 0.000015, Accuracy: 0.954900
Train - Epoch 6, Batch: 0, Loss: 0.164490
Test Avg. Loss: 0.000105, Accuracy: 0.638200
Train - Epoch 7, Batch: 0, Loss: 1.082208
Test Avg. Loss: 0.000034, Accuracy: 0.919200
Train - Epoch 8, Batch: 0, Loss: 0.356519
Test Avg. Loss: 0.000018, Accuracy: 0.951600
Train - Epoch 9, Batch: 0, Loss: 0.192808
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 10, Batch: 0, Loss: 0.173983
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 11, Batch: 0, Loss: 0.172966
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 12, Batch: 0, Loss: 0.168860
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 13, Batch: 0, Loss: 0.165358
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 14, Batch: 0, Loss: 0.162980
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 15, Batch: 0, Loss: 0.154068
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.158805
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 17, Batch: 0, Loss: 0.166829
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.156474
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.152941
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.163533
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 21, Batch: 0, Loss: 0.161391
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.156300
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.153033
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 24, Batch: 0, Loss: 0.154216
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.160373
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.151717
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.155405
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.154263
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.152882
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 177.6223452091217
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.632075548172
time_baseline:: 116.69678521156311
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0069, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3887e-32, dtype=torch.float64)
secont condition:: tensor(1.3887e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1054e-32, dtype=torch.float64)
secont condition:: tensor(3.1054e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3168e-32, dtype=torch.float64)
secont condition:: tensor(8.3168e-32, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5088e-09, dtype=torch.float64)
secont condition:: tensor(4.5088e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8387e-09, dtype=torch.float64)
secont condition:: tensor(1.8387e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9672e-10, dtype=torch.float64)
secont condition:: tensor(8.9672e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9664e-10, dtype=torch.float64)
secont condition:: tensor(3.9664e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5248e-10, dtype=torch.float64)
secont condition:: tensor(4.5248e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.3312e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2851e-09, dtype=torch.float64)
secont condition:: tensor(1.2851e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8757e-10, dtype=torch.float64)
secont condition:: tensor(4.8757e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.2625e-11, dtype=torch.float64)
curr_secont condition:: tensor(-5.1133e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6414e-09, dtype=torch.float64)
secont condition:: tensor(4.6414e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4641e-09, dtype=torch.float64)
secont condition:: tensor(1.4641e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4930e-09, dtype=torch.float64)
secont condition:: tensor(1.4930e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.2324e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5289e-08, dtype=torch.float64)
secont condition:: tensor(1.5289e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9770e-09, dtype=torch.float64)
secont condition:: tensor(7.9770e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9363e-08, dtype=torch.float64)
secont condition:: tensor(1.9363e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6882e-08, dtype=torch.float64)
secont condition:: tensor(2.6882e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3112e-08, dtype=torch.float64)
secont condition:: tensor(7.3112e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2994e-07, dtype=torch.float64)
secont condition:: tensor(1.2994e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8941e-07, dtype=torch.float64)
secont condition:: tensor(3.8941e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1382e-06, dtype=torch.float64)
secont condition:: tensor(1.1382e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2889e-06, dtype=torch.float64)
secont condition:: tensor(4.2889e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9174e-06, dtype=torch.float64)
secont condition:: tensor(8.9174e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2146e-05, dtype=torch.float64)
secont condition:: tensor(1.2146e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.3885e-05, dtype=torch.float64)
secont condition:: tensor(7.3885e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4658e-06, dtype=torch.float64)
secont condition:: tensor(1.4658e-06, dtype=torch.float64)
curr_secont condition:: tensor(-9.5000e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0885e-05, dtype=torch.float64)
secont condition:: tensor(1.0885e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6972e-05, dtype=torch.float64)
secont condition:: tensor(2.6972e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6837e-05, dtype=torch.float64)
secont condition:: tensor(1.6837e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.5954e-06, dtype=torch.float64)
secont condition:: tensor(8.5954e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9334e-06, dtype=torch.float64)
secont condition:: tensor(4.9334e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2263e-06, dtype=torch.float64)
secont condition:: tensor(5.2263e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4232e-07, dtype=torch.float64)
secont condition:: tensor(5.4232e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4176e-06, dtype=torch.float64)
secont condition:: tensor(2.4176e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8829e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3456e-06, dtype=torch.float64)
secont condition:: tensor(1.3456e-06, dtype=torch.float64)
curr_secont condition:: tensor(-3.0483e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.2363e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8419e-07, dtype=torch.float64)
secont condition:: tensor(7.8419e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.2333e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0704e-06, dtype=torch.float64)
secont condition:: tensor(3.0704e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.7217e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3383e-06, dtype=torch.float64)
secont condition:: tensor(4.3383e-06, dtype=torch.float64)
curr_secont condition:: tensor(-4.7952e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.8898e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4756e-06, dtype=torch.float64)
secont condition:: tensor(2.4756e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7955e-06, dtype=torch.float64)
curr_secont condition:: tensor(-3.5754e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.0577e-06, dtype=torch.float64)
curr_secont condition:: tensor(-7.3257e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.3670e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.6659e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.8286e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.6515e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7580e-06, dtype=torch.float64)
secont condition:: tensor(3.7580e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.3842e-06, dtype=torch.float64)
curr_secont condition:: tensor(-3.0569e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6847e-06, dtype=torch.float64)
secont condition:: tensor(2.6847e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5852e-07, dtype=torch.float64)
secont condition:: tensor(4.5852e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6962e-06, dtype=torch.float64)
secont condition:: tensor(7.6962e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1027e-06, dtype=torch.float64)
secont condition:: tensor(3.1027e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6444e-06, dtype=torch.float64)
secont condition:: tensor(4.6444e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.5891e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4136e-06, dtype=torch.float64)
secont condition:: tensor(2.4136e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7328e-06, dtype=torch.float64)
secont condition:: tensor(2.7328e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1373e-06, dtype=torch.float64)
secont condition:: tensor(8.1373e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1518e-06, dtype=torch.float64)
secont condition:: tensor(5.1518e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7466e-06, dtype=torch.float64)
secont condition:: tensor(7.7466e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2754e-06, dtype=torch.float64)
secont condition:: tensor(3.2754e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1462e-07, dtype=torch.float64)
secont condition:: tensor(8.1462e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7740e-07, dtype=torch.float64)
secont condition:: tensor(5.7740e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8947e-06, dtype=torch.float64)
secont condition:: tensor(3.8947e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0464e-06, dtype=torch.float64)
secont condition:: tensor(5.0464e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1975e-06, dtype=torch.float64)
secont condition:: tensor(2.1975e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7245e-06, dtype=torch.float64)
secont condition:: tensor(4.7245e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9125e-06, dtype=torch.float64)
secont condition:: tensor(3.9125e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.350475311279297
curr_diff: 0 tensor(4.7957e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3369e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0890e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4591e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.7632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3974e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0067, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237044
Test Avg. Loss: 0.000024, Accuracy: 0.939500
Train - Epoch 1, Batch: 0, Loss: 0.261021
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.164410
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.161242
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.161775
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 5, Batch: 0, Loss: 0.154252
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 6, Batch: 0, Loss: 0.159801
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 7, Batch: 0, Loss: 0.167096
Test Avg. Loss: 0.000169, Accuracy: 0.619900
Train - Epoch 8, Batch: 0, Loss: 1.740501
Test Avg. Loss: 0.000026, Accuracy: 0.942600
Train - Epoch 9, Batch: 0, Loss: 0.281589
Test Avg. Loss: 0.000020, Accuracy: 0.947200
Train - Epoch 10, Batch: 0, Loss: 0.221270
Test Avg. Loss: 0.000018, Accuracy: 0.950100
Train - Epoch 11, Batch: 0, Loss: 0.199157
Test Avg. Loss: 0.000017, Accuracy: 0.951500
Train - Epoch 12, Batch: 0, Loss: 0.187973
Test Avg. Loss: 0.000016, Accuracy: 0.953200
Train - Epoch 13, Batch: 0, Loss: 0.180153
Test Avg. Loss: 0.000016, Accuracy: 0.954400
Train - Epoch 14, Batch: 0, Loss: 0.173881
Test Avg. Loss: 0.000015, Accuracy: 0.955700
Train - Epoch 15, Batch: 0, Loss: 0.169011
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 16, Batch: 0, Loss: 0.162039
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 17, Batch: 0, Loss: 0.163530
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 18, Batch: 0, Loss: 0.164808
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 19, Batch: 0, Loss: 0.162646
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 20, Batch: 0, Loss: 0.159262
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 21, Batch: 0, Loss: 0.157704
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 22, Batch: 0, Loss: 0.160261
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 23, Batch: 0, Loss: 0.160807
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 24, Batch: 0, Loss: 0.162591
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 25, Batch: 0, Loss: 0.159260
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 26, Batch: 0, Loss: 0.160699
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 27, Batch: 0, Loss: 0.161199
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 28, Batch: 0, Loss: 0.158728
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 29, Batch: 0, Loss: 0.154128
Test Avg. Loss: 0.000014, Accuracy: 0.959400
training_time:: 169.43272519111633
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.635657787323
time_baseline:: 115.7000002861023
curr_diff: 0 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0426, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0887, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0054, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0391, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0089, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0297, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0104, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1110, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3795e-32, dtype=torch.float64)
secont condition:: tensor(2.3795e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0551e-32, dtype=torch.float64)
secont condition:: tensor(3.0551e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8753e-32, dtype=torch.float64)
secont condition:: tensor(3.8753e-32, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2509e-09, dtype=torch.float64)
secont condition:: tensor(2.2509e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2598e-08, dtype=torch.float64)
secont condition:: tensor(1.2598e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6869e-09, dtype=torch.float64)
secont condition:: tensor(1.6869e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.2383e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6876e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.6627e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4345e-08, dtype=torch.float64)
secont condition:: tensor(1.4345e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.1973e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3748e-08, dtype=torch.float64)
secont condition:: tensor(1.3748e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1041e-08, dtype=torch.float64)
secont condition:: tensor(1.1041e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6039e-09, dtype=torch.float64)
secont condition:: tensor(3.6039e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3918e-09, dtype=torch.float64)
secont condition:: tensor(8.3918e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.1476e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8924e-08, dtype=torch.float64)
secont condition:: tensor(1.8924e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3526e-08, dtype=torch.float64)
secont condition:: tensor(1.3526e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3658e-08, dtype=torch.float64)
secont condition:: tensor(3.3658e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8629e-08, dtype=torch.float64)
secont condition:: tensor(4.8629e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3653e-08, dtype=torch.float64)
secont condition:: tensor(6.3653e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2463e-07, dtype=torch.float64)
secont condition:: tensor(1.2463e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4965e-07, dtype=torch.float64)
secont condition:: tensor(2.4965e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8890e-07, dtype=torch.float64)
secont condition:: tensor(4.8890e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2783e-06, dtype=torch.float64)
secont condition:: tensor(1.2783e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6171e-06, dtype=torch.float64)
secont condition:: tensor(3.6171e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1053e-05, dtype=torch.float64)
secont condition:: tensor(1.1053e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6276e-05, dtype=torch.float64)
secont condition:: tensor(3.6276e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0045, dtype=torch.float64)
secont condition:: tensor(0.0045, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0148, dtype=torch.float64)
curr_secont condition:: tensor(0.0686, dtype=torch.float64)
secont condition:: tensor(0.0686, dtype=torch.float64)
curr_secont condition:: tensor(0.0449, dtype=torch.float64)
secont condition:: tensor(0.0449, dtype=torch.float64)
curr_secont condition:: tensor(0.0269, dtype=torch.float64)
secont condition:: tensor(0.0269, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0047, dtype=torch.float64)
secont condition:: tensor(0.0047, dtype=torch.float64)
curr_secont condition:: tensor(0.0026, dtype=torch.float64)
secont condition:: tensor(0.0026, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.739651203155518
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.1095e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4746e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.9491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0038, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0430, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0888, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0054, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0390, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0089, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0299, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0105, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1114, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237358
Test Avg. Loss: 0.000024, Accuracy: 0.940100
Train - Epoch 1, Batch: 0, Loss: 0.256790
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.167135
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.161183
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.159495
Test Avg. Loss: 0.000016, Accuracy: 0.952200
Train - Epoch 5, Batch: 0, Loss: 0.178770
Test Avg. Loss: 0.000074, Accuracy: 0.740100
Train - Epoch 6, Batch: 0, Loss: 0.761054
Test Avg. Loss: 0.000017, Accuracy: 0.955800
Train - Epoch 7, Batch: 0, Loss: 0.183934
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 8, Batch: 0, Loss: 0.163794
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 9, Batch: 0, Loss: 0.161542
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 10, Batch: 0, Loss: 0.148648
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 11, Batch: 0, Loss: 0.156963
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 12, Batch: 0, Loss: 0.153728
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 13, Batch: 0, Loss: 0.153851
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 14, Batch: 0, Loss: 0.149180
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 15, Batch: 0, Loss: 0.154352
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 16, Batch: 0, Loss: 0.152582
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 17, Batch: 0, Loss: 0.152620
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 18, Batch: 0, Loss: 0.153223
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 19, Batch: 0, Loss: 0.153682
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 20, Batch: 0, Loss: 0.153300
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 21, Batch: 0, Loss: 0.153974
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 22, Batch: 0, Loss: 0.156611
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 23, Batch: 0, Loss: 0.153594
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 24, Batch: 0, Loss: 0.149212
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.155940
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.152558
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.158907
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.155995
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.150197
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 169.85461950302124
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.24463534355164
time_baseline:: 116.310298204422
curr_diff: 0 tensor(1.9570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0607e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.6709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4917e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.2606e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.2590e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5914e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.1162e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8153e-32, dtype=torch.float64)
secont condition:: tensor(1.8153e-32, dtype=torch.float64)
curr_secont condition:: tensor(-5.2304e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3734e-09, dtype=torch.float64)
secont condition:: tensor(1.3734e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0349e-08, dtype=torch.float64)
secont condition:: tensor(1.0349e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0621e-09, dtype=torch.float64)
secont condition:: tensor(3.0621e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8823e-10, dtype=torch.float64)
secont condition:: tensor(3.8823e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3239e-10, dtype=torch.float64)
secont condition:: tensor(9.3239e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4781e-08, dtype=torch.float64)
secont condition:: tensor(1.4781e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8988e-09, dtype=torch.float64)
secont condition:: tensor(6.8988e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7957e-10, dtype=torch.float64)
secont condition:: tensor(1.7957e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0316e-09, dtype=torch.float64)
secont condition:: tensor(3.0316e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3101e-09, dtype=torch.float64)
secont condition:: tensor(9.3101e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0898e-09, dtype=torch.float64)
secont condition:: tensor(5.0898e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.1701e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4814e-08, dtype=torch.float64)
secont condition:: tensor(1.4814e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2322e-09, dtype=torch.float64)
secont condition:: tensor(6.2322e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3750e-08, dtype=torch.float64)
secont condition:: tensor(1.3750e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6656e-08, dtype=torch.float64)
secont condition:: tensor(1.6656e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7170e-09, dtype=torch.float64)
secont condition:: tensor(4.7170e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0834e-08, dtype=torch.float64)
secont condition:: tensor(1.0834e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6405e-10, dtype=torch.float64)
secont condition:: tensor(5.6405e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8361e-08, dtype=torch.float64)
secont condition:: tensor(2.8361e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5557e-08, dtype=torch.float64)
secont condition:: tensor(2.5557e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3160e-08, dtype=torch.float64)
secont condition:: tensor(4.3160e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8881e-07, dtype=torch.float64)
secont condition:: tensor(1.8881e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6324e-08, dtype=torch.float64)
secont condition:: tensor(5.6324e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5081e-08, dtype=torch.float64)
secont condition:: tensor(2.5081e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0454e-08, dtype=torch.float64)
secont condition:: tensor(1.0454e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0398e-08, dtype=torch.float64)
secont condition:: tensor(1.0398e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7065e-08, dtype=torch.float64)
secont condition:: tensor(1.7065e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4834e-09, dtype=torch.float64)
secont condition:: tensor(8.4834e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0469e-09, dtype=torch.float64)
secont condition:: tensor(4.0469e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5941e-09, dtype=torch.float64)
secont condition:: tensor(4.5941e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4907e-09, dtype=torch.float64)
secont condition:: tensor(6.4907e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6752e-09, dtype=torch.float64)
secont condition:: tensor(8.6752e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9938e-08, dtype=torch.float64)
secont condition:: tensor(1.9938e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6044e-09, dtype=torch.float64)
secont condition:: tensor(4.6044e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1969e-08, dtype=torch.float64)
secont condition:: tensor(1.1969e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1477e-08, dtype=torch.float64)
secont condition:: tensor(1.1477e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8294e-09, dtype=torch.float64)
secont condition:: tensor(1.8294e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3585e-09, dtype=torch.float64)
secont condition:: tensor(6.3585e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5058e-09, dtype=torch.float64)
secont condition:: tensor(6.5058e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3567e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0629e-09, dtype=torch.float64)
secont condition:: tensor(1.0629e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5110e-09, dtype=torch.float64)
secont condition:: tensor(7.5110e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7286e-08, dtype=torch.float64)
secont condition:: tensor(1.7286e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.9793e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3032e-08, dtype=torch.float64)
secont condition:: tensor(1.3032e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5695e-08, dtype=torch.float64)
secont condition:: tensor(1.5695e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2089e-08, dtype=torch.float64)
secont condition:: tensor(1.2089e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7215e-08, dtype=torch.float64)
secont condition:: tensor(1.7215e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0770e-09, dtype=torch.float64)
secont condition:: tensor(8.0770e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6008e-08, dtype=torch.float64)
secont condition:: tensor(1.6008e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0219e-08, dtype=torch.float64)
secont condition:: tensor(1.0219e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2400e-08, dtype=torch.float64)
secont condition:: tensor(1.2400e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6884e-09, dtype=torch.float64)
secont condition:: tensor(2.6884e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3820e-09, dtype=torch.float64)
secont condition:: tensor(8.3820e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6953e-09, dtype=torch.float64)
secont condition:: tensor(2.6953e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1283e-09, dtype=torch.float64)
secont condition:: tensor(6.1283e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1273e-09, dtype=torch.float64)
secont condition:: tensor(7.1273e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9210e-09, dtype=torch.float64)
secont condition:: tensor(3.9210e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6750e-09, dtype=torch.float64)
secont condition:: tensor(4.6750e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9481e-09, dtype=torch.float64)
secont condition:: tensor(3.9481e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0171e-08, dtype=torch.float64)
secont condition:: tensor(1.0171e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7434e-09, dtype=torch.float64)
secont condition:: tensor(2.7434e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.9603e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3846e-09, dtype=torch.float64)
secont condition:: tensor(6.3846e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9991e-09, dtype=torch.float64)
secont condition:: tensor(7.9991e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0856e-09, dtype=torch.float64)
secont condition:: tensor(2.0856e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2321e-09, dtype=torch.float64)
secont condition:: tensor(3.2321e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0416e-08, dtype=torch.float64)
secont condition:: tensor(1.0416e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1228e-08, dtype=torch.float64)
secont condition:: tensor(1.1228e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2733e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9348e-09, dtype=torch.float64)
secont condition:: tensor(3.9348e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3725e-09, dtype=torch.float64)
secont condition:: tensor(3.3725e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2977e-09, dtype=torch.float64)
secont condition:: tensor(2.2977e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8312e-09, dtype=torch.float64)
secont condition:: tensor(1.8312e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7964e-09, dtype=torch.float64)
secont condition:: tensor(1.7964e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0586e-09, dtype=torch.float64)
secont condition:: tensor(5.0586e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0452e-08, dtype=torch.float64)
secont condition:: tensor(1.0452e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.803553581237793
curr_diff: 0 tensor(3.9014e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1117e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8757e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(6.7555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.1179e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.0444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7425e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.0964e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.1148e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.1041e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4739e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.6654e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.4340e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.7528e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.9558e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4144e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8928e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.8737e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235893
Test Avg. Loss: 0.000024, Accuracy: 0.941400
Train - Epoch 1, Batch: 0, Loss: 0.253688
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.170501
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.161219
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 4, Batch: 0, Loss: 0.157753
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 5, Batch: 0, Loss: 0.157269
Test Avg. Loss: 0.000035, Accuracy: 0.880400
Train - Epoch 6, Batch: 0, Loss: 0.363005
Test Avg. Loss: 0.000020, Accuracy: 0.949900
Train - Epoch 7, Batch: 0, Loss: 0.212168
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 8, Batch: 0, Loss: 0.162163
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 9, Batch: 0, Loss: 0.158587
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 10, Batch: 0, Loss: 0.154221
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 11, Batch: 0, Loss: 0.155140
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 12, Batch: 0, Loss: 0.152408
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 13, Batch: 0, Loss: 0.155711
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 14, Batch: 0, Loss: 0.155243
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 15, Batch: 0, Loss: 0.153786
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 16, Batch: 0, Loss: 0.152406
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 17, Batch: 0, Loss: 0.154621
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 18, Batch: 0, Loss: 0.153686
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 19, Batch: 0, Loss: 0.155799
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 20, Batch: 0, Loss: 0.149744
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 21, Batch: 0, Loss: 0.145215
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 22, Batch: 0, Loss: 0.149236
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 23, Batch: 0, Loss: 0.156436
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.152541
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.154077
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.149419
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.155222
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.154761
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.149702
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 173.5029821395874
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.18998718261719
time_baseline:: 117.25519943237305
curr_diff: 0 tensor(2.1096e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.2285e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.2489e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5424e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.7226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2935e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3871e-09, dtype=torch.float64)
secont condition:: tensor(3.3871e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6508e-09, dtype=torch.float64)
secont condition:: tensor(5.6508e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9446e-09, dtype=torch.float64)
secont condition:: tensor(4.9446e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8063e-08, dtype=torch.float64)
secont condition:: tensor(3.8063e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3899e-09, dtype=torch.float64)
secont condition:: tensor(8.3899e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0153e-08, dtype=torch.float64)
secont condition:: tensor(1.0153e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7377e-09, dtype=torch.float64)
secont condition:: tensor(4.7377e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9471e-09, dtype=torch.float64)
secont condition:: tensor(7.9471e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2725e-08, dtype=torch.float64)
secont condition:: tensor(1.2725e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5872e-09, dtype=torch.float64)
secont condition:: tensor(4.5872e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.1915e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3164e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2775e-08, dtype=torch.float64)
secont condition:: tensor(1.2775e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0599e-09, dtype=torch.float64)
secont condition:: tensor(2.0599e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8792e-08, dtype=torch.float64)
secont condition:: tensor(1.8792e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1496e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6767e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2665e-08, dtype=torch.float64)
secont condition:: tensor(1.2665e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5267e-08, dtype=torch.float64)
secont condition:: tensor(4.5267e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7600e-08, dtype=torch.float64)
secont condition:: tensor(1.7600e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.1536e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.8117e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3243e-08, dtype=torch.float64)
secont condition:: tensor(8.3243e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1415e-08, dtype=torch.float64)
secont condition:: tensor(8.1415e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8011e-07, dtype=torch.float64)
secont condition:: tensor(2.8011e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5294e-08, dtype=torch.float64)
secont condition:: tensor(8.5294e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0528e-07, dtype=torch.float64)
secont condition:: tensor(2.0528e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3185e-07, dtype=torch.float64)
secont condition:: tensor(1.3185e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.4417e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8537e-08, dtype=torch.float64)
secont condition:: tensor(1.8537e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.5540e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3606e-08, dtype=torch.float64)
secont condition:: tensor(1.3606e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6099e-08, dtype=torch.float64)
secont condition:: tensor(2.6099e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5674e-09, dtype=torch.float64)
secont condition:: tensor(9.5674e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9504e-08, dtype=torch.float64)
secont condition:: tensor(9.9504e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6297e-08, dtype=torch.float64)
secont condition:: tensor(2.6297e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5180e-08, dtype=torch.float64)
secont condition:: tensor(3.5180e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2227e-07, dtype=torch.float64)
secont condition:: tensor(2.2227e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9367e-06, dtype=torch.float64)
secont condition:: tensor(7.9367e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2779e-08, dtype=torch.float64)
secont condition:: tensor(4.2779e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7298e-09, dtype=torch.float64)
secont condition:: tensor(6.7298e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4414e-08, dtype=torch.float64)
secont condition:: tensor(3.4414e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5812e-08, dtype=torch.float64)
secont condition:: tensor(5.5812e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4135e-09, dtype=torch.float64)
secont condition:: tensor(1.4135e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5340e-08, dtype=torch.float64)
secont condition:: tensor(3.5340e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5555e-07, dtype=torch.float64)
secont condition:: tensor(5.5555e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1304e-06, dtype=torch.float64)
secont condition:: tensor(6.1304e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5686e-09, dtype=torch.float64)
secont condition:: tensor(9.5686e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4074e-09, dtype=torch.float64)
secont condition:: tensor(5.4074e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1126e-08, dtype=torch.float64)
secont condition:: tensor(2.1126e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3714e-08, dtype=torch.float64)
secont condition:: tensor(3.3714e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0954e-08, dtype=torch.float64)
secont condition:: tensor(3.0954e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6116e-08, dtype=torch.float64)
secont condition:: tensor(1.6116e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6729e-08, dtype=torch.float64)
secont condition:: tensor(1.6729e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9478e-08, dtype=torch.float64)
secont condition:: tensor(1.9478e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4551e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0012e-08, dtype=torch.float64)
secont condition:: tensor(1.0012e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8393e-06, dtype=torch.float64)
secont condition:: tensor(1.8393e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2812e-09, dtype=torch.float64)
secont condition:: tensor(1.2812e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4648e-08, dtype=torch.float64)
secont condition:: tensor(3.4648e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9150e-08, dtype=torch.float64)
secont condition:: tensor(3.9150e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9871e-08, dtype=torch.float64)
secont condition:: tensor(2.9871e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5605e-08, dtype=torch.float64)
secont condition:: tensor(1.5605e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5698e-08, dtype=torch.float64)
secont condition:: tensor(4.5698e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2316e-08, dtype=torch.float64)
secont condition:: tensor(3.2316e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1940e-08, dtype=torch.float64)
secont condition:: tensor(2.1940e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3944e-08, dtype=torch.float64)
secont condition:: tensor(2.3944e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5160e-08, dtype=torch.float64)
secont condition:: tensor(2.5160e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0146e-08, dtype=torch.float64)
secont condition:: tensor(1.0146e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9259e-08, dtype=torch.float64)
secont condition:: tensor(2.9259e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5003e-09, dtype=torch.float64)
secont condition:: tensor(3.5003e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0666e-08, dtype=torch.float64)
secont condition:: tensor(2.0666e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1758e-08, dtype=torch.float64)
secont condition:: tensor(2.1758e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4713e-08, dtype=torch.float64)
secont condition:: tensor(1.4713e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9232e-08, dtype=torch.float64)
secont condition:: tensor(1.9232e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7483e-08, dtype=torch.float64)
secont condition:: tensor(1.7483e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2524e-09, dtype=torch.float64)
secont condition:: tensor(1.2524e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4130e-09, dtype=torch.float64)
secont condition:: tensor(7.4130e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.995126485824585
curr_diff: 0 tensor(8.1917e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.2852e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3372e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.7657e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9016e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.3002e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1609e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2596e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.8938e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6707e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.1744e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4293e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
random set 4
python3 generate_rand_ids 0.00002  MNIST
tensor([50343])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236473
Test Avg. Loss: 0.000024, Accuracy: 0.940600
Train - Epoch 1, Batch: 0, Loss: 0.256176
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.168038
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.159643
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.165033
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 5, Batch: 0, Loss: 0.163623
Test Avg. Loss: 0.000035, Accuracy: 0.881400
Train - Epoch 6, Batch: 0, Loss: 0.377252
Test Avg. Loss: 0.000019, Accuracy: 0.952100
Train - Epoch 7, Batch: 0, Loss: 0.207166
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 8, Batch: 0, Loss: 0.177009
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 9, Batch: 0, Loss: 0.162342
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 10, Batch: 0, Loss: 0.157847
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 11, Batch: 0, Loss: 0.159194
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 12, Batch: 0, Loss: 0.161571
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 13, Batch: 0, Loss: 0.158142
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 14, Batch: 0, Loss: 0.158787
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.158983
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 16, Batch: 0, Loss: 0.159873
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 17, Batch: 0, Loss: 0.150983
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.148835
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.159540
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.155710
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 21, Batch: 0, Loss: 0.152465
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.148865
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.153462
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 24, Batch: 0, Loss: 0.154566
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 25, Batch: 0, Loss: 0.151393
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 26, Batch: 0, Loss: 0.150034
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.152329
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.152274
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.154541
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 169.9296431541443
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.54100060462952
time_baseline:: 116.60542297363281
curr_diff: 0 tensor(3.8426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6172e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5490e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.7273e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8830e-32, dtype=torch.float64)
secont condition:: tensor(1.8830e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.2211e-31, dtype=torch.float64)
secont condition:: tensor(1.2211e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.6075e-08, dtype=torch.float64)
secont condition:: tensor(6.6075e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1859e-08, dtype=torch.float64)
secont condition:: tensor(3.1859e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0303e-09, dtype=torch.float64)
secont condition:: tensor(7.0303e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6814e-08, dtype=torch.float64)
secont condition:: tensor(1.6814e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1713e-09, dtype=torch.float64)
secont condition:: tensor(9.1713e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1611e-09, dtype=torch.float64)
secont condition:: tensor(4.1611e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0229e-08, dtype=torch.float64)
secont condition:: tensor(1.0229e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3625e-08, dtype=torch.float64)
secont condition:: tensor(1.3625e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3324e-09, dtype=torch.float64)
secont condition:: tensor(3.3324e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1828e-08, dtype=torch.float64)
secont condition:: tensor(2.1828e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5475e-08, dtype=torch.float64)
secont condition:: tensor(1.5475e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6334e-08, dtype=torch.float64)
secont condition:: tensor(1.6334e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8927e-08, dtype=torch.float64)
secont condition:: tensor(1.8927e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8395e-08, dtype=torch.float64)
secont condition:: tensor(1.8395e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9063e-08, dtype=torch.float64)
secont condition:: tensor(2.9063e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3605e-08, dtype=torch.float64)
secont condition:: tensor(3.3605e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2925e-08, dtype=torch.float64)
secont condition:: tensor(2.2925e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1793e-08, dtype=torch.float64)
secont condition:: tensor(5.1793e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1360e-07, dtype=torch.float64)
secont condition:: tensor(1.1360e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6647e-07, dtype=torch.float64)
secont condition:: tensor(1.6647e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1477e-07, dtype=torch.float64)
secont condition:: tensor(4.1477e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3842e-07, dtype=torch.float64)
secont condition:: tensor(7.3842e-07, dtype=torch.float64)
curr_secont condition:: tensor(-7.3651e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5925e-05, dtype=torch.float64)
secont condition:: tensor(1.5925e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9008e-06, dtype=torch.float64)
secont condition:: tensor(6.9008e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3722e-06, dtype=torch.float64)
secont condition:: tensor(1.3722e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9585e-07, dtype=torch.float64)
secont condition:: tensor(2.9585e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0367e-07, dtype=torch.float64)
secont condition:: tensor(1.0367e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1674e-08, dtype=torch.float64)
secont condition:: tensor(7.1674e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1908e-08, dtype=torch.float64)
secont condition:: tensor(2.1908e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6157e-08, dtype=torch.float64)
secont condition:: tensor(9.6157e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4849e-08, dtype=torch.float64)
secont condition:: tensor(3.4849e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8952e-09, dtype=torch.float64)
secont condition:: tensor(4.8952e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0104e-07, dtype=torch.float64)
secont condition:: tensor(1.0104e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1184e-07, dtype=torch.float64)
secont condition:: tensor(1.1184e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0912e-08, dtype=torch.float64)
secont condition:: tensor(9.0912e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2293e-07, dtype=torch.float64)
secont condition:: tensor(1.2293e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2261e-08, dtype=torch.float64)
secont condition:: tensor(2.2261e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6994e-08, dtype=torch.float64)
secont condition:: tensor(4.6994e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3417e-08, dtype=torch.float64)
secont condition:: tensor(9.3417e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1527e-08, dtype=torch.float64)
secont condition:: tensor(5.1527e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4626e-08, dtype=torch.float64)
secont condition:: tensor(2.4626e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0262e-08, dtype=torch.float64)
secont condition:: tensor(7.0262e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6461e-08, dtype=torch.float64)
secont condition:: tensor(5.6461e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1031e-08, dtype=torch.float64)
secont condition:: tensor(4.1031e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2192e-08, dtype=torch.float64)
secont condition:: tensor(8.2192e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0587e-07, dtype=torch.float64)
secont condition:: tensor(1.0587e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2023e-08, dtype=torch.float64)
secont condition:: tensor(8.2023e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8801e-08, dtype=torch.float64)
secont condition:: tensor(6.8801e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2897e-08, dtype=torch.float64)
secont condition:: tensor(7.2897e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5828e-08, dtype=torch.float64)
secont condition:: tensor(2.5828e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1863e-08, dtype=torch.float64)
secont condition:: tensor(4.1863e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8291e-08, dtype=torch.float64)
secont condition:: tensor(6.8291e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.8039e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1373e-08, dtype=torch.float64)
secont condition:: tensor(7.1373e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6758e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4351e-08, dtype=torch.float64)
secont condition:: tensor(4.4351e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8669e-08, dtype=torch.float64)
secont condition:: tensor(3.8669e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8536e-08, dtype=torch.float64)
secont condition:: tensor(3.8536e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3424e-08, dtype=torch.float64)
secont condition:: tensor(3.3424e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.7080e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.5338e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4588e-08, dtype=torch.float64)
secont condition:: tensor(2.4588e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3932e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7929e-08, dtype=torch.float64)
secont condition:: tensor(7.7929e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0971e-08, dtype=torch.float64)
secont condition:: tensor(5.0971e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8210e-08, dtype=torch.float64)
secont condition:: tensor(1.8210e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7464e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1738e-08, dtype=torch.float64)
secont condition:: tensor(4.1738e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9434e-09, dtype=torch.float64)
secont condition:: tensor(1.9434e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1104e-08, dtype=torch.float64)
secont condition:: tensor(6.1104e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3407e-08, dtype=torch.float64)
secont condition:: tensor(3.3407e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2943e-08, dtype=torch.float64)
secont condition:: tensor(8.2943e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5002e-07, dtype=torch.float64)
secont condition:: tensor(1.5002e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8832e-08, dtype=torch.float64)
secont condition:: tensor(2.8832e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6466e-08, dtype=torch.float64)
secont condition:: tensor(4.6466e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8159e-08, dtype=torch.float64)
secont condition:: tensor(3.8159e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5912e-08, dtype=torch.float64)
secont condition:: tensor(9.5912e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7022e-08, dtype=torch.float64)
secont condition:: tensor(4.7022e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.89406967163086
curr_diff: 0 tensor(8.7212e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.9781e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9095e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.8390e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.0968e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3082e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.9243e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0112e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.8331e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6311e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8126e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2198e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9354e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.9101e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233484
Test Avg. Loss: 0.000024, Accuracy: 0.941500
Train - Epoch 1, Batch: 0, Loss: 0.254597
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.174804
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.161458
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 4, Batch: 0, Loss: 0.168628
Test Avg. Loss: 0.000017, Accuracy: 0.949100
Train - Epoch 5, Batch: 0, Loss: 0.184655
Test Avg. Loss: 0.000083, Accuracy: 0.706600
Train - Epoch 6, Batch: 0, Loss: 0.836991
Test Avg. Loss: 0.000017, Accuracy: 0.955400
Train - Epoch 7, Batch: 0, Loss: 0.188843
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 8, Batch: 0, Loss: 0.165547
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 9, Batch: 0, Loss: 0.158929
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 10, Batch: 0, Loss: 0.157580
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 11, Batch: 0, Loss: 0.151220
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 12, Batch: 0, Loss: 0.151805
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 13, Batch: 0, Loss: 0.158282
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.154082
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.154800
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 16, Batch: 0, Loss: 0.151647
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.150380
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 18, Batch: 0, Loss: 0.147285
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.151128
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 20, Batch: 0, Loss: 0.149971
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 21, Batch: 0, Loss: 0.156652
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 22, Batch: 0, Loss: 0.156581
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 23, Batch: 0, Loss: 0.154224
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 24, Batch: 0, Loss: 0.150160
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.151465
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.147687
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 27, Batch: 0, Loss: 0.155031
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.151636
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.152870
Test Avg. Loss: 0.000014, Accuracy: 0.962100
training_time:: 174.16574883460999
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.99058294296265
time_baseline:: 116.05623745918274
curr_diff: 0 tensor(6.1400e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0301e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3789e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1265e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4251e-32, dtype=torch.float64)
secont condition:: tensor(1.4251e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0238e-32, dtype=torch.float64)
secont condition:: tensor(3.0238e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.4541e-08, dtype=torch.float64)
secont condition:: tensor(6.4541e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9731e-08, dtype=torch.float64)
secont condition:: tensor(3.9731e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2002e-08, dtype=torch.float64)
secont condition:: tensor(3.2002e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0243e-08, dtype=torch.float64)
secont condition:: tensor(1.0243e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4440e-09, dtype=torch.float64)
secont condition:: tensor(8.4440e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5693e-09, dtype=torch.float64)
secont condition:: tensor(5.5693e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0538e-08, dtype=torch.float64)
secont condition:: tensor(1.0538e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6690e-09, dtype=torch.float64)
secont condition:: tensor(6.6690e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0100e-09, dtype=torch.float64)
secont condition:: tensor(4.0100e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.7942e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9869e-08, dtype=torch.float64)
secont condition:: tensor(1.9869e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1749e-08, dtype=torch.float64)
secont condition:: tensor(1.1749e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7607e-09, dtype=torch.float64)
secont condition:: tensor(7.7607e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0907e-09, dtype=torch.float64)
secont condition:: tensor(7.0907e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4511e-08, dtype=torch.float64)
secont condition:: tensor(1.4511e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3714e-08, dtype=torch.float64)
secont condition:: tensor(1.3714e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3424e-08, dtype=torch.float64)
secont condition:: tensor(2.3424e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9357e-08, dtype=torch.float64)
secont condition:: tensor(6.9357e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3362e-07, dtype=torch.float64)
secont condition:: tensor(1.3362e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2095e-07, dtype=torch.float64)
secont condition:: tensor(3.2095e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1458e-07, dtype=torch.float64)
secont condition:: tensor(5.1458e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2584e-07, dtype=torch.float64)
secont condition:: tensor(3.2584e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7530e-06, dtype=torch.float64)
secont condition:: tensor(3.7530e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6170e-07, dtype=torch.float64)
secont condition:: tensor(3.6170e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7231e-07, dtype=torch.float64)
secont condition:: tensor(1.7231e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0760e-07, dtype=torch.float64)
secont condition:: tensor(1.0760e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0266e-07, dtype=torch.float64)
secont condition:: tensor(1.0266e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6087e-08, dtype=torch.float64)
secont condition:: tensor(8.6087e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3768e-08, dtype=torch.float64)
secont condition:: tensor(6.3768e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0045e-08, dtype=torch.float64)
secont condition:: tensor(4.0045e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0484e-08, dtype=torch.float64)
secont condition:: tensor(6.0484e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.6382e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0080e-08, dtype=torch.float64)
secont condition:: tensor(5.0080e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0053e-07, dtype=torch.float64)
secont condition:: tensor(1.0053e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3568e-08, dtype=torch.float64)
secont condition:: tensor(3.3568e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2028e-07, dtype=torch.float64)
secont condition:: tensor(2.2028e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9117e-06, dtype=torch.float64)
secont condition:: tensor(7.9117e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9044e-08, dtype=torch.float64)
secont condition:: tensor(5.9044e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7325e-08, dtype=torch.float64)
secont condition:: tensor(3.7325e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4694e-10, dtype=torch.float64)
secont condition:: tensor(3.4694e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9941e-08, dtype=torch.float64)
secont condition:: tensor(5.9941e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8677e-08, dtype=torch.float64)
secont condition:: tensor(3.8677e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9261e-06, dtype=torch.float64)
secont condition:: tensor(1.9261e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7632e-08, dtype=torch.float64)
secont condition:: tensor(3.7632e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5476e-06, dtype=torch.float64)
secont condition:: tensor(5.5476e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7403e-08, dtype=torch.float64)
secont condition:: tensor(5.7403e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7121e-08, dtype=torch.float64)
secont condition:: tensor(5.7121e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4280e-08, dtype=torch.float64)
secont condition:: tensor(2.4280e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5983e-08, dtype=torch.float64)
secont condition:: tensor(2.5983e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5296e-08, dtype=torch.float64)
secont condition:: tensor(4.5296e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7032e-06, dtype=torch.float64)
secont condition:: tensor(1.7032e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2649e-08, dtype=torch.float64)
secont condition:: tensor(5.2649e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6160e-08, dtype=torch.float64)
secont condition:: tensor(2.6160e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2620e-06, dtype=torch.float64)
secont condition:: tensor(1.2620e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1213e-08, dtype=torch.float64)
secont condition:: tensor(4.1213e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9507e-08, dtype=torch.float64)
secont condition:: tensor(5.9507e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3824e-08, dtype=torch.float64)
secont condition:: tensor(8.3824e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7592e-06, dtype=torch.float64)
secont condition:: tensor(5.7592e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5800e-09, dtype=torch.float64)
secont condition:: tensor(9.5800e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7930e-08, dtype=torch.float64)
secont condition:: tensor(7.7930e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3465e-09, dtype=torch.float64)
secont condition:: tensor(7.3465e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7295e-08, dtype=torch.float64)
secont condition:: tensor(2.7295e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4488e-08, dtype=torch.float64)
secont condition:: tensor(3.4488e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9439e-08, dtype=torch.float64)
secont condition:: tensor(6.9439e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3647e-08, dtype=torch.float64)
secont condition:: tensor(2.3647e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2351e-08, dtype=torch.float64)
secont condition:: tensor(3.2351e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5460e-09, dtype=torch.float64)
secont condition:: tensor(5.5460e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3574e-08, dtype=torch.float64)
secont condition:: tensor(3.3574e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4243e-08, dtype=torch.float64)
secont condition:: tensor(2.4243e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7542e-08, dtype=torch.float64)
secont condition:: tensor(4.7542e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3366e-08, dtype=torch.float64)
secont condition:: tensor(2.3366e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8704e-08, dtype=torch.float64)
secont condition:: tensor(1.8704e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4607e-08, dtype=torch.float64)
secont condition:: tensor(1.4607e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1482e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2784e-09, dtype=torch.float64)
secont condition:: tensor(7.2784e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0091e-08, dtype=torch.float64)
secont condition:: tensor(2.0091e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.15675163269043
curr_diff: 0 tensor(8.1259e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.9658e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4201e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0309e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.6596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.9862e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9613e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1807e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5877e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.2738e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233658
Test Avg. Loss: 0.000025, Accuracy: 0.936000
Train - Epoch 1, Batch: 0, Loss: 0.264694
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 2, Batch: 0, Loss: 0.167543
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.159109
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.157021
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 5, Batch: 0, Loss: 0.161169
Test Avg. Loss: 0.000017, Accuracy: 0.946900
Train - Epoch 6, Batch: 0, Loss: 0.183892
Test Avg. Loss: 0.000059, Accuracy: 0.826300
Train - Epoch 7, Batch: 0, Loss: 0.609851
Test Avg. Loss: 0.000017, Accuracy: 0.955200
Train - Epoch 8, Batch: 0, Loss: 0.186187
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 9, Batch: 0, Loss: 0.165969
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 10, Batch: 0, Loss: 0.158190
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 11, Batch: 0, Loss: 0.157382
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 12, Batch: 0, Loss: 0.151819
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 13, Batch: 0, Loss: 0.155125
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.153381
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 15, Batch: 0, Loss: 0.157287
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 16, Batch: 0, Loss: 0.152274
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.151618
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 18, Batch: 0, Loss: 0.155525
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.155146
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.152350
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 21, Batch: 0, Loss: 0.152772
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 22, Batch: 0, Loss: 0.153051
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.157991
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.151558
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.157985
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.150985
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 27, Batch: 0, Loss: 0.153026
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.155073
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.151695
Test Avg. Loss: 0.000014, Accuracy: 0.961300
training_time:: 175.07793283462524
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.55637288093567
time_baseline:: 117.62133622169495
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6907e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1788e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.9113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2619e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3363e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5168e-08, dtype=torch.float64)
secont condition:: tensor(2.5168e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6138e-10, dtype=torch.float64)
secont condition:: tensor(7.6138e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1469e-08, dtype=torch.float64)
secont condition:: tensor(6.1469e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3568e-08, dtype=torch.float64)
secont condition:: tensor(1.3568e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6328e-09, dtype=torch.float64)
secont condition:: tensor(6.6328e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3045e-08, dtype=torch.float64)
secont condition:: tensor(1.3045e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9763e-08, dtype=torch.float64)
secont condition:: tensor(2.9763e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1488e-08, dtype=torch.float64)
secont condition:: tensor(1.1488e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7605e-08, dtype=torch.float64)
secont condition:: tensor(1.7605e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0170e-08, dtype=torch.float64)
secont condition:: tensor(1.0170e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8124e-08, dtype=torch.float64)
secont condition:: tensor(1.8124e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3679e-08, dtype=torch.float64)
secont condition:: tensor(1.3679e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2441e-09, dtype=torch.float64)
secont condition:: tensor(9.2441e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5064e-08, dtype=torch.float64)
secont condition:: tensor(1.5064e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-08, dtype=torch.float64)
secont condition:: tensor(3.8107e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3999e-08, dtype=torch.float64)
secont condition:: tensor(2.3999e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8893e-08, dtype=torch.float64)
secont condition:: tensor(9.8893e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4349e-06, dtype=torch.float64)
secont condition:: tensor(3.4349e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5292e-08, dtype=torch.float64)
secont condition:: tensor(4.5292e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7402e-08, dtype=torch.float64)
secont condition:: tensor(4.7402e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8579e-08, dtype=torch.float64)
secont condition:: tensor(5.8579e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1576e-08, dtype=torch.float64)
secont condition:: tensor(8.1576e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1553e-07, dtype=torch.float64)
secont condition:: tensor(3.1553e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0980e-07, dtype=torch.float64)
secont condition:: tensor(7.0980e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3841e-06, dtype=torch.float64)
secont condition:: tensor(2.3841e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4655e-06, dtype=torch.float64)
secont condition:: tensor(3.4655e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6294e-05, dtype=torch.float64)
secont condition:: tensor(2.6294e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2355e-06, dtype=torch.float64)
secont condition:: tensor(7.2355e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7115e-06, dtype=torch.float64)
secont condition:: tensor(1.7115e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3736e-07, dtype=torch.float64)
secont condition:: tensor(2.3736e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9258e-07, dtype=torch.float64)
secont condition:: tensor(4.9258e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8473e-07, dtype=torch.float64)
secont condition:: tensor(3.8473e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5378e-07, dtype=torch.float64)
secont condition:: tensor(3.5378e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3647e-07, dtype=torch.float64)
secont condition:: tensor(3.3647e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4571e-07, dtype=torch.float64)
secont condition:: tensor(2.4571e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2538e-07, dtype=torch.float64)
secont condition:: tensor(2.2538e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2865e-07, dtype=torch.float64)
secont condition:: tensor(1.2865e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1061e-07, dtype=torch.float64)
secont condition:: tensor(2.1061e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9701e-07, dtype=torch.float64)
secont condition:: tensor(1.9701e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2926e-07, dtype=torch.float64)
secont condition:: tensor(1.2926e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2225e-08, dtype=torch.float64)
secont condition:: tensor(8.2225e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9377e-07, dtype=torch.float64)
secont condition:: tensor(1.9377e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9192e-07, dtype=torch.float64)
secont condition:: tensor(1.9192e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7751e-07, dtype=torch.float64)
secont condition:: tensor(1.7751e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3859e-07, dtype=torch.float64)
secont condition:: tensor(1.3859e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9346e-07, dtype=torch.float64)
secont condition:: tensor(1.9346e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1745e-07, dtype=torch.float64)
secont condition:: tensor(3.1745e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7560e-07, dtype=torch.float64)
secont condition:: tensor(2.7560e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7019e-07, dtype=torch.float64)
secont condition:: tensor(1.7019e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4203e-07, dtype=torch.float64)
secont condition:: tensor(7.4203e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2871e-06, dtype=torch.float64)
secont condition:: tensor(6.2871e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7291e-07, dtype=torch.float64)
secont condition:: tensor(1.7291e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0535e-07, dtype=torch.float64)
secont condition:: tensor(1.0535e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8577e-07, dtype=torch.float64)
secont condition:: tensor(2.8577e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6588e-06, dtype=torch.float64)
secont condition:: tensor(1.6588e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0219e-07, dtype=torch.float64)
secont condition:: tensor(1.0219e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7693e-07, dtype=torch.float64)
secont condition:: tensor(1.7693e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6765e-07, dtype=torch.float64)
secont condition:: tensor(1.6765e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3412e-06, dtype=torch.float64)
secont condition:: tensor(2.3412e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9000e-08, dtype=torch.float64)
secont condition:: tensor(8.9000e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9304e-07, dtype=torch.float64)
secont condition:: tensor(1.9304e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2639e-07, dtype=torch.float64)
secont condition:: tensor(1.2639e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8690e-08, dtype=torch.float64)
secont condition:: tensor(9.8690e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1614e-08, dtype=torch.float64)
secont condition:: tensor(6.1614e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4169e-07, dtype=torch.float64)
secont condition:: tensor(1.4169e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1371e-07, dtype=torch.float64)
secont condition:: tensor(1.1371e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1473e-08, dtype=torch.float64)
secont condition:: tensor(2.1473e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4648e-07, dtype=torch.float64)
secont condition:: tensor(1.4648e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3541e-07, dtype=torch.float64)
secont condition:: tensor(1.3541e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6389e-07, dtype=torch.float64)
secont condition:: tensor(2.6389e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4722e-08, dtype=torch.float64)
secont condition:: tensor(7.4722e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3005e-08, dtype=torch.float64)
secont condition:: tensor(1.3005e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9945e-07, dtype=torch.float64)
secont condition:: tensor(1.9945e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4649e-08, dtype=torch.float64)
secont condition:: tensor(9.4649e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1577e-08, dtype=torch.float64)
secont condition:: tensor(9.1577e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2988e-08, dtype=torch.float64)
secont condition:: tensor(7.2988e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5858e-07, dtype=torch.float64)
secont condition:: tensor(1.5858e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.24307918548584
curr_diff: 0 tensor(1.2569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7864e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0459e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.0988e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2048e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8109e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8714e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2549e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.0587e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3515e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.230974
Test Avg. Loss: 0.000024, Accuracy: 0.941400
Train - Epoch 1, Batch: 0, Loss: 0.258288
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.166377
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.158649
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.157453
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 5, Batch: 0, Loss: 0.157529
Test Avg. Loss: 0.000024, Accuracy: 0.923700
Train - Epoch 6, Batch: 0, Loss: 0.256920
Test Avg. Loss: 0.000076, Accuracy: 0.793700
Train - Epoch 7, Batch: 0, Loss: 0.794933
Test Avg. Loss: 0.000022, Accuracy: 0.946000
Train - Epoch 8, Batch: 0, Loss: 0.243627
Test Avg. Loss: 0.000017, Accuracy: 0.950600
Train - Epoch 9, Batch: 0, Loss: 0.186246
Test Avg. Loss: 0.000016, Accuracy: 0.951400
Train - Epoch 10, Batch: 0, Loss: 0.178521
Test Avg. Loss: 0.000016, Accuracy: 0.953600
Train - Epoch 11, Batch: 0, Loss: 0.177795
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 12, Batch: 0, Loss: 0.165915
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 13, Batch: 0, Loss: 0.162555
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 14, Batch: 0, Loss: 0.163059
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 15, Batch: 0, Loss: 0.159444
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 16, Batch: 0, Loss: 0.163485
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 17, Batch: 0, Loss: 0.160434
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 18, Batch: 0, Loss: 0.160644
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 19, Batch: 0, Loss: 0.155338
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 20, Batch: 0, Loss: 0.155407
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 21, Batch: 0, Loss: 0.149617
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 22, Batch: 0, Loss: 0.148765
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 23, Batch: 0, Loss: 0.159834
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 24, Batch: 0, Loss: 0.157496
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 25, Batch: 0, Loss: 0.161451
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 26, Batch: 0, Loss: 0.153399
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.157836
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 28, Batch: 0, Loss: 0.159123
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 29, Batch: 0, Loss: 0.149294
Test Avg. Loss: 0.000014, Accuracy: 0.960700
training_time:: 169.73866724967957
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.61754131317139
time_baseline:: 116.68255925178528
curr_diff: 0 tensor(3.7565e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3166e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2647e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1144e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2553e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7019e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6335e-32, dtype=torch.float64)
secont condition:: tensor(2.6335e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0821e-31, dtype=torch.float64)
secont condition:: tensor(1.0821e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.4104e-08, dtype=torch.float64)
secont condition:: tensor(6.4104e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2181e-08, dtype=torch.float64)
secont condition:: tensor(3.2181e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0704e-08, dtype=torch.float64)
secont condition:: tensor(4.0704e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3455e-08, dtype=torch.float64)
secont condition:: tensor(1.3455e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2722e-09, dtype=torch.float64)
secont condition:: tensor(8.2722e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6168e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5029e-08, dtype=torch.float64)
secont condition:: tensor(1.5029e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7338e-09, dtype=torch.float64)
secont condition:: tensor(9.7338e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2365e-08, dtype=torch.float64)
secont condition:: tensor(1.2365e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7250e-06, dtype=torch.float64)
secont condition:: tensor(4.7250e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0809e-08, dtype=torch.float64)
secont condition:: tensor(2.0809e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2047e-08, dtype=torch.float64)
secont condition:: tensor(1.2047e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.7177e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8528e-08, dtype=torch.float64)
secont condition:: tensor(1.8528e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5245e-08, dtype=torch.float64)
secont condition:: tensor(1.5245e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8116e-09, dtype=torch.float64)
secont condition:: tensor(7.8116e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5226e-08, dtype=torch.float64)
secont condition:: tensor(1.5226e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8361e-08, dtype=torch.float64)
secont condition:: tensor(1.8361e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7928e-08, dtype=torch.float64)
secont condition:: tensor(1.7928e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7045e-08, dtype=torch.float64)
secont condition:: tensor(3.7045e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3506e-08, dtype=torch.float64)
secont condition:: tensor(1.3506e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3740e-08, dtype=torch.float64)
secont condition:: tensor(7.3740e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3057e-08, dtype=torch.float64)
secont condition:: tensor(4.3057e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6561e-07, dtype=torch.float64)
secont condition:: tensor(2.6561e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6472e-07, dtype=torch.float64)
secont condition:: tensor(2.6472e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9126e-08, dtype=torch.float64)
secont condition:: tensor(7.9126e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2945e-08, dtype=torch.float64)
secont condition:: tensor(7.2945e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1033e-07, dtype=torch.float64)
secont condition:: tensor(1.1033e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2703e-08, dtype=torch.float64)
secont condition:: tensor(9.2703e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2614e-08, dtype=torch.float64)
secont condition:: tensor(4.2614e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7567e-08, dtype=torch.float64)
secont condition:: tensor(8.7567e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0596e-08, dtype=torch.float64)
secont condition:: tensor(1.0596e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5547e-08, dtype=torch.float64)
secont condition:: tensor(3.5547e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2213e-08, dtype=torch.float64)
secont condition:: tensor(4.2213e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9868e-08, dtype=torch.float64)
secont condition:: tensor(3.9868e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8879e-08, dtype=torch.float64)
secont condition:: tensor(3.8879e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3552e-09, dtype=torch.float64)
secont condition:: tensor(6.3552e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3620e-08, dtype=torch.float64)
secont condition:: tensor(1.3620e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9499e-08, dtype=torch.float64)
secont condition:: tensor(4.9499e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0211e-08, dtype=torch.float64)
secont condition:: tensor(2.0211e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2809e-09, dtype=torch.float64)
secont condition:: tensor(3.2809e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4676e-09, dtype=torch.float64)
secont condition:: tensor(2.4676e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0067e-08, dtype=torch.float64)
secont condition:: tensor(3.0067e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3721e-08, dtype=torch.float64)
secont condition:: tensor(1.3721e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8540e-08, dtype=torch.float64)
secont condition:: tensor(1.8540e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4520e-09, dtype=torch.float64)
secont condition:: tensor(5.4520e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2416e-08, dtype=torch.float64)
secont condition:: tensor(5.2416e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1927e-08, dtype=torch.float64)
secont condition:: tensor(3.1927e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.0987e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6921e-09, dtype=torch.float64)
secont condition:: tensor(5.6921e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4503e-08, dtype=torch.float64)
secont condition:: tensor(5.4503e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8554e-08, dtype=torch.float64)
secont condition:: tensor(2.8554e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8474e-08, dtype=torch.float64)
secont condition:: tensor(1.8474e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6236e-08, dtype=torch.float64)
secont condition:: tensor(2.6236e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3729e-08, dtype=torch.float64)
secont condition:: tensor(2.3729e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3262e-08, dtype=torch.float64)
secont condition:: tensor(4.3262e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9088e-08, dtype=torch.float64)
secont condition:: tensor(7.9088e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2032e-09, dtype=torch.float64)
secont condition:: tensor(6.2032e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.6227e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7905e-08, dtype=torch.float64)
secont condition:: tensor(2.7905e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3551e-08, dtype=torch.float64)
secont condition:: tensor(2.3551e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2521e-08, dtype=torch.float64)
secont condition:: tensor(3.2521e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9079e-08, dtype=torch.float64)
secont condition:: tensor(3.9079e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0108e-08, dtype=torch.float64)
secont condition:: tensor(4.0108e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7454e-08, dtype=torch.float64)
secont condition:: tensor(3.7454e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5006e-08, dtype=torch.float64)
secont condition:: tensor(1.5006e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6620e-07, dtype=torch.float64)
secont condition:: tensor(1.6620e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.1523e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5385e-10, dtype=torch.float64)
secont condition:: tensor(5.5385e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9925e-08, dtype=torch.float64)
secont condition:: tensor(2.9925e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8181e-08, dtype=torch.float64)
secont condition:: tensor(1.8181e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2426e-08, dtype=torch.float64)
secont condition:: tensor(3.2426e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.9822e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4777e-08, dtype=torch.float64)
secont condition:: tensor(4.4777e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8641e-08, dtype=torch.float64)
secont condition:: tensor(2.8641e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2255e-08, dtype=torch.float64)
secont condition:: tensor(2.2255e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.504853010177612
curr_diff: 0 tensor(7.3748e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9456e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.0915e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9213e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1246e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8225e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2832e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.9681e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3435e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0539e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0044e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2490e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239088
Test Avg. Loss: 0.000023, Accuracy: 0.942300
Train - Epoch 1, Batch: 0, Loss: 0.241571
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 2, Batch: 0, Loss: 0.163196
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.158535
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 4, Batch: 0, Loss: 0.160086
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 5, Batch: 0, Loss: 0.159605
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 6, Batch: 0, Loss: 0.172322
Test Avg. Loss: 0.000146, Accuracy: 0.634800
Train - Epoch 7, Batch: 0, Loss: 1.469105
Test Avg. Loss: 0.000030, Accuracy: 0.929900
Train - Epoch 8, Batch: 0, Loss: 0.315132
Test Avg. Loss: 0.000018, Accuracy: 0.951100
Train - Epoch 9, Batch: 0, Loss: 0.195493
Test Avg. Loss: 0.000016, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.178338
Test Avg. Loss: 0.000016, Accuracy: 0.954200
Train - Epoch 11, Batch: 0, Loss: 0.174079
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 12, Batch: 0, Loss: 0.170029
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 13, Batch: 0, Loss: 0.163507
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 14, Batch: 0, Loss: 0.168308
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 15, Batch: 0, Loss: 0.163010
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 16, Batch: 0, Loss: 0.158049
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 17, Batch: 0, Loss: 0.154911
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 18, Batch: 0, Loss: 0.152584
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.154491
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 20, Batch: 0, Loss: 0.152253
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.160893
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.157743
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 23, Batch: 0, Loss: 0.153611
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 24, Batch: 0, Loss: 0.156570
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.151927
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.158395
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.150691
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 28, Batch: 0, Loss: 0.160782
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 29, Batch: 0, Loss: 0.154986
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 169.543847322464
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.68076682090759
time_baseline:: 116.74538540840149
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6249e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0054, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0876e-32, dtype=torch.float64)
secont condition:: tensor(1.0876e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6800e-08, dtype=torch.float64)
secont condition:: tensor(2.6800e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8188e-08, dtype=torch.float64)
secont condition:: tensor(1.8188e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8586e-09, dtype=torch.float64)
secont condition:: tensor(9.8586e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6929e-11, dtype=torch.float64)
secont condition:: tensor(9.6929e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.5875e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2327e-08, dtype=torch.float64)
secont condition:: tensor(1.2327e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0299e-09, dtype=torch.float64)
secont condition:: tensor(6.0299e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8188e-10, dtype=torch.float64)
secont condition:: tensor(5.8188e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0305e-08, dtype=torch.float64)
secont condition:: tensor(3.0305e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7148e-09, dtype=torch.float64)
secont condition:: tensor(6.7148e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3963e-09, dtype=torch.float64)
secont condition:: tensor(8.3963e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2893e-08, dtype=torch.float64)
secont condition:: tensor(1.2893e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8426e-08, dtype=torch.float64)
secont condition:: tensor(1.8426e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8584e-08, dtype=torch.float64)
secont condition:: tensor(1.8584e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6207e-09, dtype=torch.float64)
secont condition:: tensor(5.6207e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5252e-09, dtype=torch.float64)
secont condition:: tensor(2.5252e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4183e-09, dtype=torch.float64)
secont condition:: tensor(9.4183e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2654e-08, dtype=torch.float64)
secont condition:: tensor(2.2654e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8636e-08, dtype=torch.float64)
secont condition:: tensor(4.8636e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4897e-08, dtype=torch.float64)
secont condition:: tensor(4.4897e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0798e-08, dtype=torch.float64)
secont condition:: tensor(7.0798e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4375e-07, dtype=torch.float64)
secont condition:: tensor(1.4375e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6585e-07, dtype=torch.float64)
secont condition:: tensor(3.6585e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7875e-07, dtype=torch.float64)
secont condition:: tensor(9.7875e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1754e-06, dtype=torch.float64)
secont condition:: tensor(4.1754e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9117e-06, dtype=torch.float64)
secont condition:: tensor(6.9117e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7677e-05, dtype=torch.float64)
secont condition:: tensor(2.7677e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2382e-05, dtype=torch.float64)
secont condition:: tensor(4.2382e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.4865e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1788e-07, dtype=torch.float64)
secont condition:: tensor(5.1788e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3403e-05, dtype=torch.float64)
secont condition:: tensor(1.3403e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2336e-05, dtype=torch.float64)
secont condition:: tensor(1.2336e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9195e-06, dtype=torch.float64)
secont condition:: tensor(5.9195e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.7322e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0531e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7437e-06, dtype=torch.float64)
secont condition:: tensor(1.7437e-06, dtype=torch.float64)
curr_secont condition:: tensor(-8.2233e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.0490e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9837e-07, dtype=torch.float64)
secont condition:: tensor(2.9837e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.0615e-06, dtype=torch.float64)
curr_secont condition:: tensor(-9.3812e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2574e-06, dtype=torch.float64)
secont condition:: tensor(4.2574e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3517e-06, dtype=torch.float64)
secont condition:: tensor(1.3517e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4834e-06, dtype=torch.float64)
secont condition:: tensor(1.4834e-06, dtype=torch.float64)
curr_secont condition:: tensor(-9.9305e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1799e-07, dtype=torch.float64)
secont condition:: tensor(5.1799e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7573e-06, dtype=torch.float64)
secont condition:: tensor(1.7573e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7761e-07, dtype=torch.float64)
secont condition:: tensor(4.7761e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7977e-06, dtype=torch.float64)
secont condition:: tensor(1.7977e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1927e-06, dtype=torch.float64)
secont condition:: tensor(1.1927e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6003e-07, dtype=torch.float64)
secont condition:: tensor(6.6003e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0670e-06, dtype=torch.float64)
secont condition:: tensor(1.0670e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.6253e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9282e-06, dtype=torch.float64)
secont condition:: tensor(1.9282e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.4301e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.3182e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4561e-06, dtype=torch.float64)
secont condition:: tensor(3.4561e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2452e-06, dtype=torch.float64)
secont condition:: tensor(1.2452e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2780e-07, dtype=torch.float64)
secont condition:: tensor(1.2780e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6267e-07, dtype=torch.float64)
secont condition:: tensor(9.6267e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7734e-07, dtype=torch.float64)
secont condition:: tensor(5.7734e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1525e-06, dtype=torch.float64)
secont condition:: tensor(3.1525e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8875e-06, dtype=torch.float64)
secont condition:: tensor(1.8875e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5005e-06, dtype=torch.float64)
secont condition:: tensor(3.5005e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8109e-06, dtype=torch.float64)
secont condition:: tensor(1.8109e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5160e-06, dtype=torch.float64)
secont condition:: tensor(1.5160e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1458e-06, dtype=torch.float64)
secont condition:: tensor(2.1458e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.8208e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3566e-06, dtype=torch.float64)
secont condition:: tensor(2.3566e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8968e-07, dtype=torch.float64)
secont condition:: tensor(8.8968e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1305e-06, dtype=torch.float64)
secont condition:: tensor(3.1305e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4197e-06, dtype=torch.float64)
secont condition:: tensor(3.4197e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6133e-08, dtype=torch.float64)
secont condition:: tensor(9.6133e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2805e-06, dtype=torch.float64)
secont condition:: tensor(1.2805e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5756e-07, dtype=torch.float64)
secont condition:: tensor(7.5756e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6870e-06, dtype=torch.float64)
secont condition:: tensor(2.6870e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4075e-06, dtype=torch.float64)
secont condition:: tensor(3.4075e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3212e-06, dtype=torch.float64)
secont condition:: tensor(3.3212e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.200868844985962
curr_diff: 0 tensor(3.3093e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.1603e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6778e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.5975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.4284e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1234e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.9245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0053, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
random set 5
python3 generate_rand_ids 0.00002  MNIST
tensor([31631])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243300
Test Avg. Loss: 0.000024, Accuracy: 0.942200
Train - Epoch 1, Batch: 0, Loss: 0.259529
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 2, Batch: 0, Loss: 0.169670
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 3, Batch: 0, Loss: 0.158374
Test Avg. Loss: 0.000014, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.162393
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 5, Batch: 0, Loss: 0.159300
Test Avg. Loss: 0.000020, Accuracy: 0.940700
Train - Epoch 6, Batch: 0, Loss: 0.226878
Test Avg. Loss: 0.000034, Accuracy: 0.908200
Train - Epoch 7, Batch: 0, Loss: 0.368922
Test Avg. Loss: 0.000016, Accuracy: 0.955700
Train - Epoch 8, Batch: 0, Loss: 0.181367
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 9, Batch: 0, Loss: 0.165373
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 10, Batch: 0, Loss: 0.159406
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 11, Batch: 0, Loss: 0.164274
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.153933
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.152952
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 14, Batch: 0, Loss: 0.154466
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.152688
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.157454
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.151011
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 18, Batch: 0, Loss: 0.155312
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.155505
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.149237
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.151710
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 22, Batch: 0, Loss: 0.156278
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.151757
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.152796
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.152336
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.153284
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.154559
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.156803
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.155821
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 171.82508873939514
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.96340107917786
time_baseline:: 116.02812099456787
curr_diff: 0 tensor(6.2083e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0694e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9997e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0594e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5272e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6967e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1764e-09, dtype=torch.float64)
secont condition:: tensor(3.1764e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2269e-09, dtype=torch.float64)
secont condition:: tensor(6.2269e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5820e-08, dtype=torch.float64)
secont condition:: tensor(2.5820e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8105e-08, dtype=torch.float64)
secont condition:: tensor(2.8105e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1403e-08, dtype=torch.float64)
secont condition:: tensor(1.1403e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7355e-09, dtype=torch.float64)
secont condition:: tensor(2.7355e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9718e-10, dtype=torch.float64)
secont condition:: tensor(7.9718e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9531e-09, dtype=torch.float64)
secont condition:: tensor(2.9531e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1521e-09, dtype=torch.float64)
secont condition:: tensor(2.1521e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0460e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2175e-08, dtype=torch.float64)
secont condition:: tensor(1.2175e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2402e-09, dtype=torch.float64)
secont condition:: tensor(9.2402e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0236e-09, dtype=torch.float64)
secont condition:: tensor(5.0236e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4030e-08, dtype=torch.float64)
secont condition:: tensor(2.4030e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9386e-10, dtype=torch.float64)
secont condition:: tensor(7.9386e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6505e-09, dtype=torch.float64)
secont condition:: tensor(5.6505e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4968e-09, dtype=torch.float64)
secont condition:: tensor(6.4968e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5225e-08, dtype=torch.float64)
secont condition:: tensor(1.5225e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2742e-09, dtype=torch.float64)
secont condition:: tensor(7.2742e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6973e-08, dtype=torch.float64)
secont condition:: tensor(1.6973e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7378e-08, dtype=torch.float64)
secont condition:: tensor(3.7378e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6251e-08, dtype=torch.float64)
secont condition:: tensor(3.6251e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9224e-08, dtype=torch.float64)
secont condition:: tensor(7.9224e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8934e-07, dtype=torch.float64)
secont condition:: tensor(1.8934e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7236e-07, dtype=torch.float64)
secont condition:: tensor(6.7236e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5737e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8341e-05, dtype=torch.float64)
secont condition:: tensor(1.8341e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3592e-06, dtype=torch.float64)
secont condition:: tensor(9.3592e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9009e-06, dtype=torch.float64)
secont condition:: tensor(4.9009e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9725e-07, dtype=torch.float64)
secont condition:: tensor(5.9725e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5334e-07, dtype=torch.float64)
secont condition:: tensor(2.5334e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4193e-07, dtype=torch.float64)
secont condition:: tensor(4.4193e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1195e-07, dtype=torch.float64)
secont condition:: tensor(1.1195e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5973e-07, dtype=torch.float64)
secont condition:: tensor(1.5973e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0023e-07, dtype=torch.float64)
secont condition:: tensor(2.0023e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8138e-07, dtype=torch.float64)
secont condition:: tensor(1.8138e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9891e-08, dtype=torch.float64)
secont condition:: tensor(6.9891e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1094e-07, dtype=torch.float64)
secont condition:: tensor(1.1094e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3289e-08, dtype=torch.float64)
secont condition:: tensor(9.3289e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7010e-08, dtype=torch.float64)
secont condition:: tensor(9.7010e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2404e-08, dtype=torch.float64)
secont condition:: tensor(4.2404e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3158e-07, dtype=torch.float64)
secont condition:: tensor(1.3158e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7386e-08, dtype=torch.float64)
secont condition:: tensor(8.7386e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4594e-07, dtype=torch.float64)
secont condition:: tensor(1.4594e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6067e-06, dtype=torch.float64)
secont condition:: tensor(1.6067e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8431e-08, dtype=torch.float64)
secont condition:: tensor(4.8431e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1584e-08, dtype=torch.float64)
secont condition:: tensor(4.1584e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3139e-08, dtype=torch.float64)
secont condition:: tensor(4.3139e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0597e-08, dtype=torch.float64)
secont condition:: tensor(7.0597e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5701e-08, dtype=torch.float64)
secont condition:: tensor(3.5701e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0891e-08, dtype=torch.float64)
secont condition:: tensor(8.0891e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7501e-08, dtype=torch.float64)
secont condition:: tensor(3.7501e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7948e-08, dtype=torch.float64)
secont condition:: tensor(4.7948e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3885e-08, dtype=torch.float64)
secont condition:: tensor(4.3885e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1350e-08, dtype=torch.float64)
secont condition:: tensor(7.1350e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.8020e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1807e-07, dtype=torch.float64)
secont condition:: tensor(4.1807e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5586e-06, dtype=torch.float64)
secont condition:: tensor(6.5586e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7533e-08, dtype=torch.float64)
secont condition:: tensor(3.7533e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2755e-08, dtype=torch.float64)
secont condition:: tensor(5.2755e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1811e-08, dtype=torch.float64)
secont condition:: tensor(5.1811e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1324e-08, dtype=torch.float64)
secont condition:: tensor(5.1324e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3560e-08, dtype=torch.float64)
secont condition:: tensor(4.3560e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4322e-08, dtype=torch.float64)
secont condition:: tensor(1.4322e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5076e-07, dtype=torch.float64)
secont condition:: tensor(6.5076e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4799e-08, dtype=torch.float64)
secont condition:: tensor(4.4799e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4988e-06, dtype=torch.float64)
secont condition:: tensor(2.4988e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3510e-08, dtype=torch.float64)
secont condition:: tensor(2.3510e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.4400e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7818e-08, dtype=torch.float64)
secont condition:: tensor(6.7818e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1911e-08, dtype=torch.float64)
secont condition:: tensor(6.1911e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3121e-08, dtype=torch.float64)
secont condition:: tensor(6.3121e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3006e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.1672e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8141e-08, dtype=torch.float64)
secont condition:: tensor(4.8141e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5647e-08, dtype=torch.float64)
secont condition:: tensor(2.5647e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8433e-08, dtype=torch.float64)
secont condition:: tensor(4.8433e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8886e-08, dtype=torch.float64)
secont condition:: tensor(3.8886e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8838e-08, dtype=torch.float64)
secont condition:: tensor(2.8838e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.481404542922974
curr_diff: 0 tensor(9.0044e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8925e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.8189e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5154e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4567e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7500e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5124e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2361e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.0663e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1979e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1196e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.6108e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.7664e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232628
Test Avg. Loss: 0.000025, Accuracy: 0.938000
Train - Epoch 1, Batch: 0, Loss: 0.262547
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.166218
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.165015
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 4, Batch: 0, Loss: 0.165644
Test Avg. Loss: 0.000016, Accuracy: 0.953900
Train - Epoch 5, Batch: 0, Loss: 0.170972
Test Avg. Loss: 0.000056, Accuracy: 0.794600
Train - Epoch 6, Batch: 0, Loss: 0.593399
Test Avg. Loss: 0.000020, Accuracy: 0.951200
Train - Epoch 7, Batch: 0, Loss: 0.213637
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 8, Batch: 0, Loss: 0.171694
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 9, Batch: 0, Loss: 0.161620
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 10, Batch: 0, Loss: 0.157570
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 11, Batch: 0, Loss: 0.152533
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 12, Batch: 0, Loss: 0.162109
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 13, Batch: 0, Loss: 0.157062
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 14, Batch: 0, Loss: 0.155334
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 15, Batch: 0, Loss: 0.161940
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 16, Batch: 0, Loss: 0.155863
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.156695
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.157870
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.159069
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.155390
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.151696
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.157448
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.159873
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.152631
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.152638
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.148962
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.156582
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.150568
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.158081
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 170.83067154884338
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.7225592136383
time_baseline:: 115.78821420669556
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0507e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8300e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3495e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.7071e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0800e-32, dtype=torch.float64)
secont condition:: tensor(1.0800e-32, dtype=torch.float64)
curr_secont condition:: tensor(-1.2604e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.2159e-09, dtype=torch.float64)
secont condition:: tensor(2.2159e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0408e-12, dtype=torch.float64)
secont condition:: tensor(4.0408e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.4886e-09, dtype=torch.float64)
secont condition:: tensor(4.4886e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4317e-09, dtype=torch.float64)
secont condition:: tensor(8.4317e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5260e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3767e-09, dtype=torch.float64)
secont condition:: tensor(4.3767e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5592e-09, dtype=torch.float64)
secont condition:: tensor(3.5592e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.3220e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6279e-09, dtype=torch.float64)
secont condition:: tensor(2.6279e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9154e-09, dtype=torch.float64)
secont condition:: tensor(2.9154e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2214e-09, dtype=torch.float64)
secont condition:: tensor(2.2214e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7190e-09, dtype=torch.float64)
secont condition:: tensor(4.7190e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5174e-09, dtype=torch.float64)
secont condition:: tensor(2.5174e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-08, dtype=torch.float64)
secont condition:: tensor(1.3234e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4217e-08, dtype=torch.float64)
secont condition:: tensor(1.4217e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9864e-08, dtype=torch.float64)
secont condition:: tensor(1.9864e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3076e-08, dtype=torch.float64)
secont condition:: tensor(3.3076e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1370e-08, dtype=torch.float64)
secont condition:: tensor(8.1370e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1312e-07, dtype=torch.float64)
secont condition:: tensor(1.1312e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7489e-07, dtype=torch.float64)
secont condition:: tensor(2.7489e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4804e-07, dtype=torch.float64)
secont condition:: tensor(6.4804e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1398e-07, dtype=torch.float64)
secont condition:: tensor(1.1398e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0672e-05, dtype=torch.float64)
secont condition:: tensor(1.0672e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6741e-05, dtype=torch.float64)
secont condition:: tensor(1.6741e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6341e-05, dtype=torch.float64)
secont condition:: tensor(1.6341e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7852e-06, dtype=torch.float64)
secont condition:: tensor(3.7852e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1040e-06, dtype=torch.float64)
secont condition:: tensor(1.1040e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1049e-07, dtype=torch.float64)
secont condition:: tensor(5.1049e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3846e-07, dtype=torch.float64)
secont condition:: tensor(5.3846e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3863e-07, dtype=torch.float64)
secont condition:: tensor(5.3863e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7037e-07, dtype=torch.float64)
secont condition:: tensor(1.7037e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5140e-07, dtype=torch.float64)
secont condition:: tensor(3.5140e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4239e-07, dtype=torch.float64)
secont condition:: tensor(3.4239e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9730e-07, dtype=torch.float64)
secont condition:: tensor(6.9730e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8115e-06, dtype=torch.float64)
secont condition:: tensor(7.8115e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3961e-07, dtype=torch.float64)
secont condition:: tensor(2.3961e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0215e-08, dtype=torch.float64)
secont condition:: tensor(8.0215e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1583e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2943e-07, dtype=torch.float64)
secont condition:: tensor(1.2943e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7779e-07, dtype=torch.float64)
secont condition:: tensor(3.7779e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5796e-06, dtype=torch.float64)
secont condition:: tensor(1.5796e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7221e-07, dtype=torch.float64)
secont condition:: tensor(1.7221e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1371e-07, dtype=torch.float64)
secont condition:: tensor(1.1371e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2826e-07, dtype=torch.float64)
secont condition:: tensor(2.2826e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4598e-07, dtype=torch.float64)
secont condition:: tensor(1.4598e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4413e-07, dtype=torch.float64)
secont condition:: tensor(1.4413e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0986e-07, dtype=torch.float64)
secont condition:: tensor(1.0986e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0898e-07, dtype=torch.float64)
secont condition:: tensor(1.0898e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3992e-07, dtype=torch.float64)
secont condition:: tensor(1.3992e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9676e-08, dtype=torch.float64)
secont condition:: tensor(8.9676e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6791e-07, dtype=torch.float64)
secont condition:: tensor(1.6791e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5899e-08, dtype=torch.float64)
secont condition:: tensor(6.5899e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0650e-07, dtype=torch.float64)
secont condition:: tensor(1.0650e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5962e-06, dtype=torch.float64)
secont condition:: tensor(1.5962e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8374e-08, dtype=torch.float64)
secont condition:: tensor(3.8374e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2453e-07, dtype=torch.float64)
secont condition:: tensor(1.2453e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.2736e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9838e-08, dtype=torch.float64)
secont condition:: tensor(4.9838e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4043e-07, dtype=torch.float64)
secont condition:: tensor(1.4043e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9627e-08, dtype=torch.float64)
secont condition:: tensor(5.9627e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.1911e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2883e-07, dtype=torch.float64)
secont condition:: tensor(2.2883e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8451e-08, dtype=torch.float64)
secont condition:: tensor(5.8451e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4234e-08, dtype=torch.float64)
secont condition:: tensor(4.4234e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9213e-08, dtype=torch.float64)
secont condition:: tensor(3.9213e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7467e-08, dtype=torch.float64)
secont condition:: tensor(9.7467e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0013e-07, dtype=torch.float64)
secont condition:: tensor(1.0013e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1823e-07, dtype=torch.float64)
secont condition:: tensor(1.1823e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9235e-08, dtype=torch.float64)
secont condition:: tensor(4.9235e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3173e-08, dtype=torch.float64)
secont condition:: tensor(3.3173e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7907e-08, dtype=torch.float64)
secont condition:: tensor(7.7907e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3941e-07, dtype=torch.float64)
secont condition:: tensor(1.3941e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1746e-07, dtype=torch.float64)
secont condition:: tensor(1.1746e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7218e-08, dtype=torch.float64)
secont condition:: tensor(6.7218e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2777e-07, dtype=torch.float64)
secont condition:: tensor(1.2777e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3085e-08, dtype=torch.float64)
secont condition:: tensor(3.3085e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6024e-08, dtype=torch.float64)
secont condition:: tensor(2.6024e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.76234769821167
curr_diff: 0 tensor(1.6326e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.2943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8102e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.0110e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8933e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0941e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.9006e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0578e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8153e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.4368e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8587e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242449
Test Avg. Loss: 0.000024, Accuracy: 0.939800
Train - Epoch 1, Batch: 0, Loss: 0.261882
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.169875
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.154872
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.158012
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.158693
Test Avg. Loss: 0.000033, Accuracy: 0.890200
Train - Epoch 6, Batch: 0, Loss: 0.357514
Test Avg. Loss: 0.000038, Accuracy: 0.932500
Train - Epoch 7, Batch: 0, Loss: 0.409538
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 8, Batch: 0, Loss: 0.189524
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 9, Batch: 0, Loss: 0.174035
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 10, Batch: 0, Loss: 0.170560
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 11, Batch: 0, Loss: 0.161566
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 12, Batch: 0, Loss: 0.162538
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 13, Batch: 0, Loss: 0.159092
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 14, Batch: 0, Loss: 0.155477
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 15, Batch: 0, Loss: 0.159506
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 16, Batch: 0, Loss: 0.157559
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 17, Batch: 0, Loss: 0.156181
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 18, Batch: 0, Loss: 0.158196
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 19, Batch: 0, Loss: 0.149708
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 20, Batch: 0, Loss: 0.154147
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.159802
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 22, Batch: 0, Loss: 0.155272
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 23, Batch: 0, Loss: 0.152828
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 24, Batch: 0, Loss: 0.157684
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 25, Batch: 0, Loss: 0.154508
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 26, Batch: 0, Loss: 0.155883
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 27, Batch: 0, Loss: 0.155707
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 28, Batch: 0, Loss: 0.152873
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 29, Batch: 0, Loss: 0.153981
Test Avg. Loss: 0.000014, Accuracy: 0.960700
training_time:: 170.02139019966125
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.65831422805786
time_baseline:: 115.72397136688232
curr_diff: 0 tensor(4.9751e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2074e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0122e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.1695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3123e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9443e-32, dtype=torch.float64)
secont condition:: tensor(1.9443e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.1428e-32, dtype=torch.float64)
secont condition:: tensor(6.1428e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3074e-32, dtype=torch.float64)
secont condition:: tensor(1.3074e-32, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9983e-09, dtype=torch.float64)
secont condition:: tensor(3.9983e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3690e-10, dtype=torch.float64)
secont condition:: tensor(6.3690e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5027e-10, dtype=torch.float64)
secont condition:: tensor(6.5027e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9100e-10, dtype=torch.float64)
secont condition:: tensor(3.9100e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5949e-10, dtype=torch.float64)
secont condition:: tensor(9.5949e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0366e-10, dtype=torch.float64)
secont condition:: tensor(5.0366e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0796e-09, dtype=torch.float64)
secont condition:: tensor(1.0796e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0854e-10, dtype=torch.float64)
secont condition:: tensor(7.0854e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2283e-10, dtype=torch.float64)
secont condition:: tensor(3.2283e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7861e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.0781e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0137e-09, dtype=torch.float64)
secont condition:: tensor(1.0137e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1765e-10, dtype=torch.float64)
secont condition:: tensor(9.1765e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1618e-10, dtype=torch.float64)
secont condition:: tensor(8.1618e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1694e-09, dtype=torch.float64)
secont condition:: tensor(1.1694e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1371e-10, dtype=torch.float64)
secont condition:: tensor(3.1371e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6354e-09, dtype=torch.float64)
secont condition:: tensor(3.6354e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1386e-08, dtype=torch.float64)
secont condition:: tensor(1.1386e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0652e-08, dtype=torch.float64)
secont condition:: tensor(2.0652e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8093e-08, dtype=torch.float64)
secont condition:: tensor(5.8093e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0557e-07, dtype=torch.float64)
secont condition:: tensor(1.0557e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0238e-08, dtype=torch.float64)
secont condition:: tensor(7.0238e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0416e-06, dtype=torch.float64)
secont condition:: tensor(1.0416e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.9130e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1426e-07, dtype=torch.float64)
secont condition:: tensor(7.1426e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2360e-07, dtype=torch.float64)
secont condition:: tensor(2.2360e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4391e-08, dtype=torch.float64)
secont condition:: tensor(4.4391e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9784e-08, dtype=torch.float64)
secont condition:: tensor(1.9784e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6301e-08, dtype=torch.float64)
secont condition:: tensor(5.6301e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4214e-08, dtype=torch.float64)
secont condition:: tensor(5.4214e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.3748e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0178e-07, dtype=torch.float64)
secont condition:: tensor(1.0178e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0835e-08, dtype=torch.float64)
secont condition:: tensor(6.0835e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9696e-08, dtype=torch.float64)
secont condition:: tensor(3.9696e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7771e-08, dtype=torch.float64)
secont condition:: tensor(2.7771e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3670e-08, dtype=torch.float64)
secont condition:: tensor(1.3670e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3277e-08, dtype=torch.float64)
secont condition:: tensor(2.3277e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9025e-08, dtype=torch.float64)
secont condition:: tensor(8.9025e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7970e-08, dtype=torch.float64)
secont condition:: tensor(5.7970e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3039e-08, dtype=torch.float64)
secont condition:: tensor(2.3039e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2513e-09, dtype=torch.float64)
secont condition:: tensor(8.2513e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7675e-10, dtype=torch.float64)
secont condition:: tensor(1.7675e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5063e-08, dtype=torch.float64)
secont condition:: tensor(1.5063e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8417e-09, dtype=torch.float64)
secont condition:: tensor(4.8417e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9026e-08, dtype=torch.float64)
secont condition:: tensor(1.9026e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5656e-09, dtype=torch.float64)
secont condition:: tensor(8.5656e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3080e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7463e-08, dtype=torch.float64)
secont condition:: tensor(3.7463e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.4167e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3271e-08, dtype=torch.float64)
secont condition:: tensor(1.3271e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.1768e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3630e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6152e-08, dtype=torch.float64)
secont condition:: tensor(6.6152e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1440e-08, dtype=torch.float64)
secont condition:: tensor(2.1440e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5177e-08, dtype=torch.float64)
secont condition:: tensor(5.5177e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0437e-08, dtype=torch.float64)
secont condition:: tensor(4.0437e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3150e-08, dtype=torch.float64)
secont condition:: tensor(2.3150e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7444e-08, dtype=torch.float64)
secont condition:: tensor(2.7444e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1290e-08, dtype=torch.float64)
secont condition:: tensor(2.1290e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.9861e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7951e-08, dtype=torch.float64)
secont condition:: tensor(3.7951e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3455e-08, dtype=torch.float64)
secont condition:: tensor(1.3455e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7212e-09, dtype=torch.float64)
secont condition:: tensor(9.7212e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1445e-09, dtype=torch.float64)
secont condition:: tensor(6.1445e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7176e-08, dtype=torch.float64)
secont condition:: tensor(2.7176e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2974e-08, dtype=torch.float64)
secont condition:: tensor(3.2974e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.3395e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1322e-08, dtype=torch.float64)
secont condition:: tensor(3.1322e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5802e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2730e-08, dtype=torch.float64)
secont condition:: tensor(1.2730e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4688e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6808e-09, dtype=torch.float64)
secont condition:: tensor(9.6808e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0402e-08, dtype=torch.float64)
secont condition:: tensor(2.0402e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5432e-08, dtype=torch.float64)
secont condition:: tensor(2.5432e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5193e-08, dtype=torch.float64)
secont condition:: tensor(2.5193e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7721e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.9812e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1703e-09, dtype=torch.float64)
secont condition:: tensor(7.1703e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7871e-09, dtype=torch.float64)
secont condition:: tensor(7.7871e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.322739362716675
curr_diff: 0 tensor(1.2304e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1150e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1654e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2213e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4774e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.0317e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7211e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0020e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.3091e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8842e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3169e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0107e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3106e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3742e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242854
Test Avg. Loss: 0.000024, Accuracy: 0.941700
Train - Epoch 1, Batch: 0, Loss: 0.256960
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 2, Batch: 0, Loss: 0.170926
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 3, Batch: 0, Loss: 0.160476
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 4, Batch: 0, Loss: 0.157959
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 5, Batch: 0, Loss: 0.157354
Test Avg. Loss: 0.000016, Accuracy: 0.951700
Train - Epoch 6, Batch: 0, Loss: 0.174223
Test Avg. Loss: 0.000069, Accuracy: 0.757400
Train - Epoch 7, Batch: 0, Loss: 0.714098
Test Avg. Loss: 0.000017, Accuracy: 0.954500
Train - Epoch 8, Batch: 0, Loss: 0.184975
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 9, Batch: 0, Loss: 0.163007
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 10, Batch: 0, Loss: 0.162166
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 11, Batch: 0, Loss: 0.159944
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.160340
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.160472
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 14, Batch: 0, Loss: 0.157315
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 15, Batch: 0, Loss: 0.156151
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.156764
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.154826
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.153625
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.162324
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 20, Batch: 0, Loss: 0.156319
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.154351
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.154958
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.155231
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.149220
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.153462
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 26, Batch: 0, Loss: 0.153517
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.155036
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 28, Batch: 0, Loss: 0.148166
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.152877
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 171.0341362953186
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.70146536827087
time_baseline:: 116.76814866065979
curr_diff: 0 tensor(8.9141e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.2809e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2845e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0776e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.0058e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5876e-32, dtype=torch.float64)
secont condition:: tensor(5.5876e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.1866e-09, dtype=torch.float64)
secont condition:: tensor(8.1866e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1879e-09, dtype=torch.float64)
secont condition:: tensor(4.1879e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8407e-09, dtype=torch.float64)
secont condition:: tensor(8.8407e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3961e-09, dtype=torch.float64)
secont condition:: tensor(5.3961e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3954e-09, dtype=torch.float64)
secont condition:: tensor(3.3954e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4535e-09, dtype=torch.float64)
secont condition:: tensor(3.4535e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0045e-10, dtype=torch.float64)
secont condition:: tensor(7.0045e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0022e-09, dtype=torch.float64)
secont condition:: tensor(1.0022e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0773e-10, dtype=torch.float64)
secont condition:: tensor(3.0773e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8922e-09, dtype=torch.float64)
secont condition:: tensor(5.8922e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7327e-09, dtype=torch.float64)
secont condition:: tensor(4.7327e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.4626e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1902e-09, dtype=torch.float64)
secont condition:: tensor(6.1902e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8829e-10, dtype=torch.float64)
secont condition:: tensor(7.8829e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7006e-09, dtype=torch.float64)
secont condition:: tensor(9.7006e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2575e-08, dtype=torch.float64)
secont condition:: tensor(1.2575e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.6548e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9903e-08, dtype=torch.float64)
secont condition:: tensor(2.9903e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3317e-08, dtype=torch.float64)
secont condition:: tensor(1.3317e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4772e-08, dtype=torch.float64)
secont condition:: tensor(1.4772e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.7861e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2678e-08, dtype=torch.float64)
secont condition:: tensor(5.2678e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0005e-07, dtype=torch.float64)
secont condition:: tensor(1.0005e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3165e-07, dtype=torch.float64)
secont condition:: tensor(4.3165e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8861e-06, dtype=torch.float64)
secont condition:: tensor(1.8861e-06, dtype=torch.float64)
curr_secont condition:: tensor(-4.7736e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1931e-05, dtype=torch.float64)
secont condition:: tensor(5.1931e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4466e-05, dtype=torch.float64)
secont condition:: tensor(2.4466e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3546e-05, dtype=torch.float64)
secont condition:: tensor(1.3546e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4903e-06, dtype=torch.float64)
secont condition:: tensor(1.4903e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3457e-07, dtype=torch.float64)
secont condition:: tensor(9.3457e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0690e-07, dtype=torch.float64)
secont condition:: tensor(2.0690e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7061e-07, dtype=torch.float64)
secont condition:: tensor(2.7061e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0888e-07, dtype=torch.float64)
secont condition:: tensor(3.0888e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4188e-07, dtype=torch.float64)
secont condition:: tensor(3.4188e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9796e-07, dtype=torch.float64)
secont condition:: tensor(2.9796e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7136e-07, dtype=torch.float64)
secont condition:: tensor(4.7136e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9766e-07, dtype=torch.float64)
secont condition:: tensor(2.9766e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5074e-07, dtype=torch.float64)
secont condition:: tensor(1.5074e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5512e-07, dtype=torch.float64)
secont condition:: tensor(1.5512e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0244e-09, dtype=torch.float64)
secont condition:: tensor(4.0244e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8789e-07, dtype=torch.float64)
secont condition:: tensor(2.8789e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.9515e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1653e-07, dtype=torch.float64)
secont condition:: tensor(4.1653e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1572e-06, dtype=torch.float64)
secont condition:: tensor(9.1572e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6852e-07, dtype=torch.float64)
secont condition:: tensor(1.6852e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1972e-07, dtype=torch.float64)
secont condition:: tensor(2.1972e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4808e-07, dtype=torch.float64)
secont condition:: tensor(1.4808e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1010e-07, dtype=torch.float64)
secont condition:: tensor(2.1010e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6221e-07, dtype=torch.float64)
secont condition:: tensor(2.6221e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4026e-06, dtype=torch.float64)
secont condition:: tensor(2.4026e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0765e-06, dtype=torch.float64)
secont condition:: tensor(7.0765e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2482e-08, dtype=torch.float64)
secont condition:: tensor(6.2482e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2687e-08, dtype=torch.float64)
secont condition:: tensor(5.2687e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3027e-07, dtype=torch.float64)
secont condition:: tensor(4.3027e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4928e-07, dtype=torch.float64)
secont condition:: tensor(1.4928e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8492e-07, dtype=torch.float64)
secont condition:: tensor(1.8492e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3374e-06, dtype=torch.float64)
secont condition:: tensor(1.3374e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5726e-07, dtype=torch.float64)
secont condition:: tensor(2.5726e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6232e-07, dtype=torch.float64)
secont condition:: tensor(5.6232e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4451e-07, dtype=torch.float64)
secont condition:: tensor(1.4451e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0775e-07, dtype=torch.float64)
secont condition:: tensor(1.0775e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9205e-08, dtype=torch.float64)
secont condition:: tensor(6.9205e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7971e-07, dtype=torch.float64)
secont condition:: tensor(1.7971e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2826e-07, dtype=torch.float64)
secont condition:: tensor(1.2826e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8335e-08, dtype=torch.float64)
secont condition:: tensor(5.8335e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2564e-06, dtype=torch.float64)
secont condition:: tensor(1.2564e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3698e-08, dtype=torch.float64)
secont condition:: tensor(6.3698e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1467e-07, dtype=torch.float64)
secont condition:: tensor(1.1467e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2063e-07, dtype=torch.float64)
secont condition:: tensor(2.2063e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1959e-08, dtype=torch.float64)
secont condition:: tensor(5.1959e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0127e-07, dtype=torch.float64)
secont condition:: tensor(1.0127e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6792e-08, dtype=torch.float64)
secont condition:: tensor(2.6792e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7190e-08, dtype=torch.float64)
secont condition:: tensor(7.7190e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0970e-07, dtype=torch.float64)
secont condition:: tensor(1.0970e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5482e-08, dtype=torch.float64)
secont condition:: tensor(3.5482e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2811e-07, dtype=torch.float64)
secont condition:: tensor(1.2811e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.088382959365845
curr_diff: 0 tensor(1.2378e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7490e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4131e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.7155e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1073e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5010e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4786e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.6849e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3934e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3396e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.1027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.1186e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236509
Test Avg. Loss: 0.000024, Accuracy: 0.942300
Train - Epoch 1, Batch: 0, Loss: 0.250056
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.160249
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 3, Batch: 0, Loss: 0.165415
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 4, Batch: 0, Loss: 0.158241
Test Avg. Loss: 0.000014, Accuracy: 0.957100
Train - Epoch 5, Batch: 0, Loss: 0.156772
Test Avg. Loss: 0.000035, Accuracy: 0.879300
Train - Epoch 6, Batch: 0, Loss: 0.383123
Test Avg. Loss: 0.000022, Accuracy: 0.947600
Train - Epoch 7, Batch: 0, Loss: 0.239456
Test Avg. Loss: 0.000016, Accuracy: 0.955200
Train - Epoch 8, Batch: 0, Loss: 0.176304
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 9, Batch: 0, Loss: 0.166501
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 10, Batch: 0, Loss: 0.155341
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 11, Batch: 0, Loss: 0.155733
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 12, Batch: 0, Loss: 0.153803
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.152720
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 14, Batch: 0, Loss: 0.162157
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.147386
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 16, Batch: 0, Loss: 0.156163
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 17, Batch: 0, Loss: 0.148559
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 18, Batch: 0, Loss: 0.152727
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.160461
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.152373
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.149798
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.154579
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.154649
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.149920
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.153796
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.152821
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.152636
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.152020
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.160505
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 170.5795509815216
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.81658005714417
time_baseline:: 116.88029074668884
curr_diff: 0 tensor(7.0362e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5562e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.9993e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8184e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.4526e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 1
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4161e-09, dtype=torch.float64)
secont condition:: tensor(2.4161e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1626e-09, dtype=torch.float64)
secont condition:: tensor(5.1626e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.1167e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0462e-08, dtype=torch.float64)
secont condition:: tensor(2.0462e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9644e-09, dtype=torch.float64)
secont condition:: tensor(9.9644e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4248e-09, dtype=torch.float64)
secont condition:: tensor(8.4248e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5704e-09, dtype=torch.float64)
secont condition:: tensor(6.5704e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.1500e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8056e-09, dtype=torch.float64)
secont condition:: tensor(1.8056e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1855e-09, dtype=torch.float64)
secont condition:: tensor(8.1855e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1678e-09, dtype=torch.float64)
secont condition:: tensor(8.1678e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1865e-09, dtype=torch.float64)
secont condition:: tensor(9.1865e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6055e-09, dtype=torch.float64)
secont condition:: tensor(6.6055e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4322e-09, dtype=torch.float64)
secont condition:: tensor(7.4322e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1137e-09, dtype=torch.float64)
secont condition:: tensor(8.1137e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2823e-09, dtype=torch.float64)
secont condition:: tensor(7.2823e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1309e-09, dtype=torch.float64)
secont condition:: tensor(7.1309e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7042e-08, dtype=torch.float64)
secont condition:: tensor(1.7042e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3185e-08, dtype=torch.float64)
secont condition:: tensor(2.3185e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6107e-08, dtype=torch.float64)
secont condition:: tensor(3.6107e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1476e-08, dtype=torch.float64)
secont condition:: tensor(7.1476e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3177e-07, dtype=torch.float64)
secont condition:: tensor(1.3177e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2043e-07, dtype=torch.float64)
secont condition:: tensor(4.2043e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6929e-06, dtype=torch.float64)
secont condition:: tensor(1.6929e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.0704e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0222e-05, dtype=torch.float64)
secont condition:: tensor(4.0222e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6487e-06, dtype=torch.float64)
secont condition:: tensor(8.6487e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4936e-06, dtype=torch.float64)
secont condition:: tensor(2.4936e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0807e-06, dtype=torch.float64)
secont condition:: tensor(1.0807e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6718e-05, dtype=torch.float64)
secont condition:: tensor(5.6718e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8946e-07, dtype=torch.float64)
secont condition:: tensor(3.8946e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0801e-07, dtype=torch.float64)
secont condition:: tensor(3.0801e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3169e-07, dtype=torch.float64)
secont condition:: tensor(1.3169e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8049e-07, dtype=torch.float64)
secont condition:: tensor(1.8049e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6668e-07, dtype=torch.float64)
secont condition:: tensor(3.6668e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0622e-07, dtype=torch.float64)
secont condition:: tensor(1.0622e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5328e-07, dtype=torch.float64)
secont condition:: tensor(2.5328e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.8309e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5656e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0214e-07, dtype=torch.float64)
secont condition:: tensor(1.0214e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3147e-08, dtype=torch.float64)
secont condition:: tensor(9.3147e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7073e-08, dtype=torch.float64)
secont condition:: tensor(2.7073e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7295e-08, dtype=torch.float64)
secont condition:: tensor(7.7295e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7333e-07, dtype=torch.float64)
secont condition:: tensor(1.7333e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8246e-06, dtype=torch.float64)
secont condition:: tensor(1.8246e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1057e-07, dtype=torch.float64)
secont condition:: tensor(1.1057e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3955e-08, dtype=torch.float64)
secont condition:: tensor(7.3955e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0327e-07, dtype=torch.float64)
secont condition:: tensor(2.0327e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5203e-07, dtype=torch.float64)
secont condition:: tensor(1.5203e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1676e-07, dtype=torch.float64)
secont condition:: tensor(1.1676e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.1650e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4590e-07, dtype=torch.float64)
secont condition:: tensor(3.4590e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2011e-06, dtype=torch.float64)
secont condition:: tensor(7.2011e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3148e-08, dtype=torch.float64)
secont condition:: tensor(5.3148e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2659e-08, dtype=torch.float64)
secont condition:: tensor(6.2659e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4315e-07, dtype=torch.float64)
secont condition:: tensor(1.4315e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1153e-07, dtype=torch.float64)
secont condition:: tensor(1.1153e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0411e-07, dtype=torch.float64)
secont condition:: tensor(1.0411e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3601e-09, dtype=torch.float64)
secont condition:: tensor(3.3601e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0357e-08, dtype=torch.float64)
secont condition:: tensor(5.0357e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4316e-08, dtype=torch.float64)
secont condition:: tensor(4.4316e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9495e-08, dtype=torch.float64)
secont condition:: tensor(4.9495e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2380e-07, dtype=torch.float64)
secont condition:: tensor(1.2380e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1283e-07, dtype=torch.float64)
secont condition:: tensor(1.1283e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1237e-08, dtype=torch.float64)
secont condition:: tensor(7.1237e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5106e-08, dtype=torch.float64)
secont condition:: tensor(8.5106e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0247e-08, dtype=torch.float64)
secont condition:: tensor(6.0247e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6881e-08, dtype=torch.float64)
secont condition:: tensor(2.6881e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0435e-07, dtype=torch.float64)
secont condition:: tensor(1.0435e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.8967e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7552e-08, dtype=torch.float64)
secont condition:: tensor(5.7552e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0996e-08, dtype=torch.float64)
secont condition:: tensor(4.0996e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1080e-08, dtype=torch.float64)
secont condition:: tensor(5.1080e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5195e-08, dtype=torch.float64)
secont condition:: tensor(6.5195e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5096e-08, dtype=torch.float64)
secont condition:: tensor(6.5096e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7109e-08, dtype=torch.float64)
secont condition:: tensor(4.7109e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5421e-08, dtype=torch.float64)
secont condition:: tensor(3.5421e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1360e-07, dtype=torch.float64)
secont condition:: tensor(1.1360e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9674e-08, dtype=torch.float64)
secont condition:: tensor(2.9674e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.288835763931274
curr_diff: 0 tensor(1.5252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4627e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6164e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.3675e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1209e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.6439e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3457e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.3950e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6308e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6233e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1535e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.0049e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
deletion rate:: 0.00005
random set 1
python3 generate_rand_ids 0.00005  MNIST
tensor([57686, 39305, 16742])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232529
Test Avg. Loss: 0.000026, Accuracy: 0.934300
Train - Epoch 1, Batch: 0, Loss: 0.276523
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.165803
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 3, Batch: 0, Loss: 0.161112
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.159205
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 5, Batch: 0, Loss: 0.154097
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 6, Batch: 0, Loss: 0.160995
Test Avg. Loss: 0.000127, Accuracy: 0.557800
Train - Epoch 7, Batch: 0, Loss: 1.329605
Test Avg. Loss: 0.000059, Accuracy: 0.827800
Train - Epoch 8, Batch: 0, Loss: 0.603983
Test Avg. Loss: 0.000027, Accuracy: 0.931300
Train - Epoch 9, Batch: 0, Loss: 0.294653
Test Avg. Loss: 0.000022, Accuracy: 0.943200
Train - Epoch 10, Batch: 0, Loss: 0.237152
Test Avg. Loss: 0.000020, Accuracy: 0.945500
Train - Epoch 11, Batch: 0, Loss: 0.218059
Test Avg. Loss: 0.000019, Accuracy: 0.946600
Train - Epoch 12, Batch: 0, Loss: 0.204677
Test Avg. Loss: 0.000018, Accuracy: 0.949400
Train - Epoch 13, Batch: 0, Loss: 0.194136
Test Avg. Loss: 0.000017, Accuracy: 0.951100
Train - Epoch 14, Batch: 0, Loss: 0.185198
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 15, Batch: 0, Loss: 0.185394
Test Avg. Loss: 0.000016, Accuracy: 0.952200
Train - Epoch 16, Batch: 0, Loss: 0.185809
Test Avg. Loss: 0.000016, Accuracy: 0.952600
Train - Epoch 17, Batch: 0, Loss: 0.181585
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 18, Batch: 0, Loss: 0.174100
Test Avg. Loss: 0.000016, Accuracy: 0.954700
Train - Epoch 19, Batch: 0, Loss: 0.169620
Test Avg. Loss: 0.000016, Accuracy: 0.955000
Train - Epoch 20, Batch: 0, Loss: 0.178092
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 21, Batch: 0, Loss: 0.175502
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 22, Batch: 0, Loss: 0.172143
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 23, Batch: 0, Loss: 0.165347
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 24, Batch: 0, Loss: 0.169524
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 25, Batch: 0, Loss: 0.159280
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 26, Batch: 0, Loss: 0.166184
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 27, Batch: 0, Loss: 0.171742
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 28, Batch: 0, Loss: 0.165804
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 29, Batch: 0, Loss: 0.167407
Test Avg. Loss: 0.000015, Accuracy: 0.957400
training_time:: 172.2082805633545
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.2950222492218
time_baseline:: 115.36017751693726
curr_diff: 0 tensor(0.0154, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0698, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1083, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0500, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0101, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0386, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0150, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1457, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9997, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.957600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3981e-09, dtype=torch.float64)
secont condition:: tensor(3.3981e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2267e-08, dtype=torch.float64)
secont condition:: tensor(3.2267e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.1419e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5113e-07, dtype=torch.float64)
secont condition:: tensor(1.5113e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7380e-08, dtype=torch.float64)
secont condition:: tensor(6.7380e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5343e-07, dtype=torch.float64)
secont condition:: tensor(5.5343e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6385e-08, dtype=torch.float64)
secont condition:: tensor(6.6385e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3343e-08, dtype=torch.float64)
secont condition:: tensor(2.3343e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2728e-08, dtype=torch.float64)
secont condition:: tensor(3.2728e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5369e-07, dtype=torch.float64)
secont condition:: tensor(8.5369e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6379e-07, dtype=torch.float64)
secont condition:: tensor(4.6379e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7478e-07, dtype=torch.float64)
secont condition:: tensor(2.7478e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3706e-07, dtype=torch.float64)
secont condition:: tensor(2.3706e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5438e-07, dtype=torch.float64)
secont condition:: tensor(2.5438e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8372e-07, dtype=torch.float64)
secont condition:: tensor(5.8372e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7987e-07, dtype=torch.float64)
secont condition:: tensor(2.7987e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6095e-06, dtype=torch.float64)
secont condition:: tensor(1.6095e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6130e-06, dtype=torch.float64)
secont condition:: tensor(1.6130e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1077e-06, dtype=torch.float64)
secont condition:: tensor(2.1077e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4427e-06, dtype=torch.float64)
secont condition:: tensor(3.4427e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4587e-06, dtype=torch.float64)
secont condition:: tensor(6.4587e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3612e-05, dtype=torch.float64)
secont condition:: tensor(1.3612e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1713e-05, dtype=torch.float64)
secont condition:: tensor(3.1713e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1106e-05, dtype=torch.float64)
secont condition:: tensor(6.1106e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0030, dtype=torch.float64)
secont condition:: tensor(0.0030, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0046, dtype=torch.float64)
curr_secont condition:: tensor(0.0565, dtype=torch.float64)
secont condition:: tensor(0.0565, dtype=torch.float64)
curr_secont condition:: tensor(-0.0057, dtype=torch.float64)
curr_secont condition:: tensor(0.0490, dtype=torch.float64)
secont condition:: tensor(0.0490, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0073, dtype=torch.float64)
secont condition:: tensor(0.0073, dtype=torch.float64)
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
curr_secont condition:: tensor(0.0030, dtype=torch.float64)
secont condition:: tensor(0.0030, dtype=torch.float64)
curr_secont condition:: tensor(0.0039, dtype=torch.float64)
secont condition:: tensor(0.0039, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-9.0161e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0228e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(1.7366e-07, dtype=torch.float64)
secont condition:: tensor(1.7366e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0737e-05, dtype=torch.float64)
secont condition:: tensor(5.0737e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.8613e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(5.7984e-05, dtype=torch.float64)
secont condition:: tensor(5.7984e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-1.4889e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.9425e-05, dtype=torch.float64)
secont condition:: tensor(7.9425e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(8.4826e-05, dtype=torch.float64)
secont condition:: tensor(8.4826e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.277443170547485
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.8858e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0055, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0152, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0689, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0499, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0102, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0388, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0152, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1446, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9997, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.957600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236074
Test Avg. Loss: 0.000025, Accuracy: 0.939600
Train - Epoch 1, Batch: 0, Loss: 0.260945
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.164523
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.155713
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.157914
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 5, Batch: 0, Loss: 0.168133
Test Avg. Loss: 0.000034, Accuracy: 0.884400
Train - Epoch 6, Batch: 0, Loss: 0.370158
Test Avg. Loss: 0.000019, Accuracy: 0.953100
Train - Epoch 7, Batch: 0, Loss: 0.207967
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 8, Batch: 0, Loss: 0.166117
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 9, Batch: 0, Loss: 0.152749
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 10, Batch: 0, Loss: 0.161382
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 11, Batch: 0, Loss: 0.157568
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 12, Batch: 0, Loss: 0.159170
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 13, Batch: 0, Loss: 0.155585
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 14, Batch: 0, Loss: 0.156600
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.153213
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 16, Batch: 0, Loss: 0.152478
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.154157
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 18, Batch: 0, Loss: 0.151079
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 19, Batch: 0, Loss: 0.157754
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 20, Batch: 0, Loss: 0.154708
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 21, Batch: 0, Loss: 0.152044
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.154158
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 23, Batch: 0, Loss: 0.158600
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.154554
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.155601
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.155812
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.152015
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.152198
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.160719
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 170.535649061203
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.64934372901917
time_baseline:: 115.71618008613586
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0138, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0171, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0215e-06, dtype=torch.float64)
secont condition:: tensor(2.0215e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8865e-06, dtype=torch.float64)
secont condition:: tensor(1.8865e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6110e-06, dtype=torch.float64)
secont condition:: tensor(1.6110e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0786e-06, dtype=torch.float64)
secont condition:: tensor(2.0786e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3536e-07, dtype=torch.float64)
secont condition:: tensor(7.3536e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4530e-07, dtype=torch.float64)
secont condition:: tensor(4.4530e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3969e-07, dtype=torch.float64)
secont condition:: tensor(1.3969e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2534e-08, dtype=torch.float64)
secont condition:: tensor(5.2534e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3436e-07, dtype=torch.float64)
secont condition:: tensor(6.3436e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0598e-07, dtype=torch.float64)
secont condition:: tensor(2.0598e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3956e-07, dtype=torch.float64)
secont condition:: tensor(1.3956e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0941e-07, dtype=torch.float64)
secont condition:: tensor(1.0941e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0763e-08, dtype=torch.float64)
secont condition:: tensor(5.0763e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0739e-07, dtype=torch.float64)
secont condition:: tensor(1.0739e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6099e-06, dtype=torch.float64)
secont condition:: tensor(1.6099e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3463e-06, dtype=torch.float64)
secont condition:: tensor(1.3463e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8934e-06, dtype=torch.float64)
secont condition:: tensor(5.8934e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3981e-06, dtype=torch.float64)
secont condition:: tensor(7.3981e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3355e-05, dtype=torch.float64)
secont condition:: tensor(1.3355e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2729e-05, dtype=torch.float64)
secont condition:: tensor(2.2729e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5863e-05, dtype=torch.float64)
secont condition:: tensor(6.5863e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0179, dtype=torch.float64)
secont condition:: tensor(0.0179, dtype=torch.float64)
curr_secont condition:: tensor(0.0087, dtype=torch.float64)
secont condition:: tensor(0.0087, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0021, dtype=torch.float64)
secont condition:: tensor(0.0021, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.3851e-05, dtype=torch.float64)
secont condition:: tensor(7.3851e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9704e-05, dtype=torch.float64)
secont condition:: tensor(5.9704e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5047e-05, dtype=torch.float64)
secont condition:: tensor(4.5047e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1937e-05, dtype=torch.float64)
secont condition:: tensor(4.1937e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1014e-05, dtype=torch.float64)
secont condition:: tensor(4.1014e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0657e-05, dtype=torch.float64)
secont condition:: tensor(4.0657e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8271e-05, dtype=torch.float64)
secont condition:: tensor(2.8271e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4827e-05, dtype=torch.float64)
secont condition:: tensor(2.4827e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9790e-05, dtype=torch.float64)
secont condition:: tensor(1.9790e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4453e-05, dtype=torch.float64)
secont condition:: tensor(2.4453e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1677e-05, dtype=torch.float64)
secont condition:: tensor(2.1677e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3572e-05, dtype=torch.float64)
secont condition:: tensor(2.3572e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9152e-05, dtype=torch.float64)
secont condition:: tensor(1.9152e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2439e-05, dtype=torch.float64)
secont condition:: tensor(2.2439e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3587e-05, dtype=torch.float64)
secont condition:: tensor(1.3587e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3579e-05, dtype=torch.float64)
secont condition:: tensor(2.3579e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2875e-05, dtype=torch.float64)
secont condition:: tensor(2.2875e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6044e-05, dtype=torch.float64)
secont condition:: tensor(1.6044e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4288e-05, dtype=torch.float64)
secont condition:: tensor(1.4288e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9968e-05, dtype=torch.float64)
secont condition:: tensor(1.9968e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2083e-05, dtype=torch.float64)
secont condition:: tensor(1.2083e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6857e-05, dtype=torch.float64)
secont condition:: tensor(1.6857e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4697e-05, dtype=torch.float64)
secont condition:: tensor(1.4697e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2741e-05, dtype=torch.float64)
secont condition:: tensor(1.2741e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6383e-05, dtype=torch.float64)
secont condition:: tensor(1.6383e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2953e-05, dtype=torch.float64)
secont condition:: tensor(1.2953e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0397e-05, dtype=torch.float64)
secont condition:: tensor(1.0397e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2749e-05, dtype=torch.float64)
secont condition:: tensor(1.2749e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4063e-05, dtype=torch.float64)
secont condition:: tensor(1.4063e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3419e-05, dtype=torch.float64)
secont condition:: tensor(1.3419e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6503e-05, dtype=torch.float64)
secont condition:: tensor(1.6503e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3347e-05, dtype=torch.float64)
secont condition:: tensor(1.3347e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3595e-05, dtype=torch.float64)
secont condition:: tensor(1.3595e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1327e-05, dtype=torch.float64)
secont condition:: tensor(1.1327e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5755e-06, dtype=torch.float64)
secont condition:: tensor(9.5755e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9349e-06, dtype=torch.float64)
secont condition:: tensor(7.9349e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1492e-05, dtype=torch.float64)
secont condition:: tensor(1.1492e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7916e-06, dtype=torch.float64)
secont condition:: tensor(8.7916e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9111e-06, dtype=torch.float64)
secont condition:: tensor(9.9111e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9968e-06, dtype=torch.float64)
secont condition:: tensor(9.9968e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8863e-06, dtype=torch.float64)
secont condition:: tensor(5.8863e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6868e-06, dtype=torch.float64)
secont condition:: tensor(8.6868e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6507e-06, dtype=torch.float64)
secont condition:: tensor(8.6507e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1069e-06, dtype=torch.float64)
secont condition:: tensor(8.1069e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3582e-06, dtype=torch.float64)
secont condition:: tensor(7.3582e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8892e-06, dtype=torch.float64)
secont condition:: tensor(9.8892e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1327e-06, dtype=torch.float64)
secont condition:: tensor(7.1327e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4644e-06, dtype=torch.float64)
secont condition:: tensor(8.4644e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8491e-06, dtype=torch.float64)
secont condition:: tensor(6.8491e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.035345554351807
curr_diff: 0 tensor(4.9889e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6472e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.8491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1211e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0138, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0173, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.231184
Test Avg. Loss: 0.000026, Accuracy: 0.933100
Train - Epoch 1, Batch: 0, Loss: 0.277678
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.168049
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 3, Batch: 0, Loss: 0.158741
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.161662
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 5, Batch: 0, Loss: 0.161737
Test Avg. Loss: 0.000020, Accuracy: 0.935400
Train - Epoch 6, Batch: 0, Loss: 0.212659
Test Avg. Loss: 0.000044, Accuracy: 0.915300
Train - Epoch 7, Batch: 0, Loss: 0.461534
Test Avg. Loss: 0.000016, Accuracy: 0.956100
Train - Epoch 8, Batch: 0, Loss: 0.175916
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 9, Batch: 0, Loss: 0.161623
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 10, Batch: 0, Loss: 0.165687
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 11, Batch: 0, Loss: 0.157818
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.160551
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.154304
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 14, Batch: 0, Loss: 0.152782
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 15, Batch: 0, Loss: 0.151263
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 16, Batch: 0, Loss: 0.153622
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 17, Batch: 0, Loss: 0.152074
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 18, Batch: 0, Loss: 0.152882
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 19, Batch: 0, Loss: 0.145904
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 20, Batch: 0, Loss: 0.157844
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 21, Batch: 0, Loss: 0.154233
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 22, Batch: 0, Loss: 0.149522
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.154958
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.153958
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.152727
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 26, Batch: 0, Loss: 0.152441
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 27, Batch: 0, Loss: 0.151386
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 28, Batch: 0, Loss: 0.154088
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.149830
Test Avg. Loss: 0.000014, Accuracy: 0.962100
training_time:: 169.8860878944397
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.33713698387146
time_baseline:: 117.40378642082214
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0055, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0070, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0050e-06, dtype=torch.float64)
secont condition:: tensor(2.0050e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7251e-06, dtype=torch.float64)
secont condition:: tensor(1.7251e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5876e-07, dtype=torch.float64)
secont condition:: tensor(6.5876e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7387e-06, dtype=torch.float64)
secont condition:: tensor(3.7387e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7951e-07, dtype=torch.float64)
secont condition:: tensor(3.7951e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3574e-07, dtype=torch.float64)
secont condition:: tensor(1.3574e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1089e-07, dtype=torch.float64)
secont condition:: tensor(5.1089e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4896e-07, dtype=torch.float64)
secont condition:: tensor(1.4896e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8674e-08, dtype=torch.float64)
secont condition:: tensor(8.8674e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1341e-08, dtype=torch.float64)
secont condition:: tensor(8.1341e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9957e-08, dtype=torch.float64)
secont condition:: tensor(5.9957e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6773e-06, dtype=torch.float64)
secont condition:: tensor(1.6773e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1026e-07, dtype=torch.float64)
secont condition:: tensor(4.1026e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7179e-07, dtype=torch.float64)
secont condition:: tensor(1.7179e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6413e-07, dtype=torch.float64)
secont condition:: tensor(1.6413e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5128e-07, dtype=torch.float64)
secont condition:: tensor(1.5128e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6492e-07, dtype=torch.float64)
secont condition:: tensor(1.6492e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9274e-07, dtype=torch.float64)
secont condition:: tensor(1.9274e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0322e-06, dtype=torch.float64)
secont condition:: tensor(1.0322e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6620e-07, dtype=torch.float64)
secont condition:: tensor(8.6620e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0202e-06, dtype=torch.float64)
secont condition:: tensor(5.0202e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4789e-06, dtype=torch.float64)
secont condition:: tensor(7.4789e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6062e-05, dtype=torch.float64)
secont condition:: tensor(1.6062e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2674e-05, dtype=torch.float64)
secont condition:: tensor(3.2674e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.0560e-05, dtype=torch.float64)
secont condition:: tensor(8.0560e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.6969e-08, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(3.2250e-05, dtype=torch.float64)
secont condition:: tensor(3.2250e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5360e-05, dtype=torch.float64)
secont condition:: tensor(1.5360e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7308e-06, dtype=torch.float64)
secont condition:: tensor(7.7308e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2417e-06, dtype=torch.float64)
secont condition:: tensor(9.2417e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1412e-06, dtype=torch.float64)
secont condition:: tensor(7.1412e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4741e-06, dtype=torch.float64)
secont condition:: tensor(5.4741e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1129e-06, dtype=torch.float64)
secont condition:: tensor(6.1129e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7494e-06, dtype=torch.float64)
secont condition:: tensor(5.7494e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5580e-06, dtype=torch.float64)
secont condition:: tensor(5.5580e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4778e-06, dtype=torch.float64)
secont condition:: tensor(5.4778e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4934e-06, dtype=torch.float64)
secont condition:: tensor(5.4934e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1181e-06, dtype=torch.float64)
secont condition:: tensor(4.1181e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2958e-06, dtype=torch.float64)
secont condition:: tensor(5.2958e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7231e-06, dtype=torch.float64)
secont condition:: tensor(2.7231e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2711e-06, dtype=torch.float64)
secont condition:: tensor(3.2711e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5854e-06, dtype=torch.float64)
secont condition:: tensor(4.5854e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6546e-06, dtype=torch.float64)
secont condition:: tensor(2.6546e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3934e-06, dtype=torch.float64)
secont condition:: tensor(5.3934e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3582e-06, dtype=torch.float64)
secont condition:: tensor(4.3582e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1621e-06, dtype=torch.float64)
secont condition:: tensor(9.1621e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9909e-06, dtype=torch.float64)
secont condition:: tensor(2.9909e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0148e-06, dtype=torch.float64)
secont condition:: tensor(3.0148e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8668e-06, dtype=torch.float64)
secont condition:: tensor(1.8668e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7918e-06, dtype=torch.float64)
secont condition:: tensor(3.7918e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0698e-06, dtype=torch.float64)
secont condition:: tensor(3.0698e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5874e-06, dtype=torch.float64)
secont condition:: tensor(3.5874e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4079e-06, dtype=torch.float64)
secont condition:: tensor(3.4079e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9146e-06, dtype=torch.float64)
secont condition:: tensor(2.9146e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2135e-06, dtype=torch.float64)
secont condition:: tensor(4.2135e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8682e-06, dtype=torch.float64)
secont condition:: tensor(8.8682e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0073e-07, dtype=torch.float64)
secont condition:: tensor(9.0073e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6560e-06, dtype=torch.float64)
secont condition:: tensor(2.6560e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1450e-06, dtype=torch.float64)
secont condition:: tensor(2.1450e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0238e-06, dtype=torch.float64)
secont condition:: tensor(4.0238e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0223e-06, dtype=torch.float64)
secont condition:: tensor(4.0223e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0799e-06, dtype=torch.float64)
secont condition:: tensor(3.0799e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8930e-06, dtype=torch.float64)
secont condition:: tensor(2.8930e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0505e-06, dtype=torch.float64)
secont condition:: tensor(1.0505e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7018e-06, dtype=torch.float64)
secont condition:: tensor(1.7018e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0389e-06, dtype=torch.float64)
secont condition:: tensor(1.0389e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7390e-06, dtype=torch.float64)
secont condition:: tensor(3.7390e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1545e-06, dtype=torch.float64)
secont condition:: tensor(2.1545e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1539e-06, dtype=torch.float64)
secont condition:: tensor(2.1539e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4412e-06, dtype=torch.float64)
secont condition:: tensor(1.4412e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4027e-06, dtype=torch.float64)
secont condition:: tensor(2.4027e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2132e-06, dtype=torch.float64)
secont condition:: tensor(1.2132e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0448e-06, dtype=torch.float64)
secont condition:: tensor(3.0448e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5645e-06, dtype=torch.float64)
secont condition:: tensor(1.5645e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5740e-07, dtype=torch.float64)
secont condition:: tensor(6.5740e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7133e-06, dtype=torch.float64)
secont condition:: tensor(1.7133e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.0856511592865
curr_diff: 0 tensor(3.5239e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6415e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2975e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4448e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0107e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0072, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241363
Test Avg. Loss: 0.000024, Accuracy: 0.938500
Train - Epoch 1, Batch: 0, Loss: 0.251214
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.170296
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 3, Batch: 0, Loss: 0.161739
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 4, Batch: 0, Loss: 0.158707
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.158315
Test Avg. Loss: 0.000042, Accuracy: 0.854100
Train - Epoch 6, Batch: 0, Loss: 0.444190
Test Avg. Loss: 0.000047, Accuracy: 0.889500
Train - Epoch 7, Batch: 0, Loss: 0.493451
Test Avg. Loss: 0.000019, Accuracy: 0.949700
Train - Epoch 8, Batch: 0, Loss: 0.212923
Test Avg. Loss: 0.000016, Accuracy: 0.952500
Train - Epoch 9, Batch: 0, Loss: 0.178701
Test Avg. Loss: 0.000015, Accuracy: 0.954300
Train - Epoch 10, Batch: 0, Loss: 0.176228
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 11, Batch: 0, Loss: 0.163780
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 12, Batch: 0, Loss: 0.162566
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 13, Batch: 0, Loss: 0.160458
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 14, Batch: 0, Loss: 0.160197
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 15, Batch: 0, Loss: 0.156054
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.156014
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.162453
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 18, Batch: 0, Loss: 0.159473
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.150313
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.154036
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.157221
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.154834
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.154341
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.155787
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.155887
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.154126
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 27, Batch: 0, Loss: 0.152374
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.156227
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.153617
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 170.92000365257263
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.87869215011597
time_baseline:: 115.94437050819397
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0434e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0028, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3567e-32, dtype=torch.float64)
secont condition:: tensor(1.3567e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0682e-32, dtype=torch.float64)
secont condition:: tensor(2.0682e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2883e-08, dtype=torch.float64)
secont condition:: tensor(6.2883e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3502e-07, dtype=torch.float64)
secont condition:: tensor(1.3502e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7105e-08, dtype=torch.float64)
secont condition:: tensor(1.7105e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5409e-07, dtype=torch.float64)
secont condition:: tensor(3.5409e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3583e-08, dtype=torch.float64)
secont condition:: tensor(7.3583e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2702e-08, dtype=torch.float64)
secont condition:: tensor(4.2702e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3512e-08, dtype=torch.float64)
secont condition:: tensor(1.3512e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8962e-07, dtype=torch.float64)
secont condition:: tensor(7.8962e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8458e-07, dtype=torch.float64)
secont condition:: tensor(3.8458e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3575e-07, dtype=torch.float64)
secont condition:: tensor(3.3575e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1509e-07, dtype=torch.float64)
secont condition:: tensor(5.1509e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5163e-07, dtype=torch.float64)
secont condition:: tensor(2.5163e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9487e-07, dtype=torch.float64)
secont condition:: tensor(1.9487e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8790e-07, dtype=torch.float64)
secont condition:: tensor(1.8790e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0805e-07, dtype=torch.float64)
secont condition:: tensor(3.0805e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7328e-07, dtype=torch.float64)
secont condition:: tensor(6.7328e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7675e-07, dtype=torch.float64)
secont condition:: tensor(4.7675e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3273e-07, dtype=torch.float64)
secont condition:: tensor(4.3273e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3271e-07, dtype=torch.float64)
secont condition:: tensor(3.3271e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7051e-07, dtype=torch.float64)
secont condition:: tensor(6.7051e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8505e-06, dtype=torch.float64)
secont condition:: tensor(1.8505e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1544e-06, dtype=torch.float64)
secont condition:: tensor(5.1544e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.9356e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6348e-05, dtype=torch.float64)
secont condition:: tensor(4.6348e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1536e-05, dtype=torch.float64)
secont condition:: tensor(1.1536e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8762e-05, dtype=torch.float64)
secont condition:: tensor(1.8762e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3388e-06, dtype=torch.float64)
secont condition:: tensor(2.3388e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3552e-06, dtype=torch.float64)
secont condition:: tensor(1.3552e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2653e-07, dtype=torch.float64)
secont condition:: tensor(5.2653e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9950e-07, dtype=torch.float64)
secont condition:: tensor(9.9950e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.3252e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3221e-06, dtype=torch.float64)
secont condition:: tensor(1.3221e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2755e-06, dtype=torch.float64)
secont condition:: tensor(1.2755e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9776e-07, dtype=torch.float64)
secont condition:: tensor(7.9776e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7171e-08, dtype=torch.float64)
secont condition:: tensor(2.7171e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3944e-07, dtype=torch.float64)
secont condition:: tensor(5.3944e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4673e-07, dtype=torch.float64)
secont condition:: tensor(5.4673e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2352e-07, dtype=torch.float64)
secont condition:: tensor(5.2352e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5796e-07, dtype=torch.float64)
secont condition:: tensor(2.5796e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2695e-06, dtype=torch.float64)
secont condition:: tensor(1.2695e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8512e-07, dtype=torch.float64)
secont condition:: tensor(9.8512e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1416e-07, dtype=torch.float64)
secont condition:: tensor(9.1416e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6864e-07, dtype=torch.float64)
secont condition:: tensor(2.6864e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1187e-06, dtype=torch.float64)
secont condition:: tensor(1.1187e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1437e-07, dtype=torch.float64)
secont condition:: tensor(2.1437e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1356e-07, dtype=torch.float64)
secont condition:: tensor(4.1356e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5148e-07, dtype=torch.float64)
secont condition:: tensor(4.5148e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5899e-07, dtype=torch.float64)
secont condition:: tensor(4.5899e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5092e-07, dtype=torch.float64)
secont condition:: tensor(1.5092e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.6056e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7425e-07, dtype=torch.float64)
secont condition:: tensor(4.7425e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1554e-07, dtype=torch.float64)
secont condition:: tensor(3.1554e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1955e-07, dtype=torch.float64)
secont condition:: tensor(4.1955e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7371e-07, dtype=torch.float64)
secont condition:: tensor(8.7371e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4775e-07, dtype=torch.float64)
secont condition:: tensor(5.4775e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6608e-07, dtype=torch.float64)
secont condition:: tensor(4.6608e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3531e-07, dtype=torch.float64)
secont condition:: tensor(6.3531e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3311e-07, dtype=torch.float64)
secont condition:: tensor(3.3311e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4088e-07, dtype=torch.float64)
secont condition:: tensor(4.4088e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9466e-07, dtype=torch.float64)
secont condition:: tensor(4.9466e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7594e-07, dtype=torch.float64)
secont condition:: tensor(5.7594e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5852e-07, dtype=torch.float64)
secont condition:: tensor(7.5852e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5276e-07, dtype=torch.float64)
secont condition:: tensor(4.5276e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5024e-07, dtype=torch.float64)
secont condition:: tensor(3.5024e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2844e-07, dtype=torch.float64)
secont condition:: tensor(5.2844e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8901e-07, dtype=torch.float64)
secont condition:: tensor(4.8901e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6272e-07, dtype=torch.float64)
secont condition:: tensor(4.6272e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1988e-07, dtype=torch.float64)
secont condition:: tensor(4.1988e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7550e-07, dtype=torch.float64)
secont condition:: tensor(4.7550e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8038e-07, dtype=torch.float64)
secont condition:: tensor(4.8038e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4654e-07, dtype=torch.float64)
secont condition:: tensor(3.4654e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8283e-07, dtype=torch.float64)
secont condition:: tensor(3.8283e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5468e-07, dtype=torch.float64)
secont condition:: tensor(4.5468e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8452e-07, dtype=torch.float64)
secont condition:: tensor(1.8452e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0223e-07, dtype=torch.float64)
secont condition:: tensor(3.0223e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4222e-07, dtype=torch.float64)
secont condition:: tensor(3.4222e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.842963933944702
curr_diff: 0 tensor(2.2250e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2823e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9673e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1051e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.3440e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.3657e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7918e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0474e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0029, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241407
Test Avg. Loss: 0.000026, Accuracy: 0.933700
Train - Epoch 1, Batch: 0, Loss: 0.270235
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 2, Batch: 0, Loss: 0.171235
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.161003
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 4, Batch: 0, Loss: 0.158609
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 5, Batch: 0, Loss: 0.164967
Test Avg. Loss: 0.000019, Accuracy: 0.941900
Train - Epoch 6, Batch: 0, Loss: 0.204920
Test Avg. Loss: 0.000077, Accuracy: 0.807000
Train - Epoch 7, Batch: 0, Loss: 0.789203
Test Avg. Loss: 0.000018, Accuracy: 0.952400
Train - Epoch 8, Batch: 0, Loss: 0.195070
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 9, Batch: 0, Loss: 0.170196
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 10, Batch: 0, Loss: 0.164644
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 11, Batch: 0, Loss: 0.158792
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 12, Batch: 0, Loss: 0.161998
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.154769
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.159124
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 15, Batch: 0, Loss: 0.157067
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 16, Batch: 0, Loss: 0.156319
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.151263
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.154435
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 19, Batch: 0, Loss: 0.158217
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 20, Batch: 0, Loss: 0.152914
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 21, Batch: 0, Loss: 0.156880
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 22, Batch: 0, Loss: 0.152484
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 23, Batch: 0, Loss: 0.147573
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 24, Batch: 0, Loss: 0.150883
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.160600
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.154818
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.155062
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.152956
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.155531
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 171.26204562187195
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.23812580108643
time_baseline:: 116.30370283126831
curr_diff: 0 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0141, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0292, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0150, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0121, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0385, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0399e-33, dtype=torch.float64)
curr_secont condition:: tensor(8.1203e-08, dtype=torch.float64)
secont condition:: tensor(8.1203e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8238e-08, dtype=torch.float64)
secont condition:: tensor(3.8238e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8577e-08, dtype=torch.float64)
secont condition:: tensor(8.8577e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0900e-08, dtype=torch.float64)
secont condition:: tensor(4.0900e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1978e-08, dtype=torch.float64)
secont condition:: tensor(2.1978e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6083e-09, dtype=torch.float64)
secont condition:: tensor(5.6083e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3759e-06, dtype=torch.float64)
secont condition:: tensor(1.3759e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0049e-07, dtype=torch.float64)
secont condition:: tensor(2.0049e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6327e-08, dtype=torch.float64)
secont condition:: tensor(8.6327e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8659e-08, dtype=torch.float64)
secont condition:: tensor(8.8659e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0310e-08, dtype=torch.float64)
secont condition:: tensor(9.0310e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4382e-08, dtype=torch.float64)
secont condition:: tensor(7.4382e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2552e-08, dtype=torch.float64)
secont condition:: tensor(5.2552e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0463e-06, dtype=torch.float64)
secont condition:: tensor(1.0463e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2739e-07, dtype=torch.float64)
secont condition:: tensor(7.2739e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1214e-07, dtype=torch.float64)
secont condition:: tensor(7.1214e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1107e-07, dtype=torch.float64)
secont condition:: tensor(8.1107e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2862e-06, dtype=torch.float64)
secont condition:: tensor(4.2862e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6360e-06, dtype=torch.float64)
secont condition:: tensor(6.6360e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2862e-05, dtype=torch.float64)
secont condition:: tensor(2.2862e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1229e-05, dtype=torch.float64)
secont condition:: tensor(4.1229e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6713e-05, dtype=torch.float64)
secont condition:: tensor(8.6713e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0131, dtype=torch.float64)
secont condition:: tensor(0.0131, dtype=torch.float64)
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
curr_secont condition:: tensor(0.0022, dtype=torch.float64)
secont condition:: tensor(0.0022, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(9.7559e-05, dtype=torch.float64)
secont condition:: tensor(9.7559e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.1269e-05, dtype=torch.float64)
secont condition:: tensor(9.1269e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9376e-05, dtype=torch.float64)
secont condition:: tensor(8.9376e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.9892e-05, dtype=torch.float64)
secont condition:: tensor(7.9892e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.5029e-05, dtype=torch.float64)
secont condition:: tensor(9.5029e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7706e-05, dtype=torch.float64)
secont condition:: tensor(8.7706e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.9227e-05, dtype=torch.float64)
secont condition:: tensor(8.9227e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(3.0187e-05, dtype=torch.float64)
secont condition:: tensor(3.0187e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8108e-05, dtype=torch.float64)
secont condition:: tensor(9.8108e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6038e-05, dtype=torch.float64)
secont condition:: tensor(6.6038e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0603e-05, dtype=torch.float64)
secont condition:: tensor(8.0603e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9012e-05, dtype=torch.float64)
secont condition:: tensor(7.9012e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5258e-05, dtype=torch.float64)
secont condition:: tensor(3.5258e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2917e-05, dtype=torch.float64)
secont condition:: tensor(4.2917e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.3354e-05, dtype=torch.float64)
secont condition:: tensor(7.3354e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8141e-05, dtype=torch.float64)
secont condition:: tensor(7.8141e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5003e-05, dtype=torch.float64)
secont condition:: tensor(3.5003e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3005e-05, dtype=torch.float64)
secont condition:: tensor(5.3005e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1317e-05, dtype=torch.float64)
secont condition:: tensor(4.1317e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1807e-05, dtype=torch.float64)
secont condition:: tensor(3.1807e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1679e-05, dtype=torch.float64)
secont condition:: tensor(4.1679e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2890e-05, dtype=torch.float64)
secont condition:: tensor(4.2890e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6844e-05, dtype=torch.float64)
secont condition:: tensor(1.6844e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4925e-05, dtype=torch.float64)
secont condition:: tensor(4.4925e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4503e-05, dtype=torch.float64)
secont condition:: tensor(3.4503e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3474e-05, dtype=torch.float64)
secont condition:: tensor(3.3474e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.4151e-05, dtype=torch.float64)
secont condition:: tensor(6.4151e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.05692958831787
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.1257e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3686e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6668e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0026, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0146, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0297, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0152, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0123, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0393, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
random set 2
python3 generate_rand_ids 0.00005  MNIST
tensor([  593, 23730, 36843])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233330
Test Avg. Loss: 0.000026, Accuracy: 0.935500
Train - Epoch 1, Batch: 0, Loss: 0.269476
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.166284
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.160483
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.161764
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 5, Batch: 0, Loss: 0.168005
Test Avg. Loss: 0.000029, Accuracy: 0.903500
Train - Epoch 6, Batch: 0, Loss: 0.315160
Test Avg. Loss: 0.000032, Accuracy: 0.942900
Train - Epoch 7, Batch: 0, Loss: 0.339918
Test Avg. Loss: 0.000017, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.187973
Test Avg. Loss: 0.000015, Accuracy: 0.955700
Train - Epoch 9, Batch: 0, Loss: 0.166420
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 10, Batch: 0, Loss: 0.166130
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 11, Batch: 0, Loss: 0.160762
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 12, Batch: 0, Loss: 0.156405
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 13, Batch: 0, Loss: 0.158427
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 14, Batch: 0, Loss: 0.157385
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 15, Batch: 0, Loss: 0.156994
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 16, Batch: 0, Loss: 0.154993
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 17, Batch: 0, Loss: 0.157833
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 18, Batch: 0, Loss: 0.165352
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 19, Batch: 0, Loss: 0.152541
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 20, Batch: 0, Loss: 0.149227
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 21, Batch: 0, Loss: 0.154869
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 22, Batch: 0, Loss: 0.158216
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 23, Batch: 0, Loss: 0.153866
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 24, Batch: 0, Loss: 0.153129
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 25, Batch: 0, Loss: 0.162487
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 26, Batch: 0, Loss: 0.155490
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.153376
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 28, Batch: 0, Loss: 0.154781
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 29, Batch: 0, Loss: 0.152559
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 170.1744077205658
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.50192952156067
time_baseline:: 116.5653772354126
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0046, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.7917e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9819e-07, dtype=torch.float64)
secont condition:: tensor(3.9819e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6546e-07, dtype=torch.float64)
secont condition:: tensor(1.6546e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1240e-08, dtype=torch.float64)
secont condition:: tensor(5.1240e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8984e-08, dtype=torch.float64)
secont condition:: tensor(2.8984e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9969e-08, dtype=torch.float64)
secont condition:: tensor(2.9969e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1563e-08, dtype=torch.float64)
secont condition:: tensor(1.1563e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8547e-07, dtype=torch.float64)
secont condition:: tensor(7.8547e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0959e-07, dtype=torch.float64)
secont condition:: tensor(5.0959e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4937e-07, dtype=torch.float64)
secont condition:: tensor(1.4937e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1836e-07, dtype=torch.float64)
secont condition:: tensor(1.1836e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8607e-08, dtype=torch.float64)
secont condition:: tensor(6.8607e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9985e-08, dtype=torch.float64)
secont condition:: tensor(8.9985e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0680e-08, dtype=torch.float64)
secont condition:: tensor(9.0680e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9206e-07, dtype=torch.float64)
secont condition:: tensor(6.9206e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8408e-07, dtype=torch.float64)
secont condition:: tensor(4.8408e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5551e-07, dtype=torch.float64)
secont condition:: tensor(5.5551e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2109e-07, dtype=torch.float64)
secont condition:: tensor(6.2109e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9270e-07, dtype=torch.float64)
secont condition:: tensor(5.9270e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0914e-07, dtype=torch.float64)
secont condition:: tensor(8.0914e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4450e-06, dtype=torch.float64)
secont condition:: tensor(1.4450e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2999e-06, dtype=torch.float64)
secont condition:: tensor(2.2999e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1529e-06, dtype=torch.float64)
secont condition:: tensor(4.1529e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1801e-05, dtype=torch.float64)
secont condition:: tensor(1.1801e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9842e-05, dtype=torch.float64)
secont condition:: tensor(1.9842e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1140e-06, dtype=torch.float64)
secont condition:: tensor(3.1140e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8675e-05, dtype=torch.float64)
secont condition:: tensor(8.8675e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5218e-05, dtype=torch.float64)
secont condition:: tensor(1.5218e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8129e-06, dtype=torch.float64)
secont condition:: tensor(5.8129e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0294e-06, dtype=torch.float64)
secont condition:: tensor(3.0294e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2068e-06, dtype=torch.float64)
secont condition:: tensor(4.2068e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4777e-06, dtype=torch.float64)
secont condition:: tensor(1.4777e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4173e-06, dtype=torch.float64)
secont condition:: tensor(2.4173e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0085e-06, dtype=torch.float64)
secont condition:: tensor(3.0085e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7761e-06, dtype=torch.float64)
secont condition:: tensor(2.7761e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.2111e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1570e-06, dtype=torch.float64)
secont condition:: tensor(3.1570e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1301e-06, dtype=torch.float64)
secont condition:: tensor(3.1301e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4731e-06, dtype=torch.float64)
secont condition:: tensor(2.4731e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2726e-06, dtype=torch.float64)
secont condition:: tensor(2.2726e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9775e-07, dtype=torch.float64)
secont condition:: tensor(7.9775e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8871e-06, dtype=torch.float64)
secont condition:: tensor(1.8871e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6802e-06, dtype=torch.float64)
secont condition:: tensor(1.6802e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5864e-06, dtype=torch.float64)
secont condition:: tensor(2.5864e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8408e-06, dtype=torch.float64)
secont condition:: tensor(1.8408e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6556e-06, dtype=torch.float64)
secont condition:: tensor(1.6556e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3979e-06, dtype=torch.float64)
secont condition:: tensor(1.3979e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1393e-06, dtype=torch.float64)
secont condition:: tensor(1.1393e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9822e-07, dtype=torch.float64)
secont condition:: tensor(4.9822e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7424e-06, dtype=torch.float64)
secont condition:: tensor(1.7424e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5049e-06, dtype=torch.float64)
secont condition:: tensor(1.5049e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6929e-06, dtype=torch.float64)
secont condition:: tensor(1.6929e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8442e-07, dtype=torch.float64)
secont condition:: tensor(7.8442e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1746e-06, dtype=torch.float64)
secont condition:: tensor(1.1746e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1229e-06, dtype=torch.float64)
secont condition:: tensor(2.1229e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6062e-06, dtype=torch.float64)
secont condition:: tensor(1.6062e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3847e-06, dtype=torch.float64)
secont condition:: tensor(1.3847e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0032e-06, dtype=torch.float64)
secont condition:: tensor(1.0032e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0542e-06, dtype=torch.float64)
secont condition:: tensor(1.0542e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3759e-06, dtype=torch.float64)
secont condition:: tensor(1.3759e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4941e-06, dtype=torch.float64)
secont condition:: tensor(1.4941e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5715e-06, dtype=torch.float64)
secont condition:: tensor(1.5715e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4578e-06, dtype=torch.float64)
secont condition:: tensor(1.4578e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0578e-06, dtype=torch.float64)
secont condition:: tensor(1.0578e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0476e-06, dtype=torch.float64)
secont condition:: tensor(1.0476e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4643e-07, dtype=torch.float64)
secont condition:: tensor(7.4643e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2807e-06, dtype=torch.float64)
secont condition:: tensor(1.2807e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7757e-07, dtype=torch.float64)
secont condition:: tensor(8.7757e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8033e-07, dtype=torch.float64)
secont condition:: tensor(7.8033e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2014e-06, dtype=torch.float64)
secont condition:: tensor(1.2014e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8997e-07, dtype=torch.float64)
secont condition:: tensor(6.8997e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1477e-07, dtype=torch.float64)
secont condition:: tensor(9.1477e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3928e-06, dtype=torch.float64)
secont condition:: tensor(1.3928e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3100e-06, dtype=torch.float64)
secont condition:: tensor(1.3100e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3240e-07, dtype=torch.float64)
secont condition:: tensor(7.3240e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5311e-07, dtype=torch.float64)
secont condition:: tensor(8.5311e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6079e-07, dtype=torch.float64)
secont condition:: tensor(5.6079e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1655e-06, dtype=torch.float64)
secont condition:: tensor(1.1655e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.048829078674316
curr_diff: 0 tensor(3.7270e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1292e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.0583e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.5690e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.4132e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.5105e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0037, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0046, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237310
Test Avg. Loss: 0.000025, Accuracy: 0.938900
Train - Epoch 1, Batch: 0, Loss: 0.263153
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 2, Batch: 0, Loss: 0.175677
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.157661
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.155500
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 5, Batch: 0, Loss: 0.168410
Test Avg. Loss: 0.000046, Accuracy: 0.839900
Train - Epoch 6, Batch: 0, Loss: 0.482169
Test Avg. Loss: 0.000021, Accuracy: 0.948200
Train - Epoch 7, Batch: 0, Loss: 0.226788
Test Avg. Loss: 0.000016, Accuracy: 0.954400
Train - Epoch 8, Batch: 0, Loss: 0.176752
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 9, Batch: 0, Loss: 0.171329
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 10, Batch: 0, Loss: 0.157653
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 11, Batch: 0, Loss: 0.166418
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.157362
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.160135
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 14, Batch: 0, Loss: 0.153719
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 15, Batch: 0, Loss: 0.158568
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.151358
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.152474
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 18, Batch: 0, Loss: 0.153948
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 19, Batch: 0, Loss: 0.153747
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 20, Batch: 0, Loss: 0.142114
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 21, Batch: 0, Loss: 0.154168
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 22, Batch: 0, Loss: 0.152853
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.156166
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 24, Batch: 0, Loss: 0.155759
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.155728
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 26, Batch: 0, Loss: 0.159551
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.153264
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.156600
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.150775
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 169.26364040374756
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.74064469337463
time_baseline:: 116.80653142929077
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4497e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3406e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7379e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1054e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1864e-06, dtype=torch.float64)
secont condition:: tensor(1.1864e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4514e-06, dtype=torch.float64)
secont condition:: tensor(1.4514e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.2765e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6629e-06, dtype=torch.float64)
secont condition:: tensor(3.6629e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4421e-07, dtype=torch.float64)
secont condition:: tensor(4.4421e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0945e-07, dtype=torch.float64)
secont condition:: tensor(2.0945e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0953e-07, dtype=torch.float64)
secont condition:: tensor(1.0953e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3536e-07, dtype=torch.float64)
secont condition:: tensor(1.3536e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2121e-08, dtype=torch.float64)
secont condition:: tensor(7.2121e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0369e-07, dtype=torch.float64)
secont condition:: tensor(6.0369e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2522e-07, dtype=torch.float64)
secont condition:: tensor(2.2522e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3595e-07, dtype=torch.float64)
secont condition:: tensor(1.3595e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7843e-07, dtype=torch.float64)
secont condition:: tensor(4.7843e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0489e-07, dtype=torch.float64)
secont condition:: tensor(3.0489e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6180e-07, dtype=torch.float64)
secont condition:: tensor(3.6180e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5275e-07, dtype=torch.float64)
secont condition:: tensor(2.5275e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4183e-07, dtype=torch.float64)
secont condition:: tensor(2.4183e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3213e-07, dtype=torch.float64)
secont condition:: tensor(5.3213e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1878e-07, dtype=torch.float64)
secont condition:: tensor(2.1878e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8170e-07, dtype=torch.float64)
secont condition:: tensor(1.8170e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7740e-07, dtype=torch.float64)
secont condition:: tensor(1.7740e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5151e-07, dtype=torch.float64)
secont condition:: tensor(2.5151e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6614e-07, dtype=torch.float64)
secont condition:: tensor(2.6614e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5955e-06, dtype=torch.float64)
secont condition:: tensor(1.5955e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5040e-06, dtype=torch.float64)
secont condition:: tensor(1.5040e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3694e-06, dtype=torch.float64)
secont condition:: tensor(1.3694e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2624e-06, dtype=torch.float64)
secont condition:: tensor(1.2624e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2082e-07, dtype=torch.float64)
secont condition:: tensor(4.2082e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9606e-07, dtype=torch.float64)
secont condition:: tensor(1.9606e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2141e-07, dtype=torch.float64)
secont condition:: tensor(2.2141e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6728e-07, dtype=torch.float64)
secont condition:: tensor(3.6728e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0731e-07, dtype=torch.float64)
secont condition:: tensor(2.0731e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3614e-07, dtype=torch.float64)
secont condition:: tensor(2.3614e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0905e-07, dtype=torch.float64)
secont condition:: tensor(2.0905e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8022e-07, dtype=torch.float64)
secont condition:: tensor(6.8022e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9553e-07, dtype=torch.float64)
secont condition:: tensor(4.9553e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7965e-07, dtype=torch.float64)
secont condition:: tensor(2.7965e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5678e-07, dtype=torch.float64)
secont condition:: tensor(2.5678e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5874e-07, dtype=torch.float64)
secont condition:: tensor(3.5874e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9729e-07, dtype=torch.float64)
secont condition:: tensor(2.9729e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9332e-07, dtype=torch.float64)
secont condition:: tensor(1.9332e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6692e-07, dtype=torch.float64)
secont condition:: tensor(2.6692e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1131e-06, dtype=torch.float64)
secont condition:: tensor(1.1131e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4442e-07, dtype=torch.float64)
secont condition:: tensor(5.4442e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5708e-07, dtype=torch.float64)
secont condition:: tensor(2.5708e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5788e-07, dtype=torch.float64)
secont condition:: tensor(5.5788e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5160e-07, dtype=torch.float64)
secont condition:: tensor(2.5160e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2021e-07, dtype=torch.float64)
secont condition:: tensor(3.2021e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4369e-07, dtype=torch.float64)
secont condition:: tensor(2.4369e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0352e-07, dtype=torch.float64)
secont condition:: tensor(3.0352e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1081e-07, dtype=torch.float64)
secont condition:: tensor(4.1081e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4776e-07, dtype=torch.float64)
secont condition:: tensor(3.4776e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0518e-07, dtype=torch.float64)
secont condition:: tensor(3.0518e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0917e-07, dtype=torch.float64)
secont condition:: tensor(4.0917e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0188e-07, dtype=torch.float64)
secont condition:: tensor(3.0188e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6085e-07, dtype=torch.float64)
secont condition:: tensor(2.6085e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7308e-07, dtype=torch.float64)
secont condition:: tensor(3.7308e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5502e-07, dtype=torch.float64)
secont condition:: tensor(2.5502e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1642e-07, dtype=torch.float64)
secont condition:: tensor(3.1642e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8147e-07, dtype=torch.float64)
secont condition:: tensor(5.8147e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3515e-07, dtype=torch.float64)
secont condition:: tensor(3.3515e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1302e-07, dtype=torch.float64)
secont condition:: tensor(7.1302e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1332e-07, dtype=torch.float64)
secont condition:: tensor(5.1332e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5765e-07, dtype=torch.float64)
secont condition:: tensor(4.5765e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4482e-07, dtype=torch.float64)
secont condition:: tensor(5.4482e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7619e-07, dtype=torch.float64)
secont condition:: tensor(4.7619e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9112e-07, dtype=torch.float64)
secont condition:: tensor(4.9112e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0695e-07, dtype=torch.float64)
secont condition:: tensor(3.0695e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6852e-07, dtype=torch.float64)
secont condition:: tensor(4.6852e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2581e-06, dtype=torch.float64)
secont condition:: tensor(1.2581e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0673e-07, dtype=torch.float64)
secont condition:: tensor(5.0673e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6973e-07, dtype=torch.float64)
secont condition:: tensor(5.6973e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7787e-07, dtype=torch.float64)
secont condition:: tensor(4.7787e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4741e-07, dtype=torch.float64)
secont condition:: tensor(8.4741e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6866e-07, dtype=torch.float64)
secont condition:: tensor(5.6866e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.47315263748169
curr_diff: 0 tensor(2.4034e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8249e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0495e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3682e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4531e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.7085e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6810e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3707e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9082e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.0426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.228767
Test Avg. Loss: 0.000026, Accuracy: 0.930000
Train - Epoch 1, Batch: 0, Loss: 0.273293
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.165871
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.162838
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.154537
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 5, Batch: 0, Loss: 0.154551
Test Avg. Loss: 0.000015, Accuracy: 0.958900
Train - Epoch 6, Batch: 0, Loss: 0.163338
Test Avg. Loss: 0.000107, Accuracy: 0.666500
Train - Epoch 7, Batch: 0, Loss: 1.107390
Test Avg. Loss: 0.000020, Accuracy: 0.950000
Train - Epoch 8, Batch: 0, Loss: 0.220217
Test Avg. Loss: 0.000016, Accuracy: 0.955000
Train - Epoch 9, Batch: 0, Loss: 0.173545
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 10, Batch: 0, Loss: 0.163975
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 11, Batch: 0, Loss: 0.164624
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 12, Batch: 0, Loss: 0.158202
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 13, Batch: 0, Loss: 0.161717
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 14, Batch: 0, Loss: 0.159416
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 15, Batch: 0, Loss: 0.149647
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 16, Batch: 0, Loss: 0.156160
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 17, Batch: 0, Loss: 0.155065
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 18, Batch: 0, Loss: 0.160817
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.158896
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 20, Batch: 0, Loss: 0.157606
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 21, Batch: 0, Loss: 0.153601
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.152705
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.148975
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.158682
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.157786
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.158170
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.152700
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 28, Batch: 0, Loss: 0.155921
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.152632
Test Avg. Loss: 0.000014, Accuracy: 0.961300
training_time:: 171.1487762928009
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.75427746772766
time_baseline:: 115.81869125366211
curr_diff: 0 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0521, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0053, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0099, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0548, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0151, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0387, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0169, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1355, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9997, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9654e-32, dtype=torch.float64)
secont condition:: tensor(3.9654e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.0962e-09, dtype=torch.float64)
secont condition:: tensor(8.0962e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3008e-07, dtype=torch.float64)
secont condition:: tensor(4.3008e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0853e-07, dtype=torch.float64)
secont condition:: tensor(2.0853e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1861e-08, dtype=torch.float64)
secont condition:: tensor(5.1861e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4408e-09, dtype=torch.float64)
secont condition:: tensor(6.4408e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1531e-07, dtype=torch.float64)
secont condition:: tensor(3.1531e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0406e-07, dtype=torch.float64)
secont condition:: tensor(1.0406e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9439e-08, dtype=torch.float64)
secont condition:: tensor(3.9439e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8259e-08, dtype=torch.float64)
secont condition:: tensor(5.8259e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6357e-08, dtype=torch.float64)
secont condition:: tensor(2.6357e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1479e-06, dtype=torch.float64)
secont condition:: tensor(1.1479e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2020e-07, dtype=torch.float64)
secont condition:: tensor(5.2020e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7356e-06, dtype=torch.float64)
secont condition:: tensor(1.7356e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3484e-06, dtype=torch.float64)
secont condition:: tensor(1.3484e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5415e-06, dtype=torch.float64)
secont condition:: tensor(1.5415e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1503e-06, dtype=torch.float64)
secont condition:: tensor(2.1503e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2237e-06, dtype=torch.float64)
secont condition:: tensor(5.2237e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6200e-06, dtype=torch.float64)
secont condition:: tensor(7.6200e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3251e-05, dtype=torch.float64)
secont condition:: tensor(1.3251e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7263e-05, dtype=torch.float64)
secont condition:: tensor(2.7263e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9976e-05, dtype=torch.float64)
secont condition:: tensor(6.9976e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0050, dtype=torch.float64)
secont condition:: tensor(0.0050, dtype=torch.float64)
curr_secont condition:: tensor(0.0247, dtype=torch.float64)
secont condition:: tensor(0.0247, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0687, dtype=torch.float64)
curr_secont condition:: tensor(0.3924, dtype=torch.float64)
secont condition:: tensor(0.3924, dtype=torch.float64)
curr_secont condition:: tensor(0.0569, dtype=torch.float64)
secont condition:: tensor(0.0569, dtype=torch.float64)
curr_secont condition:: tensor(0.0125, dtype=torch.float64)
secont condition:: tensor(0.0125, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0057, dtype=torch.float64)
secont condition:: tensor(0.0057, dtype=torch.float64)
curr_secont condition:: tensor(0.0034, dtype=torch.float64)
secont condition:: tensor(0.0034, dtype=torch.float64)
curr_secont condition:: tensor(0.0025, dtype=torch.float64)
secont condition:: tensor(0.0025, dtype=torch.float64)
curr_secont condition:: tensor(0.0024, dtype=torch.float64)
secont condition:: tensor(0.0024, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.960124254226685
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7507e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3270e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7658e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0037, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0522, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0053, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0099, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0548, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0152, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0388, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0169, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1356, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9997, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243224
Test Avg. Loss: 0.000025, Accuracy: 0.936200
Train - Epoch 1, Batch: 0, Loss: 0.270861
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.169111
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.161141
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.157531
Test Avg. Loss: 0.000016, Accuracy: 0.951500
Train - Epoch 5, Batch: 0, Loss: 0.172718
Test Avg. Loss: 0.000068, Accuracy: 0.754600
Train - Epoch 6, Batch: 0, Loss: 0.703241
Test Avg. Loss: 0.000018, Accuracy: 0.953400
Train - Epoch 7, Batch: 0, Loss: 0.202459
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 8, Batch: 0, Loss: 0.166976
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 9, Batch: 0, Loss: 0.163135
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 10, Batch: 0, Loss: 0.163598
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 11, Batch: 0, Loss: 0.163375
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 12, Batch: 0, Loss: 0.161946
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.152528
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 14, Batch: 0, Loss: 0.151685
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 15, Batch: 0, Loss: 0.152919
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 16, Batch: 0, Loss: 0.154080
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.152109
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.153575
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.156914
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.149281
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.155761
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.149886
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.149369
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.151229
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.155302
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.156032
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.157772
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.156874
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.155498
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 169.8317952156067
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.94414138793945
time_baseline:: 115.0103268623352
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2022e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.6969e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.8763e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1481e-06, dtype=torch.float64)
secont condition:: tensor(1.1481e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6313e-06, dtype=torch.float64)
secont condition:: tensor(1.6313e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0562e-07, dtype=torch.float64)
secont condition:: tensor(2.0562e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7273e-06, dtype=torch.float64)
secont condition:: tensor(1.7273e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0185e-07, dtype=torch.float64)
secont condition:: tensor(3.0185e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1530e-07, dtype=torch.float64)
secont condition:: tensor(3.1530e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0453e-07, dtype=torch.float64)
secont condition:: tensor(1.0453e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2803e-07, dtype=torch.float64)
secont condition:: tensor(1.2803e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0200e-07, dtype=torch.float64)
secont condition:: tensor(1.0200e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7996e-08, dtype=torch.float64)
secont condition:: tensor(3.7996e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1208e-07, dtype=torch.float64)
secont condition:: tensor(6.1208e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3439e-07, dtype=torch.float64)
secont condition:: tensor(2.3439e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0418e-07, dtype=torch.float64)
secont condition:: tensor(2.0418e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4027e-07, dtype=torch.float64)
secont condition:: tensor(5.4027e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1213e-07, dtype=torch.float64)
secont condition:: tensor(3.1213e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5699e-07, dtype=torch.float64)
secont condition:: tensor(2.5699e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4658e-07, dtype=torch.float64)
secont condition:: tensor(5.4658e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2192e-07, dtype=torch.float64)
secont condition:: tensor(4.2192e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2531e-07, dtype=torch.float64)
secont condition:: tensor(2.2531e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4944e-07, dtype=torch.float64)
secont condition:: tensor(2.4944e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6805e-07, dtype=torch.float64)
secont condition:: tensor(2.6805e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0172e-06, dtype=torch.float64)
secont condition:: tensor(1.0172e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0429e-06, dtype=torch.float64)
secont condition:: tensor(4.0429e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4323e-06, dtype=torch.float64)
secont condition:: tensor(7.4323e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8125e-05, dtype=torch.float64)
secont condition:: tensor(2.8125e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0396e-05, dtype=torch.float64)
secont condition:: tensor(4.0396e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0232e-06, dtype=torch.float64)
secont condition:: tensor(4.0232e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7196e-07, dtype=torch.float64)
secont condition:: tensor(8.7196e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0989e-07, dtype=torch.float64)
secont condition:: tensor(6.0989e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6608e-07, dtype=torch.float64)
secont condition:: tensor(5.6608e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0405e-07, dtype=torch.float64)
secont condition:: tensor(8.0405e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0900e-07, dtype=torch.float64)
secont condition:: tensor(2.0900e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2645e-07, dtype=torch.float64)
secont condition:: tensor(6.2645e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1281e-07, dtype=torch.float64)
secont condition:: tensor(6.1281e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2756e-06, dtype=torch.float64)
secont condition:: tensor(1.2756e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5050e-05, dtype=torch.float64)
secont condition:: tensor(1.5050e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1769e-07, dtype=torch.float64)
secont condition:: tensor(3.1769e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0424e-07, dtype=torch.float64)
secont condition:: tensor(2.0424e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2321e-07, dtype=torch.float64)
secont condition:: tensor(3.2321e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3118e-07, dtype=torch.float64)
secont condition:: tensor(5.3118e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1018e-06, dtype=torch.float64)
secont condition:: tensor(5.1018e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9636e-07, dtype=torch.float64)
secont condition:: tensor(3.9636e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4225e-07, dtype=torch.float64)
secont condition:: tensor(3.4225e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2066e-07, dtype=torch.float64)
secont condition:: tensor(8.2066e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0561e-06, dtype=torch.float64)
secont condition:: tensor(5.0561e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5626e-07, dtype=torch.float64)
secont condition:: tensor(6.5626e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1879e-07, dtype=torch.float64)
secont condition:: tensor(4.1879e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2104e-07, dtype=torch.float64)
secont condition:: tensor(7.2104e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9638e-06, dtype=torch.float64)
secont condition:: tensor(1.9638e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6592e-06, dtype=torch.float64)
secont condition:: tensor(3.6592e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8927e-07, dtype=torch.float64)
secont condition:: tensor(3.8927e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8043e-07, dtype=torch.float64)
secont condition:: tensor(3.8043e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2258e-07, dtype=torch.float64)
secont condition:: tensor(3.2258e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1527e-07, dtype=torch.float64)
secont condition:: tensor(4.1527e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5567e-07, dtype=torch.float64)
secont condition:: tensor(6.5567e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4415e-06, dtype=torch.float64)
secont condition:: tensor(4.4415e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6913e-06, dtype=torch.float64)
secont condition:: tensor(1.6913e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3429e-07, dtype=torch.float64)
secont condition:: tensor(3.3429e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9447e-07, dtype=torch.float64)
secont condition:: tensor(6.9447e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7009e-07, dtype=torch.float64)
secont condition:: tensor(7.7009e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7619e-06, dtype=torch.float64)
secont condition:: tensor(1.7619e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4084e-07, dtype=torch.float64)
secont condition:: tensor(6.4084e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8073e-07, dtype=torch.float64)
secont condition:: tensor(4.8073e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7078e-07, dtype=torch.float64)
secont condition:: tensor(5.7078e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7223e-07, dtype=torch.float64)
secont condition:: tensor(3.7223e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9723e-07, dtype=torch.float64)
secont condition:: tensor(4.9723e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2518e-07, dtype=torch.float64)
secont condition:: tensor(8.2518e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5681e-07, dtype=torch.float64)
secont condition:: tensor(8.5681e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4084e-07, dtype=torch.float64)
secont condition:: tensor(6.4084e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5751e-07, dtype=torch.float64)
secont condition:: tensor(6.5751e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5473e-07, dtype=torch.float64)
secont condition:: tensor(4.5473e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2716e-07, dtype=torch.float64)
secont condition:: tensor(4.2716e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9087e-07, dtype=torch.float64)
secont condition:: tensor(6.9087e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6554e-07, dtype=torch.float64)
secont condition:: tensor(5.6554e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3145e-07, dtype=torch.float64)
secont condition:: tensor(6.3145e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0775e-07, dtype=torch.float64)
secont condition:: tensor(3.0775e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4086e-07, dtype=torch.float64)
secont condition:: tensor(5.4086e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3769e-07, dtype=torch.float64)
secont condition:: tensor(3.3769e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.99047827720642
curr_diff: 0 tensor(1.6039e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7529e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.9661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4372e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.6691e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4286e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7647e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8485e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.1620e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232180
Test Avg. Loss: 0.000023, Accuracy: 0.944600
Train - Epoch 1, Batch: 0, Loss: 0.239001
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.165891
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.156396
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 4, Batch: 0, Loss: 0.157126
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 5, Batch: 0, Loss: 0.158669
Test Avg. Loss: 0.000022, Accuracy: 0.937200
Train - Epoch 6, Batch: 0, Loss: 0.233119
Test Avg. Loss: 0.000027, Accuracy: 0.941200
Train - Epoch 7, Batch: 0, Loss: 0.283993
Test Avg. Loss: 0.000016, Accuracy: 0.956900
Train - Epoch 8, Batch: 0, Loss: 0.170252
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 9, Batch: 0, Loss: 0.167891
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 10, Batch: 0, Loss: 0.153361
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 11, Batch: 0, Loss: 0.162471
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 12, Batch: 0, Loss: 0.158087
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 13, Batch: 0, Loss: 0.157127
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 14, Batch: 0, Loss: 0.155958
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.153420
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 16, Batch: 0, Loss: 0.156486
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.154577
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 18, Batch: 0, Loss: 0.152569
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 19, Batch: 0, Loss: 0.153618
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 20, Batch: 0, Loss: 0.148043
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 21, Batch: 0, Loss: 0.150984
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 22, Batch: 0, Loss: 0.151264
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.156349
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 24, Batch: 0, Loss: 0.156643
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.149775
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 26, Batch: 0, Loss: 0.152385
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 27, Batch: 0, Loss: 0.146144
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 28, Batch: 0, Loss: 0.152336
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.152116
Test Avg. Loss: 0.000014, Accuracy: 0.962100
training_time:: 171.57258248329163
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.54282331466675
time_baseline:: 117.60786581039429
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0110, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0236, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0121, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0089, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0040, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0306, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1975e-06, dtype=torch.float64)
secont condition:: tensor(1.1975e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0473e-07, dtype=torch.float64)
secont condition:: tensor(9.0473e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8836e-07, dtype=torch.float64)
secont condition:: tensor(8.8836e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9363e-06, dtype=torch.float64)
secont condition:: tensor(1.9363e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7705e-08, dtype=torch.float64)
secont condition:: tensor(8.7705e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4047e-07, dtype=torch.float64)
secont condition:: tensor(1.4047e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0283e-08, dtype=torch.float64)
secont condition:: tensor(6.0283e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8572e-07, dtype=torch.float64)
secont condition:: tensor(9.8572e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4286e-07, dtype=torch.float64)
secont condition:: tensor(3.4286e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1097e-07, dtype=torch.float64)
secont condition:: tensor(9.1097e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6407e-07, dtype=torch.float64)
secont condition:: tensor(4.6407e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2648e-07, dtype=torch.float64)
secont condition:: tensor(4.2648e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7169e-07, dtype=torch.float64)
secont condition:: tensor(3.7169e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3976e-06, dtype=torch.float64)
secont condition:: tensor(1.3976e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2304e-06, dtype=torch.float64)
secont condition:: tensor(1.2304e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3283e-06, dtype=torch.float64)
secont condition:: tensor(1.3283e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1463e-06, dtype=torch.float64)
secont condition:: tensor(2.1463e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6104e-06, dtype=torch.float64)
secont condition:: tensor(3.6104e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9229e-06, dtype=torch.float64)
secont condition:: tensor(6.9229e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0950e-05, dtype=torch.float64)
secont condition:: tensor(2.0950e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1265e-05, dtype=torch.float64)
secont condition:: tensor(4.1265e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0027, dtype=torch.float64)
secont condition:: tensor(0.0027, dtype=torch.float64)
curr_secont condition:: tensor(-0.0048, dtype=torch.float64)
curr_secont condition:: tensor(0.0428, dtype=torch.float64)
secont condition:: tensor(0.0428, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0038, dtype=torch.float64)
secont condition:: tensor(0.0038, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.0266e-05, dtype=torch.float64)
secont condition:: tensor(9.0266e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.1981e-05, dtype=torch.float64)
secont condition:: tensor(9.1981e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2429e-05, dtype=torch.float64)
secont condition:: tensor(9.2429e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.5953e-05, dtype=torch.float64)
secont condition:: tensor(7.5953e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.0609e-05, dtype=torch.float64)
secont condition:: tensor(8.0609e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2950e-05, dtype=torch.float64)
secont condition:: tensor(4.2950e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9241e-05, dtype=torch.float64)
secont condition:: tensor(7.9241e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.6636e-05, dtype=torch.float64)
secont condition:: tensor(6.6636e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.0361e-05, dtype=torch.float64)
secont condition:: tensor(7.0361e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6290e-05, dtype=torch.float64)
secont condition:: tensor(8.6290e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5337e-05, dtype=torch.float64)
secont condition:: tensor(5.5337e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8523e-05, dtype=torch.float64)
secont condition:: tensor(6.8523e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.1926e-05, dtype=torch.float64)
secont condition:: tensor(6.1926e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.0901e-05, dtype=torch.float64)
secont condition:: tensor(6.0901e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9391e-05, dtype=torch.float64)
secont condition:: tensor(5.9391e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7240e-05, dtype=torch.float64)
secont condition:: tensor(5.7240e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0202e-05, dtype=torch.float64)
secont condition:: tensor(5.0202e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.9073e-05, dtype=torch.float64)
secont condition:: tensor(3.9073e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1706e-05, dtype=torch.float64)
secont condition:: tensor(5.1706e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9303e-05, dtype=torch.float64)
secont condition:: tensor(5.9303e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2924e-05, dtype=torch.float64)
secont condition:: tensor(9.2924e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1157e-05, dtype=torch.float64)
secont condition:: tensor(4.1157e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2174e-05, dtype=torch.float64)
secont condition:: tensor(3.2174e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8019e-05, dtype=torch.float64)
secont condition:: tensor(2.8019e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3764e-05, dtype=torch.float64)
secont condition:: tensor(3.3764e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6270e-05, dtype=torch.float64)
secont condition:: tensor(3.6270e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3422e-05, dtype=torch.float64)
secont condition:: tensor(3.3422e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1733e-05, dtype=torch.float64)
secont condition:: tensor(3.1733e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4979e-05, dtype=torch.float64)
secont condition:: tensor(3.4979e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4658e-05, dtype=torch.float64)
secont condition:: tensor(2.4658e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8791e-05, dtype=torch.float64)
secont condition:: tensor(2.8791e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0604e-05, dtype=torch.float64)
secont condition:: tensor(3.0604e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1012e-05, dtype=torch.float64)
secont condition:: tensor(3.1012e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1534e-05, dtype=torch.float64)
secont condition:: tensor(2.1534e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2891e-05, dtype=torch.float64)
secont condition:: tensor(2.2891e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8217e-05, dtype=torch.float64)
secont condition:: tensor(2.8217e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8698e-05, dtype=torch.float64)
secont condition:: tensor(2.8698e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9135e-05, dtype=torch.float64)
secont condition:: tensor(2.9135e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.005954265594482
curr_diff: 0 tensor(4.9450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9881e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9604e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0978e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.8777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0112, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0238, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0123, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0090, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0310, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
random set 3
python3 generate_rand_ids 0.00005  MNIST
tensor([25492,  7454, 24255])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.240992
Test Avg. Loss: 0.000024, Accuracy: 0.939900
Train - Epoch 1, Batch: 0, Loss: 0.257893
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.166806
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.166196
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.158049
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 5, Batch: 0, Loss: 0.155413
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 6, Batch: 0, Loss: 0.151991
Test Avg. Loss: 0.000015, Accuracy: 0.953800
Train - Epoch 7, Batch: 0, Loss: 0.164260
Test Avg. Loss: 0.000057, Accuracy: 0.817700
Train - Epoch 8, Batch: 0, Loss: 0.585682
Test Avg. Loss: 0.000021, Accuracy: 0.950200
Train - Epoch 9, Batch: 0, Loss: 0.227665
Test Avg. Loss: 0.000017, Accuracy: 0.955000
Train - Epoch 10, Batch: 0, Loss: 0.182914
Test Avg. Loss: 0.000016, Accuracy: 0.957200
Train - Epoch 11, Batch: 0, Loss: 0.165186
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 12, Batch: 0, Loss: 0.160688
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 13, Batch: 0, Loss: 0.152986
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 14, Batch: 0, Loss: 0.156065
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 15, Batch: 0, Loss: 0.155869
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 16, Batch: 0, Loss: 0.158286
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.153084
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 18, Batch: 0, Loss: 0.152684
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.152418
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 20, Batch: 0, Loss: 0.149388
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.153998
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.151837
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.152238
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.157278
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.156027
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.148734
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.153770
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.157114
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.150876
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 170.20617938041687
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.07239985466003
time_baseline:: 117.13969707489014
curr_diff: 0 tensor(5.7288e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1962e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2954e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8519e-08, dtype=torch.float64)
secont condition:: tensor(1.8519e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0742e-08, dtype=torch.float64)
secont condition:: tensor(5.0742e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8811e-08, dtype=torch.float64)
secont condition:: tensor(2.8811e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4160e-08, dtype=torch.float64)
secont condition:: tensor(3.4160e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0600e-08, dtype=torch.float64)
secont condition:: tensor(1.0600e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0002e-08, dtype=torch.float64)
secont condition:: tensor(1.0002e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6335e-09, dtype=torch.float64)
secont condition:: tensor(5.6335e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0826e-09, dtype=torch.float64)
secont condition:: tensor(3.0826e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6538e-09, dtype=torch.float64)
secont condition:: tensor(4.6538e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2526e-09, dtype=torch.float64)
secont condition:: tensor(2.2526e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1730e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2885e-10, dtype=torch.float64)
secont condition:: tensor(8.2885e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9828e-09, dtype=torch.float64)
secont condition:: tensor(4.9828e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3076e-09, dtype=torch.float64)
secont condition:: tensor(6.3076e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4393e-09, dtype=torch.float64)
secont condition:: tensor(9.4393e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4629e-09, dtype=torch.float64)
secont condition:: tensor(5.4629e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7995e-09, dtype=torch.float64)
secont condition:: tensor(1.7995e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5709e-09, dtype=torch.float64)
secont condition:: tensor(4.5709e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0650e-10, dtype=torch.float64)
secont condition:: tensor(2.0650e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6020e-09, dtype=torch.float64)
secont condition:: tensor(8.6020e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.4509e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7710e-10, dtype=torch.float64)
secont condition:: tensor(8.7710e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4030e-09, dtype=torch.float64)
secont condition:: tensor(4.4030e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6176e-09, dtype=torch.float64)
secont condition:: tensor(7.6176e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2422e-09, dtype=torch.float64)
secont condition:: tensor(1.2422e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8905e-09, dtype=torch.float64)
secont condition:: tensor(5.8905e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0063e-08, dtype=torch.float64)
secont condition:: tensor(1.0063e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6067e-08, dtype=torch.float64)
secont condition:: tensor(4.6067e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0065e-07, dtype=torch.float64)
secont condition:: tensor(1.0065e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0518e-07, dtype=torch.float64)
secont condition:: tensor(2.0518e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0591e-07, dtype=torch.float64)
secont condition:: tensor(6.0591e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8289e-06, dtype=torch.float64)
secont condition:: tensor(1.8289e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9679e-07, dtype=torch.float64)
secont condition:: tensor(8.9679e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2812e-06, dtype=torch.float64)
secont condition:: tensor(5.2812e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6119e-07, dtype=torch.float64)
secont condition:: tensor(9.6119e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0384e-07, dtype=torch.float64)
secont condition:: tensor(3.0384e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7328e-06, dtype=torch.float64)
secont condition:: tensor(4.7328e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2183e-07, dtype=torch.float64)
secont condition:: tensor(1.2183e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2567e-08, dtype=torch.float64)
secont condition:: tensor(4.2567e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6681e-07, dtype=torch.float64)
secont condition:: tensor(1.6681e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4310e-08, dtype=torch.float64)
secont condition:: tensor(8.4310e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4965e-07, dtype=torch.float64)
secont condition:: tensor(1.4965e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2523e-08, dtype=torch.float64)
secont condition:: tensor(6.2523e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9466e-07, dtype=torch.float64)
secont condition:: tensor(3.9466e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1952e-06, dtype=torch.float64)
secont condition:: tensor(1.1952e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4842e-08, dtype=torch.float64)
secont condition:: tensor(8.4842e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2183e-07, dtype=torch.float64)
secont condition:: tensor(3.2183e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1868e-08, dtype=torch.float64)
secont condition:: tensor(9.1868e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8863e-07, dtype=torch.float64)
secont condition:: tensor(7.8863e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7524e-08, dtype=torch.float64)
secont condition:: tensor(5.7524e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6063e-08, dtype=torch.float64)
secont condition:: tensor(1.6063e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0966e-08, dtype=torch.float64)
secont condition:: tensor(8.0966e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2275e-08, dtype=torch.float64)
secont condition:: tensor(7.2275e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8784e-08, dtype=torch.float64)
secont condition:: tensor(4.8784e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3465e-08, dtype=torch.float64)
secont condition:: tensor(1.3465e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7980e-07, dtype=torch.float64)
secont condition:: tensor(2.7980e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9771e-08, dtype=torch.float64)
secont condition:: tensor(4.9771e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8504e-08, dtype=torch.float64)
secont condition:: tensor(9.8504e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4234e-07, dtype=torch.float64)
secont condition:: tensor(1.4234e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4738e-08, dtype=torch.float64)
secont condition:: tensor(4.4738e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0197e-07, dtype=torch.float64)
secont condition:: tensor(1.0197e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5975e-08, dtype=torch.float64)
secont condition:: tensor(2.5975e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7870e-07, dtype=torch.float64)
secont condition:: tensor(3.7870e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1668e-08, dtype=torch.float64)
secont condition:: tensor(6.1668e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1359e-08, dtype=torch.float64)
secont condition:: tensor(7.1359e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9524e-08, dtype=torch.float64)
secont condition:: tensor(3.9524e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9307e-08, dtype=torch.float64)
secont condition:: tensor(6.9307e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0336e-08, dtype=torch.float64)
secont condition:: tensor(5.0336e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5493e-08, dtype=torch.float64)
secont condition:: tensor(6.5493e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8395e-06, dtype=torch.float64)
secont condition:: tensor(2.8395e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1588e-08, dtype=torch.float64)
secont condition:: tensor(5.1588e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2655e-08, dtype=torch.float64)
secont condition:: tensor(7.2655e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0853e-08, dtype=torch.float64)
secont condition:: tensor(5.0853e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6275e-08, dtype=torch.float64)
secont condition:: tensor(5.6275e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9749e-08, dtype=torch.float64)
secont condition:: tensor(3.9749e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6618e-08, dtype=torch.float64)
secont condition:: tensor(2.6618e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5892e-08, dtype=torch.float64)
secont condition:: tensor(5.5892e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3260e-08, dtype=torch.float64)
secont condition:: tensor(3.3260e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.46033763885498
curr_diff: 0 tensor(9.0988e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.2681e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1730e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1114e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0185e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.1453e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8710e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5078e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5163e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.3336e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6718e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1916e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2964e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.230902
Test Avg. Loss: 0.000023, Accuracy: 0.941900
Train - Epoch 1, Batch: 0, Loss: 0.244768
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.165316
Test Avg. Loss: 0.000015, Accuracy: 0.959200
Train - Epoch 3, Batch: 0, Loss: 0.156084
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 4, Batch: 0, Loss: 0.161556
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 5, Batch: 0, Loss: 0.161551
Test Avg. Loss: 0.000041, Accuracy: 0.858200
Train - Epoch 6, Batch: 0, Loss: 0.434373
Test Avg. Loss: 0.000024, Accuracy: 0.945000
Train - Epoch 7, Batch: 0, Loss: 0.254993
Test Avg. Loss: 0.000017, Accuracy: 0.952600
Train - Epoch 8, Batch: 0, Loss: 0.185686
Test Avg. Loss: 0.000015, Accuracy: 0.954600
Train - Epoch 9, Batch: 0, Loss: 0.171014
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 10, Batch: 0, Loss: 0.164375
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 11, Batch: 0, Loss: 0.162862
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 12, Batch: 0, Loss: 0.164275
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.156353
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 14, Batch: 0, Loss: 0.158025
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 15, Batch: 0, Loss: 0.159806
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.155339
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.154462
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 18, Batch: 0, Loss: 0.160426
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 19, Batch: 0, Loss: 0.151072
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 20, Batch: 0, Loss: 0.157108
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 21, Batch: 0, Loss: 0.155381
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 22, Batch: 0, Loss: 0.155145
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 23, Batch: 0, Loss: 0.161102
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 24, Batch: 0, Loss: 0.158938
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 25, Batch: 0, Loss: 0.154415
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 26, Batch: 0, Loss: 0.156802
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.153421
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 28, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 29, Batch: 0, Loss: 0.152537
Test Avg. Loss: 0.000014, Accuracy: 0.960900
training_time:: 169.43523621559143
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.10670471191406
time_baseline:: 115.17172622680664
curr_diff: 0 tensor(6.8245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1065e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1787e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0626e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1969e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4436e-09, dtype=torch.float64)
secont condition:: tensor(8.4436e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5394e-08, dtype=torch.float64)
secont condition:: tensor(1.5394e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0503e-08, dtype=torch.float64)
secont condition:: tensor(3.0503e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0872e-08, dtype=torch.float64)
secont condition:: tensor(2.0872e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6096e-09, dtype=torch.float64)
secont condition:: tensor(5.6096e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1425e-09, dtype=torch.float64)
secont condition:: tensor(6.1425e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.1747e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7610e-10, dtype=torch.float64)
secont condition:: tensor(8.7610e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1650e-09, dtype=torch.float64)
secont condition:: tensor(4.1650e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1847e-09, dtype=torch.float64)
secont condition:: tensor(5.1847e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0087e-09, dtype=torch.float64)
secont condition:: tensor(4.0087e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2036e-09, dtype=torch.float64)
secont condition:: tensor(4.2036e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8900e-10, dtype=torch.float64)
secont condition:: tensor(5.8900e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2467e-09, dtype=torch.float64)
secont condition:: tensor(5.2467e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9582e-09, dtype=torch.float64)
secont condition:: tensor(6.9582e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0744e-09, dtype=torch.float64)
secont condition:: tensor(9.0744e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5601e-09, dtype=torch.float64)
secont condition:: tensor(5.5601e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0243e-09, dtype=torch.float64)
secont condition:: tensor(5.0243e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4747e-09, dtype=torch.float64)
secont condition:: tensor(3.4747e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6094e-09, dtype=torch.float64)
secont condition:: tensor(4.6094e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2870e-09, dtype=torch.float64)
secont condition:: tensor(5.2870e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5422e-09, dtype=torch.float64)
secont condition:: tensor(8.5422e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8213e-08, dtype=torch.float64)
secont condition:: tensor(1.8213e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3973e-07, dtype=torch.float64)
secont condition:: tensor(5.3973e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7030e-08, dtype=torch.float64)
secont condition:: tensor(3.7030e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2366e-06, dtype=torch.float64)
secont condition:: tensor(5.2366e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3514e-06, dtype=torch.float64)
secont condition:: tensor(4.3514e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7619e-06, dtype=torch.float64)
secont condition:: tensor(1.7619e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6541e-07, dtype=torch.float64)
secont condition:: tensor(7.6541e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6396e-07, dtype=torch.float64)
secont condition:: tensor(2.6396e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5627e-08, dtype=torch.float64)
secont condition:: tensor(2.5627e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4111e-07, dtype=torch.float64)
secont condition:: tensor(3.4111e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1070e-07, dtype=torch.float64)
secont condition:: tensor(2.1070e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4416e-07, dtype=torch.float64)
secont condition:: tensor(3.4416e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5341e-07, dtype=torch.float64)
secont condition:: tensor(1.5341e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8074e-08, dtype=torch.float64)
secont condition:: tensor(4.8074e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2705e-08, dtype=torch.float64)
secont condition:: tensor(3.2705e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3887e-07, dtype=torch.float64)
secont condition:: tensor(3.3887e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2478e-07, dtype=torch.float64)
secont condition:: tensor(1.2478e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9262e-08, dtype=torch.float64)
secont condition:: tensor(7.9262e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1641e-07, dtype=torch.float64)
secont condition:: tensor(1.1641e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0027e-09, dtype=torch.float64)
secont condition:: tensor(7.0027e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5255e-07, dtype=torch.float64)
secont condition:: tensor(1.5255e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1235e-08, dtype=torch.float64)
secont condition:: tensor(3.1235e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5345e-07, dtype=torch.float64)
secont condition:: tensor(1.5345e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4756e-07, dtype=torch.float64)
secont condition:: tensor(1.4756e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.1998e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1418e-08, dtype=torch.float64)
secont condition:: tensor(1.1418e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1638e-08, dtype=torch.float64)
secont condition:: tensor(4.1638e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6880e-09, dtype=torch.float64)
secont condition:: tensor(6.6880e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.9079e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8208e-08, dtype=torch.float64)
secont condition:: tensor(5.8208e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7508e-07, dtype=torch.float64)
secont condition:: tensor(1.7508e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7979e-08, dtype=torch.float64)
secont condition:: tensor(9.7979e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5605e-07, dtype=torch.float64)
secont condition:: tensor(1.5605e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6283e-08, dtype=torch.float64)
secont condition:: tensor(2.6283e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2141e-08, dtype=torch.float64)
secont condition:: tensor(9.2141e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0178e-08, dtype=torch.float64)
secont condition:: tensor(1.0178e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1783e-08, dtype=torch.float64)
secont condition:: tensor(1.1783e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4689e-08, dtype=torch.float64)
secont condition:: tensor(2.4689e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8125e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8667e-08, dtype=torch.float64)
secont condition:: tensor(4.8667e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9240e-08, dtype=torch.float64)
secont condition:: tensor(2.9240e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9107e-08, dtype=torch.float64)
secont condition:: tensor(2.9107e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0566e-08, dtype=torch.float64)
secont condition:: tensor(5.0566e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4185e-08, dtype=torch.float64)
secont condition:: tensor(6.4185e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6325e-10, dtype=torch.float64)
secont condition:: tensor(7.6325e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9990e-08, dtype=torch.float64)
secont condition:: tensor(7.9990e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0704e-07, dtype=torch.float64)
secont condition:: tensor(1.0704e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4219e-08, dtype=torch.float64)
secont condition:: tensor(8.4219e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5109e-08, dtype=torch.float64)
secont condition:: tensor(4.5109e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8699e-08, dtype=torch.float64)
secont condition:: tensor(1.8699e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1186e-08, dtype=torch.float64)
secont condition:: tensor(9.1186e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0877e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9054e-08, dtype=torch.float64)
secont condition:: tensor(5.9054e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0973e-09, dtype=torch.float64)
secont condition:: tensor(9.0973e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3308e-08, dtype=torch.float64)
secont condition:: tensor(2.3308e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9926e-08, dtype=torch.float64)
secont condition:: tensor(4.9926e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6773e-08, dtype=torch.float64)
secont condition:: tensor(3.6773e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.1343e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4587e-08, dtype=torch.float64)
secont condition:: tensor(2.4587e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.4504873752594
curr_diff: 0 tensor(7.5753e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1895e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8446e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2784e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9309e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8639e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.2079e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.6581e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2484e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.1422e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1963e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235852
Test Avg. Loss: 0.000025, Accuracy: 0.938400
Train - Epoch 1, Batch: 0, Loss: 0.266626
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.170547
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.158540
Test Avg. Loss: 0.000014, Accuracy: 0.957300
Train - Epoch 4, Batch: 0, Loss: 0.156885
Test Avg. Loss: 0.000014, Accuracy: 0.957100
Train - Epoch 5, Batch: 0, Loss: 0.158154
Test Avg. Loss: 0.000017, Accuracy: 0.948100
Train - Epoch 6, Batch: 0, Loss: 0.177123
Test Avg. Loss: 0.000145, Accuracy: 0.608200
Train - Epoch 7, Batch: 0, Loss: 1.480888
Test Avg. Loss: 0.000033, Accuracy: 0.920400
Train - Epoch 8, Batch: 0, Loss: 0.350344
Test Avg. Loss: 0.000019, Accuracy: 0.949500
Train - Epoch 9, Batch: 0, Loss: 0.200931
Test Avg. Loss: 0.000017, Accuracy: 0.951100
Train - Epoch 10, Batch: 0, Loss: 0.187637
Test Avg. Loss: 0.000016, Accuracy: 0.952600
Train - Epoch 11, Batch: 0, Loss: 0.177613
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 12, Batch: 0, Loss: 0.176256
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 13, Batch: 0, Loss: 0.175809
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 14, Batch: 0, Loss: 0.162064
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 15, Batch: 0, Loss: 0.168154
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 16, Batch: 0, Loss: 0.164704
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 17, Batch: 0, Loss: 0.160679
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 18, Batch: 0, Loss: 0.160183
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 19, Batch: 0, Loss: 0.163734
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 20, Batch: 0, Loss: 0.160105
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 21, Batch: 0, Loss: 0.154338
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 22, Batch: 0, Loss: 0.159203
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 23, Batch: 0, Loss: 0.159811
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 24, Batch: 0, Loss: 0.162996
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 25, Batch: 0, Loss: 0.158793
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 26, Batch: 0, Loss: 0.154991
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 27, Batch: 0, Loss: 0.158763
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 28, Batch: 0, Loss: 0.156789
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 29, Batch: 0, Loss: 0.154834
Test Avg. Loss: 0.000014, Accuracy: 0.960300
training_time:: 171.02277183532715
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.074880361557
time_baseline:: 114.13989353179932
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0080, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0102, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4741e-32, dtype=torch.float64)
secont condition:: tensor(1.4741e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.7003e-09, dtype=torch.float64)
secont condition:: tensor(7.7003e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9122e-07, dtype=torch.float64)
secont condition:: tensor(3.9122e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9992e-07, dtype=torch.float64)
secont condition:: tensor(4.9992e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6794e-08, dtype=torch.float64)
secont condition:: tensor(9.6794e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0758e-08, dtype=torch.float64)
secont condition:: tensor(7.0758e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3685e-08, dtype=torch.float64)
secont condition:: tensor(1.3685e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0829e-08, dtype=torch.float64)
secont condition:: tensor(3.0829e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1419e-08, dtype=torch.float64)
secont condition:: tensor(2.1419e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0022e-08, dtype=torch.float64)
secont condition:: tensor(1.0022e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6057e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0481e-08, dtype=torch.float64)
secont condition:: tensor(2.0481e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5794e-08, dtype=torch.float64)
secont condition:: tensor(4.5794e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4277e-09, dtype=torch.float64)
secont condition:: tensor(6.4277e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4391e-08, dtype=torch.float64)
secont condition:: tensor(4.4391e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3166e-08, dtype=torch.float64)
secont condition:: tensor(3.3166e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9528e-08, dtype=torch.float64)
secont condition:: tensor(1.9528e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9432e-09, dtype=torch.float64)
secont condition:: tensor(9.9432e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3307e-09, dtype=torch.float64)
secont condition:: tensor(9.3307e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1260e-07, dtype=torch.float64)
secont condition:: tensor(1.1260e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3494e-07, dtype=torch.float64)
secont condition:: tensor(1.3494e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0329e-07, dtype=torch.float64)
secont condition:: tensor(3.0329e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0955e-07, dtype=torch.float64)
secont condition:: tensor(7.0955e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2869e-06, dtype=torch.float64)
secont condition:: tensor(2.2869e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7436e-06, dtype=torch.float64)
secont condition:: tensor(6.7436e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2786e-05, dtype=torch.float64)
secont condition:: tensor(2.2786e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.4740e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-5.4549e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(5.7345e-05, dtype=torch.float64)
secont condition:: tensor(5.7345e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.3972e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.0738e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.0580e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8884e-06, dtype=torch.float64)
secont condition:: tensor(1.8884e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.6257e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6035e-06, dtype=torch.float64)
secont condition:: tensor(1.6035e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7492e-06, dtype=torch.float64)
secont condition:: tensor(1.7492e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.1651e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5495e-06, dtype=torch.float64)
secont condition:: tensor(3.5495e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1197e-06, dtype=torch.float64)
secont condition:: tensor(3.1197e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9328e-06, dtype=torch.float64)
secont condition:: tensor(2.9328e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0416e-05, dtype=torch.float64)
secont condition:: tensor(1.0416e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.8965e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0629e-05, dtype=torch.float64)
secont condition:: tensor(1.0629e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4850e-06, dtype=torch.float64)
secont condition:: tensor(4.4850e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0459e-06, dtype=torch.float64)
secont condition:: tensor(9.0459e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4702e-06, dtype=torch.float64)
secont condition:: tensor(3.4702e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9656e-06, dtype=torch.float64)
secont condition:: tensor(1.9656e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7697e-06, dtype=torch.float64)
secont condition:: tensor(7.7697e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4665e-05, dtype=torch.float64)
secont condition:: tensor(1.4665e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1581e-06, dtype=torch.float64)
secont condition:: tensor(6.1581e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9927e-06, dtype=torch.float64)
secont condition:: tensor(6.9927e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5891e-07, dtype=torch.float64)
secont condition:: tensor(5.5891e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2552e-06, dtype=torch.float64)
secont condition:: tensor(1.2552e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0577e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0440e-06, dtype=torch.float64)
secont condition:: tensor(6.0440e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0183e-05, dtype=torch.float64)
secont condition:: tensor(1.0183e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3515e-06, dtype=torch.float64)
secont condition:: tensor(5.3515e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3640e-06, dtype=torch.float64)
secont condition:: tensor(7.3640e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7581e-06, dtype=torch.float64)
secont condition:: tensor(5.7581e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2520e-06, dtype=torch.float64)
secont condition:: tensor(8.2520e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2186e-06, dtype=torch.float64)
secont condition:: tensor(8.2186e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9495e-06, dtype=torch.float64)
secont condition:: tensor(8.9495e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4768e-06, dtype=torch.float64)
secont condition:: tensor(7.4768e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9754e-06, dtype=torch.float64)
secont condition:: tensor(7.9754e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7570e-06, dtype=torch.float64)
secont condition:: tensor(8.7570e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4971e-06, dtype=torch.float64)
secont condition:: tensor(9.4971e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4100e-06, dtype=torch.float64)
secont condition:: tensor(4.4100e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7622e-06, dtype=torch.float64)
secont condition:: tensor(4.7622e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0512e-06, dtype=torch.float64)
secont condition:: tensor(5.0512e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2143e-06, dtype=torch.float64)
secont condition:: tensor(6.2143e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2163e-06, dtype=torch.float64)
secont condition:: tensor(2.2163e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6639e-06, dtype=torch.float64)
secont condition:: tensor(1.6639e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9233e-06, dtype=torch.float64)
secont condition:: tensor(3.9233e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9993e-06, dtype=torch.float64)
secont condition:: tensor(3.9993e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4636e-06, dtype=torch.float64)
secont condition:: tensor(1.4636e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4809e-06, dtype=torch.float64)
secont condition:: tensor(1.4809e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8929e-06, dtype=torch.float64)
secont condition:: tensor(3.8929e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.033055305480957
curr_diff: 0 tensor(3.5460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.1168e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4976e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0003e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0080, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0103, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960400
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234646
Test Avg. Loss: 0.000025, Accuracy: 0.938200
Train - Epoch 1, Batch: 0, Loss: 0.266488
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 2, Batch: 0, Loss: 0.169619
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.159761
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.157706
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 5, Batch: 0, Loss: 0.162067
Test Avg. Loss: 0.000035, Accuracy: 0.881600
Train - Epoch 6, Batch: 0, Loss: 0.379895
Test Avg. Loss: 0.000028, Accuracy: 0.937800
Train - Epoch 7, Batch: 0, Loss: 0.309457
Test Avg. Loss: 0.000016, Accuracy: 0.954600
Train - Epoch 8, Batch: 0, Loss: 0.174326
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 9, Batch: 0, Loss: 0.166544
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 10, Batch: 0, Loss: 0.156094
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 11, Batch: 0, Loss: 0.155436
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 12, Batch: 0, Loss: 0.162726
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 13, Batch: 0, Loss: 0.152882
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 14, Batch: 0, Loss: 0.156572
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 15, Batch: 0, Loss: 0.153996
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.154958
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.153944
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 18, Batch: 0, Loss: 0.152097
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 19, Batch: 0, Loss: 0.155118
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.152384
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 21, Batch: 0, Loss: 0.157887
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 22, Batch: 0, Loss: 0.153872
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.153332
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.151471
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.152252
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.156587
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.155875
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.152998
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.149932
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 169.0628411769867
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.56666374206543
time_baseline:: 115.63079190254211
curr_diff: 0 tensor(5.2962e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9581e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4977e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0911e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.0476e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4728e-33, dtype=torch.float64)
secont condition:: tensor(8.4728e-33, dtype=torch.float64)
curr_secont condition:: tensor(-6.4378e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1831e-07, dtype=torch.float64)
secont condition:: tensor(3.1831e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3027e-07, dtype=torch.float64)
secont condition:: tensor(4.3027e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4741e-08, dtype=torch.float64)
secont condition:: tensor(5.4741e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2541e-09, dtype=torch.float64)
secont condition:: tensor(8.2541e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2062e-08, dtype=torch.float64)
secont condition:: tensor(2.2062e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6649e-08, dtype=torch.float64)
secont condition:: tensor(2.6649e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1722e-09, dtype=torch.float64)
secont condition:: tensor(9.1722e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3842e-08, dtype=torch.float64)
secont condition:: tensor(1.3842e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4766e-09, dtype=torch.float64)
secont condition:: tensor(6.4766e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8303e-08, dtype=torch.float64)
secont condition:: tensor(1.8303e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7645e-10, dtype=torch.float64)
secont condition:: tensor(2.7645e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5610e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9313e-08, dtype=torch.float64)
secont condition:: tensor(5.9313e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7026e-08, dtype=torch.float64)
secont condition:: tensor(6.7026e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5804e-08, dtype=torch.float64)
secont condition:: tensor(6.5804e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2381e-08, dtype=torch.float64)
secont condition:: tensor(9.2381e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4375e-08, dtype=torch.float64)
secont condition:: tensor(6.4375e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7817e-08, dtype=torch.float64)
secont condition:: tensor(9.7817e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0576e-07, dtype=torch.float64)
secont condition:: tensor(1.0576e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6824e-07, dtype=torch.float64)
secont condition:: tensor(1.6824e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2689e-07, dtype=torch.float64)
secont condition:: tensor(3.2689e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5968e-07, dtype=torch.float64)
secont condition:: tensor(3.5968e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0137e-06, dtype=torch.float64)
secont condition:: tensor(1.0137e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6985e-06, dtype=torch.float64)
secont condition:: tensor(1.6985e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3656e-06, dtype=torch.float64)
secont condition:: tensor(1.3656e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2558e-06, dtype=torch.float64)
secont condition:: tensor(1.2558e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8722e-07, dtype=torch.float64)
secont condition:: tensor(3.8722e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4804e-07, dtype=torch.float64)
secont condition:: tensor(1.4804e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6345e-08, dtype=torch.float64)
secont condition:: tensor(3.6345e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3250e-08, dtype=torch.float64)
secont condition:: tensor(1.3250e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3444e-08, dtype=torch.float64)
secont condition:: tensor(8.3444e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0800e-08, dtype=torch.float64)
secont condition:: tensor(9.0800e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3995e-08, dtype=torch.float64)
secont condition:: tensor(3.3995e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1706e-08, dtype=torch.float64)
secont condition:: tensor(6.1706e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2058e-07, dtype=torch.float64)
secont condition:: tensor(1.2058e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5171e-08, dtype=torch.float64)
secont condition:: tensor(7.5171e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6649e-08, dtype=torch.float64)
secont condition:: tensor(9.6649e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6916e-08, dtype=torch.float64)
secont condition:: tensor(4.6916e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1098e-07, dtype=torch.float64)
secont condition:: tensor(1.1098e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4254e-07, dtype=torch.float64)
secont condition:: tensor(1.4254e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6007e-08, dtype=torch.float64)
secont condition:: tensor(1.6007e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3001e-08, dtype=torch.float64)
secont condition:: tensor(5.3001e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1032e-08, dtype=torch.float64)
secont condition:: tensor(1.1032e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1920e-08, dtype=torch.float64)
secont condition:: tensor(7.1920e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0764e-08, dtype=torch.float64)
secont condition:: tensor(1.0764e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5053e-08, dtype=torch.float64)
secont condition:: tensor(8.5053e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2093e-08, dtype=torch.float64)
secont condition:: tensor(1.2093e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1424e-08, dtype=torch.float64)
secont condition:: tensor(7.1424e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5037e-08, dtype=torch.float64)
secont condition:: tensor(1.5037e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4929e-08, dtype=torch.float64)
secont condition:: tensor(4.4929e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6279e-08, dtype=torch.float64)
secont condition:: tensor(2.6279e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4044e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7969e-08, dtype=torch.float64)
secont condition:: tensor(7.7969e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9038e-09, dtype=torch.float64)
secont condition:: tensor(4.9038e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1515e-07, dtype=torch.float64)
secont condition:: tensor(1.1515e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7938e-08, dtype=torch.float64)
secont condition:: tensor(1.7938e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1356e-08, dtype=torch.float64)
secont condition:: tensor(1.1356e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5470e-08, dtype=torch.float64)
secont condition:: tensor(6.5470e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6424e-08, dtype=torch.float64)
secont condition:: tensor(1.6424e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4260e-08, dtype=torch.float64)
secont condition:: tensor(7.4260e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2824e-08, dtype=torch.float64)
secont condition:: tensor(5.2824e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.9804e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7395e-08, dtype=torch.float64)
secont condition:: tensor(2.7395e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3738e-08, dtype=torch.float64)
secont condition:: tensor(2.3738e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4445e-08, dtype=torch.float64)
secont condition:: tensor(1.4445e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1836e-08, dtype=torch.float64)
secont condition:: tensor(2.1836e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0037e-08, dtype=torch.float64)
secont condition:: tensor(6.0037e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8518e-08, dtype=torch.float64)
secont condition:: tensor(2.8518e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6737e-08, dtype=torch.float64)
secont condition:: tensor(2.6737e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6808e-08, dtype=torch.float64)
secont condition:: tensor(3.6808e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5580e-08, dtype=torch.float64)
secont condition:: tensor(2.5580e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9561e-08, dtype=torch.float64)
secont condition:: tensor(2.9561e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-08, dtype=torch.float64)
secont condition:: tensor(1.9886e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1245e-07, dtype=torch.float64)
secont condition:: tensor(1.1245e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6824e-07, dtype=torch.float64)
secont condition:: tensor(2.6824e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5384e-09, dtype=torch.float64)
secont condition:: tensor(9.5384e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.802530527114868
curr_diff: 0 tensor(9.2161e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3933e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.5796e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4904e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.6485e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.5491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.5456e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5394e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3440e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.2350e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5058e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0335e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4673e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2704e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238148
Test Avg. Loss: 0.000028, Accuracy: 0.930700
Train - Epoch 1, Batch: 0, Loss: 0.300017
Test Avg. Loss: 0.000016, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.169884
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.153176
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 4, Batch: 0, Loss: 0.157147
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 5, Batch: 0, Loss: 0.151622
Test Avg. Loss: 0.000018, Accuracy: 0.944500
Train - Epoch 6, Batch: 0, Loss: 0.202390
Test Avg. Loss: 0.000093, Accuracy: 0.671600
Train - Epoch 7, Batch: 0, Loss: 0.948042
Test Avg. Loss: 0.000020, Accuracy: 0.948900
Train - Epoch 8, Batch: 0, Loss: 0.222680
Test Avg. Loss: 0.000016, Accuracy: 0.954200
Train - Epoch 9, Batch: 0, Loss: 0.171320
Test Avg. Loss: 0.000015, Accuracy: 0.954900
Train - Epoch 10, Batch: 0, Loss: 0.170753
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 11, Batch: 0, Loss: 0.160773
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 12, Batch: 0, Loss: 0.157569
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 13, Batch: 0, Loss: 0.162306
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 14, Batch: 0, Loss: 0.153926
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 15, Batch: 0, Loss: 0.160486
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.159523
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.157818
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 18, Batch: 0, Loss: 0.158621
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.156421
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.149038
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.157756
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 22, Batch: 0, Loss: 0.154132
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 23, Batch: 0, Loss: 0.156183
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 24, Batch: 0, Loss: 0.157102
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 25, Batch: 0, Loss: 0.155278
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 26, Batch: 0, Loss: 0.155686
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.152709
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.153952
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 29, Batch: 0, Loss: 0.160506
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 171.62639045715332
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.82811236381531
time_baseline:: 115.89225196838379
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5486e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0033, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1746e-08, dtype=torch.float64)
secont condition:: tensor(1.1746e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7857e-08, dtype=torch.float64)
secont condition:: tensor(2.7857e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4123e-08, dtype=torch.float64)
secont condition:: tensor(1.4123e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2901e-08, dtype=torch.float64)
secont condition:: tensor(2.2901e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0408e-08, dtype=torch.float64)
secont condition:: tensor(3.0408e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3808e-08, dtype=torch.float64)
secont condition:: tensor(1.3808e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9474e-09, dtype=torch.float64)
secont condition:: tensor(6.9474e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3296e-08, dtype=torch.float64)
secont condition:: tensor(1.3296e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7294e-09, dtype=torch.float64)
secont condition:: tensor(5.7294e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3842e-09, dtype=torch.float64)
secont condition:: tensor(1.3842e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7534e-09, dtype=torch.float64)
secont condition:: tensor(5.7534e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2551e-08, dtype=torch.float64)
secont condition:: tensor(1.2551e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6461e-09, dtype=torch.float64)
secont condition:: tensor(7.6461e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1950e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3153e-08, dtype=torch.float64)
secont condition:: tensor(1.3153e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.9096e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2764e-09, dtype=torch.float64)
secont condition:: tensor(4.2764e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2169e-09, dtype=torch.float64)
secont condition:: tensor(9.2169e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4608e-08, dtype=torch.float64)
secont condition:: tensor(3.4608e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5535e-08, dtype=torch.float64)
secont condition:: tensor(5.5535e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5759e-08, dtype=torch.float64)
secont condition:: tensor(7.5759e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2578e-07, dtype=torch.float64)
secont condition:: tensor(1.2578e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7176e-07, dtype=torch.float64)
secont condition:: tensor(2.7176e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5251e-07, dtype=torch.float64)
secont condition:: tensor(7.5251e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0097e-06, dtype=torch.float64)
secont condition:: tensor(2.0097e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7202e-06, dtype=torch.float64)
secont condition:: tensor(2.7202e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5045e-05, dtype=torch.float64)
secont condition:: tensor(1.5045e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2508e-05, dtype=torch.float64)
secont condition:: tensor(2.2508e-05, dtype=torch.float64)
curr_secont condition:: tensor(-4.2550e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3800e-05, dtype=torch.float64)
secont condition:: tensor(2.3800e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8763e-05, dtype=torch.float64)
secont condition:: tensor(1.8763e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0085e-05, dtype=torch.float64)
secont condition:: tensor(1.0085e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1612e-06, dtype=torch.float64)
secont condition:: tensor(5.1612e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4865e-06, dtype=torch.float64)
secont condition:: tensor(1.4865e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7109e-06, dtype=torch.float64)
secont condition:: tensor(2.7109e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7553e-06, dtype=torch.float64)
secont condition:: tensor(2.7553e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5911e-07, dtype=torch.float64)
secont condition:: tensor(8.5911e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2162e-06, dtype=torch.float64)
secont condition:: tensor(3.2162e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6448e-06, dtype=torch.float64)
secont condition:: tensor(1.6448e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2282e-07, dtype=torch.float64)
secont condition:: tensor(3.2282e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2834e-06, dtype=torch.float64)
secont condition:: tensor(2.2834e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5452e-07, dtype=torch.float64)
secont condition:: tensor(7.5452e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4948e-06, dtype=torch.float64)
secont condition:: tensor(1.4948e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6830e-06, dtype=torch.float64)
secont condition:: tensor(1.6830e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1080e-06, dtype=torch.float64)
secont condition:: tensor(1.1080e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0586e-06, dtype=torch.float64)
secont condition:: tensor(2.0586e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1232e-07, dtype=torch.float64)
secont condition:: tensor(3.1232e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5371e-08, dtype=torch.float64)
secont condition:: tensor(8.5371e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6793e-07, dtype=torch.float64)
secont condition:: tensor(2.6793e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5732e-06, dtype=torch.float64)
secont condition:: tensor(1.5732e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7993e-07, dtype=torch.float64)
secont condition:: tensor(6.7993e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3374e-06, dtype=torch.float64)
secont condition:: tensor(1.3374e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0201e-06, dtype=torch.float64)
secont condition:: tensor(1.0201e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9698e-07, dtype=torch.float64)
secont condition:: tensor(6.9698e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0933e-07, dtype=torch.float64)
secont condition:: tensor(7.0933e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1108e-06, dtype=torch.float64)
secont condition:: tensor(1.1108e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8573e-07, dtype=torch.float64)
secont condition:: tensor(2.8573e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0739e-07, dtype=torch.float64)
secont condition:: tensor(3.0739e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.4607e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9721e-06, dtype=torch.float64)
secont condition:: tensor(1.9721e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4946e-06, dtype=torch.float64)
secont condition:: tensor(2.4946e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1619e-06, dtype=torch.float64)
secont condition:: tensor(1.1619e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.0319e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5297e-07, dtype=torch.float64)
secont condition:: tensor(9.5297e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9271e-07, dtype=torch.float64)
secont condition:: tensor(3.9271e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0988e-07, dtype=torch.float64)
secont condition:: tensor(3.0988e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8611e-07, dtype=torch.float64)
secont condition:: tensor(8.8611e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4565e-07, dtype=torch.float64)
secont condition:: tensor(3.4565e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4239e-07, dtype=torch.float64)
secont condition:: tensor(6.4239e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5882e-07, dtype=torch.float64)
secont condition:: tensor(7.5882e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0410e-07, dtype=torch.float64)
secont condition:: tensor(7.0410e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7993e-07, dtype=torch.float64)
secont condition:: tensor(4.7993e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5883e-07, dtype=torch.float64)
secont condition:: tensor(4.5883e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4248e-07, dtype=torch.float64)
secont condition:: tensor(4.4248e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4009e-07, dtype=torch.float64)
secont condition:: tensor(4.4009e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8252e-06, dtype=torch.float64)
secont condition:: tensor(1.8252e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6189e-07, dtype=torch.float64)
secont condition:: tensor(2.6189e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9873e-07, dtype=torch.float64)
secont condition:: tensor(3.9873e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6700e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0602e-07, dtype=torch.float64)
secont condition:: tensor(7.0602e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.83394169807434
curr_diff: 0 tensor(2.5228e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0176e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.5404e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.9562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.3737e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.2221e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5007e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0033, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
random set 4
python3 generate_rand_ids 0.00005  MNIST
tensor([18499, 28903, 45639])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.229878
Test Avg. Loss: 0.000025, Accuracy: 0.934200
Train - Epoch 1, Batch: 0, Loss: 0.275434
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.165643
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.160282
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 4, Batch: 0, Loss: 0.157573
Test Avg. Loss: 0.000016, Accuracy: 0.950800
Train - Epoch 5, Batch: 0, Loss: 0.175455
Test Avg. Loss: 0.000058, Accuracy: 0.793600
Train - Epoch 6, Batch: 0, Loss: 0.603256
Test Avg. Loss: 0.000018, Accuracy: 0.953500
Train - Epoch 7, Batch: 0, Loss: 0.197533
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 8, Batch: 0, Loss: 0.169403
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 9, Batch: 0, Loss: 0.163487
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 10, Batch: 0, Loss: 0.160483
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 11, Batch: 0, Loss: 0.154040
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 12, Batch: 0, Loss: 0.154764
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.157438
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.156112
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 15, Batch: 0, Loss: 0.153298
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 16, Batch: 0, Loss: 0.152298
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.156530
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.153542
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.156006
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.150962
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 21, Batch: 0, Loss: 0.154831
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 22, Batch: 0, Loss: 0.152226
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.159793
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.155107
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.160810
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.151725
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.149036
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.157645
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.151051
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 171.73702669143677
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.7648377418518
time_baseline:: 116.83034825325012
curr_diff: 0 tensor(7.7400e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4190e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5765e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6043e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4375e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.5277e-09, dtype=torch.float64)
secont condition:: tensor(6.5277e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.2683e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0252e-06, dtype=torch.float64)
secont condition:: tensor(1.0252e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6564e-07, dtype=torch.float64)
secont condition:: tensor(1.6564e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0518e-08, dtype=torch.float64)
secont condition:: tensor(6.0518e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5897e-08, dtype=torch.float64)
secont condition:: tensor(4.5897e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9726e-09, dtype=torch.float64)
secont condition:: tensor(9.9726e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7082e-09, dtype=torch.float64)
secont condition:: tensor(6.7082e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0246e-09, dtype=torch.float64)
secont condition:: tensor(8.0246e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.6918e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4981e-08, dtype=torch.float64)
secont condition:: tensor(2.4981e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4329e-08, dtype=torch.float64)
secont condition:: tensor(1.4329e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6896e-08, dtype=torch.float64)
secont condition:: tensor(2.6896e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9286e-08, dtype=torch.float64)
secont condition:: tensor(1.9286e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5697e-09, dtype=torch.float64)
secont condition:: tensor(1.5697e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5353e-08, dtype=torch.float64)
secont condition:: tensor(2.5353e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1713e-08, dtype=torch.float64)
secont condition:: tensor(1.1713e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3120e-08, dtype=torch.float64)
secont condition:: tensor(6.3120e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4731e-08, dtype=torch.float64)
secont condition:: tensor(6.4731e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0858e-07, dtype=torch.float64)
secont condition:: tensor(1.0858e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0475e-07, dtype=torch.float64)
secont condition:: tensor(2.0475e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5646e-07, dtype=torch.float64)
secont condition:: tensor(3.5646e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1448e-06, dtype=torch.float64)
secont condition:: tensor(1.1448e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7260e-06, dtype=torch.float64)
secont condition:: tensor(1.7260e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5659e-06, dtype=torch.float64)
secont condition:: tensor(1.5659e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3192e-07, dtype=torch.float64)
secont condition:: tensor(6.3192e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4612e-07, dtype=torch.float64)
secont condition:: tensor(3.4612e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0757e-07, dtype=torch.float64)
secont condition:: tensor(1.0757e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6313e-07, dtype=torch.float64)
secont condition:: tensor(1.6313e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7209e-08, dtype=torch.float64)
secont condition:: tensor(4.7209e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6413e-08, dtype=torch.float64)
secont condition:: tensor(7.6413e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2981e-07, dtype=torch.float64)
secont condition:: tensor(1.2981e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3320e-08, dtype=torch.float64)
secont condition:: tensor(6.3320e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4927e-08, dtype=torch.float64)
secont condition:: tensor(8.4927e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7207e-08, dtype=torch.float64)
secont condition:: tensor(5.7207e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0607e-07, dtype=torch.float64)
secont condition:: tensor(1.0607e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8306e-08, dtype=torch.float64)
secont condition:: tensor(8.8306e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2678e-08, dtype=torch.float64)
secont condition:: tensor(9.2678e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8447e-08, dtype=torch.float64)
secont condition:: tensor(5.8447e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0237e-08, dtype=torch.float64)
secont condition:: tensor(7.0237e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7739e-08, dtype=torch.float64)
secont condition:: tensor(8.7739e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6377e-08, dtype=torch.float64)
secont condition:: tensor(2.6377e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2211e-08, dtype=torch.float64)
secont condition:: tensor(3.2211e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2721e-08, dtype=torch.float64)
secont condition:: tensor(5.2721e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0634e-07, dtype=torch.float64)
secont condition:: tensor(1.0634e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4220e-06, dtype=torch.float64)
secont condition:: tensor(1.4220e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1531e-08, dtype=torch.float64)
secont condition:: tensor(3.1531e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2899e-08, dtype=torch.float64)
secont condition:: tensor(1.2899e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0610e-07, dtype=torch.float64)
secont condition:: tensor(5.0610e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5865e-06, dtype=torch.float64)
secont condition:: tensor(6.5865e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6902e-08, dtype=torch.float64)
secont condition:: tensor(1.6902e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8944e-08, dtype=torch.float64)
secont condition:: tensor(4.8944e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7327e-08, dtype=torch.float64)
secont condition:: tensor(4.7327e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4360e-08, dtype=torch.float64)
secont condition:: tensor(3.4360e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7414e-08, dtype=torch.float64)
secont condition:: tensor(4.7414e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8416e-08, dtype=torch.float64)
secont condition:: tensor(2.8416e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4459e-08, dtype=torch.float64)
secont condition:: tensor(4.4459e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.7169e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0720e-08, dtype=torch.float64)
secont condition:: tensor(4.0720e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.8882e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7300e-08, dtype=torch.float64)
secont condition:: tensor(5.7300e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0657e-08, dtype=torch.float64)
secont condition:: tensor(3.0657e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0435e-08, dtype=torch.float64)
secont condition:: tensor(3.0435e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5774e-08, dtype=torch.float64)
secont condition:: tensor(7.5774e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8466e-08, dtype=torch.float64)
secont condition:: tensor(4.8466e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4964e-08, dtype=torch.float64)
secont condition:: tensor(1.4964e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8309e-08, dtype=torch.float64)
secont condition:: tensor(2.8309e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1730e-08, dtype=torch.float64)
secont condition:: tensor(3.1730e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4983e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1127e-08, dtype=torch.float64)
secont condition:: tensor(1.1127e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0898e-08, dtype=torch.float64)
secont condition:: tensor(7.0898e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3271e-08, dtype=torch.float64)
secont condition:: tensor(6.3271e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0852e-08, dtype=torch.float64)
secont condition:: tensor(2.0852e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8505e-08, dtype=torch.float64)
secont condition:: tensor(4.8505e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0688e-08, dtype=torch.float64)
secont condition:: tensor(2.0688e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5204e-09, dtype=torch.float64)
secont condition:: tensor(1.5204e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2235e-08, dtype=torch.float64)
secont condition:: tensor(3.2235e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4952e-08, dtype=torch.float64)
secont condition:: tensor(2.4952e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9727e-08, dtype=torch.float64)
secont condition:: tensor(1.9727e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.363109588623047
curr_diff: 0 tensor(1.2131e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5622e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6887e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5718e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0869e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.5062e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5459e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.9082e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8990e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.1679e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.7806e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1177e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4128e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7167e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7244e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242470
Test Avg. Loss: 0.000026, Accuracy: 0.937300
Train - Epoch 1, Batch: 0, Loss: 0.273604
Test Avg. Loss: 0.000016, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.170089
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 3, Batch: 0, Loss: 0.159754
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.157357
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 5, Batch: 0, Loss: 0.155786
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 6, Batch: 0, Loss: 0.158875
Test Avg. Loss: 0.000038, Accuracy: 0.867600
Train - Epoch 7, Batch: 0, Loss: 0.414512
Test Avg. Loss: 0.000025, Accuracy: 0.944400
Train - Epoch 8, Batch: 0, Loss: 0.268118
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 9, Batch: 0, Loss: 0.183253
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 10, Batch: 0, Loss: 0.179041
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 11, Batch: 0, Loss: 0.165292
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 12, Batch: 0, Loss: 0.173872
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 13, Batch: 0, Loss: 0.162114
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 14, Batch: 0, Loss: 0.164444
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 15, Batch: 0, Loss: 0.159702
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 16, Batch: 0, Loss: 0.155509
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 17, Batch: 0, Loss: 0.158694
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 18, Batch: 0, Loss: 0.156375
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 19, Batch: 0, Loss: 0.156514
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 20, Batch: 0, Loss: 0.164833
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 21, Batch: 0, Loss: 0.155326
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 22, Batch: 0, Loss: 0.162272
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 23, Batch: 0, Loss: 0.153607
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 24, Batch: 0, Loss: 0.152856
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 25, Batch: 0, Loss: 0.159019
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 26, Batch: 0, Loss: 0.154128
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 27, Batch: 0, Loss: 0.164288
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 28, Batch: 0, Loss: 0.158096
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 29, Batch: 0, Loss: 0.158812
Test Avg. Loss: 0.000014, Accuracy: 0.960300
training_time:: 170.54200148582458
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.28534841537476
time_baseline:: 116.35243201255798
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0118, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0245, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0105, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0304, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4925e-09, dtype=torch.float64)
secont condition:: tensor(3.4925e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5546e-07, dtype=torch.float64)
secont condition:: tensor(4.5546e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5819e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0297e-06, dtype=torch.float64)
secont condition:: tensor(1.0297e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2135e-07, dtype=torch.float64)
secont condition:: tensor(2.2135e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2507e-08, dtype=torch.float64)
secont condition:: tensor(5.2507e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0044e-08, dtype=torch.float64)
secont condition:: tensor(7.0044e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8354e-08, dtype=torch.float64)
secont condition:: tensor(5.8354e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8439e-08, dtype=torch.float64)
secont condition:: tensor(3.8439e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1678e-08, dtype=torch.float64)
secont condition:: tensor(5.1678e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0951e-08, dtype=torch.float64)
secont condition:: tensor(4.0951e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4955e-08, dtype=torch.float64)
secont condition:: tensor(3.4955e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3246e-08, dtype=torch.float64)
secont condition:: tensor(7.3246e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1030e-08, dtype=torch.float64)
secont condition:: tensor(3.1030e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8776e-08, dtype=torch.float64)
secont condition:: tensor(4.8776e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1109e-08, dtype=torch.float64)
secont condition:: tensor(4.1109e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6720e-08, dtype=torch.float64)
secont condition:: tensor(6.6720e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9444e-08, dtype=torch.float64)
secont condition:: tensor(8.9444e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6155e-07, dtype=torch.float64)
secont condition:: tensor(1.6155e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6809e-07, dtype=torch.float64)
secont condition:: tensor(2.6809e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7318e-06, dtype=torch.float64)
secont condition:: tensor(3.7318e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9318e-07, dtype=torch.float64)
secont condition:: tensor(7.9318e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6726e-06, dtype=torch.float64)
secont condition:: tensor(1.6726e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5041e-06, dtype=torch.float64)
secont condition:: tensor(3.5041e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1752e-06, dtype=torch.float64)
secont condition:: tensor(9.1752e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7841e-05, dtype=torch.float64)
secont condition:: tensor(2.7841e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0116, dtype=torch.float64)
secont condition:: tensor(0.0116, dtype=torch.float64)
curr_secont condition:: tensor(0.0037, dtype=torch.float64)
secont condition:: tensor(0.0037, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.6704e-05, dtype=torch.float64)
secont condition:: tensor(9.6704e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.0500e-05, dtype=torch.float64)
secont condition:: tensor(8.0500e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2588e-05, dtype=torch.float64)
secont condition:: tensor(8.2588e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.5014e-05, dtype=torch.float64)
secont condition:: tensor(8.5014e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.5392e-05, dtype=torch.float64)
secont condition:: tensor(8.5392e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.8865e-05, dtype=torch.float64)
secont condition:: tensor(7.8865e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7160e-05, dtype=torch.float64)
secont condition:: tensor(6.7160e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2514e-05, dtype=torch.float64)
secont condition:: tensor(7.2514e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0768e-05, dtype=torch.float64)
secont condition:: tensor(5.0768e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9614e-05, dtype=torch.float64)
secont condition:: tensor(6.9614e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1467e-05, dtype=torch.float64)
secont condition:: tensor(5.1467e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8480e-05, dtype=torch.float64)
secont condition:: tensor(4.8480e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8400e-05, dtype=torch.float64)
secont condition:: tensor(6.8400e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2937e-05, dtype=torch.float64)
secont condition:: tensor(4.2937e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9189e-05, dtype=torch.float64)
secont condition:: tensor(3.9189e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5773e-05, dtype=torch.float64)
secont condition:: tensor(3.5773e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1646e-05, dtype=torch.float64)
secont condition:: tensor(4.1646e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3660e-05, dtype=torch.float64)
secont condition:: tensor(3.3660e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1215e-05, dtype=torch.float64)
secont condition:: tensor(4.1215e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1416e-05, dtype=torch.float64)
secont condition:: tensor(4.1416e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8667e-05, dtype=torch.float64)
secont condition:: tensor(3.8667e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9177e-05, dtype=torch.float64)
secont condition:: tensor(2.9177e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6621e-05, dtype=torch.float64)
secont condition:: tensor(3.6621e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5799e-05, dtype=torch.float64)
secont condition:: tensor(3.5799e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1717e-05, dtype=torch.float64)
secont condition:: tensor(3.1717e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5791e-05, dtype=torch.float64)
secont condition:: tensor(3.5791e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9375e-05, dtype=torch.float64)
secont condition:: tensor(3.9375e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5535e-05, dtype=torch.float64)
secont condition:: tensor(3.5535e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6971e-05, dtype=torch.float64)
secont condition:: tensor(2.6971e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6284e-05, dtype=torch.float64)
secont condition:: tensor(3.6284e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4268e-05, dtype=torch.float64)
secont condition:: tensor(1.4268e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4600e-05, dtype=torch.float64)
secont condition:: tensor(2.4600e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9171e-05, dtype=torch.float64)
secont condition:: tensor(2.9171e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4147e-05, dtype=torch.float64)
secont condition:: tensor(2.4147e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3380e-05, dtype=torch.float64)
secont condition:: tensor(2.3380e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8860e-05, dtype=torch.float64)
secont condition:: tensor(1.8860e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1292e-05, dtype=torch.float64)
secont condition:: tensor(2.1292e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1522e-05, dtype=torch.float64)
secont condition:: tensor(2.1522e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8005e-05, dtype=torch.float64)
secont condition:: tensor(2.8005e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7857e-05, dtype=torch.float64)
secont condition:: tensor(1.7857e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2179e-05, dtype=torch.float64)
secont condition:: tensor(2.2179e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8051e-05, dtype=torch.float64)
secont condition:: tensor(2.8051e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.08381414413452
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4792e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3816e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5475e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0120, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0247, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0106, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0306, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236472
Test Avg. Loss: 0.000025, Accuracy: 0.934500
Train - Epoch 1, Batch: 0, Loss: 0.268496
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.165569
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.158619
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 4, Batch: 0, Loss: 0.165852
Test Avg. Loss: 0.000020, Accuracy: 0.936400
Train - Epoch 5, Batch: 0, Loss: 0.214574
Test Avg. Loss: 0.000036, Accuracy: 0.897900
Train - Epoch 6, Batch: 0, Loss: 0.384334
Test Avg. Loss: 0.000016, Accuracy: 0.956000
Train - Epoch 7, Batch: 0, Loss: 0.174174
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 8, Batch: 0, Loss: 0.159372
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 9, Batch: 0, Loss: 0.165408
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 10, Batch: 0, Loss: 0.160763
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 11, Batch: 0, Loss: 0.156415
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 12, Batch: 0, Loss: 0.151592
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 13, Batch: 0, Loss: 0.154151
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 14, Batch: 0, Loss: 0.155437
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.150256
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 16, Batch: 0, Loss: 0.154529
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 17, Batch: 0, Loss: 0.156323
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 18, Batch: 0, Loss: 0.154431
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 19, Batch: 0, Loss: 0.151362
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 20, Batch: 0, Loss: 0.151309
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 21, Batch: 0, Loss: 0.150057
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 22, Batch: 0, Loss: 0.154091
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.150989
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 24, Batch: 0, Loss: 0.155456
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.154632
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 26, Batch: 0, Loss: 0.149609
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.154493
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 28, Batch: 0, Loss: 0.150860
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.149485
Test Avg. Loss: 0.000014, Accuracy: 0.962200
training_time:: 171.46926736831665
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.73024129867554
time_baseline:: 117.79353475570679
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0375e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0608e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3915e-32, dtype=torch.float64)
secont condition:: tensor(9.3915e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5747e-07, dtype=torch.float64)
secont condition:: tensor(2.5747e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3004e-07, dtype=torch.float64)
secont condition:: tensor(2.3004e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9297e-07, dtype=torch.float64)
secont condition:: tensor(7.9297e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3315e-07, dtype=torch.float64)
secont condition:: tensor(4.3315e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0160e-08, dtype=torch.float64)
secont condition:: tensor(9.0160e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5079e-08, dtype=torch.float64)
secont condition:: tensor(7.5079e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4922e-08, dtype=torch.float64)
secont condition:: tensor(5.4922e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4667e-09, dtype=torch.float64)
secont condition:: tensor(8.4667e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2881e-09, dtype=torch.float64)
secont condition:: tensor(3.2881e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6506e-08, dtype=torch.float64)
secont condition:: tensor(6.6506e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4185e-08, dtype=torch.float64)
secont condition:: tensor(6.4185e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9996e-08, dtype=torch.float64)
secont condition:: tensor(1.9996e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.0265e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2201e-07, dtype=torch.float64)
secont condition:: tensor(1.2201e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3904e-07, dtype=torch.float64)
secont condition:: tensor(2.3904e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5403e-07, dtype=torch.float64)
secont condition:: tensor(3.5403e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6523e-07, dtype=torch.float64)
secont condition:: tensor(6.6523e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4837e-06, dtype=torch.float64)
secont condition:: tensor(1.4837e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2854e-06, dtype=torch.float64)
secont condition:: tensor(3.2854e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2944e-06, dtype=torch.float64)
secont condition:: tensor(8.2944e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.4101e-06, dtype=torch.float64)
secont condition:: tensor(9.4101e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5394e-06, dtype=torch.float64)
secont condition:: tensor(6.5394e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(2.1064e-05, dtype=torch.float64)
secont condition:: tensor(2.1064e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1116e-06, dtype=torch.float64)
secont condition:: tensor(2.1116e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0074e-07, dtype=torch.float64)
secont condition:: tensor(6.0074e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1317e-07, dtype=torch.float64)
secont condition:: tensor(5.1317e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6775e-06, dtype=torch.float64)
secont condition:: tensor(1.6775e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2096e-07, dtype=torch.float64)
secont condition:: tensor(3.2096e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6473e-07, dtype=torch.float64)
secont condition:: tensor(1.6473e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3914e-07, dtype=torch.float64)
secont condition:: tensor(3.3914e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3929e-07, dtype=torch.float64)
secont condition:: tensor(4.3929e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6219e-06, dtype=torch.float64)
secont condition:: tensor(3.6219e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6854e-07, dtype=torch.float64)
secont condition:: tensor(3.6854e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3624e-08, dtype=torch.float64)
secont condition:: tensor(6.3624e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9240e-07, dtype=torch.float64)
secont condition:: tensor(1.9240e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8484e-07, dtype=torch.float64)
secont condition:: tensor(1.8484e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2374e-07, dtype=torch.float64)
secont condition:: tensor(6.2374e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6086e-06, dtype=torch.float64)
secont condition:: tensor(1.6086e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3850e-08, dtype=torch.float64)
secont condition:: tensor(3.3850e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7658e-07, dtype=torch.float64)
secont condition:: tensor(2.7658e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7499e-07, dtype=torch.float64)
secont condition:: tensor(3.7499e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6157e-07, dtype=torch.float64)
secont condition:: tensor(1.6157e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1505e-07, dtype=torch.float64)
secont condition:: tensor(1.1505e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8124e-07, dtype=torch.float64)
secont condition:: tensor(5.8124e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8176e-08, dtype=torch.float64)
secont condition:: tensor(9.8176e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3061e-06, dtype=torch.float64)
secont condition:: tensor(1.3061e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2574e-07, dtype=torch.float64)
secont condition:: tensor(1.2574e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4791e-07, dtype=torch.float64)
secont condition:: tensor(2.4791e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0958e-07, dtype=torch.float64)
secont condition:: tensor(1.0958e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9659e-08, dtype=torch.float64)
secont condition:: tensor(9.9659e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7818e-07, dtype=torch.float64)
secont condition:: tensor(2.7818e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6034e-07, dtype=torch.float64)
secont condition:: tensor(5.6034e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1032e-07, dtype=torch.float64)
secont condition:: tensor(1.1032e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1746e-06, dtype=torch.float64)
secont condition:: tensor(1.1746e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3707e-07, dtype=torch.float64)
secont condition:: tensor(2.3707e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0609e-07, dtype=torch.float64)
secont condition:: tensor(1.0609e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3870e-07, dtype=torch.float64)
secont condition:: tensor(1.3870e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2132e-08, dtype=torch.float64)
secont condition:: tensor(6.2132e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7223e-07, dtype=torch.float64)
secont condition:: tensor(1.7223e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9342e-08, dtype=torch.float64)
secont condition:: tensor(3.9342e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3180e-08, dtype=torch.float64)
secont condition:: tensor(1.3180e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2493e-08, dtype=torch.float64)
secont condition:: tensor(9.2493e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9164e-08, dtype=torch.float64)
secont condition:: tensor(9.9164e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8959e-07, dtype=torch.float64)
secont condition:: tensor(7.8959e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9844e-08, dtype=torch.float64)
secont condition:: tensor(9.9844e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5195e-07, dtype=torch.float64)
secont condition:: tensor(1.5195e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1824e-08, dtype=torch.float64)
secont condition:: tensor(7.1824e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2238e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5055e-08, dtype=torch.float64)
secont condition:: tensor(5.5055e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3770e-08, dtype=torch.float64)
secont condition:: tensor(4.3770e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0431e-07, dtype=torch.float64)
secont condition:: tensor(1.0431e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5178e-08, dtype=torch.float64)
secont condition:: tensor(4.5178e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1152e-07, dtype=torch.float64)
secont condition:: tensor(1.1152e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6353e-07, dtype=torch.float64)
secont condition:: tensor(1.6353e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8922e-08, dtype=torch.float64)
secont condition:: tensor(4.8922e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7376e-08, dtype=torch.float64)
secont condition:: tensor(6.7376e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.666134119033813
curr_diff: 0 tensor(8.0015e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6288e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3827e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.8693e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4832e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0116e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7078e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1858e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1502e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242560
Test Avg. Loss: 0.000025, Accuracy: 0.938200
Train - Epoch 1, Batch: 0, Loss: 0.268457
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.170142
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.161843
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 4, Batch: 0, Loss: 0.159924
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 5, Batch: 0, Loss: 0.159332
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 6, Batch: 0, Loss: 0.160578
Test Avg. Loss: 0.000070, Accuracy: 0.751800
Train - Epoch 7, Batch: 0, Loss: 0.741467
Test Avg. Loss: 0.000019, Accuracy: 0.953100
Train - Epoch 8, Batch: 0, Loss: 0.212978
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 9, Batch: 0, Loss: 0.167391
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 10, Batch: 0, Loss: 0.165275
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 11, Batch: 0, Loss: 0.161246
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 12, Batch: 0, Loss: 0.155621
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 13, Batch: 0, Loss: 0.157357
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 14, Batch: 0, Loss: 0.153062
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 15, Batch: 0, Loss: 0.151876
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 16, Batch: 0, Loss: 0.154519
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 17, Batch: 0, Loss: 0.155941
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.153917
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.156131
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.152890
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.155540
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.155861
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.150842
Test Avg. Loss: 0.000014, Accuracy: 0.962500
Train - Epoch 24, Batch: 0, Loss: 0.150826
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.150132
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.148965
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.157123
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.154786
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.149293
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 171.35384225845337
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.6321394443512
time_baseline:: 115.7015290260315
curr_diff: 0 tensor(6.6841e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6642e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5471e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3466e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.8236e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4704e-09, dtype=torch.float64)
secont condition:: tensor(1.4704e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6891e-09, dtype=torch.float64)
secont condition:: tensor(6.6891e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4232e-09, dtype=torch.float64)
secont condition:: tensor(7.4232e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0599e-08, dtype=torch.float64)
secont condition:: tensor(3.0599e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2144e-08, dtype=torch.float64)
secont condition:: tensor(1.2144e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.1135e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3206e-08, dtype=torch.float64)
secont condition:: tensor(2.3206e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2158e-08, dtype=torch.float64)
secont condition:: tensor(1.2158e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0722e-08, dtype=torch.float64)
secont condition:: tensor(1.0722e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3268e-09, dtype=torch.float64)
secont condition:: tensor(7.3268e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3506e-09, dtype=torch.float64)
secont condition:: tensor(2.3506e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0650e-08, dtype=torch.float64)
secont condition:: tensor(1.0650e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7321e-10, dtype=torch.float64)
secont condition:: tensor(2.7321e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3763e-09, dtype=torch.float64)
secont condition:: tensor(7.3763e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4839e-09, dtype=torch.float64)
secont condition:: tensor(2.4839e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.9135e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6639e-08, dtype=torch.float64)
secont condition:: tensor(1.6639e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8053e-08, dtype=torch.float64)
secont condition:: tensor(1.8053e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0514e-08, dtype=torch.float64)
secont condition:: tensor(4.0514e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8603e-08, dtype=torch.float64)
secont condition:: tensor(1.8603e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6772e-08, dtype=torch.float64)
secont condition:: tensor(1.6772e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2459e-08, dtype=torch.float64)
secont condition:: tensor(4.2459e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4292e-08, dtype=torch.float64)
secont condition:: tensor(4.4292e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7782e-08, dtype=torch.float64)
secont condition:: tensor(6.7782e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7841e-07, dtype=torch.float64)
secont condition:: tensor(1.7841e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9098e-07, dtype=torch.float64)
secont condition:: tensor(4.9098e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2515e-06, dtype=torch.float64)
secont condition:: tensor(1.2515e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9662e-07, dtype=torch.float64)
secont condition:: tensor(9.9662e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8767e-05, dtype=torch.float64)
secont condition:: tensor(1.8767e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.3833e-06, dtype=torch.float64)
secont condition:: tensor(9.3833e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5709e-06, dtype=torch.float64)
secont condition:: tensor(6.5709e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7831e-06, dtype=torch.float64)
secont condition:: tensor(1.7831e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5392e-07, dtype=torch.float64)
secont condition:: tensor(6.5392e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4567e-07, dtype=torch.float64)
secont condition:: tensor(3.4567e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6736e-07, dtype=torch.float64)
secont condition:: tensor(3.6736e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3270e-06, dtype=torch.float64)
secont condition:: tensor(1.3270e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6306e-08, dtype=torch.float64)
secont condition:: tensor(5.6306e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9732e-07, dtype=torch.float64)
secont condition:: tensor(1.9732e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6632e-07, dtype=torch.float64)
secont condition:: tensor(2.6632e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3920e-07, dtype=torch.float64)
secont condition:: tensor(5.3920e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3431e-07, dtype=torch.float64)
secont condition:: tensor(1.3431e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0247e-07, dtype=torch.float64)
secont condition:: tensor(1.0247e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9068e-07, dtype=torch.float64)
secont condition:: tensor(1.9068e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6799e-08, dtype=torch.float64)
secont condition:: tensor(5.6799e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1599e-06, dtype=torch.float64)
secont condition:: tensor(1.1599e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2544e-07, dtype=torch.float64)
secont condition:: tensor(1.2544e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0267e-07, dtype=torch.float64)
secont condition:: tensor(1.0267e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4221e-07, dtype=torch.float64)
secont condition:: tensor(1.4221e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8585e-07, dtype=torch.float64)
secont condition:: tensor(1.8585e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0591e-08, dtype=torch.float64)
secont condition:: tensor(6.0591e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1748e-08, dtype=torch.float64)
secont condition:: tensor(7.1748e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1586e-07, dtype=torch.float64)
secont condition:: tensor(1.1586e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2690e-07, dtype=torch.float64)
secont condition:: tensor(1.2690e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1751e-08, dtype=torch.float64)
secont condition:: tensor(6.1751e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7812e-07, dtype=torch.float64)
secont condition:: tensor(1.7812e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0508e-07, dtype=torch.float64)
secont condition:: tensor(1.0508e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6690e-08, dtype=torch.float64)
secont condition:: tensor(6.6690e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9555e-08, dtype=torch.float64)
secont condition:: tensor(8.9555e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0607e-07, dtype=torch.float64)
secont condition:: tensor(1.0607e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2523e-07, dtype=torch.float64)
secont condition:: tensor(1.2523e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3277e-07, dtype=torch.float64)
secont condition:: tensor(1.3277e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0912e-08, dtype=torch.float64)
secont condition:: tensor(8.0912e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6840e-07, dtype=torch.float64)
secont condition:: tensor(1.6840e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7463e-08, dtype=torch.float64)
secont condition:: tensor(7.7463e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1694e-08, dtype=torch.float64)
secont condition:: tensor(6.1694e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0910e-07, dtype=torch.float64)
secont condition:: tensor(1.0910e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9122e-08, dtype=torch.float64)
secont condition:: tensor(9.9122e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8034e-08, dtype=torch.float64)
secont condition:: tensor(7.8034e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0536e-07, dtype=torch.float64)
secont condition:: tensor(1.0536e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0924e-08, dtype=torch.float64)
secont condition:: tensor(9.0924e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5613e-08, dtype=torch.float64)
secont condition:: tensor(5.5613e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7197e-08, dtype=torch.float64)
secont condition:: tensor(3.7197e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6017e-08, dtype=torch.float64)
secont condition:: tensor(1.6017e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7261e-08, dtype=torch.float64)
secont condition:: tensor(1.7261e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9802e-08, dtype=torch.float64)
secont condition:: tensor(5.9802e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0383e-08, dtype=torch.float64)
secont condition:: tensor(7.0383e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5014e-08, dtype=torch.float64)
secont condition:: tensor(2.5014e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9215e-08, dtype=torch.float64)
secont condition:: tensor(4.9215e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4940e-08, dtype=torch.float64)
secont condition:: tensor(4.4940e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.10145592689514
curr_diff: 0 tensor(1.9411e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.4057e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.1354e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.1358e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.7488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1811e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1401e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.3233e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7019e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6597e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3898e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8363e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.8940e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243680
Test Avg. Loss: 0.000024, Accuracy: 0.939000
Train - Epoch 1, Batch: 0, Loss: 0.262348
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.171198
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.162426
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.161016
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 5, Batch: 0, Loss: 0.152950
Test Avg. Loss: 0.000018, Accuracy: 0.948000
Train - Epoch 6, Batch: 0, Loss: 0.196649
Test Avg. Loss: 0.000091, Accuracy: 0.677400
Train - Epoch 7, Batch: 0, Loss: 0.923977
Test Avg. Loss: 0.000022, Accuracy: 0.943700
Train - Epoch 8, Batch: 0, Loss: 0.240499
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 9, Batch: 0, Loss: 0.183508
Test Avg. Loss: 0.000016, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.175056
Test Avg. Loss: 0.000015, Accuracy: 0.954600
Train - Epoch 11, Batch: 0, Loss: 0.169963
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 12, Batch: 0, Loss: 0.168427
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 13, Batch: 0, Loss: 0.163361
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 14, Batch: 0, Loss: 0.162145
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 15, Batch: 0, Loss: 0.161441
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 16, Batch: 0, Loss: 0.158253
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 17, Batch: 0, Loss: 0.159223
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 18, Batch: 0, Loss: 0.150512
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 19, Batch: 0, Loss: 0.156926
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 20, Batch: 0, Loss: 0.149661
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 21, Batch: 0, Loss: 0.158509
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.156261
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 23, Batch: 0, Loss: 0.154920
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.152073
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 25, Batch: 0, Loss: 0.159436
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 26, Batch: 0, Loss: 0.157785
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 27, Batch: 0, Loss: 0.156370
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.155121
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 29, Batch: 0, Loss: 0.154687
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 170.28352165222168
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.86282348632812
time_baseline:: 118.9333119392395
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0069, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0090, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9461e-09, dtype=torch.float64)
secont condition:: tensor(3.9461e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3272e-08, dtype=torch.float64)
secont condition:: tensor(1.3272e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.2371e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8112e-08, dtype=torch.float64)
secont condition:: tensor(5.8112e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5013e-08, dtype=torch.float64)
secont condition:: tensor(3.5013e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9688e-08, dtype=torch.float64)
secont condition:: tensor(5.9688e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7238e-09, dtype=torch.float64)
secont condition:: tensor(2.7238e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9488e-08, dtype=torch.float64)
secont condition:: tensor(1.9488e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9932e-08, dtype=torch.float64)
secont condition:: tensor(4.9932e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4071e-09, dtype=torch.float64)
secont condition:: tensor(4.4071e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1381e-09, dtype=torch.float64)
secont condition:: tensor(2.1381e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2559e-08, dtype=torch.float64)
secont condition:: tensor(1.2559e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7595e-09, dtype=torch.float64)
secont condition:: tensor(4.7595e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5536e-08, dtype=torch.float64)
secont condition:: tensor(2.5536e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2357e-08, dtype=torch.float64)
secont condition:: tensor(1.2357e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1297e-09, dtype=torch.float64)
secont condition:: tensor(1.1297e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3215e-09, dtype=torch.float64)
secont condition:: tensor(8.3215e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6377e-09, dtype=torch.float64)
secont condition:: tensor(8.6377e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1064e-08, dtype=torch.float64)
secont condition:: tensor(1.1064e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7368e-08, dtype=torch.float64)
secont condition:: tensor(4.7368e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5891e-08, dtype=torch.float64)
secont condition:: tensor(9.5891e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3085e-07, dtype=torch.float64)
secont condition:: tensor(2.3085e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7306e-07, dtype=torch.float64)
secont condition:: tensor(8.7306e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0311e-06, dtype=torch.float64)
secont condition:: tensor(4.0311e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3835e-07, dtype=torch.float64)
secont condition:: tensor(6.3835e-07, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0828e-05, dtype=torch.float64)
secont condition:: tensor(1.0828e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.6010e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0969e-05, dtype=torch.float64)
secont condition:: tensor(3.0969e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.9409e-05, dtype=torch.float64)
secont condition:: tensor(8.9409e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2097e-05, dtype=torch.float64)
secont condition:: tensor(6.2097e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8773e-05, dtype=torch.float64)
secont condition:: tensor(3.8773e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.2363e-05, dtype=torch.float64)
secont condition:: tensor(8.2363e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4422e-05, dtype=torch.float64)
secont condition:: tensor(1.4422e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2639e-05, dtype=torch.float64)
secont condition:: tensor(1.2639e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8624e-05, dtype=torch.float64)
secont condition:: tensor(1.8624e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.6965e-06, dtype=torch.float64)
secont condition:: tensor(6.6965e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4059e-05, dtype=torch.float64)
secont condition:: tensor(1.4059e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1255e-05, dtype=torch.float64)
secont condition:: tensor(1.1255e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3852e-05, dtype=torch.float64)
secont condition:: tensor(1.3852e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1741e-05, dtype=torch.float64)
secont condition:: tensor(1.1741e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4178e-05, dtype=torch.float64)
secont condition:: tensor(1.4178e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7843e-06, dtype=torch.float64)
secont condition:: tensor(7.7843e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7688e-06, dtype=torch.float64)
secont condition:: tensor(7.7688e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9210e-06, dtype=torch.float64)
secont condition:: tensor(8.9210e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5226e-05, dtype=torch.float64)
secont condition:: tensor(1.5226e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8431e-06, dtype=torch.float64)
secont condition:: tensor(4.8431e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4366e-05, dtype=torch.float64)
secont condition:: tensor(1.4366e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.7045e-06, dtype=torch.float64)
secont condition:: tensor(7.7045e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9819e-06, dtype=torch.float64)
secont condition:: tensor(3.9819e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4282e-06, dtype=torch.float64)
secont condition:: tensor(8.4282e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.3987e-06, dtype=torch.float64)
secont condition:: tensor(8.3987e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7328e-06, dtype=torch.float64)
secont condition:: tensor(9.7328e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9345e-06, dtype=torch.float64)
secont condition:: tensor(3.9345e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4163e-06, dtype=torch.float64)
secont condition:: tensor(7.4163e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6340e-06, dtype=torch.float64)
secont condition:: tensor(4.6340e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0031e-05, dtype=torch.float64)
secont condition:: tensor(1.0031e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.8293e-06, dtype=torch.float64)
secont condition:: tensor(7.8293e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3477e-06, dtype=torch.float64)
secont condition:: tensor(6.3477e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4729e-06, dtype=torch.float64)
secont condition:: tensor(4.4729e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1921e-06, dtype=torch.float64)
secont condition:: tensor(7.1921e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2004e-06, dtype=torch.float64)
secont condition:: tensor(7.2004e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3089e-06, dtype=torch.float64)
secont condition:: tensor(4.3089e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8904e-06, dtype=torch.float64)
secont condition:: tensor(2.8904e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9955e-06, dtype=torch.float64)
secont condition:: tensor(1.9955e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0254e-06, dtype=torch.float64)
secont condition:: tensor(5.0254e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8797e-06, dtype=torch.float64)
secont condition:: tensor(2.8797e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4358e-06, dtype=torch.float64)
secont condition:: tensor(4.4358e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1157e-06, dtype=torch.float64)
secont condition:: tensor(3.1157e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7005e-06, dtype=torch.float64)
secont condition:: tensor(5.7005e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2523e-06, dtype=torch.float64)
secont condition:: tensor(2.2523e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8669e-06, dtype=torch.float64)
secont condition:: tensor(1.8669e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0357e-06, dtype=torch.float64)
secont condition:: tensor(3.0357e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1503e-06, dtype=torch.float64)
secont condition:: tensor(1.1503e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6536e-06, dtype=torch.float64)
secont condition:: tensor(1.6536e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7141e-06, dtype=torch.float64)
secont condition:: tensor(1.7141e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4323e-06, dtype=torch.float64)
secont condition:: tensor(3.4323e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1878e-06, dtype=torch.float64)
secont condition:: tensor(2.1878e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.861900329589844
curr_diff: 0 tensor(5.3457e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8915e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3472e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5907e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7852e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0069, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0091, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
random set 5
python3 generate_rand_ids 0.00005  MNIST
tensor([26925, 51734, 56567])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243354
Test Avg. Loss: 0.000023, Accuracy: 0.943900
Train - Epoch 1, Batch: 0, Loss: 0.248107
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.170165
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 3, Batch: 0, Loss: 0.161971
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.156349
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 5, Batch: 0, Loss: 0.170489
Test Avg. Loss: 0.000057, Accuracy: 0.798800
Train - Epoch 6, Batch: 0, Loss: 0.588849
Test Avg. Loss: 0.000021, Accuracy: 0.948100
Train - Epoch 7, Batch: 0, Loss: 0.234591
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 8, Batch: 0, Loss: 0.172512
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 9, Batch: 0, Loss: 0.167003
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 10, Batch: 0, Loss: 0.154968
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 11, Batch: 0, Loss: 0.164835
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.155391
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.151280
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 14, Batch: 0, Loss: 0.162600
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 15, Batch: 0, Loss: 0.155477
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 16, Batch: 0, Loss: 0.152686
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 17, Batch: 0, Loss: 0.152869
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.153384
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 19, Batch: 0, Loss: 0.157204
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 20, Batch: 0, Loss: 0.158595
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 21, Batch: 0, Loss: 0.153170
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 22, Batch: 0, Loss: 0.150757
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.155202
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 24, Batch: 0, Loss: 0.147480
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.149641
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.154267
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.149063
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 28, Batch: 0, Loss: 0.157324
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.150966
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 170.4526355266571
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.1196084022522
time_baseline:: 116.18325662612915
curr_diff: 0 tensor(2.8179e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5632e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0008e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2854e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5283e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.8340e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6843e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6980e-08, dtype=torch.float64)
secont condition:: tensor(1.6980e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7702e-08, dtype=torch.float64)
secont condition:: tensor(7.7702e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1229e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5872e-07, dtype=torch.float64)
secont condition:: tensor(1.5872e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7867e-08, dtype=torch.float64)
secont condition:: tensor(3.7867e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0875e-09, dtype=torch.float64)
secont condition:: tensor(8.0875e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2079e-08, dtype=torch.float64)
secont condition:: tensor(1.2079e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4957e-09, dtype=torch.float64)
secont condition:: tensor(4.4957e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3444e-08, dtype=torch.float64)
secont condition:: tensor(1.3444e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3688e-09, dtype=torch.float64)
secont condition:: tensor(5.3688e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2276e-08, dtype=torch.float64)
secont condition:: tensor(1.2276e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4336e-08, dtype=torch.float64)
secont condition:: tensor(1.4336e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9054e-09, dtype=torch.float64)
secont condition:: tensor(5.9054e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3898e-09, dtype=torch.float64)
secont condition:: tensor(6.3898e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.6860e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2958e-08, dtype=torch.float64)
secont condition:: tensor(3.2958e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3673e-08, dtype=torch.float64)
secont condition:: tensor(2.3673e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.6659e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.4795e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8511e-08, dtype=torch.float64)
secont condition:: tensor(2.8511e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0546e-08, dtype=torch.float64)
secont condition:: tensor(4.0546e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1887e-08, dtype=torch.float64)
secont condition:: tensor(8.1887e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7192e-08, dtype=torch.float64)
secont condition:: tensor(6.7192e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5667e-08, dtype=torch.float64)
secont condition:: tensor(4.5667e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0691e-07, dtype=torch.float64)
secont condition:: tensor(5.0691e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4172e-07, dtype=torch.float64)
secont condition:: tensor(2.4172e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6185e-07, dtype=torch.float64)
secont condition:: tensor(1.6185e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6300e-08, dtype=torch.float64)
secont condition:: tensor(3.6300e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5263e-08, dtype=torch.float64)
secont condition:: tensor(3.5263e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1756e-08, dtype=torch.float64)
secont condition:: tensor(2.1756e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4241e-08, dtype=torch.float64)
secont condition:: tensor(1.4241e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9876e-08, dtype=torch.float64)
secont condition:: tensor(7.9876e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4768e-08, dtype=torch.float64)
secont condition:: tensor(3.4768e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8371e-08, dtype=torch.float64)
secont condition:: tensor(1.8371e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5184e-08, dtype=torch.float64)
secont condition:: tensor(3.5184e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0933e-09, dtype=torch.float64)
secont condition:: tensor(7.0933e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.9598e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9625e-08, dtype=torch.float64)
secont condition:: tensor(1.9625e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6604e-08, dtype=torch.float64)
secont condition:: tensor(2.6604e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1972e-09, dtype=torch.float64)
secont condition:: tensor(6.1972e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2273e-09, dtype=torch.float64)
secont condition:: tensor(4.2273e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3376e-08, dtype=torch.float64)
secont condition:: tensor(2.3376e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2808e-08, dtype=torch.float64)
secont condition:: tensor(2.2808e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9141e-09, dtype=torch.float64)
secont condition:: tensor(5.9141e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8636e-08, dtype=torch.float64)
secont condition:: tensor(1.8636e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9919e-08, dtype=torch.float64)
secont condition:: tensor(1.9919e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7808e-09, dtype=torch.float64)
secont condition:: tensor(2.7808e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1526e-08, dtype=torch.float64)
secont condition:: tensor(1.1526e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7750e-08, dtype=torch.float64)
secont condition:: tensor(7.7750e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4722e-06, dtype=torch.float64)
secont condition:: tensor(1.4722e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4819e-08, dtype=torch.float64)
secont condition:: tensor(1.4819e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3892e-09, dtype=torch.float64)
secont condition:: tensor(8.3892e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2817e-08, dtype=torch.float64)
secont condition:: tensor(1.2817e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.7726e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1378e-08, dtype=torch.float64)
secont condition:: tensor(3.1378e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9451e-09, dtype=torch.float64)
secont condition:: tensor(7.9451e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0101e-08, dtype=torch.float64)
secont condition:: tensor(2.0101e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5884e-08, dtype=torch.float64)
secont condition:: tensor(1.5884e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1103e-08, dtype=torch.float64)
secont condition:: tensor(1.1103e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3130e-08, dtype=torch.float64)
secont condition:: tensor(1.3130e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2934e-08, dtype=torch.float64)
secont condition:: tensor(1.2934e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6769e-09, dtype=torch.float64)
secont condition:: tensor(6.6769e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2775e-08, dtype=torch.float64)
secont condition:: tensor(1.2775e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7726e-08, dtype=torch.float64)
secont condition:: tensor(1.7726e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6951e-09, dtype=torch.float64)
secont condition:: tensor(8.6951e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.9821e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0203e-08, dtype=torch.float64)
secont condition:: tensor(2.0203e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2152e-08, dtype=torch.float64)
secont condition:: tensor(1.2152e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2468e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3083e-08, dtype=torch.float64)
secont condition:: tensor(1.3083e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4472e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0806e-08, dtype=torch.float64)
secont condition:: tensor(1.0806e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1947e-08, dtype=torch.float64)
secont condition:: tensor(1.1947e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8533e-08, dtype=torch.float64)
secont condition:: tensor(1.8533e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2934e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7215e-09, dtype=torch.float64)
secont condition:: tensor(5.7215e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7056e-09, dtype=torch.float64)
secont condition:: tensor(5.7056e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2932e-09, dtype=torch.float64)
secont condition:: tensor(8.2932e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8569e-09, dtype=torch.float64)
secont condition:: tensor(6.8569e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0494e-10, dtype=torch.float64)
secont condition:: tensor(4.0494e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7484e-09, dtype=torch.float64)
secont condition:: tensor(4.7484e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.64793300628662
curr_diff: 0 tensor(8.8444e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2034e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4609e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8453e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.2802e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2707e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1357e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.7073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7713e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3937e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3010e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5916e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243764
Test Avg. Loss: 0.000024, Accuracy: 0.941100
Train - Epoch 1, Batch: 0, Loss: 0.255770
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 2, Batch: 0, Loss: 0.165762
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.165135
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.149682
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 5, Batch: 0, Loss: 0.158324
Test Avg. Loss: 0.000027, Accuracy: 0.908900
Train - Epoch 6, Batch: 0, Loss: 0.293493
Test Avg. Loss: 0.000035, Accuracy: 0.916500
Train - Epoch 7, Batch: 0, Loss: 0.366240
Test Avg. Loss: 0.000016, Accuracy: 0.955200
Train - Epoch 8, Batch: 0, Loss: 0.177107
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 9, Batch: 0, Loss: 0.158152
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 10, Batch: 0, Loss: 0.158763
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 11, Batch: 0, Loss: 0.159533
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.157979
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.159883
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 14, Batch: 0, Loss: 0.158801
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 15, Batch: 0, Loss: 0.156254
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 16, Batch: 0, Loss: 0.154703
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 17, Batch: 0, Loss: 0.154354
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.153565
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.158450
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.152918
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.154593
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 22, Batch: 0, Loss: 0.152603
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 23, Batch: 0, Loss: 0.147987
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.155620
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.149177
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.155547
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 27, Batch: 0, Loss: 0.154566
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.153570
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.156575
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 171.56041073799133
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.44255685806274
time_baseline:: 116.51023292541504
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.4928e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9182e-09, dtype=torch.float64)
secont condition:: tensor(5.9182e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3420e-08, dtype=torch.float64)
secont condition:: tensor(6.3420e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.2710e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6904e-07, dtype=torch.float64)
secont condition:: tensor(1.6904e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1243e-08, dtype=torch.float64)
secont condition:: tensor(3.1243e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0161e-08, dtype=torch.float64)
secont condition:: tensor(2.0161e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9373e-08, dtype=torch.float64)
secont condition:: tensor(1.9373e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8916e-09, dtype=torch.float64)
secont condition:: tensor(7.8916e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8883e-09, dtype=torch.float64)
secont condition:: tensor(5.8883e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.1960e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3442e-08, dtype=torch.float64)
secont condition:: tensor(1.3442e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9997e-08, dtype=torch.float64)
secont condition:: tensor(1.9997e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9870e-09, dtype=torch.float64)
secont condition:: tensor(9.9870e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3021e-08, dtype=torch.float64)
secont condition:: tensor(3.3021e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4662e-08, dtype=torch.float64)
secont condition:: tensor(1.4662e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3182e-08, dtype=torch.float64)
secont condition:: tensor(1.3182e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4279e-09, dtype=torch.float64)
secont condition:: tensor(4.4279e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1548e-08, dtype=torch.float64)
secont condition:: tensor(3.1548e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8755e-08, dtype=torch.float64)
secont condition:: tensor(1.8755e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2637e-08, dtype=torch.float64)
secont condition:: tensor(6.2637e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7448e-06, dtype=torch.float64)
secont condition:: tensor(3.7448e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8325e-07, dtype=torch.float64)
secont condition:: tensor(1.8325e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2299e-06, dtype=torch.float64)
secont condition:: tensor(1.2299e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5970e-06, dtype=torch.float64)
secont condition:: tensor(1.5970e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6748e-06, dtype=torch.float64)
secont condition:: tensor(1.6748e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3859e-05, dtype=torch.float64)
secont condition:: tensor(2.3859e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6370e-05, dtype=torch.float64)
secont condition:: tensor(2.6370e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9743e-05, dtype=torch.float64)
secont condition:: tensor(2.9743e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0051e-05, dtype=torch.float64)
secont condition:: tensor(1.0051e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1825e-06, dtype=torch.float64)
secont condition:: tensor(2.1825e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6287e-06, dtype=torch.float64)
secont condition:: tensor(1.6287e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8541e-07, dtype=torch.float64)
secont condition:: tensor(7.8541e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9402e-07, dtype=torch.float64)
secont condition:: tensor(5.9402e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2670e-07, dtype=torch.float64)
secont condition:: tensor(5.2670e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2161e-07, dtype=torch.float64)
secont condition:: tensor(3.2161e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7231e-07, dtype=torch.float64)
secont condition:: tensor(5.7231e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9205e-07, dtype=torch.float64)
secont condition:: tensor(3.9205e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2648e-07, dtype=torch.float64)
secont condition:: tensor(4.2648e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0414e-07, dtype=torch.float64)
secont condition:: tensor(5.0414e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1499e-06, dtype=torch.float64)
secont condition:: tensor(3.1499e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9645e-07, dtype=torch.float64)
secont condition:: tensor(5.9645e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3798e-06, dtype=torch.float64)
secont condition:: tensor(1.3798e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8659e-07, dtype=torch.float64)
secont condition:: tensor(7.8659e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3338e-06, dtype=torch.float64)
secont condition:: tensor(7.3338e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1125e-06, dtype=torch.float64)
secont condition:: tensor(1.1125e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4449e-07, dtype=torch.float64)
secont condition:: tensor(3.4449e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8548e-07, dtype=torch.float64)
secont condition:: tensor(9.8548e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6555e-07, dtype=torch.float64)
secont condition:: tensor(2.6555e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1222e-07, dtype=torch.float64)
secont condition:: tensor(8.1222e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4681e-06, dtype=torch.float64)
secont condition:: tensor(7.4681e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2135e-07, dtype=torch.float64)
secont condition:: tensor(3.2135e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6307e-07, dtype=torch.float64)
secont condition:: tensor(2.6307e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2807e-07, dtype=torch.float64)
secont condition:: tensor(1.2807e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2652e-07, dtype=torch.float64)
secont condition:: tensor(3.2652e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5482e-07, dtype=torch.float64)
secont condition:: tensor(5.5482e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2709e-06, dtype=torch.float64)
secont condition:: tensor(1.2709e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2921e-06, dtype=torch.float64)
secont condition:: tensor(2.2921e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2764e-07, dtype=torch.float64)
secont condition:: tensor(2.2764e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7841e-07, dtype=torch.float64)
secont condition:: tensor(2.7841e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2725e-07, dtype=torch.float64)
secont condition:: tensor(6.2725e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6795e-07, dtype=torch.float64)
secont condition:: tensor(1.6795e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0479e-07, dtype=torch.float64)
secont condition:: tensor(2.0479e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9449e-07, dtype=torch.float64)
secont condition:: tensor(2.9449e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3178e-07, dtype=torch.float64)
secont condition:: tensor(3.3178e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9732e-07, dtype=torch.float64)
secont condition:: tensor(1.9732e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1955e-07, dtype=torch.float64)
secont condition:: tensor(1.1955e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9570e-08, dtype=torch.float64)
secont condition:: tensor(7.9570e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8604e-07, dtype=torch.float64)
secont condition:: tensor(1.8604e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8978e-09, dtype=torch.float64)
secont condition:: tensor(6.8978e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7541e-06, dtype=torch.float64)
secont condition:: tensor(4.7541e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2197e-07, dtype=torch.float64)
secont condition:: tensor(1.2197e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1861e-07, dtype=torch.float64)
secont condition:: tensor(2.1861e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9810e-07, dtype=torch.float64)
secont condition:: tensor(1.9810e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7754e-08, dtype=torch.float64)
secont condition:: tensor(3.7754e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.9841e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1189e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6124e-08, dtype=torch.float64)
secont condition:: tensor(7.6124e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0249e-07, dtype=torch.float64)
secont condition:: tensor(1.0249e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2606e-07, dtype=torch.float64)
secont condition:: tensor(1.2606e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.85401487350464
curr_diff: 0 tensor(1.1115e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3085e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.9597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.0841e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4267e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.6567e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4424e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3993e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.5076e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.231203
Test Avg. Loss: 0.000024, Accuracy: 0.938700
Train - Epoch 1, Batch: 0, Loss: 0.261489
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.167026
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.161999
Test Avg. Loss: 0.000014, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.160660
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 5, Batch: 0, Loss: 0.156350
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 6, Batch: 0, Loss: 0.161917
Test Avg. Loss: 0.000065, Accuracy: 0.768300
Train - Epoch 7, Batch: 0, Loss: 0.695792
Test Avg. Loss: 0.000050, Accuracy: 0.910500
Train - Epoch 8, Batch: 0, Loss: 0.509342
Test Avg. Loss: 0.000019, Accuracy: 0.948200
Train - Epoch 9, Batch: 0, Loss: 0.214455
Test Avg. Loss: 0.000018, Accuracy: 0.950600
Train - Epoch 10, Batch: 0, Loss: 0.194132
Test Avg. Loss: 0.000017, Accuracy: 0.951900
Train - Epoch 11, Batch: 0, Loss: 0.186842
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 12, Batch: 0, Loss: 0.177146
Test Avg. Loss: 0.000016, Accuracy: 0.955000
Train - Epoch 13, Batch: 0, Loss: 0.174084
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 14, Batch: 0, Loss: 0.169905
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 15, Batch: 0, Loss: 0.169188
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 16, Batch: 0, Loss: 0.166894
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 17, Batch: 0, Loss: 0.159756
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 18, Batch: 0, Loss: 0.153632
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 19, Batch: 0, Loss: 0.158080
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 20, Batch: 0, Loss: 0.160047
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 21, Batch: 0, Loss: 0.152429
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 22, Batch: 0, Loss: 0.160591
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 23, Batch: 0, Loss: 0.157615
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 24, Batch: 0, Loss: 0.163123
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 25, Batch: 0, Loss: 0.157474
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 26, Batch: 0, Loss: 0.155912
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 27, Batch: 0, Loss: 0.155120
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 28, Batch: 0, Loss: 0.157396
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 29, Batch: 0, Loss: 0.155869
Test Avg. Loss: 0.000014, Accuracy: 0.959900
training_time:: 170.27391028404236
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.1444821357727
time_baseline:: 118.21021389961243
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0075, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0187, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4378e-08, dtype=torch.float64)
secont condition:: tensor(1.4378e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5937e-08, dtype=torch.float64)
secont condition:: tensor(2.5937e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.6456e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3810e-07, dtype=torch.float64)
secont condition:: tensor(1.3810e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5188e-09, dtype=torch.float64)
secont condition:: tensor(4.5188e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4034e-08, dtype=torch.float64)
secont condition:: tensor(1.4034e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1833e-08, dtype=torch.float64)
secont condition:: tensor(2.1833e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.4756e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5468e-08, dtype=torch.float64)
secont condition:: tensor(1.5468e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3030e-08, dtype=torch.float64)
secont condition:: tensor(2.3030e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0737e-09, dtype=torch.float64)
secont condition:: tensor(2.0737e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7476e-08, dtype=torch.float64)
secont condition:: tensor(2.7476e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1381e-08, dtype=torch.float64)
secont condition:: tensor(2.1381e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1009e-09, dtype=torch.float64)
secont condition:: tensor(3.1009e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1842e-08, dtype=torch.float64)
secont condition:: tensor(1.1842e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.2937e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0415e-09, dtype=torch.float64)
secont condition:: tensor(1.0415e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3354e-08, dtype=torch.float64)
secont condition:: tensor(2.3354e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7679e-08, dtype=torch.float64)
secont condition:: tensor(2.7679e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2344e-08, dtype=torch.float64)
secont condition:: tensor(2.2344e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3870e-08, dtype=torch.float64)
secont condition:: tensor(4.3870e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0344e-07, dtype=torch.float64)
secont condition:: tensor(1.0344e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3933e-07, dtype=torch.float64)
secont condition:: tensor(2.3933e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5193e-07, dtype=torch.float64)
secont condition:: tensor(6.5193e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9920e-06, dtype=torch.float64)
secont condition:: tensor(1.9920e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7007e-06, dtype=torch.float64)
secont condition:: tensor(6.7007e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3675e-05, dtype=torch.float64)
secont condition:: tensor(3.3675e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5587e-05, dtype=torch.float64)
secont condition:: tensor(5.5587e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2769e-05, dtype=torch.float64)
secont condition:: tensor(3.2769e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5484e-05, dtype=torch.float64)
secont condition:: tensor(4.5484e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5240e-05, dtype=torch.float64)
secont condition:: tensor(1.5240e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6156e-05, dtype=torch.float64)
secont condition:: tensor(2.6156e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5885e-05, dtype=torch.float64)
secont condition:: tensor(2.5885e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5028e-05, dtype=torch.float64)
secont condition:: tensor(1.5028e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9769e-05, dtype=torch.float64)
secont condition:: tensor(1.9769e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7964e-05, dtype=torch.float64)
secont condition:: tensor(2.7964e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0636e-05, dtype=torch.float64)
secont condition:: tensor(1.0636e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8096e-06, dtype=torch.float64)
secont condition:: tensor(1.8096e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4495e-06, dtype=torch.float64)
secont condition:: tensor(5.4495e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8689e-05, dtype=torch.float64)
secont condition:: tensor(1.8689e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2469e-05, dtype=torch.float64)
secont condition:: tensor(1.2469e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9828e-05, dtype=torch.float64)
secont condition:: tensor(1.9828e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5233e-05, dtype=torch.float64)
secont condition:: tensor(2.5233e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7256e-06, dtype=torch.float64)
secont condition:: tensor(9.7256e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3095e-05, dtype=torch.float64)
secont condition:: tensor(1.3095e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6544e-05, dtype=torch.float64)
secont condition:: tensor(1.6544e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9117e-05, dtype=torch.float64)
secont condition:: tensor(1.9117e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5093e-05, dtype=torch.float64)
secont condition:: tensor(1.5093e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1368e-05, dtype=torch.float64)
secont condition:: tensor(2.1368e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1040e-05, dtype=torch.float64)
secont condition:: tensor(3.1040e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2200e-05, dtype=torch.float64)
secont condition:: tensor(1.2200e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9123e-05, dtype=torch.float64)
secont condition:: tensor(2.9123e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6167e-05, dtype=torch.float64)
secont condition:: tensor(2.6167e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8291e-05, dtype=torch.float64)
secont condition:: tensor(2.8291e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6367e-05, dtype=torch.float64)
secont condition:: tensor(3.6367e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7961e-05, dtype=torch.float64)
secont condition:: tensor(1.7961e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5434e-05, dtype=torch.float64)
secont condition:: tensor(1.5434e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0758e-06, dtype=torch.float64)
secont condition:: tensor(7.0758e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9650e-05, dtype=torch.float64)
secont condition:: tensor(1.9650e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6306e-05, dtype=torch.float64)
secont condition:: tensor(1.6306e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3102e-05, dtype=torch.float64)
secont condition:: tensor(1.3102e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5904e-05, dtype=torch.float64)
secont condition:: tensor(1.5904e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5989e-05, dtype=torch.float64)
secont condition:: tensor(1.5989e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3839e-06, dtype=torch.float64)
secont condition:: tensor(6.3839e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9327e-05, dtype=torch.float64)
secont condition:: tensor(1.9327e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1287e-06, dtype=torch.float64)
secont condition:: tensor(8.1287e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6316e-05, dtype=torch.float64)
secont condition:: tensor(1.6316e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6749e-05, dtype=torch.float64)
secont condition:: tensor(1.6749e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3217e-05, dtype=torch.float64)
secont condition:: tensor(1.3217e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4487e-05, dtype=torch.float64)
secont condition:: tensor(1.4487e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6838e-06, dtype=torch.float64)
secont condition:: tensor(5.6838e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.902721405029297
curr_diff: 0 tensor(4.3894e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9872e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.1100e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0876e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0078, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0189, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.229953
Test Avg. Loss: 0.000026, Accuracy: 0.928900
Train - Epoch 1, Batch: 0, Loss: 0.276232
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.165717
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 3, Batch: 0, Loss: 0.158502
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.160603
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.158240
Test Avg. Loss: 0.000017, Accuracy: 0.947400
Train - Epoch 6, Batch: 0, Loss: 0.192577
Test Avg. Loss: 0.000054, Accuracy: 0.856400
Train - Epoch 7, Batch: 0, Loss: 0.563271
Test Avg. Loss: 0.000017, Accuracy: 0.955800
Train - Epoch 8, Batch: 0, Loss: 0.183380
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 9, Batch: 0, Loss: 0.163585
Test Avg. Loss: 0.000015, Accuracy: 0.959100
Train - Epoch 10, Batch: 0, Loss: 0.160949
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 11, Batch: 0, Loss: 0.153592
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 12, Batch: 0, Loss: 0.149661
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 13, Batch: 0, Loss: 0.153421
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 14, Batch: 0, Loss: 0.151061
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 15, Batch: 0, Loss: 0.158071
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 16, Batch: 0, Loss: 0.152300
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 17, Batch: 0, Loss: 0.154975
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.155037
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.161285
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.154092
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 21, Batch: 0, Loss: 0.152640
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 22, Batch: 0, Loss: 0.150186
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.157821
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 24, Batch: 0, Loss: 0.153536
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.148223
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 26, Batch: 0, Loss: 0.146100
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 27, Batch: 0, Loss: 0.149187
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 28, Batch: 0, Loss: 0.153743
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 29, Batch: 0, Loss: 0.150325
Test Avg. Loss: 0.000014, Accuracy: 0.962400
training_time:: 172.17406272888184
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.80269122123718
time_baseline:: 115.86604499816895
curr_diff: 0 tensor(5.4989e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6250e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9200e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3207e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.0581e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.6089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3260e-32, dtype=torch.float64)
secont condition:: tensor(3.3260e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9174e-08, dtype=torch.float64)
secont condition:: tensor(1.9174e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1823e-09, dtype=torch.float64)
secont condition:: tensor(2.1823e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6188e-07, dtype=torch.float64)
secont condition:: tensor(1.6188e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0953e-07, dtype=torch.float64)
secont condition:: tensor(1.0953e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4536e-08, dtype=torch.float64)
secont condition:: tensor(1.4536e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4331e-08, dtype=torch.float64)
secont condition:: tensor(1.4331e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4787e-09, dtype=torch.float64)
secont condition:: tensor(6.4787e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7398e-09, dtype=torch.float64)
secont condition:: tensor(5.7398e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2722e-09, dtype=torch.float64)
secont condition:: tensor(9.2722e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3406e-09, dtype=torch.float64)
secont condition:: tensor(4.3406e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5294e-08, dtype=torch.float64)
secont condition:: tensor(1.5294e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7062e-08, dtype=torch.float64)
secont condition:: tensor(1.7062e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6340e-08, dtype=torch.float64)
secont condition:: tensor(1.6340e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8055e-09, dtype=torch.float64)
secont condition:: tensor(4.8055e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3889e-08, dtype=torch.float64)
secont condition:: tensor(1.3889e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3012e-08, dtype=torch.float64)
secont condition:: tensor(1.3012e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1161e-09, dtype=torch.float64)
secont condition:: tensor(2.1161e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.7502e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3039e-08, dtype=torch.float64)
secont condition:: tensor(2.3039e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7450e-08, dtype=torch.float64)
secont condition:: tensor(3.7450e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4561e-08, dtype=torch.float64)
secont condition:: tensor(7.4561e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3215e-08, dtype=torch.float64)
secont condition:: tensor(9.3215e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4626e-07, dtype=torch.float64)
secont condition:: tensor(1.4626e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6427e-07, dtype=torch.float64)
secont condition:: tensor(4.6427e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7752e-06, dtype=torch.float64)
secont condition:: tensor(1.7752e-06, dtype=torch.float64)
curr_secont condition:: tensor(-4.2436e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2639e-05, dtype=torch.float64)
secont condition:: tensor(3.2639e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.6455e-06, dtype=torch.float64)
secont condition:: tensor(6.6455e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4904e-06, dtype=torch.float64)
secont condition:: tensor(1.4904e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0506e-07, dtype=torch.float64)
secont condition:: tensor(4.0506e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5025e-07, dtype=torch.float64)
secont condition:: tensor(8.5025e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7407e-07, dtype=torch.float64)
secont condition:: tensor(1.7407e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6202e-07, dtype=torch.float64)
secont condition:: tensor(2.6202e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2360e-07, dtype=torch.float64)
secont condition:: tensor(1.2360e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7825e-07, dtype=torch.float64)
secont condition:: tensor(2.7825e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2117e-07, dtype=torch.float64)
secont condition:: tensor(2.2117e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6990e-07, dtype=torch.float64)
secont condition:: tensor(2.6990e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3374e-07, dtype=torch.float64)
secont condition:: tensor(2.3374e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4018e-08, dtype=torch.float64)
secont condition:: tensor(3.4018e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1089e-07, dtype=torch.float64)
secont condition:: tensor(2.1089e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6388e-08, dtype=torch.float64)
secont condition:: tensor(1.6388e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7034e-07, dtype=torch.float64)
secont condition:: tensor(2.7034e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3356e-07, dtype=torch.float64)
secont condition:: tensor(2.3356e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8304e-07, dtype=torch.float64)
secont condition:: tensor(7.8304e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0025e-08, dtype=torch.float64)
secont condition:: tensor(7.0025e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.1112e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2562e-07, dtype=torch.float64)
secont condition:: tensor(2.2562e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2578e-08, dtype=torch.float64)
secont condition:: tensor(1.2578e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7714e-07, dtype=torch.float64)
secont condition:: tensor(1.7714e-07, dtype=torch.float64)
curr_secont condition:: tensor(-9.4209e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5732e-08, dtype=torch.float64)
secont condition:: tensor(4.5732e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5895e-07, dtype=torch.float64)
secont condition:: tensor(1.5895e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4412e-07, dtype=torch.float64)
secont condition:: tensor(2.4412e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7708e-08, dtype=torch.float64)
secont condition:: tensor(5.7708e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0867e-07, dtype=torch.float64)
secont condition:: tensor(3.0867e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5187e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.4414e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8088e-08, dtype=torch.float64)
secont condition:: tensor(4.8088e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0790e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4489e-08, dtype=torch.float64)
secont condition:: tensor(8.4489e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9182e-08, dtype=torch.float64)
secont condition:: tensor(9.9182e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0145e-08, dtype=torch.float64)
secont condition:: tensor(7.0145e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6807e-08, dtype=torch.float64)
secont condition:: tensor(9.6807e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4177e-07, dtype=torch.float64)
secont condition:: tensor(1.4177e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9965e-08, dtype=torch.float64)
secont condition:: tensor(4.9965e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5045e-08, dtype=torch.float64)
secont condition:: tensor(5.5045e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0280e-07, dtype=torch.float64)
secont condition:: tensor(1.0280e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4316e-07, dtype=torch.float64)
secont condition:: tensor(1.4316e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2402e-08, dtype=torch.float64)
secont condition:: tensor(9.2402e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7658e-07, dtype=torch.float64)
secont condition:: tensor(1.7658e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9006e-08, dtype=torch.float64)
secont condition:: tensor(5.9006e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5719e-08, dtype=torch.float64)
secont condition:: tensor(8.5719e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7011e-08, dtype=torch.float64)
secont condition:: tensor(1.7011e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0848e-07, dtype=torch.float64)
secont condition:: tensor(1.0848e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9586e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0393e-08, dtype=torch.float64)
secont condition:: tensor(7.0393e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6099e-08, dtype=torch.float64)
secont condition:: tensor(3.6099e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0145e-07, dtype=torch.float64)
secont condition:: tensor(1.0145e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4893e-08, dtype=torch.float64)
secont condition:: tensor(6.4893e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.436601638793945
curr_diff: 0 tensor(1.3233e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0522e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.5363e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9814e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5195e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.3712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8767e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2727e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6506e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.3512e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1345e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0539e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.4165e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.2715e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.0113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232430
Test Avg. Loss: 0.000022, Accuracy: 0.946400
Train - Epoch 1, Batch: 0, Loss: 0.240506
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 2, Batch: 0, Loss: 0.165642
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.163750
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 4, Batch: 0, Loss: 0.156873
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 5, Batch: 0, Loss: 0.155746
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 6, Batch: 0, Loss: 0.163227
Test Avg. Loss: 0.000092, Accuracy: 0.683800
Train - Epoch 7, Batch: 0, Loss: 0.955091
Test Avg. Loss: 0.000020, Accuracy: 0.948900
Train - Epoch 8, Batch: 0, Loss: 0.221659
Test Avg. Loss: 0.000016, Accuracy: 0.953900
Train - Epoch 9, Batch: 0, Loss: 0.174814
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 10, Batch: 0, Loss: 0.170224
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 11, Batch: 0, Loss: 0.166664
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 12, Batch: 0, Loss: 0.164423
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 13, Batch: 0, Loss: 0.166397
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 14, Batch: 0, Loss: 0.157515
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 15, Batch: 0, Loss: 0.164605
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 16, Batch: 0, Loss: 0.159661
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 17, Batch: 0, Loss: 0.155479
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 18, Batch: 0, Loss: 0.149055
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 19, Batch: 0, Loss: 0.153528
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 20, Batch: 0, Loss: 0.156971
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 21, Batch: 0, Loss: 0.157986
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 22, Batch: 0, Loss: 0.158675
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 23, Batch: 0, Loss: 0.158598
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.153224
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.155027
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 26, Batch: 0, Loss: 0.151223
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.153192
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.151440
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.152422
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 169.34042644500732
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.98460674285889
time_baseline:: 116.05026364326477
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0076, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0093, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 3
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9413e-09, dtype=torch.float64)
secont condition:: tensor(2.9413e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0477e-08, dtype=torch.float64)
secont condition:: tensor(3.0477e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4117e-09, dtype=torch.float64)
secont condition:: tensor(8.4117e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0689e-07, dtype=torch.float64)
secont condition:: tensor(1.0689e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3226e-08, dtype=torch.float64)
secont condition:: tensor(2.3226e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8735e-08, dtype=torch.float64)
secont condition:: tensor(1.8735e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2820e-09, dtype=torch.float64)
secont condition:: tensor(4.2820e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8977e-09, dtype=torch.float64)
secont condition:: tensor(9.8977e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4587e-09, dtype=torch.float64)
secont condition:: tensor(8.4587e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0978e-08, dtype=torch.float64)
secont condition:: tensor(1.0978e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1345e-09, dtype=torch.float64)
secont condition:: tensor(5.1345e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0704e-09, dtype=torch.float64)
secont condition:: tensor(3.0704e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9714e-09, dtype=torch.float64)
secont condition:: tensor(6.9714e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.6836e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0404e-08, dtype=torch.float64)
secont condition:: tensor(1.0404e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2376e-08, dtype=torch.float64)
secont condition:: tensor(1.2376e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8364e-09, dtype=torch.float64)
secont condition:: tensor(9.8364e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9656e-08, dtype=torch.float64)
secont condition:: tensor(1.9656e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6125e-08, dtype=torch.float64)
secont condition:: tensor(1.6125e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8023e-08, dtype=torch.float64)
secont condition:: tensor(2.8023e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1963e-08, dtype=torch.float64)
secont condition:: tensor(5.1963e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3963e-07, dtype=torch.float64)
secont condition:: tensor(1.3963e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1426e-07, dtype=torch.float64)
secont condition:: tensor(3.1426e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3759e-07, dtype=torch.float64)
secont condition:: tensor(8.3759e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0366e-06, dtype=torch.float64)
secont condition:: tensor(2.0366e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1790e-06, dtype=torch.float64)
secont condition:: tensor(7.1790e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9157e-05, dtype=torch.float64)
secont condition:: tensor(2.9157e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.7284e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0670e-05, dtype=torch.float64)
secont condition:: tensor(9.0670e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8369e-05, dtype=torch.float64)
secont condition:: tensor(1.8369e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.5270e-06, dtype=torch.float64)
secont condition:: tensor(9.5270e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0044e-06, dtype=torch.float64)
secont condition:: tensor(8.0044e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5910e-06, dtype=torch.float64)
secont condition:: tensor(4.5910e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0529e-06, dtype=torch.float64)
secont condition:: tensor(8.0529e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0646e-06, dtype=torch.float64)
secont condition:: tensor(9.0646e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6673e-06, dtype=torch.float64)
secont condition:: tensor(8.6673e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2651e-06, dtype=torch.float64)
secont condition:: tensor(5.2651e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3982e-06, dtype=torch.float64)
secont condition:: tensor(7.3982e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3128e-06, dtype=torch.float64)
secont condition:: tensor(4.3128e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9267e-06, dtype=torch.float64)
secont condition:: tensor(4.9267e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4183e-06, dtype=torch.float64)
secont condition:: tensor(4.4183e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6199e-06, dtype=torch.float64)
secont condition:: tensor(4.6199e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4976e-06, dtype=torch.float64)
secont condition:: tensor(4.4976e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9373e-06, dtype=torch.float64)
secont condition:: tensor(7.9373e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9354e-06, dtype=torch.float64)
secont condition:: tensor(3.9354e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4271e-06, dtype=torch.float64)
secont condition:: tensor(4.4271e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9477e-06, dtype=torch.float64)
secont condition:: tensor(2.9477e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5876e-06, dtype=torch.float64)
secont condition:: tensor(9.5876e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5777e-06, dtype=torch.float64)
secont condition:: tensor(4.5777e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2554e-06, dtype=torch.float64)
secont condition:: tensor(4.2554e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2298e-06, dtype=torch.float64)
secont condition:: tensor(2.2298e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4550e-06, dtype=torch.float64)
secont condition:: tensor(2.4550e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2670e-06, dtype=torch.float64)
secont condition:: tensor(3.2670e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6506e-06, dtype=torch.float64)
secont condition:: tensor(3.6506e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6135e-06, dtype=torch.float64)
secont condition:: tensor(4.6135e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4207e-06, dtype=torch.float64)
secont condition:: tensor(5.4207e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.9002e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1134e-06, dtype=torch.float64)
secont condition:: tensor(3.1134e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3470e-06, dtype=torch.float64)
secont condition:: tensor(1.3470e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0165e-06, dtype=torch.float64)
secont condition:: tensor(5.0165e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1331e-06, dtype=torch.float64)
secont condition:: tensor(4.1331e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3743e-07, dtype=torch.float64)
secont condition:: tensor(6.3743e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8461e-06, dtype=torch.float64)
secont condition:: tensor(2.8461e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6580e-06, dtype=torch.float64)
secont condition:: tensor(2.6580e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4397e-06, dtype=torch.float64)
secont condition:: tensor(3.4397e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7024e-06, dtype=torch.float64)
secont condition:: tensor(2.7024e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5775e-06, dtype=torch.float64)
secont condition:: tensor(2.5775e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6294e-06, dtype=torch.float64)
secont condition:: tensor(1.6294e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6406e-06, dtype=torch.float64)
secont condition:: tensor(1.6406e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3064e-06, dtype=torch.float64)
secont condition:: tensor(2.3064e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5781e-06, dtype=torch.float64)
secont condition:: tensor(1.5781e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3784e-06, dtype=torch.float64)
secont condition:: tensor(1.3784e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8567e-06, dtype=torch.float64)
secont condition:: tensor(1.8567e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2923e-06, dtype=torch.float64)
secont condition:: tensor(2.2923e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4457e-07, dtype=torch.float64)
secont condition:: tensor(4.4457e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7695e-06, dtype=torch.float64)
secont condition:: tensor(1.7695e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.94594383239746
curr_diff: 0 tensor(5.2320e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6250e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0238e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0109e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.3072e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0093, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
deletion rate:: 0.0001
random set 1
python3 generate_rand_ids 0.0001  MNIST
tensor([32001, 45640, 14825, 36843, 25838, 55775])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239710
Test Avg. Loss: 0.000023, Accuracy: 0.943500
Train - Epoch 1, Batch: 0, Loss: 0.250510
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.169394
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.156859
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 4, Batch: 0, Loss: 0.153846
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 5, Batch: 0, Loss: 0.161858
Test Avg. Loss: 0.000030, Accuracy: 0.897500
Train - Epoch 6, Batch: 0, Loss: 0.323838
Test Avg. Loss: 0.000027, Accuracy: 0.944200
Train - Epoch 7, Batch: 0, Loss: 0.282488
Test Avg. Loss: 0.000016, Accuracy: 0.954300
Train - Epoch 8, Batch: 0, Loss: 0.177876
Test Avg. Loss: 0.000015, Accuracy: 0.955000
Train - Epoch 9, Batch: 0, Loss: 0.165846
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 10, Batch: 0, Loss: 0.176892
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 11, Batch: 0, Loss: 0.157664
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.153542
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 13, Batch: 0, Loss: 0.158253
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 14, Batch: 0, Loss: 0.155855
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 15, Batch: 0, Loss: 0.158756
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.157265
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 17, Batch: 0, Loss: 0.157542
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 18, Batch: 0, Loss: 0.157267
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.157543
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.159290
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.154131
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.156790
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 23, Batch: 0, Loss: 0.149922
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.160342
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.153988
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.154079
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.149489
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.155666
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.149071
Test Avg. Loss: 0.000014, Accuracy: 0.961500
training_time:: 171.55821132659912
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.52203559875488
time_baseline:: 115.59029197692871
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4311e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0035, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7221e-06, dtype=torch.float64)
secont condition:: tensor(1.7221e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4931e-06, dtype=torch.float64)
secont condition:: tensor(2.4931e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9372e-07, dtype=torch.float64)
secont condition:: tensor(1.9372e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9260e-06, dtype=torch.float64)
secont condition:: tensor(7.9260e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8379e-07, dtype=torch.float64)
secont condition:: tensor(3.8379e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7470e-07, dtype=torch.float64)
secont condition:: tensor(5.7470e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7945e-07, dtype=torch.float64)
secont condition:: tensor(1.7945e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5758e-08, dtype=torch.float64)
secont condition:: tensor(5.5758e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1988e-07, dtype=torch.float64)
secont condition:: tensor(1.1988e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9845e-07, dtype=torch.float64)
secont condition:: tensor(1.9845e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1873e-07, dtype=torch.float64)
secont condition:: tensor(1.1873e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4336e-07, dtype=torch.float64)
secont condition:: tensor(1.4336e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7572e-08, dtype=torch.float64)
secont condition:: tensor(8.7572e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9785e-08, dtype=torch.float64)
secont condition:: tensor(4.9785e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4488e-07, dtype=torch.float64)
secont condition:: tensor(3.4488e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3881e-07, dtype=torch.float64)
secont condition:: tensor(3.3881e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7510e-07, dtype=torch.float64)
secont condition:: tensor(2.7510e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0510e-07, dtype=torch.float64)
secont condition:: tensor(3.0510e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0577e-06, dtype=torch.float64)
secont condition:: tensor(1.0577e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2370e-06, dtype=torch.float64)
secont condition:: tensor(1.2370e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4651e-06, dtype=torch.float64)
secont condition:: tensor(1.4651e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1588e-06, dtype=torch.float64)
secont condition:: tensor(2.1588e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9753e-06, dtype=torch.float64)
secont condition:: tensor(3.9753e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0778e-05, dtype=torch.float64)
secont condition:: tensor(1.0778e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8434e-05, dtype=torch.float64)
secont condition:: tensor(2.8434e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8172e-05, dtype=torch.float64)
secont condition:: tensor(7.8172e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1749e-05, dtype=torch.float64)
secont condition:: tensor(1.1749e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4822e-06, dtype=torch.float64)
secont condition:: tensor(3.4822e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0254e-06, dtype=torch.float64)
secont condition:: tensor(3.0254e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1501e-06, dtype=torch.float64)
secont condition:: tensor(2.1501e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5120e-06, dtype=torch.float64)
secont condition:: tensor(1.5120e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5970e-06, dtype=torch.float64)
secont condition:: tensor(1.5970e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4664e-06, dtype=torch.float64)
secont condition:: tensor(3.4664e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1139e-06, dtype=torch.float64)
secont condition:: tensor(2.1139e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6206e-07, dtype=torch.float64)
secont condition:: tensor(8.6206e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4461e-06, dtype=torch.float64)
secont condition:: tensor(1.4461e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1176e-06, dtype=torch.float64)
secont condition:: tensor(1.1176e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1242e-06, dtype=torch.float64)
secont condition:: tensor(2.1242e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0392e-06, dtype=torch.float64)
secont condition:: tensor(1.0392e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3549e-07, dtype=torch.float64)
secont condition:: tensor(5.3549e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1187e-07, dtype=torch.float64)
secont condition:: tensor(7.1187e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1073e-06, dtype=torch.float64)
secont condition:: tensor(1.1073e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.4326e-07, dtype=torch.float64)
secont condition:: tensor(9.4326e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0201e-07, dtype=torch.float64)
secont condition:: tensor(7.0201e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8236e-07, dtype=torch.float64)
secont condition:: tensor(4.8236e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6584e-06, dtype=torch.float64)
secont condition:: tensor(1.6584e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1251e-06, dtype=torch.float64)
secont condition:: tensor(2.1251e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7515e-06, dtype=torch.float64)
secont condition:: tensor(6.7515e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7222e-07, dtype=torch.float64)
secont condition:: tensor(9.7222e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9751e-07, dtype=torch.float64)
secont condition:: tensor(6.9751e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1507e-06, dtype=torch.float64)
secont condition:: tensor(1.1507e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5916e-07, dtype=torch.float64)
secont condition:: tensor(6.5916e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1068e-07, dtype=torch.float64)
secont condition:: tensor(3.1068e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4980e-06, dtype=torch.float64)
secont condition:: tensor(2.4980e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0714e-06, dtype=torch.float64)
secont condition:: tensor(1.0714e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9844e-07, dtype=torch.float64)
secont condition:: tensor(5.9844e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7001e-06, dtype=torch.float64)
secont condition:: tensor(5.7001e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0423e-06, dtype=torch.float64)
secont condition:: tensor(1.0423e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8405e-07, dtype=torch.float64)
secont condition:: tensor(9.8405e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4282e-06, dtype=torch.float64)
secont condition:: tensor(1.4282e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.3823e-07, dtype=torch.float64)
secont condition:: tensor(9.3823e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1636e-07, dtype=torch.float64)
secont condition:: tensor(9.1636e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7757e-07, dtype=torch.float64)
secont condition:: tensor(8.7757e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8717e-07, dtype=torch.float64)
secont condition:: tensor(5.8717e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4935e-07, dtype=torch.float64)
secont condition:: tensor(6.4935e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9170e-06, dtype=torch.float64)
secont condition:: tensor(1.9170e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5278e-07, dtype=torch.float64)
secont condition:: tensor(8.5278e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4260e-07, dtype=torch.float64)
secont condition:: tensor(5.4260e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6015e-07, dtype=torch.float64)
secont condition:: tensor(3.6015e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0084e-06, dtype=torch.float64)
secont condition:: tensor(1.0084e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9972e-07, dtype=torch.float64)
secont condition:: tensor(8.9972e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8590e-07, dtype=torch.float64)
secont condition:: tensor(5.8590e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6396e-07, dtype=torch.float64)
secont condition:: tensor(5.6396e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7456e-07, dtype=torch.float64)
secont condition:: tensor(6.7456e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7742e-07, dtype=torch.float64)
secont condition:: tensor(6.7742e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8069e-07, dtype=torch.float64)
secont condition:: tensor(4.8069e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5000e-07, dtype=torch.float64)
secont condition:: tensor(5.5000e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.09704065322876
curr_diff: 0 tensor(1.9703e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4205e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.4649e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.0312e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.1041e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2306e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5750e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0036, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235806
Test Avg. Loss: 0.000023, Accuracy: 0.942600
Train - Epoch 1, Batch: 0, Loss: 0.243965
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 2, Batch: 0, Loss: 0.166459
Test Avg. Loss: 0.000015, Accuracy: 0.959100
Train - Epoch 3, Batch: 0, Loss: 0.166000
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.161612
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 5, Batch: 0, Loss: 0.159237
Test Avg. Loss: 0.000023, Accuracy: 0.931500
Train - Epoch 6, Batch: 0, Loss: 0.247620
Test Avg. Loss: 0.000028, Accuracy: 0.940100
Train - Epoch 7, Batch: 0, Loss: 0.306424
Test Avg. Loss: 0.000016, Accuracy: 0.954800
Train - Epoch 8, Batch: 0, Loss: 0.177007
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 9, Batch: 0, Loss: 0.163900
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 10, Batch: 0, Loss: 0.161926
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 11, Batch: 0, Loss: 0.160348
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.152984
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.151485
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 14, Batch: 0, Loss: 0.155577
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.157376
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 16, Batch: 0, Loss: 0.156236
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.151660
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.151928
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.153715
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.152304
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 21, Batch: 0, Loss: 0.152004
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.154058
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.155001
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.157924
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.155623
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 26, Batch: 0, Loss: 0.155666
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.155518
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.150940
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.155451
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 170.82548642158508
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.14145040512085
time_baseline:: 117.21199584007263
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2594e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0026, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3602e-09, dtype=torch.float64)
secont condition:: tensor(4.3602e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5594e-07, dtype=torch.float64)
secont condition:: tensor(6.5594e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0569e-06, dtype=torch.float64)
secont condition:: tensor(1.0569e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0735e-07, dtype=torch.float64)
secont condition:: tensor(5.0735e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3498e-07, dtype=torch.float64)
secont condition:: tensor(6.3498e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1258e-07, dtype=torch.float64)
secont condition:: tensor(1.1258e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1021e-08, dtype=torch.float64)
secont condition:: tensor(4.1021e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1896e-08, dtype=torch.float64)
secont condition:: tensor(5.1896e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7075e-07, dtype=torch.float64)
secont condition:: tensor(2.7075e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2476e-07, dtype=torch.float64)
secont condition:: tensor(1.2476e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0765e-07, dtype=torch.float64)
secont condition:: tensor(1.0765e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2746e-07, dtype=torch.float64)
secont condition:: tensor(1.2746e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7919e-08, dtype=torch.float64)
secont condition:: tensor(9.7919e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0584e-07, dtype=torch.float64)
secont condition:: tensor(3.0584e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3073e-07, dtype=torch.float64)
secont condition:: tensor(2.3073e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4997e-07, dtype=torch.float64)
secont condition:: tensor(1.4997e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4837e-07, dtype=torch.float64)
secont condition:: tensor(1.4837e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0860e-07, dtype=torch.float64)
secont condition:: tensor(6.0860e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8427e-07, dtype=torch.float64)
secont condition:: tensor(6.8427e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1132e-06, dtype=torch.float64)
secont condition:: tensor(1.1132e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.3863e-07, dtype=torch.float64)
secont condition:: tensor(9.3863e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4570e-06, dtype=torch.float64)
secont condition:: tensor(1.4570e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1940e-06, dtype=torch.float64)
secont condition:: tensor(2.1940e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3018e-06, dtype=torch.float64)
secont condition:: tensor(3.3018e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1468e-06, dtype=torch.float64)
secont condition:: tensor(4.1468e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1812e-06, dtype=torch.float64)
secont condition:: tensor(5.1812e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8703e-05, dtype=torch.float64)
secont condition:: tensor(5.8703e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9385e-05, dtype=torch.float64)
secont condition:: tensor(1.9385e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6757e-06, dtype=torch.float64)
secont condition:: tensor(4.6757e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4901e-06, dtype=torch.float64)
secont condition:: tensor(1.4901e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2972e-06, dtype=torch.float64)
secont condition:: tensor(1.2972e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4123e-07, dtype=torch.float64)
secont condition:: tensor(7.4123e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7445e-06, dtype=torch.float64)
secont condition:: tensor(1.7445e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3670e-06, dtype=torch.float64)
secont condition:: tensor(1.3670e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5400e-06, dtype=torch.float64)
secont condition:: tensor(1.5400e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2775e-06, dtype=torch.float64)
secont condition:: tensor(1.2775e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1208e-07, dtype=torch.float64)
secont condition:: tensor(5.1208e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3858e-07, dtype=torch.float64)
secont condition:: tensor(9.3858e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1486e-06, dtype=torch.float64)
secont condition:: tensor(1.1486e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5601e-07, dtype=torch.float64)
secont condition:: tensor(7.5601e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0714e-06, dtype=torch.float64)
secont condition:: tensor(1.0714e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2681e-07, dtype=torch.float64)
secont condition:: tensor(8.2681e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8201e-07, dtype=torch.float64)
secont condition:: tensor(7.8201e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7810e-07, dtype=torch.float64)
secont condition:: tensor(8.7810e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7802e-07, dtype=torch.float64)
secont condition:: tensor(8.7802e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8583e-06, dtype=torch.float64)
secont condition:: tensor(1.8583e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5950e-06, dtype=torch.float64)
secont condition:: tensor(8.5950e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8770e-07, dtype=torch.float64)
secont condition:: tensor(6.8770e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8211e-07, dtype=torch.float64)
secont condition:: tensor(5.8211e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0259e-07, dtype=torch.float64)
secont condition:: tensor(6.0259e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0402e-07, dtype=torch.float64)
secont condition:: tensor(5.0402e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6174e-07, dtype=torch.float64)
secont condition:: tensor(2.6174e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9999e-07, dtype=torch.float64)
secont condition:: tensor(8.9999e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8982e-06, dtype=torch.float64)
secont condition:: tensor(1.8982e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0065e-07, dtype=torch.float64)
secont condition:: tensor(6.0065e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0726e-06, dtype=torch.float64)
secont condition:: tensor(2.0726e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9575e-07, dtype=torch.float64)
secont condition:: tensor(6.9575e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3005e-06, dtype=torch.float64)
secont condition:: tensor(6.3005e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1698e-07, dtype=torch.float64)
secont condition:: tensor(5.1698e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7006e-07, dtype=torch.float64)
secont condition:: tensor(3.7006e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9580e-07, dtype=torch.float64)
secont condition:: tensor(8.9580e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3685e-07, dtype=torch.float64)
secont condition:: tensor(7.3685e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6010e-07, dtype=torch.float64)
secont condition:: tensor(4.6010e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2979e-07, dtype=torch.float64)
secont condition:: tensor(8.2979e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6311e-07, dtype=torch.float64)
secont condition:: tensor(2.6311e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5808e-07, dtype=torch.float64)
secont condition:: tensor(9.5808e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7497e-06, dtype=torch.float64)
secont condition:: tensor(3.7497e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6609e-07, dtype=torch.float64)
secont condition:: tensor(4.6609e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4847e-07, dtype=torch.float64)
secont condition:: tensor(3.4847e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6389e-07, dtype=torch.float64)
secont condition:: tensor(4.6389e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8823e-07, dtype=torch.float64)
secont condition:: tensor(4.8823e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7893e-07, dtype=torch.float64)
secont condition:: tensor(5.7893e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0393e-07, dtype=torch.float64)
secont condition:: tensor(4.0393e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7372e-07, dtype=torch.float64)
secont condition:: tensor(4.7372e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2833e-07, dtype=torch.float64)
secont condition:: tensor(4.2833e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1170e-07, dtype=torch.float64)
secont condition:: tensor(3.1170e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5967e-07, dtype=torch.float64)
secont condition:: tensor(3.5967e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3375e-07, dtype=torch.float64)
secont condition:: tensor(7.3375e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.18754243850708
curr_diff: 0 tensor(1.8955e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6516e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9356e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2389e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3222e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9306e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235905
Test Avg. Loss: 0.000023, Accuracy: 0.941400
Train - Epoch 1, Batch: 0, Loss: 0.242131
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 2, Batch: 0, Loss: 0.163752
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.158270
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.152611
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.158964
Test Avg. Loss: 0.000017, Accuracy: 0.945500
Train - Epoch 6, Batch: 0, Loss: 0.188539
Test Avg. Loss: 0.000076, Accuracy: 0.844300
Train - Epoch 7, Batch: 0, Loss: 0.781677
Test Avg. Loss: 0.000018, Accuracy: 0.952900
Train - Epoch 8, Batch: 0, Loss: 0.194566
Test Avg. Loss: 0.000016, Accuracy: 0.955600
Train - Epoch 9, Batch: 0, Loss: 0.169182
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 10, Batch: 0, Loss: 0.167411
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 11, Batch: 0, Loss: 0.162299
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 12, Batch: 0, Loss: 0.163039
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 13, Batch: 0, Loss: 0.163029
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 14, Batch: 0, Loss: 0.161584
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.151540
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.159151
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.156788
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 18, Batch: 0, Loss: 0.152879
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.151578
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.155130
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.146615
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.150825
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 23, Batch: 0, Loss: 0.155509
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 24, Batch: 0, Loss: 0.154495
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.152912
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.154358
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.152362
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.151745
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 29, Batch: 0, Loss: 0.158702
Test Avg. Loss: 0.000014, Accuracy: 0.961500
training_time:: 176.15731954574585
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.19873929023743
time_baseline:: 116.26212906837463
curr_diff: 0 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0063, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0120, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0066, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0163, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6973e-09, dtype=torch.float64)
secont condition:: tensor(6.6973e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7812e-09, dtype=torch.float64)
secont condition:: tensor(6.7812e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1319e-07, dtype=torch.float64)
secont condition:: tensor(4.1319e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7076e-06, dtype=torch.float64)
secont condition:: tensor(1.7076e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1171e-07, dtype=torch.float64)
secont condition:: tensor(2.1171e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9640e-07, dtype=torch.float64)
secont condition:: tensor(2.9640e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7394e-07, dtype=torch.float64)
secont condition:: tensor(1.7394e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9389e-08, dtype=torch.float64)
secont condition:: tensor(5.9389e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7967e-09, dtype=torch.float64)
secont condition:: tensor(4.7967e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2356e-08, dtype=torch.float64)
secont condition:: tensor(6.2356e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0369e-08, dtype=torch.float64)
secont condition:: tensor(8.0369e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2709e-07, dtype=torch.float64)
secont condition:: tensor(6.2709e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0705e-07, dtype=torch.float64)
secont condition:: tensor(3.0705e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8689e-07, dtype=torch.float64)
secont condition:: tensor(1.8689e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0776e-07, dtype=torch.float64)
secont condition:: tensor(1.0776e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4788e-07, dtype=torch.float64)
secont condition:: tensor(1.4788e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3677e-07, dtype=torch.float64)
secont condition:: tensor(1.3677e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7529e-07, dtype=torch.float64)
secont condition:: tensor(2.7529e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6194e-07, dtype=torch.float64)
secont condition:: tensor(4.6194e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0156e-07, dtype=torch.float64)
secont condition:: tensor(6.0156e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8914e-07, dtype=torch.float64)
secont condition:: tensor(8.8914e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0247e-06, dtype=torch.float64)
secont condition:: tensor(2.0247e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3311e-06, dtype=torch.float64)
secont condition:: tensor(5.3311e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6940e-05, dtype=torch.float64)
secont condition:: tensor(1.6940e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8961e-05, dtype=torch.float64)
secont condition:: tensor(6.8961e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-9.0851e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9778e-05, dtype=torch.float64)
secont condition:: tensor(4.9778e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8368e-05, dtype=torch.float64)
secont condition:: tensor(4.8368e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6882e-05, dtype=torch.float64)
secont condition:: tensor(3.6882e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6454e-05, dtype=torch.float64)
secont condition:: tensor(1.6454e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8434e-05, dtype=torch.float64)
secont condition:: tensor(5.8434e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8824e-05, dtype=torch.float64)
secont condition:: tensor(3.8824e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7970e-05, dtype=torch.float64)
secont condition:: tensor(2.7970e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4998e-05, dtype=torch.float64)
secont condition:: tensor(3.4998e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3579e-05, dtype=torch.float64)
secont condition:: tensor(2.3579e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1166e-05, dtype=torch.float64)
secont condition:: tensor(3.1166e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7727e-05, dtype=torch.float64)
secont condition:: tensor(2.7727e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6583e-05, dtype=torch.float64)
secont condition:: tensor(1.6583e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8375e-05, dtype=torch.float64)
secont condition:: tensor(1.8375e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6763e-05, dtype=torch.float64)
secont condition:: tensor(2.6763e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6038e-05, dtype=torch.float64)
secont condition:: tensor(1.6038e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0648e-05, dtype=torch.float64)
secont condition:: tensor(2.0648e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9035e-05, dtype=torch.float64)
secont condition:: tensor(1.9035e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5368e-05, dtype=torch.float64)
secont condition:: tensor(1.5368e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3177e-05, dtype=torch.float64)
secont condition:: tensor(1.3177e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5536e-05, dtype=torch.float64)
secont condition:: tensor(2.5536e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2777e-05, dtype=torch.float64)
secont condition:: tensor(2.2777e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0320e-05, dtype=torch.float64)
secont condition:: tensor(1.0320e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3304e-05, dtype=torch.float64)
secont condition:: tensor(1.3304e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2073e-05, dtype=torch.float64)
secont condition:: tensor(2.2073e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3338e-05, dtype=torch.float64)
secont condition:: tensor(1.3338e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5771e-05, dtype=torch.float64)
secont condition:: tensor(2.5771e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0892e-05, dtype=torch.float64)
secont condition:: tensor(1.0892e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1834e-06, dtype=torch.float64)
secont condition:: tensor(7.1834e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2107e-05, dtype=torch.float64)
secont condition:: tensor(1.2107e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1920e-05, dtype=torch.float64)
secont condition:: tensor(2.1920e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9984e-05, dtype=torch.float64)
secont condition:: tensor(1.9984e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4675e-05, dtype=torch.float64)
secont condition:: tensor(2.4675e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5518e-05, dtype=torch.float64)
secont condition:: tensor(1.5518e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1417e-05, dtype=torch.float64)
secont condition:: tensor(1.1417e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4738e-06, dtype=torch.float64)
secont condition:: tensor(7.4738e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6328e-05, dtype=torch.float64)
secont condition:: tensor(1.6328e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1661e-05, dtype=torch.float64)
secont condition:: tensor(1.1661e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0314e-05, dtype=torch.float64)
secont condition:: tensor(1.0314e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7918e-06, dtype=torch.float64)
secont condition:: tensor(8.7918e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4155e-05, dtype=torch.float64)
secont condition:: tensor(1.4155e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6295e-06, dtype=torch.float64)
secont condition:: tensor(9.6295e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4572e-06, dtype=torch.float64)
secont condition:: tensor(7.4572e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0667e-05, dtype=torch.float64)
secont condition:: tensor(1.0667e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7718e-06, dtype=torch.float64)
secont condition:: tensor(3.7718e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2685e-06, dtype=torch.float64)
secont condition:: tensor(4.2685e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1464e-06, dtype=torch.float64)
secont condition:: tensor(6.1464e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0909e-06, dtype=torch.float64)
secont condition:: tensor(6.0909e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1343e-05, dtype=torch.float64)
secont condition:: tensor(1.1343e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.044924020767212
curr_diff: 0 tensor(3.4310e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8999e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2480e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9601e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6040e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0121, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0067, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0163, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235222
Test Avg. Loss: 0.000025, Accuracy: 0.936300
Train - Epoch 1, Batch: 0, Loss: 0.270930
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.166996
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.160581
Test Avg. Loss: 0.000014, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.160431
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 5, Batch: 0, Loss: 0.159189
Test Avg. Loss: 0.000034, Accuracy: 0.886300
Train - Epoch 6, Batch: 0, Loss: 0.360431
Test Avg. Loss: 0.000040, Accuracy: 0.920900
Train - Epoch 7, Batch: 0, Loss: 0.423179
Test Avg. Loss: 0.000018, Accuracy: 0.951800
Train - Epoch 8, Batch: 0, Loss: 0.196026
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 9, Batch: 0, Loss: 0.173088
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 10, Batch: 0, Loss: 0.169360
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 11, Batch: 0, Loss: 0.165585
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 12, Batch: 0, Loss: 0.166929
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 13, Batch: 0, Loss: 0.161242
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 14, Batch: 0, Loss: 0.163582
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 15, Batch: 0, Loss: 0.164220
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.156047
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 17, Batch: 0, Loss: 0.153772
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 18, Batch: 0, Loss: 0.155329
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 19, Batch: 0, Loss: 0.154919
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 20, Batch: 0, Loss: 0.157435
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 21, Batch: 0, Loss: 0.153235
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 22, Batch: 0, Loss: 0.154467
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 23, Batch: 0, Loss: 0.150969
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 24, Batch: 0, Loss: 0.155350
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 25, Batch: 0, Loss: 0.155497
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 26, Batch: 0, Loss: 0.157565
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 27, Batch: 0, Loss: 0.152269
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 28, Batch: 0, Loss: 0.154673
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 29, Batch: 0, Loss: 0.155650
Test Avg. Loss: 0.000014, Accuracy: 0.960600
training_time:: 169.87868738174438
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.43192529678345
time_baseline:: 115.49604487419128
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9193e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3125e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.5903e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6004e-06, dtype=torch.float64)
secont condition:: tensor(1.6004e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8593e-06, dtype=torch.float64)
secont condition:: tensor(1.8593e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8970e-08, dtype=torch.float64)
secont condition:: tensor(4.8970e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6540e-06, dtype=torch.float64)
secont condition:: tensor(4.6540e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7913e-07, dtype=torch.float64)
secont condition:: tensor(6.7913e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9839e-07, dtype=torch.float64)
secont condition:: tensor(1.9839e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9960e-07, dtype=torch.float64)
secont condition:: tensor(1.9960e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1259e-07, dtype=torch.float64)
secont condition:: tensor(1.1259e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1646e-07, dtype=torch.float64)
secont condition:: tensor(3.1646e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1555e-07, dtype=torch.float64)
secont condition:: tensor(2.1555e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3478e-07, dtype=torch.float64)
secont condition:: tensor(1.3478e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7371e-07, dtype=torch.float64)
secont condition:: tensor(1.7371e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8564e-07, dtype=torch.float64)
secont condition:: tensor(1.8564e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5055e-07, dtype=torch.float64)
secont condition:: tensor(1.5055e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0784e-07, dtype=torch.float64)
secont condition:: tensor(1.0784e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4642e-07, dtype=torch.float64)
secont condition:: tensor(3.4642e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3400e-07, dtype=torch.float64)
secont condition:: tensor(2.3400e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4583e-07, dtype=torch.float64)
secont condition:: tensor(2.4583e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7448e-07, dtype=torch.float64)
secont condition:: tensor(2.7448e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7497e-06, dtype=torch.float64)
secont condition:: tensor(1.7497e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7442e-07, dtype=torch.float64)
secont condition:: tensor(9.7442e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3733e-06, dtype=torch.float64)
secont condition:: tensor(1.3733e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1005e-06, dtype=torch.float64)
secont condition:: tensor(2.1005e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7206e-06, dtype=torch.float64)
secont condition:: tensor(3.7206e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2168e-06, dtype=torch.float64)
secont condition:: tensor(9.2168e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.4774e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3353e-05, dtype=torch.float64)
secont condition:: tensor(1.3353e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5637e-06, dtype=torch.float64)
secont condition:: tensor(7.5637e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1863e-06, dtype=torch.float64)
secont condition:: tensor(3.1863e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4180e-06, dtype=torch.float64)
secont condition:: tensor(1.4180e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3482e-06, dtype=torch.float64)
secont condition:: tensor(1.3482e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5638e-07, dtype=torch.float64)
secont condition:: tensor(3.5638e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3492e-07, dtype=torch.float64)
secont condition:: tensor(3.3492e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5249e-07, dtype=torch.float64)
secont condition:: tensor(5.5249e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8945e-07, dtype=torch.float64)
secont condition:: tensor(1.8945e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8455e-07, dtype=torch.float64)
secont condition:: tensor(2.8455e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2362e-07, dtype=torch.float64)
secont condition:: tensor(1.2362e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9632e-07, dtype=torch.float64)
secont condition:: tensor(2.9632e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2612e-07, dtype=torch.float64)
secont condition:: tensor(3.2612e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4911e-07, dtype=torch.float64)
secont condition:: tensor(5.4911e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3516e-07, dtype=torch.float64)
secont condition:: tensor(3.3516e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0534e-07, dtype=torch.float64)
secont condition:: tensor(6.0534e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6565e-07, dtype=torch.float64)
secont condition:: tensor(2.6565e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4350e-08, dtype=torch.float64)
secont condition:: tensor(6.4350e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9526e-07, dtype=torch.float64)
secont condition:: tensor(2.9526e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6926e-07, dtype=torch.float64)
secont condition:: tensor(4.6926e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.2777e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1004e-07, dtype=torch.float64)
secont condition:: tensor(1.1004e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3176e-07, dtype=torch.float64)
secont condition:: tensor(5.3176e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3968e-07, dtype=torch.float64)
secont condition:: tensor(5.3968e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9373e-07, dtype=torch.float64)
secont condition:: tensor(3.9373e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2530e-07, dtype=torch.float64)
secont condition:: tensor(5.2530e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2382e-07, dtype=torch.float64)
secont condition:: tensor(3.2382e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1844e-07, dtype=torch.float64)
secont condition:: tensor(3.1844e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0146e-07, dtype=torch.float64)
secont condition:: tensor(4.0146e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3457e-07, dtype=torch.float64)
secont condition:: tensor(4.3457e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9876e-07, dtype=torch.float64)
secont condition:: tensor(2.9876e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6186e-07, dtype=torch.float64)
secont condition:: tensor(3.6186e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4295e-07, dtype=torch.float64)
secont condition:: tensor(2.4295e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3482e-07, dtype=torch.float64)
secont condition:: tensor(2.3482e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1939e-07, dtype=torch.float64)
secont condition:: tensor(5.1939e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0883e-07, dtype=torch.float64)
secont condition:: tensor(2.0883e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4133e-07, dtype=torch.float64)
secont condition:: tensor(2.4133e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9978e-07, dtype=torch.float64)
secont condition:: tensor(3.9978e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6093e-07, dtype=torch.float64)
secont condition:: tensor(2.6093e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4029e-07, dtype=torch.float64)
secont condition:: tensor(3.4029e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6421e-07, dtype=torch.float64)
secont condition:: tensor(3.6421e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2981e-07, dtype=torch.float64)
secont condition:: tensor(2.2981e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4385e-07, dtype=torch.float64)
secont condition:: tensor(4.4385e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2620e-07, dtype=torch.float64)
secont condition:: tensor(2.2620e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9958e-07, dtype=torch.float64)
secont condition:: tensor(2.9958e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4965e-07, dtype=torch.float64)
secont condition:: tensor(2.4965e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0274e-07, dtype=torch.float64)
secont condition:: tensor(3.0274e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3788e-07, dtype=torch.float64)
secont condition:: tensor(2.3788e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2217e-07, dtype=torch.float64)
secont condition:: tensor(2.2217e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6786e-07, dtype=torch.float64)
secont condition:: tensor(2.6786e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7439e-07, dtype=torch.float64)
secont condition:: tensor(1.7439e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8978e-07, dtype=torch.float64)
secont condition:: tensor(2.8978e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.099446296691895
curr_diff: 0 tensor(1.9599e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9525e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3025e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.4772e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.6741e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7329e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6671e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4243e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6757e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235189
Test Avg. Loss: 0.000025, Accuracy: 0.934800
Train - Epoch 1, Batch: 0, Loss: 0.263951
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 2, Batch: 0, Loss: 0.162315
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 3, Batch: 0, Loss: 0.164455
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 4, Batch: 0, Loss: 0.157937
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 5, Batch: 0, Loss: 0.154611
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 6, Batch: 0, Loss: 0.166580
Test Avg. Loss: 0.000064, Accuracy: 0.770700
Train - Epoch 7, Batch: 0, Loss: 0.684604
Test Avg. Loss: 0.000063, Accuracy: 0.793000
Train - Epoch 8, Batch: 0, Loss: 0.655318
Test Avg. Loss: 0.000025, Accuracy: 0.936400
Train - Epoch 9, Batch: 0, Loss: 0.266699
Test Avg. Loss: 0.000020, Accuracy: 0.945800
Train - Epoch 10, Batch: 0, Loss: 0.216772
Test Avg. Loss: 0.000018, Accuracy: 0.947900
Train - Epoch 11, Batch: 0, Loss: 0.192585
Test Avg. Loss: 0.000017, Accuracy: 0.949900
Train - Epoch 12, Batch: 0, Loss: 0.194686
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 13, Batch: 0, Loss: 0.192632
Test Avg. Loss: 0.000016, Accuracy: 0.952900
Train - Epoch 14, Batch: 0, Loss: 0.178050
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 15, Batch: 0, Loss: 0.174961
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 16, Batch: 0, Loss: 0.165965
Test Avg. Loss: 0.000015, Accuracy: 0.954500
Train - Epoch 17, Batch: 0, Loss: 0.168992
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 18, Batch: 0, Loss: 0.167231
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 19, Batch: 0, Loss: 0.161924
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 20, Batch: 0, Loss: 0.166593
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 21, Batch: 0, Loss: 0.161592
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 22, Batch: 0, Loss: 0.168227
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 23, Batch: 0, Loss: 0.164380
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 24, Batch: 0, Loss: 0.167733
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 25, Batch: 0, Loss: 0.160207
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 26, Batch: 0, Loss: 0.165040
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 27, Batch: 0, Loss: 0.157920
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 28, Batch: 0, Loss: 0.158640
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 29, Batch: 0, Loss: 0.162465
Test Avg. Loss: 0.000014, Accuracy: 0.958700
training_time:: 170.46439027786255
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.92654466629028
time_baseline:: 115.99125742912292
curr_diff: 0 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0891, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1532, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0706, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0095, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0432, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0210, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1974, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9995, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.958700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0439e-08, dtype=torch.float64)
secont condition:: tensor(2.0439e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4141e-07, dtype=torch.float64)
secont condition:: tensor(1.4141e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7336e-07, dtype=torch.float64)
secont condition:: tensor(8.7336e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6308e-07, dtype=torch.float64)
secont condition:: tensor(7.6308e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3228e-07, dtype=torch.float64)
secont condition:: tensor(5.3228e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8529e-07, dtype=torch.float64)
secont condition:: tensor(1.8529e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4531e-08, dtype=torch.float64)
secont condition:: tensor(5.4531e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3631e-07, dtype=torch.float64)
secont condition:: tensor(4.3631e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6685e-07, dtype=torch.float64)
secont condition:: tensor(1.6685e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4285e-07, dtype=torch.float64)
secont condition:: tensor(5.4285e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0197e-07, dtype=torch.float64)
secont condition:: tensor(2.0197e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-07, dtype=torch.float64)
secont condition:: tensor(1.8077e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1773e-07, dtype=torch.float64)
secont condition:: tensor(2.1773e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1586e-07, dtype=torch.float64)
secont condition:: tensor(1.1586e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5479e-08, dtype=torch.float64)
secont condition:: tensor(8.5479e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2851e-07, dtype=torch.float64)
secont condition:: tensor(1.2851e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1852e-07, dtype=torch.float64)
secont condition:: tensor(3.1852e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1441e-07, dtype=torch.float64)
secont condition:: tensor(3.1441e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8882e-07, dtype=torch.float64)
secont condition:: tensor(2.8882e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8559e-07, dtype=torch.float64)
secont condition:: tensor(3.8559e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6063e-07, dtype=torch.float64)
secont condition:: tensor(4.6063e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0766e-06, dtype=torch.float64)
secont condition:: tensor(1.0766e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6446e-06, dtype=torch.float64)
secont condition:: tensor(2.6446e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2155e-06, dtype=torch.float64)
secont condition:: tensor(7.2155e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9305e-05, dtype=torch.float64)
secont condition:: tensor(1.9305e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.7005e-05, dtype=torch.float64)
secont condition:: tensor(6.7005e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0084, dtype=torch.float64)
secont condition:: tensor(0.0084, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0063, dtype=torch.float64)
curr_secont condition:: tensor(-0.0057, dtype=torch.float64)
curr_secont condition:: tensor(-0.0048, dtype=torch.float64)
curr_secont condition:: tensor(-0.0027, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0059, dtype=torch.float64)
secont condition:: tensor(0.0059, dtype=torch.float64)
curr_secont condition:: tensor(0.0057, dtype=torch.float64)
secont condition:: tensor(0.0057, dtype=torch.float64)
curr_secont condition:: tensor(0.0049, dtype=torch.float64)
secont condition:: tensor(0.0049, dtype=torch.float64)
curr_secont condition:: tensor(0.0027, dtype=torch.float64)
secont condition:: tensor(0.0027, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0010, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0011, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0011, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0010, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0010, dtype=torch.float64)
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
curr_secont condition:: tensor(-0.0021, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
curr_secont condition:: tensor(-0.0028, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0011, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0026, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0021, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0021, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0005, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 43.44648194313049
curr_diff: 0 tensor(1.3570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7372e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.2988e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9743e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.9236e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0664e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2933e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5067e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0891, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1530, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0705, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0095, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0432, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0210, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1972, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9995, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.958500
random set 2
python3 generate_rand_ids 0.0001  MNIST
tensor([49312,  4709, 31790,  6543,  9105, 20351])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233066
Test Avg. Loss: 0.000022, Accuracy: 0.944700
Train - Epoch 1, Batch: 0, Loss: 0.236551
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 2, Batch: 0, Loss: 0.165062
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 3, Batch: 0, Loss: 0.155151
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 4, Batch: 0, Loss: 0.164342
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 5, Batch: 0, Loss: 0.163590
Test Avg. Loss: 0.000063, Accuracy: 0.774400
Train - Epoch 6, Batch: 0, Loss: 0.644755
Test Avg. Loss: 0.000022, Accuracy: 0.947600
Train - Epoch 7, Batch: 0, Loss: 0.238157
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 8, Batch: 0, Loss: 0.175432
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 9, Batch: 0, Loss: 0.163990
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 10, Batch: 0, Loss: 0.157821
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.162240
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 12, Batch: 0, Loss: 0.163054
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 13, Batch: 0, Loss: 0.157380
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 14, Batch: 0, Loss: 0.158677
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.152346
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.156125
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.159947
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.152335
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.153574
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.146994
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.148317
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.157315
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 23, Batch: 0, Loss: 0.155814
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.154648
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 25, Batch: 0, Loss: 0.151122
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 26, Batch: 0, Loss: 0.154140
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.147535
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 28, Batch: 0, Loss: 0.152686
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.156823
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 171.8243443965912
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.72065114974976
time_baseline:: 118.78779458999634
curr_diff: 0 tensor(5.9415e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5524e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7548e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.6286e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0928e-09, dtype=torch.float64)
secont condition:: tensor(3.0928e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3469e-08, dtype=torch.float64)
secont condition:: tensor(5.3469e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0660e-08, dtype=torch.float64)
secont condition:: tensor(2.0660e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2059e-07, dtype=torch.float64)
secont condition:: tensor(1.2059e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4346e-08, dtype=torch.float64)
secont condition:: tensor(9.4346e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0016e-08, dtype=torch.float64)
secont condition:: tensor(4.0016e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8622e-08, dtype=torch.float64)
secont condition:: tensor(2.8622e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5197e-08, dtype=torch.float64)
secont condition:: tensor(1.5197e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8295e-08, dtype=torch.float64)
secont condition:: tensor(1.8295e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0477e-08, dtype=torch.float64)
secont condition:: tensor(1.0477e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4381e-11, dtype=torch.float64)
secont condition:: tensor(4.4381e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0389e-08, dtype=torch.float64)
secont condition:: tensor(1.0389e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.3993e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8333e-08, dtype=torch.float64)
secont condition:: tensor(1.8333e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0095e-08, dtype=torch.float64)
secont condition:: tensor(1.0095e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8445e-08, dtype=torch.float64)
secont condition:: tensor(4.8445e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1100e-08, dtype=torch.float64)
secont condition:: tensor(2.1100e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0785e-08, dtype=torch.float64)
secont condition:: tensor(2.0785e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5432e-08, dtype=torch.float64)
secont condition:: tensor(2.5432e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8212e-08, dtype=torch.float64)
secont condition:: tensor(1.8212e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6704e-08, dtype=torch.float64)
secont condition:: tensor(5.6704e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1933e-07, dtype=torch.float64)
secont condition:: tensor(1.1933e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7317e-07, dtype=torch.float64)
secont condition:: tensor(3.7317e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8711e-07, dtype=torch.float64)
secont condition:: tensor(2.8711e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3459e-07, dtype=torch.float64)
secont condition:: tensor(9.3459e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0690e-07, dtype=torch.float64)
secont condition:: tensor(9.0690e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8782e-07, dtype=torch.float64)
secont condition:: tensor(7.8782e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1016e-07, dtype=torch.float64)
secont condition:: tensor(2.1016e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2852e-07, dtype=torch.float64)
secont condition:: tensor(1.2852e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.8561e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9842e-07, dtype=torch.float64)
secont condition:: tensor(2.9842e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5013e-08, dtype=torch.float64)
secont condition:: tensor(7.5013e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3422e-09, dtype=torch.float64)
secont condition:: tensor(4.3422e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5928e-08, dtype=torch.float64)
secont condition:: tensor(5.5928e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4978e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6973e-08, dtype=torch.float64)
secont condition:: tensor(9.6973e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3672e-08, dtype=torch.float64)
secont condition:: tensor(3.3672e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1658e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5938e-09, dtype=torch.float64)
secont condition:: tensor(5.5938e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2487e-08, dtype=torch.float64)
secont condition:: tensor(2.2487e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.8979e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5204e-08, dtype=torch.float64)
secont condition:: tensor(7.5204e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1256e-08, dtype=torch.float64)
secont condition:: tensor(7.1256e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2742e-08, dtype=torch.float64)
secont condition:: tensor(8.2742e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5082e-09, dtype=torch.float64)
secont condition:: tensor(2.5082e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7073e-08, dtype=torch.float64)
secont condition:: tensor(8.7073e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6912e-08, dtype=torch.float64)
secont condition:: tensor(7.6912e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9709e-08, dtype=torch.float64)
secont condition:: tensor(8.9709e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1475e-08, dtype=torch.float64)
secont condition:: tensor(2.1475e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6973e-08, dtype=torch.float64)
secont condition:: tensor(8.6973e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2070e-08, dtype=torch.float64)
secont condition:: tensor(2.2070e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.1087e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4076e-08, dtype=torch.float64)
secont condition:: tensor(2.4076e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0713e-08, dtype=torch.float64)
secont condition:: tensor(5.0713e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6984e-08, dtype=torch.float64)
secont condition:: tensor(1.6984e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2330e-08, dtype=torch.float64)
secont condition:: tensor(3.2330e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8008e-08, dtype=torch.float64)
secont condition:: tensor(4.8008e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8350e-08, dtype=torch.float64)
secont condition:: tensor(8.8350e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5670e-06, dtype=torch.float64)
secont condition:: tensor(1.5670e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4312e-09, dtype=torch.float64)
secont condition:: tensor(8.4312e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4258e-08, dtype=torch.float64)
secont condition:: tensor(5.4258e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3505e-08, dtype=torch.float64)
secont condition:: tensor(3.3505e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7191e-08, dtype=torch.float64)
secont condition:: tensor(5.7191e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5087e-08, dtype=torch.float64)
secont condition:: tensor(2.5087e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2851e-08, dtype=torch.float64)
secont condition:: tensor(3.2851e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6123e-09, dtype=torch.float64)
secont condition:: tensor(1.6123e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8127e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8431e-08, dtype=torch.float64)
secont condition:: tensor(1.8431e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.2497e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.5415e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7351e-08, dtype=torch.float64)
secont condition:: tensor(5.7351e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1184e-08, dtype=torch.float64)
secont condition:: tensor(2.1184e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3404e-07, dtype=torch.float64)
secont condition:: tensor(1.3404e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4949e-08, dtype=torch.float64)
secont condition:: tensor(2.4949e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1022e-07, dtype=torch.float64)
secont condition:: tensor(2.1022e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2076e-08, dtype=torch.float64)
secont condition:: tensor(3.2076e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1678e-08, dtype=torch.float64)
secont condition:: tensor(5.1678e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6436e-08, dtype=torch.float64)
secont condition:: tensor(4.6436e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9790e-08, dtype=torch.float64)
secont condition:: tensor(2.9790e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3096e-08, dtype=torch.float64)
secont condition:: tensor(1.3096e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.885825872421265
curr_diff: 0 tensor(1.3399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1655e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.8751e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1158e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9204e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8517e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.0301e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8259e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.2212e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4312e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9323e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3996e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.7316e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.240792
Test Avg. Loss: 0.000024, Accuracy: 0.939800
Train - Epoch 1, Batch: 0, Loss: 0.263499
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.166236
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 3, Batch: 0, Loss: 0.157823
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.155767
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 5, Batch: 0, Loss: 0.160383
Test Avg. Loss: 0.000026, Accuracy: 0.914000
Train - Epoch 6, Batch: 0, Loss: 0.283579
Test Avg. Loss: 0.000041, Accuracy: 0.900400
Train - Epoch 7, Batch: 0, Loss: 0.430759
Test Avg. Loss: 0.000016, Accuracy: 0.955800
Train - Epoch 8, Batch: 0, Loss: 0.182478
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 9, Batch: 0, Loss: 0.165200
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 10, Batch: 0, Loss: 0.159307
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 11, Batch: 0, Loss: 0.167327
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 12, Batch: 0, Loss: 0.158004
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 13, Batch: 0, Loss: 0.159770
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 14, Batch: 0, Loss: 0.157665
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 15, Batch: 0, Loss: 0.145619
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 16, Batch: 0, Loss: 0.158124
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 17, Batch: 0, Loss: 0.156221
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.157423
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.152129
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.150427
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.155316
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.154081
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 23, Batch: 0, Loss: 0.158493
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 24, Batch: 0, Loss: 0.155028
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.150217
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.154626
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.158454
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.156625
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.155046
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 172.17637991905212
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.5376091003418
time_baseline:: 116.60163235664368
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0062, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1971e-08, dtype=torch.float64)
secont condition:: tensor(3.1971e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7104e-07, dtype=torch.float64)
secont condition:: tensor(1.7104e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.6534e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3294e-07, dtype=torch.float64)
secont condition:: tensor(5.3294e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1402e-07, dtype=torch.float64)
secont condition:: tensor(1.1402e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1294e-08, dtype=torch.float64)
secont condition:: tensor(5.1294e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1825e-08, dtype=torch.float64)
secont condition:: tensor(1.1825e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1184e-08, dtype=torch.float64)
secont condition:: tensor(3.1184e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9574e-08, dtype=torch.float64)
secont condition:: tensor(3.9574e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2532e-08, dtype=torch.float64)
secont condition:: tensor(2.2532e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1771e-08, dtype=torch.float64)
secont condition:: tensor(3.1771e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7838e-08, dtype=torch.float64)
secont condition:: tensor(1.7838e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5660e-08, dtype=torch.float64)
secont condition:: tensor(2.5660e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3090e-07, dtype=torch.float64)
secont condition:: tensor(1.3090e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7372e-05, dtype=torch.float64)
secont condition:: tensor(1.7372e-05, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4380e-08, dtype=torch.float64)
secont condition:: tensor(8.4380e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2252e-07, dtype=torch.float64)
secont condition:: tensor(1.2252e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7211e-07, dtype=torch.float64)
secont condition:: tensor(2.7211e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3383e-07, dtype=torch.float64)
secont condition:: tensor(4.3383e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1796e-07, dtype=torch.float64)
secont condition:: tensor(8.1796e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5804e-06, dtype=torch.float64)
secont condition:: tensor(1.5804e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5062e-06, dtype=torch.float64)
secont condition:: tensor(4.5062e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0885e-05, dtype=torch.float64)
secont condition:: tensor(1.0885e-05, dtype=torch.float64)
curr_secont condition:: tensor(-3.2961e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(4.5531e-05, dtype=torch.float64)
secont condition:: tensor(4.5531e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3133e-05, dtype=torch.float64)
secont condition:: tensor(2.3133e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3422e-05, dtype=torch.float64)
secont condition:: tensor(1.3422e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.7277e-06, dtype=torch.float64)
secont condition:: tensor(6.7277e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2101e-06, dtype=torch.float64)
secont condition:: tensor(7.2101e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3633e-06, dtype=torch.float64)
secont condition:: tensor(6.3633e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1725e-06, dtype=torch.float64)
secont condition:: tensor(5.1725e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7470e-06, dtype=torch.float64)
secont condition:: tensor(6.7470e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0087e-06, dtype=torch.float64)
secont condition:: tensor(5.0087e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6822e-06, dtype=torch.float64)
secont condition:: tensor(1.6822e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6379e-06, dtype=torch.float64)
secont condition:: tensor(4.6379e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4820e-06, dtype=torch.float64)
secont condition:: tensor(5.4820e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5180e-06, dtype=torch.float64)
secont condition:: tensor(4.5180e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9802e-06, dtype=torch.float64)
secont condition:: tensor(4.9802e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5945e-06, dtype=torch.float64)
secont condition:: tensor(3.5945e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2245e-06, dtype=torch.float64)
secont condition:: tensor(4.2245e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1462e-06, dtype=torch.float64)
secont condition:: tensor(3.1462e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0452e-05, dtype=torch.float64)
secont condition:: tensor(1.0452e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4859e-06, dtype=torch.float64)
secont condition:: tensor(4.4859e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8687e-06, dtype=torch.float64)
secont condition:: tensor(2.8687e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5411e-06, dtype=torch.float64)
secont condition:: tensor(3.5411e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6663e-06, dtype=torch.float64)
secont condition:: tensor(2.6663e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0098e-06, dtype=torch.float64)
secont condition:: tensor(3.0098e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7446e-06, dtype=torch.float64)
secont condition:: tensor(3.7446e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5707e-06, dtype=torch.float64)
secont condition:: tensor(1.5707e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9118e-06, dtype=torch.float64)
secont condition:: tensor(2.9118e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0529e-06, dtype=torch.float64)
secont condition:: tensor(3.0529e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7799e-06, dtype=torch.float64)
secont condition:: tensor(1.7799e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5217e-06, dtype=torch.float64)
secont condition:: tensor(2.5217e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5842e-06, dtype=torch.float64)
secont condition:: tensor(2.5842e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9985e-06, dtype=torch.float64)
secont condition:: tensor(2.9985e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-06, dtype=torch.float64)
secont condition:: tensor(4.5752e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4405e-06, dtype=torch.float64)
secont condition:: tensor(1.4405e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2351e-06, dtype=torch.float64)
secont condition:: tensor(2.2351e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4755e-06, dtype=torch.float64)
secont condition:: tensor(2.4755e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0648e-06, dtype=torch.float64)
secont condition:: tensor(2.0648e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3648e-06, dtype=torch.float64)
secont condition:: tensor(1.3648e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4220e-07, dtype=torch.float64)
secont condition:: tensor(5.4220e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6405e-06, dtype=torch.float64)
secont condition:: tensor(2.6405e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1824e-06, dtype=torch.float64)
secont condition:: tensor(1.1824e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1210e-06, dtype=torch.float64)
secont condition:: tensor(2.1210e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9537e-06, dtype=torch.float64)
secont condition:: tensor(1.9537e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3787e-07, dtype=torch.float64)
secont condition:: tensor(7.3787e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5501e-06, dtype=torch.float64)
secont condition:: tensor(1.5501e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5118e-06, dtype=torch.float64)
secont condition:: tensor(1.5118e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6467e-07, dtype=torch.float64)
secont condition:: tensor(8.6467e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4259e-07, dtype=torch.float64)
secont condition:: tensor(8.4259e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7016e-06, dtype=torch.float64)
secont condition:: tensor(1.7016e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1295e-06, dtype=torch.float64)
secont condition:: tensor(1.1295e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.272056818008423
curr_diff: 0 tensor(3.9949e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0146e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1390e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0823e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.1665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.1276e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0063, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238291
Test Avg. Loss: 0.000022, Accuracy: 0.946000
Train - Epoch 1, Batch: 0, Loss: 0.243595
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 2, Batch: 0, Loss: 0.167273
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.153729
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 4, Batch: 0, Loss: 0.161758
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 5, Batch: 0, Loss: 0.163909
Test Avg. Loss: 0.000016, Accuracy: 0.955800
Train - Epoch 6, Batch: 0, Loss: 0.170925
Test Avg. Loss: 0.000111, Accuracy: 0.668000
Train - Epoch 7, Batch: 0, Loss: 1.137494
Test Avg. Loss: 0.000019, Accuracy: 0.951100
Train - Epoch 8, Batch: 0, Loss: 0.211878
Test Avg. Loss: 0.000016, Accuracy: 0.956900
Train - Epoch 9, Batch: 0, Loss: 0.172976
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 10, Batch: 0, Loss: 0.161692
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 11, Batch: 0, Loss: 0.160595
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 12, Batch: 0, Loss: 0.161862
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 13, Batch: 0, Loss: 0.157265
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 14, Batch: 0, Loss: 0.149816
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.158832
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.153195
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 17, Batch: 0, Loss: 0.148204
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 18, Batch: 0, Loss: 0.158238
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.151616
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.157819
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.155125
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.156511
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.153303
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.154937
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.148528
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.154097
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.155115
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.152570
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.144263
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 170.76937770843506
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.9522979259491
time_baseline:: 116.0160322189331
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6379e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2620e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1159e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5111e-08, dtype=torch.float64)
secont condition:: tensor(1.5111e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4977e-08, dtype=torch.float64)
secont condition:: tensor(7.4977e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0602e-08, dtype=torch.float64)
secont condition:: tensor(1.0602e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9244e-08, dtype=torch.float64)
secont condition:: tensor(9.9244e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0387e-08, dtype=torch.float64)
secont condition:: tensor(7.0387e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3976e-08, dtype=torch.float64)
secont condition:: tensor(3.3976e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4999e-08, dtype=torch.float64)
secont condition:: tensor(2.4999e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8819e-08, dtype=torch.float64)
secont condition:: tensor(7.8819e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3241e-05, dtype=torch.float64)
secont condition:: tensor(2.3241e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3808e-08, dtype=torch.float64)
secont condition:: tensor(3.3808e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2133e-09, dtype=torch.float64)
secont condition:: tensor(7.2133e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0286e-08, dtype=torch.float64)
secont condition:: tensor(1.0286e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4201e-08, dtype=torch.float64)
secont condition:: tensor(2.4201e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3933e-08, dtype=torch.float64)
secont condition:: tensor(1.3933e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3890e-08, dtype=torch.float64)
secont condition:: tensor(2.3890e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2747e-09, dtype=torch.float64)
secont condition:: tensor(6.2747e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9398e-09, dtype=torch.float64)
secont condition:: tensor(6.9398e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8787e-06, dtype=torch.float64)
secont condition:: tensor(1.8787e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0550e-05, dtype=torch.float64)
secont condition:: tensor(1.0550e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5460e-08, dtype=torch.float64)
secont condition:: tensor(1.5460e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2936e-08, dtype=torch.float64)
secont condition:: tensor(2.2936e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9404e-08, dtype=torch.float64)
secont condition:: tensor(1.9404e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7710e-08, dtype=torch.float64)
secont condition:: tensor(6.7710e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9684e-07, dtype=torch.float64)
secont condition:: tensor(1.9684e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5988e-07, dtype=torch.float64)
secont condition:: tensor(4.5988e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2392e-06, dtype=torch.float64)
secont condition:: tensor(5.2392e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2317e-06, dtype=torch.float64)
secont condition:: tensor(3.2317e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2306e-06, dtype=torch.float64)
secont condition:: tensor(8.2306e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7280e-05, dtype=torch.float64)
secont condition:: tensor(2.7280e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1197e-06, dtype=torch.float64)
secont condition:: tensor(7.1197e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9789e-06, dtype=torch.float64)
secont condition:: tensor(4.9789e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3386e-06, dtype=torch.float64)
secont condition:: tensor(3.3386e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3515e-06, dtype=torch.float64)
secont condition:: tensor(1.3515e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0686e-06, dtype=torch.float64)
secont condition:: tensor(1.0686e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1783e-07, dtype=torch.float64)
secont condition:: tensor(5.1783e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0746e-07, dtype=torch.float64)
secont condition:: tensor(7.0746e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1395e-07, dtype=torch.float64)
secont condition:: tensor(6.1395e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3966e-08, dtype=torch.float64)
secont condition:: tensor(3.3966e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0802e-07, dtype=torch.float64)
secont condition:: tensor(5.0802e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5168e-07, dtype=torch.float64)
secont condition:: tensor(9.5168e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1902e-07, dtype=torch.float64)
secont condition:: tensor(6.1902e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1229e-07, dtype=torch.float64)
secont condition:: tensor(7.1229e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1829e-06, dtype=torch.float64)
secont condition:: tensor(1.1829e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1862e-07, dtype=torch.float64)
secont condition:: tensor(3.1862e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6696e-07, dtype=torch.float64)
secont condition:: tensor(1.6696e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0478e-05, dtype=torch.float64)
secont condition:: tensor(1.0478e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1848e-06, dtype=torch.float64)
secont condition:: tensor(3.1848e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9140e-07, dtype=torch.float64)
secont condition:: tensor(4.9140e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7549e-06, dtype=torch.float64)
secont condition:: tensor(4.7549e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6307e-07, dtype=torch.float64)
secont condition:: tensor(3.6307e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4062e-07, dtype=torch.float64)
secont condition:: tensor(9.4062e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0964e-07, dtype=torch.float64)
secont condition:: tensor(5.0964e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3497e-06, dtype=torch.float64)
secont condition:: tensor(2.3497e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7571e-07, dtype=torch.float64)
secont condition:: tensor(4.7571e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7028e-07, dtype=torch.float64)
secont condition:: tensor(2.7028e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4147e-07, dtype=torch.float64)
secont condition:: tensor(1.4147e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3594e-06, dtype=torch.float64)
secont condition:: tensor(4.3594e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1953e-07, dtype=torch.float64)
secont condition:: tensor(3.1953e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9282e-07, dtype=torch.float64)
secont condition:: tensor(1.9282e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4491e-07, dtype=torch.float64)
secont condition:: tensor(3.4491e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7705e-07, dtype=torch.float64)
secont condition:: tensor(1.7705e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4868e-07, dtype=torch.float64)
secont condition:: tensor(1.4868e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9956e-07, dtype=torch.float64)
secont condition:: tensor(1.9956e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4218e-07, dtype=torch.float64)
secont condition:: tensor(3.4218e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3948e-07, dtype=torch.float64)
secont condition:: tensor(1.3948e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0738e-07, dtype=torch.float64)
secont condition:: tensor(1.0738e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0835e-07, dtype=torch.float64)
secont condition:: tensor(2.0835e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0315e-07, dtype=torch.float64)
secont condition:: tensor(2.0315e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0640e-07, dtype=torch.float64)
secont condition:: tensor(2.0640e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6227e-07, dtype=torch.float64)
secont condition:: tensor(1.6227e-07, dtype=torch.float64)
curr_secont condition:: tensor(-7.0942e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1148e-07, dtype=torch.float64)
secont condition:: tensor(3.1148e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0865e-07, dtype=torch.float64)
secont condition:: tensor(2.0865e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4060e-07, dtype=torch.float64)
secont condition:: tensor(1.4060e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1520e-07, dtype=torch.float64)
secont condition:: tensor(1.1520e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4946e-08, dtype=torch.float64)
secont condition:: tensor(4.4946e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2877e-07, dtype=torch.float64)
secont condition:: tensor(2.2877e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3732e-07, dtype=torch.float64)
secont condition:: tensor(1.3732e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9035e-08, dtype=torch.float64)
secont condition:: tensor(8.9035e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.059375047683716
curr_diff: 0 tensor(1.4625e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1701e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.7560e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4099e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.0987e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1631e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.9278e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6162e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2202e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235923
Test Avg. Loss: 0.000023, Accuracy: 0.941200
Train - Epoch 1, Batch: 0, Loss: 0.245969
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.168332
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.160937
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 4, Batch: 0, Loss: 0.161198
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 5, Batch: 0, Loss: 0.154661
Test Avg. Loss: 0.000018, Accuracy: 0.949200
Train - Epoch 6, Batch: 0, Loss: 0.194306
Test Avg. Loss: 0.000107, Accuracy: 0.648000
Train - Epoch 7, Batch: 0, Loss: 1.087373
Test Avg. Loss: 0.000026, Accuracy: 0.937500
Train - Epoch 8, Batch: 0, Loss: 0.283145
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 9, Batch: 0, Loss: 0.184842
Test Avg. Loss: 0.000016, Accuracy: 0.953200
Train - Epoch 10, Batch: 0, Loss: 0.177595
Test Avg. Loss: 0.000015, Accuracy: 0.954500
Train - Epoch 11, Batch: 0, Loss: 0.165128
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 12, Batch: 0, Loss: 0.165841
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 13, Batch: 0, Loss: 0.157698
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 14, Batch: 0, Loss: 0.163719
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 15, Batch: 0, Loss: 0.159045
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.156272
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 17, Batch: 0, Loss: 0.157330
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.156193
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.149002
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.155295
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.154175
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.154260
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.154669
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.155504
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.149007
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.155182
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.155198
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 28, Batch: 0, Loss: 0.157835
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.154693
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 171.71331572532654
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.58091878890991
time_baseline:: 117.64568877220154
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7613e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2872e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.8552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.2185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1451e-08, dtype=torch.float64)
secont condition:: tensor(1.1451e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4271e-08, dtype=torch.float64)
secont condition:: tensor(3.4271e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5476e-09, dtype=torch.float64)
secont condition:: tensor(9.5476e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6444e-08, dtype=torch.float64)
secont condition:: tensor(2.6444e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4497e-08, dtype=torch.float64)
secont condition:: tensor(4.4497e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5903e-08, dtype=torch.float64)
secont condition:: tensor(1.5903e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8891e-09, dtype=torch.float64)
secont condition:: tensor(6.8891e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4479e-09, dtype=torch.float64)
secont condition:: tensor(6.4479e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4894e-08, dtype=torch.float64)
secont condition:: tensor(1.4894e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7131e-09, dtype=torch.float64)
secont condition:: tensor(8.7131e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1667e-09, dtype=torch.float64)
secont condition:: tensor(7.1667e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7177e-09, dtype=torch.float64)
secont condition:: tensor(4.7177e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0079e-09, dtype=torch.float64)
secont condition:: tensor(2.0079e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.0368e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5331e-08, dtype=torch.float64)
secont condition:: tensor(1.5331e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0076e-08, dtype=torch.float64)
secont condition:: tensor(4.0076e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6512e-08, dtype=torch.float64)
secont condition:: tensor(3.6512e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5004e-08, dtype=torch.float64)
secont condition:: tensor(2.5004e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0682e-08, dtype=torch.float64)
secont condition:: tensor(2.0682e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5067e-08, dtype=torch.float64)
secont condition:: tensor(2.5067e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0612e-08, dtype=torch.float64)
secont condition:: tensor(5.0612e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0339e-08, dtype=torch.float64)
secont condition:: tensor(5.0339e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4473e-08, dtype=torch.float64)
secont condition:: tensor(6.4473e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5235e-08, dtype=torch.float64)
secont condition:: tensor(3.5235e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8647e-08, dtype=torch.float64)
secont condition:: tensor(5.8647e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4281e-08, dtype=torch.float64)
secont condition:: tensor(2.4281e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7300e-07, dtype=torch.float64)
secont condition:: tensor(6.7300e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1575e-06, dtype=torch.float64)
secont condition:: tensor(1.1575e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.6911e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0272e-07, dtype=torch.float64)
secont condition:: tensor(2.0272e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2728e-06, dtype=torch.float64)
secont condition:: tensor(1.2728e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2462e-06, dtype=torch.float64)
secont condition:: tensor(1.2462e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3314e-06, dtype=torch.float64)
secont condition:: tensor(1.3314e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0892e-07, dtype=torch.float64)
secont condition:: tensor(4.0892e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5778e-07, dtype=torch.float64)
secont condition:: tensor(2.5778e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7526e-07, dtype=torch.float64)
secont condition:: tensor(2.7526e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9144e-07, dtype=torch.float64)
secont condition:: tensor(2.9144e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.0916e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3031e-07, dtype=torch.float64)
secont condition:: tensor(3.3031e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5125e-07, dtype=torch.float64)
secont condition:: tensor(1.5125e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3706e-09, dtype=torch.float64)
secont condition:: tensor(5.3706e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6677e-09, dtype=torch.float64)
secont condition:: tensor(8.6677e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5369e-08, dtype=torch.float64)
secont condition:: tensor(6.5369e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2807e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5210e-08, dtype=torch.float64)
secont condition:: tensor(5.5210e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4904e-07, dtype=torch.float64)
secont condition:: tensor(3.4904e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1323e-07, dtype=torch.float64)
secont condition:: tensor(9.1323e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8790e-08, dtype=torch.float64)
secont condition:: tensor(7.8790e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.3377e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2961e-07, dtype=torch.float64)
secont condition:: tensor(5.2961e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8032e-07, dtype=torch.float64)
secont condition:: tensor(7.8032e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8950e-07, dtype=torch.float64)
secont condition:: tensor(4.8950e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1276e-07, dtype=torch.float64)
secont condition:: tensor(3.1276e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2297e-07, dtype=torch.float64)
secont condition:: tensor(7.2297e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1070e-07, dtype=torch.float64)
secont condition:: tensor(2.1070e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3394e-07, dtype=torch.float64)
secont condition:: tensor(1.3394e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8488e-07, dtype=torch.float64)
secont condition:: tensor(1.8488e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2640e-08, dtype=torch.float64)
secont condition:: tensor(8.2640e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0944e-07, dtype=torch.float64)
secont condition:: tensor(4.0944e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3482e-07, dtype=torch.float64)
secont condition:: tensor(4.3482e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1775e-07, dtype=torch.float64)
secont condition:: tensor(3.1775e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3645e-07, dtype=torch.float64)
secont condition:: tensor(4.3645e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3752e-07, dtype=torch.float64)
secont condition:: tensor(4.3752e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9008e-07, dtype=torch.float64)
secont condition:: tensor(1.9008e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2770e-07, dtype=torch.float64)
secont condition:: tensor(3.2770e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1283e-07, dtype=torch.float64)
secont condition:: tensor(1.1283e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9799e-08, dtype=torch.float64)
secont condition:: tensor(5.9799e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6873e-07, dtype=torch.float64)
secont condition:: tensor(1.6873e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8892e-07, dtype=torch.float64)
secont condition:: tensor(2.8892e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6910e-08, dtype=torch.float64)
secont condition:: tensor(2.6910e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8397e-08, dtype=torch.float64)
secont condition:: tensor(9.8397e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3205e-08, dtype=torch.float64)
secont condition:: tensor(2.3205e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0882e-07, dtype=torch.float64)
secont condition:: tensor(1.0882e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4958e-08, dtype=torch.float64)
secont condition:: tensor(7.4958e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5768e-07, dtype=torch.float64)
secont condition:: tensor(1.5768e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3222e-07, dtype=torch.float64)
secont condition:: tensor(2.3222e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3472e-08, dtype=torch.float64)
secont condition:: tensor(8.3472e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8470e-08, dtype=torch.float64)
secont condition:: tensor(6.8470e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.123871326446533
curr_diff: 0 tensor(1.6294e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7528e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6537e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.1378e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4428e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3260e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.8867e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7645e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.1598e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.4044e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242258
Test Avg. Loss: 0.000024, Accuracy: 0.942500
Train - Epoch 1, Batch: 0, Loss: 0.255273
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.170313
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.159109
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 4, Batch: 0, Loss: 0.167026
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 5, Batch: 0, Loss: 0.168014
Test Avg. Loss: 0.000050, Accuracy: 0.822300
Train - Epoch 6, Batch: 0, Loss: 0.532434
Test Avg. Loss: 0.000023, Accuracy: 0.943700
Train - Epoch 7, Batch: 0, Loss: 0.246017
Test Avg. Loss: 0.000016, Accuracy: 0.955900
Train - Epoch 8, Batch: 0, Loss: 0.176446
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 9, Batch: 0, Loss: 0.165651
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 10, Batch: 0, Loss: 0.157262
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 11, Batch: 0, Loss: 0.160095
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 12, Batch: 0, Loss: 0.160974
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 13, Batch: 0, Loss: 0.153838
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.153895
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 15, Batch: 0, Loss: 0.152873
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 16, Batch: 0, Loss: 0.151595
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 17, Batch: 0, Loss: 0.156948
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.155781
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.154258
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.156321
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.151729
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.155873
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.151073
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 24, Batch: 0, Loss: 0.151743
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.152877
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.149590
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.155762
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.149001
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.146844
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 170.1402428150177
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.6710524559021
time_baseline:: 115.73846745491028
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3013e-08, dtype=torch.float64)
secont condition:: tensor(3.3013e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7829e-07, dtype=torch.float64)
secont condition:: tensor(1.7829e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6536e-08, dtype=torch.float64)
secont condition:: tensor(2.6536e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5363e-07, dtype=torch.float64)
secont condition:: tensor(4.5363e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5337e-08, dtype=torch.float64)
secont condition:: tensor(9.5337e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4778e-08, dtype=torch.float64)
secont condition:: tensor(3.4778e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2967e-08, dtype=torch.float64)
secont condition:: tensor(3.2967e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3040e-08, dtype=torch.float64)
secont condition:: tensor(1.3040e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4140e-08, dtype=torch.float64)
secont condition:: tensor(2.4140e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6687e-08, dtype=torch.float64)
secont condition:: tensor(1.6687e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7537e-09, dtype=torch.float64)
secont condition:: tensor(7.7537e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3263e-08, dtype=torch.float64)
secont condition:: tensor(1.3263e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7652e-09, dtype=torch.float64)
secont condition:: tensor(7.7652e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6202e-08, dtype=torch.float64)
secont condition:: tensor(3.6202e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0563e-08, dtype=torch.float64)
secont condition:: tensor(5.0563e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7992e-08, dtype=torch.float64)
secont condition:: tensor(2.7992e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9576e-08, dtype=torch.float64)
secont condition:: tensor(2.9576e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8524e-08, dtype=torch.float64)
secont condition:: tensor(4.8524e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6658e-08, dtype=torch.float64)
secont condition:: tensor(7.6658e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5908e-07, dtype=torch.float64)
secont condition:: tensor(1.5908e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3138e-07, dtype=torch.float64)
secont condition:: tensor(2.3138e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7597e-07, dtype=torch.float64)
secont condition:: tensor(3.7597e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2099e-06, dtype=torch.float64)
secont condition:: tensor(1.2099e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0069e-07, dtype=torch.float64)
secont condition:: tensor(4.0069e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2914e-05, dtype=torch.float64)
secont condition:: tensor(1.2914e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3012e-05, dtype=torch.float64)
secont condition:: tensor(2.3012e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3128e-05, dtype=torch.float64)
secont condition:: tensor(2.3128e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1307e-05, dtype=torch.float64)
secont condition:: tensor(1.1307e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2094e-06, dtype=torch.float64)
secont condition:: tensor(5.2094e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7223e-05, dtype=torch.float64)
secont condition:: tensor(2.7223e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0896e-06, dtype=torch.float64)
secont condition:: tensor(2.0896e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4607e-05, dtype=torch.float64)
secont condition:: tensor(1.4607e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2176e-05, dtype=torch.float64)
secont condition:: tensor(1.2176e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1574e-07, dtype=torch.float64)
secont condition:: tensor(5.1574e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9963e-06, dtype=torch.float64)
secont condition:: tensor(6.9963e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5610e-06, dtype=torch.float64)
secont condition:: tensor(4.5610e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8900e-06, dtype=torch.float64)
secont condition:: tensor(2.8900e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7668e-07, dtype=torch.float64)
secont condition:: tensor(1.7668e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8891e-07, dtype=torch.float64)
secont condition:: tensor(6.8891e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7273e-07, dtype=torch.float64)
secont condition:: tensor(4.7273e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6983e-06, dtype=torch.float64)
secont condition:: tensor(1.6983e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4398e-07, dtype=torch.float64)
secont condition:: tensor(4.4398e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7325e-07, dtype=torch.float64)
secont condition:: tensor(2.7325e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1209e-07, dtype=torch.float64)
secont condition:: tensor(4.1209e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4326e-07, dtype=torch.float64)
secont condition:: tensor(2.4326e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6631e-07, dtype=torch.float64)
secont condition:: tensor(3.6631e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9071e-07, dtype=torch.float64)
secont condition:: tensor(2.9071e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7864e-08, dtype=torch.float64)
secont condition:: tensor(8.7864e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1463e-07, dtype=torch.float64)
secont condition:: tensor(8.1463e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4178e-06, dtype=torch.float64)
secont condition:: tensor(7.4178e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3727e-06, dtype=torch.float64)
secont condition:: tensor(1.3727e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1522e-07, dtype=torch.float64)
secont condition:: tensor(1.1522e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6367e-07, dtype=torch.float64)
secont condition:: tensor(2.6367e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1851e-07, dtype=torch.float64)
secont condition:: tensor(1.1851e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9171e-07, dtype=torch.float64)
secont condition:: tensor(1.9171e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3177e-07, dtype=torch.float64)
secont condition:: tensor(2.3177e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5420e-07, dtype=torch.float64)
secont condition:: tensor(1.5420e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4917e-07, dtype=torch.float64)
secont condition:: tensor(1.4917e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0670e-07, dtype=torch.float64)
secont condition:: tensor(2.0670e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2402e-07, dtype=torch.float64)
secont condition:: tensor(1.2402e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7487e-08, dtype=torch.float64)
secont condition:: tensor(8.7487e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0640e-08, dtype=torch.float64)
secont condition:: tensor(9.0640e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4335e-08, dtype=torch.float64)
secont condition:: tensor(8.4335e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4691e-07, dtype=torch.float64)
secont condition:: tensor(2.4691e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1981e-07, dtype=torch.float64)
secont condition:: tensor(2.1981e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6349e-07, dtype=torch.float64)
secont condition:: tensor(1.6349e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0201e-07, dtype=torch.float64)
secont condition:: tensor(2.0201e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6644e-07, dtype=torch.float64)
secont condition:: tensor(1.6644e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7085e-08, dtype=torch.float64)
secont condition:: tensor(1.7085e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2175e-07, dtype=torch.float64)
secont condition:: tensor(1.2175e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1538e-07, dtype=torch.float64)
secont condition:: tensor(1.1538e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0785e-07, dtype=torch.float64)
secont condition:: tensor(2.0785e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6504e-07, dtype=torch.float64)
secont condition:: tensor(1.6504e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8752e-07, dtype=torch.float64)
secont condition:: tensor(1.8752e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1764e-07, dtype=torch.float64)
secont condition:: tensor(3.1764e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2105e-07, dtype=torch.float64)
secont condition:: tensor(2.2105e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3587e-07, dtype=torch.float64)
secont condition:: tensor(1.3587e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.393994569778442
curr_diff: 0 tensor(1.6117e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1793e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.5457e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.5295e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4393e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4894e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9391e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1069e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.8020e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
random set 3
python3 generate_rand_ids 0.0001  MNIST
tensor([51495, 28239, 48527, 43475, 49240, 50623])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.226578
Test Avg. Loss: 0.000023, Accuracy: 0.940000
Train - Epoch 1, Batch: 0, Loss: 0.251630
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.162102
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 3, Batch: 0, Loss: 0.161804
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 4, Batch: 0, Loss: 0.157463
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.162560
Test Avg. Loss: 0.000046, Accuracy: 0.836400
Train - Epoch 6, Batch: 0, Loss: 0.502422
Test Avg. Loss: 0.000041, Accuracy: 0.899200
Train - Epoch 7, Batch: 0, Loss: 0.420119
Test Avg. Loss: 0.000018, Accuracy: 0.951800
Train - Epoch 8, Batch: 0, Loss: 0.197354
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 9, Batch: 0, Loss: 0.170766
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 10, Batch: 0, Loss: 0.166662
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 11, Batch: 0, Loss: 0.162054
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 12, Batch: 0, Loss: 0.166697
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 13, Batch: 0, Loss: 0.158239
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 14, Batch: 0, Loss: 0.154899
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.160605
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 16, Batch: 0, Loss: 0.153926
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.150959
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.152153
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.159450
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.159234
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 21, Batch: 0, Loss: 0.155825
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.153628
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.153800
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.152766
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.153399
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.151695
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.154914
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.155518
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.155570
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 170.0497612953186
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.68820858001709
time_baseline:: 116.75418877601624
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0069, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3806e-09, dtype=torch.float64)
secont condition:: tensor(3.3806e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8564e-08, dtype=torch.float64)
secont condition:: tensor(2.8564e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0157e-07, dtype=torch.float64)
secont condition:: tensor(8.0157e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1373e-06, dtype=torch.float64)
secont condition:: tensor(1.1373e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9791e-07, dtype=torch.float64)
secont condition:: tensor(3.9791e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7191e-07, dtype=torch.float64)
secont condition:: tensor(1.7191e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7573e-08, dtype=torch.float64)
secont condition:: tensor(5.7573e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9342e-08, dtype=torch.float64)
secont condition:: tensor(2.9342e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7213e-08, dtype=torch.float64)
secont condition:: tensor(3.7213e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2472e-09, dtype=torch.float64)
secont condition:: tensor(3.2472e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3248e-09, dtype=torch.float64)
secont condition:: tensor(1.3248e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3364e-08, dtype=torch.float64)
secont condition:: tensor(6.3364e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0224e-08, dtype=torch.float64)
secont condition:: tensor(5.0224e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6626e-08, dtype=torch.float64)
secont condition:: tensor(3.6626e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4453e-08, dtype=torch.float64)
secont condition:: tensor(3.4453e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4039e-08, dtype=torch.float64)
secont condition:: tensor(3.4039e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2350e-07, dtype=torch.float64)
secont condition:: tensor(1.2350e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4529e-07, dtype=torch.float64)
secont condition:: tensor(1.4529e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2478e-07, dtype=torch.float64)
secont condition:: tensor(2.2478e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1739e-07, dtype=torch.float64)
secont condition:: tensor(3.1739e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6224e-07, dtype=torch.float64)
secont condition:: tensor(7.6224e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9764e-06, dtype=torch.float64)
secont condition:: tensor(1.9764e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4807e-06, dtype=torch.float64)
secont condition:: tensor(6.4807e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3076e-06, dtype=torch.float64)
secont condition:: tensor(8.3076e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4368e-05, dtype=torch.float64)
secont condition:: tensor(5.4368e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.3981e-05, dtype=torch.float64)
secont condition:: tensor(7.3981e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.9279e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3672e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3826e-05, dtype=torch.float64)
secont condition:: tensor(4.3826e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.0641e-05, dtype=torch.float64)
secont condition:: tensor(9.0641e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6397e-05, dtype=torch.float64)
secont condition:: tensor(4.6397e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2927e-05, dtype=torch.float64)
secont condition:: tensor(2.2927e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6824e-05, dtype=torch.float64)
secont condition:: tensor(5.6824e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1023e-05, dtype=torch.float64)
secont condition:: tensor(1.1023e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0205e-05, dtype=torch.float64)
secont condition:: tensor(1.0205e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0010e-05, dtype=torch.float64)
secont condition:: tensor(1.0010e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5257e-06, dtype=torch.float64)
secont condition:: tensor(4.5257e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5105e-06, dtype=torch.float64)
secont condition:: tensor(9.5105e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8161e-06, dtype=torch.float64)
secont condition:: tensor(4.8161e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0629e-06, dtype=torch.float64)
secont condition:: tensor(6.0629e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5618e-06, dtype=torch.float64)
secont condition:: tensor(3.5618e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5169e-06, dtype=torch.float64)
secont condition:: tensor(7.5169e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4854e-06, dtype=torch.float64)
secont condition:: tensor(8.4854e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8867e-06, dtype=torch.float64)
secont condition:: tensor(5.8867e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7061e-06, dtype=torch.float64)
secont condition:: tensor(2.7061e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7590e-06, dtype=torch.float64)
secont condition:: tensor(7.7590e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0522e-05, dtype=torch.float64)
secont condition:: tensor(1.0522e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8410e-06, dtype=torch.float64)
secont condition:: tensor(8.8410e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6997e-06, dtype=torch.float64)
secont condition:: tensor(3.6997e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8428e-06, dtype=torch.float64)
secont condition:: tensor(3.8428e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4482e-06, dtype=torch.float64)
secont condition:: tensor(6.4482e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5136e-06, dtype=torch.float64)
secont condition:: tensor(5.5136e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1274e-06, dtype=torch.float64)
secont condition:: tensor(5.1274e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7819e-06, dtype=torch.float64)
secont condition:: tensor(4.7819e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0693e-05, dtype=torch.float64)
secont condition:: tensor(1.0693e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5865e-06, dtype=torch.float64)
secont condition:: tensor(3.5865e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2332e-06, dtype=torch.float64)
secont condition:: tensor(4.2332e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7823e-06, dtype=torch.float64)
secont condition:: tensor(2.7823e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6282e-06, dtype=torch.float64)
secont condition:: tensor(2.6282e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8775e-06, dtype=torch.float64)
secont condition:: tensor(4.8775e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6296e-06, dtype=torch.float64)
secont condition:: tensor(4.6296e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4747e-06, dtype=torch.float64)
secont condition:: tensor(5.4747e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0661e-06, dtype=torch.float64)
secont condition:: tensor(6.0661e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9146e-06, dtype=torch.float64)
secont condition:: tensor(2.9146e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0605e-06, dtype=torch.float64)
secont condition:: tensor(3.0605e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7028e-06, dtype=torch.float64)
secont condition:: tensor(3.7028e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6234e-06, dtype=torch.float64)
secont condition:: tensor(1.6234e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6230e-06, dtype=torch.float64)
secont condition:: tensor(2.6230e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4545e-06, dtype=torch.float64)
secont condition:: tensor(2.4545e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7598e-06, dtype=torch.float64)
secont condition:: tensor(2.7598e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0106e-06, dtype=torch.float64)
secont condition:: tensor(2.0106e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3557e-06, dtype=torch.float64)
secont condition:: tensor(2.3557e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8976e-06, dtype=torch.float64)
secont condition:: tensor(1.8976e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1887e-06, dtype=torch.float64)
secont condition:: tensor(1.1887e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7455e-06, dtype=torch.float64)
secont condition:: tensor(2.7455e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0883e-07, dtype=torch.float64)
secont condition:: tensor(8.0883e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0208e-06, dtype=torch.float64)
secont condition:: tensor(2.0208e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5605e-06, dtype=torch.float64)
secont condition:: tensor(1.5605e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8769e-07, dtype=torch.float64)
secont condition:: tensor(9.8769e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.10815954208374
curr_diff: 0 tensor(3.6572e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1758e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3099e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1837e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.9611e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.2912e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0070, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.230984
Test Avg. Loss: 0.000024, Accuracy: 0.937600
Train - Epoch 1, Batch: 0, Loss: 0.252673
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.162512
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 3, Batch: 0, Loss: 0.158828
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 4, Batch: 0, Loss: 0.159135
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 5, Batch: 0, Loss: 0.154598
Test Avg. Loss: 0.000019, Accuracy: 0.939000
Train - Epoch 6, Batch: 0, Loss: 0.208706
Test Avg. Loss: 0.000118, Accuracy: 0.642800
Train - Epoch 7, Batch: 0, Loss: 1.202647
Test Avg. Loss: 0.000022, Accuracy: 0.947200
Train - Epoch 8, Batch: 0, Loss: 0.243433
Test Avg. Loss: 0.000017, Accuracy: 0.951300
Train - Epoch 9, Batch: 0, Loss: 0.184161
Test Avg. Loss: 0.000016, Accuracy: 0.953100
Train - Epoch 10, Batch: 0, Loss: 0.175110
Test Avg. Loss: 0.000016, Accuracy: 0.954300
Train - Epoch 11, Batch: 0, Loss: 0.171706
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 12, Batch: 0, Loss: 0.169800
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 13, Batch: 0, Loss: 0.165002
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 14, Batch: 0, Loss: 0.165284
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 15, Batch: 0, Loss: 0.163333
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 16, Batch: 0, Loss: 0.158052
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 17, Batch: 0, Loss: 0.149432
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 18, Batch: 0, Loss: 0.159142
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 19, Batch: 0, Loss: 0.154200
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 20, Batch: 0, Loss: 0.150717
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 21, Batch: 0, Loss: 0.157398
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 22, Batch: 0, Loss: 0.158100
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 23, Batch: 0, Loss: 0.151721
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 24, Batch: 0, Loss: 0.156552
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 25, Batch: 0, Loss: 0.151670
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 26, Batch: 0, Loss: 0.151668
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 27, Batch: 0, Loss: 0.154304
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 28, Batch: 0, Loss: 0.164774
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 29, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.960600
training_time:: 172.58242464065552
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.29736661911011
time_baseline:: 115.36125040054321
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0072, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6533e-07, dtype=torch.float64)
secont condition:: tensor(7.6533e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5090e-06, dtype=torch.float64)
secont condition:: tensor(1.5090e-06, dtype=torch.float64)
curr_secont condition:: tensor(-8.3230e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9872e-06, dtype=torch.float64)
secont condition:: tensor(2.9872e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1172e-06, dtype=torch.float64)
secont condition:: tensor(1.1172e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1111e-07, dtype=torch.float64)
secont condition:: tensor(2.1111e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6994e-08, dtype=torch.float64)
secont condition:: tensor(8.6994e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3537e-07, dtype=torch.float64)
secont condition:: tensor(1.3537e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8356e-08, dtype=torch.float64)
secont condition:: tensor(1.8356e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0140e-08, dtype=torch.float64)
secont condition:: tensor(9.0140e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2608e-08, dtype=torch.float64)
secont condition:: tensor(4.2608e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6361e-08, dtype=torch.float64)
secont condition:: tensor(3.6361e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8873e-08, dtype=torch.float64)
secont condition:: tensor(1.8873e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0059e-08, dtype=torch.float64)
secont condition:: tensor(4.0059e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5101e-10, dtype=torch.float64)
secont condition:: tensor(7.5101e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2779e-07, dtype=torch.float64)
secont condition:: tensor(1.2779e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4815e-08, dtype=torch.float64)
secont condition:: tensor(7.4815e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0757e-07, dtype=torch.float64)
secont condition:: tensor(1.0757e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3659e-07, dtype=torch.float64)
secont condition:: tensor(1.3659e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7447e-07, dtype=torch.float64)
secont condition:: tensor(2.7447e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3902e-05, dtype=torch.float64)
secont condition:: tensor(1.3902e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5391e-07, dtype=torch.float64)
secont condition:: tensor(4.5391e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5068e-07, dtype=torch.float64)
secont condition:: tensor(7.5068e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4679e-06, dtype=torch.float64)
secont condition:: tensor(2.4679e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0349e-05, dtype=torch.float64)
secont condition:: tensor(1.0349e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1674e-05, dtype=torch.float64)
secont condition:: tensor(2.1674e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7546e-05, dtype=torch.float64)
secont condition:: tensor(3.7546e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9969e-05, dtype=torch.float64)
secont condition:: tensor(4.9969e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0167e-06, dtype=torch.float64)
secont condition:: tensor(2.0167e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1090e-05, dtype=torch.float64)
secont condition:: tensor(4.1090e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4416e-05, dtype=torch.float64)
secont condition:: tensor(3.4416e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3963e-05, dtype=torch.float64)
secont condition:: tensor(2.3963e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2033e-06, dtype=torch.float64)
secont condition:: tensor(9.2033e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9651e-06, dtype=torch.float64)
secont condition:: tensor(1.9651e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8116e-06, dtype=torch.float64)
secont condition:: tensor(1.8116e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4735e-06, dtype=torch.float64)
secont condition:: tensor(4.4735e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6523e-06, dtype=torch.float64)
secont condition:: tensor(1.6523e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1514e-06, dtype=torch.float64)
secont condition:: tensor(6.1514e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.4107e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2310e-06, dtype=torch.float64)
secont condition:: tensor(1.2310e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2501e-07, dtype=torch.float64)
secont condition:: tensor(8.2501e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4235e-06, dtype=torch.float64)
secont condition:: tensor(2.4235e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3975e-06, dtype=torch.float64)
secont condition:: tensor(3.3975e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4175e-06, dtype=torch.float64)
secont condition:: tensor(8.4175e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2314e-05, dtype=torch.float64)
secont condition:: tensor(1.2314e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4129e-06, dtype=torch.float64)
secont condition:: tensor(1.4129e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0343e-06, dtype=torch.float64)
secont condition:: tensor(1.0343e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0503e-06, dtype=torch.float64)
secont condition:: tensor(3.0503e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6797e-06, dtype=torch.float64)
secont condition:: tensor(2.6797e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1226e-06, dtype=torch.float64)
secont condition:: tensor(2.1226e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3400e-06, dtype=torch.float64)
secont condition:: tensor(4.3400e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4340e-06, dtype=torch.float64)
secont condition:: tensor(1.4340e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1539e-06, dtype=torch.float64)
secont condition:: tensor(1.1539e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5432e-07, dtype=torch.float64)
secont condition:: tensor(6.5432e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2594e-07, dtype=torch.float64)
secont condition:: tensor(8.2594e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8384e-06, dtype=torch.float64)
secont condition:: tensor(3.8384e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2043e-06, dtype=torch.float64)
secont condition:: tensor(2.2043e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6769e-06, dtype=torch.float64)
secont condition:: tensor(3.6769e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8467e-06, dtype=torch.float64)
secont condition:: tensor(5.8467e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1912e-06, dtype=torch.float64)
secont condition:: tensor(2.1912e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6080e-06, dtype=torch.float64)
secont condition:: tensor(3.6080e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2969e-06, dtype=torch.float64)
secont condition:: tensor(7.2969e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5281e-06, dtype=torch.float64)
secont condition:: tensor(6.5281e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3922e-06, dtype=torch.float64)
secont condition:: tensor(2.3922e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7091e-06, dtype=torch.float64)
secont condition:: tensor(3.7091e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1058e-06, dtype=torch.float64)
secont condition:: tensor(3.1058e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0618e-06, dtype=torch.float64)
secont condition:: tensor(2.0618e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8671e-06, dtype=torch.float64)
secont condition:: tensor(3.8671e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1371e-06, dtype=torch.float64)
secont condition:: tensor(2.1371e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1605e-06, dtype=torch.float64)
secont condition:: tensor(4.1605e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0022e-06, dtype=torch.float64)
secont condition:: tensor(3.0022e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5991e-06, dtype=torch.float64)
secont condition:: tensor(2.5991e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6335e-06, dtype=torch.float64)
secont condition:: tensor(2.6335e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2454e-06, dtype=torch.float64)
secont condition:: tensor(3.2454e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3358e-06, dtype=torch.float64)
secont condition:: tensor(2.3358e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1831e-06, dtype=torch.float64)
secont condition:: tensor(2.1831e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3232e-06, dtype=torch.float64)
secont condition:: tensor(2.3232e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2940e-06, dtype=torch.float64)
secont condition:: tensor(2.2940e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.11536478996277
curr_diff: 0 tensor(5.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7180e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.9900e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2474e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.1538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.9154e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0072, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232508
Test Avg. Loss: 0.000024, Accuracy: 0.938700
Train - Epoch 1, Batch: 0, Loss: 0.257714
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.167331
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.162182
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 4, Batch: 0, Loss: 0.156599
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 5, Batch: 0, Loss: 0.156579
Test Avg. Loss: 0.000031, Accuracy: 0.896600
Train - Epoch 6, Batch: 0, Loss: 0.333360
Test Avg. Loss: 0.000028, Accuracy: 0.938200
Train - Epoch 7, Batch: 0, Loss: 0.307278
Test Avg. Loss: 0.000016, Accuracy: 0.953900
Train - Epoch 8, Batch: 0, Loss: 0.179693
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 9, Batch: 0, Loss: 0.169345
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 10, Batch: 0, Loss: 0.162508
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 11, Batch: 0, Loss: 0.166455
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.157749
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 13, Batch: 0, Loss: 0.159290
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 14, Batch: 0, Loss: 0.157349
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 15, Batch: 0, Loss: 0.151505
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.160899
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.155943
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 18, Batch: 0, Loss: 0.154469
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.151130
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.150960
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.155262
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.162516
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 23, Batch: 0, Loss: 0.153385
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.150113
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.154242
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.154961
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 27, Batch: 0, Loss: 0.155169
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.152879
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 29, Batch: 0, Loss: 0.149362
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 169.9904317855835
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.53796315193176
time_baseline:: 115.60413956642151
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.5114e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3317e-08, dtype=torch.float64)
secont condition:: tensor(4.3317e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8758e-08, dtype=torch.float64)
secont condition:: tensor(6.8758e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9764e-07, dtype=torch.float64)
secont condition:: tensor(7.9764e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4048e-06, dtype=torch.float64)
secont condition:: tensor(1.4048e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1811e-07, dtype=torch.float64)
secont condition:: tensor(3.1811e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1272e-07, dtype=torch.float64)
secont condition:: tensor(1.1272e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7558e-08, dtype=torch.float64)
secont condition:: tensor(3.7558e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9643e-08, dtype=torch.float64)
secont condition:: tensor(4.9643e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6053e-08, dtype=torch.float64)
secont condition:: tensor(5.6053e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5012e-08, dtype=torch.float64)
secont condition:: tensor(8.5012e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3215e-08, dtype=torch.float64)
secont condition:: tensor(2.3215e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7647e-08, dtype=torch.float64)
secont condition:: tensor(8.7647e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5271e-08, dtype=torch.float64)
secont condition:: tensor(5.5271e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3877e-08, dtype=torch.float64)
secont condition:: tensor(4.3877e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5049e-08, dtype=torch.float64)
secont condition:: tensor(4.5049e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2465e-08, dtype=torch.float64)
secont condition:: tensor(3.2465e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6954e-08, dtype=torch.float64)
secont condition:: tensor(2.6954e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5171e-08, dtype=torch.float64)
secont condition:: tensor(4.5171e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9318e-08, dtype=torch.float64)
secont condition:: tensor(4.9318e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0879e-08, dtype=torch.float64)
secont condition:: tensor(8.0879e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0063e-08, dtype=torch.float64)
secont condition:: tensor(8.0063e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7546e-07, dtype=torch.float64)
secont condition:: tensor(1.7546e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5767e-07, dtype=torch.float64)
secont condition:: tensor(4.5767e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3320e-06, dtype=torch.float64)
secont condition:: tensor(4.3320e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3419e-06, dtype=torch.float64)
secont condition:: tensor(2.3419e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.3416e-05, dtype=torch.float64)
secont condition:: tensor(8.3416e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.1096e-05, dtype=torch.float64)
secont condition:: tensor(9.1096e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6221e-05, dtype=torch.float64)
secont condition:: tensor(4.6221e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.0899e-06, dtype=torch.float64)
secont condition:: tensor(9.0899e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0698e-06, dtype=torch.float64)
secont condition:: tensor(2.0698e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3728e-07, dtype=torch.float64)
secont condition:: tensor(7.3728e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3988e-07, dtype=torch.float64)
secont condition:: tensor(7.3988e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7121e-07, dtype=torch.float64)
secont condition:: tensor(7.7121e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1409e-06, dtype=torch.float64)
secont condition:: tensor(1.1409e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0422e-07, dtype=torch.float64)
secont condition:: tensor(9.0422e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0958e-07, dtype=torch.float64)
secont condition:: tensor(9.0958e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5345e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7408e-07, dtype=torch.float64)
secont condition:: tensor(2.7408e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7224e-07, dtype=torch.float64)
secont condition:: tensor(1.7224e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2960e-07, dtype=torch.float64)
secont condition:: tensor(7.2960e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1917e-07, dtype=torch.float64)
secont condition:: tensor(7.1917e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8536e-07, dtype=torch.float64)
secont condition:: tensor(2.8536e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3342e-07, dtype=torch.float64)
secont condition:: tensor(6.3342e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6901e-07, dtype=torch.float64)
secont condition:: tensor(7.6901e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5453e-07, dtype=torch.float64)
secont condition:: tensor(6.5453e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4551e-07, dtype=torch.float64)
secont condition:: tensor(5.4551e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4876e-07, dtype=torch.float64)
secont condition:: tensor(4.4876e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1193e-07, dtype=torch.float64)
secont condition:: tensor(3.1193e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7087e-07, dtype=torch.float64)
secont condition:: tensor(5.7087e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7639e-06, dtype=torch.float64)
secont condition:: tensor(6.7639e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4146e-07, dtype=torch.float64)
secont condition:: tensor(2.4146e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7973e-07, dtype=torch.float64)
secont condition:: tensor(5.7973e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7672e-07, dtype=torch.float64)
secont condition:: tensor(5.7672e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4642e-07, dtype=torch.float64)
secont condition:: tensor(2.4642e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1292e-07, dtype=torch.float64)
secont condition:: tensor(6.1292e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2042e-07, dtype=torch.float64)
secont condition:: tensor(5.2042e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2219e-07, dtype=torch.float64)
secont condition:: tensor(4.2219e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9093e-07, dtype=torch.float64)
secont condition:: tensor(3.9093e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6367e-07, dtype=torch.float64)
secont condition:: tensor(1.6367e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5550e-07, dtype=torch.float64)
secont condition:: tensor(1.5550e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7911e-07, dtype=torch.float64)
secont condition:: tensor(2.7911e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9942e-07, dtype=torch.float64)
secont condition:: tensor(2.9942e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.5840e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2426e-07, dtype=torch.float64)
secont condition:: tensor(3.2426e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2195e-07, dtype=torch.float64)
secont condition:: tensor(3.2195e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7050e-07, dtype=torch.float64)
secont condition:: tensor(2.7050e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4726e-07, dtype=torch.float64)
secont condition:: tensor(4.4726e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4180e-07, dtype=torch.float64)
secont condition:: tensor(7.4180e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9946e-07, dtype=torch.float64)
secont condition:: tensor(4.9946e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4895e-07, dtype=torch.float64)
secont condition:: tensor(5.4895e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1079e-07, dtype=torch.float64)
secont condition:: tensor(1.1079e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8095e-07, dtype=torch.float64)
secont condition:: tensor(2.8095e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2705e-07, dtype=torch.float64)
secont condition:: tensor(3.2705e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1959e-07, dtype=torch.float64)
secont condition:: tensor(2.1959e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7494e-07, dtype=torch.float64)
secont condition:: tensor(1.7494e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5075e-07, dtype=torch.float64)
secont condition:: tensor(3.5075e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5407e-07, dtype=torch.float64)
secont condition:: tensor(1.5407e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6519e-07, dtype=torch.float64)
secont condition:: tensor(1.6519e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4550e-07, dtype=torch.float64)
secont condition:: tensor(3.4550e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.553504467010498
curr_diff: 0 tensor(1.7094e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0740e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0502e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.7586e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4455e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.5027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.4432e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7203e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239342
Test Avg. Loss: 0.000022, Accuracy: 0.944200
Train - Epoch 1, Batch: 0, Loss: 0.244418
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.163190
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 3, Batch: 0, Loss: 0.162353
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 4, Batch: 0, Loss: 0.155930
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 5, Batch: 0, Loss: 0.158709
Test Avg. Loss: 0.000024, Accuracy: 0.920200
Train - Epoch 6, Batch: 0, Loss: 0.268281
Test Avg. Loss: 0.000080, Accuracy: 0.768700
Train - Epoch 7, Batch: 0, Loss: 0.827619
Test Avg. Loss: 0.000020, Accuracy: 0.948000
Train - Epoch 8, Batch: 0, Loss: 0.216607
Test Avg. Loss: 0.000016, Accuracy: 0.954000
Train - Epoch 9, Batch: 0, Loss: 0.181598
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 10, Batch: 0, Loss: 0.168798
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 11, Batch: 0, Loss: 0.163880
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 12, Batch: 0, Loss: 0.169697
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 13, Batch: 0, Loss: 0.159546
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 14, Batch: 0, Loss: 0.157917
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 15, Batch: 0, Loss: 0.160205
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 16, Batch: 0, Loss: 0.159905
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 17, Batch: 0, Loss: 0.152501
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.154016
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 19, Batch: 0, Loss: 0.155265
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.154211
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 21, Batch: 0, Loss: 0.151403
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.156602
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.152415
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.155987
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.158387
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.157168
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.151802
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.155072
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.153239
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 168.69778490066528
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.13806414604187
time_baseline:: 116.2018711566925
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0149, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0059, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0200, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1530e-07, dtype=torch.float64)
secont condition:: tensor(9.1530e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8719e-06, dtype=torch.float64)
secont condition:: tensor(1.8719e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9560e-08, dtype=torch.float64)
secont condition:: tensor(6.9560e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6347e-06, dtype=torch.float64)
secont condition:: tensor(2.6347e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0928e-07, dtype=torch.float64)
secont condition:: tensor(4.0928e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0805e-07, dtype=torch.float64)
secont condition:: tensor(2.0805e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7579e-06, dtype=torch.float64)
secont condition:: tensor(7.7579e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7491e-08, dtype=torch.float64)
secont condition:: tensor(5.7491e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3659e-08, dtype=torch.float64)
secont condition:: tensor(4.3659e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2480e-08, dtype=torch.float64)
secont condition:: tensor(7.2480e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0597e-06, dtype=torch.float64)
secont condition:: tensor(1.0597e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6144e-06, dtype=torch.float64)
secont condition:: tensor(3.6144e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9473e-08, dtype=torch.float64)
secont condition:: tensor(5.9473e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5452e-08, dtype=torch.float64)
secont condition:: tensor(8.5452e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2958e-08, dtype=torch.float64)
secont condition:: tensor(2.2958e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7394e-08, dtype=torch.float64)
secont condition:: tensor(8.7394e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4085e-08, dtype=torch.float64)
secont condition:: tensor(3.4085e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3436e-07, dtype=torch.float64)
secont condition:: tensor(1.3436e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0330e-07, dtype=torch.float64)
secont condition:: tensor(1.0330e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4520e-07, dtype=torch.float64)
secont condition:: tensor(2.4520e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5773e-07, dtype=torch.float64)
secont condition:: tensor(7.5773e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0838e-06, dtype=torch.float64)
secont condition:: tensor(2.0838e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4333e-06, dtype=torch.float64)
secont condition:: tensor(8.4333e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5549e-05, dtype=torch.float64)
secont condition:: tensor(3.5549e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9894e-05, dtype=torch.float64)
secont condition:: tensor(5.9894e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-5.5592e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(4.5548e-05, dtype=torch.float64)
secont condition:: tensor(4.5548e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.1871e-05, dtype=torch.float64)
secont condition:: tensor(8.1871e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.3488e-05, dtype=torch.float64)
secont condition:: tensor(6.3488e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0111e-05, dtype=torch.float64)
secont condition:: tensor(5.0111e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5358e-05, dtype=torch.float64)
secont condition:: tensor(6.5358e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(2.2865e-05, dtype=torch.float64)
secont condition:: tensor(2.2865e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8052e-05, dtype=torch.float64)
secont condition:: tensor(7.8052e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.6715e-05, dtype=torch.float64)
secont condition:: tensor(6.6715e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.5344e-05, dtype=torch.float64)
secont condition:: tensor(9.5344e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.4094e-05, dtype=torch.float64)
secont condition:: tensor(7.4094e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1386e-05, dtype=torch.float64)
secont condition:: tensor(6.1386e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8684e-05, dtype=torch.float64)
secont condition:: tensor(9.8684e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6898e-05, dtype=torch.float64)
secont condition:: tensor(4.6898e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1553e-05, dtype=torch.float64)
secont condition:: tensor(5.1553e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9259e-05, dtype=torch.float64)
secont condition:: tensor(4.9259e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.5128e-05, dtype=torch.float64)
secont condition:: tensor(7.5128e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4489e-05, dtype=torch.float64)
secont condition:: tensor(5.4489e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3957e-06, dtype=torch.float64)
secont condition:: tensor(9.3957e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0937e-05, dtype=torch.float64)
secont condition:: tensor(5.0937e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4762e-05, dtype=torch.float64)
secont condition:: tensor(5.4762e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.7870e-05, dtype=torch.float64)
secont condition:: tensor(6.7870e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3623e-05, dtype=torch.float64)
secont condition:: tensor(2.3623e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1455e-05, dtype=torch.float64)
secont condition:: tensor(4.1455e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0681e-05, dtype=torch.float64)
secont condition:: tensor(5.0681e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0939e-05, dtype=torch.float64)
secont condition:: tensor(4.0939e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0774e-05, dtype=torch.float64)
secont condition:: tensor(1.0774e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4799e-05, dtype=torch.float64)
secont condition:: tensor(4.4799e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8974e-05, dtype=torch.float64)
secont condition:: tensor(4.8974e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6436e-05, dtype=torch.float64)
secont condition:: tensor(5.6436e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5771e-05, dtype=torch.float64)
secont condition:: tensor(4.5771e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4416e-05, dtype=torch.float64)
secont condition:: tensor(2.4416e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0714e-05, dtype=torch.float64)
secont condition:: tensor(3.0714e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6982e-05, dtype=torch.float64)
secont condition:: tensor(3.6982e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2928e-05, dtype=torch.float64)
secont condition:: tensor(2.2928e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2537e-05, dtype=torch.float64)
secont condition:: tensor(3.2537e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0594e-05, dtype=torch.float64)
secont condition:: tensor(3.0594e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2776e-05, dtype=torch.float64)
secont condition:: tensor(1.2776e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8776e-05, dtype=torch.float64)
secont condition:: tensor(1.8776e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3548e-05, dtype=torch.float64)
secont condition:: tensor(2.3548e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2590e-05, dtype=torch.float64)
secont condition:: tensor(1.2590e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5311e-05, dtype=torch.float64)
secont condition:: tensor(1.5311e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8797e-05, dtype=torch.float64)
secont condition:: tensor(1.8797e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5101e-05, dtype=torch.float64)
secont condition:: tensor(2.5101e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0176e-05, dtype=torch.float64)
secont condition:: tensor(1.0176e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1016e-05, dtype=torch.float64)
secont condition:: tensor(2.1016e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.045985460281372
curr_diff: 0 tensor(7.2718e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7253e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9107e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.8618e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0147, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0077, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0059, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0199, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233466
Test Avg. Loss: 0.000025, Accuracy: 0.938900
Train - Epoch 1, Batch: 0, Loss: 0.275652
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 2, Batch: 0, Loss: 0.171503
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.162849
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.154641
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 5, Batch: 0, Loss: 0.172198
Test Avg. Loss: 0.000048, Accuracy: 0.827500
Train - Epoch 6, Batch: 0, Loss: 0.516107
Test Avg. Loss: 0.000022, Accuracy: 0.946700
Train - Epoch 7, Batch: 0, Loss: 0.238468
Test Avg. Loss: 0.000016, Accuracy: 0.955800
Train - Epoch 8, Batch: 0, Loss: 0.167761
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 9, Batch: 0, Loss: 0.162435
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 10, Batch: 0, Loss: 0.159905
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 11, Batch: 0, Loss: 0.158051
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.154498
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 13, Batch: 0, Loss: 0.149989
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 14, Batch: 0, Loss: 0.155889
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 15, Batch: 0, Loss: 0.159099
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 16, Batch: 0, Loss: 0.152939
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.153721
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.148932
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.155671
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.149913
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.151189
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.149632
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.153795
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 24, Batch: 0, Loss: 0.156242
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.155335
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.158622
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.152594
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.158540
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.153930
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 173.2363977432251
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.07843136787415
time_baseline:: 116.1430983543396
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.2213e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3597e-07, dtype=torch.float64)
secont condition:: tensor(9.3597e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7077e-06, dtype=torch.float64)
secont condition:: tensor(1.7077e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1477e-07, dtype=torch.float64)
secont condition:: tensor(8.1477e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5932e-06, dtype=torch.float64)
secont condition:: tensor(4.5932e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0322e-06, dtype=torch.float64)
secont condition:: tensor(1.0322e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7328e-07, dtype=torch.float64)
secont condition:: tensor(2.7328e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6575e-07, dtype=torch.float64)
secont condition:: tensor(1.6575e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0407e-07, dtype=torch.float64)
secont condition:: tensor(1.0407e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2332e-08, dtype=torch.float64)
secont condition:: tensor(9.2332e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6488e-08, dtype=torch.float64)
secont condition:: tensor(7.6488e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4071e-08, dtype=torch.float64)
secont condition:: tensor(8.4071e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1846e-08, dtype=torch.float64)
secont condition:: tensor(5.1846e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8354e-08, dtype=torch.float64)
secont condition:: tensor(4.8354e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3628e-08, dtype=torch.float64)
secont condition:: tensor(6.3628e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0843e-08, dtype=torch.float64)
secont condition:: tensor(3.0843e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7245e-08, dtype=torch.float64)
secont condition:: tensor(3.7245e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9912e-08, dtype=torch.float64)
secont condition:: tensor(3.9912e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3153e-08, dtype=torch.float64)
secont condition:: tensor(1.3153e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8006e-08, dtype=torch.float64)
secont condition:: tensor(3.8006e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6456e-07, dtype=torch.float64)
secont condition:: tensor(1.6456e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1182e-07, dtype=torch.float64)
secont condition:: tensor(5.1182e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5838e-06, dtype=torch.float64)
secont condition:: tensor(1.5838e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6928e-06, dtype=torch.float64)
secont condition:: tensor(3.6928e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9701e-06, dtype=torch.float64)
secont condition:: tensor(1.9701e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6109e-05, dtype=torch.float64)
secont condition:: tensor(2.6109e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8096e-05, dtype=torch.float64)
secont condition:: tensor(5.8096e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5666e-05, dtype=torch.float64)
secont condition:: tensor(5.5666e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9266e-05, dtype=torch.float64)
secont condition:: tensor(1.9266e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5612e-06, dtype=torch.float64)
secont condition:: tensor(5.5612e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7721e-06, dtype=torch.float64)
secont condition:: tensor(2.7721e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7168e-06, dtype=torch.float64)
secont condition:: tensor(2.7168e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6598e-06, dtype=torch.float64)
secont condition:: tensor(1.6598e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2120e-06, dtype=torch.float64)
secont condition:: tensor(1.2120e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3053e-07, dtype=torch.float64)
secont condition:: tensor(6.3053e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9834e-07, dtype=torch.float64)
secont condition:: tensor(9.9834e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2317e-07, dtype=torch.float64)
secont condition:: tensor(9.2317e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2591e-06, dtype=torch.float64)
secont condition:: tensor(1.2591e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9681e-06, dtype=torch.float64)
secont condition:: tensor(1.9681e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6926e-06, dtype=torch.float64)
secont condition:: tensor(6.6926e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5735e-07, dtype=torch.float64)
secont condition:: tensor(5.5735e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4864e-07, dtype=torch.float64)
secont condition:: tensor(6.4864e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1973e-07, dtype=torch.float64)
secont condition:: tensor(4.1973e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2507e-07, dtype=torch.float64)
secont condition:: tensor(8.2507e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7582e-06, dtype=torch.float64)
secont condition:: tensor(1.7582e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8015e-07, dtype=torch.float64)
secont condition:: tensor(5.8015e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5615e-07, dtype=torch.float64)
secont condition:: tensor(5.5615e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8511e-07, dtype=torch.float64)
secont condition:: tensor(7.8511e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0465e-07, dtype=torch.float64)
secont condition:: tensor(4.0465e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7930e-06, dtype=torch.float64)
secont condition:: tensor(1.7930e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5005e-07, dtype=torch.float64)
secont condition:: tensor(2.5005e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4133e-07, dtype=torch.float64)
secont condition:: tensor(4.4133e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9046e-07, dtype=torch.float64)
secont condition:: tensor(3.9046e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8722e-07, dtype=torch.float64)
secont condition:: tensor(3.8722e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2553e-06, dtype=torch.float64)
secont condition:: tensor(1.2553e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5385e-07, dtype=torch.float64)
secont condition:: tensor(2.5385e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3997e-06, dtype=torch.float64)
secont condition:: tensor(1.3997e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8804e-07, dtype=torch.float64)
secont condition:: tensor(3.8804e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9188e-07, dtype=torch.float64)
secont condition:: tensor(1.9188e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6243e-07, dtype=torch.float64)
secont condition:: tensor(5.6243e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4600e-07, dtype=torch.float64)
secont condition:: tensor(2.4600e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3757e-06, dtype=torch.float64)
secont condition:: tensor(1.3757e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5605e-08, dtype=torch.float64)
secont condition:: tensor(7.5605e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6594e-07, dtype=torch.float64)
secont condition:: tensor(3.6594e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8379e-07, dtype=torch.float64)
secont condition:: tensor(2.8379e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0294e-07, dtype=torch.float64)
secont condition:: tensor(5.0294e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7462e-07, dtype=torch.float64)
secont condition:: tensor(2.7462e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5206e-07, dtype=torch.float64)
secont condition:: tensor(2.5206e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9034e-07, dtype=torch.float64)
secont condition:: tensor(2.9034e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3118e-07, dtype=torch.float64)
secont condition:: tensor(3.3118e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3266e-07, dtype=torch.float64)
secont condition:: tensor(2.3266e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0513e-07, dtype=torch.float64)
secont condition:: tensor(3.0513e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3718e-07, dtype=torch.float64)
secont condition:: tensor(3.3718e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4752e-07, dtype=torch.float64)
secont condition:: tensor(2.4752e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0591e-07, dtype=torch.float64)
secont condition:: tensor(3.0591e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8079e-07, dtype=torch.float64)
secont condition:: tensor(1.8079e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6501e-07, dtype=torch.float64)
secont condition:: tensor(2.6501e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7477e-07, dtype=torch.float64)
secont condition:: tensor(1.7477e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1180e-07, dtype=torch.float64)
secont condition:: tensor(2.1180e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.262450695037842
curr_diff: 0 tensor(2.0413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3915e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3324e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.4906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.8893e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6806e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7266e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
random set 4
python3 generate_rand_ids 0.0001  MNIST
tensor([39750, 52684,  6926, 57520, 32218, 10110])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243503
Test Avg. Loss: 0.000026, Accuracy: 0.935700
Train - Epoch 1, Batch: 0, Loss: 0.272446
Test Avg. Loss: 0.000016, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.170173
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 3, Batch: 0, Loss: 0.161796
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 4, Batch: 0, Loss: 0.155453
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.157955
Test Avg. Loss: 0.000020, Accuracy: 0.940700
Train - Epoch 6, Batch: 0, Loss: 0.214243
Test Avg. Loss: 0.000055, Accuracy: 0.830900
Train - Epoch 7, Batch: 0, Loss: 0.583854
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 8, Batch: 0, Loss: 0.187354
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 9, Batch: 0, Loss: 0.167968
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 10, Batch: 0, Loss: 0.164223
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 11, Batch: 0, Loss: 0.163863
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 12, Batch: 0, Loss: 0.154395
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 13, Batch: 0, Loss: 0.150463
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 14, Batch: 0, Loss: 0.159094
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.161122
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 16, Batch: 0, Loss: 0.158882
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 17, Batch: 0, Loss: 0.156025
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 18, Batch: 0, Loss: 0.158293
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 19, Batch: 0, Loss: 0.155023
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 20, Batch: 0, Loss: 0.155313
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 21, Batch: 0, Loss: 0.151494
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.156153
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 23, Batch: 0, Loss: 0.151798
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 24, Batch: 0, Loss: 0.156536
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.147392
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 26, Batch: 0, Loss: 0.156017
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.152457
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.152310
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 29, Batch: 0, Loss: 0.152912
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 170.9496009349823
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.50947785377502
time_baseline:: 116.57368206977844
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0051, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1234e-08, dtype=torch.float64)
secont condition:: tensor(2.1234e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0311e-08, dtype=torch.float64)
secont condition:: tensor(4.0311e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0956e-08, dtype=torch.float64)
secont condition:: tensor(3.0956e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9593e-08, dtype=torch.float64)
secont condition:: tensor(8.9593e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5690e-08, dtype=torch.float64)
secont condition:: tensor(4.5690e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1655e-08, dtype=torch.float64)
secont condition:: tensor(2.1655e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.3710e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4797e-08, dtype=torch.float64)
secont condition:: tensor(7.4797e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9133e-08, dtype=torch.float64)
secont condition:: tensor(6.9133e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1480e-08, dtype=torch.float64)
secont condition:: tensor(9.1480e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0456e-08, dtype=torch.float64)
secont condition:: tensor(6.0456e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4481e-08, dtype=torch.float64)
secont condition:: tensor(2.4481e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1500e-08, dtype=torch.float64)
secont condition:: tensor(5.1500e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6243e-08, dtype=torch.float64)
secont condition:: tensor(6.6243e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4461e-08, dtype=torch.float64)
secont condition:: tensor(3.4461e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9015e-08, dtype=torch.float64)
secont condition:: tensor(2.9015e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0712e-08, dtype=torch.float64)
secont condition:: tensor(3.0712e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6758e-08, dtype=torch.float64)
secont condition:: tensor(7.6758e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4434e-08, dtype=torch.float64)
secont condition:: tensor(8.4434e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5141e-08, dtype=torch.float64)
secont condition:: tensor(9.5141e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2480e-07, dtype=torch.float64)
secont condition:: tensor(1.2480e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8137e-07, dtype=torch.float64)
secont condition:: tensor(1.8137e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9092e-07, dtype=torch.float64)
secont condition:: tensor(4.9092e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0254e-06, dtype=torch.float64)
secont condition:: tensor(1.0254e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4176e-06, dtype=torch.float64)
secont condition:: tensor(7.4176e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.5244e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(6.7847e-05, dtype=torch.float64)
secont condition:: tensor(6.7847e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7549e-05, dtype=torch.float64)
secont condition:: tensor(1.7549e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1984e-06, dtype=torch.float64)
secont condition:: tensor(5.1984e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0522e-06, dtype=torch.float64)
secont condition:: tensor(4.0522e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2956e-06, dtype=torch.float64)
secont condition:: tensor(3.2956e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1504e-06, dtype=torch.float64)
secont condition:: tensor(2.1504e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3597e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.4144e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4230e-06, dtype=torch.float64)
secont condition:: tensor(2.4230e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.1127e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2048e-06, dtype=torch.float64)
secont condition:: tensor(2.2048e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1052e-06, dtype=torch.float64)
secont condition:: tensor(4.1052e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5758e-06, dtype=torch.float64)
secont condition:: tensor(8.5758e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2202e-07, dtype=torch.float64)
secont condition:: tensor(8.2202e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6184e-06, dtype=torch.float64)
secont condition:: tensor(3.6184e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.0521e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0314e-07, dtype=torch.float64)
secont condition:: tensor(3.0314e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7734e-06, dtype=torch.float64)
secont condition:: tensor(2.7734e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2773e-06, dtype=torch.float64)
secont condition:: tensor(3.2773e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0314e-07, dtype=torch.float64)
secont condition:: tensor(3.0314e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5782e-06, dtype=torch.float64)
secont condition:: tensor(3.5782e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8763e-06, dtype=torch.float64)
secont condition:: tensor(5.8763e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9490e-06, dtype=torch.float64)
secont condition:: tensor(3.9490e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7078e-06, dtype=torch.float64)
secont condition:: tensor(3.7078e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6760e-06, dtype=torch.float64)
secont condition:: tensor(7.6760e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0688e-06, dtype=torch.float64)
secont condition:: tensor(2.0688e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8065e-06, dtype=torch.float64)
secont condition:: tensor(3.8065e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0144e-06, dtype=torch.float64)
secont condition:: tensor(2.0144e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6144e-06, dtype=torch.float64)
secont condition:: tensor(3.6144e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7327e-06, dtype=torch.float64)
secont condition:: tensor(1.7327e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5575e-06, dtype=torch.float64)
secont condition:: tensor(3.5575e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4704e-06, dtype=torch.float64)
secont condition:: tensor(2.4704e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2675e-06, dtype=torch.float64)
secont condition:: tensor(2.2675e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2153e-06, dtype=torch.float64)
secont condition:: tensor(2.2153e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2748e-06, dtype=torch.float64)
secont condition:: tensor(1.2748e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4272e-07, dtype=torch.float64)
secont condition:: tensor(4.4272e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9201e-06, dtype=torch.float64)
secont condition:: tensor(1.9201e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1878e-06, dtype=torch.float64)
secont condition:: tensor(1.1878e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9217e-06, dtype=torch.float64)
secont condition:: tensor(1.9217e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5538e-06, dtype=torch.float64)
secont condition:: tensor(1.5538e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3104e-07, dtype=torch.float64)
secont condition:: tensor(8.3104e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2579e-07, dtype=torch.float64)
secont condition:: tensor(9.2579e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4146e-06, dtype=torch.float64)
secont condition:: tensor(1.4146e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0775e-06, dtype=torch.float64)
secont condition:: tensor(1.0775e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0349e-06, dtype=torch.float64)
secont condition:: tensor(1.0349e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0233e-06, dtype=torch.float64)
secont condition:: tensor(1.0233e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7618e-07, dtype=torch.float64)
secont condition:: tensor(9.7618e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5348e-06, dtype=torch.float64)
secont condition:: tensor(1.5348e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0943e-07, dtype=torch.float64)
secont condition:: tensor(9.0943e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.0796902179718
curr_diff: 0 tensor(3.0705e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.7665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1840e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0053, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233567
Test Avg. Loss: 0.000026, Accuracy: 0.932600
Train - Epoch 1, Batch: 0, Loss: 0.277444
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.166799
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.163569
Test Avg. Loss: 0.000014, Accuracy: 0.957200
Train - Epoch 4, Batch: 0, Loss: 0.155990
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.151697
Test Avg. Loss: 0.000017, Accuracy: 0.947800
Train - Epoch 6, Batch: 0, Loss: 0.192513
Test Avg. Loss: 0.000059, Accuracy: 0.851100
Train - Epoch 7, Batch: 0, Loss: 0.612596
Test Avg. Loss: 0.000017, Accuracy: 0.954500
Train - Epoch 8, Batch: 0, Loss: 0.178996
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 9, Batch: 0, Loss: 0.167729
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 10, Batch: 0, Loss: 0.160600
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 11, Batch: 0, Loss: 0.163173
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 12, Batch: 0, Loss: 0.152878
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.161138
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 14, Batch: 0, Loss: 0.150825
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 15, Batch: 0, Loss: 0.153274
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.153593
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.155824
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 18, Batch: 0, Loss: 0.152629
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.160667
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.156393
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 21, Batch: 0, Loss: 0.153574
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.150507
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.152949
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.158283
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.156786
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.159535
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.150422
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.151719
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.158304
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 171.1301052570343
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.75576114654541
time_baseline:: 115.8199634552002
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0067, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0038, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0092, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6914e-08, dtype=torch.float64)
secont condition:: tensor(5.6914e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6453e-07, dtype=torch.float64)
secont condition:: tensor(2.6453e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0077e-07, dtype=torch.float64)
secont condition:: tensor(1.0077e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0239e-07, dtype=torch.float64)
secont condition:: tensor(5.0239e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2955e-07, dtype=torch.float64)
secont condition:: tensor(1.2955e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7479e-08, dtype=torch.float64)
secont condition:: tensor(9.7479e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3968e-08, dtype=torch.float64)
secont condition:: tensor(9.3968e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0122e-08, dtype=torch.float64)
secont condition:: tensor(4.0122e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4201e-08, dtype=torch.float64)
secont condition:: tensor(2.4201e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0802e-08, dtype=torch.float64)
secont condition:: tensor(4.0802e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8770e-08, dtype=torch.float64)
secont condition:: tensor(8.8770e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7256e-08, dtype=torch.float64)
secont condition:: tensor(3.7256e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7116e-08, dtype=torch.float64)
secont condition:: tensor(1.7116e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7741e-08, dtype=torch.float64)
secont condition:: tensor(8.7741e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8184e-08, dtype=torch.float64)
secont condition:: tensor(8.8184e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5766e-08, dtype=torch.float64)
secont condition:: tensor(6.5766e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0833e-08, dtype=torch.float64)
secont condition:: tensor(8.0833e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5613e-07, dtype=torch.float64)
secont condition:: tensor(2.5613e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2911e-07, dtype=torch.float64)
secont condition:: tensor(2.2911e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8395e-07, dtype=torch.float64)
secont condition:: tensor(3.8395e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0806e-07, dtype=torch.float64)
secont condition:: tensor(7.0806e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4725e-06, dtype=torch.float64)
secont condition:: tensor(1.4725e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4273e-06, dtype=torch.float64)
secont condition:: tensor(3.4273e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4451e-05, dtype=torch.float64)
secont condition:: tensor(1.4451e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9879e-05, dtype=torch.float64)
secont condition:: tensor(4.9879e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0021, dtype=torch.float64)
secont condition:: tensor(0.0021, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1425e-05, dtype=torch.float64)
secont condition:: tensor(2.1425e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0711e-05, dtype=torch.float64)
secont condition:: tensor(2.0711e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3000e-05, dtype=torch.float64)
secont condition:: tensor(2.3000e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4229e-05, dtype=torch.float64)
secont condition:: tensor(1.4229e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-05, dtype=torch.float64)
secont condition:: tensor(1.0780e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.5819e-06, dtype=torch.float64)
secont condition:: tensor(9.5819e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0227e-05, dtype=torch.float64)
secont condition:: tensor(1.0227e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.4339e-06, dtype=torch.float64)
secont condition:: tensor(9.4339e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3171e-06, dtype=torch.float64)
secont condition:: tensor(8.3171e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1322e-06, dtype=torch.float64)
secont condition:: tensor(9.1322e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0414e-06, dtype=torch.float64)
secont condition:: tensor(7.0414e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0196e-06, dtype=torch.float64)
secont condition:: tensor(9.0196e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0254e-06, dtype=torch.float64)
secont condition:: tensor(8.0254e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9381e-06, dtype=torch.float64)
secont condition:: tensor(5.9381e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3620e-06, dtype=torch.float64)
secont condition:: tensor(6.3620e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5557e-06, dtype=torch.float64)
secont condition:: tensor(9.5557e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8445e-06, dtype=torch.float64)
secont condition:: tensor(6.8445e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8294e-06, dtype=torch.float64)
secont condition:: tensor(3.8294e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0787e-06, dtype=torch.float64)
secont condition:: tensor(4.0787e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9897e-06, dtype=torch.float64)
secont condition:: tensor(7.9897e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0684e-06, dtype=torch.float64)
secont condition:: tensor(6.0684e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1017e-06, dtype=torch.float64)
secont condition:: tensor(8.1017e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6955e-06, dtype=torch.float64)
secont condition:: tensor(4.6955e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2830e-06, dtype=torch.float64)
secont condition:: tensor(6.2830e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4122e-06, dtype=torch.float64)
secont condition:: tensor(7.4122e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4889e-06, dtype=torch.float64)
secont condition:: tensor(3.4889e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7331e-06, dtype=torch.float64)
secont condition:: tensor(4.7331e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1675e-06, dtype=torch.float64)
secont condition:: tensor(7.1675e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7477e-06, dtype=torch.float64)
secont condition:: tensor(4.7477e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2619e-06, dtype=torch.float64)
secont condition:: tensor(9.2619e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6566e-06, dtype=torch.float64)
secont condition:: tensor(5.6566e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6584e-06, dtype=torch.float64)
secont condition:: tensor(4.6584e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9609e-06, dtype=torch.float64)
secont condition:: tensor(2.9609e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0542e-06, dtype=torch.float64)
secont condition:: tensor(4.0542e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1883e-06, dtype=torch.float64)
secont condition:: tensor(3.1883e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6072e-06, dtype=torch.float64)
secont condition:: tensor(1.6072e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8774e-06, dtype=torch.float64)
secont condition:: tensor(2.8774e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2345e-06, dtype=torch.float64)
secont condition:: tensor(4.2345e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3175e-06, dtype=torch.float64)
secont condition:: tensor(1.3175e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9901e-06, dtype=torch.float64)
secont condition:: tensor(2.9901e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7503e-06, dtype=torch.float64)
secont condition:: tensor(3.7503e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7544e-06, dtype=torch.float64)
secont condition:: tensor(2.7544e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0946e-06, dtype=torch.float64)
secont condition:: tensor(1.0946e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6014e-06, dtype=torch.float64)
secont condition:: tensor(1.6014e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8776e-06, dtype=torch.float64)
secont condition:: tensor(2.8776e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9389e-06, dtype=torch.float64)
secont condition:: tensor(2.9389e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2693e-06, dtype=torch.float64)
secont condition:: tensor(3.2693e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8682e-06, dtype=torch.float64)
secont condition:: tensor(2.8682e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.12741732597351
curr_diff: 0 tensor(2.9738e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6936e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.5972e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6294e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.7355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0038, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0093, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237802
Test Avg. Loss: 0.000026, Accuracy: 0.935700
Train - Epoch 1, Batch: 0, Loss: 0.278851
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 2, Batch: 0, Loss: 0.169445
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.162623
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 4, Batch: 0, Loss: 0.157876
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 5, Batch: 0, Loss: 0.162721
Test Avg. Loss: 0.000026, Accuracy: 0.911800
Train - Epoch 6, Batch: 0, Loss: 0.286135
Test Avg. Loss: 0.000033, Accuracy: 0.921100
Train - Epoch 7, Batch: 0, Loss: 0.353643
Test Avg. Loss: 0.000016, Accuracy: 0.955400
Train - Epoch 8, Batch: 0, Loss: 0.174386
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 9, Batch: 0, Loss: 0.167136
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 10, Batch: 0, Loss: 0.166125
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 11, Batch: 0, Loss: 0.157605
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 12, Batch: 0, Loss: 0.155775
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.153100
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 14, Batch: 0, Loss: 0.151404
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 15, Batch: 0, Loss: 0.154626
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 16, Batch: 0, Loss: 0.152665
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 17, Batch: 0, Loss: 0.153830
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 18, Batch: 0, Loss: 0.157124
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.148917
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.150768
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 21, Batch: 0, Loss: 0.151667
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.151480
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 23, Batch: 0, Loss: 0.154109
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 24, Batch: 0, Loss: 0.158171
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.152267
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.151287
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.153729
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.146814
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.153586
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 170.95853996276855
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.96717357635498
time_baseline:: 116.03568148612976
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.6355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0037, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0049, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0087e-08, dtype=torch.float64)
secont condition:: tensor(5.0087e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5998e-08, dtype=torch.float64)
secont condition:: tensor(7.5998e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.4097e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8515e-07, dtype=torch.float64)
secont condition:: tensor(4.8515e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1075e-08, dtype=torch.float64)
secont condition:: tensor(9.1075e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2341e-08, dtype=torch.float64)
secont condition:: tensor(4.2341e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2917e-08, dtype=torch.float64)
secont condition:: tensor(2.2917e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2190e-08, dtype=torch.float64)
secont condition:: tensor(6.2190e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1415e-08, dtype=torch.float64)
secont condition:: tensor(4.1415e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6888e-08, dtype=torch.float64)
secont condition:: tensor(2.6888e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0254e-08, dtype=torch.float64)
secont condition:: tensor(2.0254e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4713e-07, dtype=torch.float64)
secont condition:: tensor(1.4713e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3451e-08, dtype=torch.float64)
secont condition:: tensor(9.3451e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8352e-07, dtype=torch.float64)
secont condition:: tensor(1.8352e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6433e-08, dtype=torch.float64)
secont condition:: tensor(8.6433e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3764e-08, dtype=torch.float64)
secont condition:: tensor(4.3764e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0518e-08, dtype=torch.float64)
secont condition:: tensor(8.0518e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3199e-07, dtype=torch.float64)
secont condition:: tensor(4.3199e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2115e-07, dtype=torch.float64)
secont condition:: tensor(5.2115e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3685e-07, dtype=torch.float64)
secont condition:: tensor(7.3685e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0027e-06, dtype=torch.float64)
secont condition:: tensor(1.0027e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6094e-06, dtype=torch.float64)
secont condition:: tensor(1.6094e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7127e-06, dtype=torch.float64)
secont condition:: tensor(3.7127e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4316e-06, dtype=torch.float64)
secont condition:: tensor(7.4316e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.9153e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(7.5878e-05, dtype=torch.float64)
secont condition:: tensor(7.5878e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2893e-05, dtype=torch.float64)
secont condition:: tensor(2.2893e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0863e-05, dtype=torch.float64)
secont condition:: tensor(1.0863e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4176e-06, dtype=torch.float64)
secont condition:: tensor(7.4176e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2735e-06, dtype=torch.float64)
secont condition:: tensor(4.2735e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5270e-06, dtype=torch.float64)
secont condition:: tensor(4.5270e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5911e-06, dtype=torch.float64)
secont condition:: tensor(4.5911e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3541e-06, dtype=torch.float64)
secont condition:: tensor(4.3541e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1812e-06, dtype=torch.float64)
secont condition:: tensor(5.1812e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7573e-06, dtype=torch.float64)
secont condition:: tensor(6.7573e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6071e-06, dtype=torch.float64)
secont condition:: tensor(4.6071e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1844e-06, dtype=torch.float64)
secont condition:: tensor(8.1844e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3024e-06, dtype=torch.float64)
secont condition:: tensor(3.3024e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5307e-06, dtype=torch.float64)
secont condition:: tensor(3.5307e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6358e-06, dtype=torch.float64)
secont condition:: tensor(5.6358e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7860e-06, dtype=torch.float64)
secont condition:: tensor(3.7860e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2678e-06, dtype=torch.float64)
secont condition:: tensor(8.2678e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4865e-06, dtype=torch.float64)
secont condition:: tensor(2.4865e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4071e-06, dtype=torch.float64)
secont condition:: tensor(3.4071e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4876e-06, dtype=torch.float64)
secont condition:: tensor(2.4876e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3960e-06, dtype=torch.float64)
secont condition:: tensor(5.3960e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4538e-06, dtype=torch.float64)
secont condition:: tensor(1.4538e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8614e-06, dtype=torch.float64)
secont condition:: tensor(1.8614e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8966e-06, dtype=torch.float64)
secont condition:: tensor(5.8966e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8422e-06, dtype=torch.float64)
secont condition:: tensor(1.8422e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8620e-06, dtype=torch.float64)
secont condition:: tensor(1.8620e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3608e-06, dtype=torch.float64)
secont condition:: tensor(3.3608e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9089e-06, dtype=torch.float64)
secont condition:: tensor(1.9089e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8777e-06, dtype=torch.float64)
secont condition:: tensor(3.8777e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1105e-06, dtype=torch.float64)
secont condition:: tensor(1.1105e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7347e-06, dtype=torch.float64)
secont condition:: tensor(2.7347e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8174e-06, dtype=torch.float64)
secont condition:: tensor(5.8174e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9122e-06, dtype=torch.float64)
secont condition:: tensor(1.9122e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5185e-06, dtype=torch.float64)
secont condition:: tensor(1.5185e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0741e-06, dtype=torch.float64)
secont condition:: tensor(1.0741e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0160e-06, dtype=torch.float64)
secont condition:: tensor(2.0160e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4896e-06, dtype=torch.float64)
secont condition:: tensor(1.4896e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3875e-06, dtype=torch.float64)
secont condition:: tensor(1.3875e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0692e-06, dtype=torch.float64)
secont condition:: tensor(1.0692e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0799e-06, dtype=torch.float64)
secont condition:: tensor(1.0799e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4317e-06, dtype=torch.float64)
secont condition:: tensor(2.4317e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1458e-06, dtype=torch.float64)
secont condition:: tensor(1.1458e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3058e-06, dtype=torch.float64)
secont condition:: tensor(1.3058e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2691e-07, dtype=torch.float64)
secont condition:: tensor(8.2691e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1280e-06, dtype=torch.float64)
secont condition:: tensor(1.1280e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0517e-06, dtype=torch.float64)
secont condition:: tensor(1.0517e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7123e-06, dtype=torch.float64)
secont condition:: tensor(1.7123e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7212e-07, dtype=torch.float64)
secont condition:: tensor(6.7212e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3629e-07, dtype=torch.float64)
secont condition:: tensor(5.3629e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0272e-06, dtype=torch.float64)
secont condition:: tensor(1.0272e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.4099e-07, dtype=torch.float64)
secont condition:: tensor(9.4099e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.07478094100952
curr_diff: 0 tensor(2.6602e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7520e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6782e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9070e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6137e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.9360e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7278e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0038, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0049, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236510
Test Avg. Loss: 0.000025, Accuracy: 0.935700
Train - Epoch 1, Batch: 0, Loss: 0.258561
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.169836
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 3, Batch: 0, Loss: 0.165121
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 4, Batch: 0, Loss: 0.161618
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 5, Batch: 0, Loss: 0.158316
Test Avg. Loss: 0.000033, Accuracy: 0.892200
Train - Epoch 6, Batch: 0, Loss: 0.360154
Test Avg. Loss: 0.000048, Accuracy: 0.888600
Train - Epoch 7, Batch: 0, Loss: 0.503028
Test Avg. Loss: 0.000020, Accuracy: 0.950100
Train - Epoch 8, Batch: 0, Loss: 0.215171
Test Avg. Loss: 0.000016, Accuracy: 0.955000
Train - Epoch 9, Batch: 0, Loss: 0.177118
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 10, Batch: 0, Loss: 0.169173
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 11, Batch: 0, Loss: 0.163778
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 12, Batch: 0, Loss: 0.162669
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.157262
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 14, Batch: 0, Loss: 0.157834
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 15, Batch: 0, Loss: 0.154996
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.159839
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 17, Batch: 0, Loss: 0.156160
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.162747
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.155282
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.159844
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 21, Batch: 0, Loss: 0.155512
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.153844
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 23, Batch: 0, Loss: 0.161848
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.149405
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 25, Batch: 0, Loss: 0.151972
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.153976
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.149468
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.153752
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 29, Batch: 0, Loss: 0.151771
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 169.4014391899109
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.97637701034546
time_baseline:: 116.04119110107422
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0075, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0095, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1931e-08, dtype=torch.float64)
secont condition:: tensor(1.1931e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1184e-08, dtype=torch.float64)
secont condition:: tensor(8.1184e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5805e-08, dtype=torch.float64)
secont condition:: tensor(1.5805e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4448e-07, dtype=torch.float64)
secont condition:: tensor(2.4448e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3312e-07, dtype=torch.float64)
secont condition:: tensor(1.3312e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2042e-07, dtype=torch.float64)
secont condition:: tensor(1.2042e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0567e-08, dtype=torch.float64)
secont condition:: tensor(5.0567e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9426e-08, dtype=torch.float64)
secont condition:: tensor(3.9426e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5150e-08, dtype=torch.float64)
secont condition:: tensor(1.5150e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0105e-08, dtype=torch.float64)
secont condition:: tensor(6.0105e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1504e-08, dtype=torch.float64)
secont condition:: tensor(2.1504e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1937e-07, dtype=torch.float64)
secont condition:: tensor(1.1937e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2047e-07, dtype=torch.float64)
secont condition:: tensor(1.2047e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0486e-07, dtype=torch.float64)
secont condition:: tensor(1.0486e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4945e-08, dtype=torch.float64)
secont condition:: tensor(8.4945e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0428e-07, dtype=torch.float64)
secont condition:: tensor(3.0428e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1654e-07, dtype=torch.float64)
secont condition:: tensor(2.1654e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7203e-07, dtype=torch.float64)
secont condition:: tensor(3.7203e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0023e-07, dtype=torch.float64)
secont condition:: tensor(8.0023e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5782e-06, dtype=torch.float64)
secont condition:: tensor(1.5782e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2679e-06, dtype=torch.float64)
secont condition:: tensor(3.2679e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9250e-06, dtype=torch.float64)
secont condition:: tensor(8.9250e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0198e-05, dtype=torch.float64)
secont condition:: tensor(2.0198e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5558e-05, dtype=torch.float64)
secont condition:: tensor(6.5558e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.4157e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7844e-05, dtype=torch.float64)
secont condition:: tensor(9.7844e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2671e-06, dtype=torch.float64)
secont condition:: tensor(9.2671e-06, dtype=torch.float64)
curr_secont condition:: tensor(-3.0739e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6411e-06, dtype=torch.float64)
secont condition:: tensor(2.6411e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4776e-06, dtype=torch.float64)
secont condition:: tensor(9.4776e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4213e-06, dtype=torch.float64)
secont condition:: tensor(2.4213e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.9746e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8290e-06, dtype=torch.float64)
secont condition:: tensor(1.8290e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4329e-06, dtype=torch.float64)
secont condition:: tensor(3.4329e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0120e-06, dtype=torch.float64)
secont condition:: tensor(8.0120e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2871e-06, dtype=torch.float64)
secont condition:: tensor(6.2871e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3255e-06, dtype=torch.float64)
secont condition:: tensor(3.3255e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1990e-06, dtype=torch.float64)
secont condition:: tensor(2.1990e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7249e-06, dtype=torch.float64)
secont condition:: tensor(3.7249e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7996e-06, dtype=torch.float64)
secont condition:: tensor(3.7996e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1828e-06, dtype=torch.float64)
secont condition:: tensor(2.1828e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.1058e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3833e-06, dtype=torch.float64)
secont condition:: tensor(7.3833e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8767e-06, dtype=torch.float64)
secont condition:: tensor(7.8767e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8508e-07, dtype=torch.float64)
secont condition:: tensor(4.8508e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7899e-06, dtype=torch.float64)
secont condition:: tensor(2.7899e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6658e-06, dtype=torch.float64)
secont condition:: tensor(8.6658e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6644e-06, dtype=torch.float64)
secont condition:: tensor(6.6644e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9672e-06, dtype=torch.float64)
secont condition:: tensor(7.9672e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8290e-06, dtype=torch.float64)
secont condition:: tensor(2.8290e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3888e-06, dtype=torch.float64)
secont condition:: tensor(6.3888e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2406e-07, dtype=torch.float64)
secont condition:: tensor(4.2406e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8227e-06, dtype=torch.float64)
secont condition:: tensor(4.8227e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4395e-06, dtype=torch.float64)
secont condition:: tensor(5.4395e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0178e-06, dtype=torch.float64)
secont condition:: tensor(7.0178e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2796e-06, dtype=torch.float64)
secont condition:: tensor(5.2796e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8504e-06, dtype=torch.float64)
secont condition:: tensor(2.8504e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6652e-07, dtype=torch.float64)
secont condition:: tensor(6.6652e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0521e-05, dtype=torch.float64)
secont condition:: tensor(1.0521e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8366e-06, dtype=torch.float64)
secont condition:: tensor(4.8366e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2424e-06, dtype=torch.float64)
secont condition:: tensor(9.2424e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0091e-06, dtype=torch.float64)
secont condition:: tensor(7.0091e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5340e-06, dtype=torch.float64)
secont condition:: tensor(5.5340e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9764e-06, dtype=torch.float64)
secont condition:: tensor(5.9764e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3544e-06, dtype=torch.float64)
secont condition:: tensor(4.3544e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4694e-06, dtype=torch.float64)
secont condition:: tensor(4.4694e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1041e-06, dtype=torch.float64)
secont condition:: tensor(3.1041e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7190e-06, dtype=torch.float64)
secont condition:: tensor(3.7190e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3124e-06, dtype=torch.float64)
secont condition:: tensor(3.3124e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4359e-06, dtype=torch.float64)
secont condition:: tensor(2.4359e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6848e-06, dtype=torch.float64)
secont condition:: tensor(2.6848e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0034e-06, dtype=torch.float64)
secont condition:: tensor(3.0034e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9371e-06, dtype=torch.float64)
secont condition:: tensor(4.9371e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1249e-06, dtype=torch.float64)
secont condition:: tensor(4.1249e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9075e-06, dtype=torch.float64)
secont condition:: tensor(2.9075e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2480e-06, dtype=torch.float64)
secont condition:: tensor(3.2480e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2919e-06, dtype=torch.float64)
secont condition:: tensor(2.2919e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.06588339805603
curr_diff: 0 tensor(3.5550e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0979e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3968e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3414e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.0337e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.6056e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0037, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0095, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234399
Test Avg. Loss: 0.000023, Accuracy: 0.940200
Train - Epoch 1, Batch: 0, Loss: 0.250632
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.168661
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.154591
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.159293
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.157287
Test Avg. Loss: 0.000016, Accuracy: 0.951400
Train - Epoch 6, Batch: 0, Loss: 0.180941
Test Avg. Loss: 0.000142, Accuracy: 0.581100
Train - Epoch 7, Batch: 0, Loss: 1.450814
Test Avg. Loss: 0.000029, Accuracy: 0.928200
Train - Epoch 8, Batch: 0, Loss: 0.315960
Test Avg. Loss: 0.000018, Accuracy: 0.949900
Train - Epoch 9, Batch: 0, Loss: 0.198475
Test Avg. Loss: 0.000017, Accuracy: 0.951100
Train - Epoch 10, Batch: 0, Loss: 0.192585
Test Avg. Loss: 0.000016, Accuracy: 0.951400
Train - Epoch 11, Batch: 0, Loss: 0.179122
Test Avg. Loss: 0.000016, Accuracy: 0.953200
Train - Epoch 12, Batch: 0, Loss: 0.176609
Test Avg. Loss: 0.000016, Accuracy: 0.953900
Train - Epoch 13, Batch: 0, Loss: 0.171947
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 14, Batch: 0, Loss: 0.165960
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 15, Batch: 0, Loss: 0.167048
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 16, Batch: 0, Loss: 0.162390
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 17, Batch: 0, Loss: 0.157098
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 18, Batch: 0, Loss: 0.162076
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 19, Batch: 0, Loss: 0.164599
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 20, Batch: 0, Loss: 0.161947
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 21, Batch: 0, Loss: 0.159595
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 22, Batch: 0, Loss: 0.154869
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 23, Batch: 0, Loss: 0.155544
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 24, Batch: 0, Loss: 0.162960
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 25, Batch: 0, Loss: 0.152429
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 26, Batch: 0, Loss: 0.157739
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 27, Batch: 0, Loss: 0.155720
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 28, Batch: 0, Loss: 0.157472
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 29, Batch: 0, Loss: 0.154026
Test Avg. Loss: 0.000014, Accuracy: 0.960500
training_time:: 171.76220035552979
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.97063660621643
time_baseline:: 117.0400857925415
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0150, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0200, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1534e-08, dtype=torch.float64)
secont condition:: tensor(1.1534e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1980e-07, dtype=torch.float64)
secont condition:: tensor(2.1980e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3433e-07, dtype=torch.float64)
secont condition:: tensor(3.3433e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3439e-07, dtype=torch.float64)
secont condition:: tensor(3.3439e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5909e-07, dtype=torch.float64)
secont condition:: tensor(4.5909e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2677e-07, dtype=torch.float64)
secont condition:: tensor(1.2677e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8465e-08, dtype=torch.float64)
secont condition:: tensor(7.8465e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8662e-08, dtype=torch.float64)
secont condition:: tensor(2.8662e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3891e-08, dtype=torch.float64)
secont condition:: tensor(3.3891e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5405e-08, dtype=torch.float64)
secont condition:: tensor(1.5405e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1172e-07, dtype=torch.float64)
secont condition:: tensor(1.1172e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4437e-07, dtype=torch.float64)
secont condition:: tensor(1.4437e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8115e-08, dtype=torch.float64)
secont condition:: tensor(4.8115e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9246e-08, dtype=torch.float64)
secont condition:: tensor(5.9246e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1959e-08, dtype=torch.float64)
secont condition:: tensor(4.1959e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0984e-07, dtype=torch.float64)
secont condition:: tensor(2.0984e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3024e-08, dtype=torch.float64)
secont condition:: tensor(7.3024e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1349e-07, dtype=torch.float64)
secont condition:: tensor(1.1349e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8934e-08, dtype=torch.float64)
secont condition:: tensor(8.8934e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3794e-07, dtype=torch.float64)
secont condition:: tensor(1.3794e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3688e-07, dtype=torch.float64)
secont condition:: tensor(1.3688e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9053e-07, dtype=torch.float64)
secont condition:: tensor(3.9053e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6732e-07, dtype=torch.float64)
secont condition:: tensor(7.6732e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7208e-06, dtype=torch.float64)
secont condition:: tensor(2.7208e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6188e-06, dtype=torch.float64)
secont condition:: tensor(9.6188e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9006e-05, dtype=torch.float64)
secont condition:: tensor(4.9006e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7025e-05, dtype=torch.float64)
secont condition:: tensor(1.7025e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(7.5024e-05, dtype=torch.float64)
secont condition:: tensor(7.5024e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2198e-05, dtype=torch.float64)
secont condition:: tensor(4.2198e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7635e-05, dtype=torch.float64)
secont condition:: tensor(3.7635e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.7456e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.4335e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.7289e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.5103e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.5233e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2136e-05, dtype=torch.float64)
secont condition:: tensor(1.2136e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.0378e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.7995e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.4176e-06, dtype=torch.float64)
curr_secont condition:: tensor(-3.1942e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8791e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0668e-06, dtype=torch.float64)
secont condition:: tensor(1.0668e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.5710e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.4718e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7904e-06, dtype=torch.float64)
secont condition:: tensor(5.7904e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.7352e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.7408e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.5478e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.6486e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5459e-05, dtype=torch.float64)
secont condition:: tensor(1.5459e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.0884e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.5370e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0234e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.0473e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.6528e-07, dtype=torch.float64)
secont condition:: tensor(9.6528e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.4446e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6192e-05, dtype=torch.float64)
secont condition:: tensor(2.6192e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.6781e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2261e-05, dtype=torch.float64)
secont condition:: tensor(1.2261e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8105e-05, dtype=torch.float64)
secont condition:: tensor(3.8105e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0631e-05, dtype=torch.float64)
secont condition:: tensor(3.0631e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5449e-05, dtype=torch.float64)
secont condition:: tensor(3.5449e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9364e-05, dtype=torch.float64)
secont condition:: tensor(4.9364e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3561e-05, dtype=torch.float64)
secont condition:: tensor(1.3561e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7699e-05, dtype=torch.float64)
secont condition:: tensor(2.7699e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6951e-05, dtype=torch.float64)
secont condition:: tensor(1.6951e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4387e-05, dtype=torch.float64)
secont condition:: tensor(3.4387e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8280e-05, dtype=torch.float64)
secont condition:: tensor(1.8280e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1088e-06, dtype=torch.float64)
secont condition:: tensor(9.1088e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4110e-05, dtype=torch.float64)
secont condition:: tensor(3.4110e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1757e-05, dtype=torch.float64)
secont condition:: tensor(2.1757e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0223e-05, dtype=torch.float64)
secont condition:: tensor(3.0223e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3525e-05, dtype=torch.float64)
secont condition:: tensor(2.3525e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0292e-05, dtype=torch.float64)
secont condition:: tensor(3.0292e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3815e-05, dtype=torch.float64)
secont condition:: tensor(3.3815e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5552e-05, dtype=torch.float64)
secont condition:: tensor(2.5552e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.288732290267944
curr_diff: 0 tensor(8.4439e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4191e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3608e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0974e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0091, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0146, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0072, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0195, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
random set 5
python3 generate_rand_ids 0.0001  MNIST
tensor([57793, 52389, 31783,  1961, 41626, 25598])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.240441
Test Avg. Loss: 0.000024, Accuracy: 0.938800
Train - Epoch 1, Batch: 0, Loss: 0.265118
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.171969
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 3, Batch: 0, Loss: 0.162324
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.163760
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 5, Batch: 0, Loss: 0.162970
Test Avg. Loss: 0.000025, Accuracy: 0.918400
Train - Epoch 6, Batch: 0, Loss: 0.269969
Test Avg. Loss: 0.000048, Accuracy: 0.871800
Train - Epoch 7, Batch: 0, Loss: 0.503523
Test Avg. Loss: 0.000016, Accuracy: 0.955300
Train - Epoch 8, Batch: 0, Loss: 0.185422
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 9, Batch: 0, Loss: 0.173749
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 10, Batch: 0, Loss: 0.163999
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.155830
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 12, Batch: 0, Loss: 0.160032
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.155922
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.153630
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 15, Batch: 0, Loss: 0.158137
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 16, Batch: 0, Loss: 0.158905
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.151493
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.153366
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.152111
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.152146
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 21, Batch: 0, Loss: 0.154874
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.155462
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.150006
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.151030
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.148038
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.148434
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.150563
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.151047
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.155415
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 171.54480934143066
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.36358284950256
time_baseline:: 117.42850971221924
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0062, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4654e-32, dtype=torch.float64)
secont condition:: tensor(1.4654e-32, dtype=torch.float64)
curr_secont condition:: tensor(-1.1678e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5535e-06, dtype=torch.float64)
secont condition:: tensor(1.5535e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1291e-06, dtype=torch.float64)
secont condition:: tensor(1.1291e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3230e-07, dtype=torch.float64)
secont condition:: tensor(3.3230e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5083e-08, dtype=torch.float64)
secont condition:: tensor(9.5083e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1746e-07, dtype=torch.float64)
secont condition:: tensor(1.1746e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1194e-07, dtype=torch.float64)
secont condition:: tensor(1.1194e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9446e-08, dtype=torch.float64)
secont condition:: tensor(2.9446e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9080e-07, dtype=torch.float64)
secont condition:: tensor(1.9080e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0000e-06, dtype=torch.float64)
secont condition:: tensor(4.0000e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0184e-07, dtype=torch.float64)
secont condition:: tensor(1.0184e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2678e-07, dtype=torch.float64)
secont condition:: tensor(2.2678e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4632e-07, dtype=torch.float64)
secont condition:: tensor(1.4632e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3023e-08, dtype=torch.float64)
secont condition:: tensor(9.3023e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4041e-07, dtype=torch.float64)
secont condition:: tensor(2.4041e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2073e-07, dtype=torch.float64)
secont condition:: tensor(2.2073e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5497e-07, dtype=torch.float64)
secont condition:: tensor(4.5497e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7272e-07, dtype=torch.float64)
secont condition:: tensor(4.7272e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9393e-07, dtype=torch.float64)
secont condition:: tensor(2.9393e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8116e-07, dtype=torch.float64)
secont condition:: tensor(6.8116e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3841e-06, dtype=torch.float64)
secont condition:: tensor(1.3841e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7402e-06, dtype=torch.float64)
secont condition:: tensor(4.7402e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4903e-05, dtype=torch.float64)
secont condition:: tensor(1.4903e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6526e-05, dtype=torch.float64)
secont condition:: tensor(1.6526e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(4.4831e-05, dtype=torch.float64)
secont condition:: tensor(4.4831e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1258e-05, dtype=torch.float64)
secont condition:: tensor(2.1258e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8289e-05, dtype=torch.float64)
secont condition:: tensor(1.8289e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0657e-05, dtype=torch.float64)
secont condition:: tensor(1.0657e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.1135e-06, dtype=torch.float64)
secont condition:: tensor(9.1135e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0793e-06, dtype=torch.float64)
secont condition:: tensor(6.0793e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1713e-06, dtype=torch.float64)
secont condition:: tensor(6.1713e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2677e-06, dtype=torch.float64)
secont condition:: tensor(6.2677e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4893e-06, dtype=torch.float64)
secont condition:: tensor(4.4893e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7909e-06, dtype=torch.float64)
secont condition:: tensor(2.7909e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1169e-06, dtype=torch.float64)
secont condition:: tensor(2.1169e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4927e-06, dtype=torch.float64)
secont condition:: tensor(3.4927e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4216e-06, dtype=torch.float64)
secont condition:: tensor(3.4216e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5467e-06, dtype=torch.float64)
secont condition:: tensor(4.5467e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7477e-06, dtype=torch.float64)
secont condition:: tensor(5.7477e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0644e-05, dtype=torch.float64)
secont condition:: tensor(1.0644e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5538e-06, dtype=torch.float64)
secont condition:: tensor(2.5538e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7754e-07, dtype=torch.float64)
secont condition:: tensor(9.7754e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2610e-06, dtype=torch.float64)
secont condition:: tensor(3.2610e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1816e-06, dtype=torch.float64)
secont condition:: tensor(4.1816e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1291e-06, dtype=torch.float64)
secont condition:: tensor(3.1291e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2114e-06, dtype=torch.float64)
secont condition:: tensor(9.2114e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5569e-06, dtype=torch.float64)
secont condition:: tensor(3.5569e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0601e-06, dtype=torch.float64)
secont condition:: tensor(2.0601e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5844e-06, dtype=torch.float64)
secont condition:: tensor(4.5844e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1468e-06, dtype=torch.float64)
secont condition:: tensor(2.1468e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4233e-06, dtype=torch.float64)
secont condition:: tensor(2.4233e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7463e-06, dtype=torch.float64)
secont condition:: tensor(3.7463e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7673e-06, dtype=torch.float64)
secont condition:: tensor(1.7673e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3957e-06, dtype=torch.float64)
secont condition:: tensor(3.3957e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0635e-06, dtype=torch.float64)
secont condition:: tensor(7.0635e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3581e-06, dtype=torch.float64)
secont condition:: tensor(1.3581e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3862e-06, dtype=torch.float64)
secont condition:: tensor(2.3862e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9910e-06, dtype=torch.float64)
secont condition:: tensor(1.9910e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4899e-06, dtype=torch.float64)
secont condition:: tensor(2.4899e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1731e-07, dtype=torch.float64)
secont condition:: tensor(6.1731e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2069e-06, dtype=torch.float64)
secont condition:: tensor(1.2069e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3205e-06, dtype=torch.float64)
secont condition:: tensor(2.3205e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6839e-06, dtype=torch.float64)
secont condition:: tensor(2.6839e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3689e-07, dtype=torch.float64)
secont condition:: tensor(3.3689e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6626e-06, dtype=torch.float64)
secont condition:: tensor(1.6626e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3703e-06, dtype=torch.float64)
secont condition:: tensor(2.3703e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8152e-06, dtype=torch.float64)
secont condition:: tensor(1.8152e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1176e-06, dtype=torch.float64)
secont condition:: tensor(1.1176e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5457e-06, dtype=torch.float64)
secont condition:: tensor(2.5457e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8162e-06, dtype=torch.float64)
secont condition:: tensor(1.8162e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6252e-06, dtype=torch.float64)
secont condition:: tensor(1.6252e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4509e-06, dtype=torch.float64)
secont condition:: tensor(1.4509e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0473e-06, dtype=torch.float64)
secont condition:: tensor(2.0473e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3931e-06, dtype=torch.float64)
secont condition:: tensor(1.3931e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.12745690345764
curr_diff: 0 tensor(2.8521e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5269e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6565e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0542e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4163e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.8519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0885e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0047, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0063, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234513
Test Avg. Loss: 0.000024, Accuracy: 0.941700
Train - Epoch 1, Batch: 0, Loss: 0.257890
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.162106
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.162293
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.158427
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 5, Batch: 0, Loss: 0.161164
Test Avg. Loss: 0.000035, Accuracy: 0.878100
Train - Epoch 6, Batch: 0, Loss: 0.376268
Test Avg. Loss: 0.000020, Accuracy: 0.951300
Train - Epoch 7, Batch: 0, Loss: 0.212443
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 8, Batch: 0, Loss: 0.167689
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 9, Batch: 0, Loss: 0.150957
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 10, Batch: 0, Loss: 0.153062
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 11, Batch: 0, Loss: 0.160890
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 12, Batch: 0, Loss: 0.154829
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 13, Batch: 0, Loss: 0.150950
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 14, Batch: 0, Loss: 0.150429
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.155401
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 16, Batch: 0, Loss: 0.155802
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 17, Batch: 0, Loss: 0.151454
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 18, Batch: 0, Loss: 0.155208
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 19, Batch: 0, Loss: 0.154990
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.154990
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 21, Batch: 0, Loss: 0.154185
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 22, Batch: 0, Loss: 0.157893
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.157203
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.147258
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.148299
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.157021
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.151428
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.153185
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.145817
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 170.84091114997864
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.49780249595642
time_baseline:: 115.56200385093689
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0077, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3920e-08, dtype=torch.float64)
secont condition:: tensor(3.3920e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7611e-08, dtype=torch.float64)
secont condition:: tensor(4.7611e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3895e-06, dtype=torch.float64)
secont condition:: tensor(1.3895e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3561e-06, dtype=torch.float64)
secont condition:: tensor(1.3561e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7462e-07, dtype=torch.float64)
secont condition:: tensor(2.7462e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4551e-07, dtype=torch.float64)
secont condition:: tensor(1.4551e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7795e-07, dtype=torch.float64)
secont condition:: tensor(1.7795e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2071e-07, dtype=torch.float64)
secont condition:: tensor(1.2071e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8304e-08, dtype=torch.float64)
secont condition:: tensor(7.8304e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4112e-08, dtype=torch.float64)
secont condition:: tensor(8.4112e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1944e-07, dtype=torch.float64)
secont condition:: tensor(1.1944e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0685e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8974e-08, dtype=torch.float64)
secont condition:: tensor(8.8974e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9298e-07, dtype=torch.float64)
secont condition:: tensor(1.9298e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7379e-07, dtype=torch.float64)
secont condition:: tensor(2.7379e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3752e-07, dtype=torch.float64)
secont condition:: tensor(6.3752e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2484e-06, dtype=torch.float64)
secont condition:: tensor(1.2484e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2088e-06, dtype=torch.float64)
secont condition:: tensor(2.2088e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1443e-06, dtype=torch.float64)
secont condition:: tensor(4.1443e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6258e-06, dtype=torch.float64)
secont condition:: tensor(6.6258e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5366e-05, dtype=torch.float64)
secont condition:: tensor(1.5366e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9175e-05, dtype=torch.float64)
secont condition:: tensor(2.9175e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8429e-05, dtype=torch.float64)
secont condition:: tensor(9.8429e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0034, dtype=torch.float64)
secont condition:: tensor(0.0034, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(6.1089e-05, dtype=torch.float64)
secont condition:: tensor(6.1089e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4990e-05, dtype=torch.float64)
secont condition:: tensor(2.4990e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4171e-05, dtype=torch.float64)
secont condition:: tensor(1.4171e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4372e-05, dtype=torch.float64)
secont condition:: tensor(1.4372e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0200e-05, dtype=torch.float64)
secont condition:: tensor(1.0200e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6112e-05, dtype=torch.float64)
secont condition:: tensor(1.6112e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8926e-05, dtype=torch.float64)
secont condition:: tensor(1.8926e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0711e-05, dtype=torch.float64)
secont condition:: tensor(1.0711e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.2716e-06, dtype=torch.float64)
secont condition:: tensor(8.2716e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1529e-06, dtype=torch.float64)
secont condition:: tensor(5.1529e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3537e-05, dtype=torch.float64)
secont condition:: tensor(1.3537e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7903e-06, dtype=torch.float64)
secont condition:: tensor(4.7903e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2257e-06, dtype=torch.float64)
secont condition:: tensor(4.2257e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9287e-06, dtype=torch.float64)
secont condition:: tensor(4.9287e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8204e-06, dtype=torch.float64)
secont condition:: tensor(7.8204e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2416e-06, dtype=torch.float64)
secont condition:: tensor(6.2416e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3879e-06, dtype=torch.float64)
secont condition:: tensor(7.3879e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5926e-06, dtype=torch.float64)
secont condition:: tensor(4.5926e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9250e-06, dtype=torch.float64)
secont condition:: tensor(4.9250e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6225e-06, dtype=torch.float64)
secont condition:: tensor(9.6225e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0074e-06, dtype=torch.float64)
secont condition:: tensor(4.0074e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7125e-06, dtype=torch.float64)
secont condition:: tensor(3.7125e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2775e-06, dtype=torch.float64)
secont condition:: tensor(5.2775e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2791e-06, dtype=torch.float64)
secont condition:: tensor(3.2791e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7587e-06, dtype=torch.float64)
secont condition:: tensor(3.7587e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1419e-06, dtype=torch.float64)
secont condition:: tensor(3.1419e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8431e-06, dtype=torch.float64)
secont condition:: tensor(3.8431e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2623e-06, dtype=torch.float64)
secont condition:: tensor(3.2623e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9850e-06, dtype=torch.float64)
secont condition:: tensor(3.9850e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0434e-06, dtype=torch.float64)
secont condition:: tensor(2.0434e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0357e-06, dtype=torch.float64)
secont condition:: tensor(2.0357e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4879e-06, dtype=torch.float64)
secont condition:: tensor(8.4879e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3571e-06, dtype=torch.float64)
secont condition:: tensor(3.3571e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2218e-06, dtype=torch.float64)
secont condition:: tensor(2.2218e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6536e-06, dtype=torch.float64)
secont condition:: tensor(2.6536e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2329e-06, dtype=torch.float64)
secont condition:: tensor(3.2329e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6418e-06, dtype=torch.float64)
secont condition:: tensor(1.6418e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4625e-06, dtype=torch.float64)
secont condition:: tensor(3.4625e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2837e-06, dtype=torch.float64)
secont condition:: tensor(2.2837e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5453e-06, dtype=torch.float64)
secont condition:: tensor(2.5453e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2866e-06, dtype=torch.float64)
secont condition:: tensor(2.2866e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1036e-06, dtype=torch.float64)
secont condition:: tensor(2.1036e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0211e-06, dtype=torch.float64)
secont condition:: tensor(2.0211e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4989e-06, dtype=torch.float64)
secont condition:: tensor(1.4989e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5769e-06, dtype=torch.float64)
secont condition:: tensor(1.5769e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3584e-06, dtype=torch.float64)
secont condition:: tensor(1.3584e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0862e-07, dtype=torch.float64)
secont condition:: tensor(7.0862e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5286e-06, dtype=torch.float64)
secont condition:: tensor(1.5286e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3992e-06, dtype=torch.float64)
secont condition:: tensor(1.3992e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7807e-06, dtype=torch.float64)
secont condition:: tensor(1.7807e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4137e-06, dtype=torch.float64)
secont condition:: tensor(1.4137e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.22658944129944
curr_diff: 0 tensor(2.9435e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.7293e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0901e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0898e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.4508e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.6732e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0078, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241395
Test Avg. Loss: 0.000024, Accuracy: 0.940200
Train - Epoch 1, Batch: 0, Loss: 0.261458
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.166046
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.163610
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 4, Batch: 0, Loss: 0.159872
Test Avg. Loss: 0.000019, Accuracy: 0.942400
Train - Epoch 5, Batch: 0, Loss: 0.205661
Test Avg. Loss: 0.000069, Accuracy: 0.745200
Train - Epoch 6, Batch: 0, Loss: 0.695950
Test Avg. Loss: 0.000017, Accuracy: 0.954600
Train - Epoch 7, Batch: 0, Loss: 0.185442
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 8, Batch: 0, Loss: 0.161108
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 9, Batch: 0, Loss: 0.163290
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 10, Batch: 0, Loss: 0.163659
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 11, Batch: 0, Loss: 0.153220
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 12, Batch: 0, Loss: 0.156530
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 13, Batch: 0, Loss: 0.152086
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 14, Batch: 0, Loss: 0.160141
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.159046
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 16, Batch: 0, Loss: 0.153875
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 17, Batch: 0, Loss: 0.150600
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.153830
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 19, Batch: 0, Loss: 0.155073
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 20, Batch: 0, Loss: 0.155052
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 21, Batch: 0, Loss: 0.152962
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.150840
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 23, Batch: 0, Loss: 0.153822
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.155675
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.152821
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.153293
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.155959
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.155430
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.153868
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 170.5856852531433
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.29713225364685
time_baseline:: 116.3624746799469
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0037, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3229e-06, dtype=torch.float64)
secont condition:: tensor(1.3229e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9674e-06, dtype=torch.float64)
secont condition:: tensor(2.9674e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.1574e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8903e-06, dtype=torch.float64)
secont condition:: tensor(4.8903e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2007e-07, dtype=torch.float64)
secont condition:: tensor(9.2007e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8033e-07, dtype=torch.float64)
secont condition:: tensor(4.8033e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2541e-07, dtype=torch.float64)
secont condition:: tensor(4.2541e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6534e-07, dtype=torch.float64)
secont condition:: tensor(1.6534e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0449e-07, dtype=torch.float64)
secont condition:: tensor(3.0449e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0322e-07, dtype=torch.float64)
secont condition:: tensor(1.0322e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7808e-07, dtype=torch.float64)
secont condition:: tensor(2.7808e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1485e-07, dtype=torch.float64)
secont condition:: tensor(2.1485e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7177e-07, dtype=torch.float64)
secont condition:: tensor(2.7177e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7607e-07, dtype=torch.float64)
secont condition:: tensor(5.7607e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6615e-05, dtype=torch.float64)
secont condition:: tensor(1.6615e-05, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0049e-07, dtype=torch.float64)
secont condition:: tensor(9.0049e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6047e-07, dtype=torch.float64)
secont condition:: tensor(8.6047e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8124e-06, dtype=torch.float64)
secont condition:: tensor(1.8124e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5568e-06, dtype=torch.float64)
secont condition:: tensor(3.5568e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1652e-06, dtype=torch.float64)
secont condition:: tensor(9.1652e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5531e-05, dtype=torch.float64)
secont condition:: tensor(1.5531e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8139e-05, dtype=torch.float64)
secont condition:: tensor(2.8139e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8935e-05, dtype=torch.float64)
secont condition:: tensor(4.8935e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(3.1469e-05, dtype=torch.float64)
secont condition:: tensor(3.1469e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0651e-05, dtype=torch.float64)
secont condition:: tensor(1.0651e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5207e-06, dtype=torch.float64)
secont condition:: tensor(5.5207e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5672e-06, dtype=torch.float64)
secont condition:: tensor(4.5672e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7428e-06, dtype=torch.float64)
secont condition:: tensor(1.7428e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5372e-06, dtype=torch.float64)
secont condition:: tensor(2.5372e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7718e-06, dtype=torch.float64)
secont condition:: tensor(1.7718e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6311e-06, dtype=torch.float64)
secont condition:: tensor(2.6311e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7323e-05, dtype=torch.float64)
secont condition:: tensor(1.7323e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1726e-06, dtype=torch.float64)
secont condition:: tensor(4.1726e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5709e-07, dtype=torch.float64)
secont condition:: tensor(8.5709e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8699e-07, dtype=torch.float64)
secont condition:: tensor(7.8699e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4140e-07, dtype=torch.float64)
secont condition:: tensor(2.4140e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2570e-06, dtype=torch.float64)
secont condition:: tensor(2.2570e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3318e-06, dtype=torch.float64)
secont condition:: tensor(8.3318e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5720e-06, dtype=torch.float64)
secont condition:: tensor(1.5720e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4257e-06, dtype=torch.float64)
secont condition:: tensor(1.4257e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1888e-06, dtype=torch.float64)
secont condition:: tensor(1.1888e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1818e-06, dtype=torch.float64)
secont condition:: tensor(1.1818e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2296e-06, dtype=torch.float64)
secont condition:: tensor(1.2296e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0734e-06, dtype=torch.float64)
secont condition:: tensor(2.0734e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2579e-06, dtype=torch.float64)
secont condition:: tensor(1.2579e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3384e-06, dtype=torch.float64)
secont condition:: tensor(6.3384e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0553e-06, dtype=torch.float64)
secont condition:: tensor(1.0553e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0028e-06, dtype=torch.float64)
secont condition:: tensor(1.0028e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5023e-07, dtype=torch.float64)
secont condition:: tensor(7.5023e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1835e-06, dtype=torch.float64)
secont condition:: tensor(1.1835e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9427e-07, dtype=torch.float64)
secont condition:: tensor(9.9427e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9379e-06, dtype=torch.float64)
secont condition:: tensor(1.9379e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5349e-07, dtype=torch.float64)
secont condition:: tensor(6.5349e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2340e-07, dtype=torch.float64)
secont condition:: tensor(9.2340e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4488e-07, dtype=torch.float64)
secont condition:: tensor(9.4488e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4228e-06, dtype=torch.float64)
secont condition:: tensor(2.4228e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7384e-07, dtype=torch.float64)
secont condition:: tensor(7.7384e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4194e-06, dtype=torch.float64)
secont condition:: tensor(5.4194e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5778e-07, dtype=torch.float64)
secont condition:: tensor(5.5778e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9894e-07, dtype=torch.float64)
secont condition:: tensor(8.9894e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0744e-06, dtype=torch.float64)
secont condition:: tensor(1.0744e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7836e-06, dtype=torch.float64)
secont condition:: tensor(1.7836e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1415e-07, dtype=torch.float64)
secont condition:: tensor(8.1415e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1322e-07, dtype=torch.float64)
secont condition:: tensor(3.1322e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3277e-07, dtype=torch.float64)
secont condition:: tensor(4.3277e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7599e-07, dtype=torch.float64)
secont condition:: tensor(5.7599e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1579e-06, dtype=torch.float64)
secont condition:: tensor(3.1579e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2549e-07, dtype=torch.float64)
secont condition:: tensor(6.2549e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7122e-07, dtype=torch.float64)
secont condition:: tensor(6.7122e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4224e-07, dtype=torch.float64)
secont condition:: tensor(2.4224e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5173e-06, dtype=torch.float64)
secont condition:: tensor(1.5173e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4104e-08, dtype=torch.float64)
secont condition:: tensor(3.4104e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0173e-07, dtype=torch.float64)
secont condition:: tensor(9.0173e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9437e-07, dtype=torch.float64)
secont condition:: tensor(7.9437e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2691e-07, dtype=torch.float64)
secont condition:: tensor(7.2691e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6946e-07, dtype=torch.float64)
secont condition:: tensor(6.6946e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.395226001739502
curr_diff: 0 tensor(3.4318e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.7597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.8990e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.8544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.3356e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.8169e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0038, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238635
Test Avg. Loss: 0.000024, Accuracy: 0.940000
Train - Epoch 1, Batch: 0, Loss: 0.258524
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.165519
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.157316
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 4, Batch: 0, Loss: 0.162206
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 5, Batch: 0, Loss: 0.154909
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 6, Batch: 0, Loss: 0.172855
Test Avg. Loss: 0.000101, Accuracy: 0.624000
Train - Epoch 7, Batch: 0, Loss: 1.035533
Test Avg. Loss: 0.000022, Accuracy: 0.946200
Train - Epoch 8, Batch: 0, Loss: 0.247948
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 9, Batch: 0, Loss: 0.181980
Test Avg. Loss: 0.000016, Accuracy: 0.953100
Train - Epoch 10, Batch: 0, Loss: 0.171617
Test Avg. Loss: 0.000015, Accuracy: 0.953500
Train - Epoch 11, Batch: 0, Loss: 0.166377
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 12, Batch: 0, Loss: 0.168580
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 13, Batch: 0, Loss: 0.161600
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 14, Batch: 0, Loss: 0.164784
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 15, Batch: 0, Loss: 0.156653
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 16, Batch: 0, Loss: 0.162122
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 17, Batch: 0, Loss: 0.154165
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 18, Batch: 0, Loss: 0.160373
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 19, Batch: 0, Loss: 0.153803
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 20, Batch: 0, Loss: 0.161352
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.152263
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 22, Batch: 0, Loss: 0.160106
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 23, Batch: 0, Loss: 0.152865
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 24, Batch: 0, Loss: 0.150223
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 25, Batch: 0, Loss: 0.152033
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 26, Batch: 0, Loss: 0.152394
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 27, Batch: 0, Loss: 0.151800
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 28, Batch: 0, Loss: 0.156311
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 29, Batch: 0, Loss: 0.157518
Test Avg. Loss: 0.000014, Accuracy: 0.960700
training_time:: 171.17013931274414
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.20221018791199
time_baseline:: 117.26822066307068
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0126, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0244, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0118, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0104, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0323, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8158e-08, dtype=torch.float64)
secont condition:: tensor(6.8158e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7655e-08, dtype=torch.float64)
secont condition:: tensor(5.7655e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0674e-06, dtype=torch.float64)
secont condition:: tensor(1.0674e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8336e-07, dtype=torch.float64)
secont condition:: tensor(6.8336e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9273e-07, dtype=torch.float64)
secont condition:: tensor(2.9273e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6843e-07, dtype=torch.float64)
secont condition:: tensor(2.6843e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2393e-07, dtype=torch.float64)
secont condition:: tensor(1.2393e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1268e-07, dtype=torch.float64)
secont condition:: tensor(1.1268e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2544e-07, dtype=torch.float64)
secont condition:: tensor(1.2544e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4687e-07, dtype=torch.float64)
secont condition:: tensor(1.4687e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6925e-07, dtype=torch.float64)
secont condition:: tensor(1.6925e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8368e-07, dtype=torch.float64)
secont condition:: tensor(1.8368e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8941e-06, dtype=torch.float64)
secont condition:: tensor(3.8941e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4055e-07, dtype=torch.float64)
secont condition:: tensor(1.4055e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1450e-08, dtype=torch.float64)
secont condition:: tensor(5.1450e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1482e-07, dtype=torch.float64)
secont condition:: tensor(1.1482e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0113e-07, dtype=torch.float64)
secont condition:: tensor(1.0113e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5633e-07, dtype=torch.float64)
secont condition:: tensor(1.5633e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9094e-07, dtype=torch.float64)
secont condition:: tensor(3.9094e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9285e-07, dtype=torch.float64)
secont condition:: tensor(3.9285e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4313e-07, dtype=torch.float64)
secont condition:: tensor(7.4313e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5188e-06, dtype=torch.float64)
secont condition:: tensor(1.5188e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5805e-06, dtype=torch.float64)
secont condition:: tensor(4.5805e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1882e-05, dtype=torch.float64)
secont condition:: tensor(1.1882e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3029e-05, dtype=torch.float64)
secont condition:: tensor(4.3029e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(1.8654e-05, dtype=torch.float64)
secont condition:: tensor(1.8654e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0041, dtype=torch.float64)
secont condition:: tensor(0.0041, dtype=torch.float64)
curr_secont condition:: tensor(0.0034, dtype=torch.float64)
secont condition:: tensor(0.0034, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.2114e-05, dtype=torch.float64)
secont condition:: tensor(9.2114e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.6013e-05, dtype=torch.float64)
secont condition:: tensor(7.6013e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5397e-05, dtype=torch.float64)
secont condition:: tensor(5.5397e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9436e-05, dtype=torch.float64)
secont condition:: tensor(7.9436e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.3884e-05, dtype=torch.float64)
secont condition:: tensor(9.3884e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5563e-05, dtype=torch.float64)
secont condition:: tensor(3.5563e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6486e-05, dtype=torch.float64)
secont condition:: tensor(8.6486e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6943e-05, dtype=torch.float64)
secont condition:: tensor(9.6943e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4252e-05, dtype=torch.float64)
secont condition:: tensor(4.4252e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9991e-05, dtype=torch.float64)
secont condition:: tensor(5.9991e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1488e-05, dtype=torch.float64)
secont condition:: tensor(4.1488e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4461e-05, dtype=torch.float64)
secont condition:: tensor(8.4461e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3728e-05, dtype=torch.float64)
secont condition:: tensor(4.3728e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1585e-05, dtype=torch.float64)
secont condition:: tensor(5.1585e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2745e-05, dtype=torch.float64)
secont condition:: tensor(4.2745e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4232e-05, dtype=torch.float64)
secont condition:: tensor(8.4232e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8062e-05, dtype=torch.float64)
secont condition:: tensor(2.8062e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8214e-05, dtype=torch.float64)
secont condition:: tensor(4.8214e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2897e-05, dtype=torch.float64)
secont condition:: tensor(7.2897e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6609e-05, dtype=torch.float64)
secont condition:: tensor(4.6609e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9583e-05, dtype=torch.float64)
secont condition:: tensor(6.9583e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.4580e-05, dtype=torch.float64)
secont condition:: tensor(9.4580e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3989e-05, dtype=torch.float64)
secont condition:: tensor(3.3989e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1454e-05, dtype=torch.float64)
secont condition:: tensor(7.1454e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7549e-05, dtype=torch.float64)
secont condition:: tensor(8.7549e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8940e-05, dtype=torch.float64)
secont condition:: tensor(4.8940e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9585e-05, dtype=torch.float64)
secont condition:: tensor(6.9585e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0078e-05, dtype=torch.float64)
secont condition:: tensor(5.0078e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0640e-05, dtype=torch.float64)
secont condition:: tensor(5.0640e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3021e-05, dtype=torch.float64)
secont condition:: tensor(5.3021e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9611e-05, dtype=torch.float64)
secont condition:: tensor(5.9611e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7559e-05, dtype=torch.float64)
secont condition:: tensor(6.7559e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1787e-05, dtype=torch.float64)
secont condition:: tensor(5.1787e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1330e-05, dtype=torch.float64)
secont condition:: tensor(5.1330e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0719e-05, dtype=torch.float64)
secont condition:: tensor(2.0719e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6088e-05, dtype=torch.float64)
secont condition:: tensor(5.6088e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5253e-05, dtype=torch.float64)
secont condition:: tensor(4.5253e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3254e-05, dtype=torch.float64)
secont condition:: tensor(4.3254e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.9487e-05, dtype=torch.float64)
secont condition:: tensor(3.9487e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7587e-05, dtype=torch.float64)
secont condition:: tensor(3.7587e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7811e-05, dtype=torch.float64)
secont condition:: tensor(3.7811e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6261e-05, dtype=torch.float64)
secont condition:: tensor(3.6261e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5426e-05, dtype=torch.float64)
secont condition:: tensor(1.5426e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.12186098098755
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4084e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9878e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9077e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0128, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0243, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0119, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0105, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0324, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234630
Test Avg. Loss: 0.000024, Accuracy: 0.939500
Train - Epoch 1, Batch: 0, Loss: 0.266873
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.166593
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.162447
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 4, Batch: 0, Loss: 0.158785
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 5, Batch: 0, Loss: 0.164562
Test Avg. Loss: 0.000057, Accuracy: 0.797300
Train - Epoch 6, Batch: 0, Loss: 0.604359
Test Avg. Loss: 0.000021, Accuracy: 0.948600
Train - Epoch 7, Batch: 0, Loss: 0.226372
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 8, Batch: 0, Loss: 0.176875
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 9, Batch: 0, Loss: 0.168189
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 10, Batch: 0, Loss: 0.157221
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 11, Batch: 0, Loss: 0.161823
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 12, Batch: 0, Loss: 0.163471
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 13, Batch: 0, Loss: 0.157923
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 14, Batch: 0, Loss: 0.159671
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 15, Batch: 0, Loss: 0.157636
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 16, Batch: 0, Loss: 0.153736
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 17, Batch: 0, Loss: 0.154475
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 18, Batch: 0, Loss: 0.157479
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 19, Batch: 0, Loss: 0.154351
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 20, Batch: 0, Loss: 0.144639
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.154135
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.158105
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 23, Batch: 0, Loss: 0.154796
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.152856
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.150006
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.151796
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.154945
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.160561
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.152693
Test Avg. Loss: 0.000014, Accuracy: 0.961300
training_time:: 171.81855154037476
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.96303486824036
time_baseline:: 117.03106808662415
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0045, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0059, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 6
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7265e-08, dtype=torch.float64)
secont condition:: tensor(3.7265e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4151e-06, dtype=torch.float64)
secont condition:: tensor(1.4151e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.1128e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2497e-06, dtype=torch.float64)
secont condition:: tensor(7.2497e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0257e-06, dtype=torch.float64)
secont condition:: tensor(1.0257e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9531e-07, dtype=torch.float64)
secont condition:: tensor(2.9531e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5100e-07, dtype=torch.float64)
secont condition:: tensor(2.5100e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3210e-07, dtype=torch.float64)
secont condition:: tensor(2.3210e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5636e-08, dtype=torch.float64)
secont condition:: tensor(6.5636e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6157e-08, dtype=torch.float64)
secont condition:: tensor(4.6157e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5614e-07, dtype=torch.float64)
secont condition:: tensor(2.5614e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0362e-07, dtype=torch.float64)
secont condition:: tensor(3.0362e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1224e-07, dtype=torch.float64)
secont condition:: tensor(6.1224e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5832e-05, dtype=torch.float64)
secont condition:: tensor(1.5832e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1964e-07, dtype=torch.float64)
secont condition:: tensor(3.1964e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2449e-07, dtype=torch.float64)
secont condition:: tensor(2.2449e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9756e-07, dtype=torch.float64)
secont condition:: tensor(3.9756e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4271e-07, dtype=torch.float64)
secont condition:: tensor(6.4271e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2250e-06, dtype=torch.float64)
secont condition:: tensor(1.2250e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0507e-06, dtype=torch.float64)
secont condition:: tensor(2.0507e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4095e-06, dtype=torch.float64)
secont condition:: tensor(4.4095e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9513e-06, dtype=torch.float64)
secont condition:: tensor(9.9513e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3938e-05, dtype=torch.float64)
secont condition:: tensor(3.3938e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4058e-05, dtype=torch.float64)
secont condition:: tensor(5.4058e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4023e-05, dtype=torch.float64)
secont condition:: tensor(1.4023e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4643e-05, dtype=torch.float64)
secont condition:: tensor(3.4643e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2986e-05, dtype=torch.float64)
secont condition:: tensor(1.2986e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.3584e-06, dtype=torch.float64)
secont condition:: tensor(9.3584e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2483e-06, dtype=torch.float64)
secont condition:: tensor(8.2483e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2383e-06, dtype=torch.float64)
secont condition:: tensor(4.2383e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6123e-06, dtype=torch.float64)
secont condition:: tensor(5.6123e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5018e-06, dtype=torch.float64)
secont condition:: tensor(3.5018e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5650e-06, dtype=torch.float64)
secont condition:: tensor(6.5650e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2551e-06, dtype=torch.float64)
secont condition:: tensor(4.2551e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5491e-06, dtype=torch.float64)
secont condition:: tensor(4.5491e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6179e-06, dtype=torch.float64)
secont condition:: tensor(4.6179e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1098e-06, dtype=torch.float64)
secont condition:: tensor(3.1098e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1048e-06, dtype=torch.float64)
secont condition:: tensor(3.1048e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9074e-06, dtype=torch.float64)
secont condition:: tensor(3.9074e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5091e-06, dtype=torch.float64)
secont condition:: tensor(3.5091e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7149e-05, dtype=torch.float64)
secont condition:: tensor(3.7149e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2953e-05, dtype=torch.float64)
secont condition:: tensor(2.2953e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5591e-05, dtype=torch.float64)
secont condition:: tensor(1.5591e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1157e-06, dtype=torch.float64)
secont condition:: tensor(2.1157e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6632e-06, dtype=torch.float64)
secont condition:: tensor(2.6632e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9328e-06, dtype=torch.float64)
secont condition:: tensor(1.9328e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1488e-06, dtype=torch.float64)
secont condition:: tensor(8.1488e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6871e-06, dtype=torch.float64)
secont condition:: tensor(1.6871e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8541e-06, dtype=torch.float64)
secont condition:: tensor(1.8541e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0542e-06, dtype=torch.float64)
secont condition:: tensor(3.0542e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1662e-06, dtype=torch.float64)
secont condition:: tensor(5.1662e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7041e-06, dtype=torch.float64)
secont condition:: tensor(2.7041e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7883e-06, dtype=torch.float64)
secont condition:: tensor(2.7883e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7900e-06, dtype=torch.float64)
secont condition:: tensor(2.7900e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0944e-06, dtype=torch.float64)
secont condition:: tensor(2.0944e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8056e-06, dtype=torch.float64)
secont condition:: tensor(5.8056e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9993e-06, dtype=torch.float64)
secont condition:: tensor(1.9993e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3090e-06, dtype=torch.float64)
secont condition:: tensor(2.3090e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7020e-06, dtype=torch.float64)
secont condition:: tensor(1.7020e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8923e-06, dtype=torch.float64)
secont condition:: tensor(1.8923e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9017e-06, dtype=torch.float64)
secont condition:: tensor(1.9017e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2349e-06, dtype=torch.float64)
secont condition:: tensor(2.2349e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3190e-06, dtype=torch.float64)
secont condition:: tensor(1.3190e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5984e-06, dtype=torch.float64)
secont condition:: tensor(1.5984e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0588e-06, dtype=torch.float64)
secont condition:: tensor(1.0588e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4332e-06, dtype=torch.float64)
secont condition:: tensor(1.4332e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7192e-06, dtype=torch.float64)
secont condition:: tensor(2.7192e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3273e-06, dtype=torch.float64)
secont condition:: tensor(1.3273e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3035e-06, dtype=torch.float64)
secont condition:: tensor(1.3035e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6419e-06, dtype=torch.float64)
secont condition:: tensor(1.6419e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1388e-07, dtype=torch.float64)
secont condition:: tensor(9.1388e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2258e-06, dtype=torch.float64)
secont condition:: tensor(1.2258e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5353e-06, dtype=torch.float64)
secont condition:: tensor(1.5353e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2055e-06, dtype=torch.float64)
secont condition:: tensor(2.2055e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0125e-06, dtype=torch.float64)
secont condition:: tensor(1.0125e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1319e-06, dtype=torch.float64)
secont condition:: tensor(1.1319e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1465e-07, dtype=torch.float64)
secont condition:: tensor(6.1465e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.08431100845337
curr_diff: 0 tensor(2.2371e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3749e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1078e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2611e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.8389e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0060, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
deletion rate:: 0.0002
random set 1
python3 generate_rand_ids 0.0002  MNIST
tensor([17920, 48643, 24451, 39875, 41928, 18669, 14671, 45264, 51537, 44882,
        42428, 18718])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232971
Test Avg. Loss: 0.000024, Accuracy: 0.940700
Train - Epoch 1, Batch: 0, Loss: 0.263950
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.161678
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.163258
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 4, Batch: 0, Loss: 0.158391
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 5, Batch: 0, Loss: 0.161164
Test Avg. Loss: 0.000018, Accuracy: 0.945400
Train - Epoch 6, Batch: 0, Loss: 0.196307
Test Avg. Loss: 0.000097, Accuracy: 0.649400
Train - Epoch 7, Batch: 0, Loss: 0.999292
Test Avg. Loss: 0.000025, Accuracy: 0.937700
Train - Epoch 8, Batch: 0, Loss: 0.274071
Test Avg. Loss: 0.000017, Accuracy: 0.949900
Train - Epoch 9, Batch: 0, Loss: 0.188752
Test Avg. Loss: 0.000016, Accuracy: 0.951500
Train - Epoch 10, Batch: 0, Loss: 0.181858
Test Avg. Loss: 0.000016, Accuracy: 0.952300
Train - Epoch 11, Batch: 0, Loss: 0.177701
Test Avg. Loss: 0.000015, Accuracy: 0.953900
Train - Epoch 12, Batch: 0, Loss: 0.173961
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 13, Batch: 0, Loss: 0.164570
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 14, Batch: 0, Loss: 0.170263
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 15, Batch: 0, Loss: 0.159952
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 16, Batch: 0, Loss: 0.160891
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 17, Batch: 0, Loss: 0.160874
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 18, Batch: 0, Loss: 0.152923
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 19, Batch: 0, Loss: 0.155736
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 20, Batch: 0, Loss: 0.158533
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.159869
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 22, Batch: 0, Loss: 0.163816
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 23, Batch: 0, Loss: 0.157658
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 24, Batch: 0, Loss: 0.151851
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 25, Batch: 0, Loss: 0.158506
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 26, Batch: 0, Loss: 0.158537
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.161877
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 28, Batch: 0, Loss: 0.158086
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 29, Batch: 0, Loss: 0.154565
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 172.12763452529907
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.07483267784119
time_baseline:: 117.14461946487427
curr_diff: 0 tensor(0.0095, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0512, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0892, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0055, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0420, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0103, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0328, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0167, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1180, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7019e-07, dtype=torch.float64)
secont condition:: tensor(1.7019e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9654e-07, dtype=torch.float64)
secont condition:: tensor(3.9654e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.4686e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3883e-06, dtype=torch.float64)
secont condition:: tensor(1.3883e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1036e-07, dtype=torch.float64)
secont condition:: tensor(3.1036e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3135e-07, dtype=torch.float64)
secont condition:: tensor(1.3135e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3630e-08, dtype=torch.float64)
secont condition:: tensor(5.3630e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7552e-07, dtype=torch.float64)
secont condition:: tensor(1.7552e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4335e-08, dtype=torch.float64)
secont condition:: tensor(7.4335e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0812e-07, dtype=torch.float64)
secont condition:: tensor(2.0812e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8233e-08, dtype=torch.float64)
secont condition:: tensor(6.8233e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9306e-07, dtype=torch.float64)
secont condition:: tensor(3.9306e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4633e-07, dtype=torch.float64)
secont condition:: tensor(3.4633e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0519e-07, dtype=torch.float64)
secont condition:: tensor(9.0519e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6324e-07, dtype=torch.float64)
secont condition:: tensor(9.6324e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1570e-06, dtype=torch.float64)
secont condition:: tensor(1.1570e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0594e-06, dtype=torch.float64)
secont condition:: tensor(2.0594e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1283e-06, dtype=torch.float64)
secont condition:: tensor(4.1283e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5190e-06, dtype=torch.float64)
secont condition:: tensor(6.5190e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0792e-05, dtype=torch.float64)
secont condition:: tensor(1.0792e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9731e-05, dtype=torch.float64)
secont condition:: tensor(1.9731e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4268e-05, dtype=torch.float64)
secont condition:: tensor(4.4268e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0142, dtype=torch.float64)
secont condition:: tensor(0.0142, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0172, dtype=torch.float64)
secont condition:: tensor(0.0172, dtype=torch.float64)
curr_secont condition:: tensor(0.0097, dtype=torch.float64)
secont condition:: tensor(0.0097, dtype=torch.float64)
curr_secont condition:: tensor(0.0082, dtype=torch.float64)
secont condition:: tensor(0.0082, dtype=torch.float64)
curr_secont condition:: tensor(0.0078, dtype=torch.float64)
secont condition:: tensor(0.0078, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0088, dtype=torch.float64)
secont condition:: tensor(0.0088, dtype=torch.float64)
curr_secont condition:: tensor(0.0051, dtype=torch.float64)
secont condition:: tensor(0.0051, dtype=torch.float64)
curr_secont condition:: tensor(0.0031, dtype=torch.float64)
secont condition:: tensor(0.0031, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0025, dtype=torch.float64)
secont condition:: tensor(0.0025, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0022, dtype=torch.float64)
secont condition:: tensor(0.0022, dtype=torch.float64)
curr_secont condition:: tensor(0.0022, dtype=torch.float64)
secont condition:: tensor(0.0022, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.205944538116455
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3951e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0038, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6936e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3684e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.8941e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0047, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0514, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0887, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0056, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0420, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0103, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0331, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0167, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1178, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.238840
Test Avg. Loss: 0.000025, Accuracy: 0.934800
Train - Epoch 1, Batch: 0, Loss: 0.278059
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.166322
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.157705
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.153701
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.159841
Test Avg. Loss: 0.000017, Accuracy: 0.948400
Train - Epoch 6, Batch: 0, Loss: 0.183991
Test Avg. Loss: 0.000054, Accuracy: 0.861600
Train - Epoch 7, Batch: 0, Loss: 0.561451
Test Avg. Loss: 0.000017, Accuracy: 0.954500
Train - Epoch 8, Batch: 0, Loss: 0.180603
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 9, Batch: 0, Loss: 0.163952
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 10, Batch: 0, Loss: 0.161115
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 11, Batch: 0, Loss: 0.160123
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 12, Batch: 0, Loss: 0.156681
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 13, Batch: 0, Loss: 0.158845
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 14, Batch: 0, Loss: 0.153364
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 15, Batch: 0, Loss: 0.156578
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.151168
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.154648
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 18, Batch: 0, Loss: 0.154960
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 19, Batch: 0, Loss: 0.150472
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 20, Batch: 0, Loss: 0.148187
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.159048
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.158262
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.152006
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 24, Batch: 0, Loss: 0.155607
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 25, Batch: 0, Loss: 0.151942
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.144905
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.151077
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.150210
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.153211
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 170.91089916229248
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.9491081237793
time_baseline:: 116.01619482040405
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0089, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0114, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7434e-08, dtype=torch.float64)
secont condition:: tensor(6.7434e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9373e-07, dtype=torch.float64)
secont condition:: tensor(2.9373e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.4276e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2794e-07, dtype=torch.float64)
secont condition:: tensor(8.2794e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2400e-07, dtype=torch.float64)
secont condition:: tensor(2.2400e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2001e-08, dtype=torch.float64)
secont condition:: tensor(1.2001e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3585e-07, dtype=torch.float64)
secont condition:: tensor(2.3585e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1784e-07, dtype=torch.float64)
secont condition:: tensor(1.1784e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1612e-07, dtype=torch.float64)
secont condition:: tensor(1.1612e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8379e-07, dtype=torch.float64)
secont condition:: tensor(2.8379e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1165e-07, dtype=torch.float64)
secont condition:: tensor(2.1165e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4616e-08, dtype=torch.float64)
secont condition:: tensor(7.4616e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0148e-08, dtype=torch.float64)
secont condition:: tensor(7.0148e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1425e-07, dtype=torch.float64)
secont condition:: tensor(3.1425e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6979e-07, dtype=torch.float64)
secont condition:: tensor(2.6979e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7184e-07, dtype=torch.float64)
secont condition:: tensor(2.7184e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4749e-07, dtype=torch.float64)
secont condition:: tensor(4.4749e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5561e-07, dtype=torch.float64)
secont condition:: tensor(5.5561e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3205e-07, dtype=torch.float64)
secont condition:: tensor(6.3205e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7625e-07, dtype=torch.float64)
secont condition:: tensor(9.7625e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7444e-06, dtype=torch.float64)
secont condition:: tensor(1.7444e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0896e-06, dtype=torch.float64)
secont condition:: tensor(4.0896e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.4375e-06, dtype=torch.float64)
secont condition:: tensor(9.4375e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9462e-05, dtype=torch.float64)
secont condition:: tensor(2.9462e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.9502e-05, dtype=torch.float64)
secont condition:: tensor(8.9502e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0054, dtype=torch.float64)
secont condition:: tensor(0.0054, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(4.8273e-05, dtype=torch.float64)
secont condition:: tensor(4.8273e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5839e-05, dtype=torch.float64)
secont condition:: tensor(4.5839e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6198e-05, dtype=torch.float64)
secont condition:: tensor(2.6198e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0748e-05, dtype=torch.float64)
secont condition:: tensor(3.0748e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0110e-05, dtype=torch.float64)
secont condition:: tensor(2.0110e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7517e-05, dtype=torch.float64)
secont condition:: tensor(1.7517e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0545e-05, dtype=torch.float64)
secont condition:: tensor(2.0545e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1774e-05, dtype=torch.float64)
secont condition:: tensor(2.1774e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8434e-05, dtype=torch.float64)
secont condition:: tensor(1.8434e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7339e-05, dtype=torch.float64)
secont condition:: tensor(1.7339e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4335e-05, dtype=torch.float64)
secont condition:: tensor(1.4335e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7898e-05, dtype=torch.float64)
secont condition:: tensor(1.7898e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1417e-05, dtype=torch.float64)
secont condition:: tensor(2.1417e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4809e-05, dtype=torch.float64)
secont condition:: tensor(1.4809e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.3443e-06, dtype=torch.float64)
secont condition:: tensor(8.3443e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1667e-06, dtype=torch.float64)
secont condition:: tensor(9.1667e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1794e-05, dtype=torch.float64)
secont condition:: tensor(1.1794e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5764e-05, dtype=torch.float64)
secont condition:: tensor(1.5764e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6160e-06, dtype=torch.float64)
secont condition:: tensor(8.6160e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5295e-06, dtype=torch.float64)
secont condition:: tensor(9.5295e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7753e-06, dtype=torch.float64)
secont condition:: tensor(8.7753e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3040e-05, dtype=torch.float64)
secont condition:: tensor(1.3040e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.4993e-06, dtype=torch.float64)
secont condition:: tensor(8.4993e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5602e-06, dtype=torch.float64)
secont condition:: tensor(7.5602e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0943e-05, dtype=torch.float64)
secont condition:: tensor(1.0943e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0223e-05, dtype=torch.float64)
secont condition:: tensor(1.0223e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5039e-06, dtype=torch.float64)
secont condition:: tensor(5.5039e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1947e-06, dtype=torch.float64)
secont condition:: tensor(6.1947e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5125e-06, dtype=torch.float64)
secont condition:: tensor(7.5125e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9295e-06, dtype=torch.float64)
secont condition:: tensor(5.9295e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2064e-05, dtype=torch.float64)
secont condition:: tensor(1.2064e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8223e-06, dtype=torch.float64)
secont condition:: tensor(6.8223e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6308e-06, dtype=torch.float64)
secont condition:: tensor(4.6308e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4862e-06, dtype=torch.float64)
secont condition:: tensor(7.4862e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6501e-06, dtype=torch.float64)
secont condition:: tensor(4.6501e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8507e-06, dtype=torch.float64)
secont condition:: tensor(3.8507e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0146e-06, dtype=torch.float64)
secont condition:: tensor(4.0146e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1637e-06, dtype=torch.float64)
secont condition:: tensor(8.1637e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6942e-06, dtype=torch.float64)
secont condition:: tensor(4.6942e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9041e-06, dtype=torch.float64)
secont condition:: tensor(5.9041e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8711e-06, dtype=torch.float64)
secont condition:: tensor(1.8711e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6279e-06, dtype=torch.float64)
secont condition:: tensor(3.6279e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1465e-06, dtype=torch.float64)
secont condition:: tensor(3.1465e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8174e-06, dtype=torch.float64)
secont condition:: tensor(3.8174e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3105e-06, dtype=torch.float64)
secont condition:: tensor(3.3105e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7341e-06, dtype=torch.float64)
secont condition:: tensor(3.7341e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0777e-06, dtype=torch.float64)
secont condition:: tensor(4.0777e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6631e-06, dtype=torch.float64)
secont condition:: tensor(2.6631e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2113e-06, dtype=torch.float64)
secont condition:: tensor(3.2113e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.17749810218811
curr_diff: 0 tensor(4.8179e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0797e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6762e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9215e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0091, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0045, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0115, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.231879
Test Avg. Loss: 0.000027, Accuracy: 0.930600
Train - Epoch 1, Batch: 0, Loss: 0.289238
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.174114
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.159510
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 4, Batch: 0, Loss: 0.155249
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.154005
Test Avg. Loss: 0.000015, Accuracy: 0.955700
Train - Epoch 6, Batch: 0, Loss: 0.162112
Test Avg. Loss: 0.000130, Accuracy: 0.662400
Train - Epoch 7, Batch: 0, Loss: 1.329419
Test Avg. Loss: 0.000023, Accuracy: 0.945900
Train - Epoch 8, Batch: 0, Loss: 0.247652
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 9, Batch: 0, Loss: 0.181208
Test Avg. Loss: 0.000016, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.177499
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 11, Batch: 0, Loss: 0.170716
Test Avg. Loss: 0.000015, Accuracy: 0.954600
Train - Epoch 12, Batch: 0, Loss: 0.167247
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 13, Batch: 0, Loss: 0.161194
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 14, Batch: 0, Loss: 0.163509
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 15, Batch: 0, Loss: 0.161480
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 16, Batch: 0, Loss: 0.161633
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 17, Batch: 0, Loss: 0.167949
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 18, Batch: 0, Loss: 0.153852
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 19, Batch: 0, Loss: 0.162221
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 20, Batch: 0, Loss: 0.156241
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 21, Batch: 0, Loss: 0.156968
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 22, Batch: 0, Loss: 0.159348
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 23, Batch: 0, Loss: 0.154444
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 24, Batch: 0, Loss: 0.154531
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 25, Batch: 0, Loss: 0.153981
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 26, Batch: 0, Loss: 0.158407
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 27, Batch: 0, Loss: 0.153423
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 28, Batch: 0, Loss: 0.154859
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 29, Batch: 0, Loss: 0.153930
Test Avg. Loss: 0.000014, Accuracy: 0.959900
training_time:: 170.58381342887878
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.51217746734619
time_baseline:: 115.57918882369995
curr_diff: 0 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0246, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0501, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0191, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0145, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0611, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0100e-07, dtype=torch.float64)
secont condition:: tensor(1.0100e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6853e-07, dtype=torch.float64)
secont condition:: tensor(5.6853e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.9604e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5490e-06, dtype=torch.float64)
secont condition:: tensor(1.5490e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9586e-07, dtype=torch.float64)
secont condition:: tensor(2.9586e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3445e-08, dtype=torch.float64)
secont condition:: tensor(4.3445e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4037e-07, dtype=torch.float64)
secont condition:: tensor(2.4037e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7641e-08, dtype=torch.float64)
secont condition:: tensor(4.7641e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5457e-07, dtype=torch.float64)
secont condition:: tensor(1.5457e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7317e-08, dtype=torch.float64)
secont condition:: tensor(6.7317e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3472e-08, dtype=torch.float64)
secont condition:: tensor(7.3472e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7736e-08, dtype=torch.float64)
secont condition:: tensor(1.7736e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1208e-07, dtype=torch.float64)
secont condition:: tensor(1.1208e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4204e-08, dtype=torch.float64)
secont condition:: tensor(7.4204e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4867e-07, dtype=torch.float64)
secont condition:: tensor(1.4867e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1528e-07, dtype=torch.float64)
secont condition:: tensor(1.1528e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4077e-07, dtype=torch.float64)
secont condition:: tensor(1.4077e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1959e-07, dtype=torch.float64)
secont condition:: tensor(1.1959e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4184e-07, dtype=torch.float64)
secont condition:: tensor(6.4184e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9362e-07, dtype=torch.float64)
secont condition:: tensor(6.9362e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8395e-06, dtype=torch.float64)
secont condition:: tensor(1.8395e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0179e-06, dtype=torch.float64)
secont condition:: tensor(3.0179e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6986e-06, dtype=torch.float64)
secont condition:: tensor(6.6986e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6782e-05, dtype=torch.float64)
secont condition:: tensor(1.6782e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4733e-05, dtype=torch.float64)
secont condition:: tensor(4.4733e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0028, dtype=torch.float64)
curr_secont condition:: tensor(0.0194, dtype=torch.float64)
secont condition:: tensor(0.0194, dtype=torch.float64)
curr_secont condition:: tensor(0.0136, dtype=torch.float64)
secont condition:: tensor(0.0136, dtype=torch.float64)
curr_secont condition:: tensor(0.0059, dtype=torch.float64)
secont condition:: tensor(0.0059, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(9.5037e-05, dtype=torch.float64)
secont condition:: tensor(9.5037e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3139e-05, dtype=torch.float64)
secont condition:: tensor(7.3139e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(5.7915e-05, dtype=torch.float64)
secont condition:: tensor(5.7915e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8419e-05, dtype=torch.float64)
secont condition:: tensor(9.8419e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.2426e-05, dtype=torch.float64)
secont condition:: tensor(8.2426e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.1953387260437
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0518e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3516e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4420e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3031e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0026, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0247, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0501, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0192, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0146, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0612, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959700
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239633
Test Avg. Loss: 0.000023, Accuracy: 0.943600
Train - Epoch 1, Batch: 0, Loss: 0.250766
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.162903
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 3, Batch: 0, Loss: 0.151698
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.158000
Test Avg. Loss: 0.000016, Accuracy: 0.954800
Train - Epoch 5, Batch: 0, Loss: 0.176403
Test Avg. Loss: 0.000046, Accuracy: 0.839100
Train - Epoch 6, Batch: 0, Loss: 0.494686
Test Avg. Loss: 0.000019, Accuracy: 0.951700
Train - Epoch 7, Batch: 0, Loss: 0.207832
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 8, Batch: 0, Loss: 0.170116
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 9, Batch: 0, Loss: 0.160030
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 10, Batch: 0, Loss: 0.156180
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 11, Batch: 0, Loss: 0.156949
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 12, Batch: 0, Loss: 0.156866
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 13, Batch: 0, Loss: 0.160324
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 14, Batch: 0, Loss: 0.151948
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 15, Batch: 0, Loss: 0.155928
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 16, Batch: 0, Loss: 0.150722
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 17, Batch: 0, Loss: 0.156601
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.156998
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.146947
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 20, Batch: 0, Loss: 0.154785
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 21, Batch: 0, Loss: 0.159590
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 22, Batch: 0, Loss: 0.152476
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 23, Batch: 0, Loss: 0.153158
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 24, Batch: 0, Loss: 0.147905
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 25, Batch: 0, Loss: 0.153521
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 26, Batch: 0, Loss: 0.151981
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 27, Batch: 0, Loss: 0.159099
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 28, Batch: 0, Loss: 0.152390
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 29, Batch: 0, Loss: 0.159844
Test Avg. Loss: 0.000014, Accuracy: 0.962400
training_time:: 172.5134494304657
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.29064607620239
time_baseline:: 117.35516452789307
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0063, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0246e-07, dtype=torch.float64)
secont condition:: tensor(1.0246e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2478e-07, dtype=torch.float64)
secont condition:: tensor(1.2478e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9902e-07, dtype=torch.float64)
secont condition:: tensor(2.9902e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5258e-07, dtype=torch.float64)
secont condition:: tensor(4.5258e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2229e-08, dtype=torch.float64)
secont condition:: tensor(9.2229e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8657e-08, dtype=torch.float64)
secont condition:: tensor(7.8657e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9042e-08, dtype=torch.float64)
secont condition:: tensor(6.9042e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9502e-08, dtype=torch.float64)
secont condition:: tensor(2.9502e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6188e-07, dtype=torch.float64)
secont condition:: tensor(1.6188e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1923e-08, dtype=torch.float64)
secont condition:: tensor(9.1923e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6473e-08, dtype=torch.float64)
secont condition:: tensor(7.6473e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7027e-07, dtype=torch.float64)
secont condition:: tensor(1.7027e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2988e-08, dtype=torch.float64)
secont condition:: tensor(8.2988e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0847e-08, dtype=torch.float64)
secont condition:: tensor(7.0847e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2635e-08, dtype=torch.float64)
secont condition:: tensor(3.2635e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2766e-07, dtype=torch.float64)
secont condition:: tensor(2.2766e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8245e-07, dtype=torch.float64)
secont condition:: tensor(2.8245e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8183e-07, dtype=torch.float64)
secont condition:: tensor(8.8183e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6348e-06, dtype=torch.float64)
secont condition:: tensor(1.6348e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5247e-06, dtype=torch.float64)
secont condition:: tensor(4.5247e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8960e-06, dtype=torch.float64)
secont condition:: tensor(7.8960e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0386e-05, dtype=torch.float64)
secont condition:: tensor(2.0386e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4805e-05, dtype=torch.float64)
secont condition:: tensor(4.4805e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8214e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(4.1358e-05, dtype=torch.float64)
secont condition:: tensor(4.1358e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0868e-05, dtype=torch.float64)
secont condition:: tensor(2.0868e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3125e-05, dtype=torch.float64)
secont condition:: tensor(1.3125e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3995e-05, dtype=torch.float64)
secont condition:: tensor(1.3995e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3010e-05, dtype=torch.float64)
secont condition:: tensor(1.3010e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8274e-05, dtype=torch.float64)
secont condition:: tensor(2.8274e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.1830e-06, dtype=torch.float64)
secont condition:: tensor(6.1830e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0259e-05, dtype=torch.float64)
secont condition:: tensor(1.0259e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9313e-06, dtype=torch.float64)
secont condition:: tensor(5.9313e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7824e-06, dtype=torch.float64)
secont condition:: tensor(7.7824e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4973e-06, dtype=torch.float64)
secont condition:: tensor(6.4973e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5978e-06, dtype=torch.float64)
secont condition:: tensor(6.5978e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2029e-05, dtype=torch.float64)
secont condition:: tensor(1.2029e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8528e-06, dtype=torch.float64)
secont condition:: tensor(2.8528e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3730e-06, dtype=torch.float64)
secont condition:: tensor(3.3730e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6490e-06, dtype=torch.float64)
secont condition:: tensor(4.6490e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6758e-06, dtype=torch.float64)
secont condition:: tensor(4.6758e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6591e-06, dtype=torch.float64)
secont condition:: tensor(5.6591e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3595e-06, dtype=torch.float64)
secont condition:: tensor(5.3595e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5043e-06, dtype=torch.float64)
secont condition:: tensor(5.5043e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0730e-06, dtype=torch.float64)
secont condition:: tensor(3.0730e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0423e-05, dtype=torch.float64)
secont condition:: tensor(1.0423e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7997e-06, dtype=torch.float64)
secont condition:: tensor(3.7997e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8131e-06, dtype=torch.float64)
secont condition:: tensor(6.8131e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2255e-06, dtype=torch.float64)
secont condition:: tensor(3.2255e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9850e-06, dtype=torch.float64)
secont condition:: tensor(2.9850e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2245e-06, dtype=torch.float64)
secont condition:: tensor(3.2245e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1263e-06, dtype=torch.float64)
secont condition:: tensor(3.1263e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5904e-06, dtype=torch.float64)
secont condition:: tensor(3.5904e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5552e-06, dtype=torch.float64)
secont condition:: tensor(2.5552e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5962e-06, dtype=torch.float64)
secont condition:: tensor(2.5962e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2170e-06, dtype=torch.float64)
secont condition:: tensor(4.2170e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3437e-06, dtype=torch.float64)
secont condition:: tensor(2.3437e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1453e-06, dtype=torch.float64)
secont condition:: tensor(3.1453e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1597e-06, dtype=torch.float64)
secont condition:: tensor(6.1597e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0810e-06, dtype=torch.float64)
secont condition:: tensor(4.0810e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8783e-06, dtype=torch.float64)
secont condition:: tensor(2.8783e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1118e-06, dtype=torch.float64)
secont condition:: tensor(1.1118e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0895e-06, dtype=torch.float64)
secont condition:: tensor(2.0895e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8536e-06, dtype=torch.float64)
secont condition:: tensor(1.8536e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9970e-06, dtype=torch.float64)
secont condition:: tensor(1.9970e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4151e-06, dtype=torch.float64)
secont condition:: tensor(1.4151e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2833e-06, dtype=torch.float64)
secont condition:: tensor(2.2833e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3995e-06, dtype=torch.float64)
secont condition:: tensor(1.3995e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4296e-06, dtype=torch.float64)
secont condition:: tensor(1.4296e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3869e-06, dtype=torch.float64)
secont condition:: tensor(1.3869e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1379e-06, dtype=torch.float64)
secont condition:: tensor(2.1379e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9097e-06, dtype=torch.float64)
secont condition:: tensor(1.9097e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9576e-07, dtype=torch.float64)
secont condition:: tensor(6.9576e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2456e-06, dtype=torch.float64)
secont condition:: tensor(2.2456e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2683e-06, dtype=torch.float64)
secont condition:: tensor(1.2683e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.27072024345398
curr_diff: 0 tensor(2.7591e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5104e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6311e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1565e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4538e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0065, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.245348
Test Avg. Loss: 0.000025, Accuracy: 0.938700
Train - Epoch 1, Batch: 0, Loss: 0.264592
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.170003
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 3, Batch: 0, Loss: 0.160409
Test Avg. Loss: 0.000014, Accuracy: 0.957300
Train - Epoch 4, Batch: 0, Loss: 0.157106
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 5, Batch: 0, Loss: 0.157527
Test Avg. Loss: 0.000026, Accuracy: 0.914600
Train - Epoch 6, Batch: 0, Loss: 0.281959
Test Avg. Loss: 0.000047, Accuracy: 0.882500
Train - Epoch 7, Batch: 0, Loss: 0.496313
Test Avg. Loss: 0.000018, Accuracy: 0.951700
Train - Epoch 8, Batch: 0, Loss: 0.202400
Test Avg. Loss: 0.000016, Accuracy: 0.951700
Train - Epoch 9, Batch: 0, Loss: 0.176655
Test Avg. Loss: 0.000016, Accuracy: 0.954200
Train - Epoch 10, Batch: 0, Loss: 0.174992
Test Avg. Loss: 0.000015, Accuracy: 0.954300
Train - Epoch 11, Batch: 0, Loss: 0.172113
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 12, Batch: 0, Loss: 0.158957
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 13, Batch: 0, Loss: 0.161026
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 14, Batch: 0, Loss: 0.159938
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 15, Batch: 0, Loss: 0.159214
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 16, Batch: 0, Loss: 0.161493
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 17, Batch: 0, Loss: 0.156270
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 18, Batch: 0, Loss: 0.158673
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 19, Batch: 0, Loss: 0.151493
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 20, Batch: 0, Loss: 0.156903
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.153653
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 22, Batch: 0, Loss: 0.152714
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 23, Batch: 0, Loss: 0.161440
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 24, Batch: 0, Loss: 0.158715
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 25, Batch: 0, Loss: 0.152338
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 26, Batch: 0, Loss: 0.156282
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.154119
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.151768
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 29, Batch: 0, Loss: 0.158536
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 168.6380376815796
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.5396056175232
time_baseline:: 116.60427737236023
curr_diff: 0 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0093, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0166, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0063, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0217, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7643e-07, dtype=torch.float64)
secont condition:: tensor(5.7643e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5027e-06, dtype=torch.float64)
secont condition:: tensor(1.5027e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9429e-07, dtype=torch.float64)
secont condition:: tensor(9.9429e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2746e-07, dtype=torch.float64)
secont condition:: tensor(9.2746e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7688e-07, dtype=torch.float64)
secont condition:: tensor(1.7688e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8866e-07, dtype=torch.float64)
secont condition:: tensor(1.8866e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0236e-08, dtype=torch.float64)
secont condition:: tensor(9.0236e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2032e-08, dtype=torch.float64)
secont condition:: tensor(5.2032e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5495e-08, dtype=torch.float64)
secont condition:: tensor(2.5495e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4381e-08, dtype=torch.float64)
secont condition:: tensor(4.4381e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0291e-07, dtype=torch.float64)
secont condition:: tensor(3.0291e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1828e-07, dtype=torch.float64)
secont condition:: tensor(1.1828e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4155e-08, dtype=torch.float64)
secont condition:: tensor(8.4155e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2009e-08, dtype=torch.float64)
secont condition:: tensor(9.2009e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4332e-08, dtype=torch.float64)
secont condition:: tensor(8.4332e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8856e-07, dtype=torch.float64)
secont condition:: tensor(6.8856e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0699e-07, dtype=torch.float64)
secont condition:: tensor(3.0699e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6343e-07, dtype=torch.float64)
secont condition:: tensor(6.6343e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9767e-07, dtype=torch.float64)
secont condition:: tensor(5.9767e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5052e-06, dtype=torch.float64)
secont condition:: tensor(1.5052e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6702e-06, dtype=torch.float64)
secont condition:: tensor(2.6702e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7024e-06, dtype=torch.float64)
secont condition:: tensor(5.7024e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2162e-05, dtype=torch.float64)
secont condition:: tensor(1.2162e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2515e-05, dtype=torch.float64)
secont condition:: tensor(3.2515e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.5467e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(-2.6971e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4408e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.1390e-05, dtype=torch.float64)
secont condition:: tensor(8.1390e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7660e-05, dtype=torch.float64)
secont condition:: tensor(2.7660e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1742e-05, dtype=torch.float64)
secont condition:: tensor(5.1742e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9681e-05, dtype=torch.float64)
secont condition:: tensor(4.9681e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.0851e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0153e-05, dtype=torch.float64)
secont condition:: tensor(1.0153e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7480e-05, dtype=torch.float64)
secont condition:: tensor(4.7480e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1206e-05, dtype=torch.float64)
secont condition:: tensor(3.1206e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5746e-05, dtype=torch.float64)
secont condition:: tensor(1.5746e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0467e-05, dtype=torch.float64)
secont condition:: tensor(4.0467e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0507e-05, dtype=torch.float64)
secont condition:: tensor(5.0507e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1157e-05, dtype=torch.float64)
secont condition:: tensor(3.1157e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8126e-05, dtype=torch.float64)
secont condition:: tensor(3.8126e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3783e-06, dtype=torch.float64)
secont condition:: tensor(1.3783e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6358e-05, dtype=torch.float64)
secont condition:: tensor(2.6358e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3385e-05, dtype=torch.float64)
secont condition:: tensor(2.3385e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.7053e-06, dtype=torch.float64)
secont condition:: tensor(8.7053e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6834e-05, dtype=torch.float64)
secont condition:: tensor(3.6834e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1619e-05, dtype=torch.float64)
secont condition:: tensor(2.1619e-05, dtype=torch.float64)
curr_secont condition:: tensor(-8.8605e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9870e-05, dtype=torch.float64)
secont condition:: tensor(2.9870e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8159e-05, dtype=torch.float64)
secont condition:: tensor(3.8159e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7029e-05, dtype=torch.float64)
secont condition:: tensor(3.7029e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.4883e-06, dtype=torch.float64)
secont condition:: tensor(9.4883e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.3843e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1673e-05, dtype=torch.float64)
secont condition:: tensor(7.1673e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2209e-05, dtype=torch.float64)
secont condition:: tensor(5.2209e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5267e-05, dtype=torch.float64)
secont condition:: tensor(1.5267e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5890e-05, dtype=torch.float64)
secont condition:: tensor(3.5890e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3532e-05, dtype=torch.float64)
secont condition:: tensor(3.3532e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2718e-05, dtype=torch.float64)
secont condition:: tensor(4.2718e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4161e-05, dtype=torch.float64)
secont condition:: tensor(3.4161e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2683e-05, dtype=torch.float64)
secont condition:: tensor(2.2683e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8257e-05, dtype=torch.float64)
secont condition:: tensor(2.8257e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9972e-05, dtype=torch.float64)
secont condition:: tensor(1.9972e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2882e-05, dtype=torch.float64)
secont condition:: tensor(2.2882e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0347e-05, dtype=torch.float64)
secont condition:: tensor(3.0347e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8140e-05, dtype=torch.float64)
secont condition:: tensor(1.8140e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4897e-05, dtype=torch.float64)
secont condition:: tensor(1.4897e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9136e-05, dtype=torch.float64)
secont condition:: tensor(1.9136e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4924e-05, dtype=torch.float64)
secont condition:: tensor(1.4924e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9834e-06, dtype=torch.float64)
secont condition:: tensor(1.9834e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1002e-05, dtype=torch.float64)
secont condition:: tensor(1.1002e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1838e-05, dtype=torch.float64)
secont condition:: tensor(1.1838e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6666e-05, dtype=torch.float64)
secont condition:: tensor(1.6666e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.0885e-06, dtype=torch.float64)
secont condition:: tensor(9.0885e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.18062448501587
curr_diff: 0 tensor(7.5916e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9143e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.6654e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9806e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0093, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0165, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0064, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0216, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
random set 2
python3 generate_rand_ids 0.0002  MNIST
tensor([13856, 56772,   773, 19495, 28298, 12205, 30734, 32142, 40913, 26646,
        59831, 40444])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241426
Test Avg. Loss: 0.000022, Accuracy: 0.943300
Train - Epoch 1, Batch: 0, Loss: 0.237944
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.163960
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.161147
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 4, Batch: 0, Loss: 0.152971
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 5, Batch: 0, Loss: 0.155433
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 6, Batch: 0, Loss: 0.172583
Test Avg. Loss: 0.000140, Accuracy: 0.515500
Train - Epoch 7, Batch: 0, Loss: 1.425380
Test Avg. Loss: 0.000036, Accuracy: 0.901000
Train - Epoch 8, Batch: 0, Loss: 0.374718
Test Avg. Loss: 0.000019, Accuracy: 0.946000
Train - Epoch 9, Batch: 0, Loss: 0.207165
Test Avg. Loss: 0.000018, Accuracy: 0.949800
Train - Epoch 10, Batch: 0, Loss: 0.194925
Test Avg. Loss: 0.000017, Accuracy: 0.950300
Train - Epoch 11, Batch: 0, Loss: 0.187106
Test Avg. Loss: 0.000016, Accuracy: 0.951200
Train - Epoch 12, Batch: 0, Loss: 0.173537
Test Avg. Loss: 0.000016, Accuracy: 0.952700
Train - Epoch 13, Batch: 0, Loss: 0.174888
Test Avg. Loss: 0.000016, Accuracy: 0.953600
Train - Epoch 14, Batch: 0, Loss: 0.164934
Test Avg. Loss: 0.000015, Accuracy: 0.954300
Train - Epoch 15, Batch: 0, Loss: 0.168037
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 16, Batch: 0, Loss: 0.170985
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 17, Batch: 0, Loss: 0.166669
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 18, Batch: 0, Loss: 0.163261
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 19, Batch: 0, Loss: 0.168583
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 20, Batch: 0, Loss: 0.159053
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 21, Batch: 0, Loss: 0.156833
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 22, Batch: 0, Loss: 0.163019
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 23, Batch: 0, Loss: 0.163864
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 24, Batch: 0, Loss: 0.162153
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 25, Batch: 0, Loss: 0.164501
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 26, Batch: 0, Loss: 0.163791
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 27, Batch: 0, Loss: 0.162423
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 28, Batch: 0, Loss: 0.159038
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 29, Batch: 0, Loss: 0.161337
Test Avg. Loss: 0.000015, Accuracy: 0.958400
training_time:: 176.92893862724304
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.61382675170898
time_baseline:: 116.68028116226196
curr_diff: 0 tensor(0.0181, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1797, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0088, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1908, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0106, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0183, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0714, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0341, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.2941, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9988, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.956900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8144e-08, dtype=torch.float64)
secont condition:: tensor(2.8144e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4202e-07, dtype=torch.float64)
secont condition:: tensor(1.4202e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8733e-07, dtype=torch.float64)
secont condition:: tensor(1.8733e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1048e-06, dtype=torch.float64)
secont condition:: tensor(1.1048e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0371e-07, dtype=torch.float64)
secont condition:: tensor(5.0371e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4901e-07, dtype=torch.float64)
secont condition:: tensor(1.4901e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3945e-07, dtype=torch.float64)
secont condition:: tensor(4.3945e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-07, dtype=torch.float64)
secont condition:: tensor(2.8004e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0587e-08, dtype=torch.float64)
secont condition:: tensor(7.0587e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1531e-07, dtype=torch.float64)
secont condition:: tensor(1.1531e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9287e-08, dtype=torch.float64)
secont condition:: tensor(1.9287e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8540e-06, dtype=torch.float64)
secont condition:: tensor(1.8540e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0707e-06, dtype=torch.float64)
secont condition:: tensor(1.0707e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4970e-07, dtype=torch.float64)
secont condition:: tensor(6.4970e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6598e-07, dtype=torch.float64)
secont condition:: tensor(8.6598e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2716e-07, dtype=torch.float64)
secont condition:: tensor(9.2716e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7312e-07, dtype=torch.float64)
secont condition:: tensor(5.7312e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3162e-06, dtype=torch.float64)
secont condition:: tensor(1.3162e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9599e-06, dtype=torch.float64)
secont condition:: tensor(1.9599e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8040e-06, dtype=torch.float64)
secont condition:: tensor(3.8040e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1893e-06, dtype=torch.float64)
secont condition:: tensor(6.1893e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4072e-05, dtype=torch.float64)
secont condition:: tensor(1.4072e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0479e-05, dtype=torch.float64)
secont condition:: tensor(4.0479e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0308, dtype=torch.float64)
secont condition:: tensor(0.0308, dtype=torch.float64)
curr_secont condition:: tensor(0.0466, dtype=torch.float64)
secont condition:: tensor(0.0466, dtype=torch.float64)
curr_secont condition:: tensor(0.0086, dtype=torch.float64)
secont condition:: tensor(0.0086, dtype=torch.float64)
curr_secont condition:: tensor(-0.0137, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0169, dtype=torch.float64)
curr_secont condition:: tensor(-0.0082, dtype=torch.float64)
curr_secont condition:: tensor(0.0169, dtype=torch.float64)
secont condition:: tensor(0.0169, dtype=torch.float64)
curr_secont condition:: tensor(0.0028, dtype=torch.float64)
secont condition:: tensor(0.0028, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0032, dtype=torch.float64)
curr_secont condition:: tensor(-0.0059, dtype=torch.float64)
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0065, dtype=torch.float64)
curr_secont condition:: tensor(-0.0035, dtype=torch.float64)
curr_secont condition:: tensor(-0.0031, dtype=torch.float64)
curr_secont condition:: tensor(-0.0047, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0046, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0036, dtype=torch.float64)
curr_secont condition:: tensor(-0.0050, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0037, dtype=torch.float64)
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0029, dtype=torch.float64)
secont condition:: tensor(0.0029, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0023, dtype=torch.float64)
secont condition:: tensor(0.0023, dtype=torch.float64)
curr_secont condition:: tensor(0.0046, dtype=torch.float64)
secont condition:: tensor(0.0046, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0022, dtype=torch.float64)
secont condition:: tensor(0.0022, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0031, dtype=torch.float64)
secont condition:: tensor(0.0031, dtype=torch.float64)
curr_secont condition:: tensor(0.0029, dtype=torch.float64)
secont condition:: tensor(0.0029, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0031, dtype=torch.float64)
secont condition:: tensor(0.0031, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0037, dtype=torch.float64)
secont condition:: tensor(0.0037, dtype=torch.float64)
curr_secont condition:: tensor(0.0028, dtype=torch.float64)
secont condition:: tensor(0.0028, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0039, dtype=torch.float64)
secont condition:: tensor(0.0039, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0044, dtype=torch.float64)
secont condition:: tensor(0.0044, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0041, dtype=torch.float64)
secont condition:: tensor(0.0041, dtype=torch.float64)
curr_secont condition:: tensor(0.0030, dtype=torch.float64)
secont condition:: tensor(0.0030, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0029, dtype=torch.float64)
secont condition:: tensor(0.0029, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0044, dtype=torch.float64)
secont condition:: tensor(0.0044, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0036, dtype=torch.float64)
secont condition:: tensor(0.0036, dtype=torch.float64)
curr_secont condition:: tensor(0.0066, dtype=torch.float64)
secont condition:: tensor(0.0066, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.104048013687134
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0079, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0101, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.1774e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0136, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0181, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1845, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0093, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1884, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0106, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0184, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0717, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0343, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.2951, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9988, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000015, Accuracy: 0.956600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243185
Test Avg. Loss: 0.000024, Accuracy: 0.941700
Train - Epoch 1, Batch: 0, Loss: 0.250846
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.170378
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.162478
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 4, Batch: 0, Loss: 0.157891
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 5, Batch: 0, Loss: 0.158774
Test Avg. Loss: 0.000019, Accuracy: 0.944100
Train - Epoch 6, Batch: 0, Loss: 0.211794
Test Avg. Loss: 0.000050, Accuracy: 0.861500
Train - Epoch 7, Batch: 0, Loss: 0.518251
Test Avg. Loss: 0.000017, Accuracy: 0.953200
Train - Epoch 8, Batch: 0, Loss: 0.185521
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 9, Batch: 0, Loss: 0.167279
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 10, Batch: 0, Loss: 0.162333
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 11, Batch: 0, Loss: 0.162072
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 12, Batch: 0, Loss: 0.159899
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.158648
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 14, Batch: 0, Loss: 0.157649
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.154281
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.160350
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 17, Batch: 0, Loss: 0.153028
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 18, Batch: 0, Loss: 0.155271
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.155800
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 20, Batch: 0, Loss: 0.149434
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.147190
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 22, Batch: 0, Loss: 0.157867
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.155773
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 24, Batch: 0, Loss: 0.154107
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.152616
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.151958
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.156228
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.152851
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 29, Batch: 0, Loss: 0.151782
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 170.72118997573853
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.95055198669434
time_baseline:: 117.0182433128357
curr_diff: 0 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0346, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0834, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0367, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0093, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0330, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0150, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1047, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4597e-08, dtype=torch.float64)
secont condition:: tensor(9.4597e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3554e-07, dtype=torch.float64)
secont condition:: tensor(3.3554e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5454e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9787e-06, dtype=torch.float64)
secont condition:: tensor(1.9787e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4661e-07, dtype=torch.float64)
secont condition:: tensor(2.4661e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9563e-08, dtype=torch.float64)
secont condition:: tensor(8.9563e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6508e-07, dtype=torch.float64)
secont condition:: tensor(5.6508e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1339e-07, dtype=torch.float64)
secont condition:: tensor(1.1339e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5439e-07, dtype=torch.float64)
secont condition:: tensor(1.5439e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8961e-07, dtype=torch.float64)
secont condition:: tensor(1.8961e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6364e-07, dtype=torch.float64)
secont condition:: tensor(8.6364e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1664e-07, dtype=torch.float64)
secont condition:: tensor(9.1664e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1041e-07, dtype=torch.float64)
secont condition:: tensor(7.1041e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0585e-06, dtype=torch.float64)
secont condition:: tensor(1.0585e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5172e-06, dtype=torch.float64)
secont condition:: tensor(2.5172e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4186e-06, dtype=torch.float64)
secont condition:: tensor(3.4186e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9921e-06, dtype=torch.float64)
secont condition:: tensor(3.9921e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6260e-06, dtype=torch.float64)
secont condition:: tensor(4.6260e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1657e-06, dtype=torch.float64)
secont condition:: tensor(7.1657e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4456e-05, dtype=torch.float64)
secont condition:: tensor(1.4456e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8488e-05, dtype=torch.float64)
secont condition:: tensor(2.8488e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9392e-05, dtype=torch.float64)
secont condition:: tensor(6.9392e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0026, dtype=torch.float64)
secont condition:: tensor(0.0026, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(0.0794, dtype=torch.float64)
secont condition:: tensor(0.0794, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0380, dtype=torch.float64)
secont condition:: tensor(0.0380, dtype=torch.float64)
curr_secont condition:: tensor(0.0538, dtype=torch.float64)
secont condition:: tensor(0.0538, dtype=torch.float64)
curr_secont condition:: tensor(0.0339, dtype=torch.float64)
secont condition:: tensor(0.0339, dtype=torch.float64)
curr_secont condition:: tensor(0.0114, dtype=torch.float64)
secont condition:: tensor(0.0114, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0040, dtype=torch.float64)
secont condition:: tensor(0.0040, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.176652908325195
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.1567e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3101e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.2519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.4782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0037, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0348, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0835, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0369, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0093, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0333, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0150, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1051, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243563
Test Avg. Loss: 0.000028, Accuracy: 0.931100
Train - Epoch 1, Batch: 0, Loss: 0.297994
Test Avg. Loss: 0.000016, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.162403
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.167166
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.161097
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 5, Batch: 0, Loss: 0.157461
Test Avg. Loss: 0.000022, Accuracy: 0.933600
Train - Epoch 6, Batch: 0, Loss: 0.236129
Test Avg. Loss: 0.000031, Accuracy: 0.925900
Train - Epoch 7, Batch: 0, Loss: 0.335778
Test Avg. Loss: 0.000016, Accuracy: 0.954600
Train - Epoch 8, Batch: 0, Loss: 0.174416
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 9, Batch: 0, Loss: 0.164252
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 10, Batch: 0, Loss: 0.163148
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 11, Batch: 0, Loss: 0.155370
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 12, Batch: 0, Loss: 0.157970
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 13, Batch: 0, Loss: 0.158072
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 14, Batch: 0, Loss: 0.154317
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 15, Batch: 0, Loss: 0.158678
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 16, Batch: 0, Loss: 0.156672
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.154581
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.155208
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.151129
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 20, Batch: 0, Loss: 0.156183
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 21, Batch: 0, Loss: 0.157732
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.150301
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.156862
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.148981
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.152395
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 26, Batch: 0, Loss: 0.149725
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.148211
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.148126
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.151150
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 170.77443504333496
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.15252375602722
time_baseline:: 118.21902799606323
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0108, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0136, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0088e-07, dtype=torch.float64)
secont condition:: tensor(1.0088e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9342e-07, dtype=torch.float64)
secont condition:: tensor(3.9342e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.7991e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3226e-06, dtype=torch.float64)
secont condition:: tensor(2.3226e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3578e-07, dtype=torch.float64)
secont condition:: tensor(7.3578e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2493e-07, dtype=torch.float64)
secont condition:: tensor(2.2493e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0557e-07, dtype=torch.float64)
secont condition:: tensor(1.0557e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9007e-07, dtype=torch.float64)
secont condition:: tensor(1.9007e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3207e-07, dtype=torch.float64)
secont condition:: tensor(1.3207e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8079e-07, dtype=torch.float64)
secont condition:: tensor(5.8079e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1429e-07, dtype=torch.float64)
secont condition:: tensor(3.1429e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4780e-07, dtype=torch.float64)
secont condition:: tensor(1.4780e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4334e-07, dtype=torch.float64)
secont condition:: tensor(2.4334e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1363e-07, dtype=torch.float64)
secont condition:: tensor(1.1363e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7359e-07, dtype=torch.float64)
secont condition:: tensor(7.7359e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7955e-07, dtype=torch.float64)
secont condition:: tensor(3.7955e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8938e-06, dtype=torch.float64)
secont condition:: tensor(1.8938e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8318e-06, dtype=torch.float64)
secont condition:: tensor(1.8318e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6001e-06, dtype=torch.float64)
secont condition:: tensor(1.6001e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9236e-06, dtype=torch.float64)
secont condition:: tensor(1.9236e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1012e-06, dtype=torch.float64)
secont condition:: tensor(3.1012e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5913e-06, dtype=torch.float64)
secont condition:: tensor(7.5913e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4691e-05, dtype=torch.float64)
secont condition:: tensor(2.4691e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9635e-05, dtype=torch.float64)
secont condition:: tensor(8.9635e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-5.3433e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0053, dtype=torch.float64)
secont condition:: tensor(0.0053, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0033, dtype=torch.float64)
secont condition:: tensor(0.0033, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(4.5154e-05, dtype=torch.float64)
secont condition:: tensor(4.5154e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5724e-05, dtype=torch.float64)
secont condition:: tensor(3.5724e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0759e-05, dtype=torch.float64)
secont condition:: tensor(2.0759e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2796e-05, dtype=torch.float64)
secont condition:: tensor(1.2796e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5420e-05, dtype=torch.float64)
secont condition:: tensor(1.5420e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0256e-05, dtype=torch.float64)
secont condition:: tensor(2.0256e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7065e-05, dtype=torch.float64)
secont condition:: tensor(1.7065e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3854e-05, dtype=torch.float64)
secont condition:: tensor(1.3854e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8691e-06, dtype=torch.float64)
secont condition:: tensor(9.8691e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0393e-05, dtype=torch.float64)
secont condition:: tensor(1.0393e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9886e-05, dtype=torch.float64)
secont condition:: tensor(2.9886e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7794e-05, dtype=torch.float64)
secont condition:: tensor(1.7794e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7929e-05, dtype=torch.float64)
secont condition:: tensor(1.7929e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8395e-05, dtype=torch.float64)
secont condition:: tensor(1.8395e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1900e-05, dtype=torch.float64)
secont condition:: tensor(1.1900e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0564e-05, dtype=torch.float64)
secont condition:: tensor(1.0564e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1671e-05, dtype=torch.float64)
secont condition:: tensor(1.1671e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3546e-05, dtype=torch.float64)
secont condition:: tensor(1.3546e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8040e-06, dtype=torch.float64)
secont condition:: tensor(5.8040e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8301e-06, dtype=torch.float64)
secont condition:: tensor(8.8301e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5314e-05, dtype=torch.float64)
secont condition:: tensor(1.5314e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4789e-05, dtype=torch.float64)
secont condition:: tensor(1.4789e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.8418e-06, dtype=torch.float64)
secont condition:: tensor(8.8418e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4649e-06, dtype=torch.float64)
secont condition:: tensor(6.4649e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3191e-06, dtype=torch.float64)
secont condition:: tensor(7.3191e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8805e-06, dtype=torch.float64)
secont condition:: tensor(8.8805e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2961e-06, dtype=torch.float64)
secont condition:: tensor(9.2961e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0491e-05, dtype=torch.float64)
secont condition:: tensor(1.0491e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.5813e-06, dtype=torch.float64)
secont condition:: tensor(7.5813e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3941e-06, dtype=torch.float64)
secont condition:: tensor(8.3941e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0182e-06, dtype=torch.float64)
secont condition:: tensor(9.0182e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1216e-05, dtype=torch.float64)
secont condition:: tensor(1.1216e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0679e-05, dtype=torch.float64)
secont condition:: tensor(1.0679e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1839e-06, dtype=torch.float64)
secont condition:: tensor(6.1839e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4529e-06, dtype=torch.float64)
secont condition:: tensor(6.4529e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3797e-06, dtype=torch.float64)
secont condition:: tensor(6.3797e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9206e-06, dtype=torch.float64)
secont condition:: tensor(6.9206e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8356e-06, dtype=torch.float64)
secont condition:: tensor(9.8356e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4688e-06, dtype=torch.float64)
secont condition:: tensor(5.4688e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8620e-06, dtype=torch.float64)
secont condition:: tensor(9.8620e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3950e-06, dtype=torch.float64)
secont condition:: tensor(6.3950e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7400e-06, dtype=torch.float64)
secont condition:: tensor(6.7400e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9614e-06, dtype=torch.float64)
secont condition:: tensor(6.9614e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4997e-06, dtype=torch.float64)
secont condition:: tensor(5.4997e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4033e-06, dtype=torch.float64)
secont condition:: tensor(6.4033e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9142e-06, dtype=torch.float64)
secont condition:: tensor(4.9142e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0232e-06, dtype=torch.float64)
secont condition:: tensor(5.0232e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3163e-06, dtype=torch.float64)
secont condition:: tensor(6.3163e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6767e-06, dtype=torch.float64)
secont condition:: tensor(4.6767e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.219351053237915
curr_diff: 0 tensor(4.9166e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9841e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6872e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6228e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.4911e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.7173e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0109, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0137, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237700
Test Avg. Loss: 0.000023, Accuracy: 0.943600
Train - Epoch 1, Batch: 0, Loss: 0.242180
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.165145
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.160953
Test Avg. Loss: 0.000014, Accuracy: 0.956800
Train - Epoch 4, Batch: 0, Loss: 0.157486
Test Avg. Loss: 0.000015, Accuracy: 0.954400
Train - Epoch 5, Batch: 0, Loss: 0.166821
Test Avg. Loss: 0.000062, Accuracy: 0.779700
Train - Epoch 6, Batch: 0, Loss: 0.637659
Test Avg. Loss: 0.000026, Accuracy: 0.939000
Train - Epoch 7, Batch: 0, Loss: 0.277144
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 8, Batch: 0, Loss: 0.183536
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 9, Batch: 0, Loss: 0.159706
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 10, Batch: 0, Loss: 0.162649
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 11, Batch: 0, Loss: 0.160444
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.161740
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 13, Batch: 0, Loss: 0.157895
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.158134
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 15, Batch: 0, Loss: 0.154436
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 16, Batch: 0, Loss: 0.154543
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.158404
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.147139
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.154518
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 20, Batch: 0, Loss: 0.149844
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.151658
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 22, Batch: 0, Loss: 0.157978
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 23, Batch: 0, Loss: 0.155191
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 24, Batch: 0, Loss: 0.153039
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 25, Batch: 0, Loss: 0.157766
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.158242
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.148965
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.153922
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.154640
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 172.60693669319153
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.0530138015747
time_baseline:: 116.11743187904358
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5892e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1223e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0395e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1562e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.1161e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8270e-08, dtype=torch.float64)
secont condition:: tensor(1.8270e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1067e-07, dtype=torch.float64)
secont condition:: tensor(3.1067e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2276e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0575e-07, dtype=torch.float64)
secont condition:: tensor(8.0575e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2331e-07, dtype=torch.float64)
secont condition:: tensor(2.2331e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5155e-07, dtype=torch.float64)
secont condition:: tensor(5.5155e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7948e-07, dtype=torch.float64)
secont condition:: tensor(3.7948e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4343e-07, dtype=torch.float64)
secont condition:: tensor(1.4343e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2637e-07, dtype=torch.float64)
secont condition:: tensor(2.2637e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5469e-07, dtype=torch.float64)
secont condition:: tensor(6.5469e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7379e-07, dtype=torch.float64)
secont condition:: tensor(2.7379e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7367e-06, dtype=torch.float64)
secont condition:: tensor(3.7367e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2708e-07, dtype=torch.float64)
secont condition:: tensor(1.2708e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2188e-06, dtype=torch.float64)
secont condition:: tensor(1.2188e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6465e-06, dtype=torch.float64)
secont condition:: tensor(1.6465e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2068e-07, dtype=torch.float64)
secont condition:: tensor(3.2068e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7051e-06, dtype=torch.float64)
secont condition:: tensor(2.7051e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5112e-07, dtype=torch.float64)
secont condition:: tensor(1.5112e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1918e-06, dtype=torch.float64)
secont condition:: tensor(3.1918e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2004e-06, dtype=torch.float64)
secont condition:: tensor(1.2004e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9350e-06, dtype=torch.float64)
secont condition:: tensor(1.9350e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4195e-06, dtype=torch.float64)
secont condition:: tensor(1.4195e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7598e-06, dtype=torch.float64)
secont condition:: tensor(3.7598e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9228e-06, dtype=torch.float64)
secont condition:: tensor(1.9228e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.5501e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4999e-06, dtype=torch.float64)
secont condition:: tensor(2.4999e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6990e-06, dtype=torch.float64)
secont condition:: tensor(1.6990e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9527e-06, dtype=torch.float64)
secont condition:: tensor(1.9527e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1405e-07, dtype=torch.float64)
secont condition:: tensor(4.1405e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9603e-07, dtype=torch.float64)
secont condition:: tensor(3.9603e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4397e-07, dtype=torch.float64)
secont condition:: tensor(2.4397e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1014e-08, dtype=torch.float64)
secont condition:: tensor(5.1014e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2953e-08, dtype=torch.float64)
secont condition:: tensor(8.2953e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1866e-07, dtype=torch.float64)
secont condition:: tensor(7.1866e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4811e-07, dtype=torch.float64)
secont condition:: tensor(6.4811e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8194e-07, dtype=torch.float64)
secont condition:: tensor(3.8194e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4187e-07, dtype=torch.float64)
secont condition:: tensor(1.4187e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5112e-07, dtype=torch.float64)
secont condition:: tensor(4.5112e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0634e-07, dtype=torch.float64)
secont condition:: tensor(4.0634e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6989e-07, dtype=torch.float64)
secont condition:: tensor(4.6989e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9465e-07, dtype=torch.float64)
secont condition:: tensor(1.9465e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7465e-07, dtype=torch.float64)
secont condition:: tensor(1.7465e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5991e-07, dtype=torch.float64)
secont condition:: tensor(2.5991e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4784e-07, dtype=torch.float64)
secont condition:: tensor(3.4784e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1336e-07, dtype=torch.float64)
secont condition:: tensor(8.1336e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4567e-07, dtype=torch.float64)
secont condition:: tensor(3.4567e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4612e-06, dtype=torch.float64)
secont condition:: tensor(1.4612e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8653e-07, dtype=torch.float64)
secont condition:: tensor(1.8653e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7337e-07, dtype=torch.float64)
secont condition:: tensor(2.7337e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5795e-07, dtype=torch.float64)
secont condition:: tensor(9.5795e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3652e-07, dtype=torch.float64)
secont condition:: tensor(3.3652e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2343e-07, dtype=torch.float64)
secont condition:: tensor(3.2343e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4752e-06, dtype=torch.float64)
secont condition:: tensor(1.4752e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4073e-07, dtype=torch.float64)
secont condition:: tensor(1.4073e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1298e-07, dtype=torch.float64)
secont condition:: tensor(3.1298e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8955e-07, dtype=torch.float64)
secont condition:: tensor(2.8955e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1345e-07, dtype=torch.float64)
secont condition:: tensor(4.1345e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5667e-07, dtype=torch.float64)
secont condition:: tensor(2.5667e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2136e-07, dtype=torch.float64)
secont condition:: tensor(4.2136e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4911e-07, dtype=torch.float64)
secont condition:: tensor(1.4911e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4839e-07, dtype=torch.float64)
secont condition:: tensor(5.4839e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7069e-06, dtype=torch.float64)
secont condition:: tensor(1.7069e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2326e-07, dtype=torch.float64)
secont condition:: tensor(4.2326e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6934e-07, dtype=torch.float64)
secont condition:: tensor(3.6934e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5075e-07, dtype=torch.float64)
secont condition:: tensor(2.5075e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9755e-07, dtype=torch.float64)
secont condition:: tensor(2.9755e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9593e-07, dtype=torch.float64)
secont condition:: tensor(3.9593e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4926e-07, dtype=torch.float64)
secont condition:: tensor(4.4926e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4987e-07, dtype=torch.float64)
secont condition:: tensor(3.4987e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1850e-07, dtype=torch.float64)
secont condition:: tensor(3.1850e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2504e-07, dtype=torch.float64)
secont condition:: tensor(3.2504e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3144e-07, dtype=torch.float64)
secont condition:: tensor(2.3144e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8085e-07, dtype=torch.float64)
secont condition:: tensor(2.8085e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7099e-07, dtype=torch.float64)
secont condition:: tensor(2.7099e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0908e-07, dtype=torch.float64)
secont condition:: tensor(3.0908e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6328e-07, dtype=torch.float64)
secont condition:: tensor(1.6328e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 31.446316242218018
curr_diff: 0 tensor(2.0402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1214e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.2236e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.3908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9030e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2148e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1893e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3107e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1973e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.2665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.0973e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237791
Test Avg. Loss: 0.000025, Accuracy: 0.937600
Train - Epoch 1, Batch: 0, Loss: 0.275243
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.170162
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.169046
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.162285
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.162314
Test Avg. Loss: 0.000015, Accuracy: 0.953700
Train - Epoch 6, Batch: 0, Loss: 0.168277
Test Avg. Loss: 0.000127, Accuracy: 0.660500
Train - Epoch 7, Batch: 0, Loss: 1.301257
Test Avg. Loss: 0.000020, Accuracy: 0.949500
Train - Epoch 8, Batch: 0, Loss: 0.216020
Test Avg. Loss: 0.000016, Accuracy: 0.953800
Train - Epoch 9, Batch: 0, Loss: 0.173964
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 10, Batch: 0, Loss: 0.172774
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 11, Batch: 0, Loss: 0.167687
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 12, Batch: 0, Loss: 0.159168
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 13, Batch: 0, Loss: 0.160011
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 14, Batch: 0, Loss: 0.160112
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 15, Batch: 0, Loss: 0.156015
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.155164
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 17, Batch: 0, Loss: 0.157841
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 18, Batch: 0, Loss: 0.154688
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 19, Batch: 0, Loss: 0.151072
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 20, Batch: 0, Loss: 0.155451
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 21, Batch: 0, Loss: 0.156251
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 22, Batch: 0, Loss: 0.152925
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 23, Batch: 0, Loss: 0.158848
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 24, Batch: 0, Loss: 0.144080
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 25, Batch: 0, Loss: 0.150202
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 26, Batch: 0, Loss: 0.155727
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 27, Batch: 0, Loss: 0.155264
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 28, Batch: 0, Loss: 0.150386
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 29, Batch: 0, Loss: 0.156080
Test Avg. Loss: 0.000014, Accuracy: 0.960400
training_time:: 171.61482048034668
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.92636442184448
time_baseline:: 115.99288773536682
curr_diff: 0 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0458, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0430, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0080, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0301, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0085, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1228, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960500
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6057e-06, dtype=torch.float64)
secont condition:: tensor(1.6057e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1423e-06, dtype=torch.float64)
secont condition:: tensor(2.1423e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8974e-06, dtype=torch.float64)
secont condition:: tensor(1.8974e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0652e-06, dtype=torch.float64)
secont condition:: tensor(2.0652e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6777e-07, dtype=torch.float64)
secont condition:: tensor(5.6777e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7221e-07, dtype=torch.float64)
secont condition:: tensor(1.7221e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6501e-07, dtype=torch.float64)
secont condition:: tensor(4.6501e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0637e-07, dtype=torch.float64)
secont condition:: tensor(1.0637e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4332e-08, dtype=torch.float64)
secont condition:: tensor(5.4332e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0901e-07, dtype=torch.float64)
secont condition:: tensor(5.0901e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8941e-07, dtype=torch.float64)
secont condition:: tensor(1.8941e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5249e-07, dtype=torch.float64)
secont condition:: tensor(1.5249e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6966e-08, dtype=torch.float64)
secont condition:: tensor(7.6966e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7511e-07, dtype=torch.float64)
secont condition:: tensor(1.7511e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1818e-06, dtype=torch.float64)
secont condition:: tensor(1.1818e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4781e-06, dtype=torch.float64)
secont condition:: tensor(1.4781e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9539e-06, dtype=torch.float64)
secont condition:: tensor(3.9539e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5405e-06, dtype=torch.float64)
secont condition:: tensor(4.5405e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0312e-06, dtype=torch.float64)
secont condition:: tensor(5.0312e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6754e-06, dtype=torch.float64)
secont condition:: tensor(7.6754e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2813e-05, dtype=torch.float64)
secont condition:: tensor(1.2813e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6223e-05, dtype=torch.float64)
secont condition:: tensor(2.6223e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6458e-05, dtype=torch.float64)
secont condition:: tensor(5.6458e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0076, dtype=torch.float64)
secont condition:: tensor(0.0076, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0211, dtype=torch.float64)
curr_secont condition:: tensor(0.1686, dtype=torch.float64)
secont condition:: tensor(0.1686, dtype=torch.float64)
curr_secont condition:: tensor(0.0648, dtype=torch.float64)
secont condition:: tensor(0.0648, dtype=torch.float64)
curr_secont condition:: tensor(0.0274, dtype=torch.float64)
secont condition:: tensor(0.0274, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0061, dtype=torch.float64)
secont condition:: tensor(0.0061, dtype=torch.float64)
curr_secont condition:: tensor(0.0036, dtype=torch.float64)
secont condition:: tensor(0.0036, dtype=torch.float64)
curr_secont condition:: tensor(0.0025, dtype=torch.float64)
secont condition:: tensor(0.0025, dtype=torch.float64)
curr_secont condition:: tensor(0.0026, dtype=torch.float64)
secont condition:: tensor(0.0026, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0025, dtype=torch.float64)
secont condition:: tensor(0.0025, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0021, dtype=torch.float64)
secont condition:: tensor(0.0021, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.1795654296875
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3918e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.5227e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.4855e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5657e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0035, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0457, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1000, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0432, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0081, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0302, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0086, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.1228, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9998, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
random set 3
python3 generate_rand_ids 0.0002  MNIST
tensor([ 6850, 28995, 28388,  8740, 54598, 20492, 50768, 42706, 39475, 31799,
        50359, 44383])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239143
Test Avg. Loss: 0.000022, Accuracy: 0.947300
Train - Epoch 1, Batch: 0, Loss: 0.232703
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.165190
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.161911
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 4, Batch: 0, Loss: 0.153709
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 5, Batch: 0, Loss: 0.161790
Test Avg. Loss: 0.000025, Accuracy: 0.919300
Train - Epoch 6, Batch: 0, Loss: 0.263718
Test Avg. Loss: 0.000074, Accuracy: 0.801000
Train - Epoch 7, Batch: 0, Loss: 0.775682
Test Avg. Loss: 0.000020, Accuracy: 0.947300
Train - Epoch 8, Batch: 0, Loss: 0.224972
Test Avg. Loss: 0.000017, Accuracy: 0.951600
Train - Epoch 9, Batch: 0, Loss: 0.186890
Test Avg. Loss: 0.000016, Accuracy: 0.952900
Train - Epoch 10, Batch: 0, Loss: 0.175541
Test Avg. Loss: 0.000015, Accuracy: 0.954900
Train - Epoch 11, Batch: 0, Loss: 0.169174
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 12, Batch: 0, Loss: 0.165987
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 13, Batch: 0, Loss: 0.163354
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 14, Batch: 0, Loss: 0.158172
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 15, Batch: 0, Loss: 0.160407
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 16, Batch: 0, Loss: 0.161724
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 17, Batch: 0, Loss: 0.160150
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 18, Batch: 0, Loss: 0.158230
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 19, Batch: 0, Loss: 0.151749
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.155898
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 21, Batch: 0, Loss: 0.158622
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 22, Batch: 0, Loss: 0.160054
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 23, Batch: 0, Loss: 0.155272
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 24, Batch: 0, Loss: 0.154915
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 25, Batch: 0, Loss: 0.154317
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.151572
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.156630
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 28, Batch: 0, Loss: 0.157878
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.155845
Test Avg. Loss: 0.000014, Accuracy: 0.961300
training_time:: 172.47924065589905
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.5299482345581
time_baseline:: 115.59578347206116
curr_diff: 0 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0253, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0432, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0215, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0172, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0083, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0582, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3932e-08, dtype=torch.float64)
secont condition:: tensor(1.3932e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5796e-07, dtype=torch.float64)
secont condition:: tensor(2.5796e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3991e-07, dtype=torch.float64)
secont condition:: tensor(4.3991e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6588e-07, dtype=torch.float64)
secont condition:: tensor(8.6588e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5261e-07, dtype=torch.float64)
secont condition:: tensor(1.5261e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0336e-07, dtype=torch.float64)
secont condition:: tensor(1.0336e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1288e-07, dtype=torch.float64)
secont condition:: tensor(8.1288e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9268e-07, dtype=torch.float64)
secont condition:: tensor(1.9268e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2090e-07, dtype=torch.float64)
secont condition:: tensor(1.2090e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5353e-08, dtype=torch.float64)
secont condition:: tensor(6.5353e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9609e-07, dtype=torch.float64)
secont condition:: tensor(6.9609e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7741e-07, dtype=torch.float64)
secont condition:: tensor(2.7741e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1053e-07, dtype=torch.float64)
secont condition:: tensor(6.1053e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6005e-07, dtype=torch.float64)
secont condition:: tensor(3.6005e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0831e-06, dtype=torch.float64)
secont condition:: tensor(1.0831e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0423e-06, dtype=torch.float64)
secont condition:: tensor(1.0423e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7176e-06, dtype=torch.float64)
secont condition:: tensor(1.7176e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3897e-06, dtype=torch.float64)
secont condition:: tensor(1.3897e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1853e-06, dtype=torch.float64)
secont condition:: tensor(2.1853e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2140e-06, dtype=torch.float64)
secont condition:: tensor(4.2140e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0928e-05, dtype=torch.float64)
secont condition:: tensor(1.0928e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1194e-05, dtype=torch.float64)
secont condition:: tensor(2.1194e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.4037e-05, dtype=torch.float64)
secont condition:: tensor(6.4037e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0043, dtype=torch.float64)
secont condition:: tensor(0.0043, dtype=torch.float64)
curr_secont condition:: tensor(0.0027, dtype=torch.float64)
secont condition:: tensor(0.0027, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0021, dtype=torch.float64)
secont condition:: tensor(0.0021, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(9.6034e-05, dtype=torch.float64)
secont condition:: tensor(9.6034e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8554e-05, dtype=torch.float64)
secont condition:: tensor(8.8554e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.076981782913208
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9026e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3415e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0004e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0032, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0250, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0426, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0213, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0172, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0083, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0575, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236982
Test Avg. Loss: 0.000025, Accuracy: 0.935700
Train - Epoch 1, Batch: 0, Loss: 0.266440
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.169640
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.161883
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 4, Batch: 0, Loss: 0.156488
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 5, Batch: 0, Loss: 0.167583
Test Avg. Loss: 0.000053, Accuracy: 0.805800
Train - Epoch 6, Batch: 0, Loss: 0.571851
Test Avg. Loss: 0.000025, Accuracy: 0.939500
Train - Epoch 7, Batch: 0, Loss: 0.272238
Test Avg. Loss: 0.000016, Accuracy: 0.955200
Train - Epoch 8, Batch: 0, Loss: 0.179837
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 9, Batch: 0, Loss: 0.167123
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 10, Batch: 0, Loss: 0.159093
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 11, Batch: 0, Loss: 0.155417
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 12, Batch: 0, Loss: 0.156412
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.160802
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 14, Batch: 0, Loss: 0.152018
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 15, Batch: 0, Loss: 0.152104
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 16, Batch: 0, Loss: 0.150224
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 17, Batch: 0, Loss: 0.151517
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 18, Batch: 0, Loss: 0.152860
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.149213
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.152438
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 21, Batch: 0, Loss: 0.151216
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.148687
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.152601
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.151697
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.156198
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.152367
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.153298
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.158278
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.149447
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 170.42975759506226
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.4575777053833
time_baseline:: 117.5244722366333
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3318e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5404e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2992e-07, dtype=torch.float64)
secont condition:: tensor(1.2992e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7263e-07, dtype=torch.float64)
secont condition:: tensor(2.7263e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6680e-06, dtype=torch.float64)
secont condition:: tensor(1.6680e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0323e-06, dtype=torch.float64)
secont condition:: tensor(1.0323e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9022e-07, dtype=torch.float64)
secont condition:: tensor(3.9022e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2583e-07, dtype=torch.float64)
secont condition:: tensor(7.2583e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3093e-07, dtype=torch.float64)
secont condition:: tensor(2.3093e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7220e-08, dtype=torch.float64)
secont condition:: tensor(5.7220e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0998e-07, dtype=torch.float64)
secont condition:: tensor(1.0998e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4101e-07, dtype=torch.float64)
secont condition:: tensor(7.4101e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7317e-07, dtype=torch.float64)
secont condition:: tensor(1.7317e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2384e-07, dtype=torch.float64)
secont condition:: tensor(1.2384e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1481e-07, dtype=torch.float64)
secont condition:: tensor(9.1481e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2292e-07, dtype=torch.float64)
secont condition:: tensor(5.2292e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6877e-05, dtype=torch.float64)
secont condition:: tensor(1.6877e-05, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4639e-07, dtype=torch.float64)
secont condition:: tensor(3.4639e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1641e-07, dtype=torch.float64)
secont condition:: tensor(3.1641e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7665e-07, dtype=torch.float64)
secont condition:: tensor(3.7665e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9747e-07, dtype=torch.float64)
secont condition:: tensor(4.9747e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2649e-06, dtype=torch.float64)
secont condition:: tensor(1.2649e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8982e-07, dtype=torch.float64)
secont condition:: tensor(5.8982e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9267e-06, dtype=torch.float64)
secont condition:: tensor(5.9267e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4253e-07, dtype=torch.float64)
secont condition:: tensor(8.4253e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9027e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9058e-06, dtype=torch.float64)
secont condition:: tensor(8.9058e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0911e-06, dtype=torch.float64)
secont condition:: tensor(3.0911e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6203e-06, dtype=torch.float64)
secont condition:: tensor(1.6203e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9817e-06, dtype=torch.float64)
secont condition:: tensor(1.9817e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4268e-07, dtype=torch.float64)
secont condition:: tensor(8.4268e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5745e-07, dtype=torch.float64)
secont condition:: tensor(8.5745e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4327e-07, dtype=torch.float64)
secont condition:: tensor(5.4327e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0841e-07, dtype=torch.float64)
secont condition:: tensor(5.0841e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8422e-07, dtype=torch.float64)
secont condition:: tensor(9.8422e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4018e-07, dtype=torch.float64)
secont condition:: tensor(4.4018e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0962e-07, dtype=torch.float64)
secont condition:: tensor(7.0962e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1454e-07, dtype=torch.float64)
secont condition:: tensor(7.1454e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1981e-07, dtype=torch.float64)
secont condition:: tensor(5.1981e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7581e-07, dtype=torch.float64)
secont condition:: tensor(3.7581e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1894e-06, dtype=torch.float64)
secont condition:: tensor(8.1894e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1784e-07, dtype=torch.float64)
secont condition:: tensor(1.1784e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5655e-07, dtype=torch.float64)
secont condition:: tensor(3.5655e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4000e-07, dtype=torch.float64)
secont condition:: tensor(3.4000e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6662e-07, dtype=torch.float64)
secont condition:: tensor(3.6662e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6971e-07, dtype=torch.float64)
secont condition:: tensor(3.6971e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0793e-06, dtype=torch.float64)
secont condition:: tensor(1.0793e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8699e-06, dtype=torch.float64)
secont condition:: tensor(6.8699e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0218e-07, dtype=torch.float64)
secont condition:: tensor(4.0218e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1958e-07, dtype=torch.float64)
secont condition:: tensor(5.1958e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6894e-07, dtype=torch.float64)
secont condition:: tensor(4.6894e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4923e-07, dtype=torch.float64)
secont condition:: tensor(5.4923e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3282e-07, dtype=torch.float64)
secont condition:: tensor(6.3282e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3547e-07, dtype=torch.float64)
secont condition:: tensor(6.3547e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7156e-07, dtype=torch.float64)
secont condition:: tensor(9.7156e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4597e-06, dtype=torch.float64)
secont condition:: tensor(7.4597e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9634e-07, dtype=torch.float64)
secont condition:: tensor(3.9634e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5196e-07, dtype=torch.float64)
secont condition:: tensor(2.5196e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1954e-06, dtype=torch.float64)
secont condition:: tensor(1.1954e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8615e-07, dtype=torch.float64)
secont condition:: tensor(5.8615e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3510e-07, dtype=torch.float64)
secont condition:: tensor(7.3510e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6607e-06, dtype=torch.float64)
secont condition:: tensor(1.6607e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9861e-07, dtype=torch.float64)
secont condition:: tensor(6.9861e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3086e-07, dtype=torch.float64)
secont condition:: tensor(4.3086e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0239e-07, dtype=torch.float64)
secont condition:: tensor(7.0239e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5424e-07, dtype=torch.float64)
secont condition:: tensor(6.5424e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8530e-07, dtype=torch.float64)
secont condition:: tensor(5.8530e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1095e-07, dtype=torch.float64)
secont condition:: tensor(4.1095e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6657e-07, dtype=torch.float64)
secont condition:: tensor(7.6657e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2335e-07, dtype=torch.float64)
secont condition:: tensor(6.2335e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8175e-07, dtype=torch.float64)
secont condition:: tensor(5.8175e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6641e-07, dtype=torch.float64)
secont condition:: tensor(8.6641e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1679e-07, dtype=torch.float64)
secont condition:: tensor(4.1679e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3333e-07, dtype=torch.float64)
secont condition:: tensor(4.3333e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6558e-07, dtype=torch.float64)
secont condition:: tensor(3.6558e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1577e-07, dtype=torch.float64)
secont condition:: tensor(4.1577e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8301e-07, dtype=torch.float64)
secont condition:: tensor(4.8301e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.716341257095337
curr_diff: 0 tensor(1.3708e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1864e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2323e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1197e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.1980e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.8062e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8775e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4633e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235351
Test Avg. Loss: 0.000026, Accuracy: 0.935300
Train - Epoch 1, Batch: 0, Loss: 0.282809
Test Avg. Loss: 0.000016, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.167037
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.155153
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 4, Batch: 0, Loss: 0.156683
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.154044
Test Avg. Loss: 0.000020, Accuracy: 0.935700
Train - Epoch 6, Batch: 0, Loss: 0.217567
Test Avg. Loss: 0.000082, Accuracy: 0.787300
Train - Epoch 7, Batch: 0, Loss: 0.838429
Test Avg. Loss: 0.000019, Accuracy: 0.948800
Train - Epoch 8, Batch: 0, Loss: 0.221714
Test Avg. Loss: 0.000016, Accuracy: 0.954600
Train - Epoch 9, Batch: 0, Loss: 0.177864
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 10, Batch: 0, Loss: 0.171601
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 11, Batch: 0, Loss: 0.163063
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 12, Batch: 0, Loss: 0.162192
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 13, Batch: 0, Loss: 0.160535
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 14, Batch: 0, Loss: 0.156603
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 15, Batch: 0, Loss: 0.156185
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 16, Batch: 0, Loss: 0.154176
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 17, Batch: 0, Loss: 0.160781
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 18, Batch: 0, Loss: 0.156202
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.147562
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.148811
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.148187
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 22, Batch: 0, Loss: 0.156122
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.165203
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.156127
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 25, Batch: 0, Loss: 0.149925
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 26, Batch: 0, Loss: 0.156635
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.154806
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 28, Batch: 0, Loss: 0.152466
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 29, Batch: 0, Loss: 0.154294
Test Avg. Loss: 0.000014, Accuracy: 0.960900
training_time:: 169.88871216773987
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.7542142868042
time_baseline:: 115.8209273815155
curr_diff: 0 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0119, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0272, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0131, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0099, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0344, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9240e-09, dtype=torch.float64)
secont condition:: tensor(2.9240e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9059e-07, dtype=torch.float64)
secont condition:: tensor(2.9059e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3463e-06, dtype=torch.float64)
secont condition:: tensor(1.3463e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0963e-06, dtype=torch.float64)
secont condition:: tensor(1.0963e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0963e-07, dtype=torch.float64)
secont condition:: tensor(3.0963e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1371e-07, dtype=torch.float64)
secont condition:: tensor(2.1371e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1675e-07, dtype=torch.float64)
secont condition:: tensor(1.1675e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9774e-07, dtype=torch.float64)
secont condition:: tensor(6.9774e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8280e-07, dtype=torch.float64)
secont condition:: tensor(5.8280e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2077e-07, dtype=torch.float64)
secont condition:: tensor(2.2077e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1125e-07, dtype=torch.float64)
secont condition:: tensor(1.1125e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5188e-07, dtype=torch.float64)
secont condition:: tensor(8.5188e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9344e-07, dtype=torch.float64)
secont condition:: tensor(6.9344e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1949e-06, dtype=torch.float64)
secont condition:: tensor(1.1949e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5744e-07, dtype=torch.float64)
secont condition:: tensor(9.5744e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1528e-07, dtype=torch.float64)
secont condition:: tensor(7.1528e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3094e-07, dtype=torch.float64)
secont condition:: tensor(8.3094e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0733e-06, dtype=torch.float64)
secont condition:: tensor(3.0733e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4185e-06, dtype=torch.float64)
secont condition:: tensor(4.4185e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1183e-06, dtype=torch.float64)
secont condition:: tensor(7.1183e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6214e-05, dtype=torch.float64)
secont condition:: tensor(1.6214e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5068e-05, dtype=torch.float64)
secont condition:: tensor(3.5068e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.8891e-05, dtype=torch.float64)
secont condition:: tensor(8.8891e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(-2.4336e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0061, dtype=torch.float64)
secont condition:: tensor(0.0061, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0062, dtype=torch.float64)
secont condition:: tensor(0.0062, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(5.7409e-05, dtype=torch.float64)
secont condition:: tensor(5.7409e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2956e-05, dtype=torch.float64)
secont condition:: tensor(7.2956e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.3222e-05, dtype=torch.float64)
secont condition:: tensor(7.3222e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.9930e-05, dtype=torch.float64)
secont condition:: tensor(7.9930e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8848e-05, dtype=torch.float64)
secont condition:: tensor(5.8848e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(6.7206e-05, dtype=torch.float64)
secont condition:: tensor(6.7206e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.8904e-05, dtype=torch.float64)
secont condition:: tensor(7.8904e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5288e-05, dtype=torch.float64)
secont condition:: tensor(8.5288e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4782e-05, dtype=torch.float64)
secont condition:: tensor(5.4782e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.4363e-05, dtype=torch.float64)
secont condition:: tensor(8.4363e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3613e-05, dtype=torch.float64)
secont condition:: tensor(8.3613e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(4.0466e-05, dtype=torch.float64)
secont condition:: tensor(4.0466e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(5.7990e-05, dtype=torch.float64)
secont condition:: tensor(5.7990e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5474e-05, dtype=torch.float64)
secont condition:: tensor(2.5474e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.0183e-05, dtype=torch.float64)
secont condition:: tensor(7.0183e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7763e-05, dtype=torch.float64)
secont condition:: tensor(5.7763e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7859e-05, dtype=torch.float64)
secont condition:: tensor(5.7859e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1737e-05, dtype=torch.float64)
secont condition:: tensor(6.1737e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6728e-05, dtype=torch.float64)
secont condition:: tensor(8.6728e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1973e-05, dtype=torch.float64)
secont condition:: tensor(7.1973e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7169e-05, dtype=torch.float64)
secont condition:: tensor(3.7169e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1393e-05, dtype=torch.float64)
secont condition:: tensor(4.1393e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7550e-05, dtype=torch.float64)
secont condition:: tensor(5.7550e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4626e-05, dtype=torch.float64)
secont condition:: tensor(4.4626e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4214e-05, dtype=torch.float64)
secont condition:: tensor(4.4214e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7665e-05, dtype=torch.float64)
secont condition:: tensor(3.7665e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5576e-05, dtype=torch.float64)
secont condition:: tensor(6.5576e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7076e-05, dtype=torch.float64)
secont condition:: tensor(2.7076e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2672e-05, dtype=torch.float64)
secont condition:: tensor(3.2672e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3970e-05, dtype=torch.float64)
secont condition:: tensor(2.3970e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8377e-05, dtype=torch.float64)
secont condition:: tensor(2.8377e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5440e-05, dtype=torch.float64)
secont condition:: tensor(3.5440e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6547e-05, dtype=torch.float64)
secont condition:: tensor(3.6547e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1067e-05, dtype=torch.float64)
secont condition:: tensor(2.1067e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9392e-05, dtype=torch.float64)
secont condition:: tensor(2.9392e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.01700210571289
curr_diff: 0 tensor(7.2248e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6386e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6685e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6535e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0126, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0276, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0132, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0100, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0350, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234443
Test Avg. Loss: 0.000026, Accuracy: 0.934700
Train - Epoch 1, Batch: 0, Loss: 0.276748
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 2, Batch: 0, Loss: 0.168982
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.157289
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 4, Batch: 0, Loss: 0.157167
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 5, Batch: 0, Loss: 0.162562
Test Avg. Loss: 0.000020, Accuracy: 0.936600
Train - Epoch 6, Batch: 0, Loss: 0.224842
Test Avg. Loss: 0.000048, Accuracy: 0.885000
Train - Epoch 7, Batch: 0, Loss: 0.500398
Test Avg. Loss: 0.000017, Accuracy: 0.952400
Train - Epoch 8, Batch: 0, Loss: 0.184573
Test Avg. Loss: 0.000015, Accuracy: 0.954700
Train - Epoch 9, Batch: 0, Loss: 0.167942
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 10, Batch: 0, Loss: 0.166959
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 11, Batch: 0, Loss: 0.168822
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 12, Batch: 0, Loss: 0.155872
Test Avg. Loss: 0.000014, Accuracy: 0.957000
Train - Epoch 13, Batch: 0, Loss: 0.158231
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 14, Batch: 0, Loss: 0.159060
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 15, Batch: 0, Loss: 0.153612
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 16, Batch: 0, Loss: 0.156159
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 17, Batch: 0, Loss: 0.153354
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 18, Batch: 0, Loss: 0.150926
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 19, Batch: 0, Loss: 0.157320
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 20, Batch: 0, Loss: 0.159042
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.155200
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 22, Batch: 0, Loss: 0.153458
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 23, Batch: 0, Loss: 0.153938
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 24, Batch: 0, Loss: 0.153139
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 25, Batch: 0, Loss: 0.152972
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 26, Batch: 0, Loss: 0.151232
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 27, Batch: 0, Loss: 0.150807
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.151572
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 29, Batch: 0, Loss: 0.155915
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 172.72228837013245
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.92409920692444
time_baseline:: 114.9909417629242
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0134, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0340, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0114, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0409, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9984e-07, dtype=torch.float64)
secont condition:: tensor(4.9984e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9539e-07, dtype=torch.float64)
secont condition:: tensor(8.9539e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7804e-07, dtype=torch.float64)
secont condition:: tensor(9.7804e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2058e-06, dtype=torch.float64)
secont condition:: tensor(1.2058e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2682e-07, dtype=torch.float64)
secont condition:: tensor(6.2682e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3618e-07, dtype=torch.float64)
secont condition:: tensor(7.3618e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4141e-07, dtype=torch.float64)
secont condition:: tensor(2.4141e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5520e-07, dtype=torch.float64)
secont condition:: tensor(1.5520e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8335e-07, dtype=torch.float64)
secont condition:: tensor(3.8335e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5869e-07, dtype=torch.float64)
secont condition:: tensor(1.5869e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1819e-07, dtype=torch.float64)
secont condition:: tensor(3.1819e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4449e-07, dtype=torch.float64)
secont condition:: tensor(1.4449e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3502e-07, dtype=torch.float64)
secont condition:: tensor(1.3502e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2489e-07, dtype=torch.float64)
secont condition:: tensor(5.2489e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3385e-07, dtype=torch.float64)
secont condition:: tensor(8.3385e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0079e-07, dtype=torch.float64)
secont condition:: tensor(8.0079e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7287e-07, dtype=torch.float64)
secont condition:: tensor(9.7287e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7873e-06, dtype=torch.float64)
secont condition:: tensor(1.7873e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5954e-06, dtype=torch.float64)
secont condition:: tensor(2.5954e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8438e-06, dtype=torch.float64)
secont condition:: tensor(7.8438e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3943e-05, dtype=torch.float64)
secont condition:: tensor(1.3943e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2032e-05, dtype=torch.float64)
secont condition:: tensor(3.2032e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.4277e-05, dtype=torch.float64)
secont condition:: tensor(6.4277e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0211, dtype=torch.float64)
secont condition:: tensor(0.0211, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0104, dtype=torch.float64)
secont condition:: tensor(0.0104, dtype=torch.float64)
curr_secont condition:: tensor(0.0063, dtype=torch.float64)
secont condition:: tensor(0.0063, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.3953e-05, dtype=torch.float64)
secont condition:: tensor(8.3953e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8121e-05, dtype=torch.float64)
secont condition:: tensor(8.8121e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.7540e-05, dtype=torch.float64)
secont condition:: tensor(8.7540e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2724e-05, dtype=torch.float64)
secont condition:: tensor(5.2724e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8542e-05, dtype=torch.float64)
secont condition:: tensor(7.8542e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3113e-05, dtype=torch.float64)
secont condition:: tensor(8.3113e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7846e-05, dtype=torch.float64)
secont condition:: tensor(6.7846e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2094e-05, dtype=torch.float64)
secont condition:: tensor(9.2094e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3723e-05, dtype=torch.float64)
secont condition:: tensor(5.3723e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0437e-05, dtype=torch.float64)
secont condition:: tensor(7.0437e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1619e-05, dtype=torch.float64)
secont condition:: tensor(4.1619e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0136e-05, dtype=torch.float64)
secont condition:: tensor(6.0136e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9967e-05, dtype=torch.float64)
secont condition:: tensor(5.9967e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7246e-05, dtype=torch.float64)
secont condition:: tensor(4.7246e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7820e-05, dtype=torch.float64)
secont condition:: tensor(5.7820e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4461e-05, dtype=torch.float64)
secont condition:: tensor(5.4461e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6002e-05, dtype=torch.float64)
secont condition:: tensor(4.6002e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8286e-05, dtype=torch.float64)
secont condition:: tensor(4.8286e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7742e-05, dtype=torch.float64)
secont condition:: tensor(4.7742e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0141e-05, dtype=torch.float64)
secont condition:: tensor(5.0141e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9317e-05, dtype=torch.float64)
secont condition:: tensor(4.9317e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8044e-05, dtype=torch.float64)
secont condition:: tensor(4.8044e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1400e-05, dtype=torch.float64)
secont condition:: tensor(5.1400e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.083173990249634
curr_diff: 0 tensor(7.6417e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.4105e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6899e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5134e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9022e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0343, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0115, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0413, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239116
Test Avg. Loss: 0.000026, Accuracy: 0.935100
Train - Epoch 1, Batch: 0, Loss: 0.282132
Test Avg. Loss: 0.000016, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.173540
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.159157
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 4, Batch: 0, Loss: 0.159009
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.158798
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 6, Batch: 0, Loss: 0.166515
Test Avg. Loss: 0.000153, Accuracy: 0.628100
Train - Epoch 7, Batch: 0, Loss: 1.545932
Test Avg. Loss: 0.000022, Accuracy: 0.947700
Train - Epoch 8, Batch: 0, Loss: 0.238848
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 9, Batch: 0, Loss: 0.182949
Test Avg. Loss: 0.000016, Accuracy: 0.953100
Train - Epoch 10, Batch: 0, Loss: 0.176780
Test Avg. Loss: 0.000016, Accuracy: 0.954900
Train - Epoch 11, Batch: 0, Loss: 0.172172
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 12, Batch: 0, Loss: 0.170938
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 13, Batch: 0, Loss: 0.166867
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 14, Batch: 0, Loss: 0.164456
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 15, Batch: 0, Loss: 0.154369
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 16, Batch: 0, Loss: 0.160210
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 17, Batch: 0, Loss: 0.157353
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 18, Batch: 0, Loss: 0.162426
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 19, Batch: 0, Loss: 0.159392
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 20, Batch: 0, Loss: 0.154043
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 21, Batch: 0, Loss: 0.157818
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 22, Batch: 0, Loss: 0.156491
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 23, Batch: 0, Loss: 0.160366
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 24, Batch: 0, Loss: 0.153376
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 25, Batch: 0, Loss: 0.155989
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 26, Batch: 0, Loss: 0.148843
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 27, Batch: 0, Loss: 0.155246
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 28, Batch: 0, Loss: 0.159586
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 29, Batch: 0, Loss: 0.155445
Test Avg. Loss: 0.000014, Accuracy: 0.959900
training_time:: 169.19596242904663
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.11216998100281
time_baseline:: 115.17920255661011
curr_diff: 0 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0158, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0316, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0144, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0106, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0403, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0613e-07, dtype=torch.float64)
secont condition:: tensor(6.0613e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6134e-07, dtype=torch.float64)
secont condition:: tensor(6.6134e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1016e-07, dtype=torch.float64)
secont condition:: tensor(2.1016e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8967e-06, dtype=torch.float64)
secont condition:: tensor(1.8967e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0078e-06, dtype=torch.float64)
secont condition:: tensor(2.0078e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3007e-05, dtype=torch.float64)
secont condition:: tensor(1.3007e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7975e-07, dtype=torch.float64)
secont condition:: tensor(1.7975e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3425e-07, dtype=torch.float64)
secont condition:: tensor(1.3425e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2693e-07, dtype=torch.float64)
secont condition:: tensor(4.2693e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1179e-07, dtype=torch.float64)
secont condition:: tensor(2.1179e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0194e-08, dtype=torch.float64)
secont condition:: tensor(8.0194e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1608e-07, dtype=torch.float64)
secont condition:: tensor(7.1608e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1455e-07, dtype=torch.float64)
secont condition:: tensor(4.1455e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3269e-06, dtype=torch.float64)
secont condition:: tensor(1.3269e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5122e-06, dtype=torch.float64)
secont condition:: tensor(3.5122e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1144e-07, dtype=torch.float64)
secont condition:: tensor(3.1144e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8071e-07, dtype=torch.float64)
secont condition:: tensor(7.8071e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1882e-07, dtype=torch.float64)
secont condition:: tensor(5.1882e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0769e-06, dtype=torch.float64)
secont condition:: tensor(1.0769e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6162e-06, dtype=torch.float64)
secont condition:: tensor(2.6162e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0022e-06, dtype=torch.float64)
secont condition:: tensor(3.0022e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1426e-06, dtype=torch.float64)
secont condition:: tensor(5.1426e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1904e-05, dtype=torch.float64)
secont condition:: tensor(1.1904e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8645e-05, dtype=torch.float64)
secont condition:: tensor(2.8645e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.3016e-05, dtype=torch.float64)
secont condition:: tensor(8.3016e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0050, dtype=torch.float64)
curr_secont condition:: tensor(0.0193, dtype=torch.float64)
secont condition:: tensor(0.0193, dtype=torch.float64)
curr_secont condition:: tensor(0.0156, dtype=torch.float64)
secont condition:: tensor(0.0156, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.8992e-05, dtype=torch.float64)
secont condition:: tensor(7.8992e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1558e-05, dtype=torch.float64)
secont condition:: tensor(7.1558e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1482e-05, dtype=torch.float64)
secont condition:: tensor(9.1482e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.1839e-05, dtype=torch.float64)
secont condition:: tensor(9.1839e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(4.9089e-05, dtype=torch.float64)
secont condition:: tensor(4.9089e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.5342e-05, dtype=torch.float64)
secont condition:: tensor(7.5342e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.4363e-05, dtype=torch.float64)
secont condition:: tensor(7.4363e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9895e-05, dtype=torch.float64)
secont condition:: tensor(5.9895e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6991e-05, dtype=torch.float64)
secont condition:: tensor(5.6991e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.8702e-05, dtype=torch.float64)
secont condition:: tensor(7.8702e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9095e-05, dtype=torch.float64)
secont condition:: tensor(4.9095e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9994e-05, dtype=torch.float64)
secont condition:: tensor(4.9994e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7218e-05, dtype=torch.float64)
secont condition:: tensor(4.7218e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2822e-05, dtype=torch.float64)
secont condition:: tensor(9.2822e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6158e-05, dtype=torch.float64)
secont condition:: tensor(8.6158e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8284e-05, dtype=torch.float64)
secont condition:: tensor(4.8284e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9992e-05, dtype=torch.float64)
secont condition:: tensor(4.9992e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1946e-05, dtype=torch.float64)
secont condition:: tensor(3.1946e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9672e-05, dtype=torch.float64)
secont condition:: tensor(4.9672e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2549e-05, dtype=torch.float64)
secont condition:: tensor(4.2549e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0582e-05, dtype=torch.float64)
secont condition:: tensor(5.0582e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.0288e-05, dtype=torch.float64)
secont condition:: tensor(6.0288e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4753e-05, dtype=torch.float64)
secont condition:: tensor(5.4753e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2156e-05, dtype=torch.float64)
secont condition:: tensor(4.2156e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8547e-05, dtype=torch.float64)
secont condition:: tensor(2.8547e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0521e-05, dtype=torch.float64)
secont condition:: tensor(2.0521e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6473e-05, dtype=torch.float64)
secont condition:: tensor(4.6473e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4946e-05, dtype=torch.float64)
secont condition:: tensor(3.4946e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1940e-05, dtype=torch.float64)
secont condition:: tensor(4.1940e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7009e-05, dtype=torch.float64)
secont condition:: tensor(2.7009e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.221080780029297
curr_diff: 0 tensor(9.6113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7421e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0687e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8419e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0159, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0319, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0029, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0145, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0107, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0406, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959700
random set 4
python3 generate_rand_ids 0.0002  MNIST
tensor([40385,  7909, 34441, 40457, 27721, 46317, 19342,  7412, 56373,  6620,
        53757,  4351])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243905
Test Avg. Loss: 0.000025, Accuracy: 0.937600
Train - Epoch 1, Batch: 0, Loss: 0.256850
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.167487
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.159573
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 4, Batch: 0, Loss: 0.156177
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.157502
Test Avg. Loss: 0.000019, Accuracy: 0.943900
Train - Epoch 6, Batch: 0, Loss: 0.207398
Test Avg. Loss: 0.000055, Accuracy: 0.811100
Train - Epoch 7, Batch: 0, Loss: 0.572700
Test Avg. Loss: 0.000017, Accuracy: 0.954200
Train - Epoch 8, Batch: 0, Loss: 0.186864
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 9, Batch: 0, Loss: 0.164104
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 10, Batch: 0, Loss: 0.163682
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 11, Batch: 0, Loss: 0.156061
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 12, Batch: 0, Loss: 0.161513
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 13, Batch: 0, Loss: 0.158950
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 14, Batch: 0, Loss: 0.156219
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 15, Batch: 0, Loss: 0.160130
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.154559
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.150315
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 18, Batch: 0, Loss: 0.149988
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 19, Batch: 0, Loss: 0.149941
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.157810
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.157341
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.156714
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.149809
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.155051
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 25, Batch: 0, Loss: 0.151373
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.155749
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.152885
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.150209
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.155836
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 171.46143531799316
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.32476091384888
time_baseline:: 115.38986325263977
curr_diff: 0 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0078, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0164, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0072, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0210, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7365e-08, dtype=torch.float64)
secont condition:: tensor(3.7365e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8856e-07, dtype=torch.float64)
secont condition:: tensor(1.8856e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7988e-07, dtype=torch.float64)
secont condition:: tensor(1.7988e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3078e-07, dtype=torch.float64)
secont condition:: tensor(5.3078e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5631e-07, dtype=torch.float64)
secont condition:: tensor(2.5631e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8536e-07, dtype=torch.float64)
secont condition:: tensor(1.8536e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4300e-07, dtype=torch.float64)
secont condition:: tensor(2.4300e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0355e-07, dtype=torch.float64)
secont condition:: tensor(1.0355e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2828e-07, dtype=torch.float64)
secont condition:: tensor(1.2828e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3950e-08, dtype=torch.float64)
secont condition:: tensor(9.3950e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1837e-08, dtype=torch.float64)
secont condition:: tensor(9.1837e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8101e-08, dtype=torch.float64)
secont condition:: tensor(4.8101e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3520e-08, dtype=torch.float64)
secont condition:: tensor(6.3520e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5186e-08, dtype=torch.float64)
secont condition:: tensor(4.5186e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5625e-07, dtype=torch.float64)
secont condition:: tensor(1.5625e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9901e-07, dtype=torch.float64)
secont condition:: tensor(6.9901e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7143e-07, dtype=torch.float64)
secont condition:: tensor(3.7143e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0613e-07, dtype=torch.float64)
secont condition:: tensor(3.0613e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4419e-07, dtype=torch.float64)
secont condition:: tensor(3.4419e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9731e-07, dtype=torch.float64)
secont condition:: tensor(6.9731e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2961e-06, dtype=torch.float64)
secont condition:: tensor(1.2961e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6691e-06, dtype=torch.float64)
secont condition:: tensor(2.6691e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4006e-06, dtype=torch.float64)
secont condition:: tensor(6.4006e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3380e-05, dtype=torch.float64)
secont condition:: tensor(3.3380e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.9919e-05, dtype=torch.float64)
secont condition:: tensor(9.9919e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0029, dtype=torch.float64)
secont condition:: tensor(0.0029, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0039, dtype=torch.float64)
secont condition:: tensor(0.0039, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.8923e-05, dtype=torch.float64)
secont condition:: tensor(9.8923e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9578e-05, dtype=torch.float64)
secont condition:: tensor(6.9578e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2937e-05, dtype=torch.float64)
secont condition:: tensor(7.2937e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5133e-05, dtype=torch.float64)
secont condition:: tensor(6.5133e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7485e-05, dtype=torch.float64)
secont condition:: tensor(5.7485e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8218e-05, dtype=torch.float64)
secont condition:: tensor(4.8218e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8631e-05, dtype=torch.float64)
secont condition:: tensor(4.8631e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0065e-05, dtype=torch.float64)
secont condition:: tensor(4.0065e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3106e-05, dtype=torch.float64)
secont condition:: tensor(4.3106e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9934e-05, dtype=torch.float64)
secont condition:: tensor(4.9934e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6623e-05, dtype=torch.float64)
secont condition:: tensor(4.6623e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0038e-05, dtype=torch.float64)
secont condition:: tensor(5.0038e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2798e-05, dtype=torch.float64)
secont condition:: tensor(3.2798e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0848e-05, dtype=torch.float64)
secont condition:: tensor(4.0848e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1185e-05, dtype=torch.float64)
secont condition:: tensor(4.1185e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6423e-05, dtype=torch.float64)
secont condition:: tensor(3.6423e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5135e-05, dtype=torch.float64)
secont condition:: tensor(4.5135e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8444e-05, dtype=torch.float64)
secont condition:: tensor(2.8444e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1161e-05, dtype=torch.float64)
secont condition:: tensor(3.1161e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5475e-05, dtype=torch.float64)
secont condition:: tensor(3.5475e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4763e-05, dtype=torch.float64)
secont condition:: tensor(3.4763e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9071e-05, dtype=torch.float64)
secont condition:: tensor(2.9071e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0689e-05, dtype=torch.float64)
secont condition:: tensor(4.0689e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2658e-05, dtype=torch.float64)
secont condition:: tensor(3.2658e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5200e-05, dtype=torch.float64)
secont condition:: tensor(1.5200e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0495e-05, dtype=torch.float64)
secont condition:: tensor(3.0495e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2337e-05, dtype=torch.float64)
secont condition:: tensor(2.2337e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8705e-05, dtype=torch.float64)
secont condition:: tensor(2.8705e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6685e-05, dtype=torch.float64)
secont condition:: tensor(2.6685e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9844e-05, dtype=torch.float64)
secont condition:: tensor(1.9844e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2198e-05, dtype=torch.float64)
secont condition:: tensor(2.2198e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3819e-05, dtype=torch.float64)
secont condition:: tensor(2.3819e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7228e-05, dtype=torch.float64)
secont condition:: tensor(1.7228e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9748e-05, dtype=torch.float64)
secont condition:: tensor(1.9748e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3756e-05, dtype=torch.float64)
secont condition:: tensor(2.3756e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4220e-05, dtype=torch.float64)
secont condition:: tensor(2.4220e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1648e-05, dtype=torch.float64)
secont condition:: tensor(2.1648e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1098e-05, dtype=torch.float64)
secont condition:: tensor(1.1098e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4099e-05, dtype=torch.float64)
secont condition:: tensor(1.4099e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2925e-05, dtype=torch.float64)
secont condition:: tensor(1.2925e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4194e-05, dtype=torch.float64)
secont condition:: tensor(1.4194e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6279e-05, dtype=torch.float64)
secont condition:: tensor(1.6279e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6581e-06, dtype=torch.float64)
secont condition:: tensor(9.6581e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0094e-06, dtype=torch.float64)
secont condition:: tensor(9.0094e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5611e-05, dtype=torch.float64)
secont condition:: tensor(1.5611e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.07694172859192
curr_diff: 0 tensor(8.3140e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5865e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7960e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0081, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0166, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0066, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0027, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0213, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237161
Test Avg. Loss: 0.000025, Accuracy: 0.935400
Train - Epoch 1, Batch: 0, Loss: 0.270390
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.168762
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 3, Batch: 0, Loss: 0.158278
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.156564
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 5, Batch: 0, Loss: 0.156253
Test Avg. Loss: 0.000018, Accuracy: 0.944100
Train - Epoch 6, Batch: 0, Loss: 0.200326
Test Avg. Loss: 0.000080, Accuracy: 0.804200
Train - Epoch 7, Batch: 0, Loss: 0.812892
Test Avg. Loss: 0.000018, Accuracy: 0.952200
Train - Epoch 8, Batch: 0, Loss: 0.191186
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 9, Batch: 0, Loss: 0.173844
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 10, Batch: 0, Loss: 0.164265
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 11, Batch: 0, Loss: 0.162403
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 12, Batch: 0, Loss: 0.163331
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.152810
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 14, Batch: 0, Loss: 0.156320
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 15, Batch: 0, Loss: 0.161961
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 16, Batch: 0, Loss: 0.153665
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 17, Batch: 0, Loss: 0.151149
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 18, Batch: 0, Loss: 0.157799
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 19, Batch: 0, Loss: 0.150387
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 20, Batch: 0, Loss: 0.150371
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.161994
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 22, Batch: 0, Loss: 0.152427
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 23, Batch: 0, Loss: 0.155142
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.152203
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 25, Batch: 0, Loss: 0.158065
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 26, Batch: 0, Loss: 0.154997
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 27, Batch: 0, Loss: 0.150716
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 28, Batch: 0, Loss: 0.157837
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 29, Batch: 0, Loss: 0.152573
Test Avg. Loss: 0.000014, Accuracy: 0.960700
training_time:: 172.2300670146942
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.10135889053345
time_baseline:: 116.16705965995789
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0118, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0064, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0158, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1811e-08, dtype=torch.float64)
secont condition:: tensor(8.1811e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1566e-06, dtype=torch.float64)
secont condition:: tensor(1.1566e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4317e-06, dtype=torch.float64)
secont condition:: tensor(1.4317e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2825e-06, dtype=torch.float64)
secont condition:: tensor(1.2825e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1035e-07, dtype=torch.float64)
secont condition:: tensor(5.1035e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0828e-07, dtype=torch.float64)
secont condition:: tensor(2.0828e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1292e-07, dtype=torch.float64)
secont condition:: tensor(1.1292e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7102e-07, dtype=torch.float64)
secont condition:: tensor(1.7102e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3359e-07, dtype=torch.float64)
secont condition:: tensor(1.3359e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4307e-07, dtype=torch.float64)
secont condition:: tensor(1.4307e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0667e-07, dtype=torch.float64)
secont condition:: tensor(1.0667e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9467e-08, dtype=torch.float64)
secont condition:: tensor(8.9467e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4450e-08, dtype=torch.float64)
secont condition:: tensor(9.4450e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2119e-07, dtype=torch.float64)
secont condition:: tensor(1.2119e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5457e-07, dtype=torch.float64)
secont condition:: tensor(2.5457e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4606e-07, dtype=torch.float64)
secont condition:: tensor(7.4606e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0652e-06, dtype=torch.float64)
secont condition:: tensor(1.0652e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5623e-06, dtype=torch.float64)
secont condition:: tensor(1.5623e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4859e-06, dtype=torch.float64)
secont condition:: tensor(1.4859e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2606e-06, dtype=torch.float64)
secont condition:: tensor(2.2606e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2292e-06, dtype=torch.float64)
secont condition:: tensor(4.2292e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0130e-06, dtype=torch.float64)
secont condition:: tensor(8.0130e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5735e-05, dtype=torch.float64)
secont condition:: tensor(1.5735e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3840e-05, dtype=torch.float64)
secont condition:: tensor(3.3840e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2114e-05, dtype=torch.float64)
secont condition:: tensor(7.2114e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5303e-05, dtype=torch.float64)
secont condition:: tensor(5.5303e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.5088e-05, dtype=torch.float64)
secont condition:: tensor(8.5088e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5967e-05, dtype=torch.float64)
secont condition:: tensor(3.5967e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5166e-05, dtype=torch.float64)
secont condition:: tensor(4.5166e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2954e-05, dtype=torch.float64)
secont condition:: tensor(3.2954e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1396e-05, dtype=torch.float64)
secont condition:: tensor(4.1396e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2805e-05, dtype=torch.float64)
secont condition:: tensor(2.2805e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5007e-05, dtype=torch.float64)
secont condition:: tensor(3.5007e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0826e-05, dtype=torch.float64)
secont condition:: tensor(2.0826e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2500e-05, dtype=torch.float64)
secont condition:: tensor(2.2500e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9343e-05, dtype=torch.float64)
secont condition:: tensor(2.9343e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4979e-05, dtype=torch.float64)
secont condition:: tensor(2.4979e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9043e-05, dtype=torch.float64)
secont condition:: tensor(1.9043e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8155e-05, dtype=torch.float64)
secont condition:: tensor(1.8155e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6008e-05, dtype=torch.float64)
secont condition:: tensor(1.6008e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8022e-06, dtype=torch.float64)
secont condition:: tensor(9.8022e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3986e-05, dtype=torch.float64)
secont condition:: tensor(2.3986e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0806e-05, dtype=torch.float64)
secont condition:: tensor(2.0806e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6673e-05, dtype=torch.float64)
secont condition:: tensor(1.6673e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2011e-05, dtype=torch.float64)
secont condition:: tensor(1.2011e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0667e-05, dtype=torch.float64)
secont condition:: tensor(2.0667e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5485e-05, dtype=torch.float64)
secont condition:: tensor(1.5485e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1641e-05, dtype=torch.float64)
secont condition:: tensor(1.1641e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3639e-05, dtype=torch.float64)
secont condition:: tensor(1.3639e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0518e-05, dtype=torch.float64)
secont condition:: tensor(2.0518e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1338e-05, dtype=torch.float64)
secont condition:: tensor(1.1338e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7543e-05, dtype=torch.float64)
secont condition:: tensor(1.7543e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2668e-05, dtype=torch.float64)
secont condition:: tensor(1.2668e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2914e-05, dtype=torch.float64)
secont condition:: tensor(1.2914e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3407e-05, dtype=torch.float64)
secont condition:: tensor(1.3407e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5310e-05, dtype=torch.float64)
secont condition:: tensor(1.5310e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8528e-06, dtype=torch.float64)
secont condition:: tensor(7.8528e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0593e-05, dtype=torch.float64)
secont condition:: tensor(1.0593e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2413e-06, dtype=torch.float64)
secont condition:: tensor(8.2413e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0676e-06, dtype=torch.float64)
secont condition:: tensor(2.0676e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2064e-05, dtype=torch.float64)
secont condition:: tensor(1.2064e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2439e-05, dtype=torch.float64)
secont condition:: tensor(1.2439e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4775e-06, dtype=torch.float64)
secont condition:: tensor(8.4775e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2711e-06, dtype=torch.float64)
secont condition:: tensor(9.2711e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3622e-06, dtype=torch.float64)
secont condition:: tensor(7.3622e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1789e-06, dtype=torch.float64)
secont condition:: tensor(9.1789e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6635e-06, dtype=torch.float64)
secont condition:: tensor(6.6635e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6925e-06, dtype=torch.float64)
secont condition:: tensor(5.6925e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9579e-06, dtype=torch.float64)
secont condition:: tensor(4.9579e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2276e-06, dtype=torch.float64)
secont condition:: tensor(6.2276e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9006e-06, dtype=torch.float64)
secont condition:: tensor(6.9006e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6679e-06, dtype=torch.float64)
secont condition:: tensor(5.6679e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.286121368408203
curr_diff: 0 tensor(5.4227e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5564e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9150e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3348e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0119, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0160, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239473
Test Avg. Loss: 0.000023, Accuracy: 0.943700
Train - Epoch 1, Batch: 0, Loss: 0.247704
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.161329
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.159493
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 4, Batch: 0, Loss: 0.159118
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 5, Batch: 0, Loss: 0.155885
Test Avg. Loss: 0.000018, Accuracy: 0.947600
Train - Epoch 6, Batch: 0, Loss: 0.199405
Test Avg. Loss: 0.000090, Accuracy: 0.674500
Train - Epoch 7, Batch: 0, Loss: 0.917537
Test Avg. Loss: 0.000023, Accuracy: 0.942900
Train - Epoch 8, Batch: 0, Loss: 0.255114
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 9, Batch: 0, Loss: 0.187037
Test Avg. Loss: 0.000016, Accuracy: 0.953100
Train - Epoch 10, Batch: 0, Loss: 0.173863
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 11, Batch: 0, Loss: 0.165305
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 12, Batch: 0, Loss: 0.164303
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 13, Batch: 0, Loss: 0.160353
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 14, Batch: 0, Loss: 0.162055
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 15, Batch: 0, Loss: 0.159263
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 16, Batch: 0, Loss: 0.158081
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 17, Batch: 0, Loss: 0.156227
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 18, Batch: 0, Loss: 0.157306
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.157620
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 20, Batch: 0, Loss: 0.152979
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.151671
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.149305
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.156868
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.155803
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.149019
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.159418
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.158366
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.157634
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.156365
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 170.25415301322937
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.79385566711426
time_baseline:: 114.8588080406189
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0124, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7643e-08, dtype=torch.float64)
secont condition:: tensor(7.7643e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3965e-07, dtype=torch.float64)
secont condition:: tensor(1.3965e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5614e-08, dtype=torch.float64)
secont condition:: tensor(1.5614e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9819e-07, dtype=torch.float64)
secont condition:: tensor(2.9819e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2469e-08, dtype=torch.float64)
secont condition:: tensor(5.2469e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6860e-08, dtype=torch.float64)
secont condition:: tensor(7.6860e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1631e-08, dtype=torch.float64)
secont condition:: tensor(5.1631e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2532e-07, dtype=torch.float64)
secont condition:: tensor(1.2532e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9950e-08, dtype=torch.float64)
secont condition:: tensor(7.9950e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3697e-08, dtype=torch.float64)
secont condition:: tensor(5.3697e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3734e-08, dtype=torch.float64)
secont condition:: tensor(4.3734e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3553e-07, dtype=torch.float64)
secont condition:: tensor(2.3553e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9495e-08, dtype=torch.float64)
secont condition:: tensor(9.9495e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6012e-08, dtype=torch.float64)
secont condition:: tensor(5.6012e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1731e-08, dtype=torch.float64)
secont condition:: tensor(3.1731e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4426e-07, dtype=torch.float64)
secont condition:: tensor(2.4426e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9100e-07, dtype=torch.float64)
secont condition:: tensor(1.9100e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0391e-07, dtype=torch.float64)
secont condition:: tensor(5.0391e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4298e-07, dtype=torch.float64)
secont condition:: tensor(4.4298e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0777e-07, dtype=torch.float64)
secont condition:: tensor(6.0777e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6641e-07, dtype=torch.float64)
secont condition:: tensor(7.6641e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9154e-07, dtype=torch.float64)
secont condition:: tensor(9.9154e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5433e-06, dtype=torch.float64)
secont condition:: tensor(1.5433e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2536e-06, dtype=torch.float64)
secont condition:: tensor(4.2536e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5409e-05, dtype=torch.float64)
secont condition:: tensor(1.5409e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9680e-05, dtype=torch.float64)
secont condition:: tensor(2.9680e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-1.5385e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(5.4895e-05, dtype=torch.float64)
secont condition:: tensor(5.4895e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8303e-05, dtype=torch.float64)
secont condition:: tensor(3.8303e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5867e-05, dtype=torch.float64)
secont condition:: tensor(2.5867e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6695e-05, dtype=torch.float64)
secont condition:: tensor(2.6695e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4654e-05, dtype=torch.float64)
secont condition:: tensor(2.4654e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2389e-05, dtype=torch.float64)
secont condition:: tensor(2.2389e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9681e-05, dtype=torch.float64)
secont condition:: tensor(1.9681e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1115e-05, dtype=torch.float64)
secont condition:: tensor(5.1115e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5134e-05, dtype=torch.float64)
secont condition:: tensor(3.5134e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3598e-05, dtype=torch.float64)
secont condition:: tensor(4.3598e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1669e-05, dtype=torch.float64)
secont condition:: tensor(2.1669e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7650e-05, dtype=torch.float64)
secont condition:: tensor(2.7650e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6396e-05, dtype=torch.float64)
secont condition:: tensor(3.6396e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6100e-05, dtype=torch.float64)
secont condition:: tensor(3.6100e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4395e-05, dtype=torch.float64)
secont condition:: tensor(1.4395e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1712e-05, dtype=torch.float64)
secont condition:: tensor(2.1712e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8431e-05, dtype=torch.float64)
secont condition:: tensor(3.8431e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7796e-05, dtype=torch.float64)
secont condition:: tensor(2.7796e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1907e-05, dtype=torch.float64)
secont condition:: tensor(2.1907e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9823e-05, dtype=torch.float64)
secont condition:: tensor(2.9823e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7501e-05, dtype=torch.float64)
secont condition:: tensor(1.7501e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.4851e-06, dtype=torch.float64)
secont condition:: tensor(7.4851e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2027e-05, dtype=torch.float64)
secont condition:: tensor(1.2027e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4273e-05, dtype=torch.float64)
secont condition:: tensor(1.4273e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5018e-05, dtype=torch.float64)
secont condition:: tensor(1.5018e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0156e-05, dtype=torch.float64)
secont condition:: tensor(2.0156e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2864e-05, dtype=torch.float64)
secont condition:: tensor(1.2864e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2262e-05, dtype=torch.float64)
secont condition:: tensor(1.2262e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0848e-05, dtype=torch.float64)
secont condition:: tensor(1.0848e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1568e-05, dtype=torch.float64)
secont condition:: tensor(2.1568e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8441e-05, dtype=torch.float64)
secont condition:: tensor(1.8441e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4122e-05, dtype=torch.float64)
secont condition:: tensor(1.4122e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3839e-06, dtype=torch.float64)
secont condition:: tensor(7.3839e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0262e-05, dtype=torch.float64)
secont condition:: tensor(1.0262e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.7811e-06, dtype=torch.float64)
secont condition:: tensor(9.7811e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2425e-06, dtype=torch.float64)
secont condition:: tensor(7.2425e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0294e-06, dtype=torch.float64)
secont condition:: tensor(7.0294e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7251e-06, dtype=torch.float64)
secont condition:: tensor(7.7251e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2638e-06, dtype=torch.float64)
secont condition:: tensor(6.2638e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4515e-06, dtype=torch.float64)
secont condition:: tensor(5.4515e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5264e-06, dtype=torch.float64)
secont condition:: tensor(8.5264e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0580e-05, dtype=torch.float64)
secont condition:: tensor(1.0580e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4935e-06, dtype=torch.float64)
secont condition:: tensor(3.4935e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5822e-06, dtype=torch.float64)
secont condition:: tensor(6.5822e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3447e-06, dtype=torch.float64)
secont condition:: tensor(5.3447e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5236e-06, dtype=torch.float64)
secont condition:: tensor(5.5236e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7552e-06, dtype=torch.float64)
secont condition:: tensor(2.7552e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.135865926742554
curr_diff: 0 tensor(4.2819e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2236e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6148e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9640e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5357e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0125, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234986
Test Avg. Loss: 0.000026, Accuracy: 0.933200
Train - Epoch 1, Batch: 0, Loss: 0.277146
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 2, Batch: 0, Loss: 0.162632
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 3, Batch: 0, Loss: 0.154535
Test Avg. Loss: 0.000014, Accuracy: 0.957300
Train - Epoch 4, Batch: 0, Loss: 0.156136
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 5, Batch: 0, Loss: 0.164181
Test Avg. Loss: 0.000050, Accuracy: 0.816900
Train - Epoch 6, Batch: 0, Loss: 0.525980
Test Avg. Loss: 0.000030, Accuracy: 0.927000
Train - Epoch 7, Batch: 0, Loss: 0.322608
Test Avg. Loss: 0.000016, Accuracy: 0.953900
Train - Epoch 8, Batch: 0, Loss: 0.177191
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 9, Batch: 0, Loss: 0.161828
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 10, Batch: 0, Loss: 0.168355
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 11, Batch: 0, Loss: 0.163060
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 12, Batch: 0, Loss: 0.162382
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 13, Batch: 0, Loss: 0.156701
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 14, Batch: 0, Loss: 0.157899
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 15, Batch: 0, Loss: 0.155413
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 16, Batch: 0, Loss: 0.154065
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.161123
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 18, Batch: 0, Loss: 0.158318
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.155692
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 20, Batch: 0, Loss: 0.150388
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.157808
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.149149
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.159497
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.158811
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 25, Batch: 0, Loss: 0.153731
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 26, Batch: 0, Loss: 0.155441
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.158175
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.157768
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.150241
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 169.64401578903198
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.44895887374878
time_baseline:: 116.51504158973694
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9261e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6822e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5096e-08, dtype=torch.float64)
secont condition:: tensor(2.5096e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6494e-07, dtype=torch.float64)
secont condition:: tensor(1.6494e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6803e-07, dtype=torch.float64)
secont condition:: tensor(1.6803e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5690e-07, dtype=torch.float64)
secont condition:: tensor(2.5690e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5790e-08, dtype=torch.float64)
secont condition:: tensor(4.5790e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7411e-08, dtype=torch.float64)
secont condition:: tensor(1.7411e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6259e-07, dtype=torch.float64)
secont condition:: tensor(1.6259e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0983e-07, dtype=torch.float64)
secont condition:: tensor(3.0983e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3151e-07, dtype=torch.float64)
secont condition:: tensor(1.3151e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1901e-07, dtype=torch.float64)
secont condition:: tensor(1.1901e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6370e-08, dtype=torch.float64)
secont condition:: tensor(2.6370e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2548e-07, dtype=torch.float64)
secont condition:: tensor(1.2548e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4918e-07, dtype=torch.float64)
secont condition:: tensor(1.4918e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1589e-07, dtype=torch.float64)
secont condition:: tensor(2.1589e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9490e-07, dtype=torch.float64)
secont condition:: tensor(1.9490e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3759e-07, dtype=torch.float64)
secont condition:: tensor(2.3759e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3390e-07, dtype=torch.float64)
secont condition:: tensor(1.3390e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0383e-07, dtype=torch.float64)
secont condition:: tensor(1.0383e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2920e-07, dtype=torch.float64)
secont condition:: tensor(1.2920e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4551e-07, dtype=torch.float64)
secont condition:: tensor(2.4551e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1206e-07, dtype=torch.float64)
secont condition:: tensor(5.1206e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8660e-07, dtype=torch.float64)
secont condition:: tensor(5.8660e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0704e-06, dtype=torch.float64)
secont condition:: tensor(1.0704e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3782e-06, dtype=torch.float64)
secont condition:: tensor(3.3782e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1192e-06, dtype=torch.float64)
secont condition:: tensor(7.1192e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1963e-05, dtype=torch.float64)
secont condition:: tensor(2.1963e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9538e-05, dtype=torch.float64)
secont condition:: tensor(1.9538e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0799e-06, dtype=torch.float64)
secont condition:: tensor(7.0799e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5283e-06, dtype=torch.float64)
secont condition:: tensor(3.5283e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8795e-06, dtype=torch.float64)
secont condition:: tensor(1.8795e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1424e-06, dtype=torch.float64)
secont condition:: tensor(1.1424e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3055e-07, dtype=torch.float64)
secont condition:: tensor(7.3055e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0040e-06, dtype=torch.float64)
secont condition:: tensor(1.0040e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4801e-06, dtype=torch.float64)
secont condition:: tensor(1.4801e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4557e-07, dtype=torch.float64)
secont condition:: tensor(8.4557e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7858e-07, dtype=torch.float64)
secont condition:: tensor(6.7858e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7772e-07, dtype=torch.float64)
secont condition:: tensor(6.7772e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4748e-07, dtype=torch.float64)
secont condition:: tensor(8.4748e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9785e-07, dtype=torch.float64)
secont condition:: tensor(6.9785e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9345e-07, dtype=torch.float64)
secont condition:: tensor(6.9345e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0310e-07, dtype=torch.float64)
secont condition:: tensor(6.0310e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9936e-07, dtype=torch.float64)
secont condition:: tensor(3.9936e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5053e-07, dtype=torch.float64)
secont condition:: tensor(3.5053e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2939e-07, dtype=torch.float64)
secont condition:: tensor(4.2939e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3949e-07, dtype=torch.float64)
secont condition:: tensor(2.3949e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6050e-07, dtype=torch.float64)
secont condition:: tensor(3.6050e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8354e-07, dtype=torch.float64)
secont condition:: tensor(3.8354e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6485e-07, dtype=torch.float64)
secont condition:: tensor(3.6485e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4810e-07, dtype=torch.float64)
secont condition:: tensor(2.4810e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5940e-07, dtype=torch.float64)
secont condition:: tensor(2.5940e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4762e-07, dtype=torch.float64)
secont condition:: tensor(3.4762e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7926e-07, dtype=torch.float64)
secont condition:: tensor(4.7926e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9648e-07, dtype=torch.float64)
secont condition:: tensor(1.9648e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3693e-07, dtype=torch.float64)
secont condition:: tensor(6.3693e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1560e-07, dtype=torch.float64)
secont condition:: tensor(4.1560e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9831e-07, dtype=torch.float64)
secont condition:: tensor(2.9831e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8729e-07, dtype=torch.float64)
secont condition:: tensor(4.8729e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5788e-07, dtype=torch.float64)
secont condition:: tensor(2.5788e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2091e-07, dtype=torch.float64)
secont condition:: tensor(4.2091e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8656e-07, dtype=torch.float64)
secont condition:: tensor(3.8656e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1778e-07, dtype=torch.float64)
secont condition:: tensor(5.1778e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8261e-07, dtype=torch.float64)
secont condition:: tensor(3.8261e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6643e-07, dtype=torch.float64)
secont condition:: tensor(3.6643e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7299e-07, dtype=torch.float64)
secont condition:: tensor(2.7299e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3201e-07, dtype=torch.float64)
secont condition:: tensor(2.3201e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9573e-07, dtype=torch.float64)
secont condition:: tensor(1.9573e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3122e-07, dtype=torch.float64)
secont condition:: tensor(3.3122e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3271e-07, dtype=torch.float64)
secont condition:: tensor(2.3271e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8372e-07, dtype=torch.float64)
secont condition:: tensor(3.8372e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2223e-07, dtype=torch.float64)
secont condition:: tensor(3.2223e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1281e-07, dtype=torch.float64)
secont condition:: tensor(2.1281e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3852e-07, dtype=torch.float64)
secont condition:: tensor(1.3852e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8207e-07, dtype=torch.float64)
secont condition:: tensor(1.8207e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7543e-07, dtype=torch.float64)
secont condition:: tensor(1.7543e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3665e-07, dtype=torch.float64)
secont condition:: tensor(1.3665e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3327e-07, dtype=torch.float64)
secont condition:: tensor(3.3327e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1982e-07, dtype=torch.float64)
secont condition:: tensor(3.1982e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.07202172279358
curr_diff: 0 tensor(2.0012e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6613e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.5105e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.3803e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8283e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7694e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5458e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.7451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239604
Test Avg. Loss: 0.000025, Accuracy: 0.937900
Train - Epoch 1, Batch: 0, Loss: 0.259141
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.168100
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 3, Batch: 0, Loss: 0.161051
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 4, Batch: 0, Loss: 0.155487
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 5, Batch: 0, Loss: 0.165638
Test Avg. Loss: 0.000017, Accuracy: 0.945900
Train - Epoch 6, Batch: 0, Loss: 0.188128
Test Avg. Loss: 0.000081, Accuracy: 0.759000
Train - Epoch 7, Batch: 0, Loss: 0.839580
Test Avg. Loss: 0.000018, Accuracy: 0.951600
Train - Epoch 8, Batch: 0, Loss: 0.191594
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 9, Batch: 0, Loss: 0.174170
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 10, Batch: 0, Loss: 0.161265
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 11, Batch: 0, Loss: 0.163511
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 12, Batch: 0, Loss: 0.161698
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 13, Batch: 0, Loss: 0.159662
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 14, Batch: 0, Loss: 0.159772
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 15, Batch: 0, Loss: 0.163036
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 16, Batch: 0, Loss: 0.161961
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 17, Batch: 0, Loss: 0.155361
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 18, Batch: 0, Loss: 0.153110
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 19, Batch: 0, Loss: 0.158685
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 20, Batch: 0, Loss: 0.153083
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 21, Batch: 0, Loss: 0.156966
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 22, Batch: 0, Loss: 0.157673
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 23, Batch: 0, Loss: 0.154571
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 24, Batch: 0, Loss: 0.153208
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.154602
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 26, Batch: 0, Loss: 0.152318
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.152526
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 28, Batch: 0, Loss: 0.154270
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 29, Batch: 0, Loss: 0.153843
Test Avg. Loss: 0.000014, Accuracy: 0.960700
training_time:: 172.55523538589478
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.46133232116699
time_baseline:: 116.5285394191742
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0087, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4810e-08, dtype=torch.float64)
secont condition:: tensor(3.4810e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9060e-08, dtype=torch.float64)
secont condition:: tensor(5.9060e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6482e-07, dtype=torch.float64)
secont condition:: tensor(1.6482e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3807e-07, dtype=torch.float64)
secont condition:: tensor(2.3807e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1508e-08, dtype=torch.float64)
secont condition:: tensor(7.1508e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3711e-08, dtype=torch.float64)
secont condition:: tensor(1.3711e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2871e-08, dtype=torch.float64)
secont condition:: tensor(5.2871e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8702e-07, dtype=torch.float64)
secont condition:: tensor(1.8702e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0477e-08, dtype=torch.float64)
secont condition:: tensor(5.0477e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1763e-07, dtype=torch.float64)
secont condition:: tensor(2.1763e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6896e-08, dtype=torch.float64)
secont condition:: tensor(8.6896e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4139e-08, dtype=torch.float64)
secont condition:: tensor(8.4139e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2283e-08, dtype=torch.float64)
secont condition:: tensor(6.2283e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5445e-08, dtype=torch.float64)
secont condition:: tensor(4.5445e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5158e-07, dtype=torch.float64)
secont condition:: tensor(1.5158e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8497e-08, dtype=torch.float64)
secont condition:: tensor(9.8497e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6482e-07, dtype=torch.float64)
secont condition:: tensor(3.6482e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2400e-07, dtype=torch.float64)
secont condition:: tensor(4.2400e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5691e-07, dtype=torch.float64)
secont condition:: tensor(5.5691e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5963e-07, dtype=torch.float64)
secont condition:: tensor(8.5963e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4204e-06, dtype=torch.float64)
secont condition:: tensor(1.4204e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4186e-06, dtype=torch.float64)
secont condition:: tensor(2.4186e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4839e-06, dtype=torch.float64)
secont condition:: tensor(5.4839e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0612e-05, dtype=torch.float64)
secont condition:: tensor(1.0612e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1442e-05, dtype=torch.float64)
secont condition:: tensor(3.1442e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.7872e-05, dtype=torch.float64)
secont condition:: tensor(8.7872e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(3.7098e-05, dtype=torch.float64)
secont condition:: tensor(3.7098e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5129e-05, dtype=torch.float64)
secont condition:: tensor(2.5129e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6076e-05, dtype=torch.float64)
secont condition:: tensor(1.6076e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6111e-05, dtype=torch.float64)
secont condition:: tensor(1.6111e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5859e-05, dtype=torch.float64)
secont condition:: tensor(1.5859e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3113e-06, dtype=torch.float64)
secont condition:: tensor(9.3113e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8750e-06, dtype=torch.float64)
secont condition:: tensor(6.8750e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8620e-06, dtype=torch.float64)
secont condition:: tensor(7.8620e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7152e-06, dtype=torch.float64)
secont condition:: tensor(7.7152e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1096e-06, dtype=torch.float64)
secont condition:: tensor(7.1096e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2825e-06, dtype=torch.float64)
secont condition:: tensor(7.2825e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9800e-06, dtype=torch.float64)
secont condition:: tensor(7.9800e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2485e-06, dtype=torch.float64)
secont condition:: tensor(4.2485e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3657e-06, dtype=torch.float64)
secont condition:: tensor(6.3657e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4114e-06, dtype=torch.float64)
secont condition:: tensor(7.4114e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8146e-06, dtype=torch.float64)
secont condition:: tensor(4.8146e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2135e-06, dtype=torch.float64)
secont condition:: tensor(4.2135e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6875e-06, dtype=torch.float64)
secont condition:: tensor(6.6875e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3471e-06, dtype=torch.float64)
secont condition:: tensor(3.3471e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1037e-06, dtype=torch.float64)
secont condition:: tensor(4.1037e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5089e-06, dtype=torch.float64)
secont condition:: tensor(4.5089e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8258e-06, dtype=torch.float64)
secont condition:: tensor(3.8258e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5831e-06, dtype=torch.float64)
secont condition:: tensor(7.5831e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3771e-06, dtype=torch.float64)
secont condition:: tensor(3.3771e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3890e-06, dtype=torch.float64)
secont condition:: tensor(2.3890e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2091e-06, dtype=torch.float64)
secont condition:: tensor(3.2091e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5273e-06, dtype=torch.float64)
secont condition:: tensor(4.5273e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2514e-06, dtype=torch.float64)
secont condition:: tensor(3.2514e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9759e-06, dtype=torch.float64)
secont condition:: tensor(3.9759e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1634e-06, dtype=torch.float64)
secont condition:: tensor(4.1634e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0236e-06, dtype=torch.float64)
secont condition:: tensor(3.0236e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7484e-06, dtype=torch.float64)
secont condition:: tensor(2.7484e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7366e-06, dtype=torch.float64)
secont condition:: tensor(2.7366e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7434e-06, dtype=torch.float64)
secont condition:: tensor(1.7434e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1506e-06, dtype=torch.float64)
secont condition:: tensor(3.1506e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2690e-06, dtype=torch.float64)
secont condition:: tensor(2.2690e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5363e-06, dtype=torch.float64)
secont condition:: tensor(3.5363e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4077e-06, dtype=torch.float64)
secont condition:: tensor(2.4077e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7170e-06, dtype=torch.float64)
secont condition:: tensor(2.7170e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9658e-06, dtype=torch.float64)
secont condition:: tensor(2.9658e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5074e-06, dtype=torch.float64)
secont condition:: tensor(3.5074e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3131e-06, dtype=torch.float64)
secont condition:: tensor(1.3131e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5078e-06, dtype=torch.float64)
secont condition:: tensor(3.5078e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8154e-06, dtype=torch.float64)
secont condition:: tensor(2.8154e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7933e-06, dtype=torch.float64)
secont condition:: tensor(2.7933e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1658e-06, dtype=torch.float64)
secont condition:: tensor(3.1658e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7065e-06, dtype=torch.float64)
secont condition:: tensor(2.7065e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9799e-06, dtype=torch.float64)
secont condition:: tensor(1.9799e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2113e-06, dtype=torch.float64)
secont condition:: tensor(3.2113e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.154239416122437
curr_diff: 0 tensor(3.7807e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4755e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0061e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8009e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7406e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8008e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0070, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0089, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
random set 5
python3 generate_rand_ids 0.0002  MNIST
tensor([ 9670, 22537, 49866, 18682, 54649, 48681, 28397, 33328, 14169,  3546,
        26619, 43036])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234973
Test Avg. Loss: 0.000024, Accuracy: 0.938100
Train - Epoch 1, Batch: 0, Loss: 0.265138
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.165413
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 3, Batch: 0, Loss: 0.155435
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.158826
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.164836
Test Avg. Loss: 0.000028, Accuracy: 0.907600
Train - Epoch 6, Batch: 0, Loss: 0.306358
Test Avg. Loss: 0.000039, Accuracy: 0.905700
Train - Epoch 7, Batch: 0, Loss: 0.411502
Test Avg. Loss: 0.000017, Accuracy: 0.952500
Train - Epoch 8, Batch: 0, Loss: 0.184411
Test Avg. Loss: 0.000016, Accuracy: 0.953000
Train - Epoch 9, Batch: 0, Loss: 0.172307
Test Avg. Loss: 0.000015, Accuracy: 0.955100
Train - Epoch 10, Batch: 0, Loss: 0.170895
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 11, Batch: 0, Loss: 0.160449
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 12, Batch: 0, Loss: 0.165775
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 13, Batch: 0, Loss: 0.166722
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 14, Batch: 0, Loss: 0.162471
Test Avg. Loss: 0.000014, Accuracy: 0.958400
Train - Epoch 15, Batch: 0, Loss: 0.157090
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 16, Batch: 0, Loss: 0.153957
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 17, Batch: 0, Loss: 0.153834
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 18, Batch: 0, Loss: 0.151800
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.155414
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 20, Batch: 0, Loss: 0.159545
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 21, Batch: 0, Loss: 0.158235
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.154834
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 23, Batch: 0, Loss: 0.154233
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.155266
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.152679
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.153215
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.159120
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.159039
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 29, Batch: 0, Loss: 0.160434
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 170.2955048084259
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.28422141075134
time_baseline:: 116.3498923778534
curr_diff: 0 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0288, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0562, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0238, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0215, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0098, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0720, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7157e-08, dtype=torch.float64)
secont condition:: tensor(2.7157e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3445e-07, dtype=torch.float64)
secont condition:: tensor(8.3445e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1542e-07, dtype=torch.float64)
secont condition:: tensor(7.1542e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7625e-07, dtype=torch.float64)
secont condition:: tensor(4.7625e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2943e-07, dtype=torch.float64)
secont condition:: tensor(2.2943e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9878e-08, dtype=torch.float64)
secont condition:: tensor(6.9878e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5298e-07, dtype=torch.float64)
secont condition:: tensor(1.5298e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6690e-07, dtype=torch.float64)
secont condition:: tensor(6.6690e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6959e-07, dtype=torch.float64)
secont condition:: tensor(1.6959e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5320e-08, dtype=torch.float64)
secont condition:: tensor(7.5320e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7850e-07, dtype=torch.float64)
secont condition:: tensor(3.7850e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7529e-07, dtype=torch.float64)
secont condition:: tensor(1.7529e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7988e-07, dtype=torch.float64)
secont condition:: tensor(8.7988e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4205e-07, dtype=torch.float64)
secont condition:: tensor(7.4205e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4797e-07, dtype=torch.float64)
secont condition:: tensor(7.4797e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0160e-06, dtype=torch.float64)
secont condition:: tensor(1.0160e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4138e-06, dtype=torch.float64)
secont condition:: tensor(1.4138e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9166e-06, dtype=torch.float64)
secont condition:: tensor(1.9166e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4793e-06, dtype=torch.float64)
secont condition:: tensor(6.4793e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2186e-05, dtype=torch.float64)
secont condition:: tensor(1.2186e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6914e-05, dtype=torch.float64)
secont condition:: tensor(2.6914e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7442e-05, dtype=torch.float64)
secont condition:: tensor(5.7442e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(-0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0199, dtype=torch.float64)
secont condition:: tensor(0.0199, dtype=torch.float64)
curr_secont condition:: tensor(0.0044, dtype=torch.float64)
secont condition:: tensor(0.0044, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0053, dtype=torch.float64)
secont condition:: tensor(0.0053, dtype=torch.float64)
curr_secont condition:: tensor(0.0113, dtype=torch.float64)
secont condition:: tensor(0.0113, dtype=torch.float64)
curr_secont condition:: tensor(0.0082, dtype=torch.float64)
secont condition:: tensor(0.0082, dtype=torch.float64)
curr_secont condition:: tensor(0.0025, dtype=torch.float64)
secont condition:: tensor(0.0025, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(9.9349e-05, dtype=torch.float64)
secont condition:: tensor(9.9349e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(6.9230e-05, dtype=torch.float64)
secont condition:: tensor(6.9230e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.973060846328735
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9801e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4164e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0290, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0561, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0239, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0216, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0098, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0720, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.225498
Test Avg. Loss: 0.000023, Accuracy: 0.943000
Train - Epoch 1, Batch: 0, Loss: 0.254351
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 2, Batch: 0, Loss: 0.170835
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.158673
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 4, Batch: 0, Loss: 0.156208
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 5, Batch: 0, Loss: 0.154601
Test Avg. Loss: 0.000016, Accuracy: 0.952600
Train - Epoch 6, Batch: 0, Loss: 0.174578
Test Avg. Loss: 0.000172, Accuracy: 0.597900
Train - Epoch 7, Batch: 0, Loss: 1.719855
Test Avg. Loss: 0.000042, Accuracy: 0.896600
Train - Epoch 8, Batch: 0, Loss: 0.449749
Test Avg. Loss: 0.000020, Accuracy: 0.948400
Train - Epoch 9, Batch: 0, Loss: 0.222464
Test Avg. Loss: 0.000018, Accuracy: 0.950400
Train - Epoch 10, Batch: 0, Loss: 0.205662
Test Avg. Loss: 0.000017, Accuracy: 0.952800
Train - Epoch 11, Batch: 0, Loss: 0.193706
Test Avg. Loss: 0.000016, Accuracy: 0.953400
Train - Epoch 12, Batch: 0, Loss: 0.180793
Test Avg. Loss: 0.000016, Accuracy: 0.954800
Train - Epoch 13, Batch: 0, Loss: 0.170473
Test Avg. Loss: 0.000016, Accuracy: 0.955400
Train - Epoch 14, Batch: 0, Loss: 0.171435
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 15, Batch: 0, Loss: 0.165160
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 16, Batch: 0, Loss: 0.170763
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 17, Batch: 0, Loss: 0.162947
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 18, Batch: 0, Loss: 0.160646
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 19, Batch: 0, Loss: 0.163668
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 20, Batch: 0, Loss: 0.160164
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 21, Batch: 0, Loss: 0.157643
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 22, Batch: 0, Loss: 0.161415
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 23, Batch: 0, Loss: 0.161610
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 24, Batch: 0, Loss: 0.156596
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 25, Batch: 0, Loss: 0.156106
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 26, Batch: 0, Loss: 0.157126
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 27, Batch: 0, Loss: 0.156732
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 28, Batch: 0, Loss: 0.160742
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 29, Batch: 0, Loss: 0.155209
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 171.83986687660217
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.56017804145813
time_baseline:: 115.62499451637268
curr_diff: 0 tensor(0.0124, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1190, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0071, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1998, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0101, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0795, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0122, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0534, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0226, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.2534, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9991, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1594e-07, dtype=torch.float64)
secont condition:: tensor(1.1594e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2790e-07, dtype=torch.float64)
secont condition:: tensor(3.2790e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.0156e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7799e-06, dtype=torch.float64)
secont condition:: tensor(1.7799e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3107e-07, dtype=torch.float64)
secont condition:: tensor(4.3107e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8655e-08, dtype=torch.float64)
secont condition:: tensor(9.8655e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4658e-07, dtype=torch.float64)
secont condition:: tensor(2.4658e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3478e-07, dtype=torch.float64)
secont condition:: tensor(3.3478e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3086e-07, dtype=torch.float64)
secont condition:: tensor(5.3086e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2355e-07, dtype=torch.float64)
secont condition:: tensor(3.2355e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7079e-07, dtype=torch.float64)
secont condition:: tensor(1.7079e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4469e-07, dtype=torch.float64)
secont condition:: tensor(1.4469e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0485e-07, dtype=torch.float64)
secont condition:: tensor(7.0485e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9767e-07, dtype=torch.float64)
secont condition:: tensor(5.9767e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1371e-07, dtype=torch.float64)
secont condition:: tensor(7.1371e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7645e-07, dtype=torch.float64)
secont condition:: tensor(7.7645e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4312e-06, dtype=torch.float64)
secont condition:: tensor(1.4312e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0084e-06, dtype=torch.float64)
secont condition:: tensor(2.0084e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8944e-06, dtype=torch.float64)
secont condition:: tensor(4.8944e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3009e-06, dtype=torch.float64)
secont condition:: tensor(9.3009e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9102e-05, dtype=torch.float64)
secont condition:: tensor(1.9102e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7305e-05, dtype=torch.float64)
secont condition:: tensor(4.7305e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0045, dtype=torch.float64)
secont condition:: tensor(0.0045, dtype=torch.float64)
curr_secont condition:: tensor(0.0041, dtype=torch.float64)
secont condition:: tensor(0.0041, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0372, dtype=torch.float64)
secont condition:: tensor(0.0372, dtype=torch.float64)
curr_secont condition:: tensor(0.0409, dtype=torch.float64)
secont condition:: tensor(0.0409, dtype=torch.float64)
curr_secont condition:: tensor(0.0027, dtype=torch.float64)
secont condition:: tensor(0.0027, dtype=torch.float64)
curr_secont condition:: tensor(-0.0045, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0028, dtype=torch.float64)
curr_secont condition:: tensor(0.0022, dtype=torch.float64)
secont condition:: tensor(0.0022, dtype=torch.float64)
curr_secont condition:: tensor(0.0024, dtype=torch.float64)
secont condition:: tensor(0.0024, dtype=torch.float64)
curr_secont condition:: tensor(0.0015, dtype=torch.float64)
secont condition:: tensor(0.0015, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2540e-06, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
curr_secont condition:: tensor(-0.0014, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0013, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0021, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0029, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0016, dtype=torch.float64)
curr_secont condition:: tensor(-0.0030, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0028, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0015, dtype=torch.float64)
curr_secont condition:: tensor(-0.0032, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0029, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0025, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0020, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0018, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0030, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0010, dtype=torch.float64)
curr_secont condition:: tensor(-0.0024, dtype=torch.float64)
curr_secont condition:: tensor(-0.0033, dtype=torch.float64)
curr_secont condition:: tensor(-0.0029, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0037, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
curr_secont condition:: tensor(-0.0019, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0022, dtype=torch.float64)
curr_secont condition:: tensor(-0.0028, dtype=torch.float64)
curr_secont condition:: tensor(-0.0017, dtype=torch.float64)
curr_secont condition:: tensor(-0.0030, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 44.348289489746094
curr_diff: 0 tensor(4.8881e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1114e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6029e-14, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1435e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.2999e-14, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1312e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3881e-14, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4013e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1329e-14, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6493e-15, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4317e-14, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0124, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1190, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0071, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.1998, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0101, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0795, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0122, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0534, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0226, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.2534, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9991, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.959700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239495
Test Avg. Loss: 0.000026, Accuracy: 0.938000
Train - Epoch 1, Batch: 0, Loss: 0.272833
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.163655
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 3, Batch: 0, Loss: 0.157819
Test Avg. Loss: 0.000014, Accuracy: 0.957700
Train - Epoch 4, Batch: 0, Loss: 0.157519
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 5, Batch: 0, Loss: 0.160534
Test Avg. Loss: 0.000042, Accuracy: 0.854400
Train - Epoch 6, Batch: 0, Loss: 0.449200
Test Avg. Loss: 0.000034, Accuracy: 0.920800
Train - Epoch 7, Batch: 0, Loss: 0.362923
Test Avg. Loss: 0.000017, Accuracy: 0.953300
Train - Epoch 8, Batch: 0, Loss: 0.188303
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 9, Batch: 0, Loss: 0.166911
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 10, Batch: 0, Loss: 0.168677
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 11, Batch: 0, Loss: 0.161174
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 12, Batch: 0, Loss: 0.160667
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 13, Batch: 0, Loss: 0.158076
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 14, Batch: 0, Loss: 0.156998
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.152880
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 16, Batch: 0, Loss: 0.155297
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.156363
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.158436
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 19, Batch: 0, Loss: 0.152700
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.151289
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.152333
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 22, Batch: 0, Loss: 0.156528
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.158005
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.154203
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.157541
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.156642
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.152355
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 28, Batch: 0, Loss: 0.151638
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.147222
Test Avg. Loss: 0.000014, Accuracy: 0.961200
training_time:: 169.14440846443176
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.28377413749695
time_baseline:: 116.34926223754883
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0126, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0169, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0195e-08, dtype=torch.float64)
secont condition:: tensor(1.0195e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0582e-06, dtype=torch.float64)
secont condition:: tensor(1.0582e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2000e-07, dtype=torch.float64)
secont condition:: tensor(6.2000e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7108e-07, dtype=torch.float64)
secont condition:: tensor(5.7108e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1679e-07, dtype=torch.float64)
secont condition:: tensor(3.1679e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7409e-07, dtype=torch.float64)
secont condition:: tensor(2.7409e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7438e-07, dtype=torch.float64)
secont condition:: tensor(2.7438e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1500e-07, dtype=torch.float64)
secont condition:: tensor(1.1500e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7700e-08, dtype=torch.float64)
secont condition:: tensor(5.7700e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3165e-07, dtype=torch.float64)
secont condition:: tensor(1.3165e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5503e-07, dtype=torch.float64)
secont condition:: tensor(1.5503e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0462e-06, dtype=torch.float64)
secont condition:: tensor(1.0462e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1992e-07, dtype=torch.float64)
secont condition:: tensor(5.1992e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3372e-06, dtype=torch.float64)
secont condition:: tensor(1.3372e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7480e-07, dtype=torch.float64)
secont condition:: tensor(9.7480e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0877e-06, dtype=torch.float64)
secont condition:: tensor(1.0877e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0727e-06, dtype=torch.float64)
secont condition:: tensor(1.0727e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8007e-06, dtype=torch.float64)
secont condition:: tensor(3.8007e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9074e-06, dtype=torch.float64)
secont condition:: tensor(5.9074e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0512e-05, dtype=torch.float64)
secont condition:: tensor(1.0512e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6280e-05, dtype=torch.float64)
secont condition:: tensor(1.6280e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3539e-05, dtype=torch.float64)
secont condition:: tensor(4.3539e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1809e-05, dtype=torch.float64)
secont condition:: tensor(8.1809e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1962e-05, dtype=torch.float64)
secont condition:: tensor(7.1962e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.4920e-05, dtype=torch.float64)
secont condition:: tensor(7.4920e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1467e-05, dtype=torch.float64)
secont condition:: tensor(3.1467e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8541e-05, dtype=torch.float64)
secont condition:: tensor(3.8541e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9645e-05, dtype=torch.float64)
secont condition:: tensor(2.9645e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6493e-05, dtype=torch.float64)
secont condition:: tensor(3.6493e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3885e-05, dtype=torch.float64)
secont condition:: tensor(2.3885e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0158e-05, dtype=torch.float64)
secont condition:: tensor(3.0158e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6182e-05, dtype=torch.float64)
secont condition:: tensor(3.6182e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7601e-05, dtype=torch.float64)
secont condition:: tensor(2.7601e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2717e-05, dtype=torch.float64)
secont condition:: tensor(2.2717e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4026e-05, dtype=torch.float64)
secont condition:: tensor(2.4026e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5749e-05, dtype=torch.float64)
secont condition:: tensor(2.5749e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9586e-05, dtype=torch.float64)
secont condition:: tensor(1.9586e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6139e-05, dtype=torch.float64)
secont condition:: tensor(2.6139e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1687e-05, dtype=torch.float64)
secont condition:: tensor(2.1687e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1861e-05, dtype=torch.float64)
secont condition:: tensor(2.1861e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4661e-05, dtype=torch.float64)
secont condition:: tensor(2.4661e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3524e-05, dtype=torch.float64)
secont condition:: tensor(3.3524e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3732e-05, dtype=torch.float64)
secont condition:: tensor(2.3732e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7928e-05, dtype=torch.float64)
secont condition:: tensor(1.7928e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8676e-05, dtype=torch.float64)
secont condition:: tensor(2.8676e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0102e-05, dtype=torch.float64)
secont condition:: tensor(1.0102e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4639e-05, dtype=torch.float64)
secont condition:: tensor(2.4639e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0888e-05, dtype=torch.float64)
secont condition:: tensor(2.0888e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3881e-05, dtype=torch.float64)
secont condition:: tensor(2.3881e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0644e-05, dtype=torch.float64)
secont condition:: tensor(2.0644e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9532e-05, dtype=torch.float64)
secont condition:: tensor(1.9532e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4084e-05, dtype=torch.float64)
secont condition:: tensor(1.4084e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9897e-05, dtype=torch.float64)
secont condition:: tensor(1.9897e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1065e-05, dtype=torch.float64)
secont condition:: tensor(1.1065e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1339e-05, dtype=torch.float64)
secont condition:: tensor(1.1339e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0736e-05, dtype=torch.float64)
secont condition:: tensor(1.0736e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4227e-05, dtype=torch.float64)
secont condition:: tensor(1.4227e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1805e-05, dtype=torch.float64)
secont condition:: tensor(1.1805e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3045e-05, dtype=torch.float64)
secont condition:: tensor(1.3045e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8729e-05, dtype=torch.float64)
secont condition:: tensor(1.8729e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2432e-06, dtype=torch.float64)
secont condition:: tensor(8.2432e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5339e-05, dtype=torch.float64)
secont condition:: tensor(1.5339e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0961e-05, dtype=torch.float64)
secont condition:: tensor(1.0961e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0865e-05, dtype=torch.float64)
secont condition:: tensor(1.0865e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2809e-05, dtype=torch.float64)
secont condition:: tensor(1.2809e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.0221e-06, dtype=torch.float64)
secont condition:: tensor(9.0221e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2396e-05, dtype=torch.float64)
secont condition:: tensor(1.2396e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3654e-05, dtype=torch.float64)
secont condition:: tensor(1.3654e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1614e-05, dtype=torch.float64)
secont condition:: tensor(1.1614e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2914e-06, dtype=torch.float64)
secont condition:: tensor(9.2914e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 29.93467950820923
curr_diff: 0 tensor(5.0174e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3828e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.1785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0765e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8525e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0067, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0127, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0052, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0172, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235844
Test Avg. Loss: 0.000023, Accuracy: 0.939600
Train - Epoch 1, Batch: 0, Loss: 0.238786
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 2, Batch: 0, Loss: 0.162779
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 3, Batch: 0, Loss: 0.159307
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 4, Batch: 0, Loss: 0.156973
Test Avg. Loss: 0.000016, Accuracy: 0.951100
Train - Epoch 5, Batch: 0, Loss: 0.179778
Test Avg. Loss: 0.000065, Accuracy: 0.765800
Train - Epoch 6, Batch: 0, Loss: 0.670028
Test Avg. Loss: 0.000018, Accuracy: 0.953200
Train - Epoch 7, Batch: 0, Loss: 0.201767
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 8, Batch: 0, Loss: 0.163383
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 9, Batch: 0, Loss: 0.163120
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 10, Batch: 0, Loss: 0.160141
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 11, Batch: 0, Loss: 0.160639
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 12, Batch: 0, Loss: 0.154465
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 13, Batch: 0, Loss: 0.152307
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 14, Batch: 0, Loss: 0.154456
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 15, Batch: 0, Loss: 0.155447
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 16, Batch: 0, Loss: 0.160583
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 17, Batch: 0, Loss: 0.153329
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 18, Batch: 0, Loss: 0.154163
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 19, Batch: 0, Loss: 0.153027
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.150080
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 21, Batch: 0, Loss: 0.149664
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 22, Batch: 0, Loss: 0.154326
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.150088
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 24, Batch: 0, Loss: 0.153660
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.155436
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 26, Batch: 0, Loss: 0.152185
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.153520
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 28, Batch: 0, Loss: 0.152171
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 29, Batch: 0, Loss: 0.153666
Test Avg. Loss: 0.000014, Accuracy: 0.962400
training_time:: 170.96917033195496
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.16267967224121
time_baseline:: 117.22991871833801
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0098, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0047, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0130, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2353e-07, dtype=torch.float64)
secont condition:: tensor(3.2353e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2701e-07, dtype=torch.float64)
secont condition:: tensor(8.2701e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4882e-07, dtype=torch.float64)
secont condition:: tensor(8.4882e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3249e-07, dtype=torch.float64)
secont condition:: tensor(7.3249e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4776e-07, dtype=torch.float64)
secont condition:: tensor(6.4776e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7305e-08, dtype=torch.float64)
secont condition:: tensor(7.7305e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6411e-07, dtype=torch.float64)
secont condition:: tensor(1.6411e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9992e-08, dtype=torch.float64)
secont condition:: tensor(7.9992e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0041e-07, dtype=torch.float64)
secont condition:: tensor(1.0041e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1651e-07, dtype=torch.float64)
secont condition:: tensor(4.1651e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7070e-07, dtype=torch.float64)
secont condition:: tensor(2.7070e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0400e-07, dtype=torch.float64)
secont condition:: tensor(2.0400e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7647e-07, dtype=torch.float64)
secont condition:: tensor(1.7647e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4590e-07, dtype=torch.float64)
secont condition:: tensor(3.4590e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9827e-07, dtype=torch.float64)
secont condition:: tensor(2.9827e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4190e-06, dtype=torch.float64)
secont condition:: tensor(2.4190e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2963e-06, dtype=torch.float64)
secont condition:: tensor(3.2963e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1146e-06, dtype=torch.float64)
secont condition:: tensor(5.1146e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6756e-06, dtype=torch.float64)
secont condition:: tensor(6.6756e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4557e-05, dtype=torch.float64)
secont condition:: tensor(1.4557e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6690e-05, dtype=torch.float64)
secont condition:: tensor(3.6690e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2163e-05, dtype=torch.float64)
secont condition:: tensor(9.2163e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6196e-05, dtype=torch.float64)
secont condition:: tensor(3.6196e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.2643e-05, dtype=torch.float64)
secont condition:: tensor(8.2643e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2938e-05, dtype=torch.float64)
secont condition:: tensor(4.2938e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0631e-05, dtype=torch.float64)
secont condition:: tensor(5.0631e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7347e-05, dtype=torch.float64)
secont condition:: tensor(3.7347e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2055e-05, dtype=torch.float64)
secont condition:: tensor(2.2055e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0552e-05, dtype=torch.float64)
secont condition:: tensor(3.0552e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8378e-05, dtype=torch.float64)
secont condition:: tensor(2.8378e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1823e-05, dtype=torch.float64)
secont condition:: tensor(2.1823e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8355e-05, dtype=torch.float64)
secont condition:: tensor(2.8355e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8127e-05, dtype=torch.float64)
secont condition:: tensor(1.8127e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7395e-05, dtype=torch.float64)
secont condition:: tensor(1.7395e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9424e-05, dtype=torch.float64)
secont condition:: tensor(1.9424e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5886e-05, dtype=torch.float64)
secont condition:: tensor(1.5886e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2564e-05, dtype=torch.float64)
secont condition:: tensor(2.2564e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7338e-05, dtype=torch.float64)
secont condition:: tensor(1.7338e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5750e-05, dtype=torch.float64)
secont condition:: tensor(1.5750e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5618e-05, dtype=torch.float64)
secont condition:: tensor(1.5618e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9422e-05, dtype=torch.float64)
secont condition:: tensor(1.9422e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0080e-05, dtype=torch.float64)
secont condition:: tensor(1.0080e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0516e-05, dtype=torch.float64)
secont condition:: tensor(1.0516e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2089e-05, dtype=torch.float64)
secont condition:: tensor(1.2089e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1564e-05, dtype=torch.float64)
secont condition:: tensor(1.1564e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2004e-05, dtype=torch.float64)
secont condition:: tensor(1.2004e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2337e-05, dtype=torch.float64)
secont condition:: tensor(1.2337e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5285e-05, dtype=torch.float64)
secont condition:: tensor(1.5285e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2015e-05, dtype=torch.float64)
secont condition:: tensor(1.2015e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4082e-05, dtype=torch.float64)
secont condition:: tensor(1.4082e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8452e-06, dtype=torch.float64)
secont condition:: tensor(6.8452e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2069e-05, dtype=torch.float64)
secont condition:: tensor(1.2069e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4276e-05, dtype=torch.float64)
secont condition:: tensor(1.4276e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8968e-06, dtype=torch.float64)
secont condition:: tensor(8.8968e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4618e-06, dtype=torch.float64)
secont condition:: tensor(9.4618e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3865e-05, dtype=torch.float64)
secont condition:: tensor(1.3865e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3857e-05, dtype=torch.float64)
secont condition:: tensor(1.3857e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1431e-05, dtype=torch.float64)
secont condition:: tensor(1.1431e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3821e-06, dtype=torch.float64)
secont condition:: tensor(6.3821e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8785e-06, dtype=torch.float64)
secont condition:: tensor(9.8785e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3932e-06, dtype=torch.float64)
secont condition:: tensor(5.3932e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0949e-06, dtype=torch.float64)
secont condition:: tensor(9.0949e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7279e-06, dtype=torch.float64)
secont condition:: tensor(6.7279e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6104e-06, dtype=torch.float64)
secont condition:: tensor(6.6104e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8143e-06, dtype=torch.float64)
secont condition:: tensor(7.8143e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2545e-06, dtype=torch.float64)
secont condition:: tensor(7.2545e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2414e-06, dtype=torch.float64)
secont condition:: tensor(5.2414e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8502e-06, dtype=torch.float64)
secont condition:: tensor(5.8502e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6242e-06, dtype=torch.float64)
secont condition:: tensor(8.6242e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3894e-06, dtype=torch.float64)
secont condition:: tensor(5.3894e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3553e-06, dtype=torch.float64)
secont condition:: tensor(5.3553e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0851e-06, dtype=torch.float64)
secont condition:: tensor(4.0851e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7497e-06, dtype=torch.float64)
secont condition:: tensor(7.7497e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.19891381263733
curr_diff: 0 tensor(4.1340e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3613e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0363e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5187e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5259e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0099, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0048, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0132, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233876
Test Avg. Loss: 0.000023, Accuracy: 0.940400
Train - Epoch 1, Batch: 0, Loss: 0.251098
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.166978
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.160527
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.157976
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 5, Batch: 0, Loss: 0.163252
Test Avg. Loss: 0.000051, Accuracy: 0.819800
Train - Epoch 6, Batch: 0, Loss: 0.528523
Test Avg. Loss: 0.000023, Accuracy: 0.946100
Train - Epoch 7, Batch: 0, Loss: 0.255190
Test Avg. Loss: 0.000016, Accuracy: 0.953000
Train - Epoch 8, Batch: 0, Loss: 0.185387
Test Avg. Loss: 0.000015, Accuracy: 0.955600
Train - Epoch 9, Batch: 0, Loss: 0.168370
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 10, Batch: 0, Loss: 0.166232
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 11, Batch: 0, Loss: 0.158736
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 12, Batch: 0, Loss: 0.153133
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 13, Batch: 0, Loss: 0.161427
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 14, Batch: 0, Loss: 0.158677
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 15, Batch: 0, Loss: 0.155614
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 16, Batch: 0, Loss: 0.152592
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 17, Batch: 0, Loss: 0.154703
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 18, Batch: 0, Loss: 0.154799
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 19, Batch: 0, Loss: 0.156430
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 20, Batch: 0, Loss: 0.153305
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 21, Batch: 0, Loss: 0.150955
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 22, Batch: 0, Loss: 0.153630
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 23, Batch: 0, Loss: 0.152241
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 24, Batch: 0, Loss: 0.152123
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 25, Batch: 0, Loss: 0.157776
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 26, Batch: 0, Loss: 0.156857
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 27, Batch: 0, Loss: 0.155193
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 28, Batch: 0, Loss: 0.157432
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 29, Batch: 0, Loss: 0.152825
Test Avg. Loss: 0.000014, Accuracy: 0.960600
training_time:: 171.80573892593384
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.50200724601746
time_baseline:: 116.56857490539551
curr_diff: 0 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0106, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0222, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0118, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0095, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0296, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 12
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3571e-07, dtype=torch.float64)
secont condition:: tensor(2.3571e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0241e-07, dtype=torch.float64)
secont condition:: tensor(1.0241e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1559e-07, dtype=torch.float64)
secont condition:: tensor(1.1559e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0437e-07, dtype=torch.float64)
secont condition:: tensor(9.0437e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3371e-07, dtype=torch.float64)
secont condition:: tensor(3.3371e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1698e-08, dtype=torch.float64)
secont condition:: tensor(3.1698e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9908e-07, dtype=torch.float64)
secont condition:: tensor(1.9908e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7194e-08, dtype=torch.float64)
secont condition:: tensor(5.7194e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9789e-07, dtype=torch.float64)
secont condition:: tensor(1.9789e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7322e-08, dtype=torch.float64)
secont condition:: tensor(6.7322e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4558e-07, dtype=torch.float64)
secont condition:: tensor(4.4558e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2087e-07, dtype=torch.float64)
secont condition:: tensor(4.2087e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2374e-06, dtype=torch.float64)
secont condition:: tensor(1.2374e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0841e-06, dtype=torch.float64)
secont condition:: tensor(1.0841e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2800e-06, dtype=torch.float64)
secont condition:: tensor(1.2800e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2127e-06, dtype=torch.float64)
secont condition:: tensor(2.2127e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3145e-06, dtype=torch.float64)
secont condition:: tensor(3.3145e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6032e-06, dtype=torch.float64)
secont condition:: tensor(4.6032e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8326e-06, dtype=torch.float64)
secont condition:: tensor(8.8326e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-05, dtype=torch.float64)
secont condition:: tensor(1.7501e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9237e-05, dtype=torch.float64)
secont condition:: tensor(5.9237e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(-0.0021, dtype=torch.float64)
curr_secont condition:: tensor(0.0108, dtype=torch.float64)
secont condition:: tensor(0.0108, dtype=torch.float64)
curr_secont condition:: tensor(0.0060, dtype=torch.float64)
secont condition:: tensor(0.0060, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.2791e-05, dtype=torch.float64)
secont condition:: tensor(9.2791e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.4585e-05, dtype=torch.float64)
secont condition:: tensor(8.4585e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3853e-05, dtype=torch.float64)
secont condition:: tensor(8.3853e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.5799e-05, dtype=torch.float64)
secont condition:: tensor(8.5799e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.7003e-05, dtype=torch.float64)
secont condition:: tensor(7.7003e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.3028e-05, dtype=torch.float64)
secont condition:: tensor(7.3028e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9138e-05, dtype=torch.float64)
secont condition:: tensor(6.9138e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8732e-05, dtype=torch.float64)
secont condition:: tensor(6.8732e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8258e-05, dtype=torch.float64)
secont condition:: tensor(6.8258e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.6322e-05, dtype=torch.float64)
secont condition:: tensor(9.6322e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8022e-05, dtype=torch.float64)
secont condition:: tensor(6.8022e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7584e-05, dtype=torch.float64)
secont condition:: tensor(5.7584e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8841e-05, dtype=torch.float64)
secont condition:: tensor(5.8841e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.0890e-05, dtype=torch.float64)
secont condition:: tensor(6.0890e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7331e-05, dtype=torch.float64)
secont condition:: tensor(5.7331e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7083e-05, dtype=torch.float64)
secont condition:: tensor(4.7083e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5521e-05, dtype=torch.float64)
secont condition:: tensor(5.5521e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7304e-05, dtype=torch.float64)
secont condition:: tensor(5.7304e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5108e-05, dtype=torch.float64)
secont condition:: tensor(5.5108e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4758e-05, dtype=torch.float64)
secont condition:: tensor(3.4758e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2504e-05, dtype=torch.float64)
secont condition:: tensor(5.2504e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4053e-05, dtype=torch.float64)
secont condition:: tensor(5.4053e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5850e-05, dtype=torch.float64)
secont condition:: tensor(4.5850e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3667e-05, dtype=torch.float64)
secont condition:: tensor(3.3667e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7792e-05, dtype=torch.float64)
secont condition:: tensor(3.7792e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.5091e-05, dtype=torch.float64)
secont condition:: tensor(4.5091e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4464e-05, dtype=torch.float64)
secont condition:: tensor(2.4464e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4727e-05, dtype=torch.float64)
secont condition:: tensor(3.4727e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2529e-05, dtype=torch.float64)
secont condition:: tensor(4.2529e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2155e-05, dtype=torch.float64)
secont condition:: tensor(4.2155e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8360e-05, dtype=torch.float64)
secont condition:: tensor(3.8360e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6176e-05, dtype=torch.float64)
secont condition:: tensor(2.6176e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9551e-05, dtype=torch.float64)
secont condition:: tensor(2.9551e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4974e-05, dtype=torch.float64)
secont condition:: tensor(4.4974e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7790e-05, dtype=torch.float64)
secont condition:: tensor(2.7790e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8865e-05, dtype=torch.float64)
secont condition:: tensor(3.8865e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1267e-05, dtype=torch.float64)
secont condition:: tensor(2.1267e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3634e-05, dtype=torch.float64)
secont condition:: tensor(2.3634e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3695e-05, dtype=torch.float64)
secont condition:: tensor(4.3695e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8649e-05, dtype=torch.float64)
secont condition:: tensor(2.8649e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6356e-05, dtype=torch.float64)
secont condition:: tensor(2.6356e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6826e-05, dtype=torch.float64)
secont condition:: tensor(2.6826e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5806e-05, dtype=torch.float64)
secont condition:: tensor(2.5806e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9440e-05, dtype=torch.float64)
secont condition:: tensor(1.9440e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6229e-05, dtype=torch.float64)
secont condition:: tensor(2.6229e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2173e-05, dtype=torch.float64)
secont condition:: tensor(3.2173e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.171048402786255
curr_diff: 0 tensor(9.0960e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1142e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0642e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8950e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0109, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0224, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0119, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0096, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0300, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
deletion rate:: 0.0005
random set 1
python3 generate_rand_ids 0.0005  MNIST
tensor([39936, 50690, 40584, 13193, 57356, 43020, 36755, 11286, 28060, 17827,
        46887, 53936,    49, 52787, 54197, 55350, 47671, 59577, 47680, 27076,
        17871,  8533, 59868, 45793, 24936, 26344,  8051, 56180, 12158, 50303])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233448
Test Avg. Loss: 0.000025, Accuracy: 0.935000
Train - Epoch 1, Batch: 0, Loss: 0.261231
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 2, Batch: 0, Loss: 0.159542
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 3, Batch: 0, Loss: 0.165067
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 4, Batch: 0, Loss: 0.152607
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 5, Batch: 0, Loss: 0.163256
Test Avg. Loss: 0.000051, Accuracy: 0.820800
Train - Epoch 6, Batch: 0, Loss: 0.528544
Test Avg. Loss: 0.000020, Accuracy: 0.950200
Train - Epoch 7, Batch: 0, Loss: 0.217873
Test Avg. Loss: 0.000015, Accuracy: 0.955200
Train - Epoch 8, Batch: 0, Loss: 0.170941
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 9, Batch: 0, Loss: 0.161219
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 10, Batch: 0, Loss: 0.158838
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 11, Batch: 0, Loss: 0.157896
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 12, Batch: 0, Loss: 0.162001
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.166082
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.153249
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.158222
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.158685
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 17, Batch: 0, Loss: 0.156445
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.151507
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.155108
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.153352
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 21, Batch: 0, Loss: 0.155239
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.157827
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.154356
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.152802
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.154338
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.151697
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.154363
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.154583
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.151235
Test Avg. Loss: 0.000014, Accuracy: 0.962100
training_time:: 171.40299367904663
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.20043659210205
time_baseline:: 116.2673065662384
curr_diff: 0 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0100, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7751e-07, dtype=torch.float64)
secont condition:: tensor(2.7751e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0976e-07, dtype=torch.float64)
secont condition:: tensor(6.0976e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3164e-06, dtype=torch.float64)
secont condition:: tensor(2.3164e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4947e-06, dtype=torch.float64)
secont condition:: tensor(2.4947e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2157e-07, dtype=torch.float64)
secont condition:: tensor(9.2157e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6566e-07, dtype=torch.float64)
secont condition:: tensor(4.6566e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1611e-07, dtype=torch.float64)
secont condition:: tensor(7.1611e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5864e-06, dtype=torch.float64)
secont condition:: tensor(1.5864e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3682e-07, dtype=torch.float64)
secont condition:: tensor(3.3682e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6115e-07, dtype=torch.float64)
secont condition:: tensor(1.6115e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3017e-07, dtype=torch.float64)
secont condition:: tensor(2.3017e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1761e-06, dtype=torch.float64)
secont condition:: tensor(1.1761e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2345e-06, dtype=torch.float64)
secont condition:: tensor(1.2345e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6647e-07, dtype=torch.float64)
secont condition:: tensor(6.6647e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8466e-07, dtype=torch.float64)
secont condition:: tensor(4.8466e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2464e-06, dtype=torch.float64)
secont condition:: tensor(1.2464e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6635e-07, dtype=torch.float64)
secont condition:: tensor(9.6635e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3093e-06, dtype=torch.float64)
secont condition:: tensor(1.3093e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2382e-06, dtype=torch.float64)
secont condition:: tensor(5.2382e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3594e-06, dtype=torch.float64)
secont condition:: tensor(7.3594e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5771e-05, dtype=torch.float64)
secont condition:: tensor(1.5771e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4056e-05, dtype=torch.float64)
secont condition:: tensor(4.4056e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2278e-05, dtype=torch.float64)
secont condition:: tensor(9.2278e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2719e-05, dtype=torch.float64)
secont condition:: tensor(4.2719e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1620e-05, dtype=torch.float64)
secont condition:: tensor(3.1620e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3962e-05, dtype=torch.float64)
secont condition:: tensor(2.3962e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4770e-05, dtype=torch.float64)
secont condition:: tensor(1.4770e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9504e-05, dtype=torch.float64)
secont condition:: tensor(1.9504e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3513e-05, dtype=torch.float64)
secont condition:: tensor(1.3513e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3342e-05, dtype=torch.float64)
secont condition:: tensor(1.3342e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0242e-05, dtype=torch.float64)
secont condition:: tensor(1.0242e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.9881e-06, dtype=torch.float64)
secont condition:: tensor(8.9881e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6608e-06, dtype=torch.float64)
secont condition:: tensor(9.6608e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2520e-06, dtype=torch.float64)
secont condition:: tensor(9.2520e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4718e-06, dtype=torch.float64)
secont condition:: tensor(7.4718e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2596e-05, dtype=torch.float64)
secont condition:: tensor(1.2596e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0035e-05, dtype=torch.float64)
secont condition:: tensor(1.0035e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4168e-05, dtype=torch.float64)
secont condition:: tensor(1.4168e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0352e-05, dtype=torch.float64)
secont condition:: tensor(1.0352e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1354e-06, dtype=torch.float64)
secont condition:: tensor(7.1354e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2734e-06, dtype=torch.float64)
secont condition:: tensor(8.2734e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0013e-06, dtype=torch.float64)
secont condition:: tensor(7.0013e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8257e-06, dtype=torch.float64)
secont condition:: tensor(5.8257e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8014e-06, dtype=torch.float64)
secont condition:: tensor(8.8014e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1552e-06, dtype=torch.float64)
secont condition:: tensor(5.1552e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8976e-06, dtype=torch.float64)
secont condition:: tensor(8.8976e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3143e-06, dtype=torch.float64)
secont condition:: tensor(6.3143e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7263e-06, dtype=torch.float64)
secont condition:: tensor(7.7263e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0582e-06, dtype=torch.float64)
secont condition:: tensor(6.0582e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9825e-06, dtype=torch.float64)
secont condition:: tensor(3.9825e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9083e-06, dtype=torch.float64)
secont condition:: tensor(5.9083e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1465e-06, dtype=torch.float64)
secont condition:: tensor(3.1465e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0606e-06, dtype=torch.float64)
secont condition:: tensor(8.0606e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9406e-06, dtype=torch.float64)
secont condition:: tensor(3.9406e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0527e-06, dtype=torch.float64)
secont condition:: tensor(6.0527e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3883e-06, dtype=torch.float64)
secont condition:: tensor(7.3883e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3856e-06, dtype=torch.float64)
secont condition:: tensor(8.3856e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6202e-06, dtype=torch.float64)
secont condition:: tensor(5.6202e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1380e-06, dtype=torch.float64)
secont condition:: tensor(4.1380e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9963e-06, dtype=torch.float64)
secont condition:: tensor(2.9963e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0482e-06, dtype=torch.float64)
secont condition:: tensor(3.0482e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1412e-06, dtype=torch.float64)
secont condition:: tensor(4.1412e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8867e-06, dtype=torch.float64)
secont condition:: tensor(3.8867e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2883e-06, dtype=torch.float64)
secont condition:: tensor(3.2883e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8468e-06, dtype=torch.float64)
secont condition:: tensor(3.8468e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6713e-06, dtype=torch.float64)
secont condition:: tensor(2.6713e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0260e-06, dtype=torch.float64)
secont condition:: tensor(3.0260e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6205e-06, dtype=torch.float64)
secont condition:: tensor(3.6205e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7488e-06, dtype=torch.float64)
secont condition:: tensor(1.7488e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9305e-06, dtype=torch.float64)
secont condition:: tensor(3.9305e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8257e-06, dtype=torch.float64)
secont condition:: tensor(2.8257e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0732e-06, dtype=torch.float64)
secont condition:: tensor(4.0732e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3788e-06, dtype=torch.float64)
secont condition:: tensor(3.3788e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0998e-06, dtype=torch.float64)
secont condition:: tensor(2.0998e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.113571405410767
curr_diff: 0 tensor(5.8086e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5527e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4310e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4981e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8140e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0075, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0041, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0102, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.232175
Test Avg. Loss: 0.000023, Accuracy: 0.942000
Train - Epoch 1, Batch: 0, Loss: 0.244984
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.170114
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.161275
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.154155
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 5, Batch: 0, Loss: 0.154517
Test Avg. Loss: 0.000016, Accuracy: 0.952800
Train - Epoch 6, Batch: 0, Loss: 0.173711
Test Avg. Loss: 0.000174, Accuracy: 0.587400
Train - Epoch 7, Batch: 0, Loss: 1.763124
Test Avg. Loss: 0.000052, Accuracy: 0.860200
Train - Epoch 8, Batch: 0, Loss: 0.533467
Test Avg. Loss: 0.000023, Accuracy: 0.943100
Train - Epoch 9, Batch: 0, Loss: 0.246716
Test Avg. Loss: 0.000020, Accuracy: 0.946900
Train - Epoch 10, Batch: 0, Loss: 0.223916
Test Avg. Loss: 0.000018, Accuracy: 0.948900
Train - Epoch 11, Batch: 0, Loss: 0.199908
Test Avg. Loss: 0.000018, Accuracy: 0.950500
Train - Epoch 12, Batch: 0, Loss: 0.193857
Test Avg. Loss: 0.000017, Accuracy: 0.951700
Train - Epoch 13, Batch: 0, Loss: 0.189863
Test Avg. Loss: 0.000016, Accuracy: 0.953000
Train - Epoch 14, Batch: 0, Loss: 0.184299
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 15, Batch: 0, Loss: 0.187692
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 16, Batch: 0, Loss: 0.174181
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 17, Batch: 0, Loss: 0.171573
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 18, Batch: 0, Loss: 0.167013
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 19, Batch: 0, Loss: 0.174519
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 20, Batch: 0, Loss: 0.170003
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 21, Batch: 0, Loss: 0.166411
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 22, Batch: 0, Loss: 0.164055
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 23, Batch: 0, Loss: 0.163398
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 24, Batch: 0, Loss: 0.170188
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 25, Batch: 0, Loss: 0.166990
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 26, Batch: 0, Loss: 0.164589
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 27, Batch: 0, Loss: 0.160651
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 28, Batch: 0, Loss: 0.162877
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 29, Batch: 0, Loss: 0.159095
Test Avg. Loss: 0.000015, Accuracy: 0.958800
training_time:: 168.69818758964539
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.91191077232361
time_baseline:: 115.97622108459473
curr_diff: 0 tensor(0.0410, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.2902, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.5183, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0334, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.2717, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0588, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1950, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0969, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.6932, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9933, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0195e-07, dtype=torch.float64)
secont condition:: tensor(8.0195e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0573e-06, dtype=torch.float64)
secont condition:: tensor(1.0573e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6897e-06, dtype=torch.float64)
secont condition:: tensor(1.6897e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7240e-06, dtype=torch.float64)
secont condition:: tensor(1.7240e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7324e-07, dtype=torch.float64)
secont condition:: tensor(5.7324e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0906e-07, dtype=torch.float64)
secont condition:: tensor(3.0906e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5292e-07, dtype=torch.float64)
secont condition:: tensor(4.5292e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0906e-07, dtype=torch.float64)
secont condition:: tensor(2.0906e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9165e-07, dtype=torch.float64)
secont condition:: tensor(5.9165e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1537e-07, dtype=torch.float64)
secont condition:: tensor(2.1537e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6214e-07, dtype=torch.float64)
secont condition:: tensor(2.6214e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0730e-07, dtype=torch.float64)
secont condition:: tensor(7.0730e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9045e-07, dtype=torch.float64)
secont condition:: tensor(7.9045e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4671e-07, dtype=torch.float64)
secont condition:: tensor(6.4671e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7158e-06, dtype=torch.float64)
secont condition:: tensor(1.7158e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3937e-06, dtype=torch.float64)
secont condition:: tensor(5.3937e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.4476e-06, dtype=torch.float64)
secont condition:: tensor(9.4476e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6758e-05, dtype=torch.float64)
secont condition:: tensor(1.6758e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5876e-05, dtype=torch.float64)
secont condition:: tensor(3.5876e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5608e-05, dtype=torch.float64)
secont condition:: tensor(9.5608e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0035, dtype=torch.float64)
secont condition:: tensor(0.0035, dtype=torch.float64)
curr_secont condition:: tensor(0.0115, dtype=torch.float64)
secont condition:: tensor(0.0115, dtype=torch.float64)
curr_secont condition:: tensor(0.0526, dtype=torch.float64)
secont condition:: tensor(0.0526, dtype=torch.float64)
curr_secont condition:: tensor(0.2055, dtype=torch.float64)
secont condition:: tensor(0.2055, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0338, dtype=torch.float64)
curr_secont condition:: tensor(0.6503, dtype=torch.float64)
secont condition:: tensor(0.6503, dtype=torch.float64)
curr_secont condition:: tensor(0.2739, dtype=torch.float64)
secont condition:: tensor(0.2739, dtype=torch.float64)
curr_secont condition:: tensor(0.2256, dtype=torch.float64)
secont condition:: tensor(0.2256, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.1648, dtype=torch.float64)
secont condition:: tensor(0.1648, dtype=torch.float64)
curr_secont condition:: tensor(0.1048, dtype=torch.float64)
secont condition:: tensor(0.1048, dtype=torch.float64)
curr_secont condition:: tensor(0.0844, dtype=torch.float64)
secont condition:: tensor(0.0844, dtype=torch.float64)
curr_secont condition:: tensor(0.0343, dtype=torch.float64)
secont condition:: tensor(0.0343, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0171, dtype=torch.float64)
secont condition:: tensor(0.0171, dtype=torch.float64)
curr_secont condition:: tensor(0.0044, dtype=torch.float64)
secont condition:: tensor(0.0044, dtype=torch.float64)
curr_secont condition:: tensor(0.0125, dtype=torch.float64)
secont condition:: tensor(0.0125, dtype=torch.float64)
curr_secont condition:: tensor(0.0108, dtype=torch.float64)
secont condition:: tensor(0.0108, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0176, dtype=torch.float64)
secont condition:: tensor(0.0176, dtype=torch.float64)
curr_secont condition:: tensor(-0.0047, dtype=torch.float64)
curr_secont condition:: tensor(0.0036, dtype=torch.float64)
secont condition:: tensor(0.0036, dtype=torch.float64)
curr_secont condition:: tensor(0.0159, dtype=torch.float64)
secont condition:: tensor(0.0159, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0075, dtype=torch.float64)
secont condition:: tensor(0.0075, dtype=torch.float64)
curr_secont condition:: tensor(0.0112, dtype=torch.float64)
secont condition:: tensor(0.0112, dtype=torch.float64)
curr_secont condition:: tensor(0.0089, dtype=torch.float64)
secont condition:: tensor(0.0089, dtype=torch.float64)
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0154, dtype=torch.float64)
secont condition:: tensor(0.0154, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0090, dtype=torch.float64)
secont condition:: tensor(0.0090, dtype=torch.float64)
curr_secont condition:: tensor(0.0118, dtype=torch.float64)
secont condition:: tensor(0.0118, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0043, dtype=torch.float64)
secont condition:: tensor(0.0043, dtype=torch.float64)
curr_secont condition:: tensor(0.0108, dtype=torch.float64)
secont condition:: tensor(0.0108, dtype=torch.float64)
curr_secont condition:: tensor(0.0063, dtype=torch.float64)
secont condition:: tensor(0.0063, dtype=torch.float64)
curr_secont condition:: tensor(0.0105, dtype=torch.float64)
secont condition:: tensor(0.0105, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0065, dtype=torch.float64)
secont condition:: tensor(0.0065, dtype=torch.float64)
curr_secont condition:: tensor(0.0106, dtype=torch.float64)
secont condition:: tensor(0.0106, dtype=torch.float64)
curr_secont condition:: tensor(0.0091, dtype=torch.float64)
secont condition:: tensor(0.0091, dtype=torch.float64)
curr_secont condition:: tensor(-0.0063, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0021, dtype=torch.float64)
secont condition:: tensor(0.0021, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0101, dtype=torch.float64)
secont condition:: tensor(0.0101, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0079, dtype=torch.float64)
secont condition:: tensor(0.0079, dtype=torch.float64)
curr_secont condition:: tensor(0.0073, dtype=torch.float64)
secont condition:: tensor(0.0073, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0120, dtype=torch.float64)
secont condition:: tensor(0.0120, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0035, dtype=torch.float64)
secont condition:: tensor(0.0035, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0071, dtype=torch.float64)
secont condition:: tensor(0.0071, dtype=torch.float64)
curr_secont condition:: tensor(0.0148, dtype=torch.float64)
secont condition:: tensor(0.0148, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0075, dtype=torch.float64)
secont condition:: tensor(0.0075, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0069, dtype=torch.float64)
secont condition:: tensor(0.0069, dtype=torch.float64)
curr_secont condition:: tensor(0.0096, dtype=torch.float64)
secont condition:: tensor(0.0096, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0120, dtype=torch.float64)
secont condition:: tensor(0.0120, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7323e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0181, dtype=torch.float64)
secont condition:: tensor(0.0181, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0062, dtype=torch.float64)
secont condition:: tensor(0.0062, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0087, dtype=torch.float64)
secont condition:: tensor(0.0087, dtype=torch.float64)
curr_secont condition:: tensor(0.0118, dtype=torch.float64)
secont condition:: tensor(0.0118, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0065, dtype=torch.float64)
secont condition:: tensor(0.0065, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.44448709487915
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0091, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0164, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0078, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0047, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0209, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0407, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0064, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.2969, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0142, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.5240, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0337, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.2738, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0592, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1974, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0976, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.7020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9931, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.229855
Test Avg. Loss: 0.000026, Accuracy: 0.932600
Train - Epoch 1, Batch: 0, Loss: 0.289498
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.165029
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 3, Batch: 0, Loss: 0.156417
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.161294
Test Avg. Loss: 0.000017, Accuracy: 0.949400
Train - Epoch 5, Batch: 0, Loss: 0.190017
Test Avg. Loss: 0.000067, Accuracy: 0.753800
Train - Epoch 6, Batch: 0, Loss: 0.687072
Test Avg. Loss: 0.000016, Accuracy: 0.956200
Train - Epoch 7, Batch: 0, Loss: 0.178387
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 8, Batch: 0, Loss: 0.164239
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 9, Batch: 0, Loss: 0.158323
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 10, Batch: 0, Loss: 0.151957
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 11, Batch: 0, Loss: 0.156810
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 12, Batch: 0, Loss: 0.160595
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 13, Batch: 0, Loss: 0.155788
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 14, Batch: 0, Loss: 0.159671
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.150310
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 16, Batch: 0, Loss: 0.158030
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 17, Batch: 0, Loss: 0.156134
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.154866
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.151735
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 20, Batch: 0, Loss: 0.155203
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 21, Batch: 0, Loss: 0.158172
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 22, Batch: 0, Loss: 0.154559
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 23, Batch: 0, Loss: 0.156693
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 24, Batch: 0, Loss: 0.150175
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 25, Batch: 0, Loss: 0.153324
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 26, Batch: 0, Loss: 0.148533
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.155678
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.153150
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.151555
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 168.54289960861206
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.96397876739502
time_baseline:: 115.03000164031982
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.2317e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4757e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1176e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.5542e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.8724e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6409e-07, dtype=torch.float64)
secont condition:: tensor(2.6409e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2405e-06, dtype=torch.float64)
secont condition:: tensor(1.2405e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4507e-06, dtype=torch.float64)
secont condition:: tensor(1.4507e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2424e-06, dtype=torch.float64)
secont condition:: tensor(1.2424e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1102e-07, dtype=torch.float64)
secont condition:: tensor(7.1102e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1463e-07, dtype=torch.float64)
secont condition:: tensor(4.1463e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9884e-07, dtype=torch.float64)
secont condition:: tensor(1.9884e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1489e-07, dtype=torch.float64)
secont condition:: tensor(3.1489e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5275e-06, dtype=torch.float64)
secont condition:: tensor(5.5275e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7214e-07, dtype=torch.float64)
secont condition:: tensor(2.7214e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3413e-07, dtype=torch.float64)
secont condition:: tensor(4.3413e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0538e-07, dtype=torch.float64)
secont condition:: tensor(1.0538e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2174e-07, dtype=torch.float64)
secont condition:: tensor(2.2174e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5801e-07, dtype=torch.float64)
secont condition:: tensor(9.5801e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1873e-07, dtype=torch.float64)
secont condition:: tensor(5.1873e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6687e-06, dtype=torch.float64)
secont condition:: tensor(4.6687e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3080e-06, dtype=torch.float64)
secont condition:: tensor(1.3080e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8107e-06, dtype=torch.float64)
secont condition:: tensor(2.8107e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7005e-06, dtype=torch.float64)
secont condition:: tensor(4.7005e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7192e-06, dtype=torch.float64)
secont condition:: tensor(3.7192e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6641e-06, dtype=torch.float64)
secont condition:: tensor(2.6641e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3653e-06, dtype=torch.float64)
secont condition:: tensor(3.3653e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9291e-06, dtype=torch.float64)
secont condition:: tensor(3.9291e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9977e-05, dtype=torch.float64)
secont condition:: tensor(2.9977e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8857e-05, dtype=torch.float64)
secont condition:: tensor(2.8857e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0852e-05, dtype=torch.float64)
secont condition:: tensor(1.0852e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5106e-06, dtype=torch.float64)
secont condition:: tensor(2.5106e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9253e-06, dtype=torch.float64)
secont condition:: tensor(1.9253e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0048e-06, dtype=torch.float64)
secont condition:: tensor(3.0048e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5322e-06, dtype=torch.float64)
secont condition:: tensor(1.5322e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5434e-07, dtype=torch.float64)
secont condition:: tensor(6.5434e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5484e-07, dtype=torch.float64)
secont condition:: tensor(7.5484e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2369e-07, dtype=torch.float64)
secont condition:: tensor(6.2369e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4511e-07, dtype=torch.float64)
secont condition:: tensor(7.4511e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3628e-07, dtype=torch.float64)
secont condition:: tensor(6.3628e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8560e-06, dtype=torch.float64)
secont condition:: tensor(2.8560e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8320e-07, dtype=torch.float64)
secont condition:: tensor(6.8320e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5661e-07, dtype=torch.float64)
secont condition:: tensor(5.5661e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5404e-07, dtype=torch.float64)
secont condition:: tensor(8.5404e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5845e-07, dtype=torch.float64)
secont condition:: tensor(8.5845e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6693e-07, dtype=torch.float64)
secont condition:: tensor(4.6693e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4273e-07, dtype=torch.float64)
secont condition:: tensor(4.4273e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1456e-06, dtype=torch.float64)
secont condition:: tensor(2.1456e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4105e-06, dtype=torch.float64)
secont condition:: tensor(1.4105e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3493e-06, dtype=torch.float64)
secont condition:: tensor(7.3493e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3748e-07, dtype=torch.float64)
secont condition:: tensor(5.3748e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4869e-07, dtype=torch.float64)
secont condition:: tensor(5.4869e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8017e-07, dtype=torch.float64)
secont condition:: tensor(5.8017e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2695e-07, dtype=torch.float64)
secont condition:: tensor(4.2695e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0705e-06, dtype=torch.float64)
secont condition:: tensor(2.0705e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0983e-07, dtype=torch.float64)
secont condition:: tensor(5.0983e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8138e-07, dtype=torch.float64)
secont condition:: tensor(5.8138e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7801e-07, dtype=torch.float64)
secont condition:: tensor(4.7801e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8121e-07, dtype=torch.float64)
secont condition:: tensor(2.8121e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5243e-07, dtype=torch.float64)
secont condition:: tensor(4.5243e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0703e-07, dtype=torch.float64)
secont condition:: tensor(9.0703e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5207e-07, dtype=torch.float64)
secont condition:: tensor(7.5207e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4466e-06, dtype=torch.float64)
secont condition:: tensor(1.4466e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8425e-07, dtype=torch.float64)
secont condition:: tensor(1.8425e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3241e-06, dtype=torch.float64)
secont condition:: tensor(8.3241e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0757e-06, dtype=torch.float64)
secont condition:: tensor(1.0757e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1103e-06, dtype=torch.float64)
secont condition:: tensor(1.1103e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9840e-06, dtype=torch.float64)
secont condition:: tensor(1.9840e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0102e-07, dtype=torch.float64)
secont condition:: tensor(6.0102e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6646e-07, dtype=torch.float64)
secont condition:: tensor(7.6646e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6448e-07, dtype=torch.float64)
secont condition:: tensor(6.6448e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1495e-07, dtype=torch.float64)
secont condition:: tensor(7.1495e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5081e-07, dtype=torch.float64)
secont condition:: tensor(5.5081e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8052e-07, dtype=torch.float64)
secont condition:: tensor(6.8052e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1093e-07, dtype=torch.float64)
secont condition:: tensor(6.1093e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1584e-07, dtype=torch.float64)
secont condition:: tensor(7.1584e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6517e-07, dtype=torch.float64)
secont condition:: tensor(5.6517e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9056e-07, dtype=torch.float64)
secont condition:: tensor(4.9056e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5003e-07, dtype=torch.float64)
secont condition:: tensor(5.5003e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6858e-07, dtype=torch.float64)
secont condition:: tensor(4.6858e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7288e-07, dtype=torch.float64)
secont condition:: tensor(5.7288e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0971e-07, dtype=torch.float64)
secont condition:: tensor(6.0971e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5024e-07, dtype=torch.float64)
secont condition:: tensor(4.5024e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.577342987060547
curr_diff: 0 tensor(2.4849e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1135e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8618e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.7037e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.3420e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.7569e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5460e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9566e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1976e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.5362e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.7552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0028, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236515
Test Avg. Loss: 0.000025, Accuracy: 0.938900
Train - Epoch 1, Batch: 0, Loss: 0.271645
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 2, Batch: 0, Loss: 0.172982
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 3, Batch: 0, Loss: 0.158308
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 4, Batch: 0, Loss: 0.156982
Test Avg. Loss: 0.000015, Accuracy: 0.958700
Train - Epoch 5, Batch: 0, Loss: 0.166453
Test Avg. Loss: 0.000033, Accuracy: 0.892000
Train - Epoch 6, Batch: 0, Loss: 0.351078
Test Avg. Loss: 0.000046, Accuracy: 0.919400
Train - Epoch 7, Batch: 0, Loss: 0.477402
Test Avg. Loss: 0.000018, Accuracy: 0.952300
Train - Epoch 8, Batch: 0, Loss: 0.198248
Test Avg. Loss: 0.000016, Accuracy: 0.955200
Train - Epoch 9, Batch: 0, Loss: 0.175536
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 10, Batch: 0, Loss: 0.173659
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 11, Batch: 0, Loss: 0.158667
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 12, Batch: 0, Loss: 0.166458
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 13, Batch: 0, Loss: 0.166931
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 14, Batch: 0, Loss: 0.161736
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 15, Batch: 0, Loss: 0.155282
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.154138
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 17, Batch: 0, Loss: 0.156728
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 18, Batch: 0, Loss: 0.155323
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.158352
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.157303
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.160568
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 22, Batch: 0, Loss: 0.157832
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 23, Batch: 0, Loss: 0.154892
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 24, Batch: 0, Loss: 0.154469
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.153559
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 26, Batch: 0, Loss: 0.151552
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.153852
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.155523
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 29, Batch: 0, Loss: 0.160026
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 168.90453362464905
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.34980082511902
time_baseline:: 114.41490125656128
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0085, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0210, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0107, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0267, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3167e-07, dtype=torch.float64)
secont condition:: tensor(3.3167e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5747e-06, dtype=torch.float64)
secont condition:: tensor(2.5747e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1534e-06, dtype=torch.float64)
secont condition:: tensor(1.1534e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1147e-06, dtype=torch.float64)
secont condition:: tensor(7.1147e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0040e-06, dtype=torch.float64)
secont condition:: tensor(2.0040e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0508e-07, dtype=torch.float64)
secont condition:: tensor(7.0508e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3861e-07, dtype=torch.float64)
secont condition:: tensor(3.3861e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6148e-07, dtype=torch.float64)
secont condition:: tensor(6.6148e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7163e-07, dtype=torch.float64)
secont condition:: tensor(7.7163e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8443e-07, dtype=torch.float64)
secont condition:: tensor(8.8443e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4461e-07, dtype=torch.float64)
secont condition:: tensor(4.4461e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4190e-07, dtype=torch.float64)
secont condition:: tensor(8.4190e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0015e-06, dtype=torch.float64)
secont condition:: tensor(1.0015e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5153e-07, dtype=torch.float64)
secont condition:: tensor(9.5153e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6725e-07, dtype=torch.float64)
secont condition:: tensor(6.6725e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4130e-06, dtype=torch.float64)
secont condition:: tensor(2.4130e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3497e-06, dtype=torch.float64)
secont condition:: tensor(2.3497e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6926e-06, dtype=torch.float64)
secont condition:: tensor(5.6926e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2528e-05, dtype=torch.float64)
secont condition:: tensor(1.2528e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5432e-05, dtype=torch.float64)
secont condition:: tensor(2.5432e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4978e-05, dtype=torch.float64)
secont condition:: tensor(4.4978e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(5.0575e-06, dtype=torch.float64)
secont condition:: tensor(5.0575e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
curr_secont condition:: tensor(0.0030, dtype=torch.float64)
secont condition:: tensor(0.0030, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6427e-05, dtype=torch.float64)
secont condition:: tensor(4.6427e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9581e-05, dtype=torch.float64)
secont condition:: tensor(4.9581e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4242e-05, dtype=torch.float64)
secont condition:: tensor(4.4242e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6415e-05, dtype=torch.float64)
secont condition:: tensor(4.6415e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7235e-05, dtype=torch.float64)
secont condition:: tensor(5.7235e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3111e-05, dtype=torch.float64)
secont condition:: tensor(5.3111e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4443e-05, dtype=torch.float64)
secont condition:: tensor(4.4443e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3439e-05, dtype=torch.float64)
secont condition:: tensor(3.3439e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7562e-05, dtype=torch.float64)
secont condition:: tensor(5.7562e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2309e-05, dtype=torch.float64)
secont condition:: tensor(5.2309e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8522e-05, dtype=torch.float64)
secont condition:: tensor(1.8522e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5711e-05, dtype=torch.float64)
secont condition:: tensor(3.5711e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5180e-05, dtype=torch.float64)
secont condition:: tensor(3.5180e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3636e-05, dtype=torch.float64)
secont condition:: tensor(5.3636e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6176e-05, dtype=torch.float64)
secont condition:: tensor(4.6176e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8979e-05, dtype=torch.float64)
secont condition:: tensor(3.8979e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7237e-05, dtype=torch.float64)
secont condition:: tensor(3.7237e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3598e-05, dtype=torch.float64)
secont condition:: tensor(4.3598e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6890e-05, dtype=torch.float64)
secont condition:: tensor(3.6890e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1463e-05, dtype=torch.float64)
secont condition:: tensor(4.1463e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1172e-05, dtype=torch.float64)
secont condition:: tensor(3.1172e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2828e-05, dtype=torch.float64)
secont condition:: tensor(3.2828e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9012e-05, dtype=torch.float64)
secont condition:: tensor(1.9012e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1053e-05, dtype=torch.float64)
secont condition:: tensor(3.1053e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9674e-05, dtype=torch.float64)
secont condition:: tensor(1.9674e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7765e-05, dtype=torch.float64)
secont condition:: tensor(3.7765e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2541e-05, dtype=torch.float64)
secont condition:: tensor(3.2541e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9309e-05, dtype=torch.float64)
secont condition:: tensor(2.9309e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2263e-05, dtype=torch.float64)
secont condition:: tensor(2.2263e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2910e-05, dtype=torch.float64)
secont condition:: tensor(3.2910e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8194e-05, dtype=torch.float64)
secont condition:: tensor(3.8194e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2864e-05, dtype=torch.float64)
secont condition:: tensor(5.2864e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6735e-05, dtype=torch.float64)
secont condition:: tensor(2.6735e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5238e-05, dtype=torch.float64)
secont condition:: tensor(2.5238e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0965e-05, dtype=torch.float64)
secont condition:: tensor(2.0965e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4451e-05, dtype=torch.float64)
secont condition:: tensor(3.4451e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4060e-05, dtype=torch.float64)
secont condition:: tensor(2.4060e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1935e-05, dtype=torch.float64)
secont condition:: tensor(2.1935e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0948e-05, dtype=torch.float64)
secont condition:: tensor(2.0948e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6041e-05, dtype=torch.float64)
secont condition:: tensor(1.6041e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9001e-05, dtype=torch.float64)
secont condition:: tensor(1.9001e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4643e-05, dtype=torch.float64)
secont condition:: tensor(1.4643e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9218e-05, dtype=torch.float64)
secont condition:: tensor(1.9218e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3995e-05, dtype=torch.float64)
secont condition:: tensor(1.3995e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1797e-05, dtype=torch.float64)
secont condition:: tensor(1.1797e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9952e-05, dtype=torch.float64)
secont condition:: tensor(1.9952e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4133e-05, dtype=torch.float64)
secont condition:: tensor(1.4133e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8146e-05, dtype=torch.float64)
secont condition:: tensor(1.8146e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.004866361618042
curr_diff: 0 tensor(6.4450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1301e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3308e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4505e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6710e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0085, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0210, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0107, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0082, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0267, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234340
Test Avg. Loss: 0.000024, Accuracy: 0.939700
Train - Epoch 1, Batch: 0, Loss: 0.255538
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 2, Batch: 0, Loss: 0.162018
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 3, Batch: 0, Loss: 0.163391
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 4, Batch: 0, Loss: 0.163902
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 5, Batch: 0, Loss: 0.165703
Test Avg. Loss: 0.000019, Accuracy: 0.942600
Train - Epoch 6, Batch: 0, Loss: 0.209425
Test Avg. Loss: 0.000054, Accuracy: 0.814400
Train - Epoch 7, Batch: 0, Loss: 0.563817
Test Avg. Loss: 0.000017, Accuracy: 0.954900
Train - Epoch 8, Batch: 0, Loss: 0.186308
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 9, Batch: 0, Loss: 0.161272
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 10, Batch: 0, Loss: 0.164607
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 11, Batch: 0, Loss: 0.157510
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 12, Batch: 0, Loss: 0.158572
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 13, Batch: 0, Loss: 0.160313
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 14, Batch: 0, Loss: 0.152378
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.155574
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 16, Batch: 0, Loss: 0.155095
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 17, Batch: 0, Loss: 0.149869
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 18, Batch: 0, Loss: 0.155845
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.153620
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 20, Batch: 0, Loss: 0.145817
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.155908
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.150294
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.151904
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.150767
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.154280
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 26, Batch: 0, Loss: 0.148905
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.155643
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 28, Batch: 0, Loss: 0.155085
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.153987
Test Avg. Loss: 0.000014, Accuracy: 0.962100
training_time:: 170.36753940582275
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.58449816703796
time_baseline:: 116.65102124214172
curr_diff: 0 tensor(0.0055, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0236, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0481, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0218, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0060, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0192, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0624, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9499e-07, dtype=torch.float64)
secont condition:: tensor(2.9499e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4407e-06, dtype=torch.float64)
secont condition:: tensor(1.4407e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1233e-06, dtype=torch.float64)
secont condition:: tensor(1.1233e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5753e-06, dtype=torch.float64)
secont condition:: tensor(1.5753e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5552e-07, dtype=torch.float64)
secont condition:: tensor(5.5552e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8016e-07, dtype=torch.float64)
secont condition:: tensor(4.8016e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5570e-07, dtype=torch.float64)
secont condition:: tensor(3.5570e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0233e-07, dtype=torch.float64)
secont condition:: tensor(1.0233e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9910e-07, dtype=torch.float64)
secont condition:: tensor(4.9910e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2177e-07, dtype=torch.float64)
secont condition:: tensor(2.2177e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9385e-07, dtype=torch.float64)
secont condition:: tensor(1.9385e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0619e-07, dtype=torch.float64)
secont condition:: tensor(1.0619e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1971e-07, dtype=torch.float64)
secont condition:: tensor(1.1971e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3088e-07, dtype=torch.float64)
secont condition:: tensor(1.3088e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0271e-07, dtype=torch.float64)
secont condition:: tensor(5.0271e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1000e-06, dtype=torch.float64)
secont condition:: tensor(1.1000e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1758e-06, dtype=torch.float64)
secont condition:: tensor(1.1758e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2328e-06, dtype=torch.float64)
secont condition:: tensor(3.2328e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6451e-06, dtype=torch.float64)
secont condition:: tensor(5.6451e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4266e-06, dtype=torch.float64)
secont condition:: tensor(9.4266e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6243e-05, dtype=torch.float64)
secont condition:: tensor(1.6243e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6757e-05, dtype=torch.float64)
secont condition:: tensor(3.6757e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.1837e-05, dtype=torch.float64)
secont condition:: tensor(9.1837e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(-0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0218, dtype=torch.float64)
secont condition:: tensor(0.0218, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0107, dtype=torch.float64)
secont condition:: tensor(0.0107, dtype=torch.float64)
curr_secont condition:: tensor(0.0232, dtype=torch.float64)
secont condition:: tensor(0.0232, dtype=torch.float64)
curr_secont condition:: tensor(0.0149, dtype=torch.float64)
secont condition:: tensor(0.0149, dtype=torch.float64)
curr_secont condition:: tensor(0.0050, dtype=torch.float64)
secont condition:: tensor(0.0050, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0024, dtype=torch.float64)
secont condition:: tensor(0.0024, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.9120e-05, dtype=torch.float64)
secont condition:: tensor(9.9120e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6089e-05, dtype=torch.float64)
secont condition:: tensor(9.6089e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.1565e-05, dtype=torch.float64)
secont condition:: tensor(8.1565e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7505e-05, dtype=torch.float64)
secont condition:: tensor(8.7505e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.163928031921387
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5050e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0762e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8739e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0055, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0244, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0484, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0030, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0220, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0194, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0094, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0630, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
random set 2
python3 generate_rand_ids 0.0005  MNIST
tensor([26887,  9483, 32653, 37781, 27544, 26144, 15522, 32813, 52271, 46255,
        42162, 46143, 50879, 57409, 24899, 15047, 32081, 48084,  4697, 21601,
        16866,  8059,  2664, 35304, 29672,  7152, 10482, 20598,  1910, 37243])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241722
Test Avg. Loss: 0.000024, Accuracy: 0.939800
Train - Epoch 1, Batch: 0, Loss: 0.254305
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 2, Batch: 0, Loss: 0.167948
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 3, Batch: 0, Loss: 0.155366
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 4, Batch: 0, Loss: 0.165855
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 5, Batch: 0, Loss: 0.154982
Test Avg. Loss: 0.000015, Accuracy: 0.954000
Train - Epoch 6, Batch: 0, Loss: 0.168462
Test Avg. Loss: 0.000105, Accuracy: 0.632200
Train - Epoch 7, Batch: 0, Loss: 1.082148
Test Avg. Loss: 0.000046, Accuracy: 0.881200
Train - Epoch 8, Batch: 0, Loss: 0.480521
Test Avg. Loss: 0.000020, Accuracy: 0.948700
Train - Epoch 9, Batch: 0, Loss: 0.225719
Test Avg. Loss: 0.000018, Accuracy: 0.950400
Train - Epoch 10, Batch: 0, Loss: 0.192469
Test Avg. Loss: 0.000017, Accuracy: 0.953100
Train - Epoch 11, Batch: 0, Loss: 0.189160
Test Avg. Loss: 0.000016, Accuracy: 0.953300
Train - Epoch 12, Batch: 0, Loss: 0.183031
Test Avg. Loss: 0.000016, Accuracy: 0.955400
Train - Epoch 13, Batch: 0, Loss: 0.174943
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 14, Batch: 0, Loss: 0.172038
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 15, Batch: 0, Loss: 0.164339
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 16, Batch: 0, Loss: 0.169597
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 17, Batch: 0, Loss: 0.159369
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 18, Batch: 0, Loss: 0.164339
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 19, Batch: 0, Loss: 0.165500
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 20, Batch: 0, Loss: 0.169218
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 21, Batch: 0, Loss: 0.155261
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 22, Batch: 0, Loss: 0.157382
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 23, Batch: 0, Loss: 0.154105
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 24, Batch: 0, Loss: 0.153335
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 25, Batch: 0, Loss: 0.152041
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.159618
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 27, Batch: 0, Loss: 0.159701
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.156579
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 29, Batch: 0, Loss: 0.160051
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 170.11623120307922
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.43497514724731
time_baseline:: 116.50287747383118
curr_diff: 0 tensor(0.0038, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0268, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0552, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0313, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0169, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0087, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0719, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1643e-06, dtype=torch.float64)
secont condition:: tensor(1.1643e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5814e-07, dtype=torch.float64)
secont condition:: tensor(9.5814e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5783e-06, dtype=torch.float64)
secont condition:: tensor(3.5783e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9425e-06, dtype=torch.float64)
secont condition:: tensor(3.9425e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1055e-06, dtype=torch.float64)
secont condition:: tensor(1.1055e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7777e-07, dtype=torch.float64)
secont condition:: tensor(3.7777e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1986e-07, dtype=torch.float64)
secont condition:: tensor(5.1986e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5646e-07, dtype=torch.float64)
secont condition:: tensor(2.5646e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0571e-07, dtype=torch.float64)
secont condition:: tensor(2.0571e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0375e-07, dtype=torch.float64)
secont condition:: tensor(9.0375e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7748e-07, dtype=torch.float64)
secont condition:: tensor(4.7748e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8954e-07, dtype=torch.float64)
secont condition:: tensor(4.8954e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9073e-07, dtype=torch.float64)
secont condition:: tensor(6.9073e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3415e-07, dtype=torch.float64)
secont condition:: tensor(3.3415e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8995e-07, dtype=torch.float64)
secont condition:: tensor(2.8995e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3226e-06, dtype=torch.float64)
secont condition:: tensor(1.3226e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1203e-06, dtype=torch.float64)
secont condition:: tensor(1.1203e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0531e-06, dtype=torch.float64)
secont condition:: tensor(1.0531e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9148e-06, dtype=torch.float64)
secont condition:: tensor(1.9148e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3002e-06, dtype=torch.float64)
secont condition:: tensor(2.3002e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6822e-06, dtype=torch.float64)
secont condition:: tensor(5.6822e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0982e-05, dtype=torch.float64)
secont condition:: tensor(1.0982e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5061e-05, dtype=torch.float64)
secont condition:: tensor(2.5061e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3593e-05, dtype=torch.float64)
secont condition:: tensor(6.3593e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0023, dtype=torch.float64)
curr_secont condition:: tensor(0.0197, dtype=torch.float64)
secont condition:: tensor(0.0197, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0055, dtype=torch.float64)
secont condition:: tensor(0.0055, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(1.3333e-05, dtype=torch.float64)
secont condition:: tensor(1.3333e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.9458e-05, dtype=torch.float64)
secont condition:: tensor(9.9458e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1229e-05, dtype=torch.float64)
secont condition:: tensor(5.1229e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1524e-05, dtype=torch.float64)
secont condition:: tensor(7.1524e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9793e-05, dtype=torch.float64)
secont condition:: tensor(5.9793e-05, dtype=torch.float64)
curr_secont condition:: tensor(-8.8313e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.2117e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.4801e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-7.3105e-05, dtype=torch.float64)
curr_secont condition:: tensor(-9.1916e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.2909e-06, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-1.5424e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0892e-05, dtype=torch.float64)
secont condition:: tensor(7.0892e-05, dtype=torch.float64)
curr_secont condition:: tensor(-8.5482e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.6142e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1146e-05, dtype=torch.float64)
secont condition:: tensor(3.1146e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1364e-05, dtype=torch.float64)
secont condition:: tensor(3.1364e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2087e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3502e-05, dtype=torch.float64)
secont condition:: tensor(1.3502e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7366e-05, dtype=torch.float64)
secont condition:: tensor(8.7366e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.32465100288391
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.5560e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0048, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0037, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0254, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0544, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0302, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0059, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0173, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0088, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0704, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.235307
Test Avg. Loss: 0.000027, Accuracy: 0.930500
Train - Epoch 1, Batch: 0, Loss: 0.293595
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.168466
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 3, Batch: 0, Loss: 0.156256
Test Avg. Loss: 0.000014, Accuracy: 0.957200
Train - Epoch 4, Batch: 0, Loss: 0.166575
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 5, Batch: 0, Loss: 0.166427
Test Avg. Loss: 0.000032, Accuracy: 0.893700
Train - Epoch 6, Batch: 0, Loss: 0.342584
Test Avg. Loss: 0.000022, Accuracy: 0.946900
Train - Epoch 7, Batch: 0, Loss: 0.234252
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 8, Batch: 0, Loss: 0.167035
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 9, Batch: 0, Loss: 0.164467
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 10, Batch: 0, Loss: 0.158165
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 11, Batch: 0, Loss: 0.160638
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 12, Batch: 0, Loss: 0.152828
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 13, Batch: 0, Loss: 0.151215
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 14, Batch: 0, Loss: 0.153136
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 15, Batch: 0, Loss: 0.155538
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 16, Batch: 0, Loss: 0.152284
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 17, Batch: 0, Loss: 0.150657
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 18, Batch: 0, Loss: 0.157711
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 19, Batch: 0, Loss: 0.152675
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 20, Batch: 0, Loss: 0.150451
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 21, Batch: 0, Loss: 0.153113
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 22, Batch: 0, Loss: 0.150810
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.150474
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 24, Batch: 0, Loss: 0.153587
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 25, Batch: 0, Loss: 0.155658
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.150671
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.152476
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 28, Batch: 0, Loss: 0.157152
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 29, Batch: 0, Loss: 0.152759
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 169.50476908683777
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.11109519004822
time_baseline:: 117.17696952819824
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0073, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6669e-07, dtype=torch.float64)
secont condition:: tensor(1.6669e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0391e-06, dtype=torch.float64)
secont condition:: tensor(1.0391e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0796e-06, dtype=torch.float64)
secont condition:: tensor(1.0796e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2905e-06, dtype=torch.float64)
secont condition:: tensor(2.2905e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2559e-06, dtype=torch.float64)
secont condition:: tensor(1.2559e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2727e-07, dtype=torch.float64)
secont condition:: tensor(2.2727e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2798e-07, dtype=torch.float64)
secont condition:: tensor(4.2798e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7052e-07, dtype=torch.float64)
secont condition:: tensor(2.7052e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8214e-07, dtype=torch.float64)
secont condition:: tensor(1.8214e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1821e-07, dtype=torch.float64)
secont condition:: tensor(3.1821e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8446e-07, dtype=torch.float64)
secont condition:: tensor(8.8446e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9651e-07, dtype=torch.float64)
secont condition:: tensor(2.9651e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6298e-07, dtype=torch.float64)
secont condition:: tensor(3.6298e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7556e-07, dtype=torch.float64)
secont condition:: tensor(7.7556e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7948e-07, dtype=torch.float64)
secont condition:: tensor(7.7948e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0163e-07, dtype=torch.float64)
secont condition:: tensor(7.0163e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2023e-06, dtype=torch.float64)
secont condition:: tensor(1.2023e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4948e-06, dtype=torch.float64)
secont condition:: tensor(1.4948e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3979e-06, dtype=torch.float64)
secont condition:: tensor(1.3979e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9220e-06, dtype=torch.float64)
secont condition:: tensor(2.9220e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8466e-06, dtype=torch.float64)
secont condition:: tensor(6.8466e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4275e-05, dtype=torch.float64)
secont condition:: tensor(1.4275e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.9980e-05, dtype=torch.float64)
secont condition:: tensor(3.9980e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-1.0289e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(2.6165e-05, dtype=torch.float64)
secont condition:: tensor(2.6165e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8921e-05, dtype=torch.float64)
secont condition:: tensor(1.8921e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0636e-05, dtype=torch.float64)
secont condition:: tensor(1.0636e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.4255e-06, dtype=torch.float64)
secont condition:: tensor(9.4255e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9402e-06, dtype=torch.float64)
secont condition:: tensor(8.9402e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1029e-06, dtype=torch.float64)
secont condition:: tensor(7.1029e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6270e-06, dtype=torch.float64)
secont condition:: tensor(6.6270e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8483e-06, dtype=torch.float64)
secont condition:: tensor(5.8483e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7632e-06, dtype=torch.float64)
secont condition:: tensor(4.7632e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7245e-06, dtype=torch.float64)
secont condition:: tensor(5.7245e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2196e-06, dtype=torch.float64)
secont condition:: tensor(5.2196e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6133e-06, dtype=torch.float64)
secont condition:: tensor(4.6133e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7248e-06, dtype=torch.float64)
secont condition:: tensor(5.7248e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2975e-06, dtype=torch.float64)
secont condition:: tensor(5.2975e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8278e-06, dtype=torch.float64)
secont condition:: tensor(9.8278e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1189e-06, dtype=torch.float64)
secont condition:: tensor(5.1189e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4338e-06, dtype=torch.float64)
secont condition:: tensor(4.4338e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.5753e-06, dtype=torch.float64)
secont condition:: tensor(5.5753e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8110e-06, dtype=torch.float64)
secont condition:: tensor(4.8110e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6368e-06, dtype=torch.float64)
secont condition:: tensor(3.6368e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4703e-06, dtype=torch.float64)
secont condition:: tensor(7.4703e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1666e-06, dtype=torch.float64)
secont condition:: tensor(2.1666e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1341e-06, dtype=torch.float64)
secont condition:: tensor(3.1341e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6029e-06, dtype=torch.float64)
secont condition:: tensor(8.6029e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1421e-06, dtype=torch.float64)
secont condition:: tensor(3.1421e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9657e-06, dtype=torch.float64)
secont condition:: tensor(3.9657e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4523e-06, dtype=torch.float64)
secont condition:: tensor(3.4523e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8868e-06, dtype=torch.float64)
secont condition:: tensor(2.8868e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0782e-06, dtype=torch.float64)
secont condition:: tensor(3.0782e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3585e-06, dtype=torch.float64)
secont condition:: tensor(2.3585e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1056e-06, dtype=torch.float64)
secont condition:: tensor(4.1056e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6321e-06, dtype=torch.float64)
secont condition:: tensor(5.6321e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7068e-06, dtype=torch.float64)
secont condition:: tensor(4.7068e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2521e-06, dtype=torch.float64)
secont condition:: tensor(4.2521e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3911e-06, dtype=torch.float64)
secont condition:: tensor(4.3911e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2818e-06, dtype=torch.float64)
secont condition:: tensor(3.2818e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9785e-06, dtype=torch.float64)
secont condition:: tensor(2.9785e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9705e-06, dtype=torch.float64)
secont condition:: tensor(1.9705e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9874e-06, dtype=torch.float64)
secont condition:: tensor(3.9874e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8263e-06, dtype=torch.float64)
secont condition:: tensor(5.8263e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0722e-06, dtype=torch.float64)
secont condition:: tensor(3.0722e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5938e-06, dtype=torch.float64)
secont condition:: tensor(2.5938e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9241e-06, dtype=torch.float64)
secont condition:: tensor(2.9241e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2923e-06, dtype=torch.float64)
secont condition:: tensor(2.2923e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4038e-06, dtype=torch.float64)
secont condition:: tensor(2.4038e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1252e-06, dtype=torch.float64)
secont condition:: tensor(2.1252e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6457e-06, dtype=torch.float64)
secont condition:: tensor(2.6457e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5469e-06, dtype=torch.float64)
secont condition:: tensor(2.5469e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4931e-06, dtype=torch.float64)
secont condition:: tensor(2.4931e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4101e-06, dtype=torch.float64)
secont condition:: tensor(2.4101e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.22559905052185
curr_diff: 0 tensor(3.9434e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7889e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3516e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.3755e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0059, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0028, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0074, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.242541
Test Avg. Loss: 0.000024, Accuracy: 0.941500
Train - Epoch 1, Batch: 0, Loss: 0.253958
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 2, Batch: 0, Loss: 0.169425
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 3, Batch: 0, Loss: 0.166105
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 4, Batch: 0, Loss: 0.158773
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 5, Batch: 0, Loss: 0.158624
Test Avg. Loss: 0.000016, Accuracy: 0.953400
Train - Epoch 6, Batch: 0, Loss: 0.173965
Test Avg. Loss: 0.000130, Accuracy: 0.653800
Train - Epoch 7, Batch: 0, Loss: 1.303935
Test Avg. Loss: 0.000019, Accuracy: 0.950800
Train - Epoch 8, Batch: 0, Loss: 0.211551
Test Avg. Loss: 0.000016, Accuracy: 0.955600
Train - Epoch 9, Batch: 0, Loss: 0.171842
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 10, Batch: 0, Loss: 0.172210
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 11, Batch: 0, Loss: 0.162393
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 12, Batch: 0, Loss: 0.166387
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 13, Batch: 0, Loss: 0.158011
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 14, Batch: 0, Loss: 0.152680
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.154694
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 16, Batch: 0, Loss: 0.150317
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 17, Batch: 0, Loss: 0.149894
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 18, Batch: 0, Loss: 0.159854
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 19, Batch: 0, Loss: 0.154733
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 20, Batch: 0, Loss: 0.149094
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.155251
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 22, Batch: 0, Loss: 0.159417
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 23, Batch: 0, Loss: 0.150809
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.153908
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 25, Batch: 0, Loss: 0.153583
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 26, Batch: 0, Loss: 0.153972
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.155545
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.155610
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.162793
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 171.11365628242493
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.78930020332336
time_baseline:: 116.85565853118896
curr_diff: 0 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0255, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0512, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0295, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0067, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0223, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0109, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0695, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7223e-07, dtype=torch.float64)
secont condition:: tensor(3.7223e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3412e-06, dtype=torch.float64)
secont condition:: tensor(1.3412e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2487e-06, dtype=torch.float64)
secont condition:: tensor(1.2487e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5016e-07, dtype=torch.float64)
secont condition:: tensor(6.5016e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5771e-07, dtype=torch.float64)
secont condition:: tensor(2.5771e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6300e-07, dtype=torch.float64)
secont condition:: tensor(4.6300e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4879e-08, dtype=torch.float64)
secont condition:: tensor(9.4879e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9557e-07, dtype=torch.float64)
secont condition:: tensor(1.9557e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2804e-07, dtype=torch.float64)
secont condition:: tensor(5.2804e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3972e-07, dtype=torch.float64)
secont condition:: tensor(1.3972e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5656e-07, dtype=torch.float64)
secont condition:: tensor(4.5656e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7722e-07, dtype=torch.float64)
secont condition:: tensor(3.7722e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7292e-06, dtype=torch.float64)
secont condition:: tensor(1.7292e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0109e-06, dtype=torch.float64)
secont condition:: tensor(1.0109e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8075e-07, dtype=torch.float64)
secont condition:: tensor(6.8075e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4432e-07, dtype=torch.float64)
secont condition:: tensor(9.4432e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7038e-07, dtype=torch.float64)
secont condition:: tensor(9.7038e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5681e-06, dtype=torch.float64)
secont condition:: tensor(1.5681e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2815e-06, dtype=torch.float64)
secont condition:: tensor(2.2815e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7750e-06, dtype=torch.float64)
secont condition:: tensor(3.7750e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7076e-06, dtype=torch.float64)
secont condition:: tensor(6.7076e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3234e-05, dtype=torch.float64)
secont condition:: tensor(1.3234e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2202e-05, dtype=torch.float64)
secont condition:: tensor(3.2202e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7427e-05, dtype=torch.float64)
secont condition:: tensor(9.7427e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0042, dtype=torch.float64)
secont condition:: tensor(0.0042, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0027, dtype=torch.float64)
secont condition:: tensor(0.0027, dtype=torch.float64)
curr_secont condition:: tensor(0.0216, dtype=torch.float64)
secont condition:: tensor(0.0216, dtype=torch.float64)
curr_secont condition:: tensor(0.0115, dtype=torch.float64)
secont condition:: tensor(0.0115, dtype=torch.float64)
curr_secont condition:: tensor(0.0073, dtype=torch.float64)
secont condition:: tensor(0.0073, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0036, dtype=torch.float64)
secont condition:: tensor(0.0036, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1691e-05, dtype=torch.float64)
secont condition:: tensor(9.1691e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.164561986923218
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2593e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0030, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0042, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0260, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0521, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0298, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0068, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0226, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0110, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0707, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9999, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.244553
Test Avg. Loss: 0.000025, Accuracy: 0.937600
Train - Epoch 1, Batch: 0, Loss: 0.267767
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 2, Batch: 0, Loss: 0.176380
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 3, Batch: 0, Loss: 0.162961
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.156719
Test Avg. Loss: 0.000016, Accuracy: 0.955100
Train - Epoch 5, Batch: 0, Loss: 0.168690
Test Avg. Loss: 0.000058, Accuracy: 0.791800
Train - Epoch 6, Batch: 0, Loss: 0.605555
Test Avg. Loss: 0.000021, Accuracy: 0.948200
Train - Epoch 7, Batch: 0, Loss: 0.225263
Test Avg. Loss: 0.000016, Accuracy: 0.955300
Train - Epoch 8, Batch: 0, Loss: 0.174983
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 9, Batch: 0, Loss: 0.160351
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 10, Batch: 0, Loss: 0.157849
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 11, Batch: 0, Loss: 0.153586
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 12, Batch: 0, Loss: 0.159844
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 13, Batch: 0, Loss: 0.162902
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 14, Batch: 0, Loss: 0.152859
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 15, Batch: 0, Loss: 0.152209
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 16, Batch: 0, Loss: 0.158673
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 17, Batch: 0, Loss: 0.153378
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 18, Batch: 0, Loss: 0.153965
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.150310
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.155381
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.152109
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 22, Batch: 0, Loss: 0.151392
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.152240
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 24, Batch: 0, Loss: 0.154629
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 25, Batch: 0, Loss: 0.153964
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 26, Batch: 0, Loss: 0.148514
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.153382
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.155618
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.158613
Test Avg. Loss: 0.000014, Accuracy: 0.961600
training_time:: 171.9586398601532
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.68693470954895
time_baseline:: 115.75132489204407
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0063, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2935e-06, dtype=torch.float64)
secont condition:: tensor(1.2935e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3417e-06, dtype=torch.float64)
secont condition:: tensor(4.3417e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8273e-07, dtype=torch.float64)
secont condition:: tensor(1.8273e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8915e-05, dtype=torch.float64)
secont condition:: tensor(1.8915e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4199e-06, dtype=torch.float64)
secont condition:: tensor(5.4199e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9889e-07, dtype=torch.float64)
secont condition:: tensor(9.9889e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0960e-07, dtype=torch.float64)
secont condition:: tensor(4.0960e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6322e-07, dtype=torch.float64)
secont condition:: tensor(7.6322e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4593e-07, dtype=torch.float64)
secont condition:: tensor(3.4593e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6616e-07, dtype=torch.float64)
secont condition:: tensor(5.6616e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9721e-07, dtype=torch.float64)
secont condition:: tensor(3.9721e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5154e-06, dtype=torch.float64)
secont condition:: tensor(1.5154e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6043e-07, dtype=torch.float64)
secont condition:: tensor(4.6043e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5023e-06, dtype=torch.float64)
secont condition:: tensor(1.5023e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1847e-07, dtype=torch.float64)
secont condition:: tensor(9.1847e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3493e-06, dtype=torch.float64)
secont condition:: tensor(1.3493e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1761e-06, dtype=torch.float64)
secont condition:: tensor(1.1761e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3613e-06, dtype=torch.float64)
secont condition:: tensor(1.3613e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1935e-06, dtype=torch.float64)
secont condition:: tensor(1.1935e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2639e-06, dtype=torch.float64)
secont condition:: tensor(1.2639e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2460e-06, dtype=torch.float64)
secont condition:: tensor(3.2460e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5513e-06, dtype=torch.float64)
secont condition:: tensor(7.5513e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0552e-05, dtype=torch.float64)
secont condition:: tensor(2.0552e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.3648e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5492e-05, dtype=torch.float64)
secont condition:: tensor(8.5492e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6109e-05, dtype=torch.float64)
secont condition:: tensor(2.6109e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2295e-05, dtype=torch.float64)
secont condition:: tensor(1.2295e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5539e-05, dtype=torch.float64)
secont condition:: tensor(1.5539e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7000e-06, dtype=torch.float64)
secont condition:: tensor(9.7000e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2675e-06, dtype=torch.float64)
secont condition:: tensor(6.2675e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8507e-06, dtype=torch.float64)
secont condition:: tensor(5.8507e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1314e-06, dtype=torch.float64)
secont condition:: tensor(2.1314e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3631e-06, dtype=torch.float64)
secont condition:: tensor(5.3631e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9196e-06, dtype=torch.float64)
secont condition:: tensor(4.9196e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3474e-06, dtype=torch.float64)
secont condition:: tensor(5.3474e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1096e-06, dtype=torch.float64)
secont condition:: tensor(5.1096e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9343e-06, dtype=torch.float64)
secont condition:: tensor(5.9343e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7973e-06, dtype=torch.float64)
secont condition:: tensor(9.7973e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9373e-06, dtype=torch.float64)
secont condition:: tensor(3.9373e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0804e-06, dtype=torch.float64)
secont condition:: tensor(5.0804e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7751e-06, dtype=torch.float64)
secont condition:: tensor(7.7751e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8687e-06, dtype=torch.float64)
secont condition:: tensor(2.8687e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3070e-06, dtype=torch.float64)
secont condition:: tensor(4.3070e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1191e-05, dtype=torch.float64)
secont condition:: tensor(1.1191e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0233e-06, dtype=torch.float64)
secont condition:: tensor(3.0233e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7916e-06, dtype=torch.float64)
secont condition:: tensor(3.7916e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8787e-06, dtype=torch.float64)
secont condition:: tensor(4.8787e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2455e-06, dtype=torch.float64)
secont condition:: tensor(4.2455e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2430e-06, dtype=torch.float64)
secont condition:: tensor(6.2430e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6052e-06, dtype=torch.float64)
secont condition:: tensor(2.6052e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0403e-06, dtype=torch.float64)
secont condition:: tensor(3.0403e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2416e-06, dtype=torch.float64)
secont condition:: tensor(4.2416e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5582e-06, dtype=torch.float64)
secont condition:: tensor(6.5582e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8239e-06, dtype=torch.float64)
secont condition:: tensor(2.8239e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2932e-06, dtype=torch.float64)
secont condition:: tensor(3.2932e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0151e-06, dtype=torch.float64)
secont condition:: tensor(2.0151e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6468e-06, dtype=torch.float64)
secont condition:: tensor(4.6468e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3964e-06, dtype=torch.float64)
secont condition:: tensor(5.3964e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7283e-06, dtype=torch.float64)
secont condition:: tensor(2.7283e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1363e-06, dtype=torch.float64)
secont condition:: tensor(3.1363e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8039e-06, dtype=torch.float64)
secont condition:: tensor(3.8039e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7582e-06, dtype=torch.float64)
secont condition:: tensor(2.7582e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4226e-06, dtype=torch.float64)
secont condition:: tensor(2.4226e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6410e-06, dtype=torch.float64)
secont condition:: tensor(1.6410e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2811e-06, dtype=torch.float64)
secont condition:: tensor(5.2811e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9343e-06, dtype=torch.float64)
secont condition:: tensor(1.9343e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8828e-06, dtype=torch.float64)
secont condition:: tensor(1.8828e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4995e-06, dtype=torch.float64)
secont condition:: tensor(2.4995e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4374e-06, dtype=torch.float64)
secont condition:: tensor(2.4374e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6994e-06, dtype=torch.float64)
secont condition:: tensor(1.6994e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4772e-06, dtype=torch.float64)
secont condition:: tensor(2.4772e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2894e-06, dtype=torch.float64)
secont condition:: tensor(2.2894e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9279e-06, dtype=torch.float64)
secont condition:: tensor(1.9279e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5490e-06, dtype=torch.float64)
secont condition:: tensor(2.5490e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5623e-06, dtype=torch.float64)
secont condition:: tensor(2.5623e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2659e-06, dtype=torch.float64)
secont condition:: tensor(2.2659e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.071165561676025
curr_diff: 0 tensor(4.0088e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2855e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.1090e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.4190e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0065, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.230964
Test Avg. Loss: 0.000025, Accuracy: 0.935800
Train - Epoch 1, Batch: 0, Loss: 0.270947
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.169003
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.163772
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.156461
Test Avg. Loss: 0.000015, Accuracy: 0.954600
Train - Epoch 5, Batch: 0, Loss: 0.163510
Test Avg. Loss: 0.000047, Accuracy: 0.831100
Train - Epoch 6, Batch: 0, Loss: 0.494873
Test Avg. Loss: 0.000027, Accuracy: 0.936300
Train - Epoch 7, Batch: 0, Loss: 0.287660
Test Avg. Loss: 0.000016, Accuracy: 0.954700
Train - Epoch 8, Batch: 0, Loss: 0.173920
Test Avg. Loss: 0.000015, Accuracy: 0.956000
Train - Epoch 9, Batch: 0, Loss: 0.160770
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 10, Batch: 0, Loss: 0.165039
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 11, Batch: 0, Loss: 0.159549
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 12, Batch: 0, Loss: 0.160738
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 13, Batch: 0, Loss: 0.161146
Test Avg. Loss: 0.000014, Accuracy: 0.958900
Train - Epoch 14, Batch: 0, Loss: 0.157232
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 15, Batch: 0, Loss: 0.157137
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 16, Batch: 0, Loss: 0.159598
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.158455
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.154433
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.156405
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 20, Batch: 0, Loss: 0.154992
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.152912
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.150633
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.150811
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 24, Batch: 0, Loss: 0.151050
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.152166
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 26, Batch: 0, Loss: 0.162560
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 27, Batch: 0, Loss: 0.153772
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.153311
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.155146
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 169.54163312911987
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.02176403999329
time_baseline:: 115.08818483352661
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5848e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.9325e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0040, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0265e-08, dtype=torch.float64)
secont condition:: tensor(7.0265e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8707e-06, dtype=torch.float64)
secont condition:: tensor(1.8707e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.6417e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8296e-06, dtype=torch.float64)
secont condition:: tensor(4.8296e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5689e-06, dtype=torch.float64)
secont condition:: tensor(1.5689e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1620e-07, dtype=torch.float64)
secont condition:: tensor(5.1620e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8205e-07, dtype=torch.float64)
secont condition:: tensor(2.8205e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5990e-07, dtype=torch.float64)
secont condition:: tensor(7.5990e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7376e-07, dtype=torch.float64)
secont condition:: tensor(5.7376e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6870e-07, dtype=torch.float64)
secont condition:: tensor(5.6870e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8834e-07, dtype=torch.float64)
secont condition:: tensor(1.8834e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1677e-07, dtype=torch.float64)
secont condition:: tensor(3.1677e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1073e-07, dtype=torch.float64)
secont condition:: tensor(8.1073e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8163e-07, dtype=torch.float64)
secont condition:: tensor(4.8163e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0440e-07, dtype=torch.float64)
secont condition:: tensor(7.0440e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3902e-07, dtype=torch.float64)
secont condition:: tensor(3.3902e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9053e-07, dtype=torch.float64)
secont condition:: tensor(3.9053e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8079e-07, dtype=torch.float64)
secont condition:: tensor(4.8079e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5607e-06, dtype=torch.float64)
secont condition:: tensor(2.5607e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5902e-07, dtype=torch.float64)
secont condition:: tensor(6.5902e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4700e-06, dtype=torch.float64)
secont condition:: tensor(1.4700e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3396e-06, dtype=torch.float64)
secont condition:: tensor(2.3396e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4849e-05, dtype=torch.float64)
secont condition:: tensor(1.4849e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7150e-05, dtype=torch.float64)
secont condition:: tensor(1.7150e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1878e-05, dtype=torch.float64)
secont condition:: tensor(2.1878e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0966e-05, dtype=torch.float64)
secont condition:: tensor(3.0966e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3467e-05, dtype=torch.float64)
secont condition:: tensor(2.3467e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.0868e-06, dtype=torch.float64)
secont condition:: tensor(6.0868e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1934e-06, dtype=torch.float64)
secont condition:: tensor(2.1934e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3103e-06, dtype=torch.float64)
secont condition:: tensor(2.3103e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7236e-06, dtype=torch.float64)
secont condition:: tensor(1.7236e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6493e-06, dtype=torch.float64)
secont condition:: tensor(1.6493e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4009e-06, dtype=torch.float64)
secont condition:: tensor(1.4009e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2620e-06, dtype=torch.float64)
secont condition:: tensor(2.2620e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9258e-06, dtype=torch.float64)
secont condition:: tensor(1.9258e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3000e-06, dtype=torch.float64)
secont condition:: tensor(1.3000e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4121e-06, dtype=torch.float64)
secont condition:: tensor(1.4121e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6413e-06, dtype=torch.float64)
secont condition:: tensor(1.6413e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6225e-06, dtype=torch.float64)
secont condition:: tensor(1.6225e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7645e-07, dtype=torch.float64)
secont condition:: tensor(9.7645e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8794e-06, dtype=torch.float64)
secont condition:: tensor(1.8794e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7100e-06, dtype=torch.float64)
secont condition:: tensor(1.7100e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1850e-07, dtype=torch.float64)
secont condition:: tensor(9.1850e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2338e-06, dtype=torch.float64)
secont condition:: tensor(2.2338e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4266e-06, dtype=torch.float64)
secont condition:: tensor(7.4266e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0186e-06, dtype=torch.float64)
secont condition:: tensor(1.0186e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1779e-06, dtype=torch.float64)
secont condition:: tensor(1.1779e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0862e-06, dtype=torch.float64)
secont condition:: tensor(1.0862e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2201e-06, dtype=torch.float64)
secont condition:: tensor(1.2201e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7042e-07, dtype=torch.float64)
secont condition:: tensor(8.7042e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1080e-06, dtype=torch.float64)
secont condition:: tensor(2.1080e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7143e-07, dtype=torch.float64)
secont condition:: tensor(9.7143e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8764e-06, dtype=torch.float64)
secont condition:: tensor(6.8764e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0794e-06, dtype=torch.float64)
secont condition:: tensor(1.0794e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3004e-07, dtype=torch.float64)
secont condition:: tensor(9.3004e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1901e-06, dtype=torch.float64)
secont condition:: tensor(1.1901e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6335e-06, dtype=torch.float64)
secont condition:: tensor(1.6335e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3948e-06, dtype=torch.float64)
secont condition:: tensor(2.3948e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9596e-06, dtype=torch.float64)
secont condition:: tensor(1.9596e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5009e-06, dtype=torch.float64)
secont condition:: tensor(1.5009e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9313e-06, dtype=torch.float64)
secont condition:: tensor(1.9313e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3723e-06, dtype=torch.float64)
secont condition:: tensor(1.3723e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8124e-07, dtype=torch.float64)
secont condition:: tensor(9.8124e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8029e-06, dtype=torch.float64)
secont condition:: tensor(1.8029e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0933e-06, dtype=torch.float64)
secont condition:: tensor(1.0933e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9085e-07, dtype=torch.float64)
secont condition:: tensor(8.9085e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4644e-06, dtype=torch.float64)
secont condition:: tensor(1.4644e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3190e-06, dtype=torch.float64)
secont condition:: tensor(1.3190e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1365e-06, dtype=torch.float64)
secont condition:: tensor(1.1365e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3696e-06, dtype=torch.float64)
secont condition:: tensor(1.3696e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2486e-06, dtype=torch.float64)
secont condition:: tensor(1.2486e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5951e-07, dtype=torch.float64)
secont condition:: tensor(9.5951e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2583e-06, dtype=torch.float64)
secont condition:: tensor(1.2583e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8969e-06, dtype=torch.float64)
secont condition:: tensor(1.8969e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0039e-06, dtype=torch.float64)
secont condition:: tensor(1.0039e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2599e-06, dtype=torch.float64)
secont condition:: tensor(2.2599e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0814e-06, dtype=torch.float64)
secont condition:: tensor(1.0814e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.165339946746826
curr_diff: 0 tensor(2.1254e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0361e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.0855e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.7388e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.2458e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4454e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.0841e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0041, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
random set 3
python3 generate_rand_ids 0.0005  MNIST
tensor([58241, 29197, 38671, 28690, 39059, 51482, 46493, 51615, 49824, 55970,
        12196,  4264, 41512,  3500,  2996, 26940,  2238, 14783, 19654, 26695,
         2261, 53207, 30680, 33752, 28646, 49393, 35061, 38393, 24954, 28030])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239658
Test Avg. Loss: 0.000025, Accuracy: 0.934200
Train - Epoch 1, Batch: 0, Loss: 0.267705
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 2, Batch: 0, Loss: 0.169133
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 3, Batch: 0, Loss: 0.162556
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 4, Batch: 0, Loss: 0.164908
Test Avg. Loss: 0.000016, Accuracy: 0.951900
Train - Epoch 5, Batch: 0, Loss: 0.176314
Test Avg. Loss: 0.000078, Accuracy: 0.727400
Train - Epoch 6, Batch: 0, Loss: 0.800233
Test Avg. Loss: 0.000018, Accuracy: 0.953500
Train - Epoch 7, Batch: 0, Loss: 0.192925
Test Avg. Loss: 0.000015, Accuracy: 0.955400
Train - Epoch 8, Batch: 0, Loss: 0.167313
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 9, Batch: 0, Loss: 0.166619
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 10, Batch: 0, Loss: 0.158366
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 11, Batch: 0, Loss: 0.158521
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 12, Batch: 0, Loss: 0.162486
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.154818
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 14, Batch: 0, Loss: 0.159227
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 15, Batch: 0, Loss: 0.150488
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 16, Batch: 0, Loss: 0.157753
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 17, Batch: 0, Loss: 0.154183
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 18, Batch: 0, Loss: 0.155686
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 19, Batch: 0, Loss: 0.152103
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.158802
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 21, Batch: 0, Loss: 0.153130
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 22, Batch: 0, Loss: 0.161147
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 23, Batch: 0, Loss: 0.152541
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 24, Batch: 0, Loss: 0.155559
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.152690
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 26, Batch: 0, Loss: 0.157628
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 27, Batch: 0, Loss: 0.150287
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.153183
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.148579
Test Avg. Loss: 0.000014, Accuracy: 0.961700
training_time:: 169.1625735759735
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.56968641281128
time_baseline:: 116.63649106025696
curr_diff: 0 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0179, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0075, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0060, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0217, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1674e-06, dtype=torch.float64)
secont condition:: tensor(1.1674e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9579e-06, dtype=torch.float64)
secont condition:: tensor(3.9579e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.0621e-06, dtype=torch.float64)
secont condition:: tensor(4.0621e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4519e-06, dtype=torch.float64)
secont condition:: tensor(6.4519e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0400e-06, dtype=torch.float64)
secont condition:: tensor(3.0400e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5840e-07, dtype=torch.float64)
secont condition:: tensor(9.5840e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8882e-06, dtype=torch.float64)
secont condition:: tensor(1.8882e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5257e-06, dtype=torch.float64)
secont condition:: tensor(1.5257e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2897e-06, dtype=torch.float64)
secont condition:: tensor(2.2897e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0020e-06, dtype=torch.float64)
secont condition:: tensor(1.0020e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3071e-06, dtype=torch.float64)
secont condition:: tensor(1.3071e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8653e-07, dtype=torch.float64)
secont condition:: tensor(7.8653e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2224e-07, dtype=torch.float64)
secont condition:: tensor(8.2224e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2449e-07, dtype=torch.float64)
secont condition:: tensor(7.2449e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6098e-06, dtype=torch.float64)
secont condition:: tensor(5.6098e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3731e-06, dtype=torch.float64)
secont condition:: tensor(8.3731e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7982e-06, dtype=torch.float64)
secont condition:: tensor(7.7982e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8277e-05, dtype=torch.float64)
secont condition:: tensor(1.8277e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0207e-05, dtype=torch.float64)
secont condition:: tensor(4.0207e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5145e-05, dtype=torch.float64)
secont condition:: tensor(7.5145e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0145, dtype=torch.float64)
secont condition:: tensor(0.0145, dtype=torch.float64)
curr_secont condition:: tensor(0.0073, dtype=torch.float64)
secont condition:: tensor(0.0073, dtype=torch.float64)
curr_secont condition:: tensor(0.0017, dtype=torch.float64)
secont condition:: tensor(0.0017, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5950e-05, dtype=torch.float64)
secont condition:: tensor(7.5950e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3533e-05, dtype=torch.float64)
secont condition:: tensor(5.3533e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0893e-05, dtype=torch.float64)
secont condition:: tensor(5.0893e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2198e-05, dtype=torch.float64)
secont condition:: tensor(4.2198e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0076e-05, dtype=torch.float64)
secont condition:: tensor(5.0076e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8307e-05, dtype=torch.float64)
secont condition:: tensor(3.8307e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3244e-05, dtype=torch.float64)
secont condition:: tensor(3.3244e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7836e-05, dtype=torch.float64)
secont condition:: tensor(3.7836e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3442e-05, dtype=torch.float64)
secont condition:: tensor(3.3442e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9743e-05, dtype=torch.float64)
secont condition:: tensor(2.9743e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4942e-05, dtype=torch.float64)
secont condition:: tensor(3.4942e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4350e-05, dtype=torch.float64)
secont condition:: tensor(3.4350e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6206e-05, dtype=torch.float64)
secont condition:: tensor(2.6206e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6642e-05, dtype=torch.float64)
secont condition:: tensor(2.6642e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6059e-05, dtype=torch.float64)
secont condition:: tensor(2.6059e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0433e-05, dtype=torch.float64)
secont condition:: tensor(2.0433e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0881e-05, dtype=torch.float64)
secont condition:: tensor(2.0881e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.7210e-05, dtype=torch.float64)
secont condition:: tensor(3.7210e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.8829e-05, dtype=torch.float64)
secont condition:: tensor(2.8829e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5031e-05, dtype=torch.float64)
secont condition:: tensor(2.5031e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4455e-05, dtype=torch.float64)
secont condition:: tensor(2.4455e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2756e-05, dtype=torch.float64)
secont condition:: tensor(2.2756e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8003e-05, dtype=torch.float64)
secont condition:: tensor(1.8003e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5726e-05, dtype=torch.float64)
secont condition:: tensor(2.5726e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1816e-05, dtype=torch.float64)
secont condition:: tensor(2.1816e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3283e-05, dtype=torch.float64)
secont condition:: tensor(3.3283e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7942e-05, dtype=torch.float64)
secont condition:: tensor(1.7942e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8115e-05, dtype=torch.float64)
secont condition:: tensor(1.8115e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5559e-05, dtype=torch.float64)
secont condition:: tensor(2.5559e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8828e-05, dtype=torch.float64)
secont condition:: tensor(2.8828e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3193e-05, dtype=torch.float64)
secont condition:: tensor(3.3193e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2309e-05, dtype=torch.float64)
secont condition:: tensor(2.2309e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7779e-05, dtype=torch.float64)
secont condition:: tensor(1.7779e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7294e-05, dtype=torch.float64)
secont condition:: tensor(1.7294e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2374e-05, dtype=torch.float64)
secont condition:: tensor(1.2374e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.9976e-05, dtype=torch.float64)
secont condition:: tensor(1.9976e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9006e-05, dtype=torch.float64)
secont condition:: tensor(1.9006e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4185e-05, dtype=torch.float64)
secont condition:: tensor(1.4185e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5803e-05, dtype=torch.float64)
secont condition:: tensor(1.5803e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7470e-05, dtype=torch.float64)
secont condition:: tensor(1.7470e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7515e-05, dtype=torch.float64)
secont condition:: tensor(1.7515e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2552e-05, dtype=torch.float64)
secont condition:: tensor(1.2552e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3945e-05, dtype=torch.float64)
secont condition:: tensor(1.3945e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3733e-05, dtype=torch.float64)
secont condition:: tensor(1.3733e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4433e-05, dtype=torch.float64)
secont condition:: tensor(1.4433e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3825e-05, dtype=torch.float64)
secont condition:: tensor(1.3825e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9409e-06, dtype=torch.float64)
secont condition:: tensor(9.9409e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2834e-05, dtype=torch.float64)
secont condition:: tensor(1.2834e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.17537212371826
curr_diff: 0 tensor(5.6019e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7604e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0187e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6602e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0180, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0076, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0060, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0218, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233922
Test Avg. Loss: 0.000023, Accuracy: 0.943100
Train - Epoch 1, Batch: 0, Loss: 0.242538
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.168360
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.155503
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 4, Batch: 0, Loss: 0.161862
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 5, Batch: 0, Loss: 0.158136
Test Avg. Loss: 0.000015, Accuracy: 0.954800
Train - Epoch 6, Batch: 0, Loss: 0.163790
Test Avg. Loss: 0.000122, Accuracy: 0.547000
Train - Epoch 7, Batch: 0, Loss: 1.248433
Test Avg. Loss: 0.000043, Accuracy: 0.883000
Train - Epoch 8, Batch: 0, Loss: 0.449613
Test Avg. Loss: 0.000019, Accuracy: 0.948800
Train - Epoch 9, Batch: 0, Loss: 0.215781
Test Avg. Loss: 0.000018, Accuracy: 0.951200
Train - Epoch 10, Batch: 0, Loss: 0.200436
Test Avg. Loss: 0.000017, Accuracy: 0.951800
Train - Epoch 11, Batch: 0, Loss: 0.181848
Test Avg. Loss: 0.000016, Accuracy: 0.953500
Train - Epoch 12, Batch: 0, Loss: 0.177375
Test Avg. Loss: 0.000016, Accuracy: 0.954200
Train - Epoch 13, Batch: 0, Loss: 0.176117
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 14, Batch: 0, Loss: 0.166304
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 15, Batch: 0, Loss: 0.164158
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 16, Batch: 0, Loss: 0.167564
Test Avg. Loss: 0.000015, Accuracy: 0.958400
Train - Epoch 17, Batch: 0, Loss: 0.163653
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 18, Batch: 0, Loss: 0.158801
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 19, Batch: 0, Loss: 0.160991
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 20, Batch: 0, Loss: 0.162861
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.161422
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 22, Batch: 0, Loss: 0.158273
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 23, Batch: 0, Loss: 0.159560
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.159154
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 25, Batch: 0, Loss: 0.157728
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 26, Batch: 0, Loss: 0.154868
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.153012
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 28, Batch: 0, Loss: 0.160759
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 29, Batch: 0, Loss: 0.156414
Test Avg. Loss: 0.000014, Accuracy: 0.961100
training_time:: 169.3795087337494
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 114.220055103302
time_baseline:: 114.28957557678223
curr_diff: 0 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0408, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0313, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0191, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0121, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0568, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0937e-06, dtype=torch.float64)
secont condition:: tensor(1.0937e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6472e-06, dtype=torch.float64)
secont condition:: tensor(2.6472e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9813e-07, dtype=torch.float64)
secont condition:: tensor(6.9813e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7276e-06, dtype=torch.float64)
secont condition:: tensor(1.7276e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2844e-07, dtype=torch.float64)
secont condition:: tensor(5.2844e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6611e-07, dtype=torch.float64)
secont condition:: tensor(1.6611e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2518e-06, dtype=torch.float64)
secont condition:: tensor(1.2518e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1585e-07, dtype=torch.float64)
secont condition:: tensor(4.1585e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6312e-06, dtype=torch.float64)
secont condition:: tensor(1.6312e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4483e-07, dtype=torch.float64)
secont condition:: tensor(5.4483e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7414e-06, dtype=torch.float64)
secont condition:: tensor(1.7414e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2880e-07, dtype=torch.float64)
secont condition:: tensor(9.2880e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6892e-06, dtype=torch.float64)
secont condition:: tensor(1.6892e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5116e-06, dtype=torch.float64)
secont condition:: tensor(1.5116e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3046e-06, dtype=torch.float64)
secont condition:: tensor(1.3046e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0805e-06, dtype=torch.float64)
secont condition:: tensor(4.0805e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8372e-06, dtype=torch.float64)
secont condition:: tensor(1.8372e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9008e-06, dtype=torch.float64)
secont condition:: tensor(2.9008e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8985e-06, dtype=torch.float64)
secont condition:: tensor(4.8985e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8740e-06, dtype=torch.float64)
secont condition:: tensor(3.8740e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9841e-06, dtype=torch.float64)
secont condition:: tensor(3.9841e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3520e-06, dtype=torch.float64)
secont condition:: tensor(6.3520e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0943e-05, dtype=torch.float64)
secont condition:: tensor(1.0943e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6888e-05, dtype=torch.float64)
secont condition:: tensor(1.6888e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3868e-05, dtype=torch.float64)
secont condition:: tensor(2.3868e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2792e-05, dtype=torch.float64)
secont condition:: tensor(5.2792e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.8298e-05, dtype=torch.float64)
secont condition:: tensor(6.8298e-05, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0009, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(9.7493e-05, dtype=torch.float64)
secont condition:: tensor(9.7493e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0764e-05, dtype=torch.float64)
secont condition:: tensor(5.0764e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4133e-05, dtype=torch.float64)
secont condition:: tensor(3.4133e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9088e-05, dtype=torch.float64)
secont condition:: tensor(3.9088e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9931e-05, dtype=torch.float64)
secont condition:: tensor(2.9931e-05, dtype=torch.float64)
curr_secont condition:: tensor(-1.3785e-05, dtype=torch.float64)
curr_secont condition:: tensor(-7.7651e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5469e-05, dtype=torch.float64)
secont condition:: tensor(1.5469e-05, dtype=torch.float64)
curr_secont condition:: tensor(-8.0576e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.6641e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.4986e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-1.7542e-05, dtype=torch.float64)
curr_secont condition:: tensor(-7.3581e-05, dtype=torch.float64)
curr_secont condition:: tensor(-5.8011e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2880e-05, dtype=torch.float64)
secont condition:: tensor(1.2880e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1138e-06, dtype=torch.float64)
secont condition:: tensor(1.1138e-06, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-8.8876e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3270e-06, dtype=torch.float64)
secont condition:: tensor(4.3270e-06, dtype=torch.float64)
curr_secont condition:: tensor(-6.9077e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7241e-05, dtype=torch.float64)
secont condition:: tensor(1.7241e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0099e-05, dtype=torch.float64)
secont condition:: tensor(3.0099e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.1791e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.5328e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.7761e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.7748e-05, dtype=torch.float64)
curr_secont condition:: tensor(-2.1622e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.7407e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.2838e-06, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-6.3136e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.4223e-05, dtype=torch.float64)
curr_secont condition:: tensor(-8.1991e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-4.3400e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1550e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-4.8304e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-6.6934e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.7059e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-9.5209e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-6.7602e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-9.4802e-05, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(-0.0002, dtype=torch.float64)
curr_secont condition:: tensor(-0.0004, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 43.6080858707428
curr_diff: 0 tensor(3.0644e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8317e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5918e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0005e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1339e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2353e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0405, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0313, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0190, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0121, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0062, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0565, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241227
Test Avg. Loss: 0.000026, Accuracy: 0.935900
Train - Epoch 1, Batch: 0, Loss: 0.278628
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.168106
Test Avg. Loss: 0.000015, Accuracy: 0.957500
Train - Epoch 3, Batch: 0, Loss: 0.162316
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 4, Batch: 0, Loss: 0.155839
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 5, Batch: 0, Loss: 0.162669
Test Avg. Loss: 0.000029, Accuracy: 0.902800
Train - Epoch 6, Batch: 0, Loss: 0.313507
Test Avg. Loss: 0.000024, Accuracy: 0.941700
Train - Epoch 7, Batch: 0, Loss: 0.254478
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 8, Batch: 0, Loss: 0.163920
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 9, Batch: 0, Loss: 0.162196
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 10, Batch: 0, Loss: 0.161256
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 11, Batch: 0, Loss: 0.155478
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 12, Batch: 0, Loss: 0.155462
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 13, Batch: 0, Loss: 0.160138
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 14, Batch: 0, Loss: 0.149788
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.152453
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 16, Batch: 0, Loss: 0.156996
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 17, Batch: 0, Loss: 0.157867
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 18, Batch: 0, Loss: 0.153568
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 19, Batch: 0, Loss: 0.155449
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 20, Batch: 0, Loss: 0.154201
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 21, Batch: 0, Loss: 0.160702
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.147190
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.150773
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 24, Batch: 0, Loss: 0.147897
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 25, Batch: 0, Loss: 0.152169
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 26, Batch: 0, Loss: 0.151111
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.150933
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.151187
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.150341
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 168.23309087753296
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.63655829429626
time_baseline:: 116.70251512527466
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0074, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0034, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0095, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4628e-06, dtype=torch.float64)
secont condition:: tensor(1.4628e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2921e-06, dtype=torch.float64)
secont condition:: tensor(2.2921e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3223e-06, dtype=torch.float64)
secont condition:: tensor(1.3223e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6709e-06, dtype=torch.float64)
secont condition:: tensor(5.6709e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4909e-06, dtype=torch.float64)
secont condition:: tensor(1.4909e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4872e-06, dtype=torch.float64)
secont condition:: tensor(1.4872e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1395e-07, dtype=torch.float64)
secont condition:: tensor(3.1395e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3883e-07, dtype=torch.float64)
secont condition:: tensor(4.3883e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1503e-07, dtype=torch.float64)
secont condition:: tensor(4.1503e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1616e-06, dtype=torch.float64)
secont condition:: tensor(2.1616e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0639e-06, dtype=torch.float64)
secont condition:: tensor(1.0639e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7997e-07, dtype=torch.float64)
secont condition:: tensor(5.7997e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4896e-07, dtype=torch.float64)
secont condition:: tensor(7.4896e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2523e-06, dtype=torch.float64)
secont condition:: tensor(1.2523e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6630e-06, dtype=torch.float64)
secont condition:: tensor(1.6630e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8077e-06, dtype=torch.float64)
secont condition:: tensor(1.8077e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0165e-06, dtype=torch.float64)
secont condition:: tensor(2.0165e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5365e-06, dtype=torch.float64)
secont condition:: tensor(3.5365e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3229e-06, dtype=torch.float64)
secont condition:: tensor(5.3229e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4478e-06, dtype=torch.float64)
secont condition:: tensor(5.4478e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8842e-06, dtype=torch.float64)
secont condition:: tensor(7.8842e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2739e-05, dtype=torch.float64)
secont condition:: tensor(1.2739e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1948e-05, dtype=torch.float64)
secont condition:: tensor(3.1948e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8716e-05, dtype=torch.float64)
secont condition:: tensor(9.8716e-05, dtype=torch.float64)
curr_secont condition:: tensor(-5.0590e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0019, dtype=torch.float64)
secont condition:: tensor(0.0019, dtype=torch.float64)
curr_secont condition:: tensor(0.0018, dtype=torch.float64)
secont condition:: tensor(0.0018, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(5.8765e-05, dtype=torch.float64)
secont condition:: tensor(5.8765e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3702e-05, dtype=torch.float64)
secont condition:: tensor(3.3702e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4166e-05, dtype=torch.float64)
secont condition:: tensor(2.4166e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0596e-05, dtype=torch.float64)
secont condition:: tensor(2.0596e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8246e-05, dtype=torch.float64)
secont condition:: tensor(1.8246e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6721e-05, dtype=torch.float64)
secont condition:: tensor(1.6721e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1442e-05, dtype=torch.float64)
secont condition:: tensor(1.1442e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0870e-05, dtype=torch.float64)
secont condition:: tensor(1.0870e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.7145e-06, dtype=torch.float64)
secont condition:: tensor(7.7145e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2824e-05, dtype=torch.float64)
secont condition:: tensor(1.2824e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2856e-05, dtype=torch.float64)
secont condition:: tensor(1.2856e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.7378e-06, dtype=torch.float64)
secont condition:: tensor(8.7378e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9604e-06, dtype=torch.float64)
secont condition:: tensor(9.9604e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2280e-05, dtype=torch.float64)
secont condition:: tensor(1.2280e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8709e-06, dtype=torch.float64)
secont condition:: tensor(7.8709e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6892e-06, dtype=torch.float64)
secont condition:: tensor(7.6892e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1023e-05, dtype=torch.float64)
secont condition:: tensor(1.1023e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.2439e-06, dtype=torch.float64)
secont condition:: tensor(5.2439e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6932e-06, dtype=torch.float64)
secont condition:: tensor(9.6932e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0251e-06, dtype=torch.float64)
secont condition:: tensor(6.0251e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2231e-05, dtype=torch.float64)
secont condition:: tensor(1.2231e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.3062e-06, dtype=torch.float64)
secont condition:: tensor(6.3062e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1674e-06, dtype=torch.float64)
secont condition:: tensor(7.1674e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1998e-06, dtype=torch.float64)
secont condition:: tensor(6.1998e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3957e-06, dtype=torch.float64)
secont condition:: tensor(6.3957e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1157e-05, dtype=torch.float64)
secont condition:: tensor(1.1157e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8088e-06, dtype=torch.float64)
secont condition:: tensor(5.8088e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1728e-06, dtype=torch.float64)
secont condition:: tensor(7.1728e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8691e-06, dtype=torch.float64)
secont condition:: tensor(8.8691e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8565e-06, dtype=torch.float64)
secont condition:: tensor(5.8565e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8295e-06, dtype=torch.float64)
secont condition:: tensor(7.8295e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8381e-06, dtype=torch.float64)
secont condition:: tensor(9.8381e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0546e-05, dtype=torch.float64)
secont condition:: tensor(1.0546e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7188e-06, dtype=torch.float64)
secont condition:: tensor(5.7188e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6050e-06, dtype=torch.float64)
secont condition:: tensor(6.6050e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4300e-06, dtype=torch.float64)
secont condition:: tensor(7.4300e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4093e-06, dtype=torch.float64)
secont condition:: tensor(5.4093e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7182e-06, dtype=torch.float64)
secont condition:: tensor(5.7182e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5306e-06, dtype=torch.float64)
secont condition:: tensor(5.5306e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0357e-06, dtype=torch.float64)
secont condition:: tensor(6.0357e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5778e-06, dtype=torch.float64)
secont condition:: tensor(6.5778e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9945e-06, dtype=torch.float64)
secont condition:: tensor(5.9945e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7320e-06, dtype=torch.float64)
secont condition:: tensor(4.7320e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4053e-06, dtype=torch.float64)
secont condition:: tensor(5.4053e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0994e-06, dtype=torch.float64)
secont condition:: tensor(4.0994e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6135e-06, dtype=torch.float64)
secont condition:: tensor(4.6135e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4146e-06, dtype=torch.float64)
secont condition:: tensor(4.4146e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4313e-06, dtype=torch.float64)
secont condition:: tensor(4.4313e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9101e-06, dtype=torch.float64)
secont condition:: tensor(4.9101e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4557e-06, dtype=torch.float64)
secont condition:: tensor(3.4557e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.133227348327637
curr_diff: 0 tensor(3.2874e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0561e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2688e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5085e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.4275e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0075, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0031, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0097, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962000
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237510
Test Avg. Loss: 0.000024, Accuracy: 0.939700
Train - Epoch 1, Batch: 0, Loss: 0.258580
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 2, Batch: 0, Loss: 0.166393
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.163369
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 4, Batch: 0, Loss: 0.155742
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 5, Batch: 0, Loss: 0.157762
Test Avg. Loss: 0.000015, Accuracy: 0.959300
Train - Epoch 6, Batch: 0, Loss: 0.162321
Test Avg. Loss: 0.000020, Accuracy: 0.939800
Train - Epoch 7, Batch: 0, Loss: 0.218036
Test Avg. Loss: 0.000100, Accuracy: 0.685000
Train - Epoch 8, Batch: 0, Loss: 1.017802
Test Avg. Loss: 0.000025, Accuracy: 0.937100
Train - Epoch 9, Batch: 0, Loss: 0.270831
Test Avg. Loss: 0.000019, Accuracy: 0.949700
Train - Epoch 10, Batch: 0, Loss: 0.211349
Test Avg. Loss: 0.000017, Accuracy: 0.952300
Train - Epoch 11, Batch: 0, Loss: 0.191630
Test Avg. Loss: 0.000016, Accuracy: 0.953700
Train - Epoch 12, Batch: 0, Loss: 0.175150
Test Avg. Loss: 0.000016, Accuracy: 0.955200
Train - Epoch 13, Batch: 0, Loss: 0.174301
Test Avg. Loss: 0.000015, Accuracy: 0.956200
Train - Epoch 14, Batch: 0, Loss: 0.169672
Test Avg. Loss: 0.000015, Accuracy: 0.957600
Train - Epoch 15, Batch: 0, Loss: 0.166587
Test Avg. Loss: 0.000015, Accuracy: 0.958300
Train - Epoch 16, Batch: 0, Loss: 0.169644
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 17, Batch: 0, Loss: 0.163564
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 18, Batch: 0, Loss: 0.153908
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 19, Batch: 0, Loss: 0.162365
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 20, Batch: 0, Loss: 0.160666
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 21, Batch: 0, Loss: 0.151272
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 22, Batch: 0, Loss: 0.158920
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 23, Batch: 0, Loss: 0.156037
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 24, Batch: 0, Loss: 0.154575
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 25, Batch: 0, Loss: 0.154042
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 26, Batch: 0, Loss: 0.162329
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 27, Batch: 0, Loss: 0.152688
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 28, Batch: 0, Loss: 0.151183
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 29, Batch: 0, Loss: 0.154523
Test Avg. Loss: 0.000014, Accuracy: 0.960500
training_time:: 167.78552770614624
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.15248131752014
time_baseline:: 116.21583437919617
curr_diff: 0 tensor(0.0281, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1298, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0080, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.2571, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0175, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1591, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0333, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1211, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0539, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.3580, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9982, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9846e-06, dtype=torch.float64)
secont condition:: tensor(1.9846e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9856e-06, dtype=torch.float64)
secont condition:: tensor(2.9856e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7171e-06, dtype=torch.float64)
secont condition:: tensor(1.7171e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8213e-06, dtype=torch.float64)
secont condition:: tensor(2.8213e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2919e-06, dtype=torch.float64)
secont condition:: tensor(1.2919e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0379e-07, dtype=torch.float64)
secont condition:: tensor(3.0379e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5018e-06, dtype=torch.float64)
secont condition:: tensor(1.5018e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5541e-06, dtype=torch.float64)
secont condition:: tensor(2.5541e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3121e-06, dtype=torch.float64)
secont condition:: tensor(2.3121e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1286e-06, dtype=torch.float64)
secont condition:: tensor(1.1286e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2116e-07, dtype=torch.float64)
secont condition:: tensor(5.2116e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0330e-06, dtype=torch.float64)
secont condition:: tensor(3.0330e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1106e-06, dtype=torch.float64)
secont condition:: tensor(1.1106e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0150e-07, dtype=torch.float64)
secont condition:: tensor(9.0150e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8333e-06, dtype=torch.float64)
secont condition:: tensor(2.8333e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1992e-06, dtype=torch.float64)
secont condition:: tensor(4.1992e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1628e-06, dtype=torch.float64)
secont condition:: tensor(7.1628e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0102e-06, dtype=torch.float64)
secont condition:: tensor(9.0102e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6651e-05, dtype=torch.float64)
secont condition:: tensor(1.6651e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8322e-05, dtype=torch.float64)
secont condition:: tensor(4.8322e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.8088e-05, dtype=torch.float64)
secont condition:: tensor(8.8088e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0012, dtype=torch.float64)
secont condition:: tensor(0.0012, dtype=torch.float64)
curr_secont condition:: tensor(0.0035, dtype=torch.float64)
secont condition:: tensor(0.0035, dtype=torch.float64)
curr_secont condition:: tensor(0.0099, dtype=torch.float64)
secont condition:: tensor(0.0099, dtype=torch.float64)
curr_secont condition:: tensor(0.0374, dtype=torch.float64)
secont condition:: tensor(0.0374, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.1597, dtype=torch.float64)
secont condition:: tensor(0.1597, dtype=torch.float64)
curr_secont condition:: tensor(0.0433, dtype=torch.float64)
secont condition:: tensor(0.0433, dtype=torch.float64)
curr_secont condition:: tensor(2.2362, dtype=torch.float64)
secont condition:: tensor(2.2362, dtype=torch.float64)
curr_secont condition:: tensor(2.3226, dtype=torch.float64)
secont condition:: tensor(2.3226, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.6784, dtype=torch.float64)
secont condition:: tensor(0.6784, dtype=torch.float64)
curr_secont condition:: tensor(0.2967, dtype=torch.float64)
secont condition:: tensor(0.2967, dtype=torch.float64)
curr_secont condition:: tensor(0.1840, dtype=torch.float64)
secont condition:: tensor(0.1840, dtype=torch.float64)
curr_secont condition:: tensor(0.1176, dtype=torch.float64)
secont condition:: tensor(0.1176, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0708, dtype=torch.float64)
secont condition:: tensor(0.0708, dtype=torch.float64)
curr_secont condition:: tensor(0.0557, dtype=torch.float64)
secont condition:: tensor(0.0557, dtype=torch.float64)
curr_secont condition:: tensor(0.0411, dtype=torch.float64)
secont condition:: tensor(0.0411, dtype=torch.float64)
curr_secont condition:: tensor(0.0348, dtype=torch.float64)
secont condition:: tensor(0.0348, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0290, dtype=torch.float64)
secont condition:: tensor(0.0290, dtype=torch.float64)
curr_secont condition:: tensor(0.0201, dtype=torch.float64)
secont condition:: tensor(0.0201, dtype=torch.float64)
curr_secont condition:: tensor(0.0196, dtype=torch.float64)
secont condition:: tensor(0.0196, dtype=torch.float64)
curr_secont condition:: tensor(0.0233, dtype=torch.float64)
secont condition:: tensor(0.0233, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0192, dtype=torch.float64)
secont condition:: tensor(0.0192, dtype=torch.float64)
curr_secont condition:: tensor(0.0174, dtype=torch.float64)
secont condition:: tensor(0.0174, dtype=torch.float64)
curr_secont condition:: tensor(0.0153, dtype=torch.float64)
secont condition:: tensor(0.0153, dtype=torch.float64)
curr_secont condition:: tensor(0.0159, dtype=torch.float64)
secont condition:: tensor(0.0159, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0192, dtype=torch.float64)
secont condition:: tensor(0.0192, dtype=torch.float64)
curr_secont condition:: tensor(0.0126, dtype=torch.float64)
secont condition:: tensor(0.0126, dtype=torch.float64)
curr_secont condition:: tensor(0.0102, dtype=torch.float64)
secont condition:: tensor(0.0102, dtype=torch.float64)
curr_secont condition:: tensor(0.0138, dtype=torch.float64)
secont condition:: tensor(0.0138, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0125, dtype=torch.float64)
secont condition:: tensor(0.0125, dtype=torch.float64)
curr_secont condition:: tensor(0.0154, dtype=torch.float64)
secont condition:: tensor(0.0154, dtype=torch.float64)
curr_secont condition:: tensor(0.0131, dtype=torch.float64)
secont condition:: tensor(0.0131, dtype=torch.float64)
curr_secont condition:: tensor(0.0124, dtype=torch.float64)
secont condition:: tensor(0.0124, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0103, dtype=torch.float64)
secont condition:: tensor(0.0103, dtype=torch.float64)
curr_secont condition:: tensor(0.0123, dtype=torch.float64)
secont condition:: tensor(0.0123, dtype=torch.float64)
curr_secont condition:: tensor(0.0114, dtype=torch.float64)
secont condition:: tensor(0.0114, dtype=torch.float64)
curr_secont condition:: tensor(0.0100, dtype=torch.float64)
secont condition:: tensor(0.0100, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0122, dtype=torch.float64)
secont condition:: tensor(0.0122, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0101, dtype=torch.float64)
secont condition:: tensor(0.0101, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0146, dtype=torch.float64)
secont condition:: tensor(0.0146, dtype=torch.float64)
curr_secont condition:: tensor(0.0074, dtype=torch.float64)
secont condition:: tensor(0.0074, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0107, dtype=torch.float64)
secont condition:: tensor(0.0107, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0092, dtype=torch.float64)
secont condition:: tensor(0.0092, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0080, dtype=torch.float64)
secont condition:: tensor(0.0080, dtype=torch.float64)
curr_secont condition:: tensor(0.0072, dtype=torch.float64)
secont condition:: tensor(0.0072, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0066, dtype=torch.float64)
secont condition:: tensor(0.0066, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0057, dtype=torch.float64)
secont condition:: tensor(0.0057, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0051, dtype=torch.float64)
secont condition:: tensor(0.0051, dtype=torch.float64)
curr_secont condition:: tensor(0.0062, dtype=torch.float64)
secont condition:: tensor(0.0062, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0055, dtype=torch.float64)
secont condition:: tensor(0.0055, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0051, dtype=torch.float64)
secont condition:: tensor(0.0051, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0040, dtype=torch.float64)
secont condition:: tensor(0.0040, dtype=torch.float64)
curr_secont condition:: tensor(0.0071, dtype=torch.float64)
secont condition:: tensor(0.0071, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0048, dtype=torch.float64)
secont condition:: tensor(0.0048, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0043, dtype=torch.float64)
secont condition:: tensor(0.0043, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0051, dtype=torch.float64)
secont condition:: tensor(0.0051, dtype=torch.float64)
curr_secont condition:: tensor(0.0031, dtype=torch.float64)
secont condition:: tensor(0.0031, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.168440580368042
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0076, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.7720e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0096, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0282, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0050, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.1274, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0079, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.2550, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0174, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1580, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0332, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1212, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0539, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.3551, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9982, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237579
Test Avg. Loss: 0.000024, Accuracy: 0.941200
Train - Epoch 1, Batch: 0, Loss: 0.264463
Test Avg. Loss: 0.000015, Accuracy: 0.955700
Train - Epoch 2, Batch: 0, Loss: 0.172976
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 3, Batch: 0, Loss: 0.157498
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.157088
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 5, Batch: 0, Loss: 0.172942
Test Avg. Loss: 0.000045, Accuracy: 0.842500
Train - Epoch 6, Batch: 0, Loss: 0.477810
Test Avg. Loss: 0.000023, Accuracy: 0.945400
Train - Epoch 7, Batch: 0, Loss: 0.241311
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 8, Batch: 0, Loss: 0.171198
Test Avg. Loss: 0.000015, Accuracy: 0.958100
Train - Epoch 9, Batch: 0, Loss: 0.155490
Test Avg. Loss: 0.000014, Accuracy: 0.958300
Train - Epoch 10, Batch: 0, Loss: 0.154406
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 11, Batch: 0, Loss: 0.155275
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 12, Batch: 0, Loss: 0.157503
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 13, Batch: 0, Loss: 0.150172
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 14, Batch: 0, Loss: 0.151252
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.157285
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 16, Batch: 0, Loss: 0.155275
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.150461
Test Avg. Loss: 0.000014, Accuracy: 0.960700
Train - Epoch 18, Batch: 0, Loss: 0.154001
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 19, Batch: 0, Loss: 0.152446
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 20, Batch: 0, Loss: 0.152806
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 21, Batch: 0, Loss: 0.152184
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.153821
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.151005
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 24, Batch: 0, Loss: 0.147461
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.153519
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 26, Batch: 0, Loss: 0.157781
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 27, Batch: 0, Loss: 0.144415
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 28, Batch: 0, Loss: 0.151748
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 29, Batch: 0, Loss: 0.157945
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 169.292001247406
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.10346484184265
time_baseline:: 116.17213249206543
curr_diff: 0 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0063, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0124, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0054, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0165, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8099e-08, dtype=torch.float64)
secont condition:: tensor(8.8099e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6302e-06, dtype=torch.float64)
secont condition:: tensor(1.6302e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4645e-07, dtype=torch.float64)
secont condition:: tensor(3.4645e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8011e-06, dtype=torch.float64)
secont condition:: tensor(1.8011e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3096e-07, dtype=torch.float64)
secont condition:: tensor(3.3096e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3531e-07, dtype=torch.float64)
secont condition:: tensor(6.3531e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0822e-06, dtype=torch.float64)
secont condition:: tensor(1.0822e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7964e-07, dtype=torch.float64)
secont condition:: tensor(2.7964e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6435e-07, dtype=torch.float64)
secont condition:: tensor(7.6435e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4090e-06, dtype=torch.float64)
secont condition:: tensor(1.4090e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6829e-07, dtype=torch.float64)
secont condition:: tensor(8.6829e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3677e-06, dtype=torch.float64)
secont condition:: tensor(1.3677e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6557e-07, dtype=torch.float64)
secont condition:: tensor(6.6557e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1589e-06, dtype=torch.float64)
secont condition:: tensor(2.1589e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2708e-06, dtype=torch.float64)
secont condition:: tensor(1.2708e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7059e-06, dtype=torch.float64)
secont condition:: tensor(1.7059e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8305e-06, dtype=torch.float64)
secont condition:: tensor(1.8305e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9773e-06, dtype=torch.float64)
secont condition:: tensor(2.9773e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6772e-06, dtype=torch.float64)
secont condition:: tensor(5.6772e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4242e-05, dtype=torch.float64)
secont condition:: tensor(1.4242e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5877e-05, dtype=torch.float64)
secont condition:: tensor(2.5877e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9599e-05, dtype=torch.float64)
secont condition:: tensor(5.9599e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9372e-05, dtype=torch.float64)
secont condition:: tensor(5.9372e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0013, dtype=torch.float64)
secont condition:: tensor(0.0013, dtype=torch.float64)
curr_secont condition:: tensor(0.0023, dtype=torch.float64)
secont condition:: tensor(0.0023, dtype=torch.float64)
curr_secont condition:: tensor(0.0030, dtype=torch.float64)
secont condition:: tensor(0.0030, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0009, dtype=torch.float64)
secont condition:: tensor(0.0009, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2283e-05, dtype=torch.float64)
secont condition:: tensor(8.2283e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1678e-05, dtype=torch.float64)
secont condition:: tensor(7.1678e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.8735e-05, dtype=torch.float64)
secont condition:: tensor(4.8735e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3736e-05, dtype=torch.float64)
secont condition:: tensor(5.3736e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0068e-05, dtype=torch.float64)
secont condition:: tensor(5.0068e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0955e-05, dtype=torch.float64)
secont condition:: tensor(4.0955e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0630e-05, dtype=torch.float64)
secont condition:: tensor(4.0630e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3598e-05, dtype=torch.float64)
secont condition:: tensor(3.3598e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1302e-05, dtype=torch.float64)
secont condition:: tensor(3.1302e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1360e-05, dtype=torch.float64)
secont condition:: tensor(3.1360e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1234e-05, dtype=torch.float64)
secont condition:: tensor(3.1234e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6042e-05, dtype=torch.float64)
secont condition:: tensor(2.6042e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7467e-05, dtype=torch.float64)
secont condition:: tensor(3.7467e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7386e-05, dtype=torch.float64)
secont condition:: tensor(2.7386e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4370e-05, dtype=torch.float64)
secont condition:: tensor(2.4370e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2485e-05, dtype=torch.float64)
secont condition:: tensor(2.2485e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4796e-05, dtype=torch.float64)
secont condition:: tensor(2.4796e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7572e-05, dtype=torch.float64)
secont condition:: tensor(2.7572e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2711e-05, dtype=torch.float64)
secont condition:: tensor(2.2711e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5201e-05, dtype=torch.float64)
secont condition:: tensor(2.5201e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4462e-05, dtype=torch.float64)
secont condition:: tensor(2.4462e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2039e-05, dtype=torch.float64)
secont condition:: tensor(2.2039e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3874e-05, dtype=torch.float64)
secont condition:: tensor(2.3874e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1588e-05, dtype=torch.float64)
secont condition:: tensor(2.1588e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5583e-05, dtype=torch.float64)
secont condition:: tensor(1.5583e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5822e-05, dtype=torch.float64)
secont condition:: tensor(1.5822e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2439e-05, dtype=torch.float64)
secont condition:: tensor(1.2439e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3669e-05, dtype=torch.float64)
secont condition:: tensor(2.3669e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2101e-05, dtype=torch.float64)
secont condition:: tensor(2.2101e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3794e-05, dtype=torch.float64)
secont condition:: tensor(2.3794e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4815e-05, dtype=torch.float64)
secont condition:: tensor(3.4815e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2956e-05, dtype=torch.float64)
secont condition:: tensor(2.2956e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6859e-05, dtype=torch.float64)
secont condition:: tensor(1.6859e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4751e-05, dtype=torch.float64)
secont condition:: tensor(1.4751e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6461e-05, dtype=torch.float64)
secont condition:: tensor(1.6461e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4257e-05, dtype=torch.float64)
secont condition:: tensor(1.4257e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9171e-06, dtype=torch.float64)
secont condition:: tensor(9.9171e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4584e-05, dtype=torch.float64)
secont condition:: tensor(1.4584e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9150e-06, dtype=torch.float64)
secont condition:: tensor(9.9150e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3849e-05, dtype=torch.float64)
secont condition:: tensor(1.3849e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2994e-05, dtype=torch.float64)
secont condition:: tensor(1.2994e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2964e-05, dtype=torch.float64)
secont condition:: tensor(1.2964e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3064e-05, dtype=torch.float64)
secont condition:: tensor(1.3064e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0104e-05, dtype=torch.float64)
secont condition:: tensor(1.0104e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0566e-05, dtype=torch.float64)
secont condition:: tensor(1.0566e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0622e-05, dtype=torch.float64)
secont condition:: tensor(1.0622e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1558e-05, dtype=torch.float64)
secont condition:: tensor(1.1558e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0668e-05, dtype=torch.float64)
secont condition:: tensor(1.0668e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.144858837127686
curr_diff: 0 tensor(5.5444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3893e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.1445e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9728e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0023, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0063, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0126, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0055, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0166, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
random set 4
python3 generate_rand_ids 0.0005  MNIST
tensor([12048, 48919, 15384, 38042, 59428, 31157, 58168, 51384,  9661,  8898,
        39242, 36218, 51151, 59472, 10702, 45524, 15573, 31742, 57045,  8280,
          860, 34538,  9324, 47341, 32366, 26480, 30708, 43384, 18810, 32638])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241797
Test Avg. Loss: 0.000025, Accuracy: 0.936200
Train - Epoch 1, Batch: 0, Loss: 0.272564
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.167353
Test Avg. Loss: 0.000015, Accuracy: 0.958200
Train - Epoch 3, Batch: 0, Loss: 0.159159
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 4, Batch: 0, Loss: 0.160027
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 5, Batch: 0, Loss: 0.163127
Test Avg. Loss: 0.000047, Accuracy: 0.832600
Train - Epoch 6, Batch: 0, Loss: 0.494489
Test Avg. Loss: 0.000034, Accuracy: 0.917500
Train - Epoch 7, Batch: 0, Loss: 0.360619
Test Avg. Loss: 0.000017, Accuracy: 0.952700
Train - Epoch 8, Batch: 0, Loss: 0.188779
Test Avg. Loss: 0.000015, Accuracy: 0.953700
Train - Epoch 9, Batch: 0, Loss: 0.168687
Test Avg. Loss: 0.000015, Accuracy: 0.955800
Train - Epoch 10, Batch: 0, Loss: 0.165168
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 11, Batch: 0, Loss: 0.161519
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 12, Batch: 0, Loss: 0.156471
Test Avg. Loss: 0.000014, Accuracy: 0.957400
Train - Epoch 13, Batch: 0, Loss: 0.161066
Test Avg. Loss: 0.000014, Accuracy: 0.958500
Train - Epoch 14, Batch: 0, Loss: 0.162179
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 15, Batch: 0, Loss: 0.160165
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 16, Batch: 0, Loss: 0.156797
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 17, Batch: 0, Loss: 0.158499
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 18, Batch: 0, Loss: 0.149105
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 19, Batch: 0, Loss: 0.151401
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 20, Batch: 0, Loss: 0.157131
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 21, Batch: 0, Loss: 0.153669
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 22, Batch: 0, Loss: 0.164258
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 23, Batch: 0, Loss: 0.150153
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 24, Batch: 0, Loss: 0.152249
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.151960
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.159557
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 27, Batch: 0, Loss: 0.156256
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 28, Batch: 0, Loss: 0.155289
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 29, Batch: 0, Loss: 0.156442
Test Avg. Loss: 0.000014, Accuracy: 0.961000
training_time:: 172.08415627479553
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.9216821193695
time_baseline:: 115.98680567741394
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5116e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0045, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0055, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.960900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4473e-07, dtype=torch.float64)
secont condition:: tensor(2.4473e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1406e-06, dtype=torch.float64)
secont condition:: tensor(1.1406e-06, dtype=torch.float64)
curr_secont condition:: tensor(-4.4102e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7353e-06, dtype=torch.float64)
secont condition:: tensor(3.7353e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5680e-07, dtype=torch.float64)
secont condition:: tensor(8.5680e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9449e-07, dtype=torch.float64)
secont condition:: tensor(3.9449e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7619e-07, dtype=torch.float64)
secont condition:: tensor(1.7619e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8435e-06, dtype=torch.float64)
secont condition:: tensor(1.8435e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5273e-07, dtype=torch.float64)
secont condition:: tensor(6.5273e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3938e-06, dtype=torch.float64)
secont condition:: tensor(1.3938e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2831e-06, dtype=torch.float64)
secont condition:: tensor(1.2831e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1986e-06, dtype=torch.float64)
secont condition:: tensor(2.1986e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4402e-06, dtype=torch.float64)
secont condition:: tensor(3.4402e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5995e-06, dtype=torch.float64)
secont condition:: tensor(2.5995e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6693e-06, dtype=torch.float64)
secont condition:: tensor(2.6693e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7762e-06, dtype=torch.float64)
secont condition:: tensor(1.7762e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6064e-06, dtype=torch.float64)
secont condition:: tensor(1.6064e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9044e-06, dtype=torch.float64)
secont condition:: tensor(2.9044e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5249e-06, dtype=torch.float64)
secont condition:: tensor(2.5249e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2640e-06, dtype=torch.float64)
secont condition:: tensor(3.2640e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5731e-06, dtype=torch.float64)
secont condition:: tensor(2.5731e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8821e-06, dtype=torch.float64)
secont condition:: tensor(3.8821e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3593e-06, dtype=torch.float64)
secont condition:: tensor(6.3593e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-05, dtype=torch.float64)
secont condition:: tensor(1.0228e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.4873e-07, dtype=torch.float64)
secont condition:: tensor(9.4873e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2743e-05, dtype=torch.float64)
secont condition:: tensor(9.2743e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1210e-05, dtype=torch.float64)
secont condition:: tensor(3.1210e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.1582e-06, dtype=torch.float64)
secont condition:: tensor(6.1582e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6558e-06, dtype=torch.float64)
secont condition:: tensor(2.6558e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4857e-06, dtype=torch.float64)
secont condition:: tensor(3.4857e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4750e-07, dtype=torch.float64)
secont condition:: tensor(6.4750e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.8021e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2591e-07, dtype=torch.float64)
secont condition:: tensor(2.2591e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3876e-06, dtype=torch.float64)
secont condition:: tensor(1.3876e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4908e-06, dtype=torch.float64)
secont condition:: tensor(3.4908e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5292e-06, dtype=torch.float64)
secont condition:: tensor(2.5292e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.3687e-07, dtype=torch.float64)
secont condition:: tensor(9.3687e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2538e-06, dtype=torch.float64)
secont condition:: tensor(4.2538e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4836e-06, dtype=torch.float64)
secont condition:: tensor(2.4836e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9646e-06, dtype=torch.float64)
secont condition:: tensor(2.9646e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6555e-06, dtype=torch.float64)
secont condition:: tensor(1.6555e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3909e-06, dtype=torch.float64)
secont condition:: tensor(2.3909e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5780e-06, dtype=torch.float64)
secont condition:: tensor(3.5780e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7901e-06, dtype=torch.float64)
secont condition:: tensor(3.7901e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6706e-06, dtype=torch.float64)
secont condition:: tensor(1.6706e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3544e-06, dtype=torch.float64)
secont condition:: tensor(4.3544e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2302e-06, dtype=torch.float64)
secont condition:: tensor(2.2302e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2938e-06, dtype=torch.float64)
secont condition:: tensor(1.2938e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5003e-06, dtype=torch.float64)
secont condition:: tensor(1.5003e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4301e-06, dtype=torch.float64)
secont condition:: tensor(2.4301e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6427e-06, dtype=torch.float64)
secont condition:: tensor(4.6427e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0280e-06, dtype=torch.float64)
secont condition:: tensor(2.0280e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7387e-06, dtype=torch.float64)
secont condition:: tensor(1.7387e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7850e-06, dtype=torch.float64)
secont condition:: tensor(1.7850e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6676e-06, dtype=torch.float64)
secont condition:: tensor(2.6676e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3724e-06, dtype=torch.float64)
secont condition:: tensor(2.3724e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7717e-06, dtype=torch.float64)
secont condition:: tensor(3.7717e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0616e-06, dtype=torch.float64)
secont condition:: tensor(2.0616e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0817e-06, dtype=torch.float64)
secont condition:: tensor(2.0817e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0736e-06, dtype=torch.float64)
secont condition:: tensor(3.0736e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4221e-06, dtype=torch.float64)
secont condition:: tensor(3.4221e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6256e-06, dtype=torch.float64)
secont condition:: tensor(3.6256e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6596e-06, dtype=torch.float64)
secont condition:: tensor(3.6596e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4476e-06, dtype=torch.float64)
secont condition:: tensor(2.4476e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5089e-06, dtype=torch.float64)
secont condition:: tensor(2.5089e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7010e-06, dtype=torch.float64)
secont condition:: tensor(2.7010e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2068e-06, dtype=torch.float64)
secont condition:: tensor(3.2068e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6889e-06, dtype=torch.float64)
secont condition:: tensor(2.6889e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7440e-06, dtype=torch.float64)
secont condition:: tensor(2.7440e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.9835e-06, dtype=torch.float64)
secont condition:: tensor(2.9835e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6965e-06, dtype=torch.float64)
secont condition:: tensor(2.6965e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3601e-06, dtype=torch.float64)
secont condition:: tensor(2.3601e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6057e-06, dtype=torch.float64)
secont condition:: tensor(2.6057e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2889e-06, dtype=torch.float64)
secont condition:: tensor(2.2889e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0917e-06, dtype=torch.float64)
secont condition:: tensor(2.0917e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3134e-06, dtype=torch.float64)
secont condition:: tensor(2.3134e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3982e-06, dtype=torch.float64)
secont condition:: tensor(2.3982e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5751e-06, dtype=torch.float64)
secont condition:: tensor(2.5751e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.052673816680908
curr_diff: 0 tensor(3.3882e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.0210e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.7137e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.7756e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.0699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6711e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0046, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0057, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234287
Test Avg. Loss: 0.000026, Accuracy: 0.937900
Train - Epoch 1, Batch: 0, Loss: 0.267689
Test Avg. Loss: 0.000016, Accuracy: 0.956100
Train - Epoch 2, Batch: 0, Loss: 0.172963
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 3, Batch: 0, Loss: 0.160667
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 4, Batch: 0, Loss: 0.158694
Test Avg. Loss: 0.000015, Accuracy: 0.953600
Train - Epoch 5, Batch: 0, Loss: 0.166410
Test Avg. Loss: 0.000035, Accuracy: 0.882900
Train - Epoch 6, Batch: 0, Loss: 0.374389
Test Avg. Loss: 0.000029, Accuracy: 0.940200
Train - Epoch 7, Batch: 0, Loss: 0.305265
Test Avg. Loss: 0.000016, Accuracy: 0.954200
Train - Epoch 8, Batch: 0, Loss: 0.180161
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 9, Batch: 0, Loss: 0.171254
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 10, Batch: 0, Loss: 0.167659
Test Avg. Loss: 0.000014, Accuracy: 0.957800
Train - Epoch 11, Batch: 0, Loss: 0.160295
Test Avg. Loss: 0.000014, Accuracy: 0.958200
Train - Epoch 12, Batch: 0, Loss: 0.156613
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 13, Batch: 0, Loss: 0.156014
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 14, Batch: 0, Loss: 0.160090
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.154646
Test Avg. Loss: 0.000014, Accuracy: 0.959700
Train - Epoch 16, Batch: 0, Loss: 0.160188
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 17, Batch: 0, Loss: 0.151420
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 18, Batch: 0, Loss: 0.156888
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 19, Batch: 0, Loss: 0.151919
Test Avg. Loss: 0.000014, Accuracy: 0.960400
Train - Epoch 20, Batch: 0, Loss: 0.151667
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 21, Batch: 0, Loss: 0.159913
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 22, Batch: 0, Loss: 0.153201
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 23, Batch: 0, Loss: 0.153874
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 24, Batch: 0, Loss: 0.155341
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 25, Batch: 0, Loss: 0.150950
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 26, Batch: 0, Loss: 0.153805
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 27, Batch: 0, Loss: 0.149917
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 28, Batch: 0, Loss: 0.152678
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 29, Batch: 0, Loss: 0.153242
Test Avg. Loss: 0.000014, Accuracy: 0.961300
training_time:: 169.20883679389954
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.15838360786438
time_baseline:: 116.22288608551025
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0058, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0141, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0052, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0178, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6488e-06, dtype=torch.float64)
secont condition:: tensor(1.6488e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1419e-06, dtype=torch.float64)
secont condition:: tensor(4.1419e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1984e-06, dtype=torch.float64)
secont condition:: tensor(2.1984e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0330e-06, dtype=torch.float64)
secont condition:: tensor(7.0330e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6060e-06, dtype=torch.float64)
secont condition:: tensor(2.6060e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4689e-06, dtype=torch.float64)
secont condition:: tensor(1.4689e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0694e-07, dtype=torch.float64)
secont condition:: tensor(5.0694e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8215e-07, dtype=torch.float64)
secont condition:: tensor(6.8215e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6628e-07, dtype=torch.float64)
secont condition:: tensor(5.6628e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0893e-07, dtype=torch.float64)
secont condition:: tensor(7.0893e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5096e-07, dtype=torch.float64)
secont condition:: tensor(6.5096e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9312e-06, dtype=torch.float64)
secont condition:: tensor(2.9312e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1673e-06, dtype=torch.float64)
secont condition:: tensor(3.1673e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3163e-06, dtype=torch.float64)
secont condition:: tensor(6.3163e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1062e-06, dtype=torch.float64)
secont condition:: tensor(6.1062e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0575e-05, dtype=torch.float64)
secont condition:: tensor(1.0575e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2572e-05, dtype=torch.float64)
secont condition:: tensor(1.2572e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4423e-05, dtype=torch.float64)
secont condition:: tensor(2.4423e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5111e-05, dtype=torch.float64)
secont condition:: tensor(3.5111e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9154e-05, dtype=torch.float64)
secont condition:: tensor(5.9154e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.9111e-05, dtype=torch.float64)
secont condition:: tensor(8.9111e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0048, dtype=torch.float64)
secont condition:: tensor(0.0048, dtype=torch.float64)
curr_secont condition:: tensor(0.0023, dtype=torch.float64)
secont condition:: tensor(0.0023, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(8.4878e-05, dtype=torch.float64)
secont condition:: tensor(8.4878e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7789e-05, dtype=torch.float64)
secont condition:: tensor(4.7789e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4038e-05, dtype=torch.float64)
secont condition:: tensor(4.4038e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8531e-05, dtype=torch.float64)
secont condition:: tensor(2.8531e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6636e-05, dtype=torch.float64)
secont condition:: tensor(2.6636e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6690e-05, dtype=torch.float64)
secont condition:: tensor(2.6690e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.3039e-05, dtype=torch.float64)
secont condition:: tensor(4.3039e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0474e-05, dtype=torch.float64)
secont condition:: tensor(5.0474e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.7732e-05, dtype=torch.float64)
secont condition:: tensor(4.7732e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2645e-05, dtype=torch.float64)
secont condition:: tensor(4.2645e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.9574e-05, dtype=torch.float64)
secont condition:: tensor(3.9574e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8654e-05, dtype=torch.float64)
secont condition:: tensor(3.8654e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.6621e-05, dtype=torch.float64)
secont condition:: tensor(3.6621e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.8447e-05, dtype=torch.float64)
secont condition:: tensor(3.8447e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4314e-05, dtype=torch.float64)
secont condition:: tensor(3.4314e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7068e-05, dtype=torch.float64)
secont condition:: tensor(1.7068e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6689e-05, dtype=torch.float64)
secont condition:: tensor(2.6689e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.1459e-05, dtype=torch.float64)
secont condition:: tensor(3.1459e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4413e-05, dtype=torch.float64)
secont condition:: tensor(2.4413e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2730e-05, dtype=torch.float64)
secont condition:: tensor(2.2730e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5944e-05, dtype=torch.float64)
secont condition:: tensor(2.5944e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6439e-05, dtype=torch.float64)
secont condition:: tensor(2.6439e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0792e-05, dtype=torch.float64)
secont condition:: tensor(2.0792e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3595e-05, dtype=torch.float64)
secont condition:: tensor(2.3595e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0961e-05, dtype=torch.float64)
secont condition:: tensor(2.0961e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5145e-05, dtype=torch.float64)
secont condition:: tensor(1.5145e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.3343e-05, dtype=torch.float64)
secont condition:: tensor(1.3343e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3465e-05, dtype=torch.float64)
secont condition:: tensor(1.3465e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6481e-05, dtype=torch.float64)
secont condition:: tensor(1.6481e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6185e-05, dtype=torch.float64)
secont condition:: tensor(1.6185e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2264e-05, dtype=torch.float64)
secont condition:: tensor(1.2264e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7770e-05, dtype=torch.float64)
secont condition:: tensor(1.7770e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8678e-05, dtype=torch.float64)
secont condition:: tensor(1.8678e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0157e-06, dtype=torch.float64)
secont condition:: tensor(8.0157e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1136e-06, dtype=torch.float64)
secont condition:: tensor(8.1136e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2930e-06, dtype=torch.float64)
secont condition:: tensor(9.2930e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0331e-05, dtype=torch.float64)
secont condition:: tensor(1.0331e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1559e-05, dtype=torch.float64)
secont condition:: tensor(1.1559e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0636e-05, dtype=torch.float64)
secont condition:: tensor(1.0636e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1303e-06, dtype=torch.float64)
secont condition:: tensor(9.1303e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3885e-06, dtype=torch.float64)
secont condition:: tensor(9.3885e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6710e-06, dtype=torch.float64)
secont condition:: tensor(8.6710e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1002e-06, dtype=torch.float64)
secont condition:: tensor(9.1002e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9763e-06, dtype=torch.float64)
secont condition:: tensor(7.9763e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7802e-06, dtype=torch.float64)
secont condition:: tensor(6.7802e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9126e-06, dtype=torch.float64)
secont condition:: tensor(8.9126e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2869e-06, dtype=torch.float64)
secont condition:: tensor(9.2869e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8875e-06, dtype=torch.float64)
secont condition:: tensor(7.8875e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3373e-06, dtype=torch.float64)
secont condition:: tensor(8.3373e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9446e-06, dtype=torch.float64)
secont condition:: tensor(8.9446e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0985e-06, dtype=torch.float64)
secont condition:: tensor(9.0985e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.293137788772583
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0861e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6198e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2011e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0061, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0142, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0073, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0053, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0180, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961500
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.240040
Test Avg. Loss: 0.000025, Accuracy: 0.938500
Train - Epoch 1, Batch: 0, Loss: 0.267278
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 2, Batch: 0, Loss: 0.167559
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.164485
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 4, Batch: 0, Loss: 0.156367
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 5, Batch: 0, Loss: 0.158450
Test Avg. Loss: 0.000015, Accuracy: 0.955500
Train - Epoch 6, Batch: 0, Loss: 0.161551
Test Avg. Loss: 0.000043, Accuracy: 0.848700
Train - Epoch 7, Batch: 0, Loss: 0.450781
Test Avg. Loss: 0.000022, Accuracy: 0.948900
Train - Epoch 8, Batch: 0, Loss: 0.235149
Test Avg. Loss: 0.000016, Accuracy: 0.957200
Train - Epoch 9, Batch: 0, Loss: 0.174101
Test Avg. Loss: 0.000015, Accuracy: 0.957800
Train - Epoch 10, Batch: 0, Loss: 0.171116
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 11, Batch: 0, Loss: 0.163934
Test Avg. Loss: 0.000014, Accuracy: 0.957900
Train - Epoch 12, Batch: 0, Loss: 0.157989
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.160381
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 14, Batch: 0, Loss: 0.154199
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 15, Batch: 0, Loss: 0.158802
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 16, Batch: 0, Loss: 0.150062
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.152900
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 18, Batch: 0, Loss: 0.156232
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 19, Batch: 0, Loss: 0.153247
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 20, Batch: 0, Loss: 0.149955
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 21, Batch: 0, Loss: 0.151055
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.152148
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 23, Batch: 0, Loss: 0.150142
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.155837
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.150717
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.154349
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.157067
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 28, Batch: 0, Loss: 0.155545
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 29, Batch: 0, Loss: 0.149085
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 167.86916518211365
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 118.448725938797
time_baseline:: 118.51921558380127
curr_diff: 0 tensor(0.0224, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0053, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.2613, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0136, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.3449, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0154, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1542, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0344, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1193, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0634, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.4811, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9967, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5939e-07, dtype=torch.float64)
secont condition:: tensor(6.5939e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5046e-06, dtype=torch.float64)
secont condition:: tensor(2.5046e-06, dtype=torch.float64)
curr_secont condition:: tensor(-9.6881e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4033e-06, dtype=torch.float64)
secont condition:: tensor(9.4033e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4481e-06, dtype=torch.float64)
secont condition:: tensor(1.4481e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1408e-06, dtype=torch.float64)
secont condition:: tensor(1.1408e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1427e-07, dtype=torch.float64)
secont condition:: tensor(4.1427e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7348e-07, dtype=torch.float64)
secont condition:: tensor(2.7348e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0991e-07, dtype=torch.float64)
secont condition:: tensor(2.0991e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0469e-06, dtype=torch.float64)
secont condition:: tensor(1.0469e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1946e-06, dtype=torch.float64)
secont condition:: tensor(1.1946e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4831e-06, dtype=torch.float64)
secont condition:: tensor(2.4831e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3568e-06, dtype=torch.float64)
secont condition:: tensor(1.3568e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4019e-06, dtype=torch.float64)
secont condition:: tensor(1.4019e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6407e-06, dtype=torch.float64)
secont condition:: tensor(5.6407e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5474e-06, dtype=torch.float64)
secont condition:: tensor(4.5474e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0524e-05, dtype=torch.float64)
secont condition:: tensor(1.0524e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0348e-05, dtype=torch.float64)
secont condition:: tensor(2.0348e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.3377e-05, dtype=torch.float64)
secont condition:: tensor(3.3377e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0601e-05, dtype=torch.float64)
secont condition:: tensor(6.0601e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0014, dtype=torch.float64)
secont condition:: tensor(0.0014, dtype=torch.float64)
curr_secont condition:: tensor(0.0040, dtype=torch.float64)
secont condition:: tensor(0.0040, dtype=torch.float64)
curr_secont condition:: tensor(0.0117, dtype=torch.float64)
secont condition:: tensor(0.0117, dtype=torch.float64)
curr_secont condition:: tensor(0.0421, dtype=torch.float64)
secont condition:: tensor(0.0421, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.1739, dtype=torch.float64)
secont condition:: tensor(0.1739, dtype=torch.float64)
curr_secont condition:: tensor(-0.1668, dtype=torch.float64)
curr_secont condition:: tensor(3.1731, dtype=torch.float64)
secont condition:: tensor(3.1731, dtype=torch.float64)
curr_secont condition:: tensor(1.2139, dtype=torch.float64)
secont condition:: tensor(1.2139, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.6500, dtype=torch.float64)
secont condition:: tensor(0.6500, dtype=torch.float64)
curr_secont condition:: tensor(0.2578, dtype=torch.float64)
secont condition:: tensor(0.2578, dtype=torch.float64)
curr_secont condition:: tensor(0.1714, dtype=torch.float64)
secont condition:: tensor(0.1714, dtype=torch.float64)
curr_secont condition:: tensor(0.1103, dtype=torch.float64)
secont condition:: tensor(0.1103, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0636, dtype=torch.float64)
secont condition:: tensor(0.0636, dtype=torch.float64)
curr_secont condition:: tensor(0.0459, dtype=torch.float64)
secont condition:: tensor(0.0459, dtype=torch.float64)
curr_secont condition:: tensor(0.0333, dtype=torch.float64)
secont condition:: tensor(0.0333, dtype=torch.float64)
curr_secont condition:: tensor(0.0230, dtype=torch.float64)
secont condition:: tensor(0.0230, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0273, dtype=torch.float64)
secont condition:: tensor(0.0273, dtype=torch.float64)
curr_secont condition:: tensor(0.0205, dtype=torch.float64)
secont condition:: tensor(0.0205, dtype=torch.float64)
curr_secont condition:: tensor(0.0198, dtype=torch.float64)
secont condition:: tensor(0.0198, dtype=torch.float64)
curr_secont condition:: tensor(0.0177, dtype=torch.float64)
secont condition:: tensor(0.0177, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0166, dtype=torch.float64)
secont condition:: tensor(0.0166, dtype=torch.float64)
curr_secont condition:: tensor(0.0181, dtype=torch.float64)
secont condition:: tensor(0.0181, dtype=torch.float64)
curr_secont condition:: tensor(0.0091, dtype=torch.float64)
secont condition:: tensor(0.0091, dtype=torch.float64)
curr_secont condition:: tensor(0.0151, dtype=torch.float64)
secont condition:: tensor(0.0151, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0147, dtype=torch.float64)
secont condition:: tensor(0.0147, dtype=torch.float64)
curr_secont condition:: tensor(0.0127, dtype=torch.float64)
secont condition:: tensor(0.0127, dtype=torch.float64)
curr_secont condition:: tensor(0.0131, dtype=torch.float64)
secont condition:: tensor(0.0131, dtype=torch.float64)
curr_secont condition:: tensor(0.0102, dtype=torch.float64)
secont condition:: tensor(0.0102, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0100, dtype=torch.float64)
secont condition:: tensor(0.0100, dtype=torch.float64)
curr_secont condition:: tensor(0.0144, dtype=torch.float64)
secont condition:: tensor(0.0144, dtype=torch.float64)
curr_secont condition:: tensor(0.0113, dtype=torch.float64)
secont condition:: tensor(0.0113, dtype=torch.float64)
curr_secont condition:: tensor(0.0131, dtype=torch.float64)
secont condition:: tensor(0.0131, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0085, dtype=torch.float64)
secont condition:: tensor(0.0085, dtype=torch.float64)
curr_secont condition:: tensor(0.0098, dtype=torch.float64)
secont condition:: tensor(0.0098, dtype=torch.float64)
curr_secont condition:: tensor(0.0109, dtype=torch.float64)
secont condition:: tensor(0.0109, dtype=torch.float64)
curr_secont condition:: tensor(0.0108, dtype=torch.float64)
secont condition:: tensor(0.0108, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0126, dtype=torch.float64)
secont condition:: tensor(0.0126, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0088, dtype=torch.float64)
secont condition:: tensor(0.0088, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0085, dtype=torch.float64)
secont condition:: tensor(0.0085, dtype=torch.float64)
curr_secont condition:: tensor(0.0135, dtype=torch.float64)
secont condition:: tensor(0.0135, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0097, dtype=torch.float64)
secont condition:: tensor(0.0097, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0047, dtype=torch.float64)
secont condition:: tensor(0.0047, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0090, dtype=torch.float64)
secont condition:: tensor(0.0090, dtype=torch.float64)
curr_secont condition:: tensor(0.0032, dtype=torch.float64)
secont condition:: tensor(0.0032, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0093, dtype=torch.float64)
secont condition:: tensor(0.0093, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0101, dtype=torch.float64)
secont condition:: tensor(0.0101, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0070, dtype=torch.float64)
secont condition:: tensor(0.0070, dtype=torch.float64)
curr_secont condition:: tensor(0.0084, dtype=torch.float64)
secont condition:: tensor(0.0084, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0098, dtype=torch.float64)
secont condition:: tensor(0.0098, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0071, dtype=torch.float64)
secont condition:: tensor(0.0071, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0051, dtype=torch.float64)
secont condition:: tensor(0.0051, dtype=torch.float64)
curr_secont condition:: tensor(0.0074, dtype=torch.float64)
secont condition:: tensor(0.0074, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0045, dtype=torch.float64)
secont condition:: tensor(0.0045, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0073, dtype=torch.float64)
secont condition:: tensor(0.0073, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0032, dtype=torch.float64)
secont condition:: tensor(0.0032, dtype=torch.float64)
curr_secont condition:: tensor(0.0113, dtype=torch.float64)
secont condition:: tensor(0.0113, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.062641143798828
curr_diff: 0 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0065, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0103, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0033, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0129, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0226, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0054, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.2650, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0139, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.3450, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0155, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.1548, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0345, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.1201, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0637, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.4836, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(0.9967, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.241150
Test Avg. Loss: 0.000023, Accuracy: 0.942800
Train - Epoch 1, Batch: 0, Loss: 0.255341
Test Avg. Loss: 0.000015, Accuracy: 0.956800
Train - Epoch 2, Batch: 0, Loss: 0.162700
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.160064
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 4, Batch: 0, Loss: 0.160192
Test Avg. Loss: 0.000015, Accuracy: 0.956100
Train - Epoch 5, Batch: 0, Loss: 0.171440
Test Avg. Loss: 0.000046, Accuracy: 0.836800
Train - Epoch 6, Batch: 0, Loss: 0.499043
Test Avg. Loss: 0.000022, Accuracy: 0.946300
Train - Epoch 7, Batch: 0, Loss: 0.242013
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 8, Batch: 0, Loss: 0.171100
Test Avg. Loss: 0.000015, Accuracy: 0.958500
Train - Epoch 9, Batch: 0, Loss: 0.157897
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 10, Batch: 0, Loss: 0.165238
Test Avg. Loss: 0.000014, Accuracy: 0.959000
Train - Epoch 11, Batch: 0, Loss: 0.157995
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 12, Batch: 0, Loss: 0.160650
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 13, Batch: 0, Loss: 0.153805
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 14, Batch: 0, Loss: 0.150134
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 15, Batch: 0, Loss: 0.157430
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 16, Batch: 0, Loss: 0.156284
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 17, Batch: 0, Loss: 0.158420
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 18, Batch: 0, Loss: 0.152912
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 19, Batch: 0, Loss: 0.152246
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 20, Batch: 0, Loss: 0.153377
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 21, Batch: 0, Loss: 0.148490
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 22, Batch: 0, Loss: 0.152747
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 23, Batch: 0, Loss: 0.151548
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 24, Batch: 0, Loss: 0.151844
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.158317
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 26, Batch: 0, Loss: 0.153021
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.158065
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 28, Batch: 0, Loss: 0.157113
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 29, Batch: 0, Loss: 0.152498
Test Avg. Loss: 0.000014, Accuracy: 0.962200
training_time:: 171.50611305236816
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.03945636749268
time_baseline:: 115.10504484176636
curr_diff: 0 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0024, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0144, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0300, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0143, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0137, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0397, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6878e-06, dtype=torch.float64)
secont condition:: tensor(2.6878e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7725e-06, dtype=torch.float64)
secont condition:: tensor(2.7725e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.0995e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9393e-06, dtype=torch.float64)
secont condition:: tensor(6.9393e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9939e-06, dtype=torch.float64)
secont condition:: tensor(1.9939e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0889e-06, dtype=torch.float64)
secont condition:: tensor(1.0889e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2220e-06, dtype=torch.float64)
secont condition:: tensor(9.2220e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2674e-06, dtype=torch.float64)
secont condition:: tensor(1.2674e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8616e-06, dtype=torch.float64)
secont condition:: tensor(4.8616e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5533e-07, dtype=torch.float64)
secont condition:: tensor(8.5533e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3854e-06, dtype=torch.float64)
secont condition:: tensor(2.3854e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4417e-06, dtype=torch.float64)
secont condition:: tensor(4.4417e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4931e-06, dtype=torch.float64)
secont condition:: tensor(2.4931e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8770e-06, dtype=torch.float64)
secont condition:: tensor(1.8770e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6400e-06, dtype=torch.float64)
secont condition:: tensor(3.6400e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9008e-06, dtype=torch.float64)
secont condition:: tensor(3.9008e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0579e-05, dtype=torch.float64)
secont condition:: tensor(1.0579e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5410e-05, dtype=torch.float64)
secont condition:: tensor(1.5410e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.7475e-05, dtype=torch.float64)
secont condition:: tensor(2.7475e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8790e-05, dtype=torch.float64)
secont condition:: tensor(6.8790e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0138, dtype=torch.float64)
secont condition:: tensor(0.0138, dtype=torch.float64)
curr_secont condition:: tensor(0.0155, dtype=torch.float64)
secont condition:: tensor(0.0155, dtype=torch.float64)
curr_secont condition:: tensor(0.0200, dtype=torch.float64)
secont condition:: tensor(0.0200, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0055, dtype=torch.float64)
secont condition:: tensor(0.0055, dtype=torch.float64)
curr_secont condition:: tensor(0.0016, dtype=torch.float64)
secont condition:: tensor(0.0016, dtype=torch.float64)
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.3185e-05, dtype=torch.float64)
secont condition:: tensor(9.3185e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.1082e-05, dtype=torch.float64)
secont condition:: tensor(7.1082e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7392e-05, dtype=torch.float64)
secont condition:: tensor(8.7392e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9500e-05, dtype=torch.float64)
secont condition:: tensor(7.9500e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7342e-05, dtype=torch.float64)
secont condition:: tensor(7.7342e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5588e-05, dtype=torch.float64)
secont condition:: tensor(7.5588e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4196e-05, dtype=torch.float64)
secont condition:: tensor(8.4196e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9541e-05, dtype=torch.float64)
secont condition:: tensor(6.9541e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4176e-05, dtype=torch.float64)
secont condition:: tensor(6.4176e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2103e-05, dtype=torch.float64)
secont condition:: tensor(8.2103e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4775e-05, dtype=torch.float64)
secont condition:: tensor(8.4775e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6647e-05, dtype=torch.float64)
secont condition:: tensor(5.6647e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3472e-05, dtype=torch.float64)
secont condition:: tensor(7.3472e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8864e-05, dtype=torch.float64)
secont condition:: tensor(6.8864e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7985e-05, dtype=torch.float64)
secont condition:: tensor(6.7985e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.0247e-05, dtype=torch.float64)
secont condition:: tensor(7.0247e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2149e-05, dtype=torch.float64)
secont condition:: tensor(5.2149e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6651e-05, dtype=torch.float64)
secont condition:: tensor(5.6651e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0601e-05, dtype=torch.float64)
secont condition:: tensor(7.0601e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.1572e-05, dtype=torch.float64)
secont condition:: tensor(5.1572e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.19852566719055
curr_diff: 0 tensor(9.3330e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3964e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5374e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7798e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5123e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0019, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0025, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0147, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0302, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0144, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0039, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0138, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0057, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0401, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.243656
Test Avg. Loss: 0.000023, Accuracy: 0.941700
Train - Epoch 1, Batch: 0, Loss: 0.249160
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.167542
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.161960
Test Avg. Loss: 0.000014, Accuracy: 0.957500
Train - Epoch 4, Batch: 0, Loss: 0.157403
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 5, Batch: 0, Loss: 0.165768
Test Avg. Loss: 0.000037, Accuracy: 0.873800
Train - Epoch 6, Batch: 0, Loss: 0.401529
Test Avg. Loss: 0.000029, Accuracy: 0.938300
Train - Epoch 7, Batch: 0, Loss: 0.307264
Test Avg. Loss: 0.000016, Accuracy: 0.954600
Train - Epoch 8, Batch: 0, Loss: 0.182296
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 9, Batch: 0, Loss: 0.169792
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 10, Batch: 0, Loss: 0.165559
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.159318
Test Avg. Loss: 0.000014, Accuracy: 0.958700
Train - Epoch 12, Batch: 0, Loss: 0.162591
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 13, Batch: 0, Loss: 0.160860
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 14, Batch: 0, Loss: 0.156164
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 15, Batch: 0, Loss: 0.159680
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 16, Batch: 0, Loss: 0.156676
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 17, Batch: 0, Loss: 0.151847
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 18, Batch: 0, Loss: 0.154756
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.153674
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 20, Batch: 0, Loss: 0.152304
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.155942
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 22, Batch: 0, Loss: 0.151927
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.155442
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.149540
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 25, Batch: 0, Loss: 0.150886
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.152428
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 27, Batch: 0, Loss: 0.149903
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.146381
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 29, Batch: 0, Loss: 0.159682
Test Avg. Loss: 0.000014, Accuracy: 0.962000
training_time:: 172.9946300983429
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.58454847335815
time_baseline:: 115.6514847278595
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0091, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0123, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961800
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1902e-07, dtype=torch.float64)
secont condition:: tensor(1.1902e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5095e-06, dtype=torch.float64)
secont condition:: tensor(1.5095e-06, dtype=torch.float64)
curr_secont condition:: tensor(-5.8664e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4144e-05, dtype=torch.float64)
secont condition:: tensor(1.4144e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2811e-06, dtype=torch.float64)
secont condition:: tensor(1.2811e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2051e-06, dtype=torch.float64)
secont condition:: tensor(1.2051e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0806e-07, dtype=torch.float64)
secont condition:: tensor(8.0806e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4748e-07, dtype=torch.float64)
secont condition:: tensor(4.4748e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8084e-07, dtype=torch.float64)
secont condition:: tensor(7.8084e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0295e-06, dtype=torch.float64)
secont condition:: tensor(2.0295e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7807e-06, dtype=torch.float64)
secont condition:: tensor(2.7807e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2677e-06, dtype=torch.float64)
secont condition:: tensor(3.2677e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5431e-06, dtype=torch.float64)
secont condition:: tensor(2.5431e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1994e-06, dtype=torch.float64)
secont condition:: tensor(2.1994e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4930e-06, dtype=torch.float64)
secont condition:: tensor(2.4930e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8495e-06, dtype=torch.float64)
secont condition:: tensor(4.8495e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1519e-06, dtype=torch.float64)
secont condition:: tensor(4.1519e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8863e-06, dtype=torch.float64)
secont condition:: tensor(5.8863e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.2976e-06, dtype=torch.float64)
secont condition:: tensor(5.2976e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0204e-05, dtype=torch.float64)
secont condition:: tensor(1.0204e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8051e-06, dtype=torch.float64)
secont condition:: tensor(9.8051e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0001e-05, dtype=torch.float64)
secont condition:: tensor(1.0001e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0221e-05, dtype=torch.float64)
secont condition:: tensor(1.0221e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3323e-06, dtype=torch.float64)
secont condition:: tensor(4.3323e-06, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(-0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(9.2917e-05, dtype=torch.float64)
secont condition:: tensor(9.2917e-05, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1079e-05, dtype=torch.float64)
secont condition:: tensor(8.1079e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0607e-05, dtype=torch.float64)
secont condition:: tensor(4.0607e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2606e-05, dtype=torch.float64)
secont condition:: tensor(3.2606e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3787e-05, dtype=torch.float64)
secont condition:: tensor(2.3787e-05, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5366e-05, dtype=torch.float64)
secont condition:: tensor(2.5366e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6402e-05, dtype=torch.float64)
secont condition:: tensor(2.6402e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2626e-05, dtype=torch.float64)
secont condition:: tensor(2.2626e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6137e-05, dtype=torch.float64)
secont condition:: tensor(2.6137e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3358e-05, dtype=torch.float64)
secont condition:: tensor(2.3358e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5100e-05, dtype=torch.float64)
secont condition:: tensor(1.5100e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4643e-05, dtype=torch.float64)
secont condition:: tensor(1.4643e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8436e-05, dtype=torch.float64)
secont condition:: tensor(1.8436e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6115e-05, dtype=torch.float64)
secont condition:: tensor(1.6115e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.0824e-05, dtype=torch.float64)
secont condition:: tensor(2.0824e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1063e-05, dtype=torch.float64)
secont condition:: tensor(2.1063e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.1299e-05, dtype=torch.float64)
secont condition:: tensor(2.1299e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4663e-05, dtype=torch.float64)
secont condition:: tensor(1.4663e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4586e-05, dtype=torch.float64)
secont condition:: tensor(1.4586e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4209e-05, dtype=torch.float64)
secont condition:: tensor(1.4209e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8848e-06, dtype=torch.float64)
secont condition:: tensor(9.8848e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8818e-05, dtype=torch.float64)
secont condition:: tensor(1.8818e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1535e-05, dtype=torch.float64)
secont condition:: tensor(1.1535e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.8794e-06, dtype=torch.float64)
secont condition:: tensor(8.8794e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2894e-05, dtype=torch.float64)
secont condition:: tensor(1.2894e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4412e-06, dtype=torch.float64)
secont condition:: tensor(9.4412e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0338e-05, dtype=torch.float64)
secont condition:: tensor(1.0338e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.4088e-05, dtype=torch.float64)
secont condition:: tensor(1.4088e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5872e-05, dtype=torch.float64)
secont condition:: tensor(1.5872e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1796e-05, dtype=torch.float64)
secont condition:: tensor(1.1796e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7311e-05, dtype=torch.float64)
secont condition:: tensor(1.7311e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8470e-05, dtype=torch.float64)
secont condition:: tensor(1.8470e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5172e-05, dtype=torch.float64)
secont condition:: tensor(1.5172e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1388e-05, dtype=torch.float64)
secont condition:: tensor(1.1388e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5173e-06, dtype=torch.float64)
secont condition:: tensor(8.5173e-06, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3594e-06, dtype=torch.float64)
secont condition:: tensor(7.3594e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6461e-06, dtype=torch.float64)
secont condition:: tensor(6.6461e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7785e-06, dtype=torch.float64)
secont condition:: tensor(7.7785e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3772e-06, dtype=torch.float64)
secont condition:: tensor(8.3772e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3460e-06, dtype=torch.float64)
secont condition:: tensor(4.3460e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8889e-06, dtype=torch.float64)
secont condition:: tensor(8.8889e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8624e-06, dtype=torch.float64)
secont condition:: tensor(7.8624e-06, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4703e-06, dtype=torch.float64)
secont condition:: tensor(5.4703e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9513e-06, dtype=torch.float64)
secont condition:: tensor(7.9513e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5162e-06, dtype=torch.float64)
secont condition:: tensor(6.5162e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2577e-06, dtype=torch.float64)
secont condition:: tensor(7.2577e-06, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9362e-06, dtype=torch.float64)
secont condition:: tensor(3.9362e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9614e-06, dtype=torch.float64)
secont condition:: tensor(4.9614e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8195e-06, dtype=torch.float64)
secont condition:: tensor(3.8195e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.195518970489502
curr_diff: 0 tensor(6.1623e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4473e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7941e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2362e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0043, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0092, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0049, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0044, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0125, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961700
random set 5
python3 generate_rand_ids 0.0005  MNIST
tensor([ 6919, 38281, 24075,  3341,   781,  1430, 16419, 17572, 56868, 45485,
         8501,   823, 52156, 54972, 16957, 24128, 45252, 29639, 41672,  1097,
        10956, 34643, 47958, 49498, 44512, 28516,  6377, 46833, 58228, 51319])
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.231971
Test Avg. Loss: 0.000022, Accuracy: 0.942900
Train - Epoch 1, Batch: 0, Loss: 0.237611
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 2, Batch: 0, Loss: 0.162895
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.163370
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 4, Batch: 0, Loss: 0.161655
Test Avg. Loss: 0.000018, Accuracy: 0.942500
Train - Epoch 5, Batch: 0, Loss: 0.202870
Test Avg. Loss: 0.000085, Accuracy: 0.686200
Train - Epoch 6, Batch: 0, Loss: 0.880223
Test Avg. Loss: 0.000019, Accuracy: 0.950600
Train - Epoch 7, Batch: 0, Loss: 0.213049
Test Avg. Loss: 0.000016, Accuracy: 0.954700
Train - Epoch 8, Batch: 0, Loss: 0.176331
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 9, Batch: 0, Loss: 0.164449
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 10, Batch: 0, Loss: 0.162458
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.154822
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 12, Batch: 0, Loss: 0.153307
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.152480
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 14, Batch: 0, Loss: 0.157584
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 15, Batch: 0, Loss: 0.156560
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 16, Batch: 0, Loss: 0.157342
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 17, Batch: 0, Loss: 0.155560
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 18, Batch: 0, Loss: 0.152815
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 19, Batch: 0, Loss: 0.151715
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 20, Batch: 0, Loss: 0.153803
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 21, Batch: 0, Loss: 0.147334
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 22, Batch: 0, Loss: 0.149234
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 23, Batch: 0, Loss: 0.155916
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.152666
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 25, Batch: 0, Loss: 0.150244
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 26, Batch: 0, Loss: 0.156504
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 27, Batch: 0, Loss: 0.151367
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 28, Batch: 0, Loss: 0.159781
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 29, Batch: 0, Loss: 0.152410
Test Avg. Loss: 0.000014, Accuracy: 0.961800
training_time:: 171.25073075294495
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.14777708053589
time_baseline:: 115.213125705719
curr_diff: 0 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0122, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0226, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0100, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0078, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0293, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961600
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9476e-07, dtype=torch.float64)
secont condition:: tensor(1.9476e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3567e-06, dtype=torch.float64)
secont condition:: tensor(1.3567e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8364e-07, dtype=torch.float64)
secont condition:: tensor(5.8364e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2757e-06, dtype=torch.float64)
secont condition:: tensor(3.2757e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3775e-06, dtype=torch.float64)
secont condition:: tensor(1.3775e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.9188e-07, dtype=torch.float64)
secont condition:: tensor(5.9188e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1924e-07, dtype=torch.float64)
secont condition:: tensor(3.1924e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3868e-07, dtype=torch.float64)
secont condition:: tensor(2.3868e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7749e-07, dtype=torch.float64)
secont condition:: tensor(3.7749e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0458e-07, dtype=torch.float64)
secont condition:: tensor(7.0458e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5658e-06, dtype=torch.float64)
secont condition:: tensor(1.5658e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0877e-06, dtype=torch.float64)
secont condition:: tensor(1.0877e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0611e-06, dtype=torch.float64)
secont condition:: tensor(1.0611e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8812e-07, dtype=torch.float64)
secont condition:: tensor(9.8812e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6169e-06, dtype=torch.float64)
secont condition:: tensor(1.6169e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2451e-06, dtype=torch.float64)
secont condition:: tensor(2.2451e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5168e-06, dtype=torch.float64)
secont condition:: tensor(6.5168e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2132e-05, dtype=torch.float64)
secont condition:: tensor(1.2132e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5271e-05, dtype=torch.float64)
secont condition:: tensor(2.5271e-05, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8301e-05, dtype=torch.float64)
secont condition:: tensor(7.8301e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0006, dtype=torch.float64)
secont condition:: tensor(0.0006, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0062, dtype=torch.float64)
secont condition:: tensor(0.0062, dtype=torch.float64)
curr_secont condition:: tensor(0.0041, dtype=torch.float64)
secont condition:: tensor(0.0041, dtype=torch.float64)
curr_secont condition:: tensor(0.0020, dtype=torch.float64)
secont condition:: tensor(0.0020, dtype=torch.float64)
curr_secont condition:: tensor(0.0011, dtype=torch.float64)
secont condition:: tensor(0.0011, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(8.7946e-05, dtype=torch.float64)
secont condition:: tensor(8.7946e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3248e-05, dtype=torch.float64)
secont condition:: tensor(8.3248e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.7356e-05, dtype=torch.float64)
secont condition:: tensor(5.7356e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.8427e-05, dtype=torch.float64)
secont condition:: tensor(9.8427e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.2674e-05, dtype=torch.float64)
secont condition:: tensor(6.2674e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9810e-05, dtype=torch.float64)
secont condition:: tensor(5.9810e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.5088e-05, dtype=torch.float64)
secont condition:: tensor(9.5088e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.6321e-05, dtype=torch.float64)
secont condition:: tensor(8.6321e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9323e-05, dtype=torch.float64)
secont condition:: tensor(5.9323e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0626e-05, dtype=torch.float64)
secont condition:: tensor(6.0626e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.1012e-05, dtype=torch.float64)
secont condition:: tensor(7.1012e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.1151e-05, dtype=torch.float64)
secont condition:: tensor(8.1151e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.7948e-05, dtype=torch.float64)
secont condition:: tensor(8.7948e-05, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6230e-05, dtype=torch.float64)
secont condition:: tensor(5.6230e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.8220e-05, dtype=torch.float64)
secont condition:: tensor(5.8220e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.9721e-05, dtype=torch.float64)
secont condition:: tensor(6.9721e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.6769e-05, dtype=torch.float64)
secont condition:: tensor(5.6769e-05, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7562e-05, dtype=torch.float64)
secont condition:: tensor(5.7562e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9153e-05, dtype=torch.float64)
secont condition:: tensor(4.9153e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3544e-05, dtype=torch.float64)
secont condition:: tensor(5.3544e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.2108e-05, dtype=torch.float64)
secont condition:: tensor(4.2108e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9078e-05, dtype=torch.float64)
secont condition:: tensor(4.9078e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.4523e-05, dtype=torch.float64)
secont condition:: tensor(5.4523e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.4205e-05, dtype=torch.float64)
secont condition:: tensor(3.4205e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.9898e-05, dtype=torch.float64)
secont condition:: tensor(3.9898e-05, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9705e-05, dtype=torch.float64)
secont condition:: tensor(4.9705e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3470e-05, dtype=torch.float64)
secont condition:: tensor(4.3470e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9174e-05, dtype=torch.float64)
secont condition:: tensor(4.9174e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.9828e-05, dtype=torch.float64)
secont condition:: tensor(4.9828e-05, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5067e-05, dtype=torch.float64)
secont condition:: tensor(3.5067e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6613e-05, dtype=torch.float64)
secont condition:: tensor(2.6613e-05, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2115e-05, dtype=torch.float64)
secont condition:: tensor(3.2115e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.5251e-05, dtype=torch.float64)
secont condition:: tensor(1.5251e-05, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0487e-05, dtype=torch.float64)
secont condition:: tensor(2.0487e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3109e-05, dtype=torch.float64)
secont condition:: tensor(3.3109e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8814e-05, dtype=torch.float64)
secont condition:: tensor(1.8814e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.3122e-05, dtype=torch.float64)
secont condition:: tensor(2.3122e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5820e-05, dtype=torch.float64)
secont condition:: tensor(3.5820e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2884e-05, dtype=torch.float64)
secont condition:: tensor(2.2884e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7216e-05, dtype=torch.float64)
secont condition:: tensor(1.7216e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0544e-05, dtype=torch.float64)
secont condition:: tensor(3.0544e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3387e-05, dtype=torch.float64)
secont condition:: tensor(2.3387e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8992e-05, dtype=torch.float64)
secont condition:: tensor(2.8992e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0821e-05, dtype=torch.float64)
secont condition:: tensor(3.0821e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.7856e-05, dtype=torch.float64)
secont condition:: tensor(1.7856e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.121066331863403
curr_diff: 0 tensor(6.6073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0014, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7942e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2048e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.8663e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9044e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0124, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0228, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0100, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0079, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0296, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961400
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.239522
Test Avg. Loss: 0.000024, Accuracy: 0.942700
Train - Epoch 1, Batch: 0, Loss: 0.254383
Test Avg. Loss: 0.000015, Accuracy: 0.956900
Train - Epoch 2, Batch: 0, Loss: 0.165621
Test Avg. Loss: 0.000015, Accuracy: 0.957700
Train - Epoch 3, Batch: 0, Loss: 0.162009
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 4, Batch: 0, Loss: 0.158142
Test Avg. Loss: 0.000016, Accuracy: 0.950900
Train - Epoch 5, Batch: 0, Loss: 0.176366
Test Avg. Loss: 0.000064, Accuracy: 0.767400
Train - Epoch 6, Batch: 0, Loss: 0.654829
Test Avg. Loss: 0.000018, Accuracy: 0.953400
Train - Epoch 7, Batch: 0, Loss: 0.196207
Test Avg. Loss: 0.000015, Accuracy: 0.955700
Train - Epoch 8, Batch: 0, Loss: 0.173417
Test Avg. Loss: 0.000015, Accuracy: 0.957400
Train - Epoch 9, Batch: 0, Loss: 0.160440
Test Avg. Loss: 0.000014, Accuracy: 0.958100
Train - Epoch 10, Batch: 0, Loss: 0.161253
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 11, Batch: 0, Loss: 0.159912
Test Avg. Loss: 0.000014, Accuracy: 0.959600
Train - Epoch 12, Batch: 0, Loss: 0.154627
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 13, Batch: 0, Loss: 0.156997
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 14, Batch: 0, Loss: 0.154660
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 15, Batch: 0, Loss: 0.158878
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 16, Batch: 0, Loss: 0.157912
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 17, Batch: 0, Loss: 0.157025
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 18, Batch: 0, Loss: 0.157022
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 19, Batch: 0, Loss: 0.154047
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 20, Batch: 0, Loss: 0.155731
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 21, Batch: 0, Loss: 0.153768
Test Avg. Loss: 0.000014, Accuracy: 0.961500
Train - Epoch 22, Batch: 0, Loss: 0.156992
Test Avg. Loss: 0.000014, Accuracy: 0.961400
Train - Epoch 23, Batch: 0, Loss: 0.152262
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 24, Batch: 0, Loss: 0.153672
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 25, Batch: 0, Loss: 0.154025
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 26, Batch: 0, Loss: 0.154701
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 27, Batch: 0, Loss: 0.151979
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 28, Batch: 0, Loss: 0.151246
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.154642
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 169.9667727947235
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 115.31565284729004
time_baseline:: 115.38384771347046
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2731e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8037e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4478e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.2093e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.8077e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8907e-06, dtype=torch.float64)
secont condition:: tensor(1.8907e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5512e-06, dtype=torch.float64)
secont condition:: tensor(2.5512e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3271e-07, dtype=torch.float64)
secont condition:: tensor(4.3271e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2273e-06, dtype=torch.float64)
secont condition:: tensor(1.2273e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9283e-07, dtype=torch.float64)
secont condition:: tensor(3.9283e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0367e-07, dtype=torch.float64)
secont condition:: tensor(5.0367e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7849e-07, dtype=torch.float64)
secont condition:: tensor(1.7849e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5783e-07, dtype=torch.float64)
secont condition:: tensor(6.5783e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7841e-07, dtype=torch.float64)
secont condition:: tensor(4.7841e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3424e-07, dtype=torch.float64)
secont condition:: tensor(2.3424e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8702e-07, dtype=torch.float64)
secont condition:: tensor(2.8702e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0715e-07, dtype=torch.float64)
secont condition:: tensor(6.0715e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1465e-07, dtype=torch.float64)
secont condition:: tensor(4.1465e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0709e-07, dtype=torch.float64)
secont condition:: tensor(3.0709e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4140e-07, dtype=torch.float64)
secont condition:: tensor(5.4140e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3526e-07, dtype=torch.float64)
secont condition:: tensor(2.3526e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2916e-07, dtype=torch.float64)
secont condition:: tensor(2.2916e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4091e-07, dtype=torch.float64)
secont condition:: tensor(5.4091e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9706e-07, dtype=torch.float64)
secont condition:: tensor(5.9706e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8907e-07, dtype=torch.float64)
secont condition:: tensor(5.8907e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1162e-07, dtype=torch.float64)
secont condition:: tensor(5.1162e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6421e-06, dtype=torch.float64)
secont condition:: tensor(1.6421e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4030e-06, dtype=torch.float64)
secont condition:: tensor(2.4030e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9809e-07, dtype=torch.float64)
secont condition:: tensor(5.9809e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8853e-05, dtype=torch.float64)
secont condition:: tensor(1.8853e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.2740e-05, dtype=torch.float64)
secont condition:: tensor(2.2740e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.5418e-06, dtype=torch.float64)
secont condition:: tensor(2.5418e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2823e-07, dtype=torch.float64)
secont condition:: tensor(9.2823e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1757e-07, dtype=torch.float64)
secont condition:: tensor(5.1757e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1928e-07, dtype=torch.float64)
secont condition:: tensor(2.1928e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9740e-07, dtype=torch.float64)
secont condition:: tensor(5.9740e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7266e-07, dtype=torch.float64)
secont condition:: tensor(4.7266e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4105e-07, dtype=torch.float64)
secont condition:: tensor(3.4105e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4747e-07, dtype=torch.float64)
secont condition:: tensor(5.4747e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7187e-07, dtype=torch.float64)
secont condition:: tensor(8.7187e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-06, dtype=torch.float64)
secont condition:: tensor(1.1848e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8600e-07, dtype=torch.float64)
secont condition:: tensor(3.8600e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6366e-07, dtype=torch.float64)
secont condition:: tensor(3.6366e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0005e-07, dtype=torch.float64)
secont condition:: tensor(5.0005e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5999e-07, dtype=torch.float64)
secont condition:: tensor(5.5999e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0150e-07, dtype=torch.float64)
secont condition:: tensor(3.0150e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3285e-07, dtype=torch.float64)
secont condition:: tensor(3.3285e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4637e-07, dtype=torch.float64)
secont condition:: tensor(3.4637e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4948e-07, dtype=torch.float64)
secont condition:: tensor(7.4948e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8395e-07, dtype=torch.float64)
secont condition:: tensor(2.8395e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4777e-07, dtype=torch.float64)
secont condition:: tensor(3.4777e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8494e-07, dtype=torch.float64)
secont condition:: tensor(3.8494e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4868e-07, dtype=torch.float64)
secont condition:: tensor(6.4868e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6889e-07, dtype=torch.float64)
secont condition:: tensor(3.6889e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5147e-07, dtype=torch.float64)
secont condition:: tensor(4.5147e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0617e-07, dtype=torch.float64)
secont condition:: tensor(3.0617e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2283e-07, dtype=torch.float64)
secont condition:: tensor(7.2283e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3558e-06, dtype=torch.float64)
secont condition:: tensor(7.3558e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9222e-07, dtype=torch.float64)
secont condition:: tensor(4.9222e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7384e-06, dtype=torch.float64)
secont condition:: tensor(1.7384e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8822e-07, dtype=torch.float64)
secont condition:: tensor(3.8822e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2672e-07, dtype=torch.float64)
secont condition:: tensor(4.2672e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8011e-07, dtype=torch.float64)
secont condition:: tensor(3.8011e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6054e-07, dtype=torch.float64)
secont condition:: tensor(4.6054e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2706e-07, dtype=torch.float64)
secont condition:: tensor(7.2706e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8349e-07, dtype=torch.float64)
secont condition:: tensor(5.8349e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6696e-07, dtype=torch.float64)
secont condition:: tensor(4.6696e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8416e-07, dtype=torch.float64)
secont condition:: tensor(3.8416e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9112e-07, dtype=torch.float64)
secont condition:: tensor(6.9112e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6072e-07, dtype=torch.float64)
secont condition:: tensor(3.6072e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5537e-07, dtype=torch.float64)
secont condition:: tensor(4.5537e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2539e-07, dtype=torch.float64)
secont condition:: tensor(4.2539e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5178e-07, dtype=torch.float64)
secont condition:: tensor(5.5178e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8712e-07, dtype=torch.float64)
secont condition:: tensor(4.8712e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2688e-07, dtype=torch.float64)
secont condition:: tensor(4.2688e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6164e-07, dtype=torch.float64)
secont condition:: tensor(3.6164e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6107e-07, dtype=torch.float64)
secont condition:: tensor(3.6107e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8204e-07, dtype=torch.float64)
secont condition:: tensor(4.8204e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1742e-07, dtype=torch.float64)
secont condition:: tensor(4.1742e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6031e-07, dtype=torch.float64)
secont condition:: tensor(4.6031e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6980e-07, dtype=torch.float64)
secont condition:: tensor(4.6980e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1416e-07, dtype=torch.float64)
secont condition:: tensor(5.1416e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0056e-07, dtype=torch.float64)
secont condition:: tensor(5.0056e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.535555601119995
curr_diff: 0 tensor(1.9136e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6686e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0377e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.7913e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4975e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1739e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0606e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5756e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3877e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.8824e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.229926
Test Avg. Loss: 0.000025, Accuracy: 0.937100
Train - Epoch 1, Batch: 0, Loss: 0.270375
Test Avg. Loss: 0.000015, Accuracy: 0.956300
Train - Epoch 2, Batch: 0, Loss: 0.164470
Test Avg. Loss: 0.000015, Accuracy: 0.957300
Train - Epoch 3, Batch: 0, Loss: 0.158630
Test Avg. Loss: 0.000014, Accuracy: 0.958000
Train - Epoch 4, Batch: 0, Loss: 0.158938
Test Avg. Loss: 0.000018, Accuracy: 0.946100
Train - Epoch 5, Batch: 0, Loss: 0.188498
Test Avg. Loss: 0.000044, Accuracy: 0.853100
Train - Epoch 6, Batch: 0, Loss: 0.459976
Test Avg. Loss: 0.000016, Accuracy: 0.957100
Train - Epoch 7, Batch: 0, Loss: 0.178624
Test Avg. Loss: 0.000015, Accuracy: 0.959100
Train - Epoch 8, Batch: 0, Loss: 0.156353
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 9, Batch: 0, Loss: 0.155987
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 10, Batch: 0, Loss: 0.151707
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 11, Batch: 0, Loss: 0.152831
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 12, Batch: 0, Loss: 0.157924
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 13, Batch: 0, Loss: 0.151964
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 14, Batch: 0, Loss: 0.156713
Test Avg. Loss: 0.000014, Accuracy: 0.960900
Train - Epoch 15, Batch: 0, Loss: 0.151623
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 16, Batch: 0, Loss: 0.155216
Test Avg. Loss: 0.000014, Accuracy: 0.961100
Train - Epoch 17, Batch: 0, Loss: 0.152395
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 18, Batch: 0, Loss: 0.155009
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 19, Batch: 0, Loss: 0.148777
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 20, Batch: 0, Loss: 0.158792
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 21, Batch: 0, Loss: 0.144898
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 22, Batch: 0, Loss: 0.153900
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 23, Batch: 0, Loss: 0.151869
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 24, Batch: 0, Loss: 0.154726
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 25, Batch: 0, Loss: 0.152845
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 26, Batch: 0, Loss: 0.150654
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 27, Batch: 0, Loss: 0.150846
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 28, Batch: 0, Loss: 0.149345
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 29, Batch: 0, Loss: 0.154285
Test Avg. Loss: 0.000014, Accuracy: 0.962300
training_time:: 171.44315242767334
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.05531930923462
time_baseline:: 116.12397694587708
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6282e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6703e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3922e-07, dtype=torch.float64)
secont condition:: tensor(3.3922e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8906e-07, dtype=torch.float64)
secont condition:: tensor(6.8906e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6376e-07, dtype=torch.float64)
secont condition:: tensor(9.6376e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2893e-06, dtype=torch.float64)
secont condition:: tensor(2.2893e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7045e-07, dtype=torch.float64)
secont condition:: tensor(1.7045e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3379e-07, dtype=torch.float64)
secont condition:: tensor(2.3379e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1239e-08, dtype=torch.float64)
secont condition:: tensor(6.1239e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1427e-06, dtype=torch.float64)
secont condition:: tensor(1.1427e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9882e-07, dtype=torch.float64)
secont condition:: tensor(3.9882e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8829e-07, dtype=torch.float64)
secont condition:: tensor(1.8829e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4878e-07, dtype=torch.float64)
secont condition:: tensor(2.4878e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5764e-05, dtype=torch.float64)
secont condition:: tensor(1.5764e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.4352e-07, dtype=torch.float64)
secont condition:: tensor(4.4352e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3555e-07, dtype=torch.float64)
secont condition:: tensor(9.3555e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3913e-07, dtype=torch.float64)
secont condition:: tensor(3.3913e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1432e-07, dtype=torch.float64)
secont condition:: tensor(2.1432e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8514e-07, dtype=torch.float64)
secont condition:: tensor(9.8514e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4647e-05, dtype=torch.float64)
secont condition:: tensor(1.4647e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.1453e-06, dtype=torch.float64)
secont condition:: tensor(1.1453e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1853e-06, dtype=torch.float64)
secont condition:: tensor(2.1853e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2723e-06, dtype=torch.float64)
secont condition:: tensor(4.2723e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9137e-06, dtype=torch.float64)
secont condition:: tensor(8.9137e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3555e-05, dtype=torch.float64)
secont condition:: tensor(1.3555e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2906e-05, dtype=torch.float64)
secont condition:: tensor(4.2906e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.9383e-05, dtype=torch.float64)
secont condition:: tensor(2.9383e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.7521e-06, dtype=torch.float64)
secont condition:: tensor(8.7521e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8390e-06, dtype=torch.float64)
secont condition:: tensor(2.8390e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6970e-06, dtype=torch.float64)
secont condition:: tensor(1.6970e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1351e-06, dtype=torch.float64)
secont condition:: tensor(1.1351e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4542e-07, dtype=torch.float64)
secont condition:: tensor(6.4542e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4004e-06, dtype=torch.float64)
secont condition:: tensor(1.4004e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8017e-06, dtype=torch.float64)
secont condition:: tensor(1.8017e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0773e-06, dtype=torch.float64)
secont condition:: tensor(1.0773e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2960e-07, dtype=torch.float64)
secont condition:: tensor(7.2960e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6254e-07, dtype=torch.float64)
secont condition:: tensor(5.6254e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1975e-07, dtype=torch.float64)
secont condition:: tensor(7.1975e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5103e-07, dtype=torch.float64)
secont condition:: tensor(4.5103e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4460e-07, dtype=torch.float64)
secont condition:: tensor(5.4460e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8416e-07, dtype=torch.float64)
secont condition:: tensor(5.8416e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2800e-07, dtype=torch.float64)
secont condition:: tensor(8.2800e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6924e-07, dtype=torch.float64)
secont condition:: tensor(2.6924e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3415e-07, dtype=torch.float64)
secont condition:: tensor(5.3415e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0405e-07, dtype=torch.float64)
secont condition:: tensor(4.0405e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7088e-07, dtype=torch.float64)
secont condition:: tensor(3.7088e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8225e-07, dtype=torch.float64)
secont condition:: tensor(3.8225e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8066e-07, dtype=torch.float64)
secont condition:: tensor(4.8066e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8474e-07, dtype=torch.float64)
secont condition:: tensor(3.8474e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1328e-07, dtype=torch.float64)
secont condition:: tensor(4.1328e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9826e-06, dtype=torch.float64)
secont condition:: tensor(2.9826e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.1374e-07, dtype=torch.float64)
secont condition:: tensor(4.1374e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0921e-07, dtype=torch.float64)
secont condition:: tensor(5.0921e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7468e-07, dtype=torch.float64)
secont condition:: tensor(3.7468e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9279e-06, dtype=torch.float64)
secont condition:: tensor(5.9279e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6787e-07, dtype=torch.float64)
secont condition:: tensor(3.6787e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1241e-07, dtype=torch.float64)
secont condition:: tensor(3.1241e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2968e-07, dtype=torch.float64)
secont condition:: tensor(4.2968e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7726e-07, dtype=torch.float64)
secont condition:: tensor(3.7726e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3216e-07, dtype=torch.float64)
secont condition:: tensor(4.3216e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4906e-07, dtype=torch.float64)
secont condition:: tensor(4.4906e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7261e-07, dtype=torch.float64)
secont condition:: tensor(5.7261e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1135e-07, dtype=torch.float64)
secont condition:: tensor(7.1135e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0300e-07, dtype=torch.float64)
secont condition:: tensor(4.0300e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9385e-07, dtype=torch.float64)
secont condition:: tensor(3.9385e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7408e-07, dtype=torch.float64)
secont condition:: tensor(4.7408e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7067e-07, dtype=torch.float64)
secont condition:: tensor(3.7067e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6002e-06, dtype=torch.float64)
secont condition:: tensor(2.6002e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0945e-07, dtype=torch.float64)
secont condition:: tensor(4.0945e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2869e-07, dtype=torch.float64)
secont condition:: tensor(5.2869e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0381e-07, dtype=torch.float64)
secont condition:: tensor(3.0381e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4442e-07, dtype=torch.float64)
secont condition:: tensor(3.4442e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9350e-07, dtype=torch.float64)
secont condition:: tensor(4.9350e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2840e-07, dtype=torch.float64)
secont condition:: tensor(4.2840e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9029e-07, dtype=torch.float64)
secont condition:: tensor(4.9029e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6237e-07, dtype=torch.float64)
secont condition:: tensor(4.6237e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1207e-07, dtype=torch.float64)
secont condition:: tensor(4.1207e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8130e-07, dtype=torch.float64)
secont condition:: tensor(4.8130e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0122e-07, dtype=torch.float64)
secont condition:: tensor(3.0122e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1645e-07, dtype=torch.float64)
secont condition:: tensor(4.1645e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.621176719665527
curr_diff: 0 tensor(1.4136e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0225e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.0006e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.6508e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4928e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0548e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.2066e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8952e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5930e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.962300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237523
Test Avg. Loss: 0.000025, Accuracy: 0.935600
Train - Epoch 1, Batch: 0, Loss: 0.277879
Test Avg. Loss: 0.000015, Accuracy: 0.955900
Train - Epoch 2, Batch: 0, Loss: 0.174177
Test Avg. Loss: 0.000015, Accuracy: 0.957900
Train - Epoch 3, Batch: 0, Loss: 0.161755
Test Avg. Loss: 0.000015, Accuracy: 0.958800
Train - Epoch 4, Batch: 0, Loss: 0.161540
Test Avg. Loss: 0.000015, Accuracy: 0.958600
Train - Epoch 5, Batch: 0, Loss: 0.157960
Test Avg. Loss: 0.000024, Accuracy: 0.921700
Train - Epoch 6, Batch: 0, Loss: 0.260708
Test Avg. Loss: 0.000081, Accuracy: 0.782400
Train - Epoch 7, Batch: 0, Loss: 0.834177
Test Avg. Loss: 0.000022, Accuracy: 0.945400
Train - Epoch 8, Batch: 0, Loss: 0.231940
Test Avg. Loss: 0.000017, Accuracy: 0.950800
Train - Epoch 9, Batch: 0, Loss: 0.184889
Test Avg. Loss: 0.000016, Accuracy: 0.952000
Train - Epoch 10, Batch: 0, Loss: 0.176819
Test Avg. Loss: 0.000016, Accuracy: 0.954500
Train - Epoch 11, Batch: 0, Loss: 0.171270
Test Avg. Loss: 0.000015, Accuracy: 0.955300
Train - Epoch 12, Batch: 0, Loss: 0.164915
Test Avg. Loss: 0.000015, Accuracy: 0.956500
Train - Epoch 13, Batch: 0, Loss: 0.168745
Test Avg. Loss: 0.000015, Accuracy: 0.957000
Train - Epoch 14, Batch: 0, Loss: 0.159630
Test Avg. Loss: 0.000015, Accuracy: 0.957200
Train - Epoch 15, Batch: 0, Loss: 0.159046
Test Avg. Loss: 0.000014, Accuracy: 0.958800
Train - Epoch 16, Batch: 0, Loss: 0.162545
Test Avg. Loss: 0.000014, Accuracy: 0.959200
Train - Epoch 17, Batch: 0, Loss: 0.153091
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 18, Batch: 0, Loss: 0.149246
Test Avg. Loss: 0.000014, Accuracy: 0.959800
Train - Epoch 19, Batch: 0, Loss: 0.157598
Test Avg. Loss: 0.000014, Accuracy: 0.959900
Train - Epoch 20, Batch: 0, Loss: 0.154564
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 21, Batch: 0, Loss: 0.159867
Test Avg. Loss: 0.000014, Accuracy: 0.960200
Train - Epoch 22, Batch: 0, Loss: 0.160025
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 23, Batch: 0, Loss: 0.159018
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 24, Batch: 0, Loss: 0.156476
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 25, Batch: 0, Loss: 0.155339
Test Avg. Loss: 0.000014, Accuracy: 0.961000
Train - Epoch 26, Batch: 0, Loss: 0.150704
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 27, Batch: 0, Loss: 0.151829
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 28, Batch: 0, Loss: 0.158511
Test Avg. Loss: 0.000014, Accuracy: 0.961300
Train - Epoch 29, Batch: 0, Loss: 0.157630
Test Avg. Loss: 0.000014, Accuracy: 0.961400
training_time:: 169.51450419425964
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 117.11840105056763
time_baseline:: 117.18768501281738
curr_diff: 0 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0163, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0268, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0147, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0097, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0366, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961300
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7503e-07, dtype=torch.float64)
secont condition:: tensor(2.7503e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7027e-07, dtype=torch.float64)
secont condition:: tensor(5.7027e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1855e-07, dtype=torch.float64)
secont condition:: tensor(3.1855e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0430e-06, dtype=torch.float64)
secont condition:: tensor(4.0430e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5266e-06, dtype=torch.float64)
secont condition:: tensor(1.5266e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2019e-06, dtype=torch.float64)
secont condition:: tensor(1.2019e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4120e-07, dtype=torch.float64)
secont condition:: tensor(2.4120e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0064e-07, dtype=torch.float64)
secont condition:: tensor(9.0064e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6126e-07, dtype=torch.float64)
secont condition:: tensor(1.6126e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9893e-07, dtype=torch.float64)
secont condition:: tensor(1.9893e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4012e-07, dtype=torch.float64)
secont condition:: tensor(2.4012e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8342e-07, dtype=torch.float64)
secont condition:: tensor(6.8342e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3184e-07, dtype=torch.float64)
secont condition:: tensor(4.3184e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8248e-07, dtype=torch.float64)
secont condition:: tensor(2.8248e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4185e-07, dtype=torch.float64)
secont condition:: tensor(2.4185e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5301e-06, dtype=torch.float64)
secont condition:: tensor(1.5301e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1281e-06, dtype=torch.float64)
secont condition:: tensor(1.1281e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4357e-06, dtype=torch.float64)
secont condition:: tensor(1.4357e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5558e-06, dtype=torch.float64)
secont condition:: tensor(1.5558e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2647e-06, dtype=torch.float64)
secont condition:: tensor(2.2647e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1070e-06, dtype=torch.float64)
secont condition:: tensor(5.1070e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0084e-05, dtype=torch.float64)
secont condition:: tensor(1.0084e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0977e-05, dtype=torch.float64)
secont condition:: tensor(3.0977e-05, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0003, dtype=torch.float64)
secont condition:: tensor(0.0003, dtype=torch.float64)
curr_secont condition:: tensor(0.0004, dtype=torch.float64)
secont condition:: tensor(0.0004, dtype=torch.float64)
curr_secont condition:: tensor(0.0035, dtype=torch.float64)
secont condition:: tensor(0.0035, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0010, dtype=torch.float64)
secont condition:: tensor(0.0010, dtype=torch.float64)
curr_secont condition:: tensor(0.0007, dtype=torch.float64)
secont condition:: tensor(0.0007, dtype=torch.float64)
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0008, dtype=torch.float64)
secont condition:: tensor(0.0008, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0005, dtype=torch.float64)
secont condition:: tensor(0.0005, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
curr_secont condition:: tensor(7.1515e-05, dtype=torch.float64)
secont condition:: tensor(7.1515e-05, dtype=torch.float64)
curr_secont condition:: tensor(-6.0178e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.9337e-05, dtype=torch.float64)
curr_secont condition:: tensor(-3.4754e-05, dtype=torch.float64)
curr_secont condition:: tensor(-3.6977e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.0979e-05, dtype=torch.float64)
secont condition:: tensor(6.0979e-05, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6999e-05, dtype=torch.float64)
secont condition:: tensor(9.6999e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.2170e-05, dtype=torch.float64)
secont condition:: tensor(1.2170e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.6197e-05, dtype=torch.float64)
secont condition:: tensor(7.6197e-05, dtype=torch.float64)
curr_secont condition:: tensor(-4.3027e-05, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(7.6678e-05, dtype=torch.float64)
secont condition:: tensor(7.6678e-05, dtype=torch.float64)
curr_secont condition:: tensor(-3.0042e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5782e-05, dtype=torch.float64)
secont condition:: tensor(5.5782e-05, dtype=torch.float64)
curr_secont condition:: tensor(8.8041e-05, dtype=torch.float64)
secont condition:: tensor(8.8041e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6589e-05, dtype=torch.float64)
secont condition:: tensor(2.6589e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0002, dtype=torch.float64)
secont condition:: tensor(0.0002, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6047e-05, dtype=torch.float64)
secont condition:: tensor(6.6047e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.6167e-05, dtype=torch.float64)
secont condition:: tensor(6.6167e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.9292e-05, dtype=torch.float64)
secont condition:: tensor(5.9292e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5534e-05, dtype=torch.float64)
secont condition:: tensor(6.5534e-05, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0198e-05, dtype=torch.float64)
secont condition:: tensor(5.0198e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.3628e-05, dtype=torch.float64)
secont condition:: tensor(9.3628e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9878e-05, dtype=torch.float64)
secont condition:: tensor(7.9878e-05, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8982e-05, dtype=torch.float64)
secont condition:: tensor(8.8982e-05, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2327e-05, dtype=torch.float64)
secont condition:: tensor(7.2327e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9583e-05, dtype=torch.float64)
secont condition:: tensor(5.9583e-05, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6965e-05, dtype=torch.float64)
secont condition:: tensor(4.6965e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5983e-05, dtype=torch.float64)
secont condition:: tensor(7.5983e-05, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6476e-05, dtype=torch.float64)
secont condition:: tensor(7.6476e-05, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
curr_secont condition:: tensor(6.9614e-05, dtype=torch.float64)
secont condition:: tensor(6.9614e-05, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9443e-05, dtype=torch.float64)
secont condition:: tensor(8.9443e-05, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6428e-05, dtype=torch.float64)
secont condition:: tensor(5.6428e-05, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0909e-05, dtype=torch.float64)
secont condition:: tensor(9.0909e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.1257e-05, dtype=torch.float64)
secont condition:: tensor(6.1257e-05, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2781e-05, dtype=torch.float64)
secont condition:: tensor(9.2781e-05, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0110e-05, dtype=torch.float64)
secont condition:: tensor(7.0110e-05, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6694e-05, dtype=torch.float64)
secont condition:: tensor(6.6694e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.1330e-05, dtype=torch.float64)
secont condition:: tensor(9.1330e-05, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.09315514564514
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2043e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7437e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2299e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0026, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0170, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0273, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0147, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0032, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0098, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0051, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0374, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 30 [0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.2,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.05,0.05,0.05,0.05,0.05,0.05,0.02,0.02,0.02,0.02,0.01,0.01,0.01,0.01] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.228782
Test Avg. Loss: 0.000027, Accuracy: 0.927800
Train - Epoch 1, Batch: 0, Loss: 0.290593
Test Avg. Loss: 0.000015, Accuracy: 0.957100
Train - Epoch 2, Batch: 0, Loss: 0.165975
Test Avg. Loss: 0.000015, Accuracy: 0.956700
Train - Epoch 3, Batch: 0, Loss: 0.157532
Test Avg. Loss: 0.000014, Accuracy: 0.957600
Train - Epoch 4, Batch: 0, Loss: 0.161715
Test Avg. Loss: 0.000015, Accuracy: 0.956600
Train - Epoch 5, Batch: 0, Loss: 0.160631
Test Avg. Loss: 0.000029, Accuracy: 0.905900
Train - Epoch 6, Batch: 0, Loss: 0.320691
Test Avg. Loss: 0.000026, Accuracy: 0.945400
Train - Epoch 7, Batch: 0, Loss: 0.279636
Test Avg. Loss: 0.000016, Accuracy: 0.954800
Train - Epoch 8, Batch: 0, Loss: 0.178724
Test Avg. Loss: 0.000015, Accuracy: 0.956400
Train - Epoch 9, Batch: 0, Loss: 0.158725
Test Avg. Loss: 0.000015, Accuracy: 0.958000
Train - Epoch 10, Batch: 0, Loss: 0.159607
Test Avg. Loss: 0.000014, Accuracy: 0.958600
Train - Epoch 11, Batch: 0, Loss: 0.158620
Test Avg. Loss: 0.000014, Accuracy: 0.959100
Train - Epoch 12, Batch: 0, Loss: 0.156630
Test Avg. Loss: 0.000014, Accuracy: 0.959300
Train - Epoch 13, Batch: 0, Loss: 0.157906
Test Avg. Loss: 0.000014, Accuracy: 0.959400
Train - Epoch 14, Batch: 0, Loss: 0.157566
Test Avg. Loss: 0.000014, Accuracy: 0.959500
Train - Epoch 15, Batch: 0, Loss: 0.154183
Test Avg. Loss: 0.000014, Accuracy: 0.960000
Train - Epoch 16, Batch: 0, Loss: 0.159697
Test Avg. Loss: 0.000014, Accuracy: 0.960100
Train - Epoch 17, Batch: 0, Loss: 0.159826
Test Avg. Loss: 0.000014, Accuracy: 0.960500
Train - Epoch 18, Batch: 0, Loss: 0.156640
Test Avg. Loss: 0.000014, Accuracy: 0.960300
Train - Epoch 19, Batch: 0, Loss: 0.154202
Test Avg. Loss: 0.000014, Accuracy: 0.960600
Train - Epoch 20, Batch: 0, Loss: 0.147703
Test Avg. Loss: 0.000014, Accuracy: 0.960800
Train - Epoch 21, Batch: 0, Loss: 0.157204
Test Avg. Loss: 0.000014, Accuracy: 0.961200
Train - Epoch 22, Batch: 0, Loss: 0.154129
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 23, Batch: 0, Loss: 0.149596
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 24, Batch: 0, Loss: 0.148243
Test Avg. Loss: 0.000014, Accuracy: 0.961600
Train - Epoch 25, Batch: 0, Loss: 0.150454
Test Avg. Loss: 0.000014, Accuracy: 0.961700
Train - Epoch 26, Batch: 0, Loss: 0.152977
Test Avg. Loss: 0.000014, Accuracy: 0.961800
Train - Epoch 27, Batch: 0, Loss: 0.153243
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 28, Batch: 0, Loss: 0.151686
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 29, Batch: 0, Loss: 0.151444
Test Avg. Loss: 0.000014, Accuracy: 0.961900
training_time:: 169.18550634384155
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
training time is 116.19278717041016
time_baseline:: 116.2565643787384
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0035, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0047, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
incremental updates::
python3 incremental_updates_provenance5.py 60 3
max_epoch:: 30
delta_size:: 30
max_epoch:: 30
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8745e-07, dtype=torch.float64)
secont condition:: tensor(5.8745e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2750e-06, dtype=torch.float64)
secont condition:: tensor(1.2750e-06, dtype=torch.float64)
curr_secont condition:: tensor(-8.8163e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3491e-06, dtype=torch.float64)
secont condition:: tensor(4.3491e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5559e-07, dtype=torch.float64)
secont condition:: tensor(7.5559e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4218e-07, dtype=torch.float64)
secont condition:: tensor(6.4218e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9343e-07, dtype=torch.float64)
secont condition:: tensor(3.9343e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7210e-07, dtype=torch.float64)
secont condition:: tensor(1.7210e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6363e-07, dtype=torch.float64)
secont condition:: tensor(2.6363e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1518e-07, dtype=torch.float64)
secont condition:: tensor(2.1518e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7073e-07, dtype=torch.float64)
secont condition:: tensor(2.7073e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6119e-06, dtype=torch.float64)
secont condition:: tensor(1.6119e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.3472e-07, dtype=torch.float64)
secont condition:: tensor(6.3472e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0920e-06, dtype=torch.float64)
secont condition:: tensor(1.0920e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1272e-06, dtype=torch.float64)
secont condition:: tensor(1.1272e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2208e-06, dtype=torch.float64)
secont condition:: tensor(1.2208e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9541e-07, dtype=torch.float64)
secont condition:: tensor(7.9541e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8128e-07, dtype=torch.float64)
secont condition:: tensor(6.8128e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6470e-07, dtype=torch.float64)
secont condition:: tensor(8.6470e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2221e-06, dtype=torch.float64)
secont condition:: tensor(1.2221e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9514e-06, dtype=torch.float64)
secont condition:: tensor(1.9514e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5260e-06, dtype=torch.float64)
secont condition:: tensor(2.5260e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0649e-06, dtype=torch.float64)
secont condition:: tensor(2.0649e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5303e-07, dtype=torch.float64)
secont condition:: tensor(6.5303e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2289e-05, dtype=torch.float64)
secont condition:: tensor(2.2289e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.0230e-05, dtype=torch.float64)
secont condition:: tensor(3.0230e-05, dtype=torch.float64)
curr_secont condition:: tensor(0.0001, dtype=torch.float64)
secont condition:: tensor(0.0001, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9641e-05, dtype=torch.float64)
secont condition:: tensor(6.9641e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.8957e-05, dtype=torch.float64)
secont condition:: tensor(1.8957e-05, dtype=torch.float64)
curr_secont condition:: tensor(9.2488e-06, dtype=torch.float64)
secont condition:: tensor(9.2488e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1322e-06, dtype=torch.float64)
secont condition:: tensor(6.1322e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2074e-06, dtype=torch.float64)
secont condition:: tensor(5.2074e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6004e-06, dtype=torch.float64)
secont condition:: tensor(4.6004e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4506e-06, dtype=torch.float64)
secont condition:: tensor(3.4506e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4708e-06, dtype=torch.float64)
secont condition:: tensor(3.4708e-06, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9705e-06, dtype=torch.float64)
secont condition:: tensor(2.9705e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0158e-06, dtype=torch.float64)
secont condition:: tensor(3.0158e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2745e-06, dtype=torch.float64)
secont condition:: tensor(3.2745e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5867e-06, dtype=torch.float64)
secont condition:: tensor(3.5867e-06, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6833e-07, dtype=torch.float64)
secont condition:: tensor(8.6833e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1350e-06, dtype=torch.float64)
secont condition:: tensor(2.1350e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9365e-06, dtype=torch.float64)
secont condition:: tensor(4.9365e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4221e-06, dtype=torch.float64)
secont condition:: tensor(2.4221e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4147e-06, dtype=torch.float64)
secont condition:: tensor(6.4147e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4840e-06, dtype=torch.float64)
secont condition:: tensor(2.4840e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4124e-06, dtype=torch.float64)
secont condition:: tensor(2.4124e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8844e-06, dtype=torch.float64)
secont condition:: tensor(1.8844e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4963e-06, dtype=torch.float64)
secont condition:: tensor(4.4963e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3936e-06, dtype=torch.float64)
secont condition:: tensor(3.3936e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.6674e-06, dtype=torch.float64)
secont condition:: tensor(5.6674e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1857e-06, dtype=torch.float64)
secont condition:: tensor(1.1857e-06, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1556e-06, dtype=torch.float64)
secont condition:: tensor(2.1556e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7583e-06, dtype=torch.float64)
secont condition:: tensor(1.7583e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4014e-06, dtype=torch.float64)
secont condition:: tensor(1.4014e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0350e-06, dtype=torch.float64)
secont condition:: tensor(3.0350e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0974e-06, dtype=torch.float64)
secont condition:: tensor(4.0974e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1222e-06, dtype=torch.float64)
secont condition:: tensor(2.1222e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8849e-06, dtype=torch.float64)
secont condition:: tensor(1.8849e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5237e-06, dtype=torch.float64)
secont condition:: tensor(1.5237e-06, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0227e-06, dtype=torch.float64)
secont condition:: tensor(6.0227e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4082e-06, dtype=torch.float64)
secont condition:: tensor(2.4082e-06, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6398e-06, dtype=torch.float64)
secont condition:: tensor(1.6398e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9095e-06, dtype=torch.float64)
secont condition:: tensor(1.9095e-06, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0020e-06, dtype=torch.float64)
secont condition:: tensor(1.0020e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2740e-07, dtype=torch.float64)
secont condition:: tensor(9.2740e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5554e-06, dtype=torch.float64)
secont condition:: tensor(1.5554e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1176e-06, dtype=torch.float64)
secont condition:: tensor(1.1176e-06, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2062e-06, dtype=torch.float64)
secont condition:: tensor(1.2062e-06, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5138e-06, dtype=torch.float64)
secont condition:: tensor(1.5138e-06, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1793e-06, dtype=torch.float64)
secont condition:: tensor(1.1793e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1520e-06, dtype=torch.float64)
secont condition:: tensor(1.1520e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5346e-07, dtype=torch.float64)
secont condition:: tensor(9.5346e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2556e-07, dtype=torch.float64)
secont condition:: tensor(8.2556e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0606e-06, dtype=torch.float64)
secont condition:: tensor(1.0606e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0872e-06, dtype=torch.float64)
secont condition:: tensor(1.0872e-06, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5778e-07, dtype=torch.float64)
secont condition:: tensor(8.5778e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1222e-06, dtype=torch.float64)
secont condition:: tensor(1.1222e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6719e-07, dtype=torch.float64)
secont condition:: tensor(9.6719e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1982e-06, dtype=torch.float64)
secont condition:: tensor(1.1982e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 30.2034273147583
curr_diff: 0 tensor(1.3769e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5316e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.8486e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.3284e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3911e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.9700e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0036, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0048, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000014, Accuracy: 0.961900
