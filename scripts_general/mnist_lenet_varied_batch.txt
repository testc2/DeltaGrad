varied deletion rate::
varied number of samples::
deletion rate:: 0.00002
python3 generate_rand_ids 0.00002  MNIST 1
tensor([22159])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 248.0628776550293
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 161.76838898658752
time_baseline:: 162.03366231918335
curr_diff: 0 tensor(1.4651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6602e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1512e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2915e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4773e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0222e-12, dtype=torch.float64)
secont condition:: tensor(7.0222e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1529e-11, dtype=torch.float64)
secont condition:: tensor(1.1529e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-11, dtype=torch.float64)
secont condition:: tensor(1.6212e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0518e-11, dtype=torch.float64)
secont condition:: tensor(2.0518e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-11, dtype=torch.float64)
secont condition:: tensor(2.4019e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6769e-11, dtype=torch.float64)
secont condition:: tensor(2.6769e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1367e-11, dtype=torch.float64)
secont condition:: tensor(3.1367e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-11, dtype=torch.float64)
secont condition:: tensor(2.5921e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5729e-11, dtype=torch.float64)
secont condition:: tensor(2.5729e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1291e-11, dtype=torch.float64)
secont condition:: tensor(3.1291e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2702e-11, dtype=torch.float64)
secont condition:: tensor(3.2702e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-11, dtype=torch.float64)
secont condition:: tensor(2.7504e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3914e-11, dtype=torch.float64)
secont condition:: tensor(2.3914e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5912e-11, dtype=torch.float64)
secont condition:: tensor(3.5912e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5817e-11, dtype=torch.float64)
secont condition:: tensor(1.5817e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-11, dtype=torch.float64)
secont condition:: tensor(1.8525e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8486e-11, dtype=torch.float64)
secont condition:: tensor(2.8486e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9809e-11, dtype=torch.float64)
secont condition:: tensor(2.9809e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5214e-11, dtype=torch.float64)
secont condition:: tensor(3.5214e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3673e-12, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9897e-11, dtype=torch.float64)
secont condition:: tensor(3.9897e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0123e-11, dtype=torch.float64)
secont condition:: tensor(3.0123e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9286e-11, dtype=torch.float64)
secont condition:: tensor(3.9286e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9545e-11, dtype=torch.float64)
secont condition:: tensor(1.9545e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-11, dtype=torch.float64)
secont condition:: tensor(3.7787e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-11, dtype=torch.float64)
secont condition:: tensor(6.5951e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7875e-11, dtype=torch.float64)
secont condition:: tensor(3.7875e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2970e-11, dtype=torch.float64)
secont condition:: tensor(3.2970e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2591e-11, dtype=torch.float64)
secont condition:: tensor(5.2591e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5766e-11, dtype=torch.float64)
secont condition:: tensor(3.5766e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0416e-11, dtype=torch.float64)
secont condition:: tensor(3.0416e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1340e-11, dtype=torch.float64)
secont condition:: tensor(5.1340e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8768e-11, dtype=torch.float64)
secont condition:: tensor(2.8768e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4090e-10, dtype=torch.float64)
secont condition:: tensor(2.4090e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5709e-11, dtype=torch.float64)
secont condition:: tensor(2.5709e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6849e-11, dtype=torch.float64)
secont condition:: tensor(5.6849e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6528e-11, dtype=torch.float64)
secont condition:: tensor(3.6528e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0955e-11, dtype=torch.float64)
secont condition:: tensor(4.0955e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7797e-11, dtype=torch.float64)
secont condition:: tensor(4.7797e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2097e-11, dtype=torch.float64)
secont condition:: tensor(4.2097e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2486e-11, dtype=torch.float64)
secont condition:: tensor(9.2486e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2611e-11, dtype=torch.float64)
secont condition:: tensor(6.2611e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0498e-11, dtype=torch.float64)
secont condition:: tensor(5.0498e-11, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5641e-11, dtype=torch.float64)
secont condition:: tensor(5.5641e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5979e-11, dtype=torch.float64)
secont condition:: tensor(2.5979e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8579e-11, dtype=torch.float64)
secont condition:: tensor(1.8579e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4974e-11, dtype=torch.float64)
secont condition:: tensor(5.4974e-11, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6969e-11, dtype=torch.float64)
secont condition:: tensor(5.6969e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1064e-11, dtype=torch.float64)
secont condition:: tensor(5.1064e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4655e-11, dtype=torch.float64)
secont condition:: tensor(5.4655e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1933e-11, dtype=torch.float64)
secont condition:: tensor(4.1933e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7495e-11, dtype=torch.float64)
secont condition:: tensor(4.7495e-11, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7958e-11, dtype=torch.float64)
secont condition:: tensor(1.7958e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5643e-11, dtype=torch.float64)
secont condition:: tensor(2.5643e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7875e-11, dtype=torch.float64)
secont condition:: tensor(4.7875e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3874e-11, dtype=torch.float64)
secont condition:: tensor(5.3874e-11, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3911e-11, dtype=torch.float64)
secont condition:: tensor(3.3911e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9934e-11, dtype=torch.float64)
secont condition:: tensor(7.9934e-11, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4885e-11, dtype=torch.float64)
secont condition:: tensor(3.4885e-11, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3019e-11, dtype=torch.float64)
secont condition:: tensor(8.3019e-11, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8809e-11, dtype=torch.float64)
secont condition:: tensor(2.8809e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9762e-11, dtype=torch.float64)
secont condition:: tensor(5.9762e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8449e-11, dtype=torch.float64)
secont condition:: tensor(7.8449e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9882e-11, dtype=torch.float64)
secont condition:: tensor(3.9882e-11, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7034e-11, dtype=torch.float64)
secont condition:: tensor(4.7034e-11, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1154e-11, dtype=torch.float64)
secont condition:: tensor(7.1154e-11, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4407e-10, dtype=torch.float64)
secont condition:: tensor(1.4407e-10, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6980e-11, dtype=torch.float64)
secont condition:: tensor(7.6980e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0201e-10, dtype=torch.float64)
secont condition:: tensor(1.0201e-10, dtype=torch.float64)
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0653e-10, dtype=torch.float64)
secont condition:: tensor(1.0653e-10, dtype=torch.float64)
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7258e-11, dtype=torch.float64)
secont condition:: tensor(2.7258e-11, dtype=torch.float64)
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0016e-11, dtype=torch.float64)
secont condition:: tensor(7.0016e-11, dtype=torch.float64)
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1293e-10, dtype=torch.float64)
secont condition:: tensor(1.1293e-10, dtype=torch.float64)
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0202e-10, dtype=torch.float64)
secont condition:: tensor(1.0202e-10, dtype=torch.float64)
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0632e-10, dtype=torch.float64)
secont condition:: tensor(1.0632e-10, dtype=torch.float64)
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7804e-11, dtype=torch.float64)
secont condition:: tensor(2.7804e-11, dtype=torch.float64)
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3803e-10, dtype=torch.float64)
secont condition:: tensor(1.3803e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-10, dtype=torch.float64)
secont condition:: tensor(1.2282e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8090e-11, dtype=torch.float64)
secont condition:: tensor(9.8090e-11, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2342e-10, dtype=torch.float64)
secont condition:: tensor(1.2342e-10, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 119.43054366111755
curr_diff: 0 tensor(3.3577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8606e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.0493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6238e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0307e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1780e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.0153021812439
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 162.89628863334656
time_baseline:: 163.1710023880005
curr_diff: 0 tensor(1.4651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6602e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1512e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2915e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4773e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0222e-12, dtype=torch.float64)
secont condition:: tensor(7.0222e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1529e-11, dtype=torch.float64)
secont condition:: tensor(1.1529e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-11, dtype=torch.float64)
secont condition:: tensor(1.6212e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0518e-11, dtype=torch.float64)
secont condition:: tensor(2.0518e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-11, dtype=torch.float64)
secont condition:: tensor(2.4019e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6769e-11, dtype=torch.float64)
secont condition:: tensor(2.6769e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1367e-11, dtype=torch.float64)
secont condition:: tensor(3.1367e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-11, dtype=torch.float64)
secont condition:: tensor(2.5921e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5729e-11, dtype=torch.float64)
secont condition:: tensor(2.5729e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1291e-11, dtype=torch.float64)
secont condition:: tensor(3.1291e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2702e-11, dtype=torch.float64)
secont condition:: tensor(3.2702e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-11, dtype=torch.float64)
secont condition:: tensor(2.7504e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3914e-11, dtype=torch.float64)
secont condition:: tensor(2.3914e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5912e-11, dtype=torch.float64)
secont condition:: tensor(3.5912e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5817e-11, dtype=torch.float64)
secont condition:: tensor(1.5817e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-11, dtype=torch.float64)
secont condition:: tensor(1.8525e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8486e-11, dtype=torch.float64)
secont condition:: tensor(2.8486e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9809e-11, dtype=torch.float64)
secont condition:: tensor(2.9809e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5214e-11, dtype=torch.float64)
secont condition:: tensor(3.5214e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3673e-12, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9897e-11, dtype=torch.float64)
secont condition:: tensor(3.9897e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0123e-11, dtype=torch.float64)
secont condition:: tensor(3.0123e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9286e-11, dtype=torch.float64)
secont condition:: tensor(3.9286e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9545e-11, dtype=torch.float64)
secont condition:: tensor(1.9545e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-11, dtype=torch.float64)
secont condition:: tensor(3.7787e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-11, dtype=torch.float64)
secont condition:: tensor(6.5951e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7875e-11, dtype=torch.float64)
secont condition:: tensor(3.7875e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2970e-11, dtype=torch.float64)
secont condition:: tensor(3.2970e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2591e-11, dtype=torch.float64)
secont condition:: tensor(5.2591e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5766e-11, dtype=torch.float64)
secont condition:: tensor(3.5766e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0416e-11, dtype=torch.float64)
secont condition:: tensor(3.0416e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1340e-11, dtype=torch.float64)
secont condition:: tensor(5.1340e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8768e-11, dtype=torch.float64)
secont condition:: tensor(2.8768e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4090e-10, dtype=torch.float64)
secont condition:: tensor(2.4090e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5709e-11, dtype=torch.float64)
secont condition:: tensor(2.5709e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6849e-11, dtype=torch.float64)
secont condition:: tensor(5.6849e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6528e-11, dtype=torch.float64)
secont condition:: tensor(3.6528e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0955e-11, dtype=torch.float64)
secont condition:: tensor(4.0955e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7797e-11, dtype=torch.float64)
secont condition:: tensor(4.7797e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2097e-11, dtype=torch.float64)
secont condition:: tensor(4.2097e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2486e-11, dtype=torch.float64)
secont condition:: tensor(9.2486e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2611e-11, dtype=torch.float64)
secont condition:: tensor(6.2611e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0498e-11, dtype=torch.float64)
secont condition:: tensor(5.0498e-11, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5641e-11, dtype=torch.float64)
secont condition:: tensor(5.5641e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5979e-11, dtype=torch.float64)
secont condition:: tensor(2.5979e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8579e-11, dtype=torch.float64)
secont condition:: tensor(1.8579e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4974e-11, dtype=torch.float64)
secont condition:: tensor(5.4974e-11, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6969e-11, dtype=torch.float64)
secont condition:: tensor(5.6969e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1064e-11, dtype=torch.float64)
secont condition:: tensor(5.1064e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4655e-11, dtype=torch.float64)
secont condition:: tensor(5.4655e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1933e-11, dtype=torch.float64)
secont condition:: tensor(4.1933e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7495e-11, dtype=torch.float64)
secont condition:: tensor(4.7495e-11, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7958e-11, dtype=torch.float64)
secont condition:: tensor(1.7958e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5643e-11, dtype=torch.float64)
secont condition:: tensor(2.5643e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7875e-11, dtype=torch.float64)
secont condition:: tensor(4.7875e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3874e-11, dtype=torch.float64)
secont condition:: tensor(5.3874e-11, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3911e-11, dtype=torch.float64)
secont condition:: tensor(3.3911e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9934e-11, dtype=torch.float64)
secont condition:: tensor(7.9934e-11, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4885e-11, dtype=torch.float64)
secont condition:: tensor(3.4885e-11, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3019e-11, dtype=torch.float64)
secont condition:: tensor(8.3019e-11, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8809e-11, dtype=torch.float64)
secont condition:: tensor(2.8809e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9762e-11, dtype=torch.float64)
secont condition:: tensor(5.9762e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8449e-11, dtype=torch.float64)
secont condition:: tensor(7.8449e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9882e-11, dtype=torch.float64)
secont condition:: tensor(3.9882e-11, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7034e-11, dtype=torch.float64)
secont condition:: tensor(4.7034e-11, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1154e-11, dtype=torch.float64)
secont condition:: tensor(7.1154e-11, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4407e-10, dtype=torch.float64)
secont condition:: tensor(1.4407e-10, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6980e-11, dtype=torch.float64)
secont condition:: tensor(7.6980e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0201e-10, dtype=torch.float64)
secont condition:: tensor(1.0201e-10, dtype=torch.float64)
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0653e-10, dtype=torch.float64)
secont condition:: tensor(1.0653e-10, dtype=torch.float64)
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7258e-11, dtype=torch.float64)
secont condition:: tensor(2.7258e-11, dtype=torch.float64)
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0016e-11, dtype=torch.float64)
secont condition:: tensor(7.0016e-11, dtype=torch.float64)
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1293e-10, dtype=torch.float64)
secont condition:: tensor(1.1293e-10, dtype=torch.float64)
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0202e-10, dtype=torch.float64)
secont condition:: tensor(1.0202e-10, dtype=torch.float64)
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0632e-10, dtype=torch.float64)
secont condition:: tensor(1.0632e-10, dtype=torch.float64)
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7804e-11, dtype=torch.float64)
secont condition:: tensor(2.7804e-11, dtype=torch.float64)
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3803e-10, dtype=torch.float64)
secont condition:: tensor(1.3803e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-10, dtype=torch.float64)
secont condition:: tensor(1.2282e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8090e-11, dtype=torch.float64)
secont condition:: tensor(9.8090e-11, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2342e-10, dtype=torch.float64)
secont condition:: tensor(1.2342e-10, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 119.56105160713196
curr_diff: 0 tensor(3.3577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8606e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.0493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6238e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0307e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1780e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.870952129364
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.09228992462158
time_baseline:: 163.36016201972961
curr_diff: 0 tensor(1.4651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6602e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1512e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2915e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4773e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0222e-12, dtype=torch.float64)
secont condition:: tensor(7.0222e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1529e-11, dtype=torch.float64)
secont condition:: tensor(1.1529e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-11, dtype=torch.float64)
secont condition:: tensor(1.6212e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0518e-11, dtype=torch.float64)
secont condition:: tensor(2.0518e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-11, dtype=torch.float64)
secont condition:: tensor(2.4019e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6769e-11, dtype=torch.float64)
secont condition:: tensor(2.6769e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1367e-11, dtype=torch.float64)
secont condition:: tensor(3.1367e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-11, dtype=torch.float64)
secont condition:: tensor(2.5921e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5729e-11, dtype=torch.float64)
secont condition:: tensor(2.5729e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1291e-11, dtype=torch.float64)
secont condition:: tensor(3.1291e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2702e-11, dtype=torch.float64)
secont condition:: tensor(3.2702e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-11, dtype=torch.float64)
secont condition:: tensor(2.7504e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3914e-11, dtype=torch.float64)
secont condition:: tensor(2.3914e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5912e-11, dtype=torch.float64)
secont condition:: tensor(3.5912e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5817e-11, dtype=torch.float64)
secont condition:: tensor(1.5817e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-11, dtype=torch.float64)
secont condition:: tensor(1.8525e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8486e-11, dtype=torch.float64)
secont condition:: tensor(2.8486e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9809e-11, dtype=torch.float64)
secont condition:: tensor(2.9809e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5214e-11, dtype=torch.float64)
secont condition:: tensor(3.5214e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3673e-12, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9897e-11, dtype=torch.float64)
secont condition:: tensor(3.9897e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0123e-11, dtype=torch.float64)
secont condition:: tensor(3.0123e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9286e-11, dtype=torch.float64)
secont condition:: tensor(3.9286e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9545e-11, dtype=torch.float64)
secont condition:: tensor(1.9545e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-11, dtype=torch.float64)
secont condition:: tensor(3.7787e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-11, dtype=torch.float64)
secont condition:: tensor(6.5951e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7875e-11, dtype=torch.float64)
secont condition:: tensor(3.7875e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2970e-11, dtype=torch.float64)
secont condition:: tensor(3.2970e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2591e-11, dtype=torch.float64)
secont condition:: tensor(5.2591e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5766e-11, dtype=torch.float64)
secont condition:: tensor(3.5766e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0416e-11, dtype=torch.float64)
secont condition:: tensor(3.0416e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1340e-11, dtype=torch.float64)
secont condition:: tensor(5.1340e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8768e-11, dtype=torch.float64)
secont condition:: tensor(2.8768e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4090e-10, dtype=torch.float64)
secont condition:: tensor(2.4090e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5709e-11, dtype=torch.float64)
secont condition:: tensor(2.5709e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6849e-11, dtype=torch.float64)
secont condition:: tensor(5.6849e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6528e-11, dtype=torch.float64)
secont condition:: tensor(3.6528e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0955e-11, dtype=torch.float64)
secont condition:: tensor(4.0955e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7797e-11, dtype=torch.float64)
secont condition:: tensor(4.7797e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2097e-11, dtype=torch.float64)
secont condition:: tensor(4.2097e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2486e-11, dtype=torch.float64)
secont condition:: tensor(9.2486e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2611e-11, dtype=torch.float64)
secont condition:: tensor(6.2611e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0498e-11, dtype=torch.float64)
secont condition:: tensor(5.0498e-11, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5641e-11, dtype=torch.float64)
secont condition:: tensor(5.5641e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5979e-11, dtype=torch.float64)
secont condition:: tensor(2.5979e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8579e-11, dtype=torch.float64)
secont condition:: tensor(1.8579e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4974e-11, dtype=torch.float64)
secont condition:: tensor(5.4974e-11, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6969e-11, dtype=torch.float64)
secont condition:: tensor(5.6969e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1064e-11, dtype=torch.float64)
secont condition:: tensor(5.1064e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4655e-11, dtype=torch.float64)
secont condition:: tensor(5.4655e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1933e-11, dtype=torch.float64)
secont condition:: tensor(4.1933e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7495e-11, dtype=torch.float64)
secont condition:: tensor(4.7495e-11, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7958e-11, dtype=torch.float64)
secont condition:: tensor(1.7958e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5643e-11, dtype=torch.float64)
secont condition:: tensor(2.5643e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7875e-11, dtype=torch.float64)
secont condition:: tensor(4.7875e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3874e-11, dtype=torch.float64)
secont condition:: tensor(5.3874e-11, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3911e-11, dtype=torch.float64)
secont condition:: tensor(3.3911e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9934e-11, dtype=torch.float64)
secont condition:: tensor(7.9934e-11, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4885e-11, dtype=torch.float64)
secont condition:: tensor(3.4885e-11, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3019e-11, dtype=torch.float64)
secont condition:: tensor(8.3019e-11, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8809e-11, dtype=torch.float64)
secont condition:: tensor(2.8809e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9762e-11, dtype=torch.float64)
secont condition:: tensor(5.9762e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8449e-11, dtype=torch.float64)
secont condition:: tensor(7.8449e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9882e-11, dtype=torch.float64)
secont condition:: tensor(3.9882e-11, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7034e-11, dtype=torch.float64)
secont condition:: tensor(4.7034e-11, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1154e-11, dtype=torch.float64)
secont condition:: tensor(7.1154e-11, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4407e-10, dtype=torch.float64)
secont condition:: tensor(1.4407e-10, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6980e-11, dtype=torch.float64)
secont condition:: tensor(7.6980e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0201e-10, dtype=torch.float64)
secont condition:: tensor(1.0201e-10, dtype=torch.float64)
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0653e-10, dtype=torch.float64)
secont condition:: tensor(1.0653e-10, dtype=torch.float64)
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7258e-11, dtype=torch.float64)
secont condition:: tensor(2.7258e-11, dtype=torch.float64)
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0016e-11, dtype=torch.float64)
secont condition:: tensor(7.0016e-11, dtype=torch.float64)
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1293e-10, dtype=torch.float64)
secont condition:: tensor(1.1293e-10, dtype=torch.float64)
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0202e-10, dtype=torch.float64)
secont condition:: tensor(1.0202e-10, dtype=torch.float64)
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0632e-10, dtype=torch.float64)
secont condition:: tensor(1.0632e-10, dtype=torch.float64)
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7804e-11, dtype=torch.float64)
secont condition:: tensor(2.7804e-11, dtype=torch.float64)
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3803e-10, dtype=torch.float64)
secont condition:: tensor(1.3803e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-10, dtype=torch.float64)
secont condition:: tensor(1.2282e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8090e-11, dtype=torch.float64)
secont condition:: tensor(9.8090e-11, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2342e-10, dtype=torch.float64)
secont condition:: tensor(1.2342e-10, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 119.85801410675049
curr_diff: 0 tensor(3.3577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8606e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.0493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6238e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0307e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1780e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.82276487350464
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.1295599937439
time_baseline:: 163.40810441970825
curr_diff: 0 tensor(1.4651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6602e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1512e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2915e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4773e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0222e-12, dtype=torch.float64)
secont condition:: tensor(7.0222e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1529e-11, dtype=torch.float64)
secont condition:: tensor(1.1529e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-11, dtype=torch.float64)
secont condition:: tensor(1.6212e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0518e-11, dtype=torch.float64)
secont condition:: tensor(2.0518e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-11, dtype=torch.float64)
secont condition:: tensor(2.4019e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6769e-11, dtype=torch.float64)
secont condition:: tensor(2.6769e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1367e-11, dtype=torch.float64)
secont condition:: tensor(3.1367e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-11, dtype=torch.float64)
secont condition:: tensor(2.5921e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5729e-11, dtype=torch.float64)
secont condition:: tensor(2.5729e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1291e-11, dtype=torch.float64)
secont condition:: tensor(3.1291e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2702e-11, dtype=torch.float64)
secont condition:: tensor(3.2702e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-11, dtype=torch.float64)
secont condition:: tensor(2.7504e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3914e-11, dtype=torch.float64)
secont condition:: tensor(2.3914e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5912e-11, dtype=torch.float64)
secont condition:: tensor(3.5912e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5817e-11, dtype=torch.float64)
secont condition:: tensor(1.5817e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-11, dtype=torch.float64)
secont condition:: tensor(1.8525e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8486e-11, dtype=torch.float64)
secont condition:: tensor(2.8486e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9809e-11, dtype=torch.float64)
secont condition:: tensor(2.9809e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5214e-11, dtype=torch.float64)
secont condition:: tensor(3.5214e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3673e-12, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9897e-11, dtype=torch.float64)
secont condition:: tensor(3.9897e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0123e-11, dtype=torch.float64)
secont condition:: tensor(3.0123e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9286e-11, dtype=torch.float64)
secont condition:: tensor(3.9286e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9545e-11, dtype=torch.float64)
secont condition:: tensor(1.9545e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-11, dtype=torch.float64)
secont condition:: tensor(3.7787e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-11, dtype=torch.float64)
secont condition:: tensor(6.5951e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7875e-11, dtype=torch.float64)
secont condition:: tensor(3.7875e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2970e-11, dtype=torch.float64)
secont condition:: tensor(3.2970e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2591e-11, dtype=torch.float64)
secont condition:: tensor(5.2591e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5766e-11, dtype=torch.float64)
secont condition:: tensor(3.5766e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0416e-11, dtype=torch.float64)
secont condition:: tensor(3.0416e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1340e-11, dtype=torch.float64)
secont condition:: tensor(5.1340e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8768e-11, dtype=torch.float64)
secont condition:: tensor(2.8768e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4090e-10, dtype=torch.float64)
secont condition:: tensor(2.4090e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5709e-11, dtype=torch.float64)
secont condition:: tensor(2.5709e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6849e-11, dtype=torch.float64)
secont condition:: tensor(5.6849e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6528e-11, dtype=torch.float64)
secont condition:: tensor(3.6528e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0955e-11, dtype=torch.float64)
secont condition:: tensor(4.0955e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7797e-11, dtype=torch.float64)
secont condition:: tensor(4.7797e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2097e-11, dtype=torch.float64)
secont condition:: tensor(4.2097e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2486e-11, dtype=torch.float64)
secont condition:: tensor(9.2486e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2611e-11, dtype=torch.float64)
secont condition:: tensor(6.2611e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0498e-11, dtype=torch.float64)
secont condition:: tensor(5.0498e-11, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5641e-11, dtype=torch.float64)
secont condition:: tensor(5.5641e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5979e-11, dtype=torch.float64)
secont condition:: tensor(2.5979e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8579e-11, dtype=torch.float64)
secont condition:: tensor(1.8579e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4974e-11, dtype=torch.float64)
secont condition:: tensor(5.4974e-11, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6969e-11, dtype=torch.float64)
secont condition:: tensor(5.6969e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1064e-11, dtype=torch.float64)
secont condition:: tensor(5.1064e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4655e-11, dtype=torch.float64)
secont condition:: tensor(5.4655e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1933e-11, dtype=torch.float64)
secont condition:: tensor(4.1933e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7495e-11, dtype=torch.float64)
secont condition:: tensor(4.7495e-11, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7958e-11, dtype=torch.float64)
secont condition:: tensor(1.7958e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5643e-11, dtype=torch.float64)
secont condition:: tensor(2.5643e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7875e-11, dtype=torch.float64)
secont condition:: tensor(4.7875e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3874e-11, dtype=torch.float64)
secont condition:: tensor(5.3874e-11, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3911e-11, dtype=torch.float64)
secont condition:: tensor(3.3911e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9934e-11, dtype=torch.float64)
secont condition:: tensor(7.9934e-11, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4885e-11, dtype=torch.float64)
secont condition:: tensor(3.4885e-11, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3019e-11, dtype=torch.float64)
secont condition:: tensor(8.3019e-11, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8809e-11, dtype=torch.float64)
secont condition:: tensor(2.8809e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9762e-11, dtype=torch.float64)
secont condition:: tensor(5.9762e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8449e-11, dtype=torch.float64)
secont condition:: tensor(7.8449e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9882e-11, dtype=torch.float64)
secont condition:: tensor(3.9882e-11, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7034e-11, dtype=torch.float64)
secont condition:: tensor(4.7034e-11, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1154e-11, dtype=torch.float64)
secont condition:: tensor(7.1154e-11, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4407e-10, dtype=torch.float64)
secont condition:: tensor(1.4407e-10, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6980e-11, dtype=torch.float64)
secont condition:: tensor(7.6980e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0201e-10, dtype=torch.float64)
secont condition:: tensor(1.0201e-10, dtype=torch.float64)
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0653e-10, dtype=torch.float64)
secont condition:: tensor(1.0653e-10, dtype=torch.float64)
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7258e-11, dtype=torch.float64)
secont condition:: tensor(2.7258e-11, dtype=torch.float64)
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0016e-11, dtype=torch.float64)
secont condition:: tensor(7.0016e-11, dtype=torch.float64)
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1293e-10, dtype=torch.float64)
secont condition:: tensor(1.1293e-10, dtype=torch.float64)
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0202e-10, dtype=torch.float64)
secont condition:: tensor(1.0202e-10, dtype=torch.float64)
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0632e-10, dtype=torch.float64)
secont condition:: tensor(1.0632e-10, dtype=torch.float64)
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7804e-11, dtype=torch.float64)
secont condition:: tensor(2.7804e-11, dtype=torch.float64)
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3803e-10, dtype=torch.float64)
secont condition:: tensor(1.3803e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-10, dtype=torch.float64)
secont condition:: tensor(1.2282e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8090e-11, dtype=torch.float64)
secont condition:: tensor(9.8090e-11, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2342e-10, dtype=torch.float64)
secont condition:: tensor(1.2342e-10, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 119.80706572532654
curr_diff: 0 tensor(3.3577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8606e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.0493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6238e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0307e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1780e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.30835795402527
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.1623239517212
time_baseline:: 163.4317126274109
curr_diff: 0 tensor(1.4651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6602e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1512e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2915e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4773e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 1
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0222e-12, dtype=torch.float64)
secont condition:: tensor(7.0222e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1529e-11, dtype=torch.float64)
secont condition:: tensor(1.1529e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-11, dtype=torch.float64)
secont condition:: tensor(1.6212e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0518e-11, dtype=torch.float64)
secont condition:: tensor(2.0518e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-11, dtype=torch.float64)
secont condition:: tensor(2.4019e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6769e-11, dtype=torch.float64)
secont condition:: tensor(2.6769e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1367e-11, dtype=torch.float64)
secont condition:: tensor(3.1367e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-11, dtype=torch.float64)
secont condition:: tensor(2.5921e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5729e-11, dtype=torch.float64)
secont condition:: tensor(2.5729e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1291e-11, dtype=torch.float64)
secont condition:: tensor(3.1291e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2702e-11, dtype=torch.float64)
secont condition:: tensor(3.2702e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-11, dtype=torch.float64)
secont condition:: tensor(2.7504e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3914e-11, dtype=torch.float64)
secont condition:: tensor(2.3914e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5912e-11, dtype=torch.float64)
secont condition:: tensor(3.5912e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5817e-11, dtype=torch.float64)
secont condition:: tensor(1.5817e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8525e-11, dtype=torch.float64)
secont condition:: tensor(1.8525e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8486e-11, dtype=torch.float64)
secont condition:: tensor(2.8486e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9809e-11, dtype=torch.float64)
secont condition:: tensor(2.9809e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5214e-11, dtype=torch.float64)
secont condition:: tensor(3.5214e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3673e-12, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9897e-11, dtype=torch.float64)
secont condition:: tensor(3.9897e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0123e-11, dtype=torch.float64)
secont condition:: tensor(3.0123e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9286e-11, dtype=torch.float64)
secont condition:: tensor(3.9286e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9545e-11, dtype=torch.float64)
secont condition:: tensor(1.9545e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7787e-11, dtype=torch.float64)
secont condition:: tensor(3.7787e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-11, dtype=torch.float64)
secont condition:: tensor(6.5951e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7875e-11, dtype=torch.float64)
secont condition:: tensor(3.7875e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2970e-11, dtype=torch.float64)
secont condition:: tensor(3.2970e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2591e-11, dtype=torch.float64)
secont condition:: tensor(5.2591e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5766e-11, dtype=torch.float64)
secont condition:: tensor(3.5766e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0416e-11, dtype=torch.float64)
secont condition:: tensor(3.0416e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1340e-11, dtype=torch.float64)
secont condition:: tensor(5.1340e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8768e-11, dtype=torch.float64)
secont condition:: tensor(2.8768e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4090e-10, dtype=torch.float64)
secont condition:: tensor(2.4090e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5709e-11, dtype=torch.float64)
secont condition:: tensor(2.5709e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6849e-11, dtype=torch.float64)
secont condition:: tensor(5.6849e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6528e-11, dtype=torch.float64)
secont condition:: tensor(3.6528e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0955e-11, dtype=torch.float64)
secont condition:: tensor(4.0955e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4326e-11, dtype=torch.float64)
secont condition:: tensor(4.4326e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7797e-11, dtype=torch.float64)
secont condition:: tensor(4.7797e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2097e-11, dtype=torch.float64)
secont condition:: tensor(4.2097e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2486e-11, dtype=torch.float64)
secont condition:: tensor(9.2486e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2611e-11, dtype=torch.float64)
secont condition:: tensor(6.2611e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0498e-11, dtype=torch.float64)
secont condition:: tensor(5.0498e-11, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5641e-11, dtype=torch.float64)
secont condition:: tensor(5.5641e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5979e-11, dtype=torch.float64)
secont condition:: tensor(2.5979e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8579e-11, dtype=torch.float64)
secont condition:: tensor(1.8579e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4974e-11, dtype=torch.float64)
secont condition:: tensor(5.4974e-11, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6969e-11, dtype=torch.float64)
secont condition:: tensor(5.6969e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1064e-11, dtype=torch.float64)
secont condition:: tensor(5.1064e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4655e-11, dtype=torch.float64)
secont condition:: tensor(5.4655e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1933e-11, dtype=torch.float64)
secont condition:: tensor(4.1933e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7495e-11, dtype=torch.float64)
secont condition:: tensor(4.7495e-11, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7958e-11, dtype=torch.float64)
secont condition:: tensor(1.7958e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5643e-11, dtype=torch.float64)
secont condition:: tensor(2.5643e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7875e-11, dtype=torch.float64)
secont condition:: tensor(4.7875e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3874e-11, dtype=torch.float64)
secont condition:: tensor(5.3874e-11, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3911e-11, dtype=torch.float64)
secont condition:: tensor(3.3911e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9934e-11, dtype=torch.float64)
secont condition:: tensor(7.9934e-11, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4885e-11, dtype=torch.float64)
secont condition:: tensor(3.4885e-11, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3019e-11, dtype=torch.float64)
secont condition:: tensor(8.3019e-11, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8809e-11, dtype=torch.float64)
secont condition:: tensor(2.8809e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9762e-11, dtype=torch.float64)
secont condition:: tensor(5.9762e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8449e-11, dtype=torch.float64)
secont condition:: tensor(7.8449e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9882e-11, dtype=torch.float64)
secont condition:: tensor(3.9882e-11, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7034e-11, dtype=torch.float64)
secont condition:: tensor(4.7034e-11, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1154e-11, dtype=torch.float64)
secont condition:: tensor(7.1154e-11, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4407e-10, dtype=torch.float64)
secont condition:: tensor(1.4407e-10, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6980e-11, dtype=torch.float64)
secont condition:: tensor(7.6980e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0201e-10, dtype=torch.float64)
secont condition:: tensor(1.0201e-10, dtype=torch.float64)
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0653e-10, dtype=torch.float64)
secont condition:: tensor(1.0653e-10, dtype=torch.float64)
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7258e-11, dtype=torch.float64)
secont condition:: tensor(2.7258e-11, dtype=torch.float64)
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0016e-11, dtype=torch.float64)
secont condition:: tensor(7.0016e-11, dtype=torch.float64)
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1293e-10, dtype=torch.float64)
secont condition:: tensor(1.1293e-10, dtype=torch.float64)
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0202e-10, dtype=torch.float64)
secont condition:: tensor(1.0202e-10, dtype=torch.float64)
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0632e-10, dtype=torch.float64)
secont condition:: tensor(1.0632e-10, dtype=torch.float64)
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7804e-11, dtype=torch.float64)
secont condition:: tensor(2.7804e-11, dtype=torch.float64)
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3803e-10, dtype=torch.float64)
secont condition:: tensor(1.3803e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2282e-10, dtype=torch.float64)
secont condition:: tensor(1.2282e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8090e-11, dtype=torch.float64)
secont condition:: tensor(9.8090e-11, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2342e-10, dtype=torch.float64)
secont condition:: tensor(1.2342e-10, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 119.88655066490173
curr_diff: 0 tensor(3.3577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1171e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8606e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.0493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6238e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5544e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0307e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5562e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2171e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4248e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3829e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1780e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.6336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215131
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.175617
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.158853
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.156325
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154120
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.149415
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.148385
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.152420
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.148790
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.148806
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.150135
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.149778
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146751
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.148732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.146937
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 15, Batch: 0, Loss: 0.146159
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.147039
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 17, Batch: 0, Loss: 0.145059
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.140670
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.142325
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 20, Batch: 0, Loss: 0.142729
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 21, Batch: 0, Loss: 0.146243
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.145737
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.146175
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.143462
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.145401
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 26, Batch: 0, Loss: 0.143441
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 27, Batch: 0, Loss: 0.144920
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.144806
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 29, Batch: 0, Loss: 0.143775
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.146230
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 31, Batch: 0, Loss: 0.140800
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.143554
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.139952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.139827
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.142564
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 36, Batch: 0, Loss: 0.143108
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.143163
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.142589
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 39, Batch: 0, Loss: 0.142108
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.140369
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.145952
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.140843
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 43, Batch: 0, Loss: 0.144108
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.139861
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.144085
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.144349
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.143027
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.143847
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 49, Batch: 0, Loss: 0.140360
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.143183
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.144516
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.143132
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.140608
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.143760
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.141717
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.142005
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 57, Batch: 0, Loss: 0.142378
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 58, Batch: 0, Loss: 0.140435
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 59, Batch: 0, Loss: 0.140187
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.58526372909546
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.3032066822052
time_baseline:: 82.44318747520447
curr_diff: 0 tensor(1.6928e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3749e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.0269e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8470e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.9479e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.7801e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.1408e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1899e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0440e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7786e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3420e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5444e-11, dtype=torch.float64)
secont condition:: tensor(2.5444e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5776e-11, dtype=torch.float64)
secont condition:: tensor(1.5776e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6387e-11, dtype=torch.float64)
secont condition:: tensor(2.6387e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5939e-11, dtype=torch.float64)
secont condition:: tensor(1.5939e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8076e-11, dtype=torch.float64)
secont condition:: tensor(3.8076e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6098e-11, dtype=torch.float64)
secont condition:: tensor(3.6098e-11, dtype=torch.float64)
curr_secont condition:: tensor(-5.8030e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2646e-11, dtype=torch.float64)
secont condition:: tensor(2.2646e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.9099e-11, dtype=torch.float64)
secont condition:: tensor(5.9099e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9732e-11, dtype=torch.float64)
secont condition:: tensor(2.9732e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3103e-12, dtype=torch.float64)
secont condition:: tensor(5.3103e-12, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1299e-11, dtype=torch.float64)
secont condition:: tensor(3.1299e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.3532e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9939e-11, dtype=torch.float64)
secont condition:: tensor(5.9939e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6483e-11, dtype=torch.float64)
secont condition:: tensor(4.6483e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3658e-10, dtype=torch.float64)
secont condition:: tensor(1.3658e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6357e-11, dtype=torch.float64)
secont condition:: tensor(4.6357e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5188e-11, dtype=torch.float64)
secont condition:: tensor(3.5188e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.5546e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0919e-11, dtype=torch.float64)
secont condition:: tensor(5.0919e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0862e-10, dtype=torch.float64)
secont condition:: tensor(2.0862e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.3593e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8040e-11, dtype=torch.float64)
secont condition:: tensor(4.8040e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0135e-10, dtype=torch.float64)
secont condition:: tensor(1.0135e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3166e-11, dtype=torch.float64)
secont condition:: tensor(6.3166e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4459e-11, dtype=torch.float64)
secont condition:: tensor(5.4459e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.4201e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.2331e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5806e-10, dtype=torch.float64)
secont condition:: tensor(2.5806e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5391e-11, dtype=torch.float64)
secont condition:: tensor(9.5391e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6942e-10, dtype=torch.float64)
secont condition:: tensor(5.6942e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5231e-11, dtype=torch.float64)
secont condition:: tensor(6.5231e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5064e-11, dtype=torch.float64)
secont condition:: tensor(8.5064e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2731e-11, dtype=torch.float64)
secont condition:: tensor(5.2731e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0201e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6434e-10, dtype=torch.float64)
secont condition:: tensor(1.6434e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0479e-10, dtype=torch.float64)
secont condition:: tensor(1.0479e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1818e-10, dtype=torch.float64)
secont condition:: tensor(1.1818e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2799e-11, dtype=torch.float64)
secont condition:: tensor(4.2799e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2248e-11, dtype=torch.float64)
secont condition:: tensor(8.2248e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.0205e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6955e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9955e-10, dtype=torch.float64)
secont condition:: tensor(1.9955e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0050e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2620e-10, dtype=torch.float64)
secont condition:: tensor(3.2620e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7007e-11, dtype=torch.float64)
secont condition:: tensor(6.7007e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.2389e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9988e-10, dtype=torch.float64)
secont condition:: tensor(1.9988e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4100e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5095e-10, dtype=torch.float64)
secont condition:: tensor(1.5095e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2939e-10, dtype=torch.float64)
secont condition:: tensor(3.2939e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.6375e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3554e-10, dtype=torch.float64)
secont condition:: tensor(2.3554e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.9807e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5908e-11, dtype=torch.float64)
secont condition:: tensor(2.5908e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4302e-10, dtype=torch.float64)
secont condition:: tensor(1.4302e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0227e-11, dtype=torch.float64)
secont condition:: tensor(4.0227e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0234e-10, dtype=torch.float64)
secont condition:: tensor(1.0234e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3253e-11, dtype=torch.float64)
secont condition:: tensor(3.3253e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9869e-11, dtype=torch.float64)
secont condition:: tensor(8.9869e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9067e-11, dtype=torch.float64)
secont condition:: tensor(8.9067e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-10, dtype=torch.float64)
secont condition:: tensor(1.6087e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2730e-11, dtype=torch.float64)
secont condition:: tensor(3.2730e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9001e-10, dtype=torch.float64)
secont condition:: tensor(2.9001e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7421e-10, dtype=torch.float64)
secont condition:: tensor(4.7421e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4490e-09, dtype=torch.float64)
secont condition:: tensor(1.4490e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7595e-10, dtype=torch.float64)
secont condition:: tensor(1.7595e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1734e-10, dtype=torch.float64)
secont condition:: tensor(1.1734e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.5266e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3899e-10, dtype=torch.float64)
secont condition:: tensor(1.3899e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1314e-10, dtype=torch.float64)
secont condition:: tensor(2.1314e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5465e-10, dtype=torch.float64)
secont condition:: tensor(3.5465e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9554e-10, dtype=torch.float64)
secont condition:: tensor(1.9554e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2423e-10, dtype=torch.float64)
secont condition:: tensor(3.2423e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3175e-10, dtype=torch.float64)
secont condition:: tensor(1.3175e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3197e-10, dtype=torch.float64)
secont condition:: tensor(1.3197e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1007e-10, dtype=torch.float64)
secont condition:: tensor(1.1007e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6257e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1924e-10, dtype=torch.float64)
secont condition:: tensor(2.1924e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6601e-10, dtype=torch.float64)
secont condition:: tensor(1.6601e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5988e-10, dtype=torch.float64)
secont condition:: tensor(1.5988e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2641e-10, dtype=torch.float64)
secont condition:: tensor(3.2641e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5144e-10, dtype=torch.float64)
secont condition:: tensor(3.5144e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 61.90806841850281
curr_diff: 0 tensor(1.0634e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6760e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6680e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7421e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.0570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2036e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.0862e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7032e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1237e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.2660e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.6049e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7129e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.4775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5562e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2823e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2652e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3752e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.8856e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7858e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5308e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212665
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.170026
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.163133
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.156898
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.158471
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.154615
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.151610
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.148082
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.149219
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.145124
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.147281
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.146979
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.147786
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.145398
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.148446
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 15, Batch: 0, Loss: 0.143759
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 16, Batch: 0, Loss: 0.145073
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 17, Batch: 0, Loss: 0.145573
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 18, Batch: 0, Loss: 0.147215
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.144054
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.144167
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.145245
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.143513
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.145789
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.143736
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.142529
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.142323
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.143330
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.141279
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.141596
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 31, Batch: 0, Loss: 0.144761
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.143293
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.138680
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.141663
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 35, Batch: 0, Loss: 0.145054
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.140809
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.141498
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 38, Batch: 0, Loss: 0.140443
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 39, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.142745
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.141599
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 42, Batch: 0, Loss: 0.144286
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.143624
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.145004
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.140623
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 46, Batch: 0, Loss: 0.139640
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.140224
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.143724
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.143029
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.143823
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.146144
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.144382
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.145767
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.143524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.141541
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 56, Batch: 0, Loss: 0.141760
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 57, Batch: 0, Loss: 0.142604
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 58, Batch: 0, Loss: 0.142970
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 59, Batch: 0, Loss: 0.145165
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 123.45447897911072
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.32996034622192
time_baseline:: 82.47022008895874
curr_diff: 0 tensor(2.3733e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1662e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.2385e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3074e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.7671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.7353e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.1522e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0223e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.5382e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6025e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9766e-11, dtype=torch.float64)
secont condition:: tensor(2.9766e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1180e-12, dtype=torch.float64)
secont condition:: tensor(5.1180e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.8707e-12, dtype=torch.float64)
secont condition:: tensor(7.8707e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9676e-11, dtype=torch.float64)
secont condition:: tensor(2.9676e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9808e-11, dtype=torch.float64)
secont condition:: tensor(3.9808e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4242e-11, dtype=torch.float64)
secont condition:: tensor(2.4242e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6264e-11, dtype=torch.float64)
secont condition:: tensor(1.6264e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1166e-11, dtype=torch.float64)
secont condition:: tensor(4.1166e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4321e-11, dtype=torch.float64)
secont condition:: tensor(4.4321e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4010e-11, dtype=torch.float64)
secont condition:: tensor(1.4010e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1754e-12, dtype=torch.float64)
secont condition:: tensor(8.1754e-12, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1359e-11, dtype=torch.float64)
secont condition:: tensor(4.1359e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7293e-11, dtype=torch.float64)
secont condition:: tensor(3.7293e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6839e-11, dtype=torch.float64)
secont condition:: tensor(4.6839e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8612e-11, dtype=torch.float64)
secont condition:: tensor(1.8612e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0698e-11, dtype=torch.float64)
secont condition:: tensor(3.0698e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6624e-11, dtype=torch.float64)
secont condition:: tensor(2.6624e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0325e-11, dtype=torch.float64)
secont condition:: tensor(6.0325e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9577e-11, dtype=torch.float64)
secont condition:: tensor(4.9577e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8130e-11, dtype=torch.float64)
secont condition:: tensor(2.8130e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1850e-11, dtype=torch.float64)
secont condition:: tensor(6.1850e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8764e-11, dtype=torch.float64)
secont condition:: tensor(2.8764e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3963e-11, dtype=torch.float64)
secont condition:: tensor(2.3963e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9168e-11, dtype=torch.float64)
secont condition:: tensor(5.9168e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1584e-11, dtype=torch.float64)
secont condition:: tensor(3.1584e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3962e-11, dtype=torch.float64)
secont condition:: tensor(2.3962e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4394e-11, dtype=torch.float64)
secont condition:: tensor(3.4394e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8754e-11, dtype=torch.float64)
secont condition:: tensor(5.8754e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.1720e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5797e-11, dtype=torch.float64)
secont condition:: tensor(6.5797e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.3555e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9746e-11, dtype=torch.float64)
secont condition:: tensor(9.9746e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8873e-11, dtype=torch.float64)
secont condition:: tensor(5.8873e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6598e-11, dtype=torch.float64)
secont condition:: tensor(5.6598e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1998e-12, dtype=torch.float64)
secont condition:: tensor(3.1998e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3682e-11, dtype=torch.float64)
secont condition:: tensor(4.3682e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2602e-11, dtype=torch.float64)
secont condition:: tensor(4.2602e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0386e-11, dtype=torch.float64)
secont condition:: tensor(6.0386e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8955e-12, dtype=torch.float64)
secont condition:: tensor(1.8955e-12, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2162e-11, dtype=torch.float64)
secont condition:: tensor(4.2162e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7830e-11, dtype=torch.float64)
secont condition:: tensor(6.7830e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4800e-10, dtype=torch.float64)
secont condition:: tensor(1.4800e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7616e-11, dtype=torch.float64)
secont condition:: tensor(6.7616e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8559e-11, dtype=torch.float64)
secont condition:: tensor(7.8559e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0286e-11, dtype=torch.float64)
secont condition:: tensor(4.0286e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1509e-11, dtype=torch.float64)
secont condition:: tensor(1.1509e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4127e-11, dtype=torch.float64)
secont condition:: tensor(5.4127e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3426e-11, dtype=torch.float64)
secont condition:: tensor(2.3426e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8205e-11, dtype=torch.float64)
secont condition:: tensor(8.8205e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6960e-11, dtype=torch.float64)
secont condition:: tensor(9.6960e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3486e-10, dtype=torch.float64)
secont condition:: tensor(1.3486e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5584e-11, dtype=torch.float64)
secont condition:: tensor(6.5584e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.4535e-11, dtype=torch.float64)
secont condition:: tensor(8.4535e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3163e-11, dtype=torch.float64)
secont condition:: tensor(8.3163e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7921e-11, dtype=torch.float64)
secont condition:: tensor(6.7921e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4229e-10, dtype=torch.float64)
secont condition:: tensor(1.4229e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0190e-10, dtype=torch.float64)
secont condition:: tensor(1.0190e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3973e-11, dtype=torch.float64)
secont condition:: tensor(7.3973e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.9980e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8881e-11, dtype=torch.float64)
secont condition:: tensor(5.8881e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2297e-10, dtype=torch.float64)
secont condition:: tensor(1.2297e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4602e-11, dtype=torch.float64)
secont condition:: tensor(6.4602e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.6997e-11, dtype=torch.float64)
secont condition:: tensor(8.6997e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6697e-11, dtype=torch.float64)
secont condition:: tensor(6.6697e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9241e-11, dtype=torch.float64)
secont condition:: tensor(3.9241e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7729e-11, dtype=torch.float64)
secont condition:: tensor(3.7729e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4971e-10, dtype=torch.float64)
secont condition:: tensor(1.4971e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2234e-11, dtype=torch.float64)
secont condition:: tensor(3.2234e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1052e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8059e-10, dtype=torch.float64)
secont condition:: tensor(5.8059e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6910e-11, dtype=torch.float64)
secont condition:: tensor(7.6910e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7593e-11, dtype=torch.float64)
secont condition:: tensor(9.7593e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6630e-10, dtype=torch.float64)
secont condition:: tensor(1.6630e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6573e-10, dtype=torch.float64)
secont condition:: tensor(3.6573e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8730e-10, dtype=torch.float64)
secont condition:: tensor(1.8730e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4603e-11, dtype=torch.float64)
secont condition:: tensor(1.4603e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5903e-10, dtype=torch.float64)
secont condition:: tensor(1.5903e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4113e-10, dtype=torch.float64)
secont condition:: tensor(1.4113e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3212e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 66.25237107276917
curr_diff: 0 tensor(1.4865e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.2260e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1267e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0511e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.3027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.8355e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.7183e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.1663e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.2482e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0235e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.9815e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.7231e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3436e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1098e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0874e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.2869e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3955e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0948e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0006e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.4947e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4176e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.8733e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212456
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.169821
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.159145
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.154948
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154927
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.152026
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.150235
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.146884
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.150579
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 9, Batch: 0, Loss: 0.146886
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.144729
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.147184
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.151217
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.145907
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.146330
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.147773
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.144219
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 17, Batch: 0, Loss: 0.144182
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.146747
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 19, Batch: 0, Loss: 0.144642
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 20, Batch: 0, Loss: 0.143795
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.141035
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.143448
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.139437
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.141605
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.143120
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 26, Batch: 0, Loss: 0.142000
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144295
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.142507
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.143491
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.142408
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.143772
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.145083
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.140534
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 35, Batch: 0, Loss: 0.141659
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.145040
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.144340
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.144225
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.143652
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.140725
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 41, Batch: 0, Loss: 0.141826
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.144725
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.140688
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.141103
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.143163
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.144261
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.141698
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 48, Batch: 0, Loss: 0.141861
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.140908
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.142996
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.143022
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 52, Batch: 0, Loss: 0.143205
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.141024
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.140655
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.143160
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.141889
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 57, Batch: 0, Loss: 0.140104
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 58, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 59, Batch: 0, Loss: 0.144546
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 123.55897235870361
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.2902193069458
time_baseline:: 82.42326855659485
curr_diff: 0 tensor(2.4976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4277e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4272e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6231e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.5383e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.8086e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0645e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5078e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0055e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2184e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.1896e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4191e-32, dtype=torch.float64)
secont condition:: tensor(2.4191e-32, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5084e-11, dtype=torch.float64)
secont condition:: tensor(1.5084e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1659e-12, dtype=torch.float64)
secont condition:: tensor(9.1659e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5441e-11, dtype=torch.float64)
secont condition:: tensor(2.5441e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2691e-11, dtype=torch.float64)
secont condition:: tensor(4.2691e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7423e-11, dtype=torch.float64)
secont condition:: tensor(2.7423e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9675e-11, dtype=torch.float64)
secont condition:: tensor(1.9675e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0348e-11, dtype=torch.float64)
secont condition:: tensor(3.0348e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5915e-12, dtype=torch.float64)
secont condition:: tensor(5.5915e-12, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1265e-11, dtype=torch.float64)
secont condition:: tensor(3.1265e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3542e-11, dtype=torch.float64)
secont condition:: tensor(2.3542e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9741e-11, dtype=torch.float64)
secont condition:: tensor(2.9741e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2591e-11, dtype=torch.float64)
secont condition:: tensor(3.2591e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9178e-11, dtype=torch.float64)
secont condition:: tensor(3.9178e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7294e-11, dtype=torch.float64)
secont condition:: tensor(4.7294e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8454e-11, dtype=torch.float64)
secont condition:: tensor(1.8454e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4463e-11, dtype=torch.float64)
secont condition:: tensor(1.4463e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2303e-11, dtype=torch.float64)
secont condition:: tensor(4.2303e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8687e-11, dtype=torch.float64)
secont condition:: tensor(4.8687e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7307e-11, dtype=torch.float64)
secont condition:: tensor(3.7307e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2594e-11, dtype=torch.float64)
secont condition:: tensor(3.2594e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0476e-11, dtype=torch.float64)
secont condition:: tensor(3.0476e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7381e-11, dtype=torch.float64)
secont condition:: tensor(4.7381e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2828e-11, dtype=torch.float64)
secont condition:: tensor(4.2828e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.4043e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1205e-11, dtype=torch.float64)
secont condition:: tensor(6.1205e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8091e-11, dtype=torch.float64)
secont condition:: tensor(6.8091e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.3740e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8374e-11, dtype=torch.float64)
secont condition:: tensor(5.8374e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3578e-11, dtype=torch.float64)
secont condition:: tensor(5.3578e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0310e-11, dtype=torch.float64)
secont condition:: tensor(3.0310e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5430e-11, dtype=torch.float64)
secont condition:: tensor(6.5430e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.5620e-11, dtype=torch.float64)
secont condition:: tensor(7.5620e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9655e-11, dtype=torch.float64)
secont condition:: tensor(1.9655e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2071e-10, dtype=torch.float64)
secont condition:: tensor(1.2071e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4840e-11, dtype=torch.float64)
secont condition:: tensor(5.4840e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.3220e-11, dtype=torch.float64)
secont condition:: tensor(7.3220e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8239e-11, dtype=torch.float64)
secont condition:: tensor(4.8239e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8842e-12, dtype=torch.float64)
secont condition:: tensor(6.8842e-12, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0938e-11, dtype=torch.float64)
secont condition:: tensor(5.0938e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2081e-11, dtype=torch.float64)
secont condition:: tensor(4.2081e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2843e-11, dtype=torch.float64)
secont condition:: tensor(5.2843e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2228e-11, dtype=torch.float64)
secont condition:: tensor(6.2228e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2217e-11, dtype=torch.float64)
secont condition:: tensor(5.2217e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1839e-11, dtype=torch.float64)
secont condition:: tensor(2.1839e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8879e-10, dtype=torch.float64)
secont condition:: tensor(1.8879e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4131e-11, dtype=torch.float64)
secont condition:: tensor(5.4131e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9811e-10, dtype=torch.float64)
secont condition:: tensor(2.9811e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4389e-10, dtype=torch.float64)
secont condition:: tensor(2.4389e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1172e-11, dtype=torch.float64)
secont condition:: tensor(3.1172e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9252e-11, dtype=torch.float64)
secont condition:: tensor(6.9252e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4123e-10, dtype=torch.float64)
secont condition:: tensor(1.4123e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7129e-11, dtype=torch.float64)
secont condition:: tensor(8.7129e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3313e-11, dtype=torch.float64)
secont condition:: tensor(6.3313e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3288e-11, dtype=torch.float64)
secont condition:: tensor(5.3288e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5003e-11, dtype=torch.float64)
secont condition:: tensor(4.5003e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2470e-11, dtype=torch.float64)
secont condition:: tensor(6.2470e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3508e-11, dtype=torch.float64)
secont condition:: tensor(3.3508e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8351e-11, dtype=torch.float64)
secont condition:: tensor(6.8351e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4755e-10, dtype=torch.float64)
secont condition:: tensor(1.4755e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4046e-11, dtype=torch.float64)
secont condition:: tensor(7.4046e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1425e-11, dtype=torch.float64)
secont condition:: tensor(5.1425e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6402e-11, dtype=torch.float64)
secont condition:: tensor(9.6402e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5316e-10, dtype=torch.float64)
secont condition:: tensor(1.5316e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7274e-11, dtype=torch.float64)
secont condition:: tensor(5.7274e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0183e-11, dtype=torch.float64)
secont condition:: tensor(3.0183e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7131e-11, dtype=torch.float64)
secont condition:: tensor(8.7131e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3429e-11, dtype=torch.float64)
secont condition:: tensor(8.3429e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9705e-11, dtype=torch.float64)
secont condition:: tensor(4.9705e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4502e-11, dtype=torch.float64)
secont condition:: tensor(5.4502e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0208e-10, dtype=torch.float64)
secont condition:: tensor(1.0208e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.0537e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3010e-11, dtype=torch.float64)
secont condition:: tensor(8.3010e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4169e-10, dtype=torch.float64)
secont condition:: tensor(1.4169e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0146e-10, dtype=torch.float64)
secont condition:: tensor(1.0146e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4385e-11, dtype=torch.float64)
secont condition:: tensor(8.4385e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4165e-10, dtype=torch.float64)
secont condition:: tensor(2.4165e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8619e-10, dtype=torch.float64)
secont condition:: tensor(1.8619e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3217e-11, dtype=torch.float64)
secont condition:: tensor(8.3217e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5546e-10, dtype=torch.float64)
secont condition:: tensor(1.5546e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1212e-11, dtype=torch.float64)
secont condition:: tensor(2.1212e-11, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.415383100509644
curr_diff: 0 tensor(6.6109e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2324e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.9602e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8933e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.6790e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9099e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9278e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5754e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4736e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0464e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.0208e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.2077e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1622e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1529e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.2527e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5292e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0962e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.9911e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.7765e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.8748e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214276
Test Avg. Loss: 0.000015, Accuracy: 0.959500
Train - Epoch 1, Batch: 0, Loss: 0.172759
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.161848
Test Avg. Loss: 0.000014, Accuracy: 0.962800
Train - Epoch 3, Batch: 0, Loss: 0.156641
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.153244
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.151828
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.154040
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.154002
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 8, Batch: 0, Loss: 0.150637
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.146003
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.146166
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.150007
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.149240
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.143660
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.147001
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.145654
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.142930
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 17, Batch: 0, Loss: 0.140718
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.145884
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 19, Batch: 0, Loss: 0.147342
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 20, Batch: 0, Loss: 0.143454
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 21, Batch: 0, Loss: 0.143191
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.144893
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 23, Batch: 0, Loss: 0.141800
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.142182
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.142555
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.145327
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.144487
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.146475
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.145384
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.143014
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.144703
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.145435
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.144224
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.141780
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.144859
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.142459
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 37, Batch: 0, Loss: 0.142079
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.145143
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.141957
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.142655
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.143041
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.141587
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.143000
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 44, Batch: 0, Loss: 0.143272
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 45, Batch: 0, Loss: 0.141933
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.141636
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.145664
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.142428
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.143120
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.144417
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.141682
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.142407
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.142831
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.144188
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141569
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.141683
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 57, Batch: 0, Loss: 0.144176
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.142359
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 59, Batch: 0, Loss: 0.148446
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 123.16530179977417
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.33195996284485
time_baseline:: 82.46505546569824
curr_diff: 0 tensor(1.7434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5403e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.8017e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7679e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.0952e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8417e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3138e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4278e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4965e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5288e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-11, dtype=torch.float64)
secont condition:: tensor(2.2618e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0538e-11, dtype=torch.float64)
secont condition:: tensor(1.0538e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1385e-12, dtype=torch.float64)
secont condition:: tensor(6.1385e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9713e-11, dtype=torch.float64)
secont condition:: tensor(1.9713e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1152e-11, dtype=torch.float64)
secont condition:: tensor(4.1152e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9114e-11, dtype=torch.float64)
secont condition:: tensor(2.9114e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4508e-11, dtype=torch.float64)
secont condition:: tensor(1.4508e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0587e-11, dtype=torch.float64)
secont condition:: tensor(3.0587e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0829e-11, dtype=torch.float64)
secont condition:: tensor(4.0829e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5722e-11, dtype=torch.float64)
secont condition:: tensor(4.5722e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0343e-11, dtype=torch.float64)
secont condition:: tensor(4.0343e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3544e-11, dtype=torch.float64)
secont condition:: tensor(2.3544e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9482e-11, dtype=torch.float64)
secont condition:: tensor(1.9482e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5380e-11, dtype=torch.float64)
secont condition:: tensor(2.5380e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9426e-11, dtype=torch.float64)
secont condition:: tensor(3.9426e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4574e-11, dtype=torch.float64)
secont condition:: tensor(2.4574e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7049e-12, dtype=torch.float64)
secont condition:: tensor(4.7049e-12, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2546e-11, dtype=torch.float64)
secont condition:: tensor(4.2546e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0293e-11, dtype=torch.float64)
secont condition:: tensor(4.0293e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8788e-11, dtype=torch.float64)
secont condition:: tensor(1.8788e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9792e-11, dtype=torch.float64)
secont condition:: tensor(7.9792e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6778e-11, dtype=torch.float64)
secont condition:: tensor(5.6778e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6560e-12, dtype=torch.float64)
secont condition:: tensor(1.6560e-12, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8541e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6034e-11, dtype=torch.float64)
secont condition:: tensor(6.6034e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7002e-11, dtype=torch.float64)
secont condition:: tensor(1.7002e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.4960e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.0177e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.4858e-11, dtype=torch.float64)
secont condition:: tensor(9.4858e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7215e-11, dtype=torch.float64)
secont condition:: tensor(5.7215e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2428e-11, dtype=torch.float64)
secont condition:: tensor(2.2428e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4629e-11, dtype=torch.float64)
secont condition:: tensor(8.4629e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4003e-11, dtype=torch.float64)
secont condition:: tensor(5.4003e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7912e-11, dtype=torch.float64)
secont condition:: tensor(6.7912e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.3732e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7610e-10, dtype=torch.float64)
secont condition:: tensor(2.7610e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2344e-11, dtype=torch.float64)
secont condition:: tensor(7.2344e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4017e-11, dtype=torch.float64)
secont condition:: tensor(5.4017e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0592e-11, dtype=torch.float64)
secont condition:: tensor(4.0592e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8252e-10, dtype=torch.float64)
secont condition:: tensor(1.8252e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8198e-10, dtype=torch.float64)
secont condition:: tensor(1.8198e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1144e-10, dtype=torch.float64)
secont condition:: tensor(1.1144e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6686e-11, dtype=torch.float64)
secont condition:: tensor(6.6686e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7781e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0518e-10, dtype=torch.float64)
secont condition:: tensor(1.0518e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.8512e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4041e-11, dtype=torch.float64)
secont condition:: tensor(4.4041e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3827e-10, dtype=torch.float64)
secont condition:: tensor(2.3827e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4744e-11, dtype=torch.float64)
secont condition:: tensor(5.4744e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.5249e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2388e-10, dtype=torch.float64)
secont condition:: tensor(4.2388e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4612e-10, dtype=torch.float64)
secont condition:: tensor(2.4612e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7775e-10, dtype=torch.float64)
secont condition:: tensor(1.7775e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6659e-11, dtype=torch.float64)
secont condition:: tensor(7.6659e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4861e-11, dtype=torch.float64)
secont condition:: tensor(7.4861e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9120e-12, dtype=torch.float64)
secont condition:: tensor(6.9120e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.9203e-11, dtype=torch.float64)
secont condition:: tensor(1.9203e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9996e-11, dtype=torch.float64)
secont condition:: tensor(7.9996e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9168e-10, dtype=torch.float64)
secont condition:: tensor(1.9168e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1229e-10, dtype=torch.float64)
secont condition:: tensor(3.1229e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3480e-10, dtype=torch.float64)
secont condition:: tensor(3.3480e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8989e-10, dtype=torch.float64)
secont condition:: tensor(1.8989e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9897e-10, dtype=torch.float64)
secont condition:: tensor(1.9897e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9749e-10, dtype=torch.float64)
secont condition:: tensor(2.9749e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2712e-10, dtype=torch.float64)
secont condition:: tensor(1.2712e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0475e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8302e-11, dtype=torch.float64)
secont condition:: tensor(3.8302e-11, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7173e-10, dtype=torch.float64)
secont condition:: tensor(1.7173e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4078e-11, dtype=torch.float64)
secont condition:: tensor(8.4078e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.5469e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0973e-10, dtype=torch.float64)
secont condition:: tensor(2.0973e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4468e-10, dtype=torch.float64)
secont condition:: tensor(1.4468e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2339e-10, dtype=torch.float64)
secont condition:: tensor(2.2339e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0854e-10, dtype=torch.float64)
secont condition:: tensor(2.0854e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9262e-10, dtype=torch.float64)
secont condition:: tensor(1.9262e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9815e-10, dtype=torch.float64)
secont condition:: tensor(1.9815e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2865e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.9783e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5785e-10, dtype=torch.float64)
secont condition:: tensor(3.5785e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2775e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3693e-10, dtype=torch.float64)
secont condition:: tensor(6.3693e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4262e-10, dtype=torch.float64)
secont condition:: tensor(2.4262e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7440e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9959e-10, dtype=torch.float64)
secont condition:: tensor(3.9959e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0256e-10, dtype=torch.float64)
secont condition:: tensor(7.0256e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.36152911186218
curr_diff: 0 tensor(1.1009e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3700e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9104e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.3551e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6773e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7696e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4229e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8045e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4757e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5493e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7579e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2444e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4948e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.9076e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.4756e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3473e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.8969e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.1554e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6300e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2234e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.217639
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.172096
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 2, Batch: 0, Loss: 0.163426
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157420
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.155231
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.155766
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.150059
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.149911
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 8, Batch: 0, Loss: 0.150967
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.149543
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 10, Batch: 0, Loss: 0.149403
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.142629
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146227
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.145013
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.145867
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.144580
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.147875
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.145134
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 18, Batch: 0, Loss: 0.144332
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.146379
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.142713
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.143932
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.145022
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.142434
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.140021
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.142056
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 26, Batch: 0, Loss: 0.143133
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.143118
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.140552
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.142841
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.147966
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.142790
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.141337
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.141083
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 34, Batch: 0, Loss: 0.142639
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 35, Batch: 0, Loss: 0.145726
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 36, Batch: 0, Loss: 0.142906
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.144526
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 38, Batch: 0, Loss: 0.144120
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 39, Batch: 0, Loss: 0.143457
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 40, Batch: 0, Loss: 0.144916
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.143788
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.143753
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.141882
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.142983
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.147916
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.145831
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.141381
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.144453
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 49, Batch: 0, Loss: 0.143827
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 50, Batch: 0, Loss: 0.143784
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 51, Batch: 0, Loss: 0.143463
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.144105
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 53, Batch: 0, Loss: 0.142637
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.142686
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 55, Batch: 0, Loss: 0.141428
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.141442
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 57, Batch: 0, Loss: 0.141358
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.141256
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 59, Batch: 0, Loss: 0.141745
Test Avg. Loss: 0.000013, Accuracy: 0.965400
training_time:: 123.50240015983582
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.37188649177551
time_baseline:: 82.50630593299866
curr_diff: 0 tensor(1.8160e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4631e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1329e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9470e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.5629e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7126e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0162e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9328e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.1206e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 1
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9399e-11, dtype=torch.float64)
secont condition:: tensor(2.9399e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6333e-12, dtype=torch.float64)
secont condition:: tensor(8.6333e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.8385e-11, dtype=torch.float64)
secont condition:: tensor(2.8385e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8960e-11, dtype=torch.float64)
secont condition:: tensor(1.8960e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.4398e-12, dtype=torch.float64)
secont condition:: tensor(8.4398e-12, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3681e-11, dtype=torch.float64)
secont condition:: tensor(2.3681e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9749e-11, dtype=torch.float64)
secont condition:: tensor(3.9749e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4551e-11, dtype=torch.float64)
secont condition:: tensor(2.4551e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1730e-11, dtype=torch.float64)
secont condition:: tensor(4.1730e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2337e-11, dtype=torch.float64)
secont condition:: tensor(2.2337e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5265e-11, dtype=torch.float64)
secont condition:: tensor(3.5265e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9807e-11, dtype=torch.float64)
secont condition:: tensor(2.9807e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8038e-11, dtype=torch.float64)
secont condition:: tensor(3.8038e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3563e-11, dtype=torch.float64)
secont condition:: tensor(6.3563e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0500e-11, dtype=torch.float64)
secont condition:: tensor(3.0500e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7909e-12, dtype=torch.float64)
secont condition:: tensor(4.7909e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.4847e-11, dtype=torch.float64)
secont condition:: tensor(7.4847e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5658e-11, dtype=torch.float64)
secont condition:: tensor(3.5658e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7091e-11, dtype=torch.float64)
secont condition:: tensor(2.7091e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2951e-11, dtype=torch.float64)
secont condition:: tensor(3.2951e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8223e-12, dtype=torch.float64)
secont condition:: tensor(8.8223e-12, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6353e-11, dtype=torch.float64)
secont condition:: tensor(2.6353e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7555e-11, dtype=torch.float64)
secont condition:: tensor(3.7555e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7259e-11, dtype=torch.float64)
secont condition:: tensor(3.7259e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0494e-11, dtype=torch.float64)
secont condition:: tensor(2.0494e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7758e-11, dtype=torch.float64)
secont condition:: tensor(3.7758e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7266e-11, dtype=torch.float64)
secont condition:: tensor(1.7266e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4942e-11, dtype=torch.float64)
secont condition:: tensor(7.4942e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4906e-11, dtype=torch.float64)
secont condition:: tensor(5.4906e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7991e-11, dtype=torch.float64)
secont condition:: tensor(8.7991e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9041e-11, dtype=torch.float64)
secont condition:: tensor(4.9041e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5675e-10, dtype=torch.float64)
secont condition:: tensor(1.5675e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5450e-11, dtype=torch.float64)
secont condition:: tensor(5.5450e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1202e-11, dtype=torch.float64)
secont condition:: tensor(9.1202e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9215e-11, dtype=torch.float64)
secont condition:: tensor(4.9215e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5263e-10, dtype=torch.float64)
secont condition:: tensor(5.5263e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3443e-11, dtype=torch.float64)
secont condition:: tensor(8.3443e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4665e-10, dtype=torch.float64)
secont condition:: tensor(4.4665e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0957e-10, dtype=torch.float64)
secont condition:: tensor(1.0957e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4563e-11, dtype=torch.float64)
secont condition:: tensor(5.4563e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.3515e-11, dtype=torch.float64)
secont condition:: tensor(8.3515e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2315e-11, dtype=torch.float64)
secont condition:: tensor(3.2315e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2104e-10, dtype=torch.float64)
secont condition:: tensor(1.2104e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6819e-11, dtype=torch.float64)
secont condition:: tensor(6.6819e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3310e-11, dtype=torch.float64)
secont condition:: tensor(2.3310e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6656e-11, dtype=torch.float64)
secont condition:: tensor(5.6656e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6311e-11, dtype=torch.float64)
secont condition:: tensor(5.6311e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5158e-11, dtype=torch.float64)
secont condition:: tensor(3.5158e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6289e-12, dtype=torch.float64)
secont condition:: tensor(7.6289e-12, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1580e-11, dtype=torch.float64)
secont condition:: tensor(1.1580e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5713e-11, dtype=torch.float64)
secont condition:: tensor(6.5713e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4052e-10, dtype=torch.float64)
secont condition:: tensor(2.4052e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1376e-10, dtype=torch.float64)
secont condition:: tensor(1.1376e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5341e-11, dtype=torch.float64)
secont condition:: tensor(4.5341e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4897e-11, dtype=torch.float64)
secont condition:: tensor(6.4897e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2508e-10, dtype=torch.float64)
secont condition:: tensor(2.2508e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.9390e-11, dtype=torch.float64)
secont condition:: tensor(9.9390e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3062e-11, dtype=torch.float64)
secont condition:: tensor(2.3062e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0364e-10, dtype=torch.float64)
secont condition:: tensor(1.0364e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6119e-11, dtype=torch.float64)
secont condition:: tensor(1.6119e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1519e-10, dtype=torch.float64)
secont condition:: tensor(1.1519e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2526e-10, dtype=torch.float64)
secont condition:: tensor(1.2526e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8823e-12, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2599e-11, dtype=torch.float64)
secont condition:: tensor(6.2599e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8532e-10, dtype=torch.float64)
secont condition:: tensor(3.8532e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5781e-10, dtype=torch.float64)
secont condition:: tensor(1.5781e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2128e-10, dtype=torch.float64)
secont condition:: tensor(1.2128e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8180e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1783e-10, dtype=torch.float64)
secont condition:: tensor(2.1783e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6159e-11, dtype=torch.float64)
secont condition:: tensor(8.6159e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4989e-11, dtype=torch.float64)
secont condition:: tensor(6.4989e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1487e-10, dtype=torch.float64)
secont condition:: tensor(2.1487e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5878e-10, dtype=torch.float64)
secont condition:: tensor(1.5878e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3582e-10, dtype=torch.float64)
secont condition:: tensor(1.3582e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4771e-11, dtype=torch.float64)
secont condition:: tensor(8.4771e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2004e-10, dtype=torch.float64)
secont condition:: tensor(1.2004e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1726e-10, dtype=torch.float64)
secont condition:: tensor(1.1726e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4463e-10, dtype=torch.float64)
secont condition:: tensor(1.4463e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4987e-10, dtype=torch.float64)
secont condition:: tensor(1.4987e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8887e-11, dtype=torch.float64)
secont condition:: tensor(8.8887e-11, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3279e-11, dtype=torch.float64)
secont condition:: tensor(5.3279e-11, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 62.01477813720703
curr_diff: 0 tensor(8.6710e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5906e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.3650e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.6055e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.6709e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4488e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4457e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.6504e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.8781e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.6520e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8225e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6681e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2176e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.3903e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5525e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.1767e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4274e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.8452e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6679e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.9149e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216131
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.161708
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 2, Batch: 0, Loss: 0.154262
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.153481
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.145647
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.147879
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 6, Batch: 0, Loss: 0.147373
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 7, Batch: 0, Loss: 0.151948
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 8, Batch: 0, Loss: 0.149367
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 9, Batch: 0, Loss: 0.144648
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 10, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.144760
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.144760
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.141939
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.142484
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.144968
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.140378
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 17, Batch: 0, Loss: 0.142302
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.146229
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 19, Batch: 0, Loss: 0.143276
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 20, Batch: 0, Loss: 0.141499
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 21, Batch: 0, Loss: 0.146449
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.144430
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 23, Batch: 0, Loss: 0.141942
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.144141
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 25, Batch: 0, Loss: 0.140451
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.143451
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 27, Batch: 0, Loss: 0.141438
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 28, Batch: 0, Loss: 0.141179
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 29, Batch: 0, Loss: 0.136805
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 30, Batch: 0, Loss: 0.143483
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 31, Batch: 0, Loss: 0.143904
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 66.00530695915222
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.24002432823181
time_baseline:: 44.312273025512695
curr_diff: 0 tensor(1.6920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1924e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7063e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1773e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.2180e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.2702e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4045e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.7166e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4497e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.9732e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1323e-33, dtype=torch.float64)
secont condition:: tensor(6.1323e-33, dtype=torch.float64)
curr_secont condition:: tensor(4.8097e-11, dtype=torch.float64)
secont condition:: tensor(4.8097e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7868e-11, dtype=torch.float64)
secont condition:: tensor(8.7868e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8814e-11, dtype=torch.float64)
secont condition:: tensor(3.8814e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0041e-11, dtype=torch.float64)
secont condition:: tensor(3.0041e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3101e-11, dtype=torch.float64)
secont condition:: tensor(1.3101e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1032e-12, dtype=torch.float64)
secont condition:: tensor(6.1032e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1739e-10, dtype=torch.float64)
secont condition:: tensor(3.1739e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3049e-11, dtype=torch.float64)
secont condition:: tensor(9.3049e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0531e-11, dtype=torch.float64)
secont condition:: tensor(4.0531e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2742e-11, dtype=torch.float64)
secont condition:: tensor(2.2742e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5005e-11, dtype=torch.float64)
secont condition:: tensor(2.5005e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5526e-11, dtype=torch.float64)
secont condition:: tensor(1.5526e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6802e-11, dtype=torch.float64)
secont condition:: tensor(2.6802e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4843e-11, dtype=torch.float64)
secont condition:: tensor(4.4843e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4508e-11, dtype=torch.float64)
secont condition:: tensor(3.4508e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5874e-11, dtype=torch.float64)
secont condition:: tensor(2.5874e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3360e-11, dtype=torch.float64)
secont condition:: tensor(1.3360e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7063e-10, dtype=torch.float64)
secont condition:: tensor(1.7063e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1622e-11, dtype=torch.float64)
secont condition:: tensor(2.1622e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2684e-10, dtype=torch.float64)
secont condition:: tensor(1.2684e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.6175e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6334e-11, dtype=torch.float64)
secont condition:: tensor(4.6334e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1533e-10, dtype=torch.float64)
secont condition:: tensor(2.1533e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8694e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.2805e-11, dtype=torch.float64)
secont condition:: tensor(9.2805e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.8634e-11, dtype=torch.float64)
secont condition:: tensor(9.8634e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6221e-10, dtype=torch.float64)
secont condition:: tensor(1.6221e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4561e-11, dtype=torch.float64)
secont condition:: tensor(1.4561e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4680e-10, dtype=torch.float64)
secont condition:: tensor(1.4680e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8816e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5399e-11, dtype=torch.float64)
secont condition:: tensor(9.5399e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1942e-10, dtype=torch.float64)
secont condition:: tensor(1.1942e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9268e-10, dtype=torch.float64)
secont condition:: tensor(2.9268e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0654e-10, dtype=torch.float64)
secont condition:: tensor(1.0654e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8008e-11, dtype=torch.float64)
secont condition:: tensor(8.8008e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1512e-11, dtype=torch.float64)
secont condition:: tensor(2.1512e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2187e-10, dtype=torch.float64)
secont condition:: tensor(1.2187e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5960e-11, dtype=torch.float64)
secont condition:: tensor(5.5960e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9857e-11, dtype=torch.float64)
secont condition:: tensor(8.9857e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3736e-11, dtype=torch.float64)
secont condition:: tensor(6.3736e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9623e-11, dtype=torch.float64)
secont condition:: tensor(7.9623e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4534e-10, dtype=torch.float64)
secont condition:: tensor(1.4534e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7116e-10, dtype=torch.float64)
secont condition:: tensor(1.7116e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8002e-11, dtype=torch.float64)
secont condition:: tensor(6.8002e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2016e-11, dtype=torch.float64)
secont condition:: tensor(2.2016e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6065e-11, dtype=torch.float64)
secont condition:: tensor(7.6065e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1481e-11, dtype=torch.float64)
secont condition:: tensor(1.1481e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0973e-10, dtype=torch.float64)
secont condition:: tensor(1.0973e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.8696e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0484e-10, dtype=torch.float64)
secont condition:: tensor(2.0484e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8863e-12, dtype=torch.float64)
secont condition:: tensor(2.8863e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.7507e-12, dtype=torch.float64)
secont condition:: tensor(7.7507e-12, dtype=torch.float64)
curr_secont condition:: tensor(-1.3171e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1580e-10, dtype=torch.float64)
secont condition:: tensor(7.1580e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9107e-12, dtype=torch.float64)
secont condition:: tensor(7.9107e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.3544e-10, dtype=torch.float64)
secont condition:: tensor(1.3544e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7704e-11, dtype=torch.float64)
secont condition:: tensor(9.7704e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2901e-10, dtype=torch.float64)
secont condition:: tensor(1.2901e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7282e-10, dtype=torch.float64)
secont condition:: tensor(1.7282e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.7905e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8762e-11, dtype=torch.float64)
secont condition:: tensor(8.8762e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2992e-10, dtype=torch.float64)
secont condition:: tensor(3.2992e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0111e-10, dtype=torch.float64)
secont condition:: tensor(2.0111e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3440e-10, dtype=torch.float64)
secont condition:: tensor(2.3440e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0355e-10, dtype=torch.float64)
secont condition:: tensor(3.0355e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5344e-10, dtype=torch.float64)
secont condition:: tensor(2.5344e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1318e-10, dtype=torch.float64)
secont condition:: tensor(5.1318e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3622e-10, dtype=torch.float64)
secont condition:: tensor(2.3622e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2908e-10, dtype=torch.float64)
secont condition:: tensor(1.2908e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3881e-10, dtype=torch.float64)
secont condition:: tensor(1.3881e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6224e-09, dtype=torch.float64)
secont condition:: tensor(1.6224e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7865e-10, dtype=torch.float64)
secont condition:: tensor(2.7865e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0207e-10, dtype=torch.float64)
secont condition:: tensor(4.0207e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8805e-11, dtype=torch.float64)
secont condition:: tensor(9.8805e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3620e-11, dtype=torch.float64)
secont condition:: tensor(6.3620e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4634e-10, dtype=torch.float64)
secont condition:: tensor(6.4634e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0187e-10, dtype=torch.float64)
secont condition:: tensor(4.0187e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1605e-10, dtype=torch.float64)
secont condition:: tensor(1.1605e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6547e-10, dtype=torch.float64)
secont condition:: tensor(3.6547e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4420e-09, dtype=torch.float64)
secont condition:: tensor(1.4420e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2310e-09, dtype=torch.float64)
secont condition:: tensor(1.2310e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 35.521135091781616
curr_diff: 0 tensor(9.5313e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9635e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7273e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.2308e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.7670e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1874e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.4359e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7444e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6100e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3824e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.8449e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5315e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7085e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6934e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.7596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.0260e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1287e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.9546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7851e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4797e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207899
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.158337
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.155119
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.153155
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 4, Batch: 0, Loss: 0.151867
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 5, Batch: 0, Loss: 0.150125
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 6, Batch: 0, Loss: 0.147926
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 7, Batch: 0, Loss: 0.151191
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.141324
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.146851
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.140547
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 11, Batch: 0, Loss: 0.148530
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.147255
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.149350
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.143049
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.143154
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 16, Batch: 0, Loss: 0.149935
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 17, Batch: 0, Loss: 0.144433
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 18, Batch: 0, Loss: 0.150986
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 19, Batch: 0, Loss: 0.142653
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 20, Batch: 0, Loss: 0.144143
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 21, Batch: 0, Loss: 0.141498
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 22, Batch: 0, Loss: 0.145465
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 23, Batch: 0, Loss: 0.142272
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 24, Batch: 0, Loss: 0.143939
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 25, Batch: 0, Loss: 0.138065
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 26, Batch: 0, Loss: 0.143153
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 27, Batch: 0, Loss: 0.137698
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 28, Batch: 0, Loss: 0.144288
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 29, Batch: 0, Loss: 0.138726
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 30, Batch: 0, Loss: 0.142654
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 31, Batch: 0, Loss: 0.141470
Test Avg. Loss: 0.000013, Accuracy: 0.965400
training_time:: 66.05254435539246
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.273884296417236
time_baseline:: 44.345864057540894
curr_diff: 0 tensor(3.1872e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8976e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9540e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.8516e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.3930e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.2891e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0045e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.6511e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6507e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.0547e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8721e-33, dtype=torch.float64)
secont condition:: tensor(8.8721e-33, dtype=torch.float64)
curr_secont condition:: tensor(-1.2366e-33, dtype=torch.float64)
curr_secont condition:: tensor(4.2415e-11, dtype=torch.float64)
secont condition:: tensor(4.2415e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9096e-11, dtype=torch.float64)
secont condition:: tensor(1.9096e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3265e-11, dtype=torch.float64)
secont condition:: tensor(1.3265e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5617e-12, dtype=torch.float64)
secont condition:: tensor(5.5617e-12, dtype=torch.float64)
curr_secont condition:: tensor(-4.1734e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5127e-10, dtype=torch.float64)
secont condition:: tensor(2.5127e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5035e-10, dtype=torch.float64)
secont condition:: tensor(1.5035e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1110e-11, dtype=torch.float64)
secont condition:: tensor(7.1110e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9028e-11, dtype=torch.float64)
secont condition:: tensor(3.9028e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3129e-11, dtype=torch.float64)
secont condition:: tensor(4.3129e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3361e-11, dtype=torch.float64)
secont condition:: tensor(1.3361e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9193e-11, dtype=torch.float64)
secont condition:: tensor(1.9193e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.9887e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4003e-10, dtype=torch.float64)
secont condition:: tensor(1.4003e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3079e-10, dtype=torch.float64)
secont condition:: tensor(3.3079e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.5813e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.1689e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4031e-10, dtype=torch.float64)
secont condition:: tensor(1.4031e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1246e-11, dtype=torch.float64)
secont condition:: tensor(4.1246e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0482e-10, dtype=torch.float64)
secont condition:: tensor(2.0482e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0718e-10, dtype=torch.float64)
secont condition:: tensor(1.0718e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2070e-10, dtype=torch.float64)
secont condition:: tensor(1.2070e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3155e-10, dtype=torch.float64)
secont condition:: tensor(2.3155e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8906e-11, dtype=torch.float64)
secont condition:: tensor(7.8906e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0731e-10, dtype=torch.float64)
secont condition:: tensor(2.0731e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6383e-10, dtype=torch.float64)
secont condition:: tensor(2.6383e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.8794e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.1782e-11, dtype=torch.float64)
secont condition:: tensor(5.1782e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.4176e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3886e-10, dtype=torch.float64)
secont condition:: tensor(1.3886e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6681e-11, dtype=torch.float64)
secont condition:: tensor(3.6681e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4372e-11, dtype=torch.float64)
secont condition:: tensor(5.4372e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9333e-10, dtype=torch.float64)
secont condition:: tensor(2.9333e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6989e-10, dtype=torch.float64)
secont condition:: tensor(5.6989e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0423e-10, dtype=torch.float64)
secont condition:: tensor(1.0423e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1613e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1050e-10, dtype=torch.float64)
secont condition:: tensor(1.1050e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5744e-11, dtype=torch.float64)
secont condition:: tensor(8.5744e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.5966e-11, dtype=torch.float64)
secont condition:: tensor(7.5966e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4547e-10, dtype=torch.float64)
secont condition:: tensor(1.4547e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4743e-11, dtype=torch.float64)
secont condition:: tensor(5.4743e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.0581e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0136e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4579e-10, dtype=torch.float64)
secont condition:: tensor(4.4579e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7650e-11, dtype=torch.float64)
secont condition:: tensor(5.7650e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2964e-10, dtype=torch.float64)
secont condition:: tensor(2.2964e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9739e-10, dtype=torch.float64)
secont condition:: tensor(1.9739e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0789e-10, dtype=torch.float64)
secont condition:: tensor(1.0789e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.1938e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7790e-11, dtype=torch.float64)
secont condition:: tensor(3.7790e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5801e-10, dtype=torch.float64)
secont condition:: tensor(2.5801e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2245e-11, dtype=torch.float64)
secont condition:: tensor(3.2245e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3000e-11, dtype=torch.float64)
secont condition:: tensor(9.3000e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0142e-11, dtype=torch.float64)
secont condition:: tensor(3.0142e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.1350e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7123e-10, dtype=torch.float64)
secont condition:: tensor(3.7123e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.4784e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.5718e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.4686e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8224e-10, dtype=torch.float64)
secont condition:: tensor(2.8224e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2273e-10, dtype=torch.float64)
secont condition:: tensor(3.2273e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.4174e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4020e-09, dtype=torch.float64)
secont condition:: tensor(2.4020e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6898e-10, dtype=torch.float64)
secont condition:: tensor(5.6898e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8234e-10, dtype=torch.float64)
secont condition:: tensor(1.8234e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7682e-10, dtype=torch.float64)
secont condition:: tensor(3.7682e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6424e-10, dtype=torch.float64)
secont condition:: tensor(5.6424e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2511e-10, dtype=torch.float64)
secont condition:: tensor(5.2511e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8867e-11, dtype=torch.float64)
secont condition:: tensor(6.8867e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.1705e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.2472e-10, dtype=torch.float64)
secont condition:: tensor(2.2472e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8146e-10, dtype=torch.float64)
secont condition:: tensor(1.8146e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4768e-10, dtype=torch.float64)
secont condition:: tensor(1.4768e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7700e-10, dtype=torch.float64)
secont condition:: tensor(1.7700e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.6878e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9646e-10, dtype=torch.float64)
secont condition:: tensor(1.9646e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8822e-10, dtype=torch.float64)
secont condition:: tensor(1.8822e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3173e-10, dtype=torch.float64)
secont condition:: tensor(4.3173e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2161e-10, dtype=torch.float64)
secont condition:: tensor(8.2161e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.843770265579224
curr_diff: 0 tensor(3.6218e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7564e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6803e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8223e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.5590e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.6794e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8169e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.8289e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7560e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.6005e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.9225e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1698e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4205e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2136e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.2524e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.8892e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3767e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1340e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.9249e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4807e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.8945e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.206162
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 1, Batch: 0, Loss: 0.158372
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.151204
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.154734
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.148952
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.151927
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.145724
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.149800
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 8, Batch: 0, Loss: 0.144574
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 9, Batch: 0, Loss: 0.141522
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 10, Batch: 0, Loss: 0.145964
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.145743
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 12, Batch: 0, Loss: 0.136260
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 13, Batch: 0, Loss: 0.140617
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 14, Batch: 0, Loss: 0.145452
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 15, Batch: 0, Loss: 0.137701
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 16, Batch: 0, Loss: 0.148168
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.142771
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 18, Batch: 0, Loss: 0.137853
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.137821
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 20, Batch: 0, Loss: 0.144403
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.142181
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 22, Batch: 0, Loss: 0.136146
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 23, Batch: 0, Loss: 0.146696
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 24, Batch: 0, Loss: 0.142788
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 25, Batch: 0, Loss: 0.144653
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 26, Batch: 0, Loss: 0.143549
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.138082
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 28, Batch: 0, Loss: 0.145532
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 29, Batch: 0, Loss: 0.139399
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.143862
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 31, Batch: 0, Loss: 0.143323
Test Avg. Loss: 0.000013, Accuracy: 0.966400
training_time:: 66.14638185501099
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.31708383560181
time_baseline:: 44.38779616355896
curr_diff: 0 tensor(1.8543e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3657e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8920e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2216e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6884e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.6922e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4534e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0744e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5374e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.6997e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2175e-32, dtype=torch.float64)
secont condition:: tensor(1.2175e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.6376e-32, dtype=torch.float64)
secont condition:: tensor(4.6376e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.0966e-11, dtype=torch.float64)
secont condition:: tensor(4.0966e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9833e-11, dtype=torch.float64)
secont condition:: tensor(1.9833e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1600e-11, dtype=torch.float64)
secont condition:: tensor(1.1600e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.5926e-12, dtype=torch.float64)
secont condition:: tensor(7.5926e-12, dtype=torch.float64)
curr_secont condition:: tensor(3.8900e-11, dtype=torch.float64)
secont condition:: tensor(3.8900e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4054e-11, dtype=torch.float64)
secont condition:: tensor(2.4054e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0517e-11, dtype=torch.float64)
secont condition:: tensor(2.0517e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5428e-11, dtype=torch.float64)
secont condition:: tensor(1.5428e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6860e-11, dtype=torch.float64)
secont condition:: tensor(3.6860e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5029e-11, dtype=torch.float64)
secont condition:: tensor(2.5029e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0134e-11, dtype=torch.float64)
secont condition:: tensor(3.0134e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.3346e-11, dtype=torch.float64)
secont condition:: tensor(4.3346e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1163e-11, dtype=torch.float64)
secont condition:: tensor(6.1163e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9026e-11, dtype=torch.float64)
secont condition:: tensor(2.9026e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2290e-11, dtype=torch.float64)
secont condition:: tensor(2.2290e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6870e-11, dtype=torch.float64)
secont condition:: tensor(6.6870e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5692e-11, dtype=torch.float64)
secont condition:: tensor(4.5692e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7815e-11, dtype=torch.float64)
secont condition:: tensor(3.7815e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7566e-11, dtype=torch.float64)
secont condition:: tensor(2.7566e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4887e-11, dtype=torch.float64)
secont condition:: tensor(3.4887e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1693e-11, dtype=torch.float64)
secont condition:: tensor(3.1693e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2257e-11, dtype=torch.float64)
secont condition:: tensor(3.2257e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3261e-11, dtype=torch.float64)
secont condition:: tensor(5.3261e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4232e-11, dtype=torch.float64)
secont condition:: tensor(5.4232e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5098e-11, dtype=torch.float64)
secont condition:: tensor(3.5098e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7457e-11, dtype=torch.float64)
secont condition:: tensor(2.7457e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2064e-11, dtype=torch.float64)
secont condition:: tensor(4.2064e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9522e-11, dtype=torch.float64)
secont condition:: tensor(2.9522e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1703e-11, dtype=torch.float64)
secont condition:: tensor(9.1703e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3105e-11, dtype=torch.float64)
secont condition:: tensor(3.3105e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5194e-11, dtype=torch.float64)
secont condition:: tensor(2.5194e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1934e-11, dtype=torch.float64)
secont condition:: tensor(2.1934e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0430e-11, dtype=torch.float64)
secont condition:: tensor(6.0430e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5954e-11, dtype=torch.float64)
secont condition:: tensor(5.5954e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.8256e-11, dtype=torch.float64)
secont condition:: tensor(9.8256e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3146e-11, dtype=torch.float64)
secont condition:: tensor(5.3146e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.9647e-11, dtype=torch.float64)
secont condition:: tensor(5.9647e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4436e-11, dtype=torch.float64)
secont condition:: tensor(2.4436e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5696e-11, dtype=torch.float64)
secont condition:: tensor(5.5696e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7052e-11, dtype=torch.float64)
secont condition:: tensor(8.7052e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8966e-11, dtype=torch.float64)
secont condition:: tensor(2.8966e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3577e-11, dtype=torch.float64)
secont condition:: tensor(2.3577e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.7905e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8271e-11, dtype=torch.float64)
secont condition:: tensor(6.8271e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5559e-11, dtype=torch.float64)
secont condition:: tensor(4.5559e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4502e-11, dtype=torch.float64)
secont condition:: tensor(3.4502e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.3488e-11, dtype=torch.float64)
secont condition:: tensor(7.3488e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3061e-11, dtype=torch.float64)
secont condition:: tensor(5.3061e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.6589e-13, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5185e-11, dtype=torch.float64)
secont condition:: tensor(6.5185e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5071e-10, dtype=torch.float64)
secont condition:: tensor(1.5071e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7457e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.6081e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4998e-10, dtype=torch.float64)
secont condition:: tensor(1.4998e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2347e-11, dtype=torch.float64)
secont condition:: tensor(2.2347e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0484e-10, dtype=torch.float64)
secont condition:: tensor(1.0484e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6124e-11, dtype=torch.float64)
secont condition:: tensor(4.6124e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1211e-11, dtype=torch.float64)
secont condition:: tensor(1.1211e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8493e-10, dtype=torch.float64)
secont condition:: tensor(1.8493e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0956e-10, dtype=torch.float64)
secont condition:: tensor(1.0956e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2711e-10, dtype=torch.float64)
secont condition:: tensor(1.2711e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0254e-12, dtype=torch.float64)
secont condition:: tensor(9.0254e-12, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9996e-11, dtype=torch.float64)
secont condition:: tensor(8.9996e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2560e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5664e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1989e-11, dtype=torch.float64)
secont condition:: tensor(7.1989e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9921e-10, dtype=torch.float64)
secont condition:: tensor(1.9921e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3178e-11, dtype=torch.float64)
secont condition:: tensor(9.3178e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9660e-10, dtype=torch.float64)
secont condition:: tensor(3.9660e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3607e-10, dtype=torch.float64)
secont condition:: tensor(2.3607e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6657e-11, dtype=torch.float64)
secont condition:: tensor(8.6657e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.2659e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0194e-09, dtype=torch.float64)
secont condition:: tensor(1.0194e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7097e-10, dtype=torch.float64)
secont condition:: tensor(7.7097e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.3114e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6915e-11, dtype=torch.float64)
secont condition:: tensor(8.6915e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.6169e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0356e-10, dtype=torch.float64)
secont condition:: tensor(2.0356e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3136e-11, dtype=torch.float64)
secont condition:: tensor(3.3136e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9475e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1057e-10, dtype=torch.float64)
secont condition:: tensor(2.1057e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7474e-09, dtype=torch.float64)
secont condition:: tensor(1.7474e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.94599485397339
curr_diff: 0 tensor(1.8649e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3189e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4193e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.2939e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.4426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1254e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.0095e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.3841e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3456e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0989e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.1903e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.8069e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7733e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1888e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.7765e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3478e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.4874e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7468e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5595e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213292
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 1, Batch: 0, Loss: 0.156694
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.152262
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.152634
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 4, Batch: 0, Loss: 0.150442
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.145663
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.149873
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 7, Batch: 0, Loss: 0.152468
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.145238
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.144175
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.149338
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 11, Batch: 0, Loss: 0.148908
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 12, Batch: 0, Loss: 0.144726
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.149369
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.138930
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 15, Batch: 0, Loss: 0.143590
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 16, Batch: 0, Loss: 0.140160
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 17, Batch: 0, Loss: 0.141993
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 18, Batch: 0, Loss: 0.143610
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 19, Batch: 0, Loss: 0.138451
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 20, Batch: 0, Loss: 0.140382
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 21, Batch: 0, Loss: 0.144651
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 22, Batch: 0, Loss: 0.141226
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 23, Batch: 0, Loss: 0.147957
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.142660
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 25, Batch: 0, Loss: 0.151948
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 26, Batch: 0, Loss: 0.141563
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 27, Batch: 0, Loss: 0.138209
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 28, Batch: 0, Loss: 0.142604
Test Avg. Loss: 0.000013, Accuracy: 0.966200
Train - Epoch 29, Batch: 0, Loss: 0.140519
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 30, Batch: 0, Loss: 0.142918
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 31, Batch: 0, Loss: 0.139929
Test Avg. Loss: 0.000013, Accuracy: 0.966000
training_time:: 65.969167470932
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.412445068359375
time_baseline:: 44.48353910446167
curr_diff: 0 tensor(2.2317e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0654e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8308e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5186e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.8599e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1046e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.2098e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3643e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2208e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.7129e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.6968e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2107e-10, dtype=torch.float64)
secont condition:: tensor(1.2107e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1223e-11, dtype=torch.float64)
secont condition:: tensor(4.1223e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9716e-11, dtype=torch.float64)
secont condition:: tensor(2.9716e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2877e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8238e-11, dtype=torch.float64)
secont condition:: tensor(4.8238e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9826e-11, dtype=torch.float64)
secont condition:: tensor(4.9826e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5016e-11, dtype=torch.float64)
secont condition:: tensor(1.5016e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2464e-11, dtype=torch.float64)
secont condition:: tensor(1.2464e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.7010e-12, dtype=torch.float64)
secont condition:: tensor(9.7010e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.5286e-12, dtype=torch.float64)
secont condition:: tensor(9.5286e-12, dtype=torch.float64)
curr_secont condition:: tensor(-1.3888e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1953e-11, dtype=torch.float64)
secont condition:: tensor(2.1953e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8954e-11, dtype=torch.float64)
secont condition:: tensor(1.8954e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5320e-12, dtype=torch.float64)
secont condition:: tensor(8.5320e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.0480e-11, dtype=torch.float64)
secont condition:: tensor(4.0480e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6848e-12, dtype=torch.float64)
secont condition:: tensor(5.6848e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.3486e-11, dtype=torch.float64)
secont condition:: tensor(4.3486e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0622e-11, dtype=torch.float64)
secont condition:: tensor(5.0622e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8642e-11, dtype=torch.float64)
secont condition:: tensor(2.8642e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7635e-11, dtype=torch.float64)
secont condition:: tensor(2.7635e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0397e-11, dtype=torch.float64)
secont condition:: tensor(2.0397e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6071e-11, dtype=torch.float64)
secont condition:: tensor(1.6071e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0431e-11, dtype=torch.float64)
secont condition:: tensor(2.0431e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5702e-11, dtype=torch.float64)
secont condition:: tensor(4.5702e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3978e-11, dtype=torch.float64)
secont condition:: tensor(3.3978e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4543e-11, dtype=torch.float64)
secont condition:: tensor(2.4543e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0899e-11, dtype=torch.float64)
secont condition:: tensor(2.0899e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9422e-11, dtype=torch.float64)
secont condition:: tensor(5.9422e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.8016e-11, dtype=torch.float64)
secont condition:: tensor(7.8016e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9244e-11, dtype=torch.float64)
secont condition:: tensor(7.9244e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6456e-11, dtype=torch.float64)
secont condition:: tensor(5.6456e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3228e-10, dtype=torch.float64)
secont condition:: tensor(1.3228e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5686e-11, dtype=torch.float64)
secont condition:: tensor(3.5686e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2463e-11, dtype=torch.float64)
secont condition:: tensor(3.2463e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.0364e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9962e-11, dtype=torch.float64)
secont condition:: tensor(8.9962e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7839e-11, dtype=torch.float64)
secont condition:: tensor(6.7839e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0726e-10, dtype=torch.float64)
secont condition:: tensor(1.0726e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0886e-11, dtype=torch.float64)
secont condition:: tensor(8.0886e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9202e-11, dtype=torch.float64)
secont condition:: tensor(7.9202e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5554e-11, dtype=torch.float64)
secont condition:: tensor(6.5554e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8889e-11, dtype=torch.float64)
secont condition:: tensor(4.8889e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2824e-11, dtype=torch.float64)
secont condition:: tensor(6.2824e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8834e-11, dtype=torch.float64)
secont condition:: tensor(5.8834e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0102e-10, dtype=torch.float64)
secont condition:: tensor(1.0102e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8555e-11, dtype=torch.float64)
secont condition:: tensor(4.8555e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3086e-10, dtype=torch.float64)
secont condition:: tensor(1.3086e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2986e-11, dtype=torch.float64)
secont condition:: tensor(7.2986e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.8736e-11, dtype=torch.float64)
secont condition:: tensor(9.8736e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7292e-10, dtype=torch.float64)
secont condition:: tensor(1.7292e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5364e-11, dtype=torch.float64)
secont condition:: tensor(1.5364e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7533e-11, dtype=torch.float64)
secont condition:: tensor(8.7533e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6722e-11, dtype=torch.float64)
secont condition:: tensor(6.6722e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7948e-10, dtype=torch.float64)
secont condition:: tensor(1.7948e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1658e-10, dtype=torch.float64)
secont condition:: tensor(8.1658e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6680e-11, dtype=torch.float64)
secont condition:: tensor(8.6680e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8226e-11, dtype=torch.float64)
secont condition:: tensor(8.8226e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5521e-10, dtype=torch.float64)
secont condition:: tensor(1.5521e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4383e-10, dtype=torch.float64)
secont condition:: tensor(1.4383e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0112e-10, dtype=torch.float64)
secont condition:: tensor(2.0112e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5406e-11, dtype=torch.float64)
secont condition:: tensor(1.5406e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2248e-10, dtype=torch.float64)
secont condition:: tensor(1.2248e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2425e-10, dtype=torch.float64)
secont condition:: tensor(1.2425e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1297e-11, dtype=torch.float64)
secont condition:: tensor(7.1297e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2961e-10, dtype=torch.float64)
secont condition:: tensor(3.2961e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2378e-11, dtype=torch.float64)
secont condition:: tensor(7.2378e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5306e-10, dtype=torch.float64)
secont condition:: tensor(1.5306e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0226e-10, dtype=torch.float64)
secont condition:: tensor(1.0226e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1999e-10, dtype=torch.float64)
secont condition:: tensor(1.1999e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2846e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6533e-10, dtype=torch.float64)
secont condition:: tensor(1.6533e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2362e-09, dtype=torch.float64)
secont condition:: tensor(1.2362e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7355e-10, dtype=torch.float64)
secont condition:: tensor(5.7355e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1017e-10, dtype=torch.float64)
secont condition:: tensor(1.1017e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2313e-09, dtype=torch.float64)
secont condition:: tensor(1.2313e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.2939e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4700e-10, dtype=torch.float64)
secont condition:: tensor(9.4700e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2947e-09, dtype=torch.float64)
secont condition:: tensor(2.2947e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8416e-10, dtype=torch.float64)
secont condition:: tensor(4.8416e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.0352e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5173e-10, dtype=torch.float64)
secont condition:: tensor(2.5173e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5660e-10, dtype=torch.float64)
secont condition:: tensor(3.5660e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 35.83413767814636
curr_diff: 0 tensor(1.1935e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.9588e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4791e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0400e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.3060e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.4184e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7099e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.9261e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1795e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0201e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.0215e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.6861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5206e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0697e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9947e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.5232e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.4926e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5993e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.0504e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.6199e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7274e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.9830e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207022
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 1, Batch: 0, Loss: 0.161385
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.157294
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.155349
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.147550
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.145951
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 6, Batch: 0, Loss: 0.146974
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.148886
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.148211
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 9, Batch: 0, Loss: 0.143439
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.144980
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.142607
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.145374
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.142464
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.146965
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 15, Batch: 0, Loss: 0.141710
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.143108
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 17, Batch: 0, Loss: 0.142664
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 18, Batch: 0, Loss: 0.146911
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 19, Batch: 0, Loss: 0.142647
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 20, Batch: 0, Loss: 0.136816
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 21, Batch: 0, Loss: 0.141804
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 22, Batch: 0, Loss: 0.140726
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 23, Batch: 0, Loss: 0.146670
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.144909
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.142438
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 26, Batch: 0, Loss: 0.146921
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.144738
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 28, Batch: 0, Loss: 0.137338
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 29, Batch: 0, Loss: 0.143662
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 30, Batch: 0, Loss: 0.143992
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 31, Batch: 0, Loss: 0.145081
Test Avg. Loss: 0.000013, Accuracy: 0.965600
training_time:: 65.93881821632385
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.329442262649536
time_baseline:: 44.40728759765625
curr_diff: 0 tensor(1.3763e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3584e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0239e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6491e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.0646e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.1779e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.6280e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7276e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.0935e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.5060e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4814e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 1
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8826e-33, dtype=torch.float64)
secont condition:: tensor(7.8826e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.0171e-33, dtype=torch.float64)
secont condition:: tensor(2.0171e-33, dtype=torch.float64)
curr_secont condition:: tensor(3.4323e-11, dtype=torch.float64)
secont condition:: tensor(3.4323e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4823e-11, dtype=torch.float64)
secont condition:: tensor(2.4823e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2727e-11, dtype=torch.float64)
secont condition:: tensor(1.2727e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4739e-11, dtype=torch.float64)
secont condition:: tensor(6.4739e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8961e-11, dtype=torch.float64)
secont condition:: tensor(4.8961e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0600e-11, dtype=torch.float64)
secont condition:: tensor(8.0600e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4281e-11, dtype=torch.float64)
secont condition:: tensor(1.4281e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.2412e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2585e-11, dtype=torch.float64)
secont condition:: tensor(1.2585e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6953e-11, dtype=torch.float64)
secont condition:: tensor(4.6953e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5056e-10, dtype=torch.float64)
secont condition:: tensor(1.5056e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5012e-11, dtype=torch.float64)
secont condition:: tensor(4.5012e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8353e-11, dtype=torch.float64)
secont condition:: tensor(3.8353e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2723e-11, dtype=torch.float64)
secont condition:: tensor(3.2723e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8313e-11, dtype=torch.float64)
secont condition:: tensor(2.8313e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8825e-11, dtype=torch.float64)
secont condition:: tensor(4.8825e-11, dtype=torch.float64)
curr_secont condition:: tensor(-9.9762e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3258e-11, dtype=torch.float64)
secont condition:: tensor(9.3258e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5456e-11, dtype=torch.float64)
secont condition:: tensor(1.5456e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1237e-10, dtype=torch.float64)
secont condition:: tensor(1.1237e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1644e-11, dtype=torch.float64)
secont condition:: tensor(3.1644e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6052e-11, dtype=torch.float64)
secont condition:: tensor(5.6052e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8300e-11, dtype=torch.float64)
secont condition:: tensor(1.8300e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1923e-11, dtype=torch.float64)
secont condition:: tensor(4.1923e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4716e-11, dtype=torch.float64)
secont condition:: tensor(3.4716e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7003e-11, dtype=torch.float64)
secont condition:: tensor(5.7003e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8692e-11, dtype=torch.float64)
secont condition:: tensor(4.8692e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8081e-11, dtype=torch.float64)
secont condition:: tensor(5.8081e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0725e-11, dtype=torch.float64)
secont condition:: tensor(1.0725e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5160e-11, dtype=torch.float64)
secont condition:: tensor(3.5160e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5437e-11, dtype=torch.float64)
secont condition:: tensor(3.5437e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.0500e-12, dtype=torch.float64)
curr_secont condition:: tensor(4.3636e-11, dtype=torch.float64)
secont condition:: tensor(4.3636e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0904e-11, dtype=torch.float64)
secont condition:: tensor(4.0904e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2006e-11, dtype=torch.float64)
secont condition:: tensor(4.2006e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2718e-11, dtype=torch.float64)
secont condition:: tensor(6.2718e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4384e-11, dtype=torch.float64)
secont condition:: tensor(3.4384e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5472e-11, dtype=torch.float64)
secont condition:: tensor(3.5472e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8840e-10, dtype=torch.float64)
secont condition:: tensor(1.8840e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7650e-11, dtype=torch.float64)
secont condition:: tensor(3.7650e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.9572e-11, dtype=torch.float64)
secont condition:: tensor(7.9572e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1256e-11, dtype=torch.float64)
secont condition:: tensor(8.1256e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9241e-11, dtype=torch.float64)
secont condition:: tensor(1.9241e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4875e-10, dtype=torch.float64)
secont condition:: tensor(1.4875e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2404e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7644e-10, dtype=torch.float64)
secont condition:: tensor(1.7644e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4390e-11, dtype=torch.float64)
secont condition:: tensor(6.4390e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0807e-09, dtype=torch.float64)
secont condition:: tensor(2.0807e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.0108e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6793e-10, dtype=torch.float64)
secont condition:: tensor(4.6793e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0324e-10, dtype=torch.float64)
secont condition:: tensor(1.0324e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1288e-10, dtype=torch.float64)
secont condition:: tensor(1.1288e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4902e-11, dtype=torch.float64)
secont condition:: tensor(8.4902e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5983e-10, dtype=torch.float64)
secont condition:: tensor(2.5983e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6840e-11, dtype=torch.float64)
secont condition:: tensor(2.6840e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.9843e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.9985e-10, dtype=torch.float64)
secont condition:: tensor(9.9985e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1765e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9256e-11, dtype=torch.float64)
secont condition:: tensor(7.9256e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9316e-10, dtype=torch.float64)
secont condition:: tensor(1.9316e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7753e-11, dtype=torch.float64)
secont condition:: tensor(2.7753e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8467e-10, dtype=torch.float64)
secont condition:: tensor(2.8467e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5339e-10, dtype=torch.float64)
secont condition:: tensor(1.5339e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1398e-10, dtype=torch.float64)
secont condition:: tensor(3.1398e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3432e-10, dtype=torch.float64)
secont condition:: tensor(7.3432e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9812e-11, dtype=torch.float64)
secont condition:: tensor(6.9812e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6167e-11, dtype=torch.float64)
secont condition:: tensor(9.6167e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4065e-11, dtype=torch.float64)
secont condition:: tensor(4.4065e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6874e-10, dtype=torch.float64)
secont condition:: tensor(5.6874e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1757e-10, dtype=torch.float64)
secont condition:: tensor(1.1757e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0364e-10, dtype=torch.float64)
secont condition:: tensor(1.0364e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2688e-10, dtype=torch.float64)
secont condition:: tensor(2.2688e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5320e-10, dtype=torch.float64)
secont condition:: tensor(1.5320e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6872e-10, dtype=torch.float64)
secont condition:: tensor(2.6872e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2030e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.6638e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1358e-10, dtype=torch.float64)
secont condition:: tensor(2.1358e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9175e-10, dtype=torch.float64)
secont condition:: tensor(4.9175e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6803e-10, dtype=torch.float64)
secont condition:: tensor(5.6803e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4019e-10, dtype=torch.float64)
secont condition:: tensor(8.4019e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.2860e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9456e-10, dtype=torch.float64)
secont condition:: tensor(8.9456e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1859e-10, dtype=torch.float64)
secont condition:: tensor(7.1859e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 36.53241539001465
curr_diff: 0 tensor(1.4221e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5456e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0191e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6867e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.0668e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.4536e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.8287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2758e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.7344e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2255e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.4151e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.2466e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8232e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2604e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7256e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.7695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2877e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7513e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.1779e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.1272e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.1902e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.2336e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207466
Train - Epoch 0, Batch: 10, Loss: 0.147159
Test Avg. Loss: 0.000039, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.152574
Train - Epoch 1, Batch: 10, Loss: 0.147474
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 2, Batch: 0, Loss: 0.127105
Train - Epoch 2, Batch: 10, Loss: 0.150226
Test Avg. Loss: 0.000037, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.155509
Train - Epoch 3, Batch: 10, Loss: 0.145978
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 4, Batch: 0, Loss: 0.130653
Train - Epoch 4, Batch: 10, Loss: 0.151139
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 5, Batch: 0, Loss: 0.145980
Train - Epoch 5, Batch: 10, Loss: 0.144317
Test Avg. Loss: 0.000037, Accuracy: 0.964300
Train - Epoch 6, Batch: 0, Loss: 0.134680
Train - Epoch 6, Batch: 10, Loss: 0.159024
Test Avg. Loss: 0.000037, Accuracy: 0.965200
Train - Epoch 7, Batch: 0, Loss: 0.140503
Train - Epoch 7, Batch: 10, Loss: 0.145387
Test Avg. Loss: 0.000037, Accuracy: 0.965200
training_time:: 16.540449142456055
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.180256843566895
time_baseline:: 12.200636863708496
curr_diff: 0 tensor(6.5862e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3743e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6248e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7539e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6270e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8492e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2121e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.6833e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1740e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4591e-33, dtype=torch.float64)
secont condition:: tensor(8.4591e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.1657e-32, dtype=torch.float64)
secont condition:: tensor(1.1657e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2846e-32, dtype=torch.float64)
secont condition:: tensor(2.2846e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5718e-32, dtype=torch.float64)
secont condition:: tensor(3.5718e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7533e-32, dtype=torch.float64)
secont condition:: tensor(2.7533e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1593e-32, dtype=torch.float64)
secont condition:: tensor(3.1593e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8191e-32, dtype=torch.float64)
secont condition:: tensor(4.8191e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3006e-32, dtype=torch.float64)
secont condition:: tensor(5.3006e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.4465e-32, dtype=torch.float64)
secont condition:: tensor(6.4465e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.7193e-32, dtype=torch.float64)
secont condition:: tensor(5.7193e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.3661e-32, dtype=torch.float64)
secont condition:: tensor(6.3661e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.5621e-32, dtype=torch.float64)
secont condition:: tensor(8.5621e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4914e-10, dtype=torch.float64)
secont condition:: tensor(1.4914e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5398e-10, dtype=torch.float64)
secont condition:: tensor(1.5398e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1213e-10, dtype=torch.float64)
secont condition:: tensor(1.1213e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2146e-10, dtype=torch.float64)
secont condition:: tensor(2.2146e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6055e-09, dtype=torch.float64)
secont condition:: tensor(1.6055e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9471e-10, dtype=torch.float64)
secont condition:: tensor(9.9471e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1222e-09, dtype=torch.float64)
secont condition:: tensor(1.1222e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8597e-10, dtype=torch.float64)
secont condition:: tensor(6.8597e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4359e-09, dtype=torch.float64)
secont condition:: tensor(3.4359e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4957e-10, dtype=torch.float64)
secont condition:: tensor(2.4957e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.8926e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5137e-09, dtype=torch.float64)
secont condition:: tensor(2.5137e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5049e-09, dtype=torch.float64)
secont condition:: tensor(4.5049e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2124e-10, dtype=torch.float64)
secont condition:: tensor(2.2124e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6616e-10, dtype=torch.float64)
secont condition:: tensor(5.6616e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5332e-10, dtype=torch.float64)
secont condition:: tensor(2.5332e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8766e-10, dtype=torch.float64)
secont condition:: tensor(3.8766e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8635e-10, dtype=torch.float64)
secont condition:: tensor(6.8635e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3689e-10, dtype=torch.float64)
secont condition:: tensor(3.3689e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4387e-10, dtype=torch.float64)
secont condition:: tensor(3.4387e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7441e-11, dtype=torch.float64)
secont condition:: tensor(9.7441e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2078e-10, dtype=torch.float64)
secont condition:: tensor(4.2078e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0712e-10, dtype=torch.float64)
secont condition:: tensor(7.0712e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9821e-10, dtype=torch.float64)
secont condition:: tensor(1.9821e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5632e-10, dtype=torch.float64)
secont condition:: tensor(1.5632e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9972e-09, dtype=torch.float64)
secont condition:: tensor(2.9972e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9033e-10, dtype=torch.float64)
secont condition:: tensor(1.9033e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5713e-10, dtype=torch.float64)
secont condition:: tensor(1.5713e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5506e-10, dtype=torch.float64)
secont condition:: tensor(4.5506e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5339e-10, dtype=torch.float64)
secont condition:: tensor(3.5339e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7761e-10, dtype=torch.float64)
secont condition:: tensor(1.7761e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5168e-10, dtype=torch.float64)
secont condition:: tensor(6.5168e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2406e-10, dtype=torch.float64)
secont condition:: tensor(7.2406e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3593e-09, dtype=torch.float64)
secont condition:: tensor(2.3593e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5718e-10, dtype=torch.float64)
secont condition:: tensor(3.5718e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7391e-10, dtype=torch.float64)
secont condition:: tensor(3.7391e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2723e-10, dtype=torch.float64)
secont condition:: tensor(3.2723e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7028e-09, dtype=torch.float64)
secont condition:: tensor(3.7028e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0013e-10, dtype=torch.float64)
secont condition:: tensor(3.0013e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2668e-10, dtype=torch.float64)
secont condition:: tensor(6.2668e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4606e-10, dtype=torch.float64)
secont condition:: tensor(1.4606e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.1930e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1228e-10, dtype=torch.float64)
secont condition:: tensor(3.1228e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5274e-10, dtype=torch.float64)
secont condition:: tensor(3.5274e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8122e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0352e-10, dtype=torch.float64)
secont condition:: tensor(7.0352e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9226e-11, dtype=torch.float64)
secont condition:: tensor(7.9226e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2057e-10, dtype=torch.float64)
secont condition:: tensor(1.2057e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8506e-10, dtype=torch.float64)
secont condition:: tensor(1.8506e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.1488e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4483e-09, dtype=torch.float64)
secont condition:: tensor(1.4483e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2005e-09, dtype=torch.float64)
secont condition:: tensor(7.2005e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1228e-09, dtype=torch.float64)
secont condition:: tensor(3.1228e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.9484e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7548e-10, dtype=torch.float64)
secont condition:: tensor(3.7548e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2206e-09, dtype=torch.float64)
secont condition:: tensor(1.2206e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8062e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0466e-09, dtype=torch.float64)
secont condition:: tensor(2.0466e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0540e-09, dtype=torch.float64)
secont condition:: tensor(1.0540e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.1801e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3437e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7737e-09, dtype=torch.float64)
secont condition:: tensor(1.7737e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.0773e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0228e-09, dtype=torch.float64)
secont condition:: tensor(3.0228e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4888e-10, dtype=torch.float64)
secont condition:: tensor(8.4888e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3104e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5727e-09, dtype=torch.float64)
secont condition:: tensor(1.5727e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.4809e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2822e-10, dtype=torch.float64)
secont condition:: tensor(6.2822e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.5817e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3479e-10, dtype=torch.float64)
secont condition:: tensor(8.3479e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6937e-10, dtype=torch.float64)
secont condition:: tensor(1.6937e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8821e-09, dtype=torch.float64)
secont condition:: tensor(2.8821e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.950292825698853
curr_diff: 0 tensor(3.6896e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1867e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2796e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5953e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4483e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.8328e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0403e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4918e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3043e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.4369e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8053e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1888e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9119e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.2559e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0022e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.5412e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3089e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4573e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.7543e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.219073
Train - Epoch 0, Batch: 10, Loss: 0.146478
Test Avg. Loss: 0.000039, Accuracy: 0.964300
Train - Epoch 1, Batch: 0, Loss: 0.142528
Train - Epoch 1, Batch: 10, Loss: 0.146020
Test Avg. Loss: 0.000038, Accuracy: 0.962600
Train - Epoch 2, Batch: 0, Loss: 0.137675
Train - Epoch 2, Batch: 10, Loss: 0.148428
Test Avg. Loss: 0.000037, Accuracy: 0.963200
Train - Epoch 3, Batch: 0, Loss: 0.141239
Train - Epoch 3, Batch: 10, Loss: 0.145111
Test Avg. Loss: 0.000037, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.137915
Train - Epoch 4, Batch: 10, Loss: 0.152309
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 5, Batch: 0, Loss: 0.144144
Train - Epoch 5, Batch: 10, Loss: 0.129645
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 6, Batch: 0, Loss: 0.157118
Train - Epoch 6, Batch: 10, Loss: 0.137504
Test Avg. Loss: 0.000037, Accuracy: 0.966000
Train - Epoch 7, Batch: 0, Loss: 0.137923
Train - Epoch 7, Batch: 10, Loss: 0.147623
Test Avg. Loss: 0.000037, Accuracy: 0.965300
training_time:: 16.427253484725952
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.154544353485107
time_baseline:: 12.172267436981201
curr_diff: 0 tensor(5.3224e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3567e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2511e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6524e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9380e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.4879e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5762e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1255e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2909e-09, dtype=torch.float64)
secont condition:: tensor(1.2909e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4910e-10, dtype=torch.float64)
secont condition:: tensor(7.4910e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0596e-10, dtype=torch.float64)
secont condition:: tensor(5.0596e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5473e-10, dtype=torch.float64)
secont condition:: tensor(1.5473e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4446e-11, dtype=torch.float64)
secont condition:: tensor(2.4446e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3439e-09, dtype=torch.float64)
secont condition:: tensor(1.3439e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4616e-10, dtype=torch.float64)
secont condition:: tensor(1.4616e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.2860e-11, dtype=torch.float64)
secont condition:: tensor(9.2860e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.9106e-11, dtype=torch.float64)
secont condition:: tensor(9.9106e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1752e-11, dtype=torch.float64)
secont condition:: tensor(6.1752e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1941e-10, dtype=torch.float64)
secont condition:: tensor(1.1941e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.0002e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3031e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6569e-10, dtype=torch.float64)
secont condition:: tensor(4.6569e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1602e-09, dtype=torch.float64)
secont condition:: tensor(1.1602e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0034e-10, dtype=torch.float64)
secont condition:: tensor(1.0034e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2186e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8760e-10, dtype=torch.float64)
secont condition:: tensor(3.8760e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3011e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.5332e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2926e-09, dtype=torch.float64)
secont condition:: tensor(2.2926e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1403e-09, dtype=torch.float64)
secont condition:: tensor(1.1403e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0825e-11, dtype=torch.float64)
secont condition:: tensor(1.0825e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0486e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.1213e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2287e-09, dtype=torch.float64)
secont condition:: tensor(4.2287e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0265e-09, dtype=torch.float64)
secont condition:: tensor(1.0265e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1804e-09, dtype=torch.float64)
secont condition:: tensor(2.1804e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4032e-10, dtype=torch.float64)
secont condition:: tensor(9.4032e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1389e-10, dtype=torch.float64)
secont condition:: tensor(6.1389e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3235e-10, dtype=torch.float64)
secont condition:: tensor(3.3235e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8612e-10, dtype=torch.float64)
secont condition:: tensor(9.8612e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4543e-09, dtype=torch.float64)
secont condition:: tensor(1.4543e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3014e-09, dtype=torch.float64)
secont condition:: tensor(1.3014e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8547e-10, dtype=torch.float64)
secont condition:: tensor(2.8547e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3922e-10, dtype=torch.float64)
secont condition:: tensor(5.3922e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1769e-09, dtype=torch.float64)
secont condition:: tensor(1.1769e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5237e-10, dtype=torch.float64)
secont condition:: tensor(6.5237e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.5560e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7304e-10, dtype=torch.float64)
secont condition:: tensor(3.7304e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6376e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2505e-09, dtype=torch.float64)
secont condition:: tensor(1.2505e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8967e-09, dtype=torch.float64)
secont condition:: tensor(1.8967e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6952e-09, dtype=torch.float64)
secont condition:: tensor(5.6952e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9340e-09, dtype=torch.float64)
secont condition:: tensor(2.9340e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9962e-10, dtype=torch.float64)
secont condition:: tensor(8.9962e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1683e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4483e-09, dtype=torch.float64)
secont condition:: tensor(2.4483e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6329e-09, dtype=torch.float64)
secont condition:: tensor(4.6329e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.5198e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9267e-10, dtype=torch.float64)
secont condition:: tensor(9.9267e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0517e-10, dtype=torch.float64)
secont condition:: tensor(5.0517e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6667e-10, dtype=torch.float64)
secont condition:: tensor(7.6667e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.1567e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.1157e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.4643e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7242e-09, dtype=torch.float64)
secont condition:: tensor(3.7242e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6254e-09, dtype=torch.float64)
secont condition:: tensor(2.6254e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.7854e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5171e-09, dtype=torch.float64)
secont condition:: tensor(1.5171e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4397e-09, dtype=torch.float64)
secont condition:: tensor(3.4397e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4869e-08, dtype=torch.float64)
secont condition:: tensor(2.4869e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5749e-09, dtype=torch.float64)
secont condition:: tensor(1.5749e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5574e-09, dtype=torch.float64)
secont condition:: tensor(5.5574e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.0144e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.5135e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9579e-10, dtype=torch.float64)
secont condition:: tensor(7.9579e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3135e-10, dtype=torch.float64)
secont condition:: tensor(5.3135e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0258e-10, dtype=torch.float64)
secont condition:: tensor(2.0258e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1499e-09, dtype=torch.float64)
secont condition:: tensor(1.1499e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7343e-10, dtype=torch.float64)
secont condition:: tensor(6.7343e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1774e-09, dtype=torch.float64)
secont condition:: tensor(1.1774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1859e-09, dtype=torch.float64)
secont condition:: tensor(1.1859e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.0765e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4696e-09, dtype=torch.float64)
secont condition:: tensor(2.4696e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6757e-12, dtype=torch.float64)
secont condition:: tensor(8.6757e-12, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8469e-10, dtype=torch.float64)
secont condition:: tensor(6.8469e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2680e-10, dtype=torch.float64)
secont condition:: tensor(4.2680e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4142e-09, dtype=torch.float64)
secont condition:: tensor(1.4142e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4803e-09, dtype=torch.float64)
secont condition:: tensor(1.4803e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.42624831199646
curr_diff: 0 tensor(2.7977e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3798e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.7669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2659e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3370e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.8452e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9427e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3176e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1295e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.0264e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7928e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.8718e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(6.5935e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.3649e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4466e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.8231e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.9781e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.0723e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.209004
Train - Epoch 0, Batch: 10, Loss: 0.167806
Test Avg. Loss: 0.000039, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.155485
Train - Epoch 1, Batch: 10, Loss: 0.140373
Test Avg. Loss: 0.000038, Accuracy: 0.964200
Train - Epoch 2, Batch: 0, Loss: 0.151370
Train - Epoch 2, Batch: 10, Loss: 0.143197
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 3, Batch: 0, Loss: 0.144200
Train - Epoch 3, Batch: 10, Loss: 0.140003
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 4, Batch: 0, Loss: 0.145034
Train - Epoch 4, Batch: 10, Loss: 0.149057
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 5, Batch: 0, Loss: 0.143915
Train - Epoch 5, Batch: 10, Loss: 0.130622
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 6, Batch: 0, Loss: 0.144129
Train - Epoch 6, Batch: 10, Loss: 0.129107
Test Avg. Loss: 0.000037, Accuracy: 0.965300
Train - Epoch 7, Batch: 0, Loss: 0.125887
Train - Epoch 7, Batch: 10, Loss: 0.136305
Test Avg. Loss: 0.000037, Accuracy: 0.966100
training_time:: 16.3282253742218
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.161318063735962
time_baseline:: 12.179327011108398
curr_diff: 0 tensor(5.1761e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6035e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5882e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1772e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4839e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3539e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2513e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8728e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9151e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1562e-32, dtype=torch.float64)
secont condition:: tensor(1.1562e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3220e-32, dtype=torch.float64)
secont condition:: tensor(2.3220e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7560e-32, dtype=torch.float64)
secont condition:: tensor(2.7560e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5309e-32, dtype=torch.float64)
secont condition:: tensor(3.5309e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.0224e-32, dtype=torch.float64)
secont condition:: tensor(5.0224e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.0423e-32, dtype=torch.float64)
secont condition:: tensor(6.0423e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9341e-32, dtype=torch.float64)
secont condition:: tensor(4.9341e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4702e-32, dtype=torch.float64)
secont condition:: tensor(5.4702e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.7724e-32, dtype=torch.float64)
secont condition:: tensor(5.7724e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.6353e-32, dtype=torch.float64)
secont condition:: tensor(6.6353e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.0932e-32, dtype=torch.float64)
secont condition:: tensor(8.0932e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.7876e-10, dtype=torch.float64)
secont condition:: tensor(1.7876e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0529e-10, dtype=torch.float64)
secont condition:: tensor(1.0529e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7750e-11, dtype=torch.float64)
secont condition:: tensor(6.7750e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8294e-11, dtype=torch.float64)
secont condition:: tensor(4.8294e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8420e-10, dtype=torch.float64)
secont condition:: tensor(2.8420e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6636e-10, dtype=torch.float64)
secont condition:: tensor(1.6636e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4213e-10, dtype=torch.float64)
secont condition:: tensor(1.4213e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5074e-11, dtype=torch.float64)
secont condition:: tensor(9.5074e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8708e-11, dtype=torch.float64)
secont condition:: tensor(8.8708e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6983e-11, dtype=torch.float64)
secont condition:: tensor(5.6983e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6645e-11, dtype=torch.float64)
secont condition:: tensor(4.6645e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.3420e-11, dtype=torch.float64)
secont condition:: tensor(4.3420e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6402e-11, dtype=torch.float64)
secont condition:: tensor(3.6402e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8372e-11, dtype=torch.float64)
secont condition:: tensor(3.8372e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.0193e-11, dtype=torch.float64)
secont condition:: tensor(7.0193e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8345e-11, dtype=torch.float64)
secont condition:: tensor(1.8345e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0579e-11, dtype=torch.float64)
secont condition:: tensor(4.0579e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7888e-11, dtype=torch.float64)
secont condition:: tensor(2.7888e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5417e-11, dtype=torch.float64)
secont condition:: tensor(2.5417e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0611e-11, dtype=torch.float64)
secont condition:: tensor(3.0611e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2266e-11, dtype=torch.float64)
secont condition:: tensor(5.2266e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0956e-11, dtype=torch.float64)
secont condition:: tensor(3.0956e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8545e-11, dtype=torch.float64)
secont condition:: tensor(1.8545e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8047e-10, dtype=torch.float64)
secont condition:: tensor(2.8047e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3335e-12, dtype=torch.float64)
secont condition:: tensor(6.3335e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.8456e-11, dtype=torch.float64)
secont condition:: tensor(1.8456e-11, dtype=torch.float64)
curr_secont condition:: tensor(-8.0609e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5497e-10, dtype=torch.float64)
secont condition:: tensor(1.5497e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2658e-10, dtype=torch.float64)
secont condition:: tensor(1.2658e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4144e-11, dtype=torch.float64)
secont condition:: tensor(7.4144e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5596e-11, dtype=torch.float64)
secont condition:: tensor(5.5596e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2552e-11, dtype=torch.float64)
secont condition:: tensor(4.2552e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6416e-11, dtype=torch.float64)
secont condition:: tensor(5.6416e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7798e-11, dtype=torch.float64)
secont condition:: tensor(6.7798e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1873e-11, dtype=torch.float64)
secont condition:: tensor(5.1873e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7270e-10, dtype=torch.float64)
secont condition:: tensor(1.7270e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9472e-11, dtype=torch.float64)
secont condition:: tensor(3.9472e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1897e-11, dtype=torch.float64)
secont condition:: tensor(5.1897e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5307e-11, dtype=torch.float64)
secont condition:: tensor(3.5307e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2984e-11, dtype=torch.float64)
secont condition:: tensor(3.2984e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7260e-11, dtype=torch.float64)
secont condition:: tensor(4.7260e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.6508e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3310e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1673e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1007e-10, dtype=torch.float64)
secont condition:: tensor(6.1007e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.8315e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9833e-10, dtype=torch.float64)
secont condition:: tensor(6.9833e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.4344e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1327e-09, dtype=torch.float64)
secont condition:: tensor(1.1327e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4785e-10, dtype=torch.float64)
secont condition:: tensor(9.4785e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4101e-10, dtype=torch.float64)
secont condition:: tensor(1.4101e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8214e-11, dtype=torch.float64)
secont condition:: tensor(8.8214e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0371e-09, dtype=torch.float64)
secont condition:: tensor(1.0371e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2386e-10, dtype=torch.float64)
secont condition:: tensor(2.2386e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1765e-10, dtype=torch.float64)
secont condition:: tensor(6.1765e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2768e-10, dtype=torch.float64)
secont condition:: tensor(7.2768e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1865e-10, dtype=torch.float64)
secont condition:: tensor(1.1865e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5409e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3583e-12, dtype=torch.float64)
secont condition:: tensor(3.3583e-12, dtype=torch.float64)
curr_secont condition:: tensor(-4.6659e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.1050e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.3352e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.2580e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2994e-09, dtype=torch.float64)
secont condition:: tensor(9.2994e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6639e-09, dtype=torch.float64)
secont condition:: tensor(2.6639e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.9945e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0375e-09, dtype=torch.float64)
secont condition:: tensor(3.0375e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3275e-09, dtype=torch.float64)
secont condition:: tensor(3.3275e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4430e-09, dtype=torch.float64)
secont condition:: tensor(2.4430e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5875e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4723e-09, dtype=torch.float64)
secont condition:: tensor(3.4723e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1991e-09, dtype=torch.float64)
secont condition:: tensor(7.1991e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2192e-08, dtype=torch.float64)
secont condition:: tensor(1.2192e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1461e-09, dtype=torch.float64)
secont condition:: tensor(3.1461e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.915222406387329
curr_diff: 0 tensor(2.2568e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7767e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.5808e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0462e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(6.1105e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3234e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.6951e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.4886e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9251e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.1652e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.8880e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.8283e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2841e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.3906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7066e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.5724e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.9926e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9867e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5174e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207602
Train - Epoch 0, Batch: 10, Loss: 0.158148
Test Avg. Loss: 0.000039, Accuracy: 0.963000
Train - Epoch 1, Batch: 0, Loss: 0.162138
Train - Epoch 1, Batch: 10, Loss: 0.146383
Test Avg. Loss: 0.000038, Accuracy: 0.962900
Train - Epoch 2, Batch: 0, Loss: 0.144035
Train - Epoch 2, Batch: 10, Loss: 0.150389
Test Avg. Loss: 0.000037, Accuracy: 0.963400
Train - Epoch 3, Batch: 0, Loss: 0.148365
Train - Epoch 3, Batch: 10, Loss: 0.138379
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 4, Batch: 0, Loss: 0.145610
Train - Epoch 4, Batch: 10, Loss: 0.145717
Test Avg. Loss: 0.000037, Accuracy: 0.964600
Train - Epoch 5, Batch: 0, Loss: 0.130450
Train - Epoch 5, Batch: 10, Loss: 0.143806
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 6, Batch: 0, Loss: 0.140197
Train - Epoch 6, Batch: 10, Loss: 0.139819
Test Avg. Loss: 0.000037, Accuracy: 0.965300
Train - Epoch 7, Batch: 0, Loss: 0.142286
Train - Epoch 7, Batch: 10, Loss: 0.152859
Test Avg. Loss: 0.000037, Accuracy: 0.965100
training_time:: 16.51224112510681
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.133762836456299
time_baseline:: 12.151416778564453
curr_diff: 0 tensor(7.4409e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2207e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.4832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5409e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9713e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.8866e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9016e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1894e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0220e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5960e-32, dtype=torch.float64)
secont condition:: tensor(1.5960e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.2759e-32, dtype=torch.float64)
secont condition:: tensor(1.2759e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0001e-32, dtype=torch.float64)
secont condition:: tensor(3.0001e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1980e-10, dtype=torch.float64)
secont condition:: tensor(5.1980e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6067e-10, dtype=torch.float64)
secont condition:: tensor(2.6067e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.2756e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9228e-10, dtype=torch.float64)
secont condition:: tensor(2.9228e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4682e-10, dtype=torch.float64)
secont condition:: tensor(1.4682e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3746e-11, dtype=torch.float64)
secont condition:: tensor(5.3746e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3079e-11, dtype=torch.float64)
secont condition:: tensor(9.3079e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2826e-08, dtype=torch.float64)
secont condition:: tensor(1.2826e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.9252e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.0304e-11, dtype=torch.float64)
secont condition:: tensor(8.0304e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1494e-10, dtype=torch.float64)
secont condition:: tensor(2.1494e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3997e-11, dtype=torch.float64)
secont condition:: tensor(8.3997e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4080e-10, dtype=torch.float64)
secont condition:: tensor(1.4080e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5045e-11, dtype=torch.float64)
secont condition:: tensor(4.5045e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6634e-10, dtype=torch.float64)
secont condition:: tensor(1.6634e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7413e-09, dtype=torch.float64)
secont condition:: tensor(1.7413e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0180e-10, dtype=torch.float64)
secont condition:: tensor(1.0180e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3474e-10, dtype=torch.float64)
secont condition:: tensor(1.3474e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0199e-10, dtype=torch.float64)
secont condition:: tensor(1.0199e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3918e-09, dtype=torch.float64)
secont condition:: tensor(1.3918e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2812e-09, dtype=torch.float64)
secont condition:: tensor(6.2812e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0913e-11, dtype=torch.float64)
secont condition:: tensor(9.0913e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.7231e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0498e-10, dtype=torch.float64)
secont condition:: tensor(4.0498e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.0535e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4340e-10, dtype=torch.float64)
secont condition:: tensor(2.4340e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0062e-09, dtype=torch.float64)
secont condition:: tensor(1.0062e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.4403e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5434e-09, dtype=torch.float64)
secont condition:: tensor(2.5434e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7947e-11, dtype=torch.float64)
secont condition:: tensor(5.7947e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6053e-09, dtype=torch.float64)
secont condition:: tensor(4.6053e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1583e-09, dtype=torch.float64)
secont condition:: tensor(2.1583e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3042e-09, dtype=torch.float64)
secont condition:: tensor(1.3042e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1769e-10, dtype=torch.float64)
secont condition:: tensor(9.1769e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9810e-09, dtype=torch.float64)
secont condition:: tensor(1.9810e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0011e-09, dtype=torch.float64)
secont condition:: tensor(3.0011e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1597e-10, dtype=torch.float64)
secont condition:: tensor(8.1597e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0326e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2387e-09, dtype=torch.float64)
secont condition:: tensor(5.2387e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8015e-09, dtype=torch.float64)
secont condition:: tensor(1.8015e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8191e-10, dtype=torch.float64)
secont condition:: tensor(3.8191e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1010e-10, dtype=torch.float64)
secont condition:: tensor(5.1010e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0791e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5299e-09, dtype=torch.float64)
secont condition:: tensor(5.5299e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2732e-10, dtype=torch.float64)
secont condition:: tensor(8.2732e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.1864e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5253e-08, dtype=torch.float64)
secont condition:: tensor(2.5253e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4751e-09, dtype=torch.float64)
secont condition:: tensor(3.4751e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2633e-09, dtype=torch.float64)
secont condition:: tensor(1.2633e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1949e-09, dtype=torch.float64)
secont condition:: tensor(1.1949e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2316e-10, dtype=torch.float64)
secont condition:: tensor(8.2316e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.7753e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9374e-10, dtype=torch.float64)
secont condition:: tensor(6.9374e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8274e-09, dtype=torch.float64)
secont condition:: tensor(3.8274e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3412e-10, dtype=torch.float64)
secont condition:: tensor(1.3412e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5167e-09, dtype=torch.float64)
secont condition:: tensor(5.5167e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6955e-08, dtype=torch.float64)
secont condition:: tensor(4.6955e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6303e-09, dtype=torch.float64)
secont condition:: tensor(4.6303e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.0572e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.9812e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.9267e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7374e-09, dtype=torch.float64)
secont condition:: tensor(1.7374e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5288e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.5169e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.6117e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.4827e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0143e-08, dtype=torch.float64)
secont condition:: tensor(1.0143e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9003e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7450e-09, dtype=torch.float64)
secont condition:: tensor(1.7450e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5758e-09, dtype=torch.float64)
secont condition:: tensor(7.5758e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3008e-09, dtype=torch.float64)
secont condition:: tensor(1.3008e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8388e-10, dtype=torch.float64)
secont condition:: tensor(8.8388e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5440e-08, dtype=torch.float64)
secont condition:: tensor(1.5440e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5682e-09, dtype=torch.float64)
secont condition:: tensor(3.5682e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5323e-09, dtype=torch.float64)
secont condition:: tensor(1.5323e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0136e-10, dtype=torch.float64)
secont condition:: tensor(9.0136e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.9352e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0382e-09, dtype=torch.float64)
secont condition:: tensor(2.0382e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3975e-08, dtype=torch.float64)
secont condition:: tensor(8.3975e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8661e-09, dtype=torch.float64)
secont condition:: tensor(3.8661e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6677e-09, dtype=torch.float64)
secont condition:: tensor(4.6677e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.330824851989746
curr_diff: 0 tensor(3.6192e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4060e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7830e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0739e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2373e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.2174e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4061e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3366e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3113e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.2191e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.3139e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7191e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7490e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3114e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.4173e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6220e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2693e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2895e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965400
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.206801
Train - Epoch 0, Batch: 10, Loss: 0.161616
Test Avg. Loss: 0.000039, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.149676
Train - Epoch 1, Batch: 10, Loss: 0.146345
Test Avg. Loss: 0.000038, Accuracy: 0.963500
Train - Epoch 2, Batch: 0, Loss: 0.145832
Train - Epoch 2, Batch: 10, Loss: 0.152753
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.144720
Train - Epoch 3, Batch: 10, Loss: 0.151679
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 4, Batch: 0, Loss: 0.136043
Train - Epoch 4, Batch: 10, Loss: 0.145430
Test Avg. Loss: 0.000037, Accuracy: 0.965100
Train - Epoch 5, Batch: 0, Loss: 0.149631
Train - Epoch 5, Batch: 10, Loss: 0.144595
Test Avg. Loss: 0.000037, Accuracy: 0.966200
Train - Epoch 6, Batch: 0, Loss: 0.148094
Train - Epoch 6, Batch: 10, Loss: 0.142990
Test Avg. Loss: 0.000037, Accuracy: 0.965500
Train - Epoch 7, Batch: 0, Loss: 0.135038
Train - Epoch 7, Batch: 10, Loss: 0.141775
Test Avg. Loss: 0.000037, Accuracy: 0.965300
training_time:: 16.398587226867676
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.13643217086792
time_baseline:: 12.154446601867676
curr_diff: 0 tensor(4.4441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8740e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.7618e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3486e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3174e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.2954e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7895e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.7865e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.4487e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 1
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0013e-33, dtype=torch.float64)
secont condition:: tensor(9.0013e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7982e-32, dtype=torch.float64)
secont condition:: tensor(1.7982e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5241e-32, dtype=torch.float64)
secont condition:: tensor(2.5241e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5401e-32, dtype=torch.float64)
secont condition:: tensor(2.5401e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5876e-32, dtype=torch.float64)
secont condition:: tensor(2.5876e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.0286e-32, dtype=torch.float64)
secont condition:: tensor(4.0286e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9464e-32, dtype=torch.float64)
secont condition:: tensor(4.9464e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9792e-32, dtype=torch.float64)
secont condition:: tensor(4.9792e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8506e-32, dtype=torch.float64)
secont condition:: tensor(4.8506e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8971e-32, dtype=torch.float64)
secont condition:: tensor(4.8971e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8751e-10, dtype=torch.float64)
secont condition:: tensor(2.8751e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6264e-11, dtype=torch.float64)
secont condition:: tensor(8.6264e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8046e-11, dtype=torch.float64)
secont condition:: tensor(6.8046e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8242e-11, dtype=torch.float64)
secont condition:: tensor(5.8242e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2814e-11, dtype=torch.float64)
secont condition:: tensor(3.2814e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9789e-11, dtype=torch.float64)
secont condition:: tensor(3.9789e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5928e-10, dtype=torch.float64)
secont condition:: tensor(3.5928e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3602e-10, dtype=torch.float64)
secont condition:: tensor(3.3602e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2309e-10, dtype=torch.float64)
secont condition:: tensor(2.2309e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2441e-10, dtype=torch.float64)
secont condition:: tensor(1.2441e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1360e-10, dtype=torch.float64)
secont condition:: tensor(1.1360e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5038e-11, dtype=torch.float64)
secont condition:: tensor(9.5038e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.4169e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0862e-11, dtype=torch.float64)
secont condition:: tensor(8.0862e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8554e-10, dtype=torch.float64)
secont condition:: tensor(1.8554e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4737e-11, dtype=torch.float64)
secont condition:: tensor(3.4737e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4260e-11, dtype=torch.float64)
secont condition:: tensor(5.4260e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.0727e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7206e-10, dtype=torch.float64)
secont condition:: tensor(2.7206e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6642e-11, dtype=torch.float64)
secont condition:: tensor(4.6642e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6433e-11, dtype=torch.float64)
secont condition:: tensor(7.6433e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0939e-11, dtype=torch.float64)
secont condition:: tensor(6.0939e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2650e-12, dtype=torch.float64)
secont condition:: tensor(3.2650e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.0511e-11, dtype=torch.float64)
secont condition:: tensor(5.0511e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0528e-10, dtype=torch.float64)
secont condition:: tensor(1.0528e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1566e-09, dtype=torch.float64)
secont condition:: tensor(1.1566e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7294e-10, dtype=torch.float64)
secont condition:: tensor(3.7294e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9558e-10, dtype=torch.float64)
secont condition:: tensor(2.9558e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.7568e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9868e-11, dtype=torch.float64)
secont condition:: tensor(7.9868e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5110e-09, dtype=torch.float64)
secont condition:: tensor(4.5110e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8609e-10, dtype=torch.float64)
secont condition:: tensor(6.8609e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0802e-10, dtype=torch.float64)
secont condition:: tensor(7.0802e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8583e-10, dtype=torch.float64)
secont condition:: tensor(1.8583e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5796e-10, dtype=torch.float64)
secont condition:: tensor(2.5796e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6680e-10, dtype=torch.float64)
secont condition:: tensor(1.6680e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1006e-11, dtype=torch.float64)
secont condition:: tensor(3.1006e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6156e-11, dtype=torch.float64)
secont condition:: tensor(7.6156e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2206e-10, dtype=torch.float64)
secont condition:: tensor(1.2206e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3242e-10, dtype=torch.float64)
secont condition:: tensor(2.3242e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.4426e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1917e-10, dtype=torch.float64)
secont condition:: tensor(3.1917e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.1713e-09, dtype=torch.float64)
secont condition:: tensor(7.1713e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4794e-10, dtype=torch.float64)
secont condition:: tensor(2.4794e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6487e-10, dtype=torch.float64)
secont condition:: tensor(8.6487e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5162e-10, dtype=torch.float64)
secont condition:: tensor(6.5162e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1365e-08, dtype=torch.float64)
secont condition:: tensor(1.1365e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5080e-10, dtype=torch.float64)
secont condition:: tensor(1.5080e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8429e-10, dtype=torch.float64)
secont condition:: tensor(2.8429e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6178e-11, dtype=torch.float64)
secont condition:: tensor(8.6178e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.0353e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9874e-10, dtype=torch.float64)
secont condition:: tensor(2.9874e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.4029e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.3227e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6027e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6721e-10, dtype=torch.float64)
secont condition:: tensor(4.6721e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5062e-10, dtype=torch.float64)
secont condition:: tensor(6.5062e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9489e-10, dtype=torch.float64)
secont condition:: tensor(5.9489e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1490e-10, dtype=torch.float64)
secont condition:: tensor(4.1490e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.1981e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9636e-10, dtype=torch.float64)
secont condition:: tensor(2.9636e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0197e-10, dtype=torch.float64)
secont condition:: tensor(9.0197e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0292e-09, dtype=torch.float64)
secont condition:: tensor(2.0292e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7626e-10, dtype=torch.float64)
secont condition:: tensor(1.7626e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4927e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1197e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.1459e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.6698e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.0646e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8302e-10, dtype=torch.float64)
secont condition:: tensor(4.8302e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6709e-09, dtype=torch.float64)
secont condition:: tensor(1.6709e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6898e-10, dtype=torch.float64)
secont condition:: tensor(7.6898e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.8822e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3959e-10, dtype=torch.float64)
secont condition:: tensor(1.3959e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4396e-09, dtype=torch.float64)
secont condition:: tensor(1.4396e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.267027139663696
curr_diff: 0 tensor(2.4085e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4195e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5686e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.8225e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4054e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4784e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3145e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.5151e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.0039e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.3087e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.6721e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0657e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.7095e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.9400e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.0728e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7335e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5772e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.9439e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.0294e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965600
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.204547
Train - Epoch 0, Batch: 10, Loss: 0.164569
Train - Epoch 0, Batch: 20, Loss: 0.137142
Train - Epoch 0, Batch: 30, Loss: 0.174355
Train - Epoch 0, Batch: 40, Loss: 0.150903
Train - Epoch 0, Batch: 50, Loss: 0.154954
Test Avg. Loss: 0.000131, Accuracy: 0.963600
Train - Epoch 1, Batch: 0, Loss: 0.169661
Train - Epoch 1, Batch: 10, Loss: 0.139902
Train - Epoch 1, Batch: 20, Loss: 0.153846
Train - Epoch 1, Batch: 30, Loss: 0.156786
Train - Epoch 1, Batch: 40, Loss: 0.142279
Train - Epoch 1, Batch: 50, Loss: 0.142437
Test Avg. Loss: 0.000131, Accuracy: 0.965100
training_time:: 5.261949777603149
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.204193115234375
time_baseline:: 4.208978891372681
curr_diff: 0 tensor(7.7370e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7373e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5541e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1657e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0394e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.7530e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3232e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3107e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1980e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1337e-32, dtype=torch.float64)
secont condition:: tensor(1.1337e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9957e-32, dtype=torch.float64)
secont condition:: tensor(1.9957e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2515e-32, dtype=torch.float64)
secont condition:: tensor(2.2515e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9533e-32, dtype=torch.float64)
secont condition:: tensor(1.9533e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.7381e-32, dtype=torch.float64)
secont condition:: tensor(3.7381e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.3125e-32, dtype=torch.float64)
secont condition:: tensor(3.3125e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.3060e-32, dtype=torch.float64)
secont condition:: tensor(4.3060e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4920e-32, dtype=torch.float64)
secont condition:: tensor(5.4920e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2123e-32, dtype=torch.float64)
secont condition:: tensor(6.2123e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.6163e-32, dtype=torch.float64)
secont condition:: tensor(5.6163e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4221e-32, dtype=torch.float64)
secont condition:: tensor(5.4221e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.4858e-32, dtype=torch.float64)
secont condition:: tensor(7.4858e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.2556e-32, dtype=torch.float64)
secont condition:: tensor(8.2556e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.2521e-32, dtype=torch.float64)
secont condition:: tensor(8.2521e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0438e-31, dtype=torch.float64)
secont condition:: tensor(1.0438e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0353e-31, dtype=torch.float64)
secont condition:: tensor(1.0353e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0569e-31, dtype=torch.float64)
secont condition:: tensor(1.0569e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1610e-31, dtype=torch.float64)
secont condition:: tensor(1.1610e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1831e-31, dtype=torch.float64)
secont condition:: tensor(1.1831e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1306e-31, dtype=torch.float64)
secont condition:: tensor(1.1306e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2704e-31, dtype=torch.float64)
secont condition:: tensor(1.2704e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2544e-31, dtype=torch.float64)
secont condition:: tensor(1.2544e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2594e-31, dtype=torch.float64)
secont condition:: tensor(1.2594e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4383e-31, dtype=torch.float64)
secont condition:: tensor(1.4383e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3086e-31, dtype=torch.float64)
secont condition:: tensor(1.3086e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6282e-31, dtype=torch.float64)
secont condition:: tensor(1.6282e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4755e-31, dtype=torch.float64)
secont condition:: tensor(1.4755e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3755e-31, dtype=torch.float64)
secont condition:: tensor(1.3755e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9964e-31, dtype=torch.float64)
secont condition:: tensor(1.9964e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8380e-31, dtype=torch.float64)
secont condition:: tensor(1.8380e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7926e-31, dtype=torch.float64)
secont condition:: tensor(1.7926e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7231e-31, dtype=torch.float64)
secont condition:: tensor(1.7231e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0119e-31, dtype=torch.float64)
secont condition:: tensor(2.0119e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7969e-31, dtype=torch.float64)
secont condition:: tensor(1.7969e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0416e-31, dtype=torch.float64)
secont condition:: tensor(2.0416e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.6752e-09, dtype=torch.float64)
secont condition:: tensor(3.6752e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9790e-09, dtype=torch.float64)
secont condition:: tensor(1.9790e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7710e-10, dtype=torch.float64)
secont condition:: tensor(9.7710e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4952e-10, dtype=torch.float64)
secont condition:: tensor(5.4952e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0857e-10, dtype=torch.float64)
secont condition:: tensor(4.0857e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3602e-10, dtype=torch.float64)
secont condition:: tensor(5.3602e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7920e-10, dtype=torch.float64)
secont condition:: tensor(6.7920e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1382e-08, dtype=torch.float64)
secont condition:: tensor(1.1382e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0691e-09, dtype=torch.float64)
secont condition:: tensor(1.0691e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6180e-10, dtype=torch.float64)
secont condition:: tensor(1.6180e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9780e-09, dtype=torch.float64)
secont condition:: tensor(7.9780e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4478e-09, dtype=torch.float64)
secont condition:: tensor(2.4478e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7272e-09, dtype=torch.float64)
secont condition:: tensor(1.7272e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1001e-09, dtype=torch.float64)
secont condition:: tensor(2.1001e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3422e-10, dtype=torch.float64)
secont condition:: tensor(5.3422e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8519e-08, dtype=torch.float64)
secont condition:: tensor(1.8519e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4264e-10, dtype=torch.float64)
secont condition:: tensor(3.4264e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8764e-10, dtype=torch.float64)
secont condition:: tensor(2.8764e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6264e-10, dtype=torch.float64)
secont condition:: tensor(2.6264e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9360e-08, dtype=torch.float64)
secont condition:: tensor(5.9360e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0298e-08, dtype=torch.float64)
secont condition:: tensor(1.0298e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.1204e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4134e-09, dtype=torch.float64)
secont condition:: tensor(2.4134e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1573e-09, dtype=torch.float64)
secont condition:: tensor(1.1573e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4606e-09, dtype=torch.float64)
secont condition:: tensor(3.4606e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5929e-09, dtype=torch.float64)
secont condition:: tensor(3.5929e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8369e-09, dtype=torch.float64)
secont condition:: tensor(4.8369e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0349e-09, dtype=torch.float64)
secont condition:: tensor(9.0349e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8349e-09, dtype=torch.float64)
secont condition:: tensor(7.8349e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1495e-09, dtype=torch.float64)
secont condition:: tensor(1.1495e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6592e-10, dtype=torch.float64)
secont condition:: tensor(4.6592e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3527e-09, dtype=torch.float64)
secont condition:: tensor(3.3527e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8783e-08, dtype=torch.float64)
secont condition:: tensor(4.8783e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.4604e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4301e-09, dtype=torch.float64)
secont condition:: tensor(3.4301e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6430e-09, dtype=torch.float64)
secont condition:: tensor(1.6430e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0091e-09, dtype=torch.float64)
secont condition:: tensor(7.0091e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6541e-10, dtype=torch.float64)
secont condition:: tensor(9.6541e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9725e-09, dtype=torch.float64)
secont condition:: tensor(1.9725e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1079e-09, dtype=torch.float64)
secont condition:: tensor(3.1079e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0878e-09, dtype=torch.float64)
secont condition:: tensor(1.0878e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9392e-09, dtype=torch.float64)
secont condition:: tensor(3.9392e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5416e-10, dtype=torch.float64)
secont condition:: tensor(7.5416e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4020e-10, dtype=torch.float64)
secont condition:: tensor(6.4020e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.4314e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9630e-10, dtype=torch.float64)
secont condition:: tensor(2.9630e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.739557981491089
curr_diff: 0 tensor(8.1093e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1887e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5880e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0329e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.3461e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.7022e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6378e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.7232e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1280e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3291e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0998e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.5355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4958e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.5904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9493e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.5633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.963600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.203179
Train - Epoch 0, Batch: 10, Loss: 0.177320
Train - Epoch 0, Batch: 20, Loss: 0.162803
Train - Epoch 0, Batch: 30, Loss: 0.135068
Train - Epoch 0, Batch: 40, Loss: 0.151087
Train - Epoch 0, Batch: 50, Loss: 0.138862
Test Avg. Loss: 0.000131, Accuracy: 0.964900
Train - Epoch 1, Batch: 0, Loss: 0.127825
Train - Epoch 1, Batch: 10, Loss: 0.154277
Train - Epoch 1, Batch: 20, Loss: 0.155173
Train - Epoch 1, Batch: 30, Loss: 0.150241
Train - Epoch 1, Batch: 40, Loss: 0.124571
Train - Epoch 1, Batch: 50, Loss: 0.129798
Test Avg. Loss: 0.000130, Accuracy: 0.965600
training_time:: 5.233878135681152
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.2010338306427
time_baseline:: 4.206085205078125
curr_diff: 0 tensor(2.7500e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5455e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9319e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4527e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.4481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.5153e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.0469e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3962e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.5795e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.7871e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.6780e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4802e-33, dtype=torch.float64)
secont condition:: tensor(6.4802e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.5075e-32, dtype=torch.float64)
secont condition:: tensor(1.5075e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8462e-32, dtype=torch.float64)
secont condition:: tensor(2.8462e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2179e-32, dtype=torch.float64)
secont condition:: tensor(3.2179e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2399e-32, dtype=torch.float64)
secont condition:: tensor(3.2399e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.5012e-32, dtype=torch.float64)
secont condition:: tensor(4.5012e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8794e-32, dtype=torch.float64)
secont condition:: tensor(3.8794e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2005e-32, dtype=torch.float64)
secont condition:: tensor(6.2005e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.5035e-32, dtype=torch.float64)
secont condition:: tensor(6.5035e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.6884e-32, dtype=torch.float64)
secont condition:: tensor(5.6884e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2754e-32, dtype=torch.float64)
secont condition:: tensor(6.2754e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0023e-31, dtype=torch.float64)
secont condition:: tensor(1.0023e-31, dtype=torch.float64)
curr_secont condition:: tensor(7.0735e-32, dtype=torch.float64)
secont condition:: tensor(7.0735e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.7646e-32, dtype=torch.float64)
secont condition:: tensor(9.7646e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1007e-31, dtype=torch.float64)
secont condition:: tensor(1.1007e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0410e-31, dtype=torch.float64)
secont condition:: tensor(1.0410e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0799e-31, dtype=torch.float64)
secont condition:: tensor(1.0799e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1205e-31, dtype=torch.float64)
secont condition:: tensor(1.1205e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2544e-31, dtype=torch.float64)
secont condition:: tensor(1.2544e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1926e-31, dtype=torch.float64)
secont condition:: tensor(1.1926e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0618e-31, dtype=torch.float64)
secont condition:: tensor(1.0618e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3549e-31, dtype=torch.float64)
secont condition:: tensor(1.3549e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3683e-31, dtype=torch.float64)
secont condition:: tensor(1.3683e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4274e-31, dtype=torch.float64)
secont condition:: tensor(1.4274e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6275e-31, dtype=torch.float64)
secont condition:: tensor(1.6275e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4254e-31, dtype=torch.float64)
secont condition:: tensor(1.4254e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5344e-31, dtype=torch.float64)
secont condition:: tensor(1.5344e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4964e-31, dtype=torch.float64)
secont condition:: tensor(1.4964e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5480e-31, dtype=torch.float64)
secont condition:: tensor(1.5480e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6551e-31, dtype=torch.float64)
secont condition:: tensor(1.6551e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7879e-31, dtype=torch.float64)
secont condition:: tensor(1.7879e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6771e-31, dtype=torch.float64)
secont condition:: tensor(1.6771e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9638e-31, dtype=torch.float64)
secont condition:: tensor(1.9638e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7658e-31, dtype=torch.float64)
secont condition:: tensor(1.7658e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8876e-31, dtype=torch.float64)
secont condition:: tensor(1.8876e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9965e-31, dtype=torch.float64)
secont condition:: tensor(1.9965e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9243e-31, dtype=torch.float64)
secont condition:: tensor(1.9243e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0413e-31, dtype=torch.float64)
secont condition:: tensor(2.0413e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.3409e-31, dtype=torch.float64)
secont condition:: tensor(2.3409e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4014e-31, dtype=torch.float64)
secont condition:: tensor(2.4014e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.7606e-31, dtype=torch.float64)
secont condition:: tensor(2.7606e-31, dtype=torch.float64)
curr_secont condition:: tensor(6.7743e-09, dtype=torch.float64)
secont condition:: tensor(6.7743e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4006e-09, dtype=torch.float64)
secont condition:: tensor(1.4006e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3696e-10, dtype=torch.float64)
secont condition:: tensor(6.3696e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7681e-10, dtype=torch.float64)
secont condition:: tensor(3.7681e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8902e-10, dtype=torch.float64)
secont condition:: tensor(1.8902e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8404e-10, dtype=torch.float64)
secont condition:: tensor(1.8404e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2961e-10, dtype=torch.float64)
secont condition:: tensor(1.2961e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0676e-10, dtype=torch.float64)
secont condition:: tensor(1.0676e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9479e-11, dtype=torch.float64)
secont condition:: tensor(7.9479e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8968e-11, dtype=torch.float64)
secont condition:: tensor(5.8968e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6170e-11, dtype=torch.float64)
secont condition:: tensor(3.6170e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1446e-11, dtype=torch.float64)
secont condition:: tensor(5.1446e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2390e-11, dtype=torch.float64)
secont condition:: tensor(5.2390e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5244e-11, dtype=torch.float64)
secont condition:: tensor(8.5244e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.2918e-11, dtype=torch.float64)
secont condition:: tensor(7.2918e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2791e-11, dtype=torch.float64)
secont condition:: tensor(4.2791e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7572e-11, dtype=torch.float64)
secont condition:: tensor(3.7572e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3466e-11, dtype=torch.float64)
secont condition:: tensor(4.3466e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6139e-11, dtype=torch.float64)
secont condition:: tensor(3.6139e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5336e-11, dtype=torch.float64)
secont condition:: tensor(3.5336e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5881e-11, dtype=torch.float64)
secont condition:: tensor(3.5881e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1172e-11, dtype=torch.float64)
secont condition:: tensor(3.1172e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3191e-11, dtype=torch.float64)
secont condition:: tensor(3.3191e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5007e-10, dtype=torch.float64)
secont condition:: tensor(1.5007e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0584e-11, dtype=torch.float64)
secont condition:: tensor(3.0584e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2796e-11, dtype=torch.float64)
secont condition:: tensor(2.2796e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0274e-11, dtype=torch.float64)
secont condition:: tensor(1.0274e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4452e-11, dtype=torch.float64)
secont condition:: tensor(2.4452e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0102e-09, dtype=torch.float64)
secont condition:: tensor(3.0102e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7769e-10, dtype=torch.float64)
secont condition:: tensor(6.7769e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4874e-10, dtype=torch.float64)
secont condition:: tensor(1.4874e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8733e-10, dtype=torch.float64)
secont condition:: tensor(3.8733e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1823e-10, dtype=torch.float64)
secont condition:: tensor(2.1823e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1039e-09, dtype=torch.float64)
secont condition:: tensor(5.1039e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8223e-10, dtype=torch.float64)
secont condition:: tensor(2.8223e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4849e-10, dtype=torch.float64)
secont condition:: tensor(7.4849e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1489e-10, dtype=torch.float64)
secont condition:: tensor(1.1489e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.8233253955841064
curr_diff: 0 tensor(2.2420e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0859e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.3660e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2285e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6386e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1494e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5922e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0042e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.2572e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3788e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.5926e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.7378e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3392e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.6646e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1204e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.4309e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.7546e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.6484e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8509e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1395e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.0370e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212391
Train - Epoch 0, Batch: 10, Loss: 0.155147
Train - Epoch 0, Batch: 20, Loss: 0.160255
Train - Epoch 0, Batch: 30, Loss: 0.133946
Train - Epoch 0, Batch: 40, Loss: 0.143726
Train - Epoch 0, Batch: 50, Loss: 0.135002
Test Avg. Loss: 0.000132, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.132949
Train - Epoch 1, Batch: 10, Loss: 0.126825
Train - Epoch 1, Batch: 20, Loss: 0.160663
Train - Epoch 1, Batch: 30, Loss: 0.154417
Train - Epoch 1, Batch: 40, Loss: 0.131022
Train - Epoch 1, Batch: 50, Loss: 0.141191
Test Avg. Loss: 0.000131, Accuracy: 0.965300
training_time:: 5.3123533725738525
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.225160360336304
time_baseline:: 4.23014760017395
curr_diff: 0 tensor(4.1011e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3684e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7585e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2560e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.1480e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9837e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8334e-33, dtype=torch.float64)
secont condition:: tensor(9.8334e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4264e-32, dtype=torch.float64)
secont condition:: tensor(1.4264e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0993e-32, dtype=torch.float64)
secont condition:: tensor(2.0993e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8557e-32, dtype=torch.float64)
secont condition:: tensor(2.8557e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.4544e-32, dtype=torch.float64)
secont condition:: tensor(3.4544e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.0285e-32, dtype=torch.float64)
secont condition:: tensor(4.0285e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.5609e-32, dtype=torch.float64)
secont condition:: tensor(4.5609e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.2087e-32, dtype=torch.float64)
secont condition:: tensor(5.2087e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.4307e-32, dtype=torch.float64)
secont condition:: tensor(9.4307e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5072e-09, dtype=torch.float64)
secont condition:: tensor(3.5072e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6459e-09, dtype=torch.float64)
secont condition:: tensor(2.6459e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1911e-09, dtype=torch.float64)
secont condition:: tensor(1.1911e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1258e-09, dtype=torch.float64)
secont condition:: tensor(1.1258e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9636e-10, dtype=torch.float64)
secont condition:: tensor(5.9636e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8025e-10, dtype=torch.float64)
secont condition:: tensor(4.8025e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9310e-10, dtype=torch.float64)
secont condition:: tensor(3.9310e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8099e-10, dtype=torch.float64)
secont condition:: tensor(2.8099e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4185e-10, dtype=torch.float64)
secont condition:: tensor(2.4185e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3258e-10, dtype=torch.float64)
secont condition:: tensor(2.3258e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1290e-12, dtype=torch.float64)
secont condition:: tensor(3.1290e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.2041e-10, dtype=torch.float64)
secont condition:: tensor(2.2041e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1161e-10, dtype=torch.float64)
secont condition:: tensor(2.1161e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6430e-10, dtype=torch.float64)
secont condition:: tensor(2.6430e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7515e-10, dtype=torch.float64)
secont condition:: tensor(1.7515e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.4480e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0684e-10, dtype=torch.float64)
secont condition:: tensor(3.0684e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8295e-10, dtype=torch.float64)
secont condition:: tensor(1.8295e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5480e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5908e-09, dtype=torch.float64)
secont condition:: tensor(7.5908e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.4030e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4221e-09, dtype=torch.float64)
secont condition:: tensor(8.4221e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6235e-09, dtype=torch.float64)
secont condition:: tensor(3.6235e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9643e-09, dtype=torch.float64)
secont condition:: tensor(1.9643e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7354e-09, dtype=torch.float64)
secont condition:: tensor(1.7354e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9306e-09, dtype=torch.float64)
secont condition:: tensor(1.9306e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.0336e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0053e-09, dtype=torch.float64)
secont condition:: tensor(5.0053e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5509e-09, dtype=torch.float64)
secont condition:: tensor(6.5509e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.0127e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0777e-08, dtype=torch.float64)
secont condition:: tensor(2.0777e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4416e-09, dtype=torch.float64)
secont condition:: tensor(8.4416e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4800e-08, dtype=torch.float64)
secont condition:: tensor(2.4800e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8135e-09, dtype=torch.float64)
secont condition:: tensor(4.8135e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1125e-08, dtype=torch.float64)
secont condition:: tensor(1.1125e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0150e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3815e-08, dtype=torch.float64)
secont condition:: tensor(6.3815e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9526e-09, dtype=torch.float64)
secont condition:: tensor(8.9526e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1722e-08, dtype=torch.float64)
secont condition:: tensor(2.1722e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1079e-08, dtype=torch.float64)
secont condition:: tensor(1.1079e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2344e-08, dtype=torch.float64)
secont condition:: tensor(2.2344e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.7469e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3686e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.1203e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5426e-08, dtype=torch.float64)
secont condition:: tensor(9.5426e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.5177e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1098e-09, dtype=torch.float64)
secont condition:: tensor(1.1098e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6431e-08, dtype=torch.float64)
secont condition:: tensor(4.6431e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6044e-07, dtype=torch.float64)
secont condition:: tensor(3.6044e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9901e-08, dtype=torch.float64)
secont condition:: tensor(7.9901e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9730e-09, dtype=torch.float64)
secont condition:: tensor(8.9730e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6795e-08, dtype=torch.float64)
secont condition:: tensor(3.6795e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8864e-08, dtype=torch.float64)
secont condition:: tensor(1.8864e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4251e-08, dtype=torch.float64)
secont condition:: tensor(6.4251e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7421e-08, dtype=torch.float64)
secont condition:: tensor(3.7421e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4386e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.5551e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7031e-08, dtype=torch.float64)
secont condition:: tensor(6.7031e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2023e-08, dtype=torch.float64)
secont condition:: tensor(3.2023e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7808e-07, dtype=torch.float64)
secont condition:: tensor(1.7808e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0505e-07, dtype=torch.float64)
secont condition:: tensor(1.0505e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1892e-08, dtype=torch.float64)
secont condition:: tensor(2.1892e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.6576e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6977e-07, dtype=torch.float64)
secont condition:: tensor(3.6977e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9030e-08, dtype=torch.float64)
secont condition:: tensor(3.9030e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.8384e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3604e-07, dtype=torch.float64)
secont condition:: tensor(1.3604e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.1297e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7914e-07, dtype=torch.float64)
secont condition:: tensor(2.7914e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.1507e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.8262e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.9237e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1496e-07, dtype=torch.float64)
secont condition:: tensor(1.1496e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3321e-08, dtype=torch.float64)
secont condition:: tensor(4.3321e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5968e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.6193e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5934e-08, dtype=torch.float64)
secont condition:: tensor(2.5934e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5702e-08, dtype=torch.float64)
secont condition:: tensor(9.5702e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7735e-08, dtype=torch.float64)
secont condition:: tensor(5.7735e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.003860950469971
curr_diff: 0 tensor(2.4907e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0042e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1480e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.6834e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4756e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.3491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8856e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.6534e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9213e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.1867e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.7824e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0838e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1230e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.222710
Train - Epoch 0, Batch: 10, Loss: 0.164733
Train - Epoch 0, Batch: 20, Loss: 0.171412
Train - Epoch 0, Batch: 30, Loss: 0.135446
Train - Epoch 0, Batch: 40, Loss: 0.127881
Train - Epoch 0, Batch: 50, Loss: 0.149762
Test Avg. Loss: 0.000132, Accuracy: 0.963300
Train - Epoch 1, Batch: 0, Loss: 0.135794
Train - Epoch 1, Batch: 10, Loss: 0.129005
Train - Epoch 1, Batch: 20, Loss: 0.120342
Train - Epoch 1, Batch: 30, Loss: 0.133795
Train - Epoch 1, Batch: 40, Loss: 0.144750
Train - Epoch 1, Batch: 50, Loss: 0.144673
Test Avg. Loss: 0.000131, Accuracy: 0.964200
training_time:: 5.2184975147247314
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.180016279220581
time_baseline:: 4.184869289398193
curr_diff: 0 tensor(2.0092e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9067e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8277e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1263e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3397e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.4227e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0441e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2532e-33, dtype=torch.float64)
secont condition:: tensor(4.2532e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7922e-32, dtype=torch.float64)
secont condition:: tensor(1.7922e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9920e-32, dtype=torch.float64)
secont condition:: tensor(1.9920e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2891e-32, dtype=torch.float64)
secont condition:: tensor(3.2891e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0678e-32, dtype=torch.float64)
secont condition:: tensor(3.0678e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.3663e-32, dtype=torch.float64)
secont condition:: tensor(4.3663e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1626e-32, dtype=torch.float64)
secont condition:: tensor(5.1626e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5324e-32, dtype=torch.float64)
secont condition:: tensor(3.5324e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.9356e-32, dtype=torch.float64)
secont condition:: tensor(5.9356e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3663e-32, dtype=torch.float64)
secont condition:: tensor(5.3663e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.2793e-32, dtype=torch.float64)
secont condition:: tensor(8.2793e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3458e-32, dtype=torch.float64)
secont condition:: tensor(8.3458e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3913e-32, dtype=torch.float64)
secont condition:: tensor(8.3913e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3043e-31, dtype=torch.float64)
secont condition:: tensor(1.3043e-31, dtype=torch.float64)
curr_secont condition:: tensor(9.2938e-32, dtype=torch.float64)
secont condition:: tensor(9.2938e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0162e-31, dtype=torch.float64)
secont condition:: tensor(1.0162e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1078e-31, dtype=torch.float64)
secont condition:: tensor(1.1078e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2863e-31, dtype=torch.float64)
secont condition:: tensor(1.2863e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1946e-31, dtype=torch.float64)
secont condition:: tensor(1.1946e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2086e-31, dtype=torch.float64)
secont condition:: tensor(1.2086e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2904e-31, dtype=torch.float64)
secont condition:: tensor(1.2904e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2070e-31, dtype=torch.float64)
secont condition:: tensor(1.2070e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4349e-31, dtype=torch.float64)
secont condition:: tensor(1.4349e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4928e-31, dtype=torch.float64)
secont condition:: tensor(1.4928e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8562e-31, dtype=torch.float64)
secont condition:: tensor(1.8562e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5995e-31, dtype=torch.float64)
secont condition:: tensor(1.5995e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4561e-31, dtype=torch.float64)
secont condition:: tensor(1.4561e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7395e-31, dtype=torch.float64)
secont condition:: tensor(1.7395e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.7020e-31, dtype=torch.float64)
secont condition:: tensor(1.7020e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8644e-31, dtype=torch.float64)
secont condition:: tensor(1.8644e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0435e-31, dtype=torch.float64)
secont condition:: tensor(2.0435e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.8831e-31, dtype=torch.float64)
secont condition:: tensor(1.8831e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6339e-31, dtype=torch.float64)
secont condition:: tensor(1.6339e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.0506e-31, dtype=torch.float64)
secont condition:: tensor(2.0506e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.1091e-31, dtype=torch.float64)
secont condition:: tensor(2.1091e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.2355e-31, dtype=torch.float64)
secont condition:: tensor(2.2355e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.1186e-31, dtype=torch.float64)
secont condition:: tensor(2.1186e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.3316e-31, dtype=torch.float64)
secont condition:: tensor(2.3316e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.1729e-31, dtype=torch.float64)
secont condition:: tensor(2.1729e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.2004e-31, dtype=torch.float64)
secont condition:: tensor(2.2004e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4704e-31, dtype=torch.float64)
secont condition:: tensor(2.4704e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.3375e-31, dtype=torch.float64)
secont condition:: tensor(2.3375e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.6044e-31, dtype=torch.float64)
secont condition:: tensor(2.6044e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.2799e-31, dtype=torch.float64)
secont condition:: tensor(2.2799e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.6206e-31, dtype=torch.float64)
secont condition:: tensor(2.6206e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.5008e-31, dtype=torch.float64)
secont condition:: tensor(2.5008e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.6427e-31, dtype=torch.float64)
secont condition:: tensor(2.6427e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.3958e-31, dtype=torch.float64)
secont condition:: tensor(2.3958e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.4773e-31, dtype=torch.float64)
secont condition:: tensor(2.4773e-31, dtype=torch.float64)
curr_secont condition:: tensor(2.6763e-31, dtype=torch.float64)
secont condition:: tensor(2.6763e-31, dtype=torch.float64)
curr_secont condition:: tensor(3.0310e-31, dtype=torch.float64)
secont condition:: tensor(3.0310e-31, dtype=torch.float64)
curr_secont condition:: tensor(5.4233e-09, dtype=torch.float64)
secont condition:: tensor(5.4233e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5086e-09, dtype=torch.float64)
secont condition:: tensor(1.5086e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8104e-10, dtype=torch.float64)
secont condition:: tensor(9.8104e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5458e-10, dtype=torch.float64)
secont condition:: tensor(5.5458e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9373e-10, dtype=torch.float64)
secont condition:: tensor(3.9373e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0675e-10, dtype=torch.float64)
secont condition:: tensor(3.0675e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7243e-10, dtype=torch.float64)
secont condition:: tensor(7.7243e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3299e-09, dtype=torch.float64)
secont condition:: tensor(2.3299e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.2147e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1977e-09, dtype=torch.float64)
secont condition:: tensor(1.1977e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2789e-09, dtype=torch.float64)
secont condition:: tensor(1.2789e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7060e-10, dtype=torch.float64)
secont condition:: tensor(7.7060e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5054e-09, dtype=torch.float64)
secont condition:: tensor(1.5054e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.6983e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2572e-08, dtype=torch.float64)
secont condition:: tensor(1.2572e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3564e-09, dtype=torch.float64)
secont condition:: tensor(4.3564e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0458e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6948e-09, dtype=torch.float64)
secont condition:: tensor(2.6948e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0604e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5697e-08, dtype=torch.float64)
secont condition:: tensor(4.5697e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6105e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2630e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2763e-08, dtype=torch.float64)
secont condition:: tensor(6.2763e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1549e-08, dtype=torch.float64)
secont condition:: tensor(1.1549e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9368e-09, dtype=torch.float64)
secont condition:: tensor(4.9368e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8301e-09, dtype=torch.float64)
secont condition:: tensor(2.8301e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.6620e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.1457e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7678e-09, dtype=torch.float64)
secont condition:: tensor(5.7678e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3044e-09, dtype=torch.float64)
secont condition:: tensor(6.3044e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.7098e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0711e-09, dtype=torch.float64)
secont condition:: tensor(3.0711e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.851693868637085
curr_diff: 0 tensor(1.3105e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1609e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.7449e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6128e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9603e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7057e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0663e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3007e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0282e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1653e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.8704e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7398e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.3580e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2891e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218029
Train - Epoch 0, Batch: 10, Loss: 0.134078
Train - Epoch 0, Batch: 20, Loss: 0.121251
Train - Epoch 0, Batch: 30, Loss: 0.141316
Train - Epoch 0, Batch: 40, Loss: 0.159363
Train - Epoch 0, Batch: 50, Loss: 0.140811
Test Avg. Loss: 0.000130, Accuracy: 0.964700
Train - Epoch 1, Batch: 0, Loss: 0.159910
Train - Epoch 1, Batch: 10, Loss: 0.138382
Train - Epoch 1, Batch: 20, Loss: 0.165833
Train - Epoch 1, Batch: 30, Loss: 0.128229
Train - Epoch 1, Batch: 40, Loss: 0.146853
Train - Epoch 1, Batch: 50, Loss: 0.133662
Test Avg. Loss: 0.000130, Accuracy: 0.965600
training_time:: 5.254124879837036
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.188065528869629
time_baseline:: 4.192970275878906
curr_diff: 0 tensor(1.6297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9001e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.8065e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0486e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.7154e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6817e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 1
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1485e-32, dtype=torch.float64)
secont condition:: tensor(1.1485e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.6619e-32, dtype=torch.float64)
secont condition:: tensor(1.6619e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8924e-32, dtype=torch.float64)
secont condition:: tensor(2.8924e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8552e-32, dtype=torch.float64)
secont condition:: tensor(3.8552e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.3071e-32, dtype=torch.float64)
secont condition:: tensor(4.3071e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9021e-32, dtype=torch.float64)
secont condition:: tensor(3.9021e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8368e-32, dtype=torch.float64)
secont condition:: tensor(4.8368e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7857e-32, dtype=torch.float64)
secont condition:: tensor(4.7857e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.3583e-32, dtype=torch.float64)
secont condition:: tensor(7.3583e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.8915e-32, dtype=torch.float64)
secont condition:: tensor(6.8915e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.7815e-32, dtype=torch.float64)
secont condition:: tensor(8.7815e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.4853e-32, dtype=torch.float64)
secont condition:: tensor(6.4853e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.5466e-32, dtype=torch.float64)
secont condition:: tensor(9.5466e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.7500e-32, dtype=torch.float64)
secont condition:: tensor(9.7500e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0666e-31, dtype=torch.float64)
secont condition:: tensor(1.0666e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0573e-31, dtype=torch.float64)
secont condition:: tensor(1.0573e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0197e-31, dtype=torch.float64)
secont condition:: tensor(1.0197e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.1448e-31, dtype=torch.float64)
secont condition:: tensor(1.1448e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0386e-31, dtype=torch.float64)
secont condition:: tensor(1.0386e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2543e-31, dtype=torch.float64)
secont condition:: tensor(1.2543e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4929e-31, dtype=torch.float64)
secont condition:: tensor(1.4929e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4378e-31, dtype=torch.float64)
secont condition:: tensor(1.4378e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.3183e-31, dtype=torch.float64)
secont condition:: tensor(1.3183e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4271e-31, dtype=torch.float64)
secont condition:: tensor(1.4271e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6781e-09, dtype=torch.float64)
secont condition:: tensor(1.6781e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8922e-10, dtype=torch.float64)
secont condition:: tensor(8.8922e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0755e-09, dtype=torch.float64)
secont condition:: tensor(2.0755e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7208e-08, dtype=torch.float64)
secont condition:: tensor(2.7208e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5353e-08, dtype=torch.float64)
secont condition:: tensor(1.5353e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6324e-09, dtype=torch.float64)
secont condition:: tensor(6.6324e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5252e-09, dtype=torch.float64)
secont condition:: tensor(5.5252e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2657e-08, dtype=torch.float64)
secont condition:: tensor(2.2657e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1246e-07, dtype=torch.float64)
secont condition:: tensor(1.1246e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.9597e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4672e-08, dtype=torch.float64)
secont condition:: tensor(2.4672e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6517e-08, dtype=torch.float64)
secont condition:: tensor(7.6517e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3334e-08, dtype=torch.float64)
secont condition:: tensor(1.3334e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4135e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1753e-08, dtype=torch.float64)
secont condition:: tensor(3.1753e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.2228e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0914e-08, dtype=torch.float64)
secont condition:: tensor(1.0914e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1784e-08, dtype=torch.float64)
secont condition:: tensor(1.1784e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8951e-08, dtype=torch.float64)
secont condition:: tensor(1.8951e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3325e-08, dtype=torch.float64)
secont condition:: tensor(9.3325e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3880e-08, dtype=torch.float64)
secont condition:: tensor(7.3880e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8451e-08, dtype=torch.float64)
secont condition:: tensor(2.8451e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0841e-08, dtype=torch.float64)
secont condition:: tensor(1.0841e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2253e-09, dtype=torch.float64)
secont condition:: tensor(4.2253e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1983e-08, dtype=torch.float64)
secont condition:: tensor(2.1983e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8113e-08, dtype=torch.float64)
secont condition:: tensor(2.8113e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2700e-08, dtype=torch.float64)
secont condition:: tensor(3.2700e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0935e-08, dtype=torch.float64)
secont condition:: tensor(6.0935e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5245e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0333e-07, dtype=torch.float64)
secont condition:: tensor(1.0333e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3205e-08, dtype=torch.float64)
secont condition:: tensor(2.3205e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8555e-09, dtype=torch.float64)
secont condition:: tensor(6.8555e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3306e-08, dtype=torch.float64)
secont condition:: tensor(1.3306e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6067e-08, dtype=torch.float64)
secont condition:: tensor(1.6067e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0139e-08, dtype=torch.float64)
secont condition:: tensor(2.0139e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7518e-08, dtype=torch.float64)
secont condition:: tensor(2.7518e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7472e-08, dtype=torch.float64)
secont condition:: tensor(1.7472e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2882e-08, dtype=torch.float64)
secont condition:: tensor(1.2882e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2325e-08, dtype=torch.float64)
secont condition:: tensor(5.2325e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8773e-08, dtype=torch.float64)
secont condition:: tensor(2.8773e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.5940e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.4202e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2168e-08, dtype=torch.float64)
secont condition:: tensor(1.2168e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2878e-08, dtype=torch.float64)
secont condition:: tensor(1.2878e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6189e-08, dtype=torch.float64)
secont condition:: tensor(1.6189e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8175e-09, dtype=torch.float64)
secont condition:: tensor(2.8175e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4129e-09, dtype=torch.float64)
secont condition:: tensor(2.4129e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5474e-08, dtype=torch.float64)
secont condition:: tensor(2.5474e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6449e-08, dtype=torch.float64)
secont condition:: tensor(1.6449e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5717e-09, dtype=torch.float64)
secont condition:: tensor(8.5717e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9509e-08, dtype=torch.float64)
secont condition:: tensor(2.9509e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7954e-08, dtype=torch.float64)
secont condition:: tensor(1.7954e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7362e-09, dtype=torch.float64)
secont condition:: tensor(7.7362e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6204e-09, dtype=torch.float64)
secont condition:: tensor(5.6204e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.8986e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9388e-09, dtype=torch.float64)
secont condition:: tensor(5.9388e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.3867e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.7081265449523926
curr_diff: 0 tensor(1.7200e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6953e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.3615e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.5109e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3539e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.3468e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0192e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.3783e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0935e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8547e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6125e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.2611e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0545e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8110e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964800
deletion rate:: 0.00005
python3 generate_rand_ids 0.00005  MNIST 0
tensor([ 1329, 44229, 22159])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 248.50721073150635
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.2706594467163
time_baseline:: 163.53952431678772
curr_diff: 0 tensor(5.2993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2293e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2652e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7568e-11, dtype=torch.float64)
secont condition:: tensor(3.7568e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7820e-11, dtype=torch.float64)
secont condition:: tensor(4.7820e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2913e-11, dtype=torch.float64)
secont condition:: tensor(3.2913e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4409e-11, dtype=torch.float64)
secont condition:: tensor(8.4409e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-11, dtype=torch.float64)
secont condition:: tensor(2.4398e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8120e-11, dtype=torch.float64)
secont condition:: tensor(4.8120e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2674e-11, dtype=torch.float64)
secont condition:: tensor(5.2674e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8769e-11, dtype=torch.float64)
secont condition:: tensor(2.8769e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3461e-11, dtype=torch.float64)
secont condition:: tensor(6.3461e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-11, dtype=torch.float64)
secont condition:: tensor(4.5752e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8834e-11, dtype=torch.float64)
secont condition:: tensor(6.8834e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8491e-11, dtype=torch.float64)
secont condition:: tensor(3.8491e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8916e-11, dtype=torch.float64)
secont condition:: tensor(4.8916e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1382e-11, dtype=torch.float64)
secont condition:: tensor(6.1382e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6899e-11, dtype=torch.float64)
secont condition:: tensor(2.6899e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9496e-11, dtype=torch.float64)
secont condition:: tensor(3.9496e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2309e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4593e-11, dtype=torch.float64)
secont condition:: tensor(5.4593e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3998e-11, dtype=torch.float64)
secont condition:: tensor(5.3998e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4803e-11, dtype=torch.float64)
secont condition:: tensor(5.4803e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0949e-11, dtype=torch.float64)
secont condition:: tensor(5.0949e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8788e-11, dtype=torch.float64)
secont condition:: tensor(6.8788e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8189e-12, dtype=torch.float64)
secont condition:: tensor(1.8189e-12, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8236e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5900e-11, dtype=torch.float64)
secont condition:: tensor(4.5900e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6710e-11, dtype=torch.float64)
secont condition:: tensor(4.6710e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3186e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-10, dtype=torch.float64)
secont condition:: tensor(1.0780e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5259e-11, dtype=torch.float64)
secont condition:: tensor(9.5259e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-10, dtype=torch.float64)
secont condition:: tensor(1.0686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3096e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-10, dtype=torch.float64)
secont condition:: tensor(1.3234e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4307e-11, dtype=torch.float64)
secont condition:: tensor(5.4307e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2906e-10, dtype=torch.float64)
secont condition:: tensor(1.2906e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1904e-10, dtype=torch.float64)
secont condition:: tensor(1.1904e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0631e-11, dtype=torch.float64)
secont condition:: tensor(9.0631e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0861e-11, dtype=torch.float64)
secont condition:: tensor(7.0861e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0109e-11, dtype=torch.float64)
secont condition:: tensor(9.0109e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0739e-11, dtype=torch.float64)
secont condition:: tensor(3.0739e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4083e-11, dtype=torch.float64)
secont condition:: tensor(9.4083e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9456e-11, dtype=torch.float64)
secont condition:: tensor(5.9456e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7237e-11, dtype=torch.float64)
secont condition:: tensor(4.7237e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4792e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2171e-10, dtype=torch.float64)
secont condition:: tensor(1.2171e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3278e-11, dtype=torch.float64)
secont condition:: tensor(9.3278e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0493e-11, dtype=torch.float64)
secont condition:: tensor(5.0493e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7626e-11, dtype=torch.float64)
secont condition:: tensor(9.7626e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0773e-10, dtype=torch.float64)
secont condition:: tensor(2.0773e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8691e-11, dtype=torch.float64)
secont condition:: tensor(8.8691e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8106e-11, dtype=torch.float64)
secont condition:: tensor(1.8106e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0152e-11, dtype=torch.float64)
secont condition:: tensor(6.0152e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8872e-11, dtype=torch.float64)
secont condition:: tensor(3.8872e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-10, dtype=torch.float64)
secont condition:: tensor(1.2036e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9326e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0531e-11, dtype=torch.float64)
secont condition:: tensor(2.0531e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3847e-10, dtype=torch.float64)
secont condition:: tensor(1.3847e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-10, dtype=torch.float64)
secont condition:: tensor(1.3150e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3936e-10, dtype=torch.float64)
secont condition:: tensor(1.3936e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-10, dtype=torch.float64)
secont condition:: tensor(1.2373e-10, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2974e-10, dtype=torch.float64)
secont condition:: tensor(1.2974e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3661e-10, dtype=torch.float64)
secont condition:: tensor(1.3661e-10, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2253e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4891e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8098e-11, dtype=torch.float64)
secont condition:: tensor(3.8098e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3976e-10, dtype=torch.float64)
secont condition:: tensor(2.3976e-10, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5393e-10, dtype=torch.float64)
secont condition:: tensor(1.5393e-10, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9826e-11, dtype=torch.float64)
secont condition:: tensor(8.9826e-11, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7368e-11, dtype=torch.float64)
secont condition:: tensor(9.7368e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-10, dtype=torch.float64)
secont condition:: tensor(2.2618e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5604e-10, dtype=torch.float64)
secont condition:: tensor(1.5604e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2467e-10, dtype=torch.float64)
secont condition:: tensor(2.2467e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9847e-11, dtype=torch.float64)
secont condition:: tensor(5.9847e-11, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1819e-10, dtype=torch.float64)
secont condition:: tensor(2.1819e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4429e-10, dtype=torch.float64)
secont condition:: tensor(1.4429e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-10, dtype=torch.float64)
secont condition:: tensor(1.6809e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2828e-10, dtype=torch.float64)
secont condition:: tensor(1.2828e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6785e-10, dtype=torch.float64)
secont condition:: tensor(2.6785e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3982e-10, dtype=torch.float64)
secont condition:: tensor(1.3982e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4642e-10, dtype=torch.float64)
secont condition:: tensor(1.4642e-10, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5821e-11, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2032e-10, dtype=torch.float64)
secont condition:: tensor(4.2032e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 124.03910183906555
curr_diff: 0 tensor(9.6751e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0828e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5291e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2025e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.7807e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8839e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0185e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6169e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3603e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4224e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.3684105873108
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.2495927810669
time_baseline:: 163.51670670509338
curr_diff: 0 tensor(5.2993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2293e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2652e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7568e-11, dtype=torch.float64)
secont condition:: tensor(3.7568e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7820e-11, dtype=torch.float64)
secont condition:: tensor(4.7820e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2913e-11, dtype=torch.float64)
secont condition:: tensor(3.2913e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4409e-11, dtype=torch.float64)
secont condition:: tensor(8.4409e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-11, dtype=torch.float64)
secont condition:: tensor(2.4398e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8120e-11, dtype=torch.float64)
secont condition:: tensor(4.8120e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2674e-11, dtype=torch.float64)
secont condition:: tensor(5.2674e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8769e-11, dtype=torch.float64)
secont condition:: tensor(2.8769e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3461e-11, dtype=torch.float64)
secont condition:: tensor(6.3461e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-11, dtype=torch.float64)
secont condition:: tensor(4.5752e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8834e-11, dtype=torch.float64)
secont condition:: tensor(6.8834e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8491e-11, dtype=torch.float64)
secont condition:: tensor(3.8491e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8916e-11, dtype=torch.float64)
secont condition:: tensor(4.8916e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1382e-11, dtype=torch.float64)
secont condition:: tensor(6.1382e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6899e-11, dtype=torch.float64)
secont condition:: tensor(2.6899e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9496e-11, dtype=torch.float64)
secont condition:: tensor(3.9496e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2309e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4593e-11, dtype=torch.float64)
secont condition:: tensor(5.4593e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3998e-11, dtype=torch.float64)
secont condition:: tensor(5.3998e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4803e-11, dtype=torch.float64)
secont condition:: tensor(5.4803e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0949e-11, dtype=torch.float64)
secont condition:: tensor(5.0949e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8788e-11, dtype=torch.float64)
secont condition:: tensor(6.8788e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8189e-12, dtype=torch.float64)
secont condition:: tensor(1.8189e-12, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8236e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5900e-11, dtype=torch.float64)
secont condition:: tensor(4.5900e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6710e-11, dtype=torch.float64)
secont condition:: tensor(4.6710e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3186e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-10, dtype=torch.float64)
secont condition:: tensor(1.0780e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5259e-11, dtype=torch.float64)
secont condition:: tensor(9.5259e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-10, dtype=torch.float64)
secont condition:: tensor(1.0686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3096e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-10, dtype=torch.float64)
secont condition:: tensor(1.3234e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4307e-11, dtype=torch.float64)
secont condition:: tensor(5.4307e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2906e-10, dtype=torch.float64)
secont condition:: tensor(1.2906e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1904e-10, dtype=torch.float64)
secont condition:: tensor(1.1904e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0631e-11, dtype=torch.float64)
secont condition:: tensor(9.0631e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0861e-11, dtype=torch.float64)
secont condition:: tensor(7.0861e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0109e-11, dtype=torch.float64)
secont condition:: tensor(9.0109e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0739e-11, dtype=torch.float64)
secont condition:: tensor(3.0739e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4083e-11, dtype=torch.float64)
secont condition:: tensor(9.4083e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9456e-11, dtype=torch.float64)
secont condition:: tensor(5.9456e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7237e-11, dtype=torch.float64)
secont condition:: tensor(4.7237e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4792e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2171e-10, dtype=torch.float64)
secont condition:: tensor(1.2171e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3278e-11, dtype=torch.float64)
secont condition:: tensor(9.3278e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0493e-11, dtype=torch.float64)
secont condition:: tensor(5.0493e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7626e-11, dtype=torch.float64)
secont condition:: tensor(9.7626e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0773e-10, dtype=torch.float64)
secont condition:: tensor(2.0773e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8691e-11, dtype=torch.float64)
secont condition:: tensor(8.8691e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8106e-11, dtype=torch.float64)
secont condition:: tensor(1.8106e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0152e-11, dtype=torch.float64)
secont condition:: tensor(6.0152e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8872e-11, dtype=torch.float64)
secont condition:: tensor(3.8872e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-10, dtype=torch.float64)
secont condition:: tensor(1.2036e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9326e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0531e-11, dtype=torch.float64)
secont condition:: tensor(2.0531e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3847e-10, dtype=torch.float64)
secont condition:: tensor(1.3847e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-10, dtype=torch.float64)
secont condition:: tensor(1.3150e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3936e-10, dtype=torch.float64)
secont condition:: tensor(1.3936e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-10, dtype=torch.float64)
secont condition:: tensor(1.2373e-10, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2974e-10, dtype=torch.float64)
secont condition:: tensor(1.2974e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3661e-10, dtype=torch.float64)
secont condition:: tensor(1.3661e-10, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2253e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4891e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8098e-11, dtype=torch.float64)
secont condition:: tensor(3.8098e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3976e-10, dtype=torch.float64)
secont condition:: tensor(2.3976e-10, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5393e-10, dtype=torch.float64)
secont condition:: tensor(1.5393e-10, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9826e-11, dtype=torch.float64)
secont condition:: tensor(8.9826e-11, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7368e-11, dtype=torch.float64)
secont condition:: tensor(9.7368e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-10, dtype=torch.float64)
secont condition:: tensor(2.2618e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5604e-10, dtype=torch.float64)
secont condition:: tensor(1.5604e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2467e-10, dtype=torch.float64)
secont condition:: tensor(2.2467e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9847e-11, dtype=torch.float64)
secont condition:: tensor(5.9847e-11, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1819e-10, dtype=torch.float64)
secont condition:: tensor(2.1819e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4429e-10, dtype=torch.float64)
secont condition:: tensor(1.4429e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-10, dtype=torch.float64)
secont condition:: tensor(1.6809e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2828e-10, dtype=torch.float64)
secont condition:: tensor(1.2828e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6785e-10, dtype=torch.float64)
secont condition:: tensor(2.6785e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3982e-10, dtype=torch.float64)
secont condition:: tensor(1.3982e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4642e-10, dtype=torch.float64)
secont condition:: tensor(1.4642e-10, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5821e-11, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2032e-10, dtype=torch.float64)
secont condition:: tensor(4.2032e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 124.24925971031189
curr_diff: 0 tensor(9.6751e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0828e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5291e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2025e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.7807e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8839e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0185e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6169e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3603e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4224e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.21199083328247
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.09006881713867
time_baseline:: 163.35562539100647
curr_diff: 0 tensor(5.2993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2293e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2652e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7568e-11, dtype=torch.float64)
secont condition:: tensor(3.7568e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7820e-11, dtype=torch.float64)
secont condition:: tensor(4.7820e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2913e-11, dtype=torch.float64)
secont condition:: tensor(3.2913e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4409e-11, dtype=torch.float64)
secont condition:: tensor(8.4409e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-11, dtype=torch.float64)
secont condition:: tensor(2.4398e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8120e-11, dtype=torch.float64)
secont condition:: tensor(4.8120e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2674e-11, dtype=torch.float64)
secont condition:: tensor(5.2674e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8769e-11, dtype=torch.float64)
secont condition:: tensor(2.8769e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3461e-11, dtype=torch.float64)
secont condition:: tensor(6.3461e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-11, dtype=torch.float64)
secont condition:: tensor(4.5752e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8834e-11, dtype=torch.float64)
secont condition:: tensor(6.8834e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8491e-11, dtype=torch.float64)
secont condition:: tensor(3.8491e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8916e-11, dtype=torch.float64)
secont condition:: tensor(4.8916e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1382e-11, dtype=torch.float64)
secont condition:: tensor(6.1382e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6899e-11, dtype=torch.float64)
secont condition:: tensor(2.6899e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9496e-11, dtype=torch.float64)
secont condition:: tensor(3.9496e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2309e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4593e-11, dtype=torch.float64)
secont condition:: tensor(5.4593e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3998e-11, dtype=torch.float64)
secont condition:: tensor(5.3998e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4803e-11, dtype=torch.float64)
secont condition:: tensor(5.4803e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0949e-11, dtype=torch.float64)
secont condition:: tensor(5.0949e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8788e-11, dtype=torch.float64)
secont condition:: tensor(6.8788e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8189e-12, dtype=torch.float64)
secont condition:: tensor(1.8189e-12, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8236e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5900e-11, dtype=torch.float64)
secont condition:: tensor(4.5900e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6710e-11, dtype=torch.float64)
secont condition:: tensor(4.6710e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3186e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-10, dtype=torch.float64)
secont condition:: tensor(1.0780e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5259e-11, dtype=torch.float64)
secont condition:: tensor(9.5259e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-10, dtype=torch.float64)
secont condition:: tensor(1.0686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3096e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-10, dtype=torch.float64)
secont condition:: tensor(1.3234e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4307e-11, dtype=torch.float64)
secont condition:: tensor(5.4307e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2906e-10, dtype=torch.float64)
secont condition:: tensor(1.2906e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1904e-10, dtype=torch.float64)
secont condition:: tensor(1.1904e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0631e-11, dtype=torch.float64)
secont condition:: tensor(9.0631e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0861e-11, dtype=torch.float64)
secont condition:: tensor(7.0861e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0109e-11, dtype=torch.float64)
secont condition:: tensor(9.0109e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0739e-11, dtype=torch.float64)
secont condition:: tensor(3.0739e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4083e-11, dtype=torch.float64)
secont condition:: tensor(9.4083e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9456e-11, dtype=torch.float64)
secont condition:: tensor(5.9456e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7237e-11, dtype=torch.float64)
secont condition:: tensor(4.7237e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4792e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2171e-10, dtype=torch.float64)
secont condition:: tensor(1.2171e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3278e-11, dtype=torch.float64)
secont condition:: tensor(9.3278e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0493e-11, dtype=torch.float64)
secont condition:: tensor(5.0493e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7626e-11, dtype=torch.float64)
secont condition:: tensor(9.7626e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0773e-10, dtype=torch.float64)
secont condition:: tensor(2.0773e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8691e-11, dtype=torch.float64)
secont condition:: tensor(8.8691e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8106e-11, dtype=torch.float64)
secont condition:: tensor(1.8106e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0152e-11, dtype=torch.float64)
secont condition:: tensor(6.0152e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8872e-11, dtype=torch.float64)
secont condition:: tensor(3.8872e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-10, dtype=torch.float64)
secont condition:: tensor(1.2036e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9326e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0531e-11, dtype=torch.float64)
secont condition:: tensor(2.0531e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3847e-10, dtype=torch.float64)
secont condition:: tensor(1.3847e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-10, dtype=torch.float64)
secont condition:: tensor(1.3150e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3936e-10, dtype=torch.float64)
secont condition:: tensor(1.3936e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-10, dtype=torch.float64)
secont condition:: tensor(1.2373e-10, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2974e-10, dtype=torch.float64)
secont condition:: tensor(1.2974e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3661e-10, dtype=torch.float64)
secont condition:: tensor(1.3661e-10, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2253e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4891e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8098e-11, dtype=torch.float64)
secont condition:: tensor(3.8098e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3976e-10, dtype=torch.float64)
secont condition:: tensor(2.3976e-10, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5393e-10, dtype=torch.float64)
secont condition:: tensor(1.5393e-10, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9826e-11, dtype=torch.float64)
secont condition:: tensor(8.9826e-11, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7368e-11, dtype=torch.float64)
secont condition:: tensor(9.7368e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-10, dtype=torch.float64)
secont condition:: tensor(2.2618e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5604e-10, dtype=torch.float64)
secont condition:: tensor(1.5604e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2467e-10, dtype=torch.float64)
secont condition:: tensor(2.2467e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9847e-11, dtype=torch.float64)
secont condition:: tensor(5.9847e-11, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1819e-10, dtype=torch.float64)
secont condition:: tensor(2.1819e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4429e-10, dtype=torch.float64)
secont condition:: tensor(1.4429e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-10, dtype=torch.float64)
secont condition:: tensor(1.6809e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2828e-10, dtype=torch.float64)
secont condition:: tensor(1.2828e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6785e-10, dtype=torch.float64)
secont condition:: tensor(2.6785e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3982e-10, dtype=torch.float64)
secont condition:: tensor(1.3982e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4642e-10, dtype=torch.float64)
secont condition:: tensor(1.4642e-10, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5821e-11, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2032e-10, dtype=torch.float64)
secont condition:: tensor(4.2032e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 124.34836959838867
curr_diff: 0 tensor(9.6751e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0828e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5291e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2025e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.7807e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8839e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0185e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6169e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3603e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4224e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.56295371055603
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.09988451004028
time_baseline:: 163.36657333374023
curr_diff: 0 tensor(5.2993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2293e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2652e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7568e-11, dtype=torch.float64)
secont condition:: tensor(3.7568e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7820e-11, dtype=torch.float64)
secont condition:: tensor(4.7820e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2913e-11, dtype=torch.float64)
secont condition:: tensor(3.2913e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4409e-11, dtype=torch.float64)
secont condition:: tensor(8.4409e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-11, dtype=torch.float64)
secont condition:: tensor(2.4398e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8120e-11, dtype=torch.float64)
secont condition:: tensor(4.8120e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2674e-11, dtype=torch.float64)
secont condition:: tensor(5.2674e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8769e-11, dtype=torch.float64)
secont condition:: tensor(2.8769e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3461e-11, dtype=torch.float64)
secont condition:: tensor(6.3461e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-11, dtype=torch.float64)
secont condition:: tensor(4.5752e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8834e-11, dtype=torch.float64)
secont condition:: tensor(6.8834e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8491e-11, dtype=torch.float64)
secont condition:: tensor(3.8491e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8916e-11, dtype=torch.float64)
secont condition:: tensor(4.8916e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1382e-11, dtype=torch.float64)
secont condition:: tensor(6.1382e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6899e-11, dtype=torch.float64)
secont condition:: tensor(2.6899e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9496e-11, dtype=torch.float64)
secont condition:: tensor(3.9496e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2309e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4593e-11, dtype=torch.float64)
secont condition:: tensor(5.4593e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3998e-11, dtype=torch.float64)
secont condition:: tensor(5.3998e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4803e-11, dtype=torch.float64)
secont condition:: tensor(5.4803e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0949e-11, dtype=torch.float64)
secont condition:: tensor(5.0949e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8788e-11, dtype=torch.float64)
secont condition:: tensor(6.8788e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8189e-12, dtype=torch.float64)
secont condition:: tensor(1.8189e-12, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8236e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5900e-11, dtype=torch.float64)
secont condition:: tensor(4.5900e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6710e-11, dtype=torch.float64)
secont condition:: tensor(4.6710e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3186e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-10, dtype=torch.float64)
secont condition:: tensor(1.0780e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5259e-11, dtype=torch.float64)
secont condition:: tensor(9.5259e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-10, dtype=torch.float64)
secont condition:: tensor(1.0686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3096e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-10, dtype=torch.float64)
secont condition:: tensor(1.3234e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4307e-11, dtype=torch.float64)
secont condition:: tensor(5.4307e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2906e-10, dtype=torch.float64)
secont condition:: tensor(1.2906e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1904e-10, dtype=torch.float64)
secont condition:: tensor(1.1904e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0631e-11, dtype=torch.float64)
secont condition:: tensor(9.0631e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0861e-11, dtype=torch.float64)
secont condition:: tensor(7.0861e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0109e-11, dtype=torch.float64)
secont condition:: tensor(9.0109e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0739e-11, dtype=torch.float64)
secont condition:: tensor(3.0739e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4083e-11, dtype=torch.float64)
secont condition:: tensor(9.4083e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9456e-11, dtype=torch.float64)
secont condition:: tensor(5.9456e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7237e-11, dtype=torch.float64)
secont condition:: tensor(4.7237e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4792e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2171e-10, dtype=torch.float64)
secont condition:: tensor(1.2171e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3278e-11, dtype=torch.float64)
secont condition:: tensor(9.3278e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0493e-11, dtype=torch.float64)
secont condition:: tensor(5.0493e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7626e-11, dtype=torch.float64)
secont condition:: tensor(9.7626e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0773e-10, dtype=torch.float64)
secont condition:: tensor(2.0773e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8691e-11, dtype=torch.float64)
secont condition:: tensor(8.8691e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8106e-11, dtype=torch.float64)
secont condition:: tensor(1.8106e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0152e-11, dtype=torch.float64)
secont condition:: tensor(6.0152e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8872e-11, dtype=torch.float64)
secont condition:: tensor(3.8872e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-10, dtype=torch.float64)
secont condition:: tensor(1.2036e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9326e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0531e-11, dtype=torch.float64)
secont condition:: tensor(2.0531e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3847e-10, dtype=torch.float64)
secont condition:: tensor(1.3847e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-10, dtype=torch.float64)
secont condition:: tensor(1.3150e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3936e-10, dtype=torch.float64)
secont condition:: tensor(1.3936e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-10, dtype=torch.float64)
secont condition:: tensor(1.2373e-10, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2974e-10, dtype=torch.float64)
secont condition:: tensor(1.2974e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3661e-10, dtype=torch.float64)
secont condition:: tensor(1.3661e-10, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2253e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4891e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8098e-11, dtype=torch.float64)
secont condition:: tensor(3.8098e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3976e-10, dtype=torch.float64)
secont condition:: tensor(2.3976e-10, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5393e-10, dtype=torch.float64)
secont condition:: tensor(1.5393e-10, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9826e-11, dtype=torch.float64)
secont condition:: tensor(8.9826e-11, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7368e-11, dtype=torch.float64)
secont condition:: tensor(9.7368e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-10, dtype=torch.float64)
secont condition:: tensor(2.2618e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5604e-10, dtype=torch.float64)
secont condition:: tensor(1.5604e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2467e-10, dtype=torch.float64)
secont condition:: tensor(2.2467e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9847e-11, dtype=torch.float64)
secont condition:: tensor(5.9847e-11, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1819e-10, dtype=torch.float64)
secont condition:: tensor(2.1819e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4429e-10, dtype=torch.float64)
secont condition:: tensor(1.4429e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-10, dtype=torch.float64)
secont condition:: tensor(1.6809e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2828e-10, dtype=torch.float64)
secont condition:: tensor(1.2828e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6785e-10, dtype=torch.float64)
secont condition:: tensor(2.6785e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3982e-10, dtype=torch.float64)
secont condition:: tensor(1.3982e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4642e-10, dtype=torch.float64)
secont condition:: tensor(1.4642e-10, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5821e-11, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2032e-10, dtype=torch.float64)
secont condition:: tensor(4.2032e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 124.12843084335327
curr_diff: 0 tensor(9.6751e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0828e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5291e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2025e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.7807e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8839e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0185e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6169e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3603e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4224e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.35202765464783
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.2113869190216
time_baseline:: 163.47802472114563
curr_diff: 0 tensor(5.2993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2723e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2293e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2437e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2652e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 3
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7568e-11, dtype=torch.float64)
secont condition:: tensor(3.7568e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7820e-11, dtype=torch.float64)
secont condition:: tensor(4.7820e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2913e-11, dtype=torch.float64)
secont condition:: tensor(3.2913e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4409e-11, dtype=torch.float64)
secont condition:: tensor(8.4409e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4398e-11, dtype=torch.float64)
secont condition:: tensor(2.4398e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8120e-11, dtype=torch.float64)
secont condition:: tensor(4.8120e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2674e-11, dtype=torch.float64)
secont condition:: tensor(5.2674e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8769e-11, dtype=torch.float64)
secont condition:: tensor(2.8769e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3461e-11, dtype=torch.float64)
secont condition:: tensor(6.3461e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5752e-11, dtype=torch.float64)
secont condition:: tensor(4.5752e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8834e-11, dtype=torch.float64)
secont condition:: tensor(6.8834e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8491e-11, dtype=torch.float64)
secont condition:: tensor(3.8491e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8916e-11, dtype=torch.float64)
secont condition:: tensor(4.8916e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1382e-11, dtype=torch.float64)
secont condition:: tensor(6.1382e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6899e-11, dtype=torch.float64)
secont condition:: tensor(2.6899e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9496e-11, dtype=torch.float64)
secont condition:: tensor(3.9496e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2309e-12, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4593e-11, dtype=torch.float64)
secont condition:: tensor(5.4593e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3998e-11, dtype=torch.float64)
secont condition:: tensor(5.3998e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4803e-11, dtype=torch.float64)
secont condition:: tensor(5.4803e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0949e-11, dtype=torch.float64)
secont condition:: tensor(5.0949e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8788e-11, dtype=torch.float64)
secont condition:: tensor(6.8788e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8189e-12, dtype=torch.float64)
secont condition:: tensor(1.8189e-12, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8236e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5900e-11, dtype=torch.float64)
secont condition:: tensor(4.5900e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6710e-11, dtype=torch.float64)
secont condition:: tensor(4.6710e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.3186e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0780e-10, dtype=torch.float64)
secont condition:: tensor(1.0780e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5259e-11, dtype=torch.float64)
secont condition:: tensor(9.5259e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-10, dtype=torch.float64)
secont condition:: tensor(1.0686e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3096e-11, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3234e-10, dtype=torch.float64)
secont condition:: tensor(1.3234e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4307e-11, dtype=torch.float64)
secont condition:: tensor(5.4307e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2906e-10, dtype=torch.float64)
secont condition:: tensor(1.2906e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1904e-10, dtype=torch.float64)
secont condition:: tensor(1.1904e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0631e-11, dtype=torch.float64)
secont condition:: tensor(9.0631e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0861e-11, dtype=torch.float64)
secont condition:: tensor(7.0861e-11, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0109e-11, dtype=torch.float64)
secont condition:: tensor(9.0109e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0739e-11, dtype=torch.float64)
secont condition:: tensor(3.0739e-11, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4083e-11, dtype=torch.float64)
secont condition:: tensor(9.4083e-11, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9456e-11, dtype=torch.float64)
secont condition:: tensor(5.9456e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7237e-11, dtype=torch.float64)
secont condition:: tensor(4.7237e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4792e-11, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2171e-10, dtype=torch.float64)
secont condition:: tensor(1.2171e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3278e-11, dtype=torch.float64)
secont condition:: tensor(9.3278e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0493e-11, dtype=torch.float64)
secont condition:: tensor(5.0493e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7626e-11, dtype=torch.float64)
secont condition:: tensor(9.7626e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0773e-10, dtype=torch.float64)
secont condition:: tensor(2.0773e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8691e-11, dtype=torch.float64)
secont condition:: tensor(8.8691e-11, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8106e-11, dtype=torch.float64)
secont condition:: tensor(1.8106e-11, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0152e-11, dtype=torch.float64)
secont condition:: tensor(6.0152e-11, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8872e-11, dtype=torch.float64)
secont condition:: tensor(3.8872e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2036e-10, dtype=torch.float64)
secont condition:: tensor(1.2036e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9326e-11, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0531e-11, dtype=torch.float64)
secont condition:: tensor(2.0531e-11, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3847e-10, dtype=torch.float64)
secont condition:: tensor(1.3847e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3150e-10, dtype=torch.float64)
secont condition:: tensor(1.3150e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3936e-10, dtype=torch.float64)
secont condition:: tensor(1.3936e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2373e-10, dtype=torch.float64)
secont condition:: tensor(1.2373e-10, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2974e-10, dtype=torch.float64)
secont condition:: tensor(1.2974e-10, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3661e-10, dtype=torch.float64)
secont condition:: tensor(1.3661e-10, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2253e-11, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4891e-11, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8098e-11, dtype=torch.float64)
secont condition:: tensor(3.8098e-11, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3976e-10, dtype=torch.float64)
secont condition:: tensor(2.3976e-10, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5393e-10, dtype=torch.float64)
secont condition:: tensor(1.5393e-10, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9826e-11, dtype=torch.float64)
secont condition:: tensor(8.9826e-11, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
epoch  80
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7368e-11, dtype=torch.float64)
secont condition:: tensor(9.7368e-11, dtype=torch.float64)
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2618e-10, dtype=torch.float64)
secont condition:: tensor(2.2618e-10, dtype=torch.float64)
epoch  85
	calling Sampler:__iter__
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5604e-10, dtype=torch.float64)
secont condition:: tensor(1.5604e-10, dtype=torch.float64)
epoch  88
	calling Sampler:__iter__
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2467e-10, dtype=torch.float64)
secont condition:: tensor(2.2467e-10, dtype=torch.float64)
epoch  91
	calling Sampler:__iter__
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9847e-11, dtype=torch.float64)
secont condition:: tensor(5.9847e-11, dtype=torch.float64)
epoch  94
	calling Sampler:__iter__
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1819e-10, dtype=torch.float64)
secont condition:: tensor(2.1819e-10, dtype=torch.float64)
epoch  97
	calling Sampler:__iter__
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4429e-10, dtype=torch.float64)
secont condition:: tensor(1.4429e-10, dtype=torch.float64)
epoch  100
	calling Sampler:__iter__
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6809e-10, dtype=torch.float64)
secont condition:: tensor(1.6809e-10, dtype=torch.float64)
epoch  103
	calling Sampler:__iter__
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2828e-10, dtype=torch.float64)
secont condition:: tensor(1.2828e-10, dtype=torch.float64)
epoch  106
	calling Sampler:__iter__
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6785e-10, dtype=torch.float64)
secont condition:: tensor(2.6785e-10, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3982e-10, dtype=torch.float64)
secont condition:: tensor(1.3982e-10, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4642e-10, dtype=torch.float64)
secont condition:: tensor(1.4642e-10, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5821e-11, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2032e-10, dtype=torch.float64)
secont condition:: tensor(4.2032e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 124.01444888114929
curr_diff: 0 tensor(9.6751e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0828e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8324e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5291e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6687e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2025e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.7807e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8839e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0185e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6169e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4659e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5672e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3603e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4224e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214284
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.174641
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 2, Batch: 0, Loss: 0.162196
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.156610
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154052
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152408
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.153386
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.146285
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.151352
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.148576
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.150049
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.147391
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.142814
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.147883
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.144499
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.144035
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 16, Batch: 0, Loss: 0.144623
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 17, Batch: 0, Loss: 0.143876
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.143054
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 19, Batch: 0, Loss: 0.147472
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 20, Batch: 0, Loss: 0.141591
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.146479
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.144755
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 23, Batch: 0, Loss: 0.144706
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146005
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.140981
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.141011
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144590
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.142397
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.142555
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.142731
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 31, Batch: 0, Loss: 0.139839
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.146641
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.143467
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.142146
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 35, Batch: 0, Loss: 0.143654
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.143952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 37, Batch: 0, Loss: 0.144004
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.141409
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.144121
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 40, Batch: 0, Loss: 0.143604
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.143277
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 42, Batch: 0, Loss: 0.144103
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 43, Batch: 0, Loss: 0.138915
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.144656
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 45, Batch: 0, Loss: 0.141198
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.142918
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.143612
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 48, Batch: 0, Loss: 0.143404
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 49, Batch: 0, Loss: 0.143142
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.144272
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.145172
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.141411
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.139832
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 54, Batch: 0, Loss: 0.139926
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141628
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 56, Batch: 0, Loss: 0.143281
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 57, Batch: 0, Loss: 0.141869
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 58, Batch: 0, Loss: 0.141673
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 59, Batch: 0, Loss: 0.139840
Test Avg. Loss: 0.000013, Accuracy: 0.965000
training_time:: 123.69141817092896
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.29049134254456
time_baseline:: 82.42478132247925
curr_diff: 0 tensor(5.7487e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0861e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6082e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3180e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.3194e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.7522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1724e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.2064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.2417e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.0668e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2069e-11, dtype=torch.float64)
secont condition:: tensor(2.2069e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8353e-11, dtype=torch.float64)
secont condition:: tensor(2.8353e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5605e-11, dtype=torch.float64)
secont condition:: tensor(3.5605e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4540e-10, dtype=torch.float64)
secont condition:: tensor(1.4540e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0458e-11, dtype=torch.float64)
secont condition:: tensor(1.0458e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8567e-11, dtype=torch.float64)
secont condition:: tensor(3.8567e-11, dtype=torch.float64)
curr_secont condition:: tensor(-9.8483e-12, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3570e-11, dtype=torch.float64)
secont condition:: tensor(9.3570e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4859e-11, dtype=torch.float64)
secont condition:: tensor(2.4859e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7415e-11, dtype=torch.float64)
secont condition:: tensor(2.7415e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7295e-11, dtype=torch.float64)
secont condition:: tensor(2.7295e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4191e-11, dtype=torch.float64)
secont condition:: tensor(3.4191e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2415e-11, dtype=torch.float64)
secont condition:: tensor(1.2415e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9611e-11, dtype=torch.float64)
secont condition:: tensor(4.9611e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5473e-11, dtype=torch.float64)
secont condition:: tensor(2.5473e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7112e-11, dtype=torch.float64)
secont condition:: tensor(3.7112e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.5601e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3853e-11, dtype=torch.float64)
secont condition:: tensor(2.3853e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9868e-11, dtype=torch.float64)
secont condition:: tensor(6.9868e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5840e-11, dtype=torch.float64)
secont condition:: tensor(6.5840e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1233e-11, dtype=torch.float64)
secont condition:: tensor(9.1233e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4087e-11, dtype=torch.float64)
secont condition:: tensor(2.4087e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.8364e-11, dtype=torch.float64)
secont condition:: tensor(7.8364e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6011e-11, dtype=torch.float64)
secont condition:: tensor(6.6011e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7678e-10, dtype=torch.float64)
secont condition:: tensor(2.7678e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2170e-10, dtype=torch.float64)
secont condition:: tensor(1.2170e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5809e-11, dtype=torch.float64)
secont condition:: tensor(2.5809e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7016e-11, dtype=torch.float64)
secont condition:: tensor(2.7016e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.1304e-11, dtype=torch.float64)
secont condition:: tensor(7.1304e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0174e-11, dtype=torch.float64)
secont condition:: tensor(8.0174e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3443e-11, dtype=torch.float64)
secont condition:: tensor(6.3443e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1652e-11, dtype=torch.float64)
secont condition:: tensor(2.1652e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6593e-11, dtype=torch.float64)
secont condition:: tensor(9.6593e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5048e-11, dtype=torch.float64)
secont condition:: tensor(8.5048e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8359e-11, dtype=torch.float64)
secont condition:: tensor(2.8359e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3338e-10, dtype=torch.float64)
secont condition:: tensor(2.3338e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8291e-11, dtype=torch.float64)
secont condition:: tensor(3.8291e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5867e-11, dtype=torch.float64)
secont condition:: tensor(9.5867e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7627e-11, dtype=torch.float64)
secont condition:: tensor(7.7627e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9523e-11, dtype=torch.float64)
secont condition:: tensor(5.9523e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.1203e-11, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5652e-10, dtype=torch.float64)
secont condition:: tensor(1.5652e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2849e-10, dtype=torch.float64)
secont condition:: tensor(1.2849e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4216e-10, dtype=torch.float64)
secont condition:: tensor(1.4216e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1885e-10, dtype=torch.float64)
secont condition:: tensor(2.1885e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0172e-11, dtype=torch.float64)
secont condition:: tensor(8.0172e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2030e-10, dtype=torch.float64)
secont condition:: tensor(1.2030e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1067e-11, dtype=torch.float64)
secont condition:: tensor(9.1067e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.2867e-11, dtype=torch.float64)
secont condition:: tensor(9.2867e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3010e-11, dtype=torch.float64)
secont condition:: tensor(7.3010e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0902e-10, dtype=torch.float64)
secont condition:: tensor(1.0902e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0644e-11, dtype=torch.float64)
secont condition:: tensor(9.0644e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.5649e-11, dtype=torch.float64)
secont condition:: tensor(8.5649e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4930e-11, dtype=torch.float64)
secont condition:: tensor(7.4930e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.2603e-11, dtype=torch.float64)
secont condition:: tensor(8.2603e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0751e-10, dtype=torch.float64)
secont condition:: tensor(2.0751e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0429e-10, dtype=torch.float64)
secont condition:: tensor(2.0429e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8181e-10, dtype=torch.float64)
secont condition:: tensor(1.8181e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1567e-10, dtype=torch.float64)
secont condition:: tensor(1.1567e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5996e-10, dtype=torch.float64)
secont condition:: tensor(1.5996e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8796e-10, dtype=torch.float64)
secont condition:: tensor(2.8796e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7363e-10, dtype=torch.float64)
secont condition:: tensor(1.7363e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7129e-10, dtype=torch.float64)
secont condition:: tensor(1.7129e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7197e-11, dtype=torch.float64)
secont condition:: tensor(7.7197e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.2734e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5420e-10, dtype=torch.float64)
secont condition:: tensor(1.5420e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6020e-10, dtype=torch.float64)
secont condition:: tensor(1.6020e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0582e-11, dtype=torch.float64)
secont condition:: tensor(8.0582e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2978e-10, dtype=torch.float64)
secont condition:: tensor(1.2978e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5576e-11, dtype=torch.float64)
secont condition:: tensor(8.5576e-11, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1617e-10, dtype=torch.float64)
secont condition:: tensor(3.1617e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8706e-10, dtype=torch.float64)
secont condition:: tensor(2.8706e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1553e-11, dtype=torch.float64)
secont condition:: tensor(4.1553e-11, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1063e-10, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2305e-10, dtype=torch.float64)
secont condition:: tensor(3.2305e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0103e-10, dtype=torch.float64)
secont condition:: tensor(2.0103e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4532e-11, dtype=torch.float64)
secont condition:: tensor(8.4532e-11, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4659e-10, dtype=torch.float64)
secont condition:: tensor(1.4659e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0256e-10, dtype=torch.float64)
secont condition:: tensor(1.0256e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1503e-10, dtype=torch.float64)
secont condition:: tensor(2.1503e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8465e-10, dtype=torch.float64)
secont condition:: tensor(1.8465e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.44692420959473
curr_diff: 0 tensor(6.4846e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8714e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0950e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.0576e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.9566e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7405e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6820e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2913e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7572e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2996e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.3886e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.9915e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0901e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.3450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4311e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6666e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6298e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2703e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8948e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.9756e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5134e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.4495e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965500
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.210570
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.173160
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.157530
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.159469
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 4, Batch: 0, Loss: 0.156777
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152739
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.151319
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.148780
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.151374
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.150058
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 10, Batch: 0, Loss: 0.146802
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148699
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145530
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.145551
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.149273
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.144585
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.146863
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.146825
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.148350
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 19, Batch: 0, Loss: 0.143996
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.146333
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 21, Batch: 0, Loss: 0.146201
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.143670
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.145598
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.146398
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.142205
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.140554
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144162
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.142425
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.142124
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 30, Batch: 0, Loss: 0.141181
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.142712
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.140402
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.147858
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 34, Batch: 0, Loss: 0.139184
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.142363
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 36, Batch: 0, Loss: 0.142271
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 37, Batch: 0, Loss: 0.146028
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.142550
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 39, Batch: 0, Loss: 0.140582
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.141216
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 41, Batch: 0, Loss: 0.142842
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 42, Batch: 0, Loss: 0.140280
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.141342
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 44, Batch: 0, Loss: 0.139698
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.142356
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.140532
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 47, Batch: 0, Loss: 0.138121
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 48, Batch: 0, Loss: 0.143872
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.140088
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.140714
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.140844
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.141195
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.144538
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.142538
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.142810
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 56, Batch: 0, Loss: 0.141730
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 57, Batch: 0, Loss: 0.143297
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 58, Batch: 0, Loss: 0.144466
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.143925
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.30844569206238
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.30096697807312
time_baseline:: 82.43398690223694
curr_diff: 0 tensor(4.9215e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1045e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.3291e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7015e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.1111e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8782e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2626e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2914e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.6653e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3501e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7719e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8636e-10, dtype=torch.float64)
secont condition:: tensor(1.8636e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7671e-11, dtype=torch.float64)
secont condition:: tensor(7.7671e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1236e-11, dtype=torch.float64)
secont condition:: tensor(3.1236e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2201e-11, dtype=torch.float64)
secont condition:: tensor(5.2201e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8433e-11, dtype=torch.float64)
secont condition:: tensor(3.8433e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3707e-11, dtype=torch.float64)
secont condition:: tensor(4.3707e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0038e-10, dtype=torch.float64)
secont condition:: tensor(1.0038e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5258e-11, dtype=torch.float64)
secont condition:: tensor(6.5258e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7595e-11, dtype=torch.float64)
secont condition:: tensor(2.7595e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9409e-11, dtype=torch.float64)
secont condition:: tensor(4.9409e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.2459e-12, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9325e-11, dtype=torch.float64)
secont condition:: tensor(3.9325e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8132e-11, dtype=torch.float64)
secont condition:: tensor(2.8132e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6070e-10, dtype=torch.float64)
secont condition:: tensor(1.6070e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4873e-11, dtype=torch.float64)
secont condition:: tensor(7.4873e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8547e-10, dtype=torch.float64)
secont condition:: tensor(1.8547e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9271e-11, dtype=torch.float64)
secont condition:: tensor(4.9271e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3975e-10, dtype=torch.float64)
secont condition:: tensor(2.3975e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8182e-11, dtype=torch.float64)
secont condition:: tensor(8.8182e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2145e-13, dtype=torch.float64)
curr_secont condition:: tensor(7.4661e-11, dtype=torch.float64)
secont condition:: tensor(7.4661e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.6190e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1317e-10, dtype=torch.float64)
secont condition:: tensor(1.1317e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.1894e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9824e-10, dtype=torch.float64)
secont condition:: tensor(3.9824e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.5119e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3268e-10, dtype=torch.float64)
secont condition:: tensor(2.3268e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.0863e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3024e-10, dtype=torch.float64)
secont condition:: tensor(3.3024e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1690e-10, dtype=torch.float64)
secont condition:: tensor(5.1690e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0275e-11, dtype=torch.float64)
secont condition:: tensor(4.0275e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2004e-10, dtype=torch.float64)
secont condition:: tensor(4.2004e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5999e-10, dtype=torch.float64)
secont condition:: tensor(1.5999e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5736e-10, dtype=torch.float64)
secont condition:: tensor(1.5736e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0493e-11, dtype=torch.float64)
secont condition:: tensor(2.0493e-11, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.8358e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7543e-11, dtype=torch.float64)
secont condition:: tensor(2.7543e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6771e-11, dtype=torch.float64)
secont condition:: tensor(3.6771e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.5292e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8497e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9782e-10, dtype=torch.float64)
secont condition:: tensor(2.9782e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7887e-11, dtype=torch.float64)
secont condition:: tensor(2.7887e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.3467e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3483e-10, dtype=torch.float64)
secont condition:: tensor(2.3483e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.9502e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8736e-10, dtype=torch.float64)
secont condition:: tensor(1.8736e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.1609e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5882e-10, dtype=torch.float64)
secont condition:: tensor(1.5882e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7700e-10, dtype=torch.float64)
secont condition:: tensor(2.7700e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5221e-11, dtype=torch.float64)
secont condition:: tensor(7.5221e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4604e-10, dtype=torch.float64)
secont condition:: tensor(4.4604e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5786e-11, dtype=torch.float64)
secont condition:: tensor(8.5786e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6433e-10, dtype=torch.float64)
secont condition:: tensor(1.6433e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1960e-10, dtype=torch.float64)
secont condition:: tensor(2.1960e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.3035e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7946e-10, dtype=torch.float64)
secont condition:: tensor(1.7946e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9857e-10, dtype=torch.float64)
secont condition:: tensor(1.9857e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6743e-10, dtype=torch.float64)
secont condition:: tensor(4.6743e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8818e-11, dtype=torch.float64)
secont condition:: tensor(9.8818e-11, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6984e-10, dtype=torch.float64)
secont condition:: tensor(1.6984e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5119e-10, dtype=torch.float64)
secont condition:: tensor(1.5119e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7721e-11, dtype=torch.float64)
secont condition:: tensor(1.7721e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1877e-10, dtype=torch.float64)
secont condition:: tensor(3.1877e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.3485e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7685e-10, dtype=torch.float64)
secont condition:: tensor(8.7685e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2617e-10, dtype=torch.float64)
secont condition:: tensor(1.2617e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8456e-10, dtype=torch.float64)
secont condition:: tensor(1.8456e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0443e-10, dtype=torch.float64)
secont condition:: tensor(2.0443e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8237e-12, dtype=torch.float64)
secont condition:: tensor(7.8237e-12, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0707e-11, dtype=torch.float64)
secont condition:: tensor(8.0707e-11, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7563e-10, dtype=torch.float64)
secont condition:: tensor(1.7563e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0292e-09, dtype=torch.float64)
secont condition:: tensor(1.0292e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2490e-10, dtype=torch.float64)
secont condition:: tensor(1.2490e-10, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7559e-11, dtype=torch.float64)
secont condition:: tensor(2.7559e-11, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8962e-10, dtype=torch.float64)
secont condition:: tensor(3.8962e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8487e-10, dtype=torch.float64)
secont condition:: tensor(2.8487e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2803e-10, dtype=torch.float64)
secont condition:: tensor(1.2803e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2512e-10, dtype=torch.float64)
secont condition:: tensor(3.2512e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8200e-10, dtype=torch.float64)
secont condition:: tensor(3.8200e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6951e-10, dtype=torch.float64)
secont condition:: tensor(2.6951e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8903e-10, dtype=torch.float64)
secont condition:: tensor(1.8903e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 64.90784120559692
curr_diff: 0 tensor(8.4901e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1136e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.4257e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5830e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.7540e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6280e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.2783e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.6039e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.9639e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2697e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.0181e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.5495e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0092e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.5839e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.6985e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.0144e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.3071e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3357e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7712e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0679e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2265e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.8521e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.217227
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.172012
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 2, Batch: 0, Loss: 0.160881
Test Avg. Loss: 0.000014, Accuracy: 0.962800
Train - Epoch 3, Batch: 0, Loss: 0.156022
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154751
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.155455
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.151302
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.148538
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 8, Batch: 0, Loss: 0.151970
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 9, Batch: 0, Loss: 0.147649
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.147946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.145963
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145198
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.146313
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.146743
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.145940
Test Avg. Loss: 0.000013, Accuracy: 0.963200
Train - Epoch 16, Batch: 0, Loss: 0.143416
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.146397
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.143939
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.143844
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.148009
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.144465
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 22, Batch: 0, Loss: 0.142495
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.141341
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.142247
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.144687
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.139581
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 27, Batch: 0, Loss: 0.141336
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.142773
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 29, Batch: 0, Loss: 0.143936
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 30, Batch: 0, Loss: 0.146003
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 31, Batch: 0, Loss: 0.143338
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.141086
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.141984
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.142674
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.147048
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.144678
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.142078
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 38, Batch: 0, Loss: 0.142658
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 39, Batch: 0, Loss: 0.140950
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 40, Batch: 0, Loss: 0.142401
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.142021
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 42, Batch: 0, Loss: 0.144265
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.143450
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.140763
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 45, Batch: 0, Loss: 0.143362
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 46, Batch: 0, Loss: 0.140639
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.143368
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.144611
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.141875
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.143576
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.147153
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.143661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.142012
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 54, Batch: 0, Loss: 0.140206
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141692
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.141242
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.140257
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 58, Batch: 0, Loss: 0.144013
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.141417
Test Avg. Loss: 0.000013, Accuracy: 0.965000
training_time:: 123.49067044258118
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.301504611969
time_baseline:: 82.48897695541382
curr_diff: 0 tensor(5.1747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3908e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.0338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1179e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.3572e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2306e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.6831e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.7644e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3831e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4537e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4677e-10, dtype=torch.float64)
secont condition:: tensor(1.4677e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1305e-10, dtype=torch.float64)
secont condition:: tensor(1.1305e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0665e-11, dtype=torch.float64)
secont condition:: tensor(5.0665e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6127e-11, dtype=torch.float64)
secont condition:: tensor(6.6127e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.1300e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.8935e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.7747e-11, dtype=torch.float64)
secont condition:: tensor(9.7747e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0705e-10, dtype=torch.float64)
secont condition:: tensor(2.0705e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4664e-12, dtype=torch.float64)
secont condition:: tensor(3.4664e-12, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.6954e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1953e-11, dtype=torch.float64)
secont condition:: tensor(8.1953e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0333e-11, dtype=torch.float64)
secont condition:: tensor(6.0333e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5820e-10, dtype=torch.float64)
secont condition:: tensor(1.5820e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0530e-11, dtype=torch.float64)
secont condition:: tensor(3.0530e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.2377e-11, dtype=torch.float64)
secont condition:: tensor(6.2377e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3100e-10, dtype=torch.float64)
secont condition:: tensor(1.3100e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9971e-10, dtype=torch.float64)
secont condition:: tensor(1.9971e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.8797e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7955e-10, dtype=torch.float64)
secont condition:: tensor(1.7955e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9699e-10, dtype=torch.float64)
secont condition:: tensor(1.9699e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0859e-10, dtype=torch.float64)
secont condition:: tensor(1.0859e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.2519e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4021e-10, dtype=torch.float64)
secont condition:: tensor(2.4021e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5834e-10, dtype=torch.float64)
secont condition:: tensor(1.5834e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0469e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1264e-11, dtype=torch.float64)
secont condition:: tensor(7.1264e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3574e-10, dtype=torch.float64)
secont condition:: tensor(2.3574e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3927e-10, dtype=torch.float64)
secont condition:: tensor(2.3927e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9672e-10, dtype=torch.float64)
secont condition:: tensor(1.9672e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.0967e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5539e-10, dtype=torch.float64)
secont condition:: tensor(2.5539e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0438e-11, dtype=torch.float64)
secont condition:: tensor(9.0438e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.3541e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.2338e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1173e-10, dtype=torch.float64)
secont condition:: tensor(4.1173e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7333e-10, dtype=torch.float64)
secont condition:: tensor(6.7333e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.8856e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1678e-10, dtype=torch.float64)
secont condition:: tensor(2.1678e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3320e-10, dtype=torch.float64)
secont condition:: tensor(1.3320e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5057e-09, dtype=torch.float64)
secont condition:: tensor(3.5057e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2955e-10, dtype=torch.float64)
secont condition:: tensor(1.2955e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0568e-11, dtype=torch.float64)
secont condition:: tensor(8.0568e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2805e-10, dtype=torch.float64)
secont condition:: tensor(3.2805e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6052e-10, dtype=torch.float64)
secont condition:: tensor(2.6052e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.2555e-11, dtype=torch.float64)
secont condition:: tensor(9.2555e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1381e-10, dtype=torch.float64)
secont condition:: tensor(4.1381e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8729e-10, dtype=torch.float64)
secont condition:: tensor(1.8729e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0696e-11, dtype=torch.float64)
secont condition:: tensor(4.0696e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.2248e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4810e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7569e-10, dtype=torch.float64)
secont condition:: tensor(1.7569e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5432e-11, dtype=torch.float64)
secont condition:: tensor(5.5432e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.5493e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8598e-10, dtype=torch.float64)
secont condition:: tensor(1.8598e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4322e-10, dtype=torch.float64)
secont condition:: tensor(2.4322e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5038e-11, dtype=torch.float64)
secont condition:: tensor(1.5038e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.3700e-10, dtype=torch.float64)
secont condition:: tensor(7.3700e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1403e-11, dtype=torch.float64)
secont condition:: tensor(4.1403e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2920e-10, dtype=torch.float64)
secont condition:: tensor(2.2920e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6273e-11, dtype=torch.float64)
secont condition:: tensor(7.6273e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9332e-10, dtype=torch.float64)
secont condition:: tensor(2.9332e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2496e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7407e-10, dtype=torch.float64)
secont condition:: tensor(1.7407e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9225e-11, dtype=torch.float64)
secont condition:: tensor(6.9225e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3500e-11, dtype=torch.float64)
secont condition:: tensor(7.3500e-11, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6645e-10, dtype=torch.float64)
secont condition:: tensor(3.6645e-10, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2981e-10, dtype=torch.float64)
secont condition:: tensor(4.2981e-10, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.5441e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8386e-10, dtype=torch.float64)
secont condition:: tensor(2.8386e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.1238e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.9469e-10, dtype=torch.float64)
secont condition:: tensor(2.9469e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2076e-10, dtype=torch.float64)
secont condition:: tensor(1.2076e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0049e-10, dtype=torch.float64)
secont condition:: tensor(3.0049e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.5409e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1473e-10, dtype=torch.float64)
secont condition:: tensor(1.1473e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3318e-10, dtype=torch.float64)
secont condition:: tensor(1.3318e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2638e-10, dtype=torch.float64)
secont condition:: tensor(3.2638e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3960e-10, dtype=torch.float64)
secont condition:: tensor(1.3960e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5259e-10, dtype=torch.float64)
secont condition:: tensor(4.5259e-10, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2499e-10, dtype=torch.float64)
secont condition:: tensor(4.2499e-10, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2193e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1760e-10, dtype=torch.float64)
secont condition:: tensor(3.1760e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3818e-10, dtype=torch.float64)
secont condition:: tensor(4.3818e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 67.75630497932434
curr_diff: 0 tensor(1.2815e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6273e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6660e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9869e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.4816e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0708e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2022e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.8852e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7846e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3411e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.0809e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.9689e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2564e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8915e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9181e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.4528e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.4961e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4928e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.2638e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.0181e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.3811e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215258
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.172238
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.158980
Test Avg. Loss: 0.000014, Accuracy: 0.962800
Train - Epoch 3, Batch: 0, Loss: 0.159991
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.157235
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.151782
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.148736
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.154100
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.150071
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.150525
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.149130
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148584
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.147188
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.144800
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.148514
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.145870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 16, Batch: 0, Loss: 0.146080
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 17, Batch: 0, Loss: 0.144530
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.145900
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.143894
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.144337
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.141351
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.148104
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.144221
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.144988
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.142477
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.144653
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.143674
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.142951
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 29, Batch: 0, Loss: 0.140425
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.141828
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 31, Batch: 0, Loss: 0.141671
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.143837
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 33, Batch: 0, Loss: 0.142428
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 34, Batch: 0, Loss: 0.146007
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 35, Batch: 0, Loss: 0.142591
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.143483
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 37, Batch: 0, Loss: 0.144027
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.142653
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.141154
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.144416
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.139462
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.141189
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.143056
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.146908
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.141522
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.139350
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.141124
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.142832
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 49, Batch: 0, Loss: 0.144224
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 50, Batch: 0, Loss: 0.143104
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.145227
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 52, Batch: 0, Loss: 0.141080
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 53, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.141826
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.140147
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.143455
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 57, Batch: 0, Loss: 0.138211
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 58, Batch: 0, Loss: 0.139983
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.142383
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.73641037940979
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.30442881584167
time_baseline:: 82.44234848022461
curr_diff: 0 tensor(5.7998e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9673e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2392e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.7463e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.8861e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2429e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.7815e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0080e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9392e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.4909e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1984e-11, dtype=torch.float64)
secont condition:: tensor(2.1984e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3936e-11, dtype=torch.float64)
secont condition:: tensor(2.3936e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4215e-11, dtype=torch.float64)
secont condition:: tensor(2.4215e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5177e-11, dtype=torch.float64)
secont condition:: tensor(2.5177e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5126e-11, dtype=torch.float64)
secont condition:: tensor(1.5126e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-11, dtype=torch.float64)
secont condition:: tensor(2.8434e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4220e-12, dtype=torch.float64)
secont condition:: tensor(7.4220e-12, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6008e-11, dtype=torch.float64)
secont condition:: tensor(3.6008e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6485e-11, dtype=torch.float64)
secont condition:: tensor(3.6485e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3597e-11, dtype=torch.float64)
secont condition:: tensor(3.3597e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.1168e-11, dtype=torch.float64)
secont condition:: tensor(7.1168e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1371e-10, dtype=torch.float64)
secont condition:: tensor(1.1371e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0145e-11, dtype=torch.float64)
secont condition:: tensor(3.0145e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8831e-11, dtype=torch.float64)
secont condition:: tensor(3.8831e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6731e-12, dtype=torch.float64)
secont condition:: tensor(7.6731e-12, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.8999e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.3438e-10, dtype=torch.float64)
secont condition:: tensor(1.3438e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9767e-11, dtype=torch.float64)
secont condition:: tensor(5.9767e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1360e-11, dtype=torch.float64)
secont condition:: tensor(3.1360e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4407e-12, dtype=torch.float64)
secont condition:: tensor(8.4407e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.2559e-11, dtype=torch.float64)
secont condition:: tensor(5.2559e-11, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0273e-10, dtype=torch.float64)
secont condition:: tensor(1.0273e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7386e-11, dtype=torch.float64)
secont condition:: tensor(3.7386e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7201e-11, dtype=torch.float64)
secont condition:: tensor(2.7201e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0938e-11, dtype=torch.float64)
secont condition:: tensor(1.0938e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8692e-11, dtype=torch.float64)
secont condition:: tensor(4.8692e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.6531e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3327e-10, dtype=torch.float64)
secont condition:: tensor(1.3327e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7305e-11, dtype=torch.float64)
secont condition:: tensor(2.7305e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4294e-11, dtype=torch.float64)
secont condition:: tensor(6.4294e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3198e-10, dtype=torch.float64)
secont condition:: tensor(1.3198e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8373e-11, dtype=torch.float64)
secont condition:: tensor(6.8373e-11, dtype=torch.float64)
curr_secont condition:: tensor(-5.8876e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0282e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9925e-10, dtype=torch.float64)
secont condition:: tensor(1.9925e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3378e-11, dtype=torch.float64)
secont condition:: tensor(4.3378e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1100e-10, dtype=torch.float64)
secont condition:: tensor(2.1100e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5820e-11, dtype=torch.float64)
secont condition:: tensor(1.5820e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5180e-11, dtype=torch.float64)
secont condition:: tensor(6.5180e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8267e-11, dtype=torch.float64)
secont condition:: tensor(5.8267e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.6017e-10, dtype=torch.float64)
secont condition:: tensor(3.6017e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8025e-10, dtype=torch.float64)
secont condition:: tensor(1.8025e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3668e-10, dtype=torch.float64)
secont condition:: tensor(1.3668e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0004e-11, dtype=torch.float64)
secont condition:: tensor(7.0004e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0958e-11, dtype=torch.float64)
secont condition:: tensor(4.0958e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8021e-11, dtype=torch.float64)
secont condition:: tensor(2.8021e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5175e-10, dtype=torch.float64)
secont condition:: tensor(3.5175e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0318e-10, dtype=torch.float64)
secont condition:: tensor(2.0318e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5114e-11, dtype=torch.float64)
secont condition:: tensor(8.5114e-11, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4736e-11, dtype=torch.float64)
secont condition:: tensor(7.4736e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9695e-11, dtype=torch.float64)
secont condition:: tensor(8.9695e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8488e-11, dtype=torch.float64)
secont condition:: tensor(8.8488e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1389e-10, dtype=torch.float64)
secont condition:: tensor(1.1389e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5341e-10, dtype=torch.float64)
secont condition:: tensor(1.5341e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5701e-10, dtype=torch.float64)
secont condition:: tensor(4.5701e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1651e-10, dtype=torch.float64)
secont condition:: tensor(1.1651e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.9068e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5827e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3225e-10, dtype=torch.float64)
secont condition:: tensor(3.3225e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4806e-10, dtype=torch.float64)
secont condition:: tensor(2.4806e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3539e-10, dtype=torch.float64)
secont condition:: tensor(9.3539e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2328e-10, dtype=torch.float64)
secont condition:: tensor(2.2328e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3860e-10, dtype=torch.float64)
secont condition:: tensor(2.3860e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1334e-10, dtype=torch.float64)
secont condition:: tensor(3.1334e-10, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2379e-10, dtype=torch.float64)
secont condition:: tensor(1.2379e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6090e-10, dtype=torch.float64)
secont condition:: tensor(1.6090e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6389e-11, dtype=torch.float64)
secont condition:: tensor(9.6389e-11, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4661e-11, dtype=torch.float64)
secont condition:: tensor(7.4661e-11, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.3163e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9611e-10, dtype=torch.float64)
secont condition:: tensor(2.9611e-10, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9149e-10, dtype=torch.float64)
secont condition:: tensor(2.9149e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7223e-10, dtype=torch.float64)
secont condition:: tensor(1.7223e-10, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3150e-10, dtype=torch.float64)
secont condition:: tensor(6.3150e-10, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1957e-10, dtype=torch.float64)
secont condition:: tensor(2.1957e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8867e-10, dtype=torch.float64)
secont condition:: tensor(2.8867e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6569e-10, dtype=torch.float64)
secont condition:: tensor(1.6569e-10, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3039e-10, dtype=torch.float64)
secont condition:: tensor(2.3039e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9734e-10, dtype=torch.float64)
secont condition:: tensor(1.9734e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3942e-10, dtype=torch.float64)
secont condition:: tensor(1.3942e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5622e-10, dtype=torch.float64)
secont condition:: tensor(2.5622e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5960e-10, dtype=torch.float64)
secont condition:: tensor(5.5960e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.47458291053772
curr_diff: 0 tensor(8.1831e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1186e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1312e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7800e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.7645e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6393e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1713e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7897e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.0003e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1290e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6168e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1197e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5817e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.9598e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0056e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.6376e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7046e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0680e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5030e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7716e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214153
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.175143
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.160530
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157178
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.149322
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152006
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.150967
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 7, Batch: 0, Loss: 0.151301
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 8, Batch: 0, Loss: 0.149971
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.150846
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.144976
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.149081
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.144649
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.149751
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.147658
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.144147
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.146208
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.147243
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 18, Batch: 0, Loss: 0.142435
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.142984
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.143149
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 21, Batch: 0, Loss: 0.143828
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.146790
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.145724
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.140393
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.143592
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.143895
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.141745
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.144874
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.148018
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.143203
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.139626
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.142547
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.145449
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.144243
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 35, Batch: 0, Loss: 0.143825
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 36, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 37, Batch: 0, Loss: 0.141777
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 38, Batch: 0, Loss: 0.143592
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.141824
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 40, Batch: 0, Loss: 0.142906
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.143762
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.140305
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 43, Batch: 0, Loss: 0.140390
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.143285
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.142961
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.142241
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 47, Batch: 0, Loss: 0.143834
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.140846
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.139209
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.141763
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.142804
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.142723
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.145213
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 54, Batch: 0, Loss: 0.141681
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.145766
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.141455
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 57, Batch: 0, Loss: 0.143538
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 58, Batch: 0, Loss: 0.144299
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.139524
Test Avg. Loss: 0.000013, Accuracy: 0.964900
training_time:: 123.237628698349
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.42260360717773
time_baseline:: 82.56197428703308
curr_diff: 0 tensor(5.5175e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5675e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.0535e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7466e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9430e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2721e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8193e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.5818e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6907e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3306e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 3
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0776e-10, dtype=torch.float64)
secont condition:: tensor(2.0776e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5573e-11, dtype=torch.float64)
secont condition:: tensor(6.5573e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9470e-11, dtype=torch.float64)
secont condition:: tensor(4.9470e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2558e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7182e-10, dtype=torch.float64)
secont condition:: tensor(2.7182e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3670e-10, dtype=torch.float64)
secont condition:: tensor(2.3670e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4144e-10, dtype=torch.float64)
secont condition:: tensor(1.4144e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0491e-11, dtype=torch.float64)
secont condition:: tensor(9.0491e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1170e-09, dtype=torch.float64)
secont condition:: tensor(2.1170e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9177e-11, dtype=torch.float64)
secont condition:: tensor(7.9177e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9343e-11, dtype=torch.float64)
secont condition:: tensor(4.9343e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3181e-11, dtype=torch.float64)
secont condition:: tensor(9.3181e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9389e-11, dtype=torch.float64)
secont condition:: tensor(6.9389e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2035e-10, dtype=torch.float64)
secont condition:: tensor(3.2035e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6062e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7417e-11, dtype=torch.float64)
secont condition:: tensor(9.7417e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6185e-11, dtype=torch.float64)
secont condition:: tensor(1.6185e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8084e-11, dtype=torch.float64)
secont condition:: tensor(7.8084e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1998e-10, dtype=torch.float64)
secont condition:: tensor(4.1998e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8586e-06, dtype=torch.float64)
secont condition:: tensor(4.8586e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3210e-10, dtype=torch.float64)
secont condition:: tensor(1.3210e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5119e-10, dtype=torch.float64)
secont condition:: tensor(1.5119e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3974e-10, dtype=torch.float64)
secont condition:: tensor(1.3974e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4298e-11, dtype=torch.float64)
secont condition:: tensor(9.4298e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2838e-10, dtype=torch.float64)
secont condition:: tensor(1.2838e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2289e-07, dtype=torch.float64)
secont condition:: tensor(4.2289e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7794e-06, dtype=torch.float64)
secont condition:: tensor(3.7794e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0988e-10, dtype=torch.float64)
secont condition:: tensor(1.0988e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4817e-10, dtype=torch.float64)
secont condition:: tensor(1.4817e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0518e-10, dtype=torch.float64)
secont condition:: tensor(1.0518e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8942e-11, dtype=torch.float64)
secont condition:: tensor(3.8942e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5422e-11, dtype=torch.float64)
secont condition:: tensor(7.5422e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5311e-10, dtype=torch.float64)
secont condition:: tensor(1.5311e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2946e-10, dtype=torch.float64)
secont condition:: tensor(1.2946e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1519e-10, dtype=torch.float64)
secont condition:: tensor(1.1519e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4267e-11, dtype=torch.float64)
secont condition:: tensor(4.4267e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4771e-11, dtype=torch.float64)
secont condition:: tensor(5.4771e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1095e-10, dtype=torch.float64)
secont condition:: tensor(1.1095e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1073e-11, dtype=torch.float64)
secont condition:: tensor(2.1073e-11, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2840e-11, dtype=torch.float64)
secont condition:: tensor(6.2840e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2834e-10, dtype=torch.float64)
secont condition:: tensor(4.2834e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0599e-11, dtype=torch.float64)
secont condition:: tensor(9.0599e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.4770e-11, dtype=torch.float64)
secont condition:: tensor(8.4770e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4919e-10, dtype=torch.float64)
secont condition:: tensor(1.4919e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7059e-11, dtype=torch.float64)
secont condition:: tensor(6.7059e-11, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2237e-11, dtype=torch.float64)
secont condition:: tensor(9.2237e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2908e-11, dtype=torch.float64)
secont condition:: tensor(4.2908e-11, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5602e-11, dtype=torch.float64)
secont condition:: tensor(8.5602e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6252e-10, dtype=torch.float64)
secont condition:: tensor(1.6252e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6843e-11, dtype=torch.float64)
secont condition:: tensor(4.6843e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6875e-12, dtype=torch.float64)
secont condition:: tensor(6.6875e-12, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1239e-10, dtype=torch.float64)
secont condition:: tensor(3.1239e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5367e-11, dtype=torch.float64)
secont condition:: tensor(8.5367e-11, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6601e-10, dtype=torch.float64)
secont condition:: tensor(1.6601e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7644e-11, dtype=torch.float64)
secont condition:: tensor(8.7644e-11, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3375e-10, dtype=torch.float64)
secont condition:: tensor(1.3375e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7488e-11, dtype=torch.float64)
secont condition:: tensor(9.7488e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0901e-11, dtype=torch.float64)
secont condition:: tensor(9.0901e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6227e-10, dtype=torch.float64)
secont condition:: tensor(1.6227e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6496e-11, dtype=torch.float64)
secont condition:: tensor(6.6496e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9340e-11, dtype=torch.float64)
secont condition:: tensor(3.9340e-11, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5427e-11, dtype=torch.float64)
secont condition:: tensor(8.5427e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4293e-10, dtype=torch.float64)
secont condition:: tensor(3.4293e-10, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7716e-11, dtype=torch.float64)
secont condition:: tensor(7.7716e-11, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2985e-10, dtype=torch.float64)
secont condition:: tensor(1.2985e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7144e-10, dtype=torch.float64)
secont condition:: tensor(2.7144e-10, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0620e-10, dtype=torch.float64)
secont condition:: tensor(2.0620e-10, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3394e-10, dtype=torch.float64)
secont condition:: tensor(1.3394e-10, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6504e-10, dtype=torch.float64)
secont condition:: tensor(1.6504e-10, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-10, dtype=torch.float64)
secont condition:: tensor(1.6913e-10, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5055e-10, dtype=torch.float64)
secont condition:: tensor(1.5055e-10, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0727e-10, dtype=torch.float64)
secont condition:: tensor(2.0727e-10, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5560e-11, dtype=torch.float64)
secont condition:: tensor(6.5560e-11, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3868e-10, dtype=torch.float64)
secont condition:: tensor(1.3868e-10, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0473e-10, dtype=torch.float64)
secont condition:: tensor(2.0473e-10, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2003e-10, dtype=torch.float64)
secont condition:: tensor(1.2003e-10, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3668e-10, dtype=torch.float64)
secont condition:: tensor(2.3668e-10, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3212e-10, dtype=torch.float64)
secont condition:: tensor(2.3212e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6917e-10, dtype=torch.float64)
secont condition:: tensor(1.6917e-10, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6140e-10, dtype=torch.float64)
secont condition:: tensor(1.6140e-10, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3117e-10, dtype=torch.float64)
secont condition:: tensor(2.3117e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 61.29059720039368
curr_diff: 0 tensor(8.9565e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1286e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2950e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5403e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(1.5057e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.8583e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.7116e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.9858e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.0654e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6070e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(1.8265e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.1402e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3408e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5303e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.5386e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6201e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.2630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4841e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5262e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.2776e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965800
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207410
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 1, Batch: 0, Loss: 0.160309
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.150068
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 3, Batch: 0, Loss: 0.151824
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.149241
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.147982
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.143981
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 7, Batch: 0, Loss: 0.153104
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.142874
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.143196
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 10, Batch: 0, Loss: 0.142418
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.140324
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.137929
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 13, Batch: 0, Loss: 0.145822
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.141463
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 15, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 16, Batch: 0, Loss: 0.144159
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.141541
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 18, Batch: 0, Loss: 0.141750
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 19, Batch: 0, Loss: 0.138816
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 20, Batch: 0, Loss: 0.142407
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 21, Batch: 0, Loss: 0.141789
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.142406
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 23, Batch: 0, Loss: 0.135928
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 24, Batch: 0, Loss: 0.137514
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 25, Batch: 0, Loss: 0.146116
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 26, Batch: 0, Loss: 0.145883
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 27, Batch: 0, Loss: 0.146768
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 28, Batch: 0, Loss: 0.141952
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.142871
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 30, Batch: 0, Loss: 0.141638
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 31, Batch: 0, Loss: 0.140586
Test Avg. Loss: 0.000013, Accuracy: 0.966000
training_time:: 65.71145582199097
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.332427978515625
time_baseline:: 44.40403628349304
curr_diff: 0 tensor(5.9142e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7949e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7395e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.5068e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2558e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.2418e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0200e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.5593e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.6896e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5430e-33, dtype=torch.float64)
secont condition:: tensor(3.5430e-33, dtype=torch.float64)
curr_secont condition:: tensor(5.1119e-11, dtype=torch.float64)
secont condition:: tensor(5.1119e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9531e-11, dtype=torch.float64)
secont condition:: tensor(8.9531e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3054e-11, dtype=torch.float64)
secont condition:: tensor(8.3054e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8240e-11, dtype=torch.float64)
secont condition:: tensor(8.8240e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.9611e-11, dtype=torch.float64)
secont condition:: tensor(2.9611e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1716e-11, dtype=torch.float64)
secont condition:: tensor(2.1716e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8449e-11, dtype=torch.float64)
secont condition:: tensor(2.8449e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6976e-11, dtype=torch.float64)
secont condition:: tensor(9.6976e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.5447e-11, dtype=torch.float64)
secont condition:: tensor(9.5447e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0172e-10, dtype=torch.float64)
secont condition:: tensor(1.0172e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3796e-10, dtype=torch.float64)
secont condition:: tensor(1.3796e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5716e-11, dtype=torch.float64)
secont condition:: tensor(9.5716e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.0972e-11, dtype=torch.float64)
secont condition:: tensor(7.0972e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8015e-11, dtype=torch.float64)
secont condition:: tensor(3.8015e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1757e-11, dtype=torch.float64)
secont condition:: tensor(8.1757e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4007e-10, dtype=torch.float64)
secont condition:: tensor(1.4007e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6755e-11, dtype=torch.float64)
secont condition:: tensor(6.6755e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0263e-11, dtype=torch.float64)
secont condition:: tensor(5.0263e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4174e-10, dtype=torch.float64)
secont condition:: tensor(1.4174e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.2550e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.9900e-10, dtype=torch.float64)
secont condition:: tensor(1.9900e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.5770e-11, dtype=torch.float64)
secont condition:: tensor(8.5770e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7490e-10, dtype=torch.float64)
secont condition:: tensor(6.7490e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2769e-10, dtype=torch.float64)
secont condition:: tensor(1.2769e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.6833e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.0363e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6626e-10, dtype=torch.float64)
secont condition:: tensor(3.6626e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6566e-11, dtype=torch.float64)
secont condition:: tensor(7.6566e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8037e-11, dtype=torch.float64)
secont condition:: tensor(8.8037e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.3430e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6841e-09, dtype=torch.float64)
secont condition:: tensor(2.6841e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4686e-11, dtype=torch.float64)
secont condition:: tensor(8.4686e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4664e-11, dtype=torch.float64)
secont condition:: tensor(4.4664e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8147e-10, dtype=torch.float64)
secont condition:: tensor(2.8147e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1065e-11, dtype=torch.float64)
secont condition:: tensor(7.1065e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.5326e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0544e-10, dtype=torch.float64)
secont condition:: tensor(1.0544e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2873e-11, dtype=torch.float64)
secont condition:: tensor(3.2873e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1684e-11, dtype=torch.float64)
secont condition:: tensor(9.1684e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0772e-10, dtype=torch.float64)
secont condition:: tensor(1.0772e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6066e-10, dtype=torch.float64)
secont condition:: tensor(1.6066e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3511e-10, dtype=torch.float64)
secont condition:: tensor(4.3511e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.6721e-12, dtype=torch.float64)
curr_secont condition:: tensor(-5.7515e-13, dtype=torch.float64)
curr_secont condition:: tensor(1.7855e-09, dtype=torch.float64)
secont condition:: tensor(1.7855e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5436e-06, dtype=torch.float64)
secont condition:: tensor(1.5436e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9064e-12, dtype=torch.float64)
secont condition:: tensor(3.9064e-12, dtype=torch.float64)
curr_secont condition:: tensor(-9.8049e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6168e-10, dtype=torch.float64)
secont condition:: tensor(1.6168e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1427e-10, dtype=torch.float64)
secont condition:: tensor(1.1427e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5105e-10, dtype=torch.float64)
secont condition:: tensor(5.5105e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3602e-10, dtype=torch.float64)
secont condition:: tensor(2.3602e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.0210e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.9976e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5254e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5203e-09, dtype=torch.float64)
secont condition:: tensor(1.5203e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.4254e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0800e-10, dtype=torch.float64)
secont condition:: tensor(9.0800e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1094e-09, dtype=torch.float64)
secont condition:: tensor(1.1094e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4991e-10, dtype=torch.float64)
secont condition:: tensor(3.4991e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0170e-09, dtype=torch.float64)
secont condition:: tensor(1.0170e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0933e-10, dtype=torch.float64)
secont condition:: tensor(4.0933e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0447e-10, dtype=torch.float64)
secont condition:: tensor(6.0447e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7201e-10, dtype=torch.float64)
secont condition:: tensor(4.7201e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1485e-10, dtype=torch.float64)
secont condition:: tensor(8.1485e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1325e-10, dtype=torch.float64)
secont condition:: tensor(2.1325e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.9504e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9867e-10, dtype=torch.float64)
secont condition:: tensor(7.9867e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6406e-10, dtype=torch.float64)
secont condition:: tensor(5.6406e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3321e-10, dtype=torch.float64)
secont condition:: tensor(5.3321e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6806e-10, dtype=torch.float64)
secont condition:: tensor(1.6806e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6252e-10, dtype=torch.float64)
secont condition:: tensor(6.6252e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5756e-10, dtype=torch.float64)
secont condition:: tensor(4.5756e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2826e-10, dtype=torch.float64)
secont condition:: tensor(2.2826e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2543e-10, dtype=torch.float64)
secont condition:: tensor(3.2543e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8049e-09, dtype=torch.float64)
secont condition:: tensor(4.8049e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7387e-10, dtype=torch.float64)
secont condition:: tensor(2.7387e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5546e-10, dtype=torch.float64)
secont condition:: tensor(3.5546e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4505e-10, dtype=torch.float64)
secont condition:: tensor(6.4505e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8121e-10, dtype=torch.float64)
secont condition:: tensor(2.8121e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.4212e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7306e-10, dtype=torch.float64)
secont condition:: tensor(4.7306e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4098e-10, dtype=torch.float64)
secont condition:: tensor(4.4098e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 33.938618898391724
curr_diff: 0 tensor(1.5564e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6717e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.5017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8904e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.7246e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.9154e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0964e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9572e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7315e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5857e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3163e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.5357e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6580e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8896e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9827e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.4687e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4343e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4498e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1803e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3732e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.7485e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218206
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 1, Batch: 0, Loss: 0.161803
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.157165
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.147845
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.149669
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.147518
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.148436
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.143410
Test Avg. Loss: 0.000013, Accuracy: 0.963200
Train - Epoch 8, Batch: 0, Loss: 0.139649
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.148000
Test Avg. Loss: 0.000013, Accuracy: 0.963200
Train - Epoch 10, Batch: 0, Loss: 0.150130
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.145911
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.140295
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.148353
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.139202
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 15, Batch: 0, Loss: 0.146659
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 16, Batch: 0, Loss: 0.144443
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 17, Batch: 0, Loss: 0.139778
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 18, Batch: 0, Loss: 0.142593
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 19, Batch: 0, Loss: 0.143527
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 20, Batch: 0, Loss: 0.136169
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 21, Batch: 0, Loss: 0.140402
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 22, Batch: 0, Loss: 0.141375
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 23, Batch: 0, Loss: 0.144645
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.143583
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 25, Batch: 0, Loss: 0.144159
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 26, Batch: 0, Loss: 0.140094
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 27, Batch: 0, Loss: 0.141221
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 28, Batch: 0, Loss: 0.139561
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 29, Batch: 0, Loss: 0.142966
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 30, Batch: 0, Loss: 0.138789
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 31, Batch: 0, Loss: 0.142625
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 66.04101610183716
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.31256628036499
time_baseline:: 44.38419723510742
curr_diff: 0 tensor(5.8945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3141e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4589e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1664e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.0337e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6637e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.0224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0067e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0497e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3472e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2813e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2680e-32, dtype=torch.float64)
secont condition:: tensor(2.2680e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3915e-10, dtype=torch.float64)
secont condition:: tensor(1.3915e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2586e-11, dtype=torch.float64)
secont condition:: tensor(4.2586e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4387e-11, dtype=torch.float64)
secont condition:: tensor(2.4387e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.5264e-11, dtype=torch.float64)
secont condition:: tensor(3.5264e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7263e-11, dtype=torch.float64)
secont condition:: tensor(3.7263e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.5753e-11, dtype=torch.float64)
secont condition:: tensor(7.5753e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0308e-11, dtype=torch.float64)
secont condition:: tensor(5.0308e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0031e-11, dtype=torch.float64)
secont condition:: tensor(6.0031e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3651e-10, dtype=torch.float64)
secont condition:: tensor(1.3651e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0166e-11, dtype=torch.float64)
secont condition:: tensor(5.0166e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8701e-11, dtype=torch.float64)
secont condition:: tensor(4.8701e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.7985e-11, dtype=torch.float64)
secont condition:: tensor(4.7985e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0678e-11, dtype=torch.float64)
secont condition:: tensor(3.0678e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.0120e-11, dtype=torch.float64)
secont condition:: tensor(8.0120e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0167e-11, dtype=torch.float64)
secont condition:: tensor(7.0167e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.2523e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3452e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0987e-10, dtype=torch.float64)
secont condition:: tensor(3.0987e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0329e-11, dtype=torch.float64)
secont condition:: tensor(8.0329e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7491e-11, dtype=torch.float64)
secont condition:: tensor(7.7491e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2620e-10, dtype=torch.float64)
secont condition:: tensor(1.2620e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6670e-11, dtype=torch.float64)
secont condition:: tensor(7.6670e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6376e-11, dtype=torch.float64)
secont condition:: tensor(7.6376e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8791e-11, dtype=torch.float64)
secont condition:: tensor(6.8791e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4856e-11, dtype=torch.float64)
secont condition:: tensor(7.4856e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1961e-12, dtype=torch.float64)
secont condition:: tensor(6.1961e-12, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1060e-10, dtype=torch.float64)
secont condition:: tensor(1.1060e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.9410e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1150e-10, dtype=torch.float64)
secont condition:: tensor(3.1150e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3123e-11, dtype=torch.float64)
secont condition:: tensor(8.3123e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4419e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2730e-10, dtype=torch.float64)
secont condition:: tensor(1.2730e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3677e-11, dtype=torch.float64)
secont condition:: tensor(9.3677e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1885e-11, dtype=torch.float64)
secont condition:: tensor(8.1885e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3806e-10, dtype=torch.float64)
secont condition:: tensor(2.3806e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1755e-11, dtype=torch.float64)
secont condition:: tensor(2.1755e-11, dtype=torch.float64)
curr_secont condition:: tensor(-4.3587e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5636e-11, dtype=torch.float64)
secont condition:: tensor(4.5636e-11, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3084e-10, dtype=torch.float64)
secont condition:: tensor(2.3084e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4038e-10, dtype=torch.float64)
secont condition:: tensor(2.4038e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1999e-10, dtype=torch.float64)
secont condition:: tensor(4.1999e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7933e-10, dtype=torch.float64)
secont condition:: tensor(1.7933e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9347e-10, dtype=torch.float64)
secont condition:: tensor(5.9347e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3050e-10, dtype=torch.float64)
secont condition:: tensor(2.3050e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2575e-11, dtype=torch.float64)
secont condition:: tensor(1.2575e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.1722e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6334e-11, dtype=torch.float64)
secont condition:: tensor(7.6334e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9595e-10, dtype=torch.float64)
secont condition:: tensor(1.9595e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1183e-10, dtype=torch.float64)
secont condition:: tensor(5.1183e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3756e-10, dtype=torch.float64)
secont condition:: tensor(1.3756e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0257e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3645e-11, dtype=torch.float64)
secont condition:: tensor(4.3645e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5568e-10, dtype=torch.float64)
secont condition:: tensor(1.5568e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7175e-11, dtype=torch.float64)
secont condition:: tensor(8.7175e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7895e-10, dtype=torch.float64)
secont condition:: tensor(2.7895e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2630e-10, dtype=torch.float64)
secont condition:: tensor(2.2630e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2432e-10, dtype=torch.float64)
secont condition:: tensor(1.2432e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.5136e-11, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.7171e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2687e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.5085e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2254e-10, dtype=torch.float64)
secont condition:: tensor(2.2254e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5673e-10, dtype=torch.float64)
secont condition:: tensor(3.5673e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.7367e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2915e-10, dtype=torch.float64)
secont condition:: tensor(7.2915e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5398e-10, dtype=torch.float64)
secont condition:: tensor(1.5398e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3133e-10, dtype=torch.float64)
secont condition:: tensor(3.3133e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9672e-10, dtype=torch.float64)
secont condition:: tensor(2.9672e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0249e-10, dtype=torch.float64)
secont condition:: tensor(6.0249e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5187e-10, dtype=torch.float64)
secont condition:: tensor(1.5187e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3971e-10, dtype=torch.float64)
secont condition:: tensor(1.3971e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0757e-10, dtype=torch.float64)
secont condition:: tensor(3.0757e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1510e-10, dtype=torch.float64)
secont condition:: tensor(2.1510e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0002e-10, dtype=torch.float64)
secont condition:: tensor(2.0002e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7404e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2929e-10, dtype=torch.float64)
secont condition:: tensor(6.2929e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2543e-10, dtype=torch.float64)
secont condition:: tensor(3.2543e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1029e-10, dtype=torch.float64)
secont condition:: tensor(2.1029e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4477e-10, dtype=torch.float64)
secont condition:: tensor(2.4477e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 36.53433012962341
curr_diff: 0 tensor(1.2552e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1592e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8773e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0238e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.8061e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9864e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9673e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9956e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8994e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5237e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.9480e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8363e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8536e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0168e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.1127e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.5574e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8330e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.3028e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0945e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.6922e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.2490e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214675
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.162429
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.149596
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 3, Batch: 0, Loss: 0.148505
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 4, Batch: 0, Loss: 0.154514
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 5, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 6, Batch: 0, Loss: 0.147647
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.148772
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.141458
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.142284
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 10, Batch: 0, Loss: 0.144891
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 11, Batch: 0, Loss: 0.144014
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 12, Batch: 0, Loss: 0.145855
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 13, Batch: 0, Loss: 0.144378
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 14, Batch: 0, Loss: 0.143467
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.142347
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.141347
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 17, Batch: 0, Loss: 0.136353
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 18, Batch: 0, Loss: 0.145079
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 19, Batch: 0, Loss: 0.144241
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 20, Batch: 0, Loss: 0.141164
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 21, Batch: 0, Loss: 0.143883
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 22, Batch: 0, Loss: 0.139259
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 23, Batch: 0, Loss: 0.145479
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 24, Batch: 0, Loss: 0.136216
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 25, Batch: 0, Loss: 0.139215
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 26, Batch: 0, Loss: 0.139155
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.139510
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 28, Batch: 0, Loss: 0.139610
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 29, Batch: 0, Loss: 0.138827
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 30, Batch: 0, Loss: 0.144001
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 31, Batch: 0, Loss: 0.137785
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 65.9491515159607
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.404948711395264
time_baseline:: 44.47616529464722
curr_diff: 0 tensor(5.8822e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.7859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5076e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.5064e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5492e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.4952e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0110e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.5718e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2243e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6803e-10, dtype=torch.float64)
secont condition:: tensor(1.6803e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2093e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.4277e-11, dtype=torch.float64)
secont condition:: tensor(9.4277e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5731e-11, dtype=torch.float64)
secont condition:: tensor(3.5731e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2115e-11, dtype=torch.float64)
secont condition:: tensor(5.2115e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2616e-11, dtype=torch.float64)
secont condition:: tensor(2.2616e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4908e-11, dtype=torch.float64)
secont condition:: tensor(3.4908e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2711e-11, dtype=torch.float64)
secont condition:: tensor(2.2711e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2868e-10, dtype=torch.float64)
secont condition:: tensor(1.2868e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2030e-11, dtype=torch.float64)
secont condition:: tensor(1.2030e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4424e-11, dtype=torch.float64)
secont condition:: tensor(5.4424e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0549e-11, dtype=torch.float64)
secont condition:: tensor(2.0549e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6880e-11, dtype=torch.float64)
secont condition:: tensor(1.6880e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0453e-11, dtype=torch.float64)
secont condition:: tensor(6.0453e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.0916e-11, dtype=torch.float64)
secont condition:: tensor(9.0916e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3783e-11, dtype=torch.float64)
secont condition:: tensor(2.3783e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0041e-11, dtype=torch.float64)
secont condition:: tensor(3.0041e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7715e-11, dtype=torch.float64)
secont condition:: tensor(3.7715e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6576e-11, dtype=torch.float64)
secont condition:: tensor(6.6576e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.3761e-12, dtype=torch.float64)
curr_secont condition:: tensor(-2.4935e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.7500e-11, dtype=torch.float64)
secont condition:: tensor(8.7500e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.4647e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.4485e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0858e-10, dtype=torch.float64)
secont condition:: tensor(1.0858e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5450e-11, dtype=torch.float64)
secont condition:: tensor(7.5450e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.4434e-11, dtype=torch.float64)
secont condition:: tensor(3.4434e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4985e-11, dtype=torch.float64)
secont condition:: tensor(6.4985e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.7895e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4184e-10, dtype=torch.float64)
secont condition:: tensor(2.4184e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3591e-10, dtype=torch.float64)
secont condition:: tensor(2.3591e-10, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.2896e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.2024e-10, dtype=torch.float64)
secont condition:: tensor(3.2024e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1966e-11, dtype=torch.float64)
secont condition:: tensor(2.1966e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5547e-10, dtype=torch.float64)
secont condition:: tensor(2.5547e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5581e-09, dtype=torch.float64)
secont condition:: tensor(1.5581e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4955e-11, dtype=torch.float64)
secont condition:: tensor(8.4955e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8933e-10, dtype=torch.float64)
secont condition:: tensor(1.8933e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0532e-10, dtype=torch.float64)
secont condition:: tensor(1.0532e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8074e-10, dtype=torch.float64)
secont condition:: tensor(1.8074e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0921e-10, dtype=torch.float64)
secont condition:: tensor(4.0921e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5273e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4924e-10, dtype=torch.float64)
secont condition:: tensor(1.4924e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2194e-11, dtype=torch.float64)
secont condition:: tensor(1.2194e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1995e-11, dtype=torch.float64)
secont condition:: tensor(2.1995e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5257e-11, dtype=torch.float64)
secont condition:: tensor(5.5257e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9177e-10, dtype=torch.float64)
secont condition:: tensor(1.9177e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2122e-10, dtype=torch.float64)
secont condition:: tensor(1.2122e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.5702e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.2024e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6661e-11, dtype=torch.float64)
secont condition:: tensor(9.6661e-11, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8349e-10, dtype=torch.float64)
secont condition:: tensor(3.8349e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.3533e-11, dtype=torch.float64)
secont condition:: tensor(9.3533e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3416e-10, dtype=torch.float64)
secont condition:: tensor(1.3416e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8351e-10, dtype=torch.float64)
secont condition:: tensor(3.8351e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2833e-10, dtype=torch.float64)
secont condition:: tensor(1.2833e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0935e-10, dtype=torch.float64)
secont condition:: tensor(1.0935e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5920e-10, dtype=torch.float64)
secont condition:: tensor(1.5920e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5489e-10, dtype=torch.float64)
secont condition:: tensor(2.5489e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2189e-10, dtype=torch.float64)
secont condition:: tensor(1.2189e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0530e-10, dtype=torch.float64)
secont condition:: tensor(2.0530e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4190e-10, dtype=torch.float64)
secont condition:: tensor(1.4190e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0514e-10, dtype=torch.float64)
secont condition:: tensor(1.0514e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1815e-10, dtype=torch.float64)
secont condition:: tensor(2.1815e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.7914e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1005e-10, dtype=torch.float64)
secont condition:: tensor(1.1005e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4603e-11, dtype=torch.float64)
secont condition:: tensor(3.4603e-11, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-10, dtype=torch.float64)
secont condition:: tensor(1.2008e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0897e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8088e-10, dtype=torch.float64)
secont condition:: tensor(1.8088e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3037e-09, dtype=torch.float64)
secont condition:: tensor(1.3037e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0464e-11, dtype=torch.float64)
secont condition:: tensor(4.0464e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1991e-10, dtype=torch.float64)
secont condition:: tensor(2.1991e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0824e-10, dtype=torch.float64)
secont condition:: tensor(5.0824e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4757e-09, dtype=torch.float64)
secont condition:: tensor(1.4757e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6559e-09, dtype=torch.float64)
secont condition:: tensor(1.6559e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8938e-10, dtype=torch.float64)
secont condition:: tensor(1.8938e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9083e-10, dtype=torch.float64)
secont condition:: tensor(2.9083e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2485e-11, dtype=torch.float64)
secont condition:: tensor(6.2485e-11, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6688e-10, dtype=torch.float64)
secont condition:: tensor(3.6688e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9952e-10, dtype=torch.float64)
secont condition:: tensor(2.9952e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9252e-10, dtype=torch.float64)
secont condition:: tensor(3.9252e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.305399894714355
curr_diff: 0 tensor(1.9987e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4283e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.6113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4957e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.4328e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.9366e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.9527e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2393e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8662e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2363e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(2.9915e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.9106e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5712e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.2436e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.7814e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.2955e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0362e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5809e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.5442e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0783e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3640e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.2586e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212306
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.164147
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 2, Batch: 0, Loss: 0.155375
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.152692
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.143304
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.146218
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.145595
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.145622
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.149730
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.148229
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.147153
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 11, Batch: 0, Loss: 0.141776
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 12, Batch: 0, Loss: 0.141969
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.146383
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.146105
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.147761
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 16, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 17, Batch: 0, Loss: 0.140752
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 18, Batch: 0, Loss: 0.142882
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 19, Batch: 0, Loss: 0.145636
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.141555
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.142168
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 22, Batch: 0, Loss: 0.144155
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 23, Batch: 0, Loss: 0.145952
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 24, Batch: 0, Loss: 0.143384
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 25, Batch: 0, Loss: 0.146555
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.140969
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.141863
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 28, Batch: 0, Loss: 0.140574
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 29, Batch: 0, Loss: 0.139297
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.148710
Test Avg. Loss: 0.000013, Accuracy: 0.966100
Train - Epoch 31, Batch: 0, Loss: 0.139271
Test Avg. Loss: 0.000013, Accuracy: 0.965900
training_time:: 65.95814728736877
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.420295000076294
time_baseline:: 44.492533445358276
curr_diff: 0 tensor(6.0200e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3350e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.3850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4495e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.2723e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.5316e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.0755e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.7578e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0888e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.9705e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.2748e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0004e-11, dtype=torch.float64)
secont condition:: tensor(3.0004e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1323e-11, dtype=torch.float64)
secont condition:: tensor(8.1323e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1167e-11, dtype=torch.float64)
secont condition:: tensor(9.1167e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8053e-10, dtype=torch.float64)
secont condition:: tensor(1.8053e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6470e-11, dtype=torch.float64)
secont condition:: tensor(6.6470e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3334e-11, dtype=torch.float64)
secont condition:: tensor(6.3334e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6018e-11, dtype=torch.float64)
secont condition:: tensor(5.6018e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0511e-11, dtype=torch.float64)
secont condition:: tensor(8.0511e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1451e-11, dtype=torch.float64)
secont condition:: tensor(5.1451e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1868e-10, dtype=torch.float64)
secont condition:: tensor(1.1868e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4001e-11, dtype=torch.float64)
secont condition:: tensor(7.4001e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0187e-11, dtype=torch.float64)
secont condition:: tensor(6.0187e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0961e-11, dtype=torch.float64)
secont condition:: tensor(6.0961e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4776e-11, dtype=torch.float64)
secont condition:: tensor(6.4776e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6297e-11, dtype=torch.float64)
secont condition:: tensor(5.6297e-11, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.2868e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1764e-10, dtype=torch.float64)
secont condition:: tensor(1.1764e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.4623e-11, dtype=torch.float64)
curr_secont condition:: tensor(-3.3949e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4860e-10, dtype=torch.float64)
secont condition:: tensor(1.4860e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.7467e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.0441e-10, dtype=torch.float64)
secont condition:: tensor(2.0441e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8200e-11, dtype=torch.float64)
secont condition:: tensor(8.8200e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3500e-11, dtype=torch.float64)
secont condition:: tensor(4.3500e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3815e-10, dtype=torch.float64)
secont condition:: tensor(1.3815e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.9461e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5750e-10, dtype=torch.float64)
secont condition:: tensor(5.5750e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9139e-11, dtype=torch.float64)
secont condition:: tensor(7.9139e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8754e-10, dtype=torch.float64)
secont condition:: tensor(2.8754e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2802e-10, dtype=torch.float64)
secont condition:: tensor(1.2802e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4345e-11, dtype=torch.float64)
secont condition:: tensor(8.4345e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8548e-11, dtype=torch.float64)
secont condition:: tensor(5.8548e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9470e-11, dtype=torch.float64)
secont condition:: tensor(4.9470e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4518e-11, dtype=torch.float64)
secont condition:: tensor(1.4518e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.8067e-11, dtype=torch.float64)
secont condition:: tensor(7.8067e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4724e-11, dtype=torch.float64)
secont condition:: tensor(7.4724e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.9100e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0784e-10, dtype=torch.float64)
secont condition:: tensor(4.0784e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1406e-10, dtype=torch.float64)
secont condition:: tensor(2.1406e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4296e-11, dtype=torch.float64)
secont condition:: tensor(8.4296e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3222e-12, dtype=torch.float64)
secont condition:: tensor(3.3222e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.7628e-11, dtype=torch.float64)
secont condition:: tensor(5.7628e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5599e-10, dtype=torch.float64)
secont condition:: tensor(2.5599e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.3002e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3054e-11, dtype=torch.float64)
secont condition:: tensor(3.3054e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2139e-10, dtype=torch.float64)
secont condition:: tensor(2.2139e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5126e-10, dtype=torch.float64)
secont condition:: tensor(1.5126e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5319e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5652e-10, dtype=torch.float64)
secont condition:: tensor(2.5652e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5199e-10, dtype=torch.float64)
secont condition:: tensor(1.5199e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6296e-10, dtype=torch.float64)
secont condition:: tensor(1.6296e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5574e-10, dtype=torch.float64)
secont condition:: tensor(6.5574e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4801e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1366e-10, dtype=torch.float64)
secont condition:: tensor(2.1366e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1443e-10, dtype=torch.float64)
secont condition:: tensor(5.1443e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6387e-10, dtype=torch.float64)
secont condition:: tensor(1.6387e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.7061e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.0309e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2939e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4698e-11, dtype=torch.float64)
secont condition:: tensor(7.4698e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1211e-10, dtype=torch.float64)
secont condition:: tensor(1.1211e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2532e-11, dtype=torch.float64)
secont condition:: tensor(2.2532e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6640e-11, dtype=torch.float64)
secont condition:: tensor(6.6640e-11, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6893e-11, dtype=torch.float64)
secont condition:: tensor(2.6893e-11, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.3714e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9362e-10, dtype=torch.float64)
secont condition:: tensor(1.9362e-10, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4627e-10, dtype=torch.float64)
secont condition:: tensor(1.4627e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0515e-10, dtype=torch.float64)
secont condition:: tensor(1.0515e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9464e-10, dtype=torch.float64)
secont condition:: tensor(1.9464e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0972e-10, dtype=torch.float64)
secont condition:: tensor(2.0972e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6391e-10, dtype=torch.float64)
secont condition:: tensor(2.6391e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3136e-09, dtype=torch.float64)
secont condition:: tensor(2.3136e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9907e-10, dtype=torch.float64)
secont condition:: tensor(6.9907e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1759e-09, dtype=torch.float64)
secont condition:: tensor(3.1759e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3142e-10, dtype=torch.float64)
secont condition:: tensor(3.3142e-10, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5163e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7405e-10, dtype=torch.float64)
secont condition:: tensor(1.7405e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.7024e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3043e-09, dtype=torch.float64)
secont condition:: tensor(2.3043e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6688e-10, dtype=torch.float64)
secont condition:: tensor(3.6688e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2558e-09, dtype=torch.float64)
secont condition:: tensor(1.2558e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7093e-10, dtype=torch.float64)
secont condition:: tensor(3.7093e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4874e-10, dtype=torch.float64)
secont condition:: tensor(3.4874e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0456e-10, dtype=torch.float64)
secont condition:: tensor(4.0456e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3852e-10, dtype=torch.float64)
secont condition:: tensor(8.3852e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 36.362465143203735
curr_diff: 0 tensor(1.6777e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0207e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8272e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.0411e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.1904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0945e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.0319e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.7659e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.4549e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0999e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.0501e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.0901e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5180e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9494e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.8111e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.7121e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8121e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9373e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0867e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3138e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4915e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212893
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.160459
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.152058
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.150245
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.149394
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.149330
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.146808
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.145730
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 8, Batch: 0, Loss: 0.144081
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 9, Batch: 0, Loss: 0.141405
Test Avg. Loss: 0.000013, Accuracy: 0.963000
Train - Epoch 10, Batch: 0, Loss: 0.146634
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.146149
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.144472
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.142899
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 14, Batch: 0, Loss: 0.142899
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 15, Batch: 0, Loss: 0.142966
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 16, Batch: 0, Loss: 0.141616
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.140231
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 18, Batch: 0, Loss: 0.142430
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 19, Batch: 0, Loss: 0.137102
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 20, Batch: 0, Loss: 0.142475
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 21, Batch: 0, Loss: 0.143791
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 22, Batch: 0, Loss: 0.139003
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 23, Batch: 0, Loss: 0.142189
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 24, Batch: 0, Loss: 0.142200
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 25, Batch: 0, Loss: 0.145883
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 26, Batch: 0, Loss: 0.141611
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 27, Batch: 0, Loss: 0.143607
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 28, Batch: 0, Loss: 0.143419
Test Avg. Loss: 0.000013, Accuracy: 0.966100
Train - Epoch 29, Batch: 0, Loss: 0.143806
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 30, Batch: 0, Loss: 0.141090
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 31, Batch: 0, Loss: 0.143043
Test Avg. Loss: 0.000013, Accuracy: 0.964900
training_time:: 65.76390051841736
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.336254596710205
time_baseline:: 44.40795183181763
curr_diff: 0 tensor(5.5652e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4757e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4010e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.5850e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4289e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.6664e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.4571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5992e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0845e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.8921e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.0203e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 3
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.9432e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.3904e-10, dtype=torch.float64)
secont condition:: tensor(1.3904e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.1319e-11, dtype=torch.float64)
secont condition:: tensor(6.1319e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6355e-11, dtype=torch.float64)
secont condition:: tensor(2.6355e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7569e-11, dtype=torch.float64)
secont condition:: tensor(2.7569e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3776e-11, dtype=torch.float64)
secont condition:: tensor(6.3776e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.1370e-11, dtype=torch.float64)
secont condition:: tensor(4.1370e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0461e-11, dtype=torch.float64)
secont condition:: tensor(4.0461e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4042e-11, dtype=torch.float64)
secont condition:: tensor(2.4042e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.3454e-11, dtype=torch.float64)
secont condition:: tensor(8.3454e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0032e-11, dtype=torch.float64)
secont condition:: tensor(5.0032e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9958e-11, dtype=torch.float64)
secont condition:: tensor(2.9958e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.8404e-13, dtype=torch.float64)
secont condition:: tensor(9.8404e-13, dtype=torch.float64)
curr_secont condition:: tensor(2.2167e-11, dtype=torch.float64)
secont condition:: tensor(2.2167e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0006e-10, dtype=torch.float64)
secont condition:: tensor(1.0006e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6735e-11, dtype=torch.float64)
secont condition:: tensor(9.6735e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.6235e-11, dtype=torch.float64)
secont condition:: tensor(7.6235e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5656e-11, dtype=torch.float64)
secont condition:: tensor(5.5656e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.5217e-11, dtype=torch.float64)
secont condition:: tensor(4.5217e-11, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2088e-10, dtype=torch.float64)
secont condition:: tensor(1.2088e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8024e-11, dtype=torch.float64)
secont condition:: tensor(2.8024e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3483e-11, dtype=torch.float64)
secont condition:: tensor(2.3483e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3199e-11, dtype=torch.float64)
secont condition:: tensor(6.3199e-11, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2622e-11, dtype=torch.float64)
secont condition:: tensor(5.2622e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4189e-11, dtype=torch.float64)
secont condition:: tensor(4.4189e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2073e-11, dtype=torch.float64)
secont condition:: tensor(3.2073e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4158e-11, dtype=torch.float64)
secont condition:: tensor(4.4158e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5919e-11, dtype=torch.float64)
secont condition:: tensor(4.5919e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.3706e-11, dtype=torch.float64)
secont condition:: tensor(9.3706e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4934e-11, dtype=torch.float64)
secont condition:: tensor(6.4934e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5136e-11, dtype=torch.float64)
secont condition:: tensor(6.5136e-11, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5525e-11, dtype=torch.float64)
secont condition:: tensor(5.5525e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.8666e-11, dtype=torch.float64)
secont condition:: tensor(4.8666e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.6442e-11, dtype=torch.float64)
secont condition:: tensor(5.6442e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.6875e-11, dtype=torch.float64)
secont condition:: tensor(6.6875e-11, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2303e-12, dtype=torch.float64)
secont condition:: tensor(6.2303e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.8572e-10, dtype=torch.float64)
secont condition:: tensor(1.8572e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6530e-10, dtype=torch.float64)
secont condition:: tensor(1.6530e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2234e-10, dtype=torch.float64)
secont condition:: tensor(1.2234e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5283e-10, dtype=torch.float64)
secont condition:: tensor(1.5283e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8239e-11, dtype=torch.float64)
secont condition:: tensor(3.8239e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4517e-10, dtype=torch.float64)
secont condition:: tensor(1.4517e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1564e-10, dtype=torch.float64)
secont condition:: tensor(1.1564e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1504e-10, dtype=torch.float64)
secont condition:: tensor(1.1504e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1875e-11, dtype=torch.float64)
secont condition:: tensor(9.1875e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.2428e-11, dtype=torch.float64)
secont condition:: tensor(9.2428e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5740e-11, dtype=torch.float64)
secont condition:: tensor(6.5740e-11, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6879e-10, dtype=torch.float64)
secont condition:: tensor(2.6879e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9767e-10, dtype=torch.float64)
secont condition:: tensor(2.9767e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7267e-11, dtype=torch.float64)
secont condition:: tensor(3.7267e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8375e-10, dtype=torch.float64)
secont condition:: tensor(1.8375e-10, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7306e-10, dtype=torch.float64)
secont condition:: tensor(1.7306e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7528e-10, dtype=torch.float64)
secont condition:: tensor(1.7528e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8683e-10, dtype=torch.float64)
secont condition:: tensor(1.8683e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4649e-11, dtype=torch.float64)
secont condition:: tensor(8.4649e-11, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6763e-11, dtype=torch.float64)
secont condition:: tensor(6.6763e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.6301e-11, dtype=torch.float64)
secont condition:: tensor(4.6301e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.3590e-11, dtype=torch.float64)
secont condition:: tensor(6.3590e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4277e-10, dtype=torch.float64)
secont condition:: tensor(1.4277e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6564e-10, dtype=torch.float64)
secont condition:: tensor(1.6564e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4604e-11, dtype=torch.float64)
secont condition:: tensor(7.4604e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.7686e-11, dtype=torch.float64)
secont condition:: tensor(9.7686e-11, dtype=torch.float64)
curr_secont condition:: tensor(-8.6235e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.5677e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0518e-10, dtype=torch.float64)
secont condition:: tensor(4.0518e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5118e-09, dtype=torch.float64)
secont condition:: tensor(2.5118e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8728e-10, dtype=torch.float64)
secont condition:: tensor(5.8728e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4370e-10, dtype=torch.float64)
secont condition:: tensor(1.4370e-10, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6864e-10, dtype=torch.float64)
secont condition:: tensor(1.6864e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4112e-10, dtype=torch.float64)
secont condition:: tensor(1.4112e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0506e-10, dtype=torch.float64)
secont condition:: tensor(6.0506e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0437e-10, dtype=torch.float64)
secont condition:: tensor(3.0437e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.8675e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.9735e-10, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6629e-10, dtype=torch.float64)
secont condition:: tensor(1.6629e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7608e-11, dtype=torch.float64)
secont condition:: tensor(4.7608e-11, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3033e-09, dtype=torch.float64)
secont condition:: tensor(2.3033e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3178e-10, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1677e-10, dtype=torch.float64)
secont condition:: tensor(8.1677e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.1148e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6840e-10, dtype=torch.float64)
secont condition:: tensor(5.6840e-10, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3645e-10, dtype=torch.float64)
secont condition:: tensor(2.3645e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0419e-10, dtype=torch.float64)
secont condition:: tensor(4.0419e-10, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1519e-10, dtype=torch.float64)
secont condition:: tensor(5.1519e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3790e-10, dtype=torch.float64)
secont condition:: tensor(1.3790e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.28167390823364
curr_diff: 0 tensor(1.1969e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4305e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.2869e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3375e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.2102e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.8972e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3702e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.1867e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0419e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1498e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.5996e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.4034e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2702e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.8207e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4340e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.3525e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.2719e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5289e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.8250e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2672e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2124e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.1607e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966600
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.209362
Train - Epoch 0, Batch: 10, Loss: 0.147950
Test Avg. Loss: 0.000038, Accuracy: 0.963600
Train - Epoch 1, Batch: 0, Loss: 0.142602
Train - Epoch 1, Batch: 10, Loss: 0.146361
Test Avg. Loss: 0.000038, Accuracy: 0.963900
Train - Epoch 2, Batch: 0, Loss: 0.149528
Train - Epoch 2, Batch: 10, Loss: 0.142012
Test Avg. Loss: 0.000037, Accuracy: 0.963400
Train - Epoch 3, Batch: 0, Loss: 0.147772
Train - Epoch 3, Batch: 10, Loss: 0.135802
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 4, Batch: 0, Loss: 0.135528
Train - Epoch 4, Batch: 10, Loss: 0.151618
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 5, Batch: 0, Loss: 0.150729
Train - Epoch 5, Batch: 10, Loss: 0.144519
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 6, Batch: 0, Loss: 0.146585
Train - Epoch 6, Batch: 10, Loss: 0.138951
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 7, Batch: 0, Loss: 0.141489
Train - Epoch 7, Batch: 10, Loss: 0.136533
Test Avg. Loss: 0.000037, Accuracy: 0.965600
training_time:: 16.46666717529297
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.193562507629395
time_baseline:: 12.215292692184448
curr_diff: 0 tensor(6.6793e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1566e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.2596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1675e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(7.1216e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2166e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.2155e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2265e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0984e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.7577e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.2434e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8654e-33, dtype=torch.float64)
secont condition:: tensor(9.8654e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6104e-32, dtype=torch.float64)
secont condition:: tensor(1.6104e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.1688e-32, dtype=torch.float64)
secont condition:: tensor(2.1688e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9328e-32, dtype=torch.float64)
secont condition:: tensor(2.9328e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5076e-32, dtype=torch.float64)
secont condition:: tensor(3.5076e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9060e-32, dtype=torch.float64)
secont condition:: tensor(2.9060e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.6901e-11, dtype=torch.float64)
secont condition:: tensor(1.6901e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7031e-11, dtype=torch.float64)
secont condition:: tensor(1.7031e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2777e-10, dtype=torch.float64)
secont condition:: tensor(1.2777e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2404e-11, dtype=torch.float64)
secont condition:: tensor(5.2404e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.3625e-11, dtype=torch.float64)
secont condition:: tensor(4.3625e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.7537e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8319e-11, dtype=torch.float64)
secont condition:: tensor(1.8319e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6006e-10, dtype=torch.float64)
secont condition:: tensor(1.6006e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6312e-11, dtype=torch.float64)
secont condition:: tensor(8.6312e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5228e-10, dtype=torch.float64)
secont condition:: tensor(1.5228e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3927e-11, dtype=torch.float64)
secont condition:: tensor(2.3927e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2013e-11, dtype=torch.float64)
secont condition:: tensor(3.2013e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7171e-11, dtype=torch.float64)
secont condition:: tensor(3.7171e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1068e-11, dtype=torch.float64)
secont condition:: tensor(3.1068e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5489e-11, dtype=torch.float64)
secont condition:: tensor(6.5489e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6870e-11, dtype=torch.float64)
secont condition:: tensor(1.6870e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5035e-11, dtype=torch.float64)
secont condition:: tensor(2.5035e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3783e-11, dtype=torch.float64)
secont condition:: tensor(3.3783e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.1661e-10, dtype=torch.float64)
secont condition:: tensor(8.1661e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4156e-10, dtype=torch.float64)
secont condition:: tensor(1.4156e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7245e-09, dtype=torch.float64)
secont condition:: tensor(1.7245e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1994e-11, dtype=torch.float64)
secont condition:: tensor(4.1994e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.6263e-11, dtype=torch.float64)
secont condition:: tensor(9.6263e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5220e-10, dtype=torch.float64)
secont condition:: tensor(2.5220e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5856e-10, dtype=torch.float64)
secont condition:: tensor(1.5856e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.3680e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6184e-10, dtype=torch.float64)
secont condition:: tensor(8.6184e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4772e-10, dtype=torch.float64)
secont condition:: tensor(1.4772e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1034e-11, dtype=torch.float64)
secont condition:: tensor(1.1034e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.6955e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.2246e-10, dtype=torch.float64)
secont condition:: tensor(7.2246e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.5716e-10, dtype=torch.float64)
secont condition:: tensor(9.5716e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5311e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4595e-10, dtype=torch.float64)
secont condition:: tensor(2.4595e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0296e-10, dtype=torch.float64)
secont condition:: tensor(5.0296e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5533e-10, dtype=torch.float64)
secont condition:: tensor(3.5533e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.2746e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2167e-10, dtype=torch.float64)
secont condition:: tensor(1.2167e-10, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8118e-10, dtype=torch.float64)
secont condition:: tensor(1.8118e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4069e-11, dtype=torch.float64)
secont condition:: tensor(4.4069e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7286e-10, dtype=torch.float64)
secont condition:: tensor(1.7286e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3256e-11, dtype=torch.float64)
secont condition:: tensor(3.3256e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8502e-10, dtype=torch.float64)
secont condition:: tensor(5.8502e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4135e-10, dtype=torch.float64)
secont condition:: tensor(1.4135e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3618e-10, dtype=torch.float64)
secont condition:: tensor(2.3618e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5114e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2885e-10, dtype=torch.float64)
secont condition:: tensor(2.2885e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7215e-10, dtype=torch.float64)
secont condition:: tensor(1.7215e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4293e-11, dtype=torch.float64)
secont condition:: tensor(8.4293e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.7820e-10, dtype=torch.float64)
secont condition:: tensor(9.7820e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.1436e-10, dtype=torch.float64)
secont condition:: tensor(8.1436e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7820e-10, dtype=torch.float64)
secont condition:: tensor(4.7820e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4495e-10, dtype=torch.float64)
secont condition:: tensor(3.4495e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8129e-10, dtype=torch.float64)
secont condition:: tensor(1.8129e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3571e-10, dtype=torch.float64)
secont condition:: tensor(2.3571e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5547e-12, dtype=torch.float64)
secont condition:: tensor(1.5547e-12, dtype=torch.float64)
curr_secont condition:: tensor(2.2405e-10, dtype=torch.float64)
secont condition:: tensor(2.2405e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8679e-10, dtype=torch.float64)
secont condition:: tensor(2.8679e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5224e-10, dtype=torch.float64)
secont condition:: tensor(2.5224e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2804e-10, dtype=torch.float64)
secont condition:: tensor(1.2804e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1139e-10, dtype=torch.float64)
secont condition:: tensor(4.1139e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.0056e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2039e-09, dtype=torch.float64)
secont condition:: tensor(3.2039e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1523e-09, dtype=torch.float64)
secont condition:: tensor(1.1523e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0401e-09, dtype=torch.float64)
secont condition:: tensor(1.0401e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6537e-09, dtype=torch.float64)
secont condition:: tensor(3.6537e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0958e-09, dtype=torch.float64)
secont condition:: tensor(1.0958e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9803e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8291e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4429e-08, dtype=torch.float64)
secont condition:: tensor(6.4429e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7045e-09, dtype=torch.float64)
secont condition:: tensor(2.7045e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7790e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5117e-09, dtype=torch.float64)
secont condition:: tensor(3.5117e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.891744613647461
curr_diff: 0 tensor(2.2672e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9020e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9290e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5580e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4610e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.9886e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.8635e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7998e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2427e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.2193e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.1097e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.8844e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5294e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.1790e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.9589e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(6.0328e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.1803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.5364e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2068e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2911e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.5538e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.8243e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966300
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.205195
Train - Epoch 0, Batch: 10, Loss: 0.146434
Test Avg. Loss: 0.000039, Accuracy: 0.963500
Train - Epoch 1, Batch: 0, Loss: 0.152701
Train - Epoch 1, Batch: 10, Loss: 0.162433
Test Avg. Loss: 0.000038, Accuracy: 0.964200
Train - Epoch 2, Batch: 0, Loss: 0.156759
Train - Epoch 2, Batch: 10, Loss: 0.137408
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 3, Batch: 0, Loss: 0.159596
Train - Epoch 3, Batch: 10, Loss: 0.126558
Test Avg. Loss: 0.000037, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.133573
Train - Epoch 4, Batch: 10, Loss: 0.147573
Test Avg. Loss: 0.000037, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.148336
Train - Epoch 5, Batch: 10, Loss: 0.146548
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 6, Batch: 0, Loss: 0.143362
Train - Epoch 6, Batch: 10, Loss: 0.131898
Test Avg. Loss: 0.000037, Accuracy: 0.965900
Train - Epoch 7, Batch: 0, Loss: 0.144246
Train - Epoch 7, Batch: 10, Loss: 0.146671
Test Avg. Loss: 0.000037, Accuracy: 0.965600
training_time:: 16.31563901901245
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.13808274269104
time_baseline:: 12.155531406402588
curr_diff: 0 tensor(5.9026e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.4468e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5317e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.7427e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2669e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.4701e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3417e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.3604e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.6503e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0333e-33, dtype=torch.float64)
secont condition:: tensor(9.0333e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.3889e-32, dtype=torch.float64)
secont condition:: tensor(1.3889e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8514e-10, dtype=torch.float64)
secont condition:: tensor(4.8514e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4675e-10, dtype=torch.float64)
secont condition:: tensor(2.4675e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1207e-10, dtype=torch.float64)
secont condition:: tensor(9.1207e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0114e-10, dtype=torch.float64)
secont condition:: tensor(3.0114e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8041e-10, dtype=torch.float64)
secont condition:: tensor(3.8041e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3142e-10, dtype=torch.float64)
secont condition:: tensor(1.3142e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6128e-10, dtype=torch.float64)
secont condition:: tensor(8.6128e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.2215e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7321e-10, dtype=torch.float64)
secont condition:: tensor(2.7321e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1999e-10, dtype=torch.float64)
secont condition:: tensor(1.1999e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0286e-10, dtype=torch.float64)
secont condition:: tensor(1.0286e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5616e-09, dtype=torch.float64)
secont condition:: tensor(1.5616e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2207e-10, dtype=torch.float64)
secont condition:: tensor(3.2207e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1091e-09, dtype=torch.float64)
secont condition:: tensor(2.1091e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1262e-10, dtype=torch.float64)
secont condition:: tensor(2.1262e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1936e-10, dtype=torch.float64)
secont condition:: tensor(9.1936e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8831e-11, dtype=torch.float64)
secont condition:: tensor(1.8831e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.5047e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5861e-10, dtype=torch.float64)
secont condition:: tensor(2.5861e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5022e-10, dtype=torch.float64)
secont condition:: tensor(1.5022e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.6695e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3428e-10, dtype=torch.float64)
secont condition:: tensor(3.3428e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.0805e-11, dtype=torch.float64)
secont condition:: tensor(6.0805e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5629e-10, dtype=torch.float64)
secont condition:: tensor(2.5629e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1964e-10, dtype=torch.float64)
secont condition:: tensor(2.1964e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.1400e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0491e-10, dtype=torch.float64)
secont condition:: tensor(4.0491e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0228e-10, dtype=torch.float64)
secont condition:: tensor(3.0228e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.5802e-14, dtype=torch.float64)
curr_secont condition:: tensor(1.5225e-09, dtype=torch.float64)
secont condition:: tensor(1.5225e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1017e-10, dtype=torch.float64)
secont condition:: tensor(1.1017e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6811e-09, dtype=torch.float64)
secont condition:: tensor(4.6811e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5146e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.4033e-09, dtype=torch.float64)
secont condition:: tensor(1.4033e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7285e-10, dtype=torch.float64)
secont condition:: tensor(9.7285e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3277e-10, dtype=torch.float64)
secont condition:: tensor(2.3277e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6138e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.6986e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7187e-11, dtype=torch.float64)
secont condition:: tensor(7.7187e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9145e-10, dtype=torch.float64)
secont condition:: tensor(1.9145e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3761e-10, dtype=torch.float64)
secont condition:: tensor(2.3761e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.7556e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9904e-09, dtype=torch.float64)
secont condition:: tensor(4.9904e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0593e-10, dtype=torch.float64)
secont condition:: tensor(6.0593e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8762e-09, dtype=torch.float64)
secont condition:: tensor(2.8762e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0607e-10, dtype=torch.float64)
secont condition:: tensor(8.0607e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4831e-11, dtype=torch.float64)
secont condition:: tensor(5.4831e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4523e-10, dtype=torch.float64)
secont condition:: tensor(6.4523e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6681e-10, dtype=torch.float64)
secont condition:: tensor(6.6681e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6339e-11, dtype=torch.float64)
secont condition:: tensor(3.6339e-11, dtype=torch.float64)
curr_secont condition:: tensor(-6.5280e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3469e-11, dtype=torch.float64)
secont condition:: tensor(7.3469e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.4048e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1837e-09, dtype=torch.float64)
secont condition:: tensor(1.1837e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0597e-09, dtype=torch.float64)
secont condition:: tensor(1.0597e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0525e-10, dtype=torch.float64)
secont condition:: tensor(6.0525e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6714e-10, dtype=torch.float64)
secont condition:: tensor(6.6714e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6375e-10, dtype=torch.float64)
secont condition:: tensor(3.6375e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5946e-10, dtype=torch.float64)
secont condition:: tensor(3.5946e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2184e-10, dtype=torch.float64)
secont condition:: tensor(8.2184e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4108e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.0022e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0167e-09, dtype=torch.float64)
secont condition:: tensor(1.0167e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4515e-10, dtype=torch.float64)
secont condition:: tensor(4.4515e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8817e-10, dtype=torch.float64)
secont condition:: tensor(5.8817e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8522e-10, dtype=torch.float64)
secont condition:: tensor(4.8522e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5219e-10, dtype=torch.float64)
secont condition:: tensor(1.5219e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6248e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2141e-10, dtype=torch.float64)
secont condition:: tensor(5.2141e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0542e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.1900e-11, dtype=torch.float64)
curr_secont condition:: tensor(-9.2243e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.4512e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5111e-09, dtype=torch.float64)
secont condition:: tensor(1.5111e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7314e-10, dtype=torch.float64)
secont condition:: tensor(8.7314e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.0778e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2125e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5622e-10, dtype=torch.float64)
secont condition:: tensor(7.5622e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4110e-10, dtype=torch.float64)
secont condition:: tensor(3.4110e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0500e-10, dtype=torch.float64)
secont condition:: tensor(4.0500e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1857e-10, dtype=torch.float64)
secont condition:: tensor(3.1857e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.806779146194458
curr_diff: 0 tensor(3.6045e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2418e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5635e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.6444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.5269e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.7582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.1616e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.9566e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8356e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.4670e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(7.0186e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6488e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4948e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.0792e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.1933e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1156e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0843e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.3831e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.9892e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.206528
Train - Epoch 0, Batch: 10, Loss: 0.159639
Test Avg. Loss: 0.000039, Accuracy: 0.963300
Train - Epoch 1, Batch: 0, Loss: 0.141935
Train - Epoch 1, Batch: 10, Loss: 0.167388
Test Avg. Loss: 0.000038, Accuracy: 0.963900
Train - Epoch 2, Batch: 0, Loss: 0.156490
Train - Epoch 2, Batch: 10, Loss: 0.147940
Test Avg. Loss: 0.000037, Accuracy: 0.963300
Train - Epoch 3, Batch: 0, Loss: 0.139318
Train - Epoch 3, Batch: 10, Loss: 0.152740
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 4, Batch: 0, Loss: 0.135651
Train - Epoch 4, Batch: 10, Loss: 0.140476
Test Avg. Loss: 0.000037, Accuracy: 0.964600
Train - Epoch 5, Batch: 0, Loss: 0.141513
Train - Epoch 5, Batch: 10, Loss: 0.134790
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 6, Batch: 0, Loss: 0.141555
Train - Epoch 6, Batch: 10, Loss: 0.141716
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 7, Batch: 0, Loss: 0.154415
Train - Epoch 7, Batch: 10, Loss: 0.131818
Test Avg. Loss: 0.000037, Accuracy: 0.965200
training_time:: 16.333526849746704
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.178794860839844
time_baseline:: 12.196735620498657
curr_diff: 0 tensor(6.5947e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8660e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.0409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4851e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9674e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.9504e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.6033e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9189e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1041e-32, dtype=torch.float64)
secont condition:: tensor(1.1041e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9145e-32, dtype=torch.float64)
secont condition:: tensor(1.9145e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0383e-32, dtype=torch.float64)
secont condition:: tensor(2.0383e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.4354e-32, dtype=torch.float64)
secont condition:: tensor(2.4354e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0941e-32, dtype=torch.float64)
secont condition:: tensor(3.0941e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.7701e-10, dtype=torch.float64)
secont condition:: tensor(3.7701e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4237e-10, dtype=torch.float64)
secont condition:: tensor(2.4237e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0845e-10, dtype=torch.float64)
secont condition:: tensor(2.0845e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1061e-10, dtype=torch.float64)
secont condition:: tensor(4.1061e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2078e-10, dtype=torch.float64)
secont condition:: tensor(1.2078e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2175e-10, dtype=torch.float64)
secont condition:: tensor(2.2175e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9603e-11, dtype=torch.float64)
secont condition:: tensor(5.9603e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3580e-10, dtype=torch.float64)
secont condition:: tensor(2.3580e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6820e-11, dtype=torch.float64)
secont condition:: tensor(5.6820e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7763e-11, dtype=torch.float64)
secont condition:: tensor(6.7763e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.9939e-11, dtype=torch.float64)
secont condition:: tensor(4.9939e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1303e-11, dtype=torch.float64)
secont condition:: tensor(3.1303e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.5599e-11, dtype=torch.float64)
secont condition:: tensor(5.5599e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6507e-10, dtype=torch.float64)
secont condition:: tensor(1.6507e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7708e-10, dtype=torch.float64)
secont condition:: tensor(2.7708e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6448e-11, dtype=torch.float64)
secont condition:: tensor(8.6448e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.9584e-11, dtype=torch.float64)
secont condition:: tensor(5.9584e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4184e-10, dtype=torch.float64)
secont condition:: tensor(1.4184e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6423e-11, dtype=torch.float64)
secont condition:: tensor(9.6423e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4196e-11, dtype=torch.float64)
secont condition:: tensor(7.4196e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.4701e-11, dtype=torch.float64)
secont condition:: tensor(7.4701e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.2763e-11, dtype=torch.float64)
secont condition:: tensor(7.2763e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.8050e-11, dtype=torch.float64)
secont condition:: tensor(6.8050e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.1888e-11, dtype=torch.float64)
secont condition:: tensor(5.1888e-11, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5809e-11, dtype=torch.float64)
secont condition:: tensor(5.5809e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8565e-10, dtype=torch.float64)
secont condition:: tensor(1.8565e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3996e-10, dtype=torch.float64)
secont condition:: tensor(1.3996e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0187e-10, dtype=torch.float64)
secont condition:: tensor(1.0187e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8703e-11, dtype=torch.float64)
secont condition:: tensor(7.8703e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7695e-10, dtype=torch.float64)
secont condition:: tensor(1.7695e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.2271e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.2367e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.2237e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1306e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3793e-10, dtype=torch.float64)
secont condition:: tensor(9.3793e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2513e-08, dtype=torch.float64)
secont condition:: tensor(1.2513e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7712e-10, dtype=torch.float64)
secont condition:: tensor(7.7712e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2336e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9276e-08, dtype=torch.float64)
secont condition:: tensor(1.9276e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6057e-10, dtype=torch.float64)
secont condition:: tensor(5.6057e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7531e-09, dtype=torch.float64)
secont condition:: tensor(1.7531e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8077e-09, dtype=torch.float64)
secont condition:: tensor(5.8077e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8990e-09, dtype=torch.float64)
secont condition:: tensor(5.8990e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6742e-09, dtype=torch.float64)
secont condition:: tensor(1.6742e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6614e-10, dtype=torch.float64)
secont condition:: tensor(9.6614e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5202e-09, dtype=torch.float64)
secont condition:: tensor(2.5202e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3508e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2298e-09, dtype=torch.float64)
secont condition:: tensor(1.2298e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0102e-10, dtype=torch.float64)
secont condition:: tensor(7.0102e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1129e-09, dtype=torch.float64)
secont condition:: tensor(1.1129e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8080e-10, dtype=torch.float64)
secont condition:: tensor(5.8080e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7657e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.9000e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9039e-09, dtype=torch.float64)
secont condition:: tensor(1.9039e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.8559e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7870e-09, dtype=torch.float64)
secont condition:: tensor(1.7870e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.5951e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5834e-10, dtype=torch.float64)
secont condition:: tensor(6.5834e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.0276e-09, dtype=torch.float64)
secont condition:: tensor(7.0276e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9953e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0621e-09, dtype=torch.float64)
secont condition:: tensor(3.0621e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7569e-08, dtype=torch.float64)
secont condition:: tensor(3.7569e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1131e-10, dtype=torch.float64)
secont condition:: tensor(8.1131e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1689e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6258e-09, dtype=torch.float64)
secont condition:: tensor(1.6258e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7192e-09, dtype=torch.float64)
secont condition:: tensor(3.7192e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.1241e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6906e-10, dtype=torch.float64)
secont condition:: tensor(5.6906e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7741e-09, dtype=torch.float64)
secont condition:: tensor(6.7741e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6496e-10, dtype=torch.float64)
secont condition:: tensor(8.6496e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.4487e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7712e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2075e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7442e-09, dtype=torch.float64)
secont condition:: tensor(8.7442e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0146e-09, dtype=torch.float64)
secont condition:: tensor(2.0146e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7050e-09, dtype=torch.float64)
secont condition:: tensor(1.7050e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4628e-09, dtype=torch.float64)
secont condition:: tensor(2.4628e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8508e-09, dtype=torch.float64)
secont condition:: tensor(4.8508e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6785e-08, dtype=torch.float64)
secont condition:: tensor(1.6785e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.149255275726318
curr_diff: 0 tensor(3.2804e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1077e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3523e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5373e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.4989e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4608e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.2669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1699e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.1793e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.2833e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(5.8715e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2128e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.2683e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5175e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.3342e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9155e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.4388e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3130e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.7108e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.210933
Train - Epoch 0, Batch: 10, Loss: 0.152653
Test Avg. Loss: 0.000039, Accuracy: 0.963400
Train - Epoch 1, Batch: 0, Loss: 0.147929
Train - Epoch 1, Batch: 10, Loss: 0.151263
Test Avg. Loss: 0.000038, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.158923
Train - Epoch 2, Batch: 10, Loss: 0.132547
Test Avg. Loss: 0.000037, Accuracy: 0.963400
Train - Epoch 3, Batch: 0, Loss: 0.138739
Train - Epoch 3, Batch: 10, Loss: 0.136739
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 4, Batch: 0, Loss: 0.152090
Train - Epoch 4, Batch: 10, Loss: 0.145198
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 5, Batch: 0, Loss: 0.137516
Train - Epoch 5, Batch: 10, Loss: 0.143834
Test Avg. Loss: 0.000037, Accuracy: 0.964100
Train - Epoch 6, Batch: 0, Loss: 0.142354
Train - Epoch 6, Batch: 10, Loss: 0.147892
Test Avg. Loss: 0.000037, Accuracy: 0.966200
Train - Epoch 7, Batch: 0, Loss: 0.144019
Train - Epoch 7, Batch: 10, Loss: 0.145154
Test Avg. Loss: 0.000037, Accuracy: 0.965500
training_time:: 16.411186933517456
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.152405738830566
time_baseline:: 12.169849157333374
curr_diff: 0 tensor(1.1230e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3923e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8884e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.4696e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3821e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.9252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4767e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2528e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.8343e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965500
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1650e-32, dtype=torch.float64)
secont condition:: tensor(1.1650e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.1283e-10, dtype=torch.float64)
secont condition:: tensor(9.1283e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2951e-10, dtype=torch.float64)
secont condition:: tensor(4.2951e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7956e-10, dtype=torch.float64)
secont condition:: tensor(2.7956e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8578e-10, dtype=torch.float64)
secont condition:: tensor(2.8578e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0074e-10, dtype=torch.float64)
secont condition:: tensor(2.0074e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0614e-10, dtype=torch.float64)
secont condition:: tensor(3.0614e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0757e-10, dtype=torch.float64)
secont condition:: tensor(2.0757e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.4124e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.2797e-11, dtype=torch.float64)
secont condition:: tensor(5.2797e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.2040e-11, dtype=torch.float64)
secont condition:: tensor(4.2040e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.9344e-10, dtype=torch.float64)
secont condition:: tensor(6.9344e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5925e-11, dtype=torch.float64)
secont condition:: tensor(7.5925e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0303e-10, dtype=torch.float64)
secont condition:: tensor(3.0303e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0503e-10, dtype=torch.float64)
secont condition:: tensor(3.0503e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8914e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.6335e-12, dtype=torch.float64)
curr_secont condition:: tensor(1.4833e-10, dtype=torch.float64)
secont condition:: tensor(1.4833e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1304e-11, dtype=torch.float64)
secont condition:: tensor(5.1304e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.0837e-11, dtype=torch.float64)
secont condition:: tensor(6.0837e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8024e-11, dtype=torch.float64)
secont condition:: tensor(5.8024e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5717e-10, dtype=torch.float64)
secont condition:: tensor(1.5717e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.8187e-11, dtype=torch.float64)
secont condition:: tensor(8.8187e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.8035e-11, dtype=torch.float64)
secont condition:: tensor(5.8035e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4761e-11, dtype=torch.float64)
secont condition:: tensor(5.4761e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.8993e-10, dtype=torch.float64)
secont condition:: tensor(3.8993e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1471e-10, dtype=torch.float64)
secont condition:: tensor(1.1471e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2425e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0279e-10, dtype=torch.float64)
secont condition:: tensor(1.0279e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6899e-11, dtype=torch.float64)
secont condition:: tensor(4.6899e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1805e-10, dtype=torch.float64)
secont condition:: tensor(1.1805e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.6673e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0671e-10, dtype=torch.float64)
secont condition:: tensor(9.0671e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7218e-10, dtype=torch.float64)
secont condition:: tensor(1.7218e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8069e-10, dtype=torch.float64)
secont condition:: tensor(2.8069e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.2204e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0073e-12, dtype=torch.float64)
secont condition:: tensor(1.0073e-12, dtype=torch.float64)
curr_secont condition:: tensor(8.4093e-11, dtype=torch.float64)
secont condition:: tensor(8.4093e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.4166e-09, dtype=torch.float64)
secont condition:: tensor(1.4166e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5558e-06, dtype=torch.float64)
secont condition:: tensor(3.5558e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8209e-10, dtype=torch.float64)
secont condition:: tensor(2.8209e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4730e-10, dtype=torch.float64)
secont condition:: tensor(3.4730e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.9033e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0318e-09, dtype=torch.float64)
secont condition:: tensor(1.0318e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-10, dtype=torch.float64)
secont condition:: tensor(3.0304e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6020e-10, dtype=torch.float64)
secont condition:: tensor(1.6020e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7432e-10, dtype=torch.float64)
secont condition:: tensor(1.7432e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4339e-10, dtype=torch.float64)
secont condition:: tensor(1.4339e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.9500e-10, dtype=torch.float64)
secont condition:: tensor(4.9500e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1039e-10, dtype=torch.float64)
secont condition:: tensor(2.1039e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.1256e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3994e-10, dtype=torch.float64)
secont condition:: tensor(5.3994e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1056e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6892e-10, dtype=torch.float64)
secont condition:: tensor(2.6892e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.2410e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7493e-10, dtype=torch.float64)
secont condition:: tensor(7.7493e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3158e-10, dtype=torch.float64)
secont condition:: tensor(4.3158e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6279e-12, dtype=torch.float64)
secont condition:: tensor(7.6279e-12, dtype=torch.float64)
curr_secont condition:: tensor(-1.4792e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9041e-10, dtype=torch.float64)
secont condition:: tensor(4.9041e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3169e-11, dtype=torch.float64)
secont condition:: tensor(5.3169e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2086e-10, dtype=torch.float64)
secont condition:: tensor(3.2086e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.7856e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4944e-09, dtype=torch.float64)
secont condition:: tensor(1.4944e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9332e-09, dtype=torch.float64)
secont condition:: tensor(1.9332e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.4590e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0910e-09, dtype=torch.float64)
secont condition:: tensor(1.0910e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7582e-09, dtype=torch.float64)
secont condition:: tensor(2.7582e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0416e-10, dtype=torch.float64)
secont condition:: tensor(3.0416e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5714e-09, dtype=torch.float64)
secont condition:: tensor(2.5714e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.9680e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7605e-10, dtype=torch.float64)
secont condition:: tensor(5.7605e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0358e-09, dtype=torch.float64)
secont condition:: tensor(1.0358e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.9504e-11, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2353e-10, dtype=torch.float64)
secont condition:: tensor(4.2353e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7677e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7542e-10, dtype=torch.float64)
secont condition:: tensor(3.7542e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2819e-10, dtype=torch.float64)
secont condition:: tensor(7.2819e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8587e-09, dtype=torch.float64)
secont condition:: tensor(7.8587e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1542e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2122e-09, dtype=torch.float64)
secont condition:: tensor(2.2122e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.66447138786316
curr_diff: 0 tensor(4.3246e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6156e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.2170e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.8672e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2355e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.6083e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4708e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5916e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1894e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0956e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6762e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4752e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3210e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.8575e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.0130e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.1319e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.5283e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0178e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5226e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.4649e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215648
Train - Epoch 0, Batch: 10, Loss: 0.141655
Test Avg. Loss: 0.000039, Accuracy: 0.963000
Train - Epoch 1, Batch: 0, Loss: 0.156810
Train - Epoch 1, Batch: 10, Loss: 0.160627
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 2, Batch: 0, Loss: 0.144412
Train - Epoch 2, Batch: 10, Loss: 0.146059
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.141278
Train - Epoch 3, Batch: 10, Loss: 0.141643
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 4, Batch: 0, Loss: 0.152234
Train - Epoch 4, Batch: 10, Loss: 0.163868
Test Avg. Loss: 0.000037, Accuracy: 0.965100
Train - Epoch 5, Batch: 0, Loss: 0.147447
Train - Epoch 5, Batch: 10, Loss: 0.139553
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 6, Batch: 0, Loss: 0.155448
Train - Epoch 6, Batch: 10, Loss: 0.147938
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 7, Batch: 0, Loss: 0.140406
Train - Epoch 7, Batch: 10, Loss: 0.148971
Test Avg. Loss: 0.000037, Accuracy: 0.965100
training_time:: 16.503974676132202
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.17963981628418
time_baseline:: 12.19724178314209
curr_diff: 0 tensor(6.3644e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3316e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.9551e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6763e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.5989e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0319e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.8617e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0321e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7111e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.0409e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 3
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2427e-33, dtype=torch.float64)
secont condition:: tensor(6.2427e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2521e-32, dtype=torch.float64)
secont condition:: tensor(1.2521e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0498e-32, dtype=torch.float64)
secont condition:: tensor(2.0498e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8722e-32, dtype=torch.float64)
secont condition:: tensor(2.8722e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6575e-32, dtype=torch.float64)
secont condition:: tensor(3.6575e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1638e-32, dtype=torch.float64)
secont condition:: tensor(5.1638e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.4780e-32, dtype=torch.float64)
secont condition:: tensor(5.4780e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.4788e-32, dtype=torch.float64)
secont condition:: tensor(8.4788e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.2092e-12, dtype=torch.float64)
secont condition:: tensor(7.2092e-12, dtype=torch.float64)
curr_secont condition:: tensor(5.5088e-12, dtype=torch.float64)
secont condition:: tensor(5.5088e-12, dtype=torch.float64)
curr_secont condition:: tensor(7.3138e-12, dtype=torch.float64)
secont condition:: tensor(7.3138e-12, dtype=torch.float64)
curr_secont condition:: tensor(9.0136e-11, dtype=torch.float64)
secont condition:: tensor(9.0136e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.8568e-11, dtype=torch.float64)
secont condition:: tensor(8.8568e-11, dtype=torch.float64)
curr_secont condition:: tensor(8.9662e-11, dtype=torch.float64)
secont condition:: tensor(8.9662e-11, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5283e-11, dtype=torch.float64)
secont condition:: tensor(4.5283e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.0787e-10, dtype=torch.float64)
secont condition:: tensor(1.0787e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6601e-11, dtype=torch.float64)
secont condition:: tensor(5.6601e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.9463e-11, dtype=torch.float64)
secont condition:: tensor(3.9463e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.3211e-11, dtype=torch.float64)
secont condition:: tensor(5.3211e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.2805e-11, dtype=torch.float64)
secont condition:: tensor(2.2805e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8994e-10, dtype=torch.float64)
secont condition:: tensor(1.8994e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2158e-10, dtype=torch.float64)
secont condition:: tensor(1.2158e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.8575e-11, dtype=torch.float64)
secont condition:: tensor(6.8575e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.0179e-11, dtype=torch.float64)
secont condition:: tensor(9.0179e-11, dtype=torch.float64)
curr_secont condition:: tensor(7.7779e-11, dtype=torch.float64)
secont condition:: tensor(7.7779e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.9332e-11, dtype=torch.float64)
secont condition:: tensor(9.9332e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.7633e-11, dtype=torch.float64)
secont condition:: tensor(9.7633e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.4718e-11, dtype=torch.float64)
secont condition:: tensor(6.4718e-11, dtype=torch.float64)
curr_secont condition:: tensor(-7.9576e-12, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6202e-11, dtype=torch.float64)
secont condition:: tensor(6.6202e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.5653e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.4113e-11, dtype=torch.float64)
secont condition:: tensor(5.4113e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6302e-09, dtype=torch.float64)
secont condition:: tensor(1.6302e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7695e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0751e-11, dtype=torch.float64)
secont condition:: tensor(3.0751e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.5056e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0129e-10, dtype=torch.float64)
secont condition:: tensor(1.0129e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4626e-10, dtype=torch.float64)
secont condition:: tensor(2.4626e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4950e-10, dtype=torch.float64)
secont condition:: tensor(1.4950e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2242e-10, dtype=torch.float64)
secont condition:: tensor(2.2242e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7663e-10, dtype=torch.float64)
secont condition:: tensor(3.7663e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.4499e-11, dtype=torch.float64)
secont condition:: tensor(7.4499e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.2571e-10, dtype=torch.float64)
secont condition:: tensor(3.2571e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7227e-11, dtype=torch.float64)
secont condition:: tensor(8.7227e-11, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9940e-11, dtype=torch.float64)
secont condition:: tensor(6.9940e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6237e-10, dtype=torch.float64)
secont condition:: tensor(1.6237e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0574e-10, dtype=torch.float64)
secont condition:: tensor(1.0574e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0863e-11, dtype=torch.float64)
secont condition:: tensor(5.0863e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.7971e-11, dtype=torch.float64)
secont condition:: tensor(6.7971e-11, dtype=torch.float64)
curr_secont condition:: tensor(-1.1534e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2838e-10, dtype=torch.float64)
secont condition:: tensor(1.2838e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.5537e-10, dtype=torch.float64)
secont condition:: tensor(5.5537e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7421e-10, dtype=torch.float64)
secont condition:: tensor(3.7421e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7701e-10, dtype=torch.float64)
secont condition:: tensor(3.7701e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.6401e-11, dtype=torch.float64)
curr_secont condition:: tensor(-5.4302e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.5798e-10, dtype=torch.float64)
secont condition:: tensor(2.5798e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0765e-10, dtype=torch.float64)
secont condition:: tensor(1.0765e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.4203e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9724e-10, dtype=torch.float64)
secont condition:: tensor(3.9724e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.8695e-10, dtype=torch.float64)
secont condition:: tensor(5.8695e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4528e-09, dtype=torch.float64)
secont condition:: tensor(1.4528e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6157e-09, dtype=torch.float64)
secont condition:: tensor(2.6157e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7101e-10, dtype=torch.float64)
secont condition:: tensor(3.7101e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5143e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5198e-09, dtype=torch.float64)
secont condition:: tensor(3.5198e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7395e-10, dtype=torch.float64)
secont condition:: tensor(2.7395e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4857e-10, dtype=torch.float64)
secont condition:: tensor(4.4857e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6773e-09, dtype=torch.float64)
secont condition:: tensor(4.6773e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6138e-10, dtype=torch.float64)
secont condition:: tensor(2.6138e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.3140e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.1452e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5549e-10, dtype=torch.float64)
secont condition:: tensor(2.5549e-10, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0591e-10, dtype=torch.float64)
secont condition:: tensor(8.0591e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1054e-09, dtype=torch.float64)
secont condition:: tensor(1.1054e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0212e-09, dtype=torch.float64)
secont condition:: tensor(2.0212e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9186e-10, dtype=torch.float64)
secont condition:: tensor(6.9186e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8402e-09, dtype=torch.float64)
secont condition:: tensor(1.8402e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1590e-10, dtype=torch.float64)
secont condition:: tensor(1.1590e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.1223e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.9816e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6838e-10, dtype=torch.float64)
secont condition:: tensor(2.6838e-10, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.917768716812134
curr_diff: 0 tensor(3.1288e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8489e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.5124e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1105e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.8110e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9147e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.8279e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8810e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4431e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.0650e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.6305e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(6.8589e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9994e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0258e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2790e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.8512e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.8942e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.5832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.8257e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0756e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.4803e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.6265e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216750
Train - Epoch 0, Batch: 10, Loss: 0.179317
Train - Epoch 0, Batch: 20, Loss: 0.139822
Train - Epoch 0, Batch: 30, Loss: 0.145532
Train - Epoch 0, Batch: 40, Loss: 0.138432
Train - Epoch 0, Batch: 50, Loss: 0.139090
Test Avg. Loss: 0.000131, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.146821
Train - Epoch 1, Batch: 10, Loss: 0.143885
Train - Epoch 1, Batch: 20, Loss: 0.136575
Train - Epoch 1, Batch: 30, Loss: 0.135778
Train - Epoch 1, Batch: 40, Loss: 0.155975
Train - Epoch 1, Batch: 50, Loss: 0.151346
Test Avg. Loss: 0.000132, Accuracy: 0.966900
training_time:: 5.254956960678101
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.2423670291900635
time_baseline:: 4.247231721878052
curr_diff: 0 tensor(4.1832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2417e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1536e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5774e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.2727e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5516e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000132, Accuracy: 0.966900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8511e-33, dtype=torch.float64)
secont condition:: tensor(8.8511e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2772e-32, dtype=torch.float64)
secont condition:: tensor(1.2772e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.4612e-32, dtype=torch.float64)
secont condition:: tensor(2.4612e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9254e-32, dtype=torch.float64)
secont condition:: tensor(1.9254e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9843e-32, dtype=torch.float64)
secont condition:: tensor(4.9843e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.6717e-32, dtype=torch.float64)
secont condition:: tensor(6.6717e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.2348e-32, dtype=torch.float64)
secont condition:: tensor(8.2348e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.8486e-32, dtype=torch.float64)
secont condition:: tensor(5.8486e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8836e-09, dtype=torch.float64)
secont condition:: tensor(2.8836e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6982e-10, dtype=torch.float64)
secont condition:: tensor(9.6982e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.5741e-10, dtype=torch.float64)
secont condition:: tensor(7.5741e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5798e-10, dtype=torch.float64)
secont condition:: tensor(2.5798e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5749e-09, dtype=torch.float64)
secont condition:: tensor(1.5749e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6372e-10, dtype=torch.float64)
secont condition:: tensor(9.6372e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.0050e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8843e-11, dtype=torch.float64)
secont condition:: tensor(9.8843e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3257e-09, dtype=torch.float64)
secont condition:: tensor(1.3257e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2369e-10, dtype=torch.float64)
secont condition:: tensor(6.2369e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3870e-10, dtype=torch.float64)
secont condition:: tensor(2.3870e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2201e-09, dtype=torch.float64)
secont condition:: tensor(6.2201e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3073e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7007e-09, dtype=torch.float64)
secont condition:: tensor(3.7007e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.5541e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9306e-10, dtype=torch.float64)
secont condition:: tensor(4.9306e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.3545e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5681e-08, dtype=torch.float64)
secont condition:: tensor(1.5681e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4989e-09, dtype=torch.float64)
secont condition:: tensor(1.4989e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0291e-10, dtype=torch.float64)
secont condition:: tensor(7.0291e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9964e-10, dtype=torch.float64)
secont condition:: tensor(5.9964e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5943e-10, dtype=torch.float64)
secont condition:: tensor(6.5943e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.9714e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2956e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1325e-09, dtype=torch.float64)
secont condition:: tensor(8.1325e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9701e-09, dtype=torch.float64)
secont condition:: tensor(2.9701e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4813e-09, dtype=torch.float64)
secont condition:: tensor(3.4813e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.7542e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.1149e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6392e-08, dtype=torch.float64)
secont condition:: tensor(2.6392e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0308e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9206e-08, dtype=torch.float64)
secont condition:: tensor(3.9206e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4580e-08, dtype=torch.float64)
secont condition:: tensor(3.4580e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2170e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.2872e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6856e-07, dtype=torch.float64)
secont condition:: tensor(1.6856e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0774e-08, dtype=torch.float64)
secont condition:: tensor(1.0774e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5909e-08, dtype=torch.float64)
secont condition:: tensor(5.5909e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.6379e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1570e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1045e-08, dtype=torch.float64)
secont condition:: tensor(9.1045e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9738e-08, dtype=torch.float64)
secont condition:: tensor(1.9738e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4768e-08, dtype=torch.float64)
secont condition:: tensor(1.4768e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4177e-08, dtype=torch.float64)
secont condition:: tensor(4.4177e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.4843e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8511e-08, dtype=torch.float64)
secont condition:: tensor(5.8511e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.2551e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0490e-08, dtype=torch.float64)
secont condition:: tensor(2.0490e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5916e-08, dtype=torch.float64)
secont condition:: tensor(7.5916e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5641e-08, dtype=torch.float64)
secont condition:: tensor(1.5641e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2834e-08, dtype=torch.float64)
secont condition:: tensor(1.2834e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3703e-08, dtype=torch.float64)
secont condition:: tensor(4.3703e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2433e-08, dtype=torch.float64)
secont condition:: tensor(5.2433e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5860e-08, dtype=torch.float64)
secont condition:: tensor(3.5860e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.8688e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8747e-08, dtype=torch.float64)
secont condition:: tensor(4.8747e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5428e-07, dtype=torch.float64)
secont condition:: tensor(1.5428e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0263e-08, dtype=torch.float64)
secont condition:: tensor(7.0263e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9047e-08, dtype=torch.float64)
secont condition:: tensor(2.9047e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5024e-08, dtype=torch.float64)
secont condition:: tensor(5.5024e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1263e-07, dtype=torch.float64)
secont condition:: tensor(1.1263e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6375e-09, dtype=torch.float64)
secont condition:: tensor(9.6375e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.4328e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5856e-08, dtype=torch.float64)
secont condition:: tensor(1.5856e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4377e-08, dtype=torch.float64)
secont condition:: tensor(2.4377e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0844e-08, dtype=torch.float64)
secont condition:: tensor(2.0844e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5234e-08, dtype=torch.float64)
secont condition:: tensor(1.5234e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0250e-09, dtype=torch.float64)
secont condition:: tensor(6.0250e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7676e-09, dtype=torch.float64)
secont condition:: tensor(3.7676e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6731e-08, dtype=torch.float64)
secont condition:: tensor(1.6731e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7216e-08, dtype=torch.float64)
secont condition:: tensor(2.7216e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.729800224304199
curr_diff: 0 tensor(2.2130e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0933e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.8404e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.2191e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.2338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.6704e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1565e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.0130e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.8023e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7697e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0145e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.4866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.7507e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1072e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9599e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.966200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.192020
Train - Epoch 0, Batch: 10, Loss: 0.155524
Train - Epoch 0, Batch: 20, Loss: 0.147902
Train - Epoch 0, Batch: 30, Loss: 0.142575
Train - Epoch 0, Batch: 40, Loss: 0.126351
Train - Epoch 0, Batch: 50, Loss: 0.151109
Test Avg. Loss: 0.000132, Accuracy: 0.962600
Train - Epoch 1, Batch: 0, Loss: 0.144005
Train - Epoch 1, Batch: 10, Loss: 0.151492
Train - Epoch 1, Batch: 20, Loss: 0.143477
Train - Epoch 1, Batch: 30, Loss: 0.133243
Train - Epoch 1, Batch: 40, Loss: 0.129010
Train - Epoch 1, Batch: 50, Loss: 0.147279
Test Avg. Loss: 0.000132, Accuracy: 0.964200
training_time:: 5.276262283325195
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.200965642929077
time_baseline:: 4.20578145980835
curr_diff: 0 tensor(8.0603e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9323e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3331e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5110e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9936e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.0168e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3805e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000132, Accuracy: 0.964200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6725e-33, dtype=torch.float64)
secont condition:: tensor(9.6725e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.3285e-32, dtype=torch.float64)
secont condition:: tensor(1.3285e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.4884e-32, dtype=torch.float64)
secont condition:: tensor(2.4884e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0333e-32, dtype=torch.float64)
secont condition:: tensor(3.0333e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1756e-32, dtype=torch.float64)
secont condition:: tensor(3.1756e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9452e-32, dtype=torch.float64)
secont condition:: tensor(2.9452e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.4506e-32, dtype=torch.float64)
secont condition:: tensor(3.4506e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8464e-32, dtype=torch.float64)
secont condition:: tensor(4.8464e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.0304e-32, dtype=torch.float64)
secont condition:: tensor(5.0304e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.0921e-32, dtype=torch.float64)
secont condition:: tensor(6.0921e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.4915e-32, dtype=torch.float64)
secont condition:: tensor(6.4915e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.6788e-32, dtype=torch.float64)
secont condition:: tensor(7.6788e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.8439e-32, dtype=torch.float64)
secont condition:: tensor(7.8439e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.1920e-32, dtype=torch.float64)
secont condition:: tensor(8.1920e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.2386e-09, dtype=torch.float64)
secont condition:: tensor(4.2386e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7314e-09, dtype=torch.float64)
secont condition:: tensor(1.7314e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8926e-10, dtype=torch.float64)
secont condition:: tensor(8.8926e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6605e-10, dtype=torch.float64)
secont condition:: tensor(7.6605e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4941e-10, dtype=torch.float64)
secont condition:: tensor(5.4941e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1083e-10, dtype=torch.float64)
secont condition:: tensor(3.1083e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1125e-10, dtype=torch.float64)
secont condition:: tensor(4.1125e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.9327e-10, dtype=torch.float64)
secont condition:: tensor(3.9327e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3304e-09, dtype=torch.float64)
secont condition:: tensor(7.3304e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4139e-10, dtype=torch.float64)
secont condition:: tensor(8.4139e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1663e-09, dtype=torch.float64)
secont condition:: tensor(1.1663e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8667e-09, dtype=torch.float64)
secont condition:: tensor(2.8667e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3349e-10, dtype=torch.float64)
secont condition:: tensor(4.3349e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3432e-10, dtype=torch.float64)
secont condition:: tensor(1.3432e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4322e-10, dtype=torch.float64)
secont condition:: tensor(1.4322e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.0360e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6313e-10, dtype=torch.float64)
secont condition:: tensor(5.6313e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.9712e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.7324e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6304e-09, dtype=torch.float64)
secont condition:: tensor(1.6304e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.8597e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1788e-09, dtype=torch.float64)
secont condition:: tensor(5.1788e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.0131e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3718e-09, dtype=torch.float64)
secont condition:: tensor(3.3718e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4748e-09, dtype=torch.float64)
secont condition:: tensor(1.4748e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.9552e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4515e-09, dtype=torch.float64)
secont condition:: tensor(7.4515e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0944e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.1008e-09, dtype=torch.float64)
secont condition:: tensor(5.1008e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8498e-09, dtype=torch.float64)
secont condition:: tensor(5.8498e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8705e-09, dtype=torch.float64)
secont condition:: tensor(1.8705e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0515e-08, dtype=torch.float64)
secont condition:: tensor(1.0515e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1049e-09, dtype=torch.float64)
secont condition:: tensor(2.1049e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6074e-08, dtype=torch.float64)
secont condition:: tensor(1.6074e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8615e-08, dtype=torch.float64)
secont condition:: tensor(1.8615e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5348e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7242e-08, dtype=torch.float64)
secont condition:: tensor(1.7242e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8022e-08, dtype=torch.float64)
secont condition:: tensor(1.8022e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3302e-08, dtype=torch.float64)
secont condition:: tensor(2.3302e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5108e-09, dtype=torch.float64)
secont condition:: tensor(5.5108e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.2264e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2033e-10, dtype=torch.float64)
secont condition:: tensor(8.2033e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9895e-10, dtype=torch.float64)
secont condition:: tensor(1.9895e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3313e-09, dtype=torch.float64)
secont condition:: tensor(3.3313e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2154e-09, dtype=torch.float64)
secont condition:: tensor(3.2154e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3657e-10, dtype=torch.float64)
secont condition:: tensor(1.3657e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6379e-09, dtype=torch.float64)
secont condition:: tensor(1.6379e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1249e-09, dtype=torch.float64)
secont condition:: tensor(2.1249e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6124e-10, dtype=torch.float64)
secont condition:: tensor(9.6124e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.8677e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3541e-08, dtype=torch.float64)
secont condition:: tensor(2.3541e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5116e-08, dtype=torch.float64)
secont condition:: tensor(1.5116e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6821e-08, dtype=torch.float64)
secont condition:: tensor(1.6821e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6080e-08, dtype=torch.float64)
secont condition:: tensor(2.6080e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0542e-08, dtype=torch.float64)
secont condition:: tensor(1.0542e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1997e-09, dtype=torch.float64)
secont condition:: tensor(2.1997e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0708e-09, dtype=torch.float64)
secont condition:: tensor(3.0708e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4506e-10, dtype=torch.float64)
secont condition:: tensor(4.4506e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.5366e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0738e-09, dtype=torch.float64)
secont condition:: tensor(6.0738e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9752e-09, dtype=torch.float64)
secont condition:: tensor(1.9752e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.4940e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0250e-08, dtype=torch.float64)
secont condition:: tensor(3.0250e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.8044e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0702e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9870e-08, dtype=torch.float64)
secont condition:: tensor(3.9870e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.1705e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4378e-07, dtype=torch.float64)
secont condition:: tensor(1.4378e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9256303310394287
curr_diff: 0 tensor(5.5714e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1157e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.0281e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2349e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9264e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.6757e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4641e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.4216e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0025e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.4802e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7609e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.2296e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3060e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2412e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.6009e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.233653
Train - Epoch 0, Batch: 10, Loss: 0.174326
Train - Epoch 0, Batch: 20, Loss: 0.118635
Train - Epoch 0, Batch: 30, Loss: 0.133420
Train - Epoch 0, Batch: 40, Loss: 0.127446
Train - Epoch 0, Batch: 50, Loss: 0.125830
Test Avg. Loss: 0.000131, Accuracy: 0.963600
Train - Epoch 1, Batch: 0, Loss: 0.121012
Train - Epoch 1, Batch: 10, Loss: 0.151865
Train - Epoch 1, Batch: 20, Loss: 0.132706
Train - Epoch 1, Batch: 30, Loss: 0.156938
Train - Epoch 1, Batch: 40, Loss: 0.131290
Train - Epoch 1, Batch: 50, Loss: 0.145385
Test Avg. Loss: 0.000130, Accuracy: 0.965000
training_time:: 5.2342681884765625
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.201725244522095
time_baseline:: 4.2068023681640625
curr_diff: 0 tensor(3.5933e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1714e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0116e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2274e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.3826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.0301e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5938e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5126e-33, dtype=torch.float64)
secont condition:: tensor(7.5126e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.2811e-32, dtype=torch.float64)
secont condition:: tensor(2.2811e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.4513e-32, dtype=torch.float64)
secont condition:: tensor(2.4513e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4353e-32, dtype=torch.float64)
secont condition:: tensor(1.4353e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9774e-09, dtype=torch.float64)
secont condition:: tensor(1.9774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3239e-09, dtype=torch.float64)
secont condition:: tensor(1.3239e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5962e-10, dtype=torch.float64)
secont condition:: tensor(4.5962e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6552e-10, dtype=torch.float64)
secont condition:: tensor(3.6552e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8500e-09, dtype=torch.float64)
secont condition:: tensor(1.8500e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7668e-10, dtype=torch.float64)
secont condition:: tensor(4.7668e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.2737e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6417e-09, dtype=torch.float64)
secont condition:: tensor(1.6417e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.1715e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2918e-10, dtype=torch.float64)
secont condition:: tensor(6.2918e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1875e-09, dtype=torch.float64)
secont condition:: tensor(1.1875e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3773e-10, dtype=torch.float64)
secont condition:: tensor(5.3773e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2410e-10, dtype=torch.float64)
secont condition:: tensor(5.2410e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0162e-09, dtype=torch.float64)
secont condition:: tensor(1.0162e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6751e-10, dtype=torch.float64)
secont condition:: tensor(4.6751e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3048e-10, dtype=torch.float64)
secont condition:: tensor(3.3048e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4336e-09, dtype=torch.float64)
secont condition:: tensor(2.4336e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0020e-10, dtype=torch.float64)
secont condition:: tensor(8.0020e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2538e-10, dtype=torch.float64)
secont condition:: tensor(5.2538e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8716e-10, dtype=torch.float64)
secont condition:: tensor(3.8716e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7624e-10, dtype=torch.float64)
secont condition:: tensor(6.7624e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6342e-09, dtype=torch.float64)
secont condition:: tensor(4.6342e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0574e-09, dtype=torch.float64)
secont condition:: tensor(2.0574e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5437e-09, dtype=torch.float64)
secont condition:: tensor(8.5437e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5205e-09, dtype=torch.float64)
secont condition:: tensor(1.5205e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1274e-10, dtype=torch.float64)
secont condition:: tensor(8.1274e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7052e-10, dtype=torch.float64)
secont condition:: tensor(6.7052e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6554e-10, dtype=torch.float64)
secont condition:: tensor(1.6554e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6227e-10, dtype=torch.float64)
secont condition:: tensor(4.6227e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6312e-10, dtype=torch.float64)
secont condition:: tensor(3.6312e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3725e-10, dtype=torch.float64)
secont condition:: tensor(3.3725e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2697e-10, dtype=torch.float64)
secont condition:: tensor(4.2697e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6119e-10, dtype=torch.float64)
secont condition:: tensor(2.6119e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.0197e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1628e-09, dtype=torch.float64)
secont condition:: tensor(2.1628e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7019e-09, dtype=torch.float64)
secont condition:: tensor(1.7019e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6757e-09, dtype=torch.float64)
secont condition:: tensor(2.6757e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0958e-11, dtype=torch.float64)
secont condition:: tensor(5.0958e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.1311e-09, dtype=torch.float64)
secont condition:: tensor(3.1311e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3157e-09, dtype=torch.float64)
secont condition:: tensor(2.3157e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5785e-09, dtype=torch.float64)
secont condition:: tensor(1.5785e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9249e-10, dtype=torch.float64)
secont condition:: tensor(6.9249e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0547e-10, dtype=torch.float64)
secont condition:: tensor(9.0547e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7041e-09, dtype=torch.float64)
secont condition:: tensor(1.7041e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8967e-10, dtype=torch.float64)
secont condition:: tensor(9.8967e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2540e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8265e-09, dtype=torch.float64)
secont condition:: tensor(5.8265e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7784e-09, dtype=torch.float64)
secont condition:: tensor(2.7784e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5079e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0221e-09, dtype=torch.float64)
secont condition:: tensor(3.0221e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.9726e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6185e-09, dtype=torch.float64)
secont condition:: tensor(1.6185e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2917e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3254e-08, dtype=torch.float64)
secont condition:: tensor(2.3254e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7498e-09, dtype=torch.float64)
secont condition:: tensor(6.7498e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4202e-08, dtype=torch.float64)
secont condition:: tensor(2.4202e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3724e-09, dtype=torch.float64)
secont condition:: tensor(4.3724e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6842e-08, dtype=torch.float64)
secont condition:: tensor(1.6842e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8291e-08, dtype=torch.float64)
secont condition:: tensor(6.8291e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5799e-08, dtype=torch.float64)
secont condition:: tensor(8.5799e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7464e-09, dtype=torch.float64)
secont condition:: tensor(5.7464e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6701e-08, dtype=torch.float64)
secont condition:: tensor(1.6701e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0004e-09, dtype=torch.float64)
secont condition:: tensor(7.0004e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3018e-08, dtype=torch.float64)
secont condition:: tensor(4.3018e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3619e-09, dtype=torch.float64)
secont condition:: tensor(8.3619e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4703e-09, dtype=torch.float64)
secont condition:: tensor(3.4703e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0338e-08, dtype=torch.float64)
secont condition:: tensor(1.0338e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9145e-09, dtype=torch.float64)
secont condition:: tensor(9.9145e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6970e-08, dtype=torch.float64)
secont condition:: tensor(3.6970e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4561e-08, dtype=torch.float64)
secont condition:: tensor(3.4561e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9073e-09, dtype=torch.float64)
secont condition:: tensor(6.9073e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2371e-08, dtype=torch.float64)
secont condition:: tensor(1.2371e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.3688e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1805e-09, dtype=torch.float64)
secont condition:: tensor(2.1805e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2521e-08, dtype=torch.float64)
secont condition:: tensor(4.2521e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.788303852081299
curr_diff: 0 tensor(1.4696e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0950e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.7182e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.4049e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.6473e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.9774e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7263e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.5507e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4803e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0259e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.2028e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7770e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.4257e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7987e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964500
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.237013
Train - Epoch 0, Batch: 10, Loss: 0.148152
Train - Epoch 0, Batch: 20, Loss: 0.166767
Train - Epoch 0, Batch: 30, Loss: 0.129217
Train - Epoch 0, Batch: 40, Loss: 0.139806
Train - Epoch 0, Batch: 50, Loss: 0.145068
Test Avg. Loss: 0.000131, Accuracy: 0.964000
Train - Epoch 1, Batch: 0, Loss: 0.164910
Train - Epoch 1, Batch: 10, Loss: 0.130779
Train - Epoch 1, Batch: 20, Loss: 0.135162
Train - Epoch 1, Batch: 30, Loss: 0.160182
Train - Epoch 1, Batch: 40, Loss: 0.158875
Train - Epoch 1, Batch: 50, Loss: 0.145462
Test Avg. Loss: 0.000130, Accuracy: 0.965900
training_time:: 5.238041400909424
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.191715240478516
time_baseline:: 4.19661283493042
curr_diff: 0 tensor(1.6453e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7806e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6531e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.8220e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.4739e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.9087e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0667e-32, dtype=torch.float64)
secont condition:: tensor(1.0667e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0456e-32, dtype=torch.float64)
secont condition:: tensor(1.0456e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2033e-32, dtype=torch.float64)
secont condition:: tensor(2.2033e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.4441e-32, dtype=torch.float64)
secont condition:: tensor(3.4441e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8014e-32, dtype=torch.float64)
secont condition:: tensor(3.8014e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6914e-32, dtype=torch.float64)
secont condition:: tensor(3.6914e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7257e-32, dtype=torch.float64)
secont condition:: tensor(4.7257e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.5434e-32, dtype=torch.float64)
secont condition:: tensor(4.5434e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.0718e-32, dtype=torch.float64)
secont condition:: tensor(6.0718e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.6365e-32, dtype=torch.float64)
secont condition:: tensor(5.6365e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.8516e-32, dtype=torch.float64)
secont condition:: tensor(5.8516e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.1920e-32, dtype=torch.float64)
secont condition:: tensor(7.1920e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3227e-32, dtype=torch.float64)
secont condition:: tensor(8.3227e-32, dtype=torch.float64)
curr_secont condition:: tensor(9.3396e-32, dtype=torch.float64)
secont condition:: tensor(9.3396e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0022e-31, dtype=torch.float64)
secont condition:: tensor(1.0022e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0808e-31, dtype=torch.float64)
secont condition:: tensor(1.0808e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.9427e-32, dtype=torch.float64)
secont condition:: tensor(8.9427e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0605e-31, dtype=torch.float64)
secont condition:: tensor(1.0605e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.0992e-31, dtype=torch.float64)
secont condition:: tensor(1.0992e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2272e-31, dtype=torch.float64)
secont condition:: tensor(1.2272e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.2416e-31, dtype=torch.float64)
secont condition:: tensor(1.2416e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.5508e-31, dtype=torch.float64)
secont condition:: tensor(1.5508e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6188e-31, dtype=torch.float64)
secont condition:: tensor(1.6188e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4442e-31, dtype=torch.float64)
secont condition:: tensor(1.4442e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.4438e-31, dtype=torch.float64)
secont condition:: tensor(1.4438e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.6774e-31, dtype=torch.float64)
secont condition:: tensor(1.6774e-31, dtype=torch.float64)
curr_secont condition:: tensor(1.9922e-09, dtype=torch.float64)
secont condition:: tensor(1.9922e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.1718e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9534e-10, dtype=torch.float64)
secont condition:: tensor(5.9534e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.1348e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0034e-09, dtype=torch.float64)
secont condition:: tensor(1.0034e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4184e-09, dtype=torch.float64)
secont condition:: tensor(3.4184e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5261e-09, dtype=torch.float64)
secont condition:: tensor(3.5261e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7712e-11, dtype=torch.float64)
secont condition:: tensor(1.7712e-11, dtype=torch.float64)
curr_secont condition:: tensor(-2.2003e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1189e-08, dtype=torch.float64)
secont condition:: tensor(1.1189e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8640e-09, dtype=torch.float64)
secont condition:: tensor(6.8640e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1535e-09, dtype=torch.float64)
secont condition:: tensor(4.1535e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6479e-08, dtype=torch.float64)
secont condition:: tensor(1.6479e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.8040e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7680e-09, dtype=torch.float64)
secont condition:: tensor(1.7680e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.5500e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6270e-09, dtype=torch.float64)
secont condition:: tensor(7.6270e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3428e-09, dtype=torch.float64)
secont condition:: tensor(3.3428e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5029e-08, dtype=torch.float64)
secont condition:: tensor(1.5029e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5251e-08, dtype=torch.float64)
secont condition:: tensor(4.5251e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4077e-08, dtype=torch.float64)
secont condition:: tensor(6.4077e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1004e-07, dtype=torch.float64)
secont condition:: tensor(1.1004e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4529e-09, dtype=torch.float64)
secont condition:: tensor(3.4529e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0313e-09, dtype=torch.float64)
secont condition:: tensor(2.0313e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6707e-09, dtype=torch.float64)
secont condition:: tensor(6.6707e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0691e-09, dtype=torch.float64)
secont condition:: tensor(6.0691e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4890e-09, dtype=torch.float64)
secont condition:: tensor(1.4890e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.7223e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5313e-09, dtype=torch.float64)
secont condition:: tensor(2.5313e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1417e-09, dtype=torch.float64)
secont condition:: tensor(3.1417e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5017e-09, dtype=torch.float64)
secont condition:: tensor(2.5017e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2518e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3233e-09, dtype=torch.float64)
secont condition:: tensor(4.3233e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8260e-09, dtype=torch.float64)
secont condition:: tensor(2.8260e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0174e-08, dtype=torch.float64)
secont condition:: tensor(1.0174e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9365e-09, dtype=torch.float64)
secont condition:: tensor(8.9365e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.4264e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9219e-06, dtype=torch.float64)
secont condition:: tensor(7.9219e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1035e-08, dtype=torch.float64)
secont condition:: tensor(2.1035e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1571e-08, dtype=torch.float64)
secont condition:: tensor(4.1571e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.7497e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3861e-08, dtype=torch.float64)
secont condition:: tensor(5.3861e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.1525e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.6873e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.3454e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7869e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.3192e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5708e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2963e-07, dtype=torch.float64)
secont condition:: tensor(1.2963e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3029e-07, dtype=torch.float64)
secont condition:: tensor(1.3029e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9222e-08, dtype=torch.float64)
secont condition:: tensor(2.9222e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.1949e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.7500e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.6048e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3160e-07, dtype=torch.float64)
secont condition:: tensor(1.3160e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6079e-08, dtype=torch.float64)
secont condition:: tensor(3.6079e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5816e-08, dtype=torch.float64)
secont condition:: tensor(2.5816e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3870e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.7751e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6913e-08, dtype=torch.float64)
secont condition:: tensor(8.6913e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.994835138320923
curr_diff: 0 tensor(2.1278e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0566e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0156e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.6527e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.1898e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8494e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6187e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.1127e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8057e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6753e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1438e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.6860e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2226e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.219454
Train - Epoch 0, Batch: 10, Loss: 0.160337
Train - Epoch 0, Batch: 20, Loss: 0.149409
Train - Epoch 0, Batch: 30, Loss: 0.129736
Train - Epoch 0, Batch: 40, Loss: 0.123525
Train - Epoch 0, Batch: 50, Loss: 0.139369
Test Avg. Loss: 0.000131, Accuracy: 0.964900
Train - Epoch 1, Batch: 0, Loss: 0.167194
Train - Epoch 1, Batch: 10, Loss: 0.135506
Train - Epoch 1, Batch: 20, Loss: 0.123246
Train - Epoch 1, Batch: 30, Loss: 0.145623
Train - Epoch 1, Batch: 40, Loss: 0.157469
Train - Epoch 1, Batch: 50, Loss: 0.162289
Test Avg. Loss: 0.000131, Accuracy: 0.964400
training_time:: 5.235942840576172
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.18562650680542
time_baseline:: 4.190417528152466
curr_diff: 0 tensor(9.0334e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0752e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.0595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.4452e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.7990e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.3593e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8021e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1955e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 3
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0675e-32, dtype=torch.float64)
secont condition:: tensor(1.0675e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3054e-32, dtype=torch.float64)
secont condition:: tensor(1.3054e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3723e-32, dtype=torch.float64)
secont condition:: tensor(2.3723e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1994e-32, dtype=torch.float64)
secont condition:: tensor(3.1994e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6419e-32, dtype=torch.float64)
secont condition:: tensor(3.6419e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.8285e-32, dtype=torch.float64)
secont condition:: tensor(4.8285e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.7714e-32, dtype=torch.float64)
secont condition:: tensor(5.7714e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3506e-32, dtype=torch.float64)
secont condition:: tensor(5.3506e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.2079e-32, dtype=torch.float64)
secont condition:: tensor(7.2079e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3420e-09, dtype=torch.float64)
secont condition:: tensor(8.3420e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4774e-09, dtype=torch.float64)
secont condition:: tensor(2.4774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7063e-09, dtype=torch.float64)
secont condition:: tensor(1.7063e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5663e-10, dtype=torch.float64)
secont condition:: tensor(7.5663e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0396e-10, dtype=torch.float64)
secont condition:: tensor(8.0396e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.7590e-10, dtype=torch.float64)
secont condition:: tensor(5.7590e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7019e-10, dtype=torch.float64)
secont condition:: tensor(3.7019e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3991e-10, dtype=torch.float64)
secont condition:: tensor(5.3991e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.4113e-10, dtype=torch.float64)
secont condition:: tensor(8.4113e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3506e-10, dtype=torch.float64)
secont condition:: tensor(1.3506e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.9310e-11, dtype=torch.float64)
secont condition:: tensor(5.9310e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.6476e-10, dtype=torch.float64)
secont condition:: tensor(2.6476e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.2214e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.1628e-11, dtype=torch.float64)
secont condition:: tensor(6.1628e-11, dtype=torch.float64)
curr_secont condition:: tensor(-8.5173e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.8560e-10, dtype=torch.float64)
secont condition:: tensor(9.8560e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.3219e-10, dtype=torch.float64)
secont condition:: tensor(6.3219e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1497e-10, dtype=torch.float64)
secont condition:: tensor(2.1497e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2935e-10, dtype=torch.float64)
secont condition:: tensor(4.2935e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3909e-10, dtype=torch.float64)
secont condition:: tensor(3.3909e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.7003e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.2269e-10, dtype=torch.float64)
secont condition:: tensor(6.2269e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1251e-10, dtype=torch.float64)
secont condition:: tensor(9.1251e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.4572e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1819e-08, dtype=torch.float64)
secont condition:: tensor(1.1819e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9753e-09, dtype=torch.float64)
secont condition:: tensor(5.9753e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9396e-09, dtype=torch.float64)
secont condition:: tensor(2.9396e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4243e-09, dtype=torch.float64)
secont condition:: tensor(3.4243e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6827e-09, dtype=torch.float64)
secont condition:: tensor(1.6827e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0389e-09, dtype=torch.float64)
secont condition:: tensor(5.0389e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8598e-09, dtype=torch.float64)
secont condition:: tensor(4.8598e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3152e-09, dtype=torch.float64)
secont condition:: tensor(3.3152e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4008e-09, dtype=torch.float64)
secont condition:: tensor(1.4008e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8859e-09, dtype=torch.float64)
secont condition:: tensor(1.8859e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0904e-09, dtype=torch.float64)
secont condition:: tensor(3.0904e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9870e-08, dtype=torch.float64)
secont condition:: tensor(2.9870e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4606e-09, dtype=torch.float64)
secont condition:: tensor(1.4606e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6637e-09, dtype=torch.float64)
secont condition:: tensor(6.6637e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.4603e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4897e-10, dtype=torch.float64)
secont condition:: tensor(1.4897e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.6508e-09, dtype=torch.float64)
secont condition:: tensor(5.6508e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.4298e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9785e-09, dtype=torch.float64)
secont condition:: tensor(6.9785e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3111e-09, dtype=torch.float64)
secont condition:: tensor(9.3111e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2917e-07, dtype=torch.float64)
secont condition:: tensor(1.2917e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3946e-09, dtype=torch.float64)
secont condition:: tensor(8.3946e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4834e-09, dtype=torch.float64)
secont condition:: tensor(1.4834e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3797e-08, dtype=torch.float64)
secont condition:: tensor(1.3797e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9775e-09, dtype=torch.float64)
secont condition:: tensor(2.9775e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5313e-09, dtype=torch.float64)
secont condition:: tensor(4.5313e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5556e-08, dtype=torch.float64)
secont condition:: tensor(1.5556e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1988e-09, dtype=torch.float64)
secont condition:: tensor(2.1988e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7516e-09, dtype=torch.float64)
secont condition:: tensor(3.7516e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.4452e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.4993e-09, dtype=torch.float64)
secont condition:: tensor(6.4993e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1804e-08, dtype=torch.float64)
secont condition:: tensor(1.1804e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6856e-09, dtype=torch.float64)
secont condition:: tensor(4.6856e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2002e-09, dtype=torch.float64)
secont condition:: tensor(5.2002e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9449e-09, dtype=torch.float64)
secont condition:: tensor(1.9449e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2126e-08, dtype=torch.float64)
secont condition:: tensor(3.2126e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0934e-09, dtype=torch.float64)
secont condition:: tensor(3.0934e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5514e-09, dtype=torch.float64)
secont condition:: tensor(5.5514e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3805e-09, dtype=torch.float64)
secont condition:: tensor(3.3805e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9956e-09, dtype=torch.float64)
secont condition:: tensor(2.9956e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7759e-09, dtype=torch.float64)
secont condition:: tensor(4.7759e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5841e-09, dtype=torch.float64)
secont condition:: tensor(1.5841e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8199e-09, dtype=torch.float64)
secont condition:: tensor(1.8199e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2099e-09, dtype=torch.float64)
secont condition:: tensor(3.2099e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2765e-09, dtype=torch.float64)
secont condition:: tensor(1.2765e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9145e-09, dtype=torch.float64)
secont condition:: tensor(1.9145e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1421e-09, dtype=torch.float64)
secont condition:: tensor(1.1421e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0895e-09, dtype=torch.float64)
secont condition:: tensor(8.0895e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.797787666320801
curr_diff: 0 tensor(5.1529e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8771e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.9528e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5173e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.0279e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1929e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4184e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.6972e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.6470e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.8383e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.4736e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.9556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9915e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.0152e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.3833e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.6446e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1109e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965600
deletion rate:: 0.0001
python3 generate_rand_ids 0.0001  MNIST 0
tensor([ 1329, 44229, 24383, 10456, 18635, 22159])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 248.80259132385254
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.53611636161804
time_baseline:: 163.80482125282288
curr_diff: 0 tensor(9.3287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.7667e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8692e-09, dtype=torch.float64)
secont condition:: tensor(2.8692e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9384e-09, dtype=torch.float64)
secont condition:: tensor(2.9384e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2678e-09, dtype=torch.float64)
secont condition:: tensor(3.2678e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5976e-09, dtype=torch.float64)
secont condition:: tensor(2.5976e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5591e-09, dtype=torch.float64)
secont condition:: tensor(2.5591e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1490e-09, dtype=torch.float64)
secont condition:: tensor(2.1490e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0782e-09, dtype=torch.float64)
secont condition:: tensor(2.0782e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-09, dtype=torch.float64)
secont condition:: tensor(2.5998e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0044e-09, dtype=torch.float64)
secont condition:: tensor(2.0044e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9041e-09, dtype=torch.float64)
secont condition:: tensor(1.9041e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6400e-09, dtype=torch.float64)
secont condition:: tensor(1.6400e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-09, dtype=torch.float64)
secont condition:: tensor(1.5521e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-09, dtype=torch.float64)
secont condition:: tensor(1.8193e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0037e-09, dtype=torch.float64)
secont condition:: tensor(2.0037e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-09, dtype=torch.float64)
secont condition:: tensor(1.8965e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6947e-09, dtype=torch.float64)
secont condition:: tensor(1.6947e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0880e-09, dtype=torch.float64)
secont condition:: tensor(2.0880e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-09, dtype=torch.float64)
secont condition:: tensor(1.6501e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-09, dtype=torch.float64)
secont condition:: tensor(1.7534e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2488e-09, dtype=torch.float64)
secont condition:: tensor(2.2488e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5938e-09, dtype=torch.float64)
secont condition:: tensor(1.5938e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7394e-09, dtype=torch.float64)
secont condition:: tensor(1.7394e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8009e-09, dtype=torch.float64)
secont condition:: tensor(1.8009e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8835e-09, dtype=torch.float64)
secont condition:: tensor(1.8835e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9852e-09, dtype=torch.float64)
secont condition:: tensor(1.9852e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7896e-09, dtype=torch.float64)
secont condition:: tensor(1.7896e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-09, dtype=torch.float64)
secont condition:: tensor(1.2008e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3231e-09, dtype=torch.float64)
secont condition:: tensor(2.3231e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9000e-09, dtype=torch.float64)
secont condition:: tensor(1.9000e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0678e-09, dtype=torch.float64)
secont condition:: tensor(2.0678e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7237e-10, dtype=torch.float64)
secont condition:: tensor(1.7237e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9905e-09, dtype=torch.float64)
secont condition:: tensor(2.9905e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4778e-09, dtype=torch.float64)
secont condition:: tensor(2.4778e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8266e-09, dtype=torch.float64)
secont condition:: tensor(1.8266e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0591e-09, dtype=torch.float64)
secont condition:: tensor(2.0591e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9767e-09, dtype=torch.float64)
secont condition:: tensor(1.9767e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1120e-09, dtype=torch.float64)
secont condition:: tensor(2.1120e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4831e-09, dtype=torch.float64)
secont condition:: tensor(1.4831e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0077e-09, dtype=torch.float64)
secont condition:: tensor(2.0077e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-09, dtype=torch.float64)
secont condition:: tensor(1.6087e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6615e-09, dtype=torch.float64)
secont condition:: tensor(1.6615e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8770e-09, dtype=torch.float64)
secont condition:: tensor(1.8770e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-09, dtype=torch.float64)
secont condition:: tensor(1.6679e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0436e-09, dtype=torch.float64)
secont condition:: tensor(2.0436e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8695e-09, dtype=torch.float64)
secont condition:: tensor(1.8695e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4190e-09, dtype=torch.float64)
secont condition:: tensor(1.4190e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3264e-09, dtype=torch.float64)
secont condition:: tensor(2.3264e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0563e-09, dtype=torch.float64)
secont condition:: tensor(2.0563e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8920e-09, dtype=torch.float64)
secont condition:: tensor(1.8920e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0334e-09, dtype=torch.float64)
secont condition:: tensor(2.0334e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5562e-09, dtype=torch.float64)
secont condition:: tensor(2.5562e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2505e-09, dtype=torch.float64)
secont condition:: tensor(2.2505e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4245e-09, dtype=torch.float64)
secont condition:: tensor(2.4245e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0661e-09, dtype=torch.float64)
secont condition:: tensor(2.0661e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2330e-09, dtype=torch.float64)
secont condition:: tensor(2.2330e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3624e-09, dtype=torch.float64)
secont condition:: tensor(2.3624e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2062e-09, dtype=torch.float64)
secont condition:: tensor(2.2062e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1434e-09, dtype=torch.float64)
secont condition:: tensor(3.1434e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4633e-09, dtype=torch.float64)
secont condition:: tensor(2.4633e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5409e-09, dtype=torch.float64)
secont condition:: tensor(2.5409e-09, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0670e-09, dtype=torch.float64)
secont condition:: tensor(3.0670e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0803e-09, dtype=torch.float64)
secont condition:: tensor(2.0803e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0829e-09, dtype=torch.float64)
secont condition:: tensor(2.0829e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7402e-09, dtype=torch.float64)
secont condition:: tensor(2.7402e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2858e-09, dtype=torch.float64)
secont condition:: tensor(2.2858e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-09, dtype=torch.float64)
secont condition:: tensor(2.8434e-09, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-09, dtype=torch.float64)
secont condition:: tensor(2.8004e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8405e-09, dtype=torch.float64)
secont condition:: tensor(1.8405e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0387e-09, dtype=torch.float64)
secont condition:: tensor(3.0387e-09, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9815e-09, dtype=torch.float64)
secont condition:: tensor(2.9815e-09, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4604e-09, dtype=torch.float64)
secont condition:: tensor(2.4604e-09, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7035e-09, dtype=torch.float64)
secont condition:: tensor(2.7035e-09, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2323e-09, dtype=torch.float64)
secont condition:: tensor(3.2323e-09, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.0173499584198
curr_diff: 0 tensor(9.8321e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3762e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9699e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2613e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.70726823806763
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.16445779800415
time_baseline:: 163.4296956062317
curr_diff: 0 tensor(9.3287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.7667e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8692e-09, dtype=torch.float64)
secont condition:: tensor(2.8692e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9384e-09, dtype=torch.float64)
secont condition:: tensor(2.9384e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2678e-09, dtype=torch.float64)
secont condition:: tensor(3.2678e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5976e-09, dtype=torch.float64)
secont condition:: tensor(2.5976e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5591e-09, dtype=torch.float64)
secont condition:: tensor(2.5591e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1490e-09, dtype=torch.float64)
secont condition:: tensor(2.1490e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0782e-09, dtype=torch.float64)
secont condition:: tensor(2.0782e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-09, dtype=torch.float64)
secont condition:: tensor(2.5998e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0044e-09, dtype=torch.float64)
secont condition:: tensor(2.0044e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9041e-09, dtype=torch.float64)
secont condition:: tensor(1.9041e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6400e-09, dtype=torch.float64)
secont condition:: tensor(1.6400e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-09, dtype=torch.float64)
secont condition:: tensor(1.5521e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-09, dtype=torch.float64)
secont condition:: tensor(1.8193e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0037e-09, dtype=torch.float64)
secont condition:: tensor(2.0037e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-09, dtype=torch.float64)
secont condition:: tensor(1.8965e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6947e-09, dtype=torch.float64)
secont condition:: tensor(1.6947e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0880e-09, dtype=torch.float64)
secont condition:: tensor(2.0880e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-09, dtype=torch.float64)
secont condition:: tensor(1.6501e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-09, dtype=torch.float64)
secont condition:: tensor(1.7534e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2488e-09, dtype=torch.float64)
secont condition:: tensor(2.2488e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5938e-09, dtype=torch.float64)
secont condition:: tensor(1.5938e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7394e-09, dtype=torch.float64)
secont condition:: tensor(1.7394e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8009e-09, dtype=torch.float64)
secont condition:: tensor(1.8009e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8835e-09, dtype=torch.float64)
secont condition:: tensor(1.8835e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9852e-09, dtype=torch.float64)
secont condition:: tensor(1.9852e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7896e-09, dtype=torch.float64)
secont condition:: tensor(1.7896e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-09, dtype=torch.float64)
secont condition:: tensor(1.2008e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3231e-09, dtype=torch.float64)
secont condition:: tensor(2.3231e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9000e-09, dtype=torch.float64)
secont condition:: tensor(1.9000e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0678e-09, dtype=torch.float64)
secont condition:: tensor(2.0678e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7237e-10, dtype=torch.float64)
secont condition:: tensor(1.7237e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9905e-09, dtype=torch.float64)
secont condition:: tensor(2.9905e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4778e-09, dtype=torch.float64)
secont condition:: tensor(2.4778e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8266e-09, dtype=torch.float64)
secont condition:: tensor(1.8266e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0591e-09, dtype=torch.float64)
secont condition:: tensor(2.0591e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9767e-09, dtype=torch.float64)
secont condition:: tensor(1.9767e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1120e-09, dtype=torch.float64)
secont condition:: tensor(2.1120e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4831e-09, dtype=torch.float64)
secont condition:: tensor(1.4831e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0077e-09, dtype=torch.float64)
secont condition:: tensor(2.0077e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-09, dtype=torch.float64)
secont condition:: tensor(1.6087e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6615e-09, dtype=torch.float64)
secont condition:: tensor(1.6615e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8770e-09, dtype=torch.float64)
secont condition:: tensor(1.8770e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-09, dtype=torch.float64)
secont condition:: tensor(1.6679e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0436e-09, dtype=torch.float64)
secont condition:: tensor(2.0436e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8695e-09, dtype=torch.float64)
secont condition:: tensor(1.8695e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4190e-09, dtype=torch.float64)
secont condition:: tensor(1.4190e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3264e-09, dtype=torch.float64)
secont condition:: tensor(2.3264e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0563e-09, dtype=torch.float64)
secont condition:: tensor(2.0563e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8920e-09, dtype=torch.float64)
secont condition:: tensor(1.8920e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0334e-09, dtype=torch.float64)
secont condition:: tensor(2.0334e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5562e-09, dtype=torch.float64)
secont condition:: tensor(2.5562e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2505e-09, dtype=torch.float64)
secont condition:: tensor(2.2505e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4245e-09, dtype=torch.float64)
secont condition:: tensor(2.4245e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0661e-09, dtype=torch.float64)
secont condition:: tensor(2.0661e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2330e-09, dtype=torch.float64)
secont condition:: tensor(2.2330e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3624e-09, dtype=torch.float64)
secont condition:: tensor(2.3624e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2062e-09, dtype=torch.float64)
secont condition:: tensor(2.2062e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1434e-09, dtype=torch.float64)
secont condition:: tensor(3.1434e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4633e-09, dtype=torch.float64)
secont condition:: tensor(2.4633e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5409e-09, dtype=torch.float64)
secont condition:: tensor(2.5409e-09, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0670e-09, dtype=torch.float64)
secont condition:: tensor(3.0670e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0803e-09, dtype=torch.float64)
secont condition:: tensor(2.0803e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0829e-09, dtype=torch.float64)
secont condition:: tensor(2.0829e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7402e-09, dtype=torch.float64)
secont condition:: tensor(2.7402e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2858e-09, dtype=torch.float64)
secont condition:: tensor(2.2858e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-09, dtype=torch.float64)
secont condition:: tensor(2.8434e-09, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-09, dtype=torch.float64)
secont condition:: tensor(2.8004e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8405e-09, dtype=torch.float64)
secont condition:: tensor(1.8405e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0387e-09, dtype=torch.float64)
secont condition:: tensor(3.0387e-09, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9815e-09, dtype=torch.float64)
secont condition:: tensor(2.9815e-09, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4604e-09, dtype=torch.float64)
secont condition:: tensor(2.4604e-09, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7035e-09, dtype=torch.float64)
secont condition:: tensor(2.7035e-09, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2323e-09, dtype=torch.float64)
secont condition:: tensor(3.2323e-09, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.24409937858582
curr_diff: 0 tensor(9.8321e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3762e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9699e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2613e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.45585775375366
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.19204926490784
time_baseline:: 163.46064519882202
curr_diff: 0 tensor(9.3287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.7667e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8692e-09, dtype=torch.float64)
secont condition:: tensor(2.8692e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9384e-09, dtype=torch.float64)
secont condition:: tensor(2.9384e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2678e-09, dtype=torch.float64)
secont condition:: tensor(3.2678e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5976e-09, dtype=torch.float64)
secont condition:: tensor(2.5976e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5591e-09, dtype=torch.float64)
secont condition:: tensor(2.5591e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1490e-09, dtype=torch.float64)
secont condition:: tensor(2.1490e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0782e-09, dtype=torch.float64)
secont condition:: tensor(2.0782e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-09, dtype=torch.float64)
secont condition:: tensor(2.5998e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0044e-09, dtype=torch.float64)
secont condition:: tensor(2.0044e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9041e-09, dtype=torch.float64)
secont condition:: tensor(1.9041e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6400e-09, dtype=torch.float64)
secont condition:: tensor(1.6400e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-09, dtype=torch.float64)
secont condition:: tensor(1.5521e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-09, dtype=torch.float64)
secont condition:: tensor(1.8193e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0037e-09, dtype=torch.float64)
secont condition:: tensor(2.0037e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-09, dtype=torch.float64)
secont condition:: tensor(1.8965e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6947e-09, dtype=torch.float64)
secont condition:: tensor(1.6947e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0880e-09, dtype=torch.float64)
secont condition:: tensor(2.0880e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-09, dtype=torch.float64)
secont condition:: tensor(1.6501e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-09, dtype=torch.float64)
secont condition:: tensor(1.7534e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2488e-09, dtype=torch.float64)
secont condition:: tensor(2.2488e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5938e-09, dtype=torch.float64)
secont condition:: tensor(1.5938e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7394e-09, dtype=torch.float64)
secont condition:: tensor(1.7394e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8009e-09, dtype=torch.float64)
secont condition:: tensor(1.8009e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8835e-09, dtype=torch.float64)
secont condition:: tensor(1.8835e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9852e-09, dtype=torch.float64)
secont condition:: tensor(1.9852e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7896e-09, dtype=torch.float64)
secont condition:: tensor(1.7896e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-09, dtype=torch.float64)
secont condition:: tensor(1.2008e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3231e-09, dtype=torch.float64)
secont condition:: tensor(2.3231e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9000e-09, dtype=torch.float64)
secont condition:: tensor(1.9000e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0678e-09, dtype=torch.float64)
secont condition:: tensor(2.0678e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7237e-10, dtype=torch.float64)
secont condition:: tensor(1.7237e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9905e-09, dtype=torch.float64)
secont condition:: tensor(2.9905e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4778e-09, dtype=torch.float64)
secont condition:: tensor(2.4778e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8266e-09, dtype=torch.float64)
secont condition:: tensor(1.8266e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0591e-09, dtype=torch.float64)
secont condition:: tensor(2.0591e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9767e-09, dtype=torch.float64)
secont condition:: tensor(1.9767e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1120e-09, dtype=torch.float64)
secont condition:: tensor(2.1120e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4831e-09, dtype=torch.float64)
secont condition:: tensor(1.4831e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0077e-09, dtype=torch.float64)
secont condition:: tensor(2.0077e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-09, dtype=torch.float64)
secont condition:: tensor(1.6087e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6615e-09, dtype=torch.float64)
secont condition:: tensor(1.6615e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8770e-09, dtype=torch.float64)
secont condition:: tensor(1.8770e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-09, dtype=torch.float64)
secont condition:: tensor(1.6679e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0436e-09, dtype=torch.float64)
secont condition:: tensor(2.0436e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8695e-09, dtype=torch.float64)
secont condition:: tensor(1.8695e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4190e-09, dtype=torch.float64)
secont condition:: tensor(1.4190e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3264e-09, dtype=torch.float64)
secont condition:: tensor(2.3264e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0563e-09, dtype=torch.float64)
secont condition:: tensor(2.0563e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8920e-09, dtype=torch.float64)
secont condition:: tensor(1.8920e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0334e-09, dtype=torch.float64)
secont condition:: tensor(2.0334e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5562e-09, dtype=torch.float64)
secont condition:: tensor(2.5562e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2505e-09, dtype=torch.float64)
secont condition:: tensor(2.2505e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4245e-09, dtype=torch.float64)
secont condition:: tensor(2.4245e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0661e-09, dtype=torch.float64)
secont condition:: tensor(2.0661e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2330e-09, dtype=torch.float64)
secont condition:: tensor(2.2330e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3624e-09, dtype=torch.float64)
secont condition:: tensor(2.3624e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2062e-09, dtype=torch.float64)
secont condition:: tensor(2.2062e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1434e-09, dtype=torch.float64)
secont condition:: tensor(3.1434e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4633e-09, dtype=torch.float64)
secont condition:: tensor(2.4633e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5409e-09, dtype=torch.float64)
secont condition:: tensor(2.5409e-09, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0670e-09, dtype=torch.float64)
secont condition:: tensor(3.0670e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0803e-09, dtype=torch.float64)
secont condition:: tensor(2.0803e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0829e-09, dtype=torch.float64)
secont condition:: tensor(2.0829e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7402e-09, dtype=torch.float64)
secont condition:: tensor(2.7402e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2858e-09, dtype=torch.float64)
secont condition:: tensor(2.2858e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-09, dtype=torch.float64)
secont condition:: tensor(2.8434e-09, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-09, dtype=torch.float64)
secont condition:: tensor(2.8004e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8405e-09, dtype=torch.float64)
secont condition:: tensor(1.8405e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0387e-09, dtype=torch.float64)
secont condition:: tensor(3.0387e-09, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9815e-09, dtype=torch.float64)
secont condition:: tensor(2.9815e-09, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4604e-09, dtype=torch.float64)
secont condition:: tensor(2.4604e-09, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7035e-09, dtype=torch.float64)
secont condition:: tensor(2.7035e-09, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2323e-09, dtype=torch.float64)
secont condition:: tensor(3.2323e-09, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.14897656440735
curr_diff: 0 tensor(9.8321e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3762e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9699e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2613e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.99999713897705
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.171856880188
time_baseline:: 163.4506072998047
curr_diff: 0 tensor(9.3287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.7667e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8692e-09, dtype=torch.float64)
secont condition:: tensor(2.8692e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9384e-09, dtype=torch.float64)
secont condition:: tensor(2.9384e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2678e-09, dtype=torch.float64)
secont condition:: tensor(3.2678e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5976e-09, dtype=torch.float64)
secont condition:: tensor(2.5976e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5591e-09, dtype=torch.float64)
secont condition:: tensor(2.5591e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1490e-09, dtype=torch.float64)
secont condition:: tensor(2.1490e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0782e-09, dtype=torch.float64)
secont condition:: tensor(2.0782e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-09, dtype=torch.float64)
secont condition:: tensor(2.5998e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0044e-09, dtype=torch.float64)
secont condition:: tensor(2.0044e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9041e-09, dtype=torch.float64)
secont condition:: tensor(1.9041e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6400e-09, dtype=torch.float64)
secont condition:: tensor(1.6400e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-09, dtype=torch.float64)
secont condition:: tensor(1.5521e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-09, dtype=torch.float64)
secont condition:: tensor(1.8193e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0037e-09, dtype=torch.float64)
secont condition:: tensor(2.0037e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-09, dtype=torch.float64)
secont condition:: tensor(1.8965e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6947e-09, dtype=torch.float64)
secont condition:: tensor(1.6947e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0880e-09, dtype=torch.float64)
secont condition:: tensor(2.0880e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-09, dtype=torch.float64)
secont condition:: tensor(1.6501e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-09, dtype=torch.float64)
secont condition:: tensor(1.7534e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2488e-09, dtype=torch.float64)
secont condition:: tensor(2.2488e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5938e-09, dtype=torch.float64)
secont condition:: tensor(1.5938e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7394e-09, dtype=torch.float64)
secont condition:: tensor(1.7394e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8009e-09, dtype=torch.float64)
secont condition:: tensor(1.8009e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8835e-09, dtype=torch.float64)
secont condition:: tensor(1.8835e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9852e-09, dtype=torch.float64)
secont condition:: tensor(1.9852e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7896e-09, dtype=torch.float64)
secont condition:: tensor(1.7896e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-09, dtype=torch.float64)
secont condition:: tensor(1.2008e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3231e-09, dtype=torch.float64)
secont condition:: tensor(2.3231e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9000e-09, dtype=torch.float64)
secont condition:: tensor(1.9000e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0678e-09, dtype=torch.float64)
secont condition:: tensor(2.0678e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7237e-10, dtype=torch.float64)
secont condition:: tensor(1.7237e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9905e-09, dtype=torch.float64)
secont condition:: tensor(2.9905e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4778e-09, dtype=torch.float64)
secont condition:: tensor(2.4778e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8266e-09, dtype=torch.float64)
secont condition:: tensor(1.8266e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0591e-09, dtype=torch.float64)
secont condition:: tensor(2.0591e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9767e-09, dtype=torch.float64)
secont condition:: tensor(1.9767e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1120e-09, dtype=torch.float64)
secont condition:: tensor(2.1120e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4831e-09, dtype=torch.float64)
secont condition:: tensor(1.4831e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0077e-09, dtype=torch.float64)
secont condition:: tensor(2.0077e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-09, dtype=torch.float64)
secont condition:: tensor(1.6087e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6615e-09, dtype=torch.float64)
secont condition:: tensor(1.6615e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8770e-09, dtype=torch.float64)
secont condition:: tensor(1.8770e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-09, dtype=torch.float64)
secont condition:: tensor(1.6679e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0436e-09, dtype=torch.float64)
secont condition:: tensor(2.0436e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8695e-09, dtype=torch.float64)
secont condition:: tensor(1.8695e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4190e-09, dtype=torch.float64)
secont condition:: tensor(1.4190e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3264e-09, dtype=torch.float64)
secont condition:: tensor(2.3264e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0563e-09, dtype=torch.float64)
secont condition:: tensor(2.0563e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8920e-09, dtype=torch.float64)
secont condition:: tensor(1.8920e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0334e-09, dtype=torch.float64)
secont condition:: tensor(2.0334e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5562e-09, dtype=torch.float64)
secont condition:: tensor(2.5562e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2505e-09, dtype=torch.float64)
secont condition:: tensor(2.2505e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4245e-09, dtype=torch.float64)
secont condition:: tensor(2.4245e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0661e-09, dtype=torch.float64)
secont condition:: tensor(2.0661e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2330e-09, dtype=torch.float64)
secont condition:: tensor(2.2330e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3624e-09, dtype=torch.float64)
secont condition:: tensor(2.3624e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2062e-09, dtype=torch.float64)
secont condition:: tensor(2.2062e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1434e-09, dtype=torch.float64)
secont condition:: tensor(3.1434e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4633e-09, dtype=torch.float64)
secont condition:: tensor(2.4633e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5409e-09, dtype=torch.float64)
secont condition:: tensor(2.5409e-09, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0670e-09, dtype=torch.float64)
secont condition:: tensor(3.0670e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0803e-09, dtype=torch.float64)
secont condition:: tensor(2.0803e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0829e-09, dtype=torch.float64)
secont condition:: tensor(2.0829e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7402e-09, dtype=torch.float64)
secont condition:: tensor(2.7402e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2858e-09, dtype=torch.float64)
secont condition:: tensor(2.2858e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-09, dtype=torch.float64)
secont condition:: tensor(2.8434e-09, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-09, dtype=torch.float64)
secont condition:: tensor(2.8004e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8405e-09, dtype=torch.float64)
secont condition:: tensor(1.8405e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0387e-09, dtype=torch.float64)
secont condition:: tensor(3.0387e-09, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9815e-09, dtype=torch.float64)
secont condition:: tensor(2.9815e-09, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4604e-09, dtype=torch.float64)
secont condition:: tensor(2.4604e-09, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7035e-09, dtype=torch.float64)
secont condition:: tensor(2.7035e-09, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2323e-09, dtype=torch.float64)
secont condition:: tensor(3.2323e-09, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.1211724281311
curr_diff: 0 tensor(9.8321e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3762e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9699e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2613e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.62193536758423
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.18428707122803
time_baseline:: 163.48275923728943
curr_diff: 0 tensor(9.3287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4704e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.7667e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 6
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2844e-09, dtype=torch.float64)
secont condition:: tensor(1.2844e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8692e-09, dtype=torch.float64)
secont condition:: tensor(2.8692e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9384e-09, dtype=torch.float64)
secont condition:: tensor(2.9384e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2678e-09, dtype=torch.float64)
secont condition:: tensor(3.2678e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5976e-09, dtype=torch.float64)
secont condition:: tensor(2.5976e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5591e-09, dtype=torch.float64)
secont condition:: tensor(2.5591e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1490e-09, dtype=torch.float64)
secont condition:: tensor(2.1490e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0782e-09, dtype=torch.float64)
secont condition:: tensor(2.0782e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5998e-09, dtype=torch.float64)
secont condition:: tensor(2.5998e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0044e-09, dtype=torch.float64)
secont condition:: tensor(2.0044e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9041e-09, dtype=torch.float64)
secont condition:: tensor(1.9041e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6400e-09, dtype=torch.float64)
secont condition:: tensor(1.6400e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5521e-09, dtype=torch.float64)
secont condition:: tensor(1.5521e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8193e-09, dtype=torch.float64)
secont condition:: tensor(1.8193e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0037e-09, dtype=torch.float64)
secont condition:: tensor(2.0037e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6329e-09, dtype=torch.float64)
secont condition:: tensor(1.6329e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8965e-09, dtype=torch.float64)
secont condition:: tensor(1.8965e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6947e-09, dtype=torch.float64)
secont condition:: tensor(1.6947e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0880e-09, dtype=torch.float64)
secont condition:: tensor(2.0880e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-09, dtype=torch.float64)
secont condition:: tensor(1.6501e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7534e-09, dtype=torch.float64)
secont condition:: tensor(1.7534e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2488e-09, dtype=torch.float64)
secont condition:: tensor(2.2488e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5938e-09, dtype=torch.float64)
secont condition:: tensor(1.5938e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7394e-09, dtype=torch.float64)
secont condition:: tensor(1.7394e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8009e-09, dtype=torch.float64)
secont condition:: tensor(1.8009e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8835e-09, dtype=torch.float64)
secont condition:: tensor(1.8835e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9852e-09, dtype=torch.float64)
secont condition:: tensor(1.9852e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7896e-09, dtype=torch.float64)
secont condition:: tensor(1.7896e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2008e-09, dtype=torch.float64)
secont condition:: tensor(1.2008e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3231e-09, dtype=torch.float64)
secont condition:: tensor(2.3231e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9000e-09, dtype=torch.float64)
secont condition:: tensor(1.9000e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0678e-09, dtype=torch.float64)
secont condition:: tensor(2.0678e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7237e-10, dtype=torch.float64)
secont condition:: tensor(1.7237e-10, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9905e-09, dtype=torch.float64)
secont condition:: tensor(2.9905e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4778e-09, dtype=torch.float64)
secont condition:: tensor(2.4778e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8266e-09, dtype=torch.float64)
secont condition:: tensor(1.8266e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9886e-09, dtype=torch.float64)
secont condition:: tensor(1.9886e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0591e-09, dtype=torch.float64)
secont condition:: tensor(2.0591e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9767e-09, dtype=torch.float64)
secont condition:: tensor(1.9767e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1120e-09, dtype=torch.float64)
secont condition:: tensor(2.1120e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4831e-09, dtype=torch.float64)
secont condition:: tensor(1.4831e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2130e-09, dtype=torch.float64)
secont condition:: tensor(2.2130e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0077e-09, dtype=torch.float64)
secont condition:: tensor(2.0077e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6087e-09, dtype=torch.float64)
secont condition:: tensor(1.6087e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6615e-09, dtype=torch.float64)
secont condition:: tensor(1.6615e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8770e-09, dtype=torch.float64)
secont condition:: tensor(1.8770e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6679e-09, dtype=torch.float64)
secont condition:: tensor(1.6679e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0436e-09, dtype=torch.float64)
secont condition:: tensor(2.0436e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8695e-09, dtype=torch.float64)
secont condition:: tensor(1.8695e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4190e-09, dtype=torch.float64)
secont condition:: tensor(1.4190e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3264e-09, dtype=torch.float64)
secont condition:: tensor(2.3264e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0563e-09, dtype=torch.float64)
secont condition:: tensor(2.0563e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8920e-09, dtype=torch.float64)
secont condition:: tensor(1.8920e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0334e-09, dtype=torch.float64)
secont condition:: tensor(2.0334e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5562e-09, dtype=torch.float64)
secont condition:: tensor(2.5562e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2505e-09, dtype=torch.float64)
secont condition:: tensor(2.2505e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4245e-09, dtype=torch.float64)
secont condition:: tensor(2.4245e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0661e-09, dtype=torch.float64)
secont condition:: tensor(2.0661e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2330e-09, dtype=torch.float64)
secont condition:: tensor(2.2330e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1160e-09, dtype=torch.float64)
secont condition:: tensor(2.1160e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6926e-09, dtype=torch.float64)
secont condition:: tensor(1.6926e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3624e-09, dtype=torch.float64)
secont condition:: tensor(2.3624e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2062e-09, dtype=torch.float64)
secont condition:: tensor(2.2062e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1434e-09, dtype=torch.float64)
secont condition:: tensor(3.1434e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4633e-09, dtype=torch.float64)
secont condition:: tensor(2.4633e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5409e-09, dtype=torch.float64)
secont condition:: tensor(2.5409e-09, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0670e-09, dtype=torch.float64)
secont condition:: tensor(3.0670e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0803e-09, dtype=torch.float64)
secont condition:: tensor(2.0803e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0829e-09, dtype=torch.float64)
secont condition:: tensor(2.0829e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7402e-09, dtype=torch.float64)
secont condition:: tensor(2.7402e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2858e-09, dtype=torch.float64)
secont condition:: tensor(2.2858e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8434e-09, dtype=torch.float64)
secont condition:: tensor(2.8434e-09, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8004e-09, dtype=torch.float64)
secont condition:: tensor(2.8004e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8405e-09, dtype=torch.float64)
secont condition:: tensor(1.8405e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0387e-09, dtype=torch.float64)
secont condition:: tensor(3.0387e-09, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9815e-09, dtype=torch.float64)
secont condition:: tensor(2.9815e-09, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4604e-09, dtype=torch.float64)
secont condition:: tensor(2.4604e-09, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7035e-09, dtype=torch.float64)
secont condition:: tensor(2.7035e-09, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2323e-09, dtype=torch.float64)
secont condition:: tensor(3.2323e-09, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.00458693504333
curr_diff: 0 tensor(9.8321e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6450e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4119e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2522e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.6402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3762e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4615e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9699e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.3302e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3535e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2613e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.3120e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6188e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2826e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8271e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9035e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1089e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215698
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.168822
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.160821
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157605
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.150447
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152620
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.151960
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.149172
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.149545
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.147681
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.148144
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.149465
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.148223
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 13, Batch: 0, Loss: 0.146485
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.145832
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.143431
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 16, Batch: 0, Loss: 0.142988
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 17, Batch: 0, Loss: 0.143337
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.148196
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 19, Batch: 0, Loss: 0.144433
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 20, Batch: 0, Loss: 0.143751
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.141805
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.141081
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.143190
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.145895
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.145169
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 26, Batch: 0, Loss: 0.144011
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.143306
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.144636
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 29, Batch: 0, Loss: 0.145903
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 30, Batch: 0, Loss: 0.145098
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.144330
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.143769
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.147000
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.144490
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 35, Batch: 0, Loss: 0.140566
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 36, Batch: 0, Loss: 0.137661
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.142272
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.144528
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 39, Batch: 0, Loss: 0.141511
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.145721
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.143875
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 42, Batch: 0, Loss: 0.146545
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.142158
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 44, Batch: 0, Loss: 0.142087
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 45, Batch: 0, Loss: 0.143688
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 46, Batch: 0, Loss: 0.141327
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.144143
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.142132
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 49, Batch: 0, Loss: 0.146149
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.146217
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.145686
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.142573
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 53, Batch: 0, Loss: 0.141518
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.141779
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.141647
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 56, Batch: 0, Loss: 0.140920
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 57, Batch: 0, Loss: 0.139096
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.145895
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.143054
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.70684218406677
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.28619050979614
time_baseline:: 82.43469166755676
curr_diff: 0 tensor(8.3143e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6357e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.6492e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5835e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.3627e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3632e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8562e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.8853e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8876e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0463e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9066e-10, dtype=torch.float64)
secont condition:: tensor(1.9066e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1483e-09, dtype=torch.float64)
secont condition:: tensor(2.1483e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8482e-09, dtype=torch.float64)
secont condition:: tensor(1.8482e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8137e-09, dtype=torch.float64)
secont condition:: tensor(3.8137e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2227e-09, dtype=torch.float64)
secont condition:: tensor(2.2227e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3488e-09, dtype=torch.float64)
secont condition:: tensor(3.3488e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6724e-09, dtype=torch.float64)
secont condition:: tensor(1.6724e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6632e-09, dtype=torch.float64)
secont condition:: tensor(1.6632e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0384e-09, dtype=torch.float64)
secont condition:: tensor(4.0384e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0762e-09, dtype=torch.float64)
secont condition:: tensor(2.0762e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4514e-09, dtype=torch.float64)
secont condition:: tensor(1.4514e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8954e-09, dtype=torch.float64)
secont condition:: tensor(1.8954e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1850e-09, dtype=torch.float64)
secont condition:: tensor(1.1850e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1258e-09, dtype=torch.float64)
secont condition:: tensor(2.1258e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3842e-09, dtype=torch.float64)
secont condition:: tensor(1.3842e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8852e-09, dtype=torch.float64)
secont condition:: tensor(1.8852e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8107e-09, dtype=torch.float64)
secont condition:: tensor(2.8107e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0977e-09, dtype=torch.float64)
secont condition:: tensor(1.0977e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0874e-09, dtype=torch.float64)
secont condition:: tensor(2.0874e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6913e-09, dtype=torch.float64)
secont condition:: tensor(1.6913e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9261e-09, dtype=torch.float64)
secont condition:: tensor(2.9261e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6241e-09, dtype=torch.float64)
secont condition:: tensor(2.6241e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2862e-09, dtype=torch.float64)
secont condition:: tensor(1.2862e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8215e-09, dtype=torch.float64)
secont condition:: tensor(1.8215e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7261e-09, dtype=torch.float64)
secont condition:: tensor(1.7261e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1750e-09, dtype=torch.float64)
secont condition:: tensor(2.1750e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7676e-10, dtype=torch.float64)
secont condition:: tensor(4.7676e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7774e-09, dtype=torch.float64)
secont condition:: tensor(1.7774e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0902e-09, dtype=torch.float64)
secont condition:: tensor(1.0902e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3106e-09, dtype=torch.float64)
secont condition:: tensor(2.3106e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3049e-09, dtype=torch.float64)
secont condition:: tensor(1.3049e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3468e-09, dtype=torch.float64)
secont condition:: tensor(2.3468e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3670e-09, dtype=torch.float64)
secont condition:: tensor(2.3670e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2787e-09, dtype=torch.float64)
secont condition:: tensor(1.2787e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7777e-09, dtype=torch.float64)
secont condition:: tensor(2.7777e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9266e-09, dtype=torch.float64)
secont condition:: tensor(2.9266e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2464e-09, dtype=torch.float64)
secont condition:: tensor(2.2464e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6628e-09, dtype=torch.float64)
secont condition:: tensor(1.6628e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4471e-10, dtype=torch.float64)
secont condition:: tensor(4.4471e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9298e-09, dtype=torch.float64)
secont condition:: tensor(2.9298e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6116e-09, dtype=torch.float64)
secont condition:: tensor(1.6116e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5074e-09, dtype=torch.float64)
secont condition:: tensor(2.5074e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7480e-09, dtype=torch.float64)
secont condition:: tensor(1.7480e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2545e-09, dtype=torch.float64)
secont condition:: tensor(3.2545e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9571e-09, dtype=torch.float64)
secont condition:: tensor(2.9571e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5215e-09, dtype=torch.float64)
secont condition:: tensor(1.5215e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9189e-09, dtype=torch.float64)
secont condition:: tensor(2.9189e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6237e-09, dtype=torch.float64)
secont condition:: tensor(1.6237e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2905e-09, dtype=torch.float64)
secont condition:: tensor(2.2905e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7716e-09, dtype=torch.float64)
secont condition:: tensor(1.7716e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2070e-09, dtype=torch.float64)
secont condition:: tensor(2.2070e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9352e-09, dtype=torch.float64)
secont condition:: tensor(1.9352e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9282e-09, dtype=torch.float64)
secont condition:: tensor(1.9282e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0745e-09, dtype=torch.float64)
secont condition:: tensor(2.0745e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6310e-09, dtype=torch.float64)
secont condition:: tensor(1.6310e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7521e-09, dtype=torch.float64)
secont condition:: tensor(1.7521e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4366e-09, dtype=torch.float64)
secont condition:: tensor(2.4366e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6076e-09, dtype=torch.float64)
secont condition:: tensor(1.6076e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4108e-09, dtype=torch.float64)
secont condition:: tensor(1.4108e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3861e-09, dtype=torch.float64)
secont condition:: tensor(2.3861e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6235e-09, dtype=torch.float64)
secont condition:: tensor(2.6235e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3163e-09, dtype=torch.float64)
secont condition:: tensor(2.3163e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5866e-09, dtype=torch.float64)
secont condition:: tensor(2.5866e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8365e-09, dtype=torch.float64)
secont condition:: tensor(2.8365e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9014e-09, dtype=torch.float64)
secont condition:: tensor(2.9014e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1405e-09, dtype=torch.float64)
secont condition:: tensor(3.1405e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8031e-09, dtype=torch.float64)
secont condition:: tensor(2.8031e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9713e-09, dtype=torch.float64)
secont condition:: tensor(2.9713e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2959e-09, dtype=torch.float64)
secont condition:: tensor(3.2959e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4812e-09, dtype=torch.float64)
secont condition:: tensor(4.4812e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 72.92142391204834
curr_diff: 0 tensor(2.5427e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0266e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.1199e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1099e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.0087e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.2180e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.1999e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1313e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.3479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9640e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.9066e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.3479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2152e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.9045e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6485e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.6949e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.1033e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0054e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0618e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9601e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965500
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212980
Test Avg. Loss: 0.000015, Accuracy: 0.959600
Train - Epoch 1, Batch: 0, Loss: 0.171814
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 2, Batch: 0, Loss: 0.163471
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.156296
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 4, Batch: 0, Loss: 0.153506
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.151401
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.147667
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.150963
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.149994
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.150449
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.147598
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.145437
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.149349
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.144471
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.146052
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.147228
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.144684
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.145823
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.144764
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 19, Batch: 0, Loss: 0.147888
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 20, Batch: 0, Loss: 0.141208
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.143038
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.144334
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.141768
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.145579
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.141705
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 26, Batch: 0, Loss: 0.144605
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 27, Batch: 0, Loss: 0.142710
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.141863
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.146381
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.143686
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 31, Batch: 0, Loss: 0.145085
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.141416
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.143485
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.140273
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.143455
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.139526
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.142473
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 38, Batch: 0, Loss: 0.139751
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.140772
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.144261
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.142314
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.139389
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.142210
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.143788
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.143934
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.139780
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.144754
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 49, Batch: 0, Loss: 0.139888
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.142401
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.144937
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.141884
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 53, Batch: 0, Loss: 0.144149
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.141506
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141768
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 56, Batch: 0, Loss: 0.141178
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 57, Batch: 0, Loss: 0.142730
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.144130
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.143550
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 124.00521063804626
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.38957095146179
time_baseline:: 82.52332592010498
curr_diff: 0 tensor(8.6484e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.9952e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4517e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9681e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.0639e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3338e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4092e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7800e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0211e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4500e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5326e-09, dtype=torch.float64)
secont condition:: tensor(6.5326e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3263e-09, dtype=torch.float64)
secont condition:: tensor(2.3263e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4924e-09, dtype=torch.float64)
secont condition:: tensor(6.4924e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1965e-09, dtype=torch.float64)
secont condition:: tensor(3.1965e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6897e-09, dtype=torch.float64)
secont condition:: tensor(1.6897e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1138e-09, dtype=torch.float64)
secont condition:: tensor(3.1138e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7156e-09, dtype=torch.float64)
secont condition:: tensor(1.7156e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5916e-09, dtype=torch.float64)
secont condition:: tensor(2.5916e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7604e-09, dtype=torch.float64)
secont condition:: tensor(3.7604e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3397e-09, dtype=torch.float64)
secont condition:: tensor(2.3397e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3527e-09, dtype=torch.float64)
secont condition:: tensor(3.3527e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7241e-09, dtype=torch.float64)
secont condition:: tensor(1.7241e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2110e-09, dtype=torch.float64)
secont condition:: tensor(2.2110e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8953e-09, dtype=torch.float64)
secont condition:: tensor(1.8953e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4784e-09, dtype=torch.float64)
secont condition:: tensor(1.4784e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4044e-09, dtype=torch.float64)
secont condition:: tensor(2.4044e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1180e-09, dtype=torch.float64)
secont condition:: tensor(3.1180e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1888e-09, dtype=torch.float64)
secont condition:: tensor(2.1888e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2161e-10, dtype=torch.float64)
secont condition:: tensor(5.2161e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8583e-09, dtype=torch.float64)
secont condition:: tensor(1.8583e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3564e-09, dtype=torch.float64)
secont condition:: tensor(2.3564e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1398e-09, dtype=torch.float64)
secont condition:: tensor(2.1398e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9739e-09, dtype=torch.float64)
secont condition:: tensor(2.9739e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6115e-09, dtype=torch.float64)
secont condition:: tensor(1.6115e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5649e-09, dtype=torch.float64)
secont condition:: tensor(2.5649e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6620e-09, dtype=torch.float64)
secont condition:: tensor(1.6620e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3568e-09, dtype=torch.float64)
secont condition:: tensor(1.3568e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8688e-09, dtype=torch.float64)
secont condition:: tensor(1.8688e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7362e-10, dtype=torch.float64)
secont condition:: tensor(5.7362e-10, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5506e-09, dtype=torch.float64)
secont condition:: tensor(2.5506e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5001e-09, dtype=torch.float64)
secont condition:: tensor(2.5001e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1908e-09, dtype=torch.float64)
secont condition:: tensor(1.1908e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6969e-09, dtype=torch.float64)
secont condition:: tensor(2.6969e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3898e-09, dtype=torch.float64)
secont condition:: tensor(1.3898e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7938e-09, dtype=torch.float64)
secont condition:: tensor(2.7938e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4599e-09, dtype=torch.float64)
secont condition:: tensor(3.4599e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5285e-09, dtype=torch.float64)
secont condition:: tensor(1.5285e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9121e-09, dtype=torch.float64)
secont condition:: tensor(1.9121e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8371e-09, dtype=torch.float64)
secont condition:: tensor(2.8371e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0620e-09, dtype=torch.float64)
secont condition:: tensor(2.0620e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9116e-09, dtype=torch.float64)
secont condition:: tensor(1.9116e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1261e-09, dtype=torch.float64)
secont condition:: tensor(2.1261e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.5496e-11, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9062e-09, dtype=torch.float64)
secont condition:: tensor(1.9062e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9954e-09, dtype=torch.float64)
secont condition:: tensor(1.9954e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3770e-09, dtype=torch.float64)
secont condition:: tensor(2.3770e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1693e-09, dtype=torch.float64)
secont condition:: tensor(1.1693e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9255e-09, dtype=torch.float64)
secont condition:: tensor(1.9255e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8351e-09, dtype=torch.float64)
secont condition:: tensor(2.8351e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9122e-09, dtype=torch.float64)
secont condition:: tensor(1.9122e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4318e-09, dtype=torch.float64)
secont condition:: tensor(2.4318e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5147e-09, dtype=torch.float64)
secont condition:: tensor(1.5147e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0696e-09, dtype=torch.float64)
secont condition:: tensor(3.0696e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9295e-09, dtype=torch.float64)
secont condition:: tensor(1.9295e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6909e-09, dtype=torch.float64)
secont condition:: tensor(1.6909e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0917e-09, dtype=torch.float64)
secont condition:: tensor(2.0917e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4337e-09, dtype=torch.float64)
secont condition:: tensor(1.4337e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7300e-09, dtype=torch.float64)
secont condition:: tensor(2.7300e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0003e-09, dtype=torch.float64)
secont condition:: tensor(4.0003e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0280e-09, dtype=torch.float64)
secont condition:: tensor(2.0280e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4788e-09, dtype=torch.float64)
secont condition:: tensor(1.4788e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0601e-09, dtype=torch.float64)
secont condition:: tensor(3.0601e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7710e-09, dtype=torch.float64)
secont condition:: tensor(1.7710e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8329e-09, dtype=torch.float64)
secont condition:: tensor(1.8329e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2115e-09, dtype=torch.float64)
secont condition:: tensor(2.2115e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1375e-09, dtype=torch.float64)
secont condition:: tensor(4.1375e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3737e-09, dtype=torch.float64)
secont condition:: tensor(3.3737e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5082e-09, dtype=torch.float64)
secont condition:: tensor(2.5082e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5335e-09, dtype=torch.float64)
secont condition:: tensor(2.5335e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6501e-09, dtype=torch.float64)
secont condition:: tensor(2.6501e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5964e-10, dtype=torch.float64)
secont condition:: tensor(5.5964e-10, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 70.10750985145569
curr_diff: 0 tensor(2.2207e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5042e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4368e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.8408e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(2.5926e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.0629e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4798e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.7048e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2498e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3526e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.1385e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.9947e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.7884e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7291e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3256e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.5621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4557e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.5894e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7008e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1880e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4842e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213966
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.171704
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.162236
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.158700
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154488
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152167
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.149953
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.153295
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 8, Batch: 0, Loss: 0.148834
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.146771
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 10, Batch: 0, Loss: 0.150627
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.147592
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.143320
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 13, Batch: 0, Loss: 0.146543
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.146664
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.145529
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.145671
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.145424
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 18, Batch: 0, Loss: 0.145041
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 19, Batch: 0, Loss: 0.146842
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.146102
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 21, Batch: 0, Loss: 0.145272
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 22, Batch: 0, Loss: 0.145627
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.147282
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.143237
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.141228
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 26, Batch: 0, Loss: 0.146393
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 27, Batch: 0, Loss: 0.143917
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.142583
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.144579
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.142116
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 31, Batch: 0, Loss: 0.141508
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 32, Batch: 0, Loss: 0.143621
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 33, Batch: 0, Loss: 0.145055
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 35, Batch: 0, Loss: 0.141124
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.143450
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.143527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.139381
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.139700
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.146580
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 41, Batch: 0, Loss: 0.140452
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.141820
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.144087
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.143070
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.141419
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 46, Batch: 0, Loss: 0.142277
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.139437
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.143830
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 49, Batch: 0, Loss: 0.141862
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.141655
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.140261
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 52, Batch: 0, Loss: 0.144052
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.142019
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.144400
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.145588
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.140610
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 57, Batch: 0, Loss: 0.143971
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.142438
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.143581
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.30198574066162
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.41417098045349
time_baseline:: 82.5523030757904
curr_diff: 0 tensor(8.5659e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.1571e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6487e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.4844e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.3860e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6355e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8885e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5202e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2305e-10, dtype=torch.float64)
secont condition:: tensor(2.2305e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2351e-09, dtype=torch.float64)
secont condition:: tensor(2.2351e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4430e-09, dtype=torch.float64)
secont condition:: tensor(1.4430e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5373e-09, dtype=torch.float64)
secont condition:: tensor(3.5373e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6127e-09, dtype=torch.float64)
secont condition:: tensor(5.6127e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3185e-09, dtype=torch.float64)
secont condition:: tensor(2.3185e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1350e-09, dtype=torch.float64)
secont condition:: tensor(3.1350e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6591e-09, dtype=torch.float64)
secont condition:: tensor(1.6591e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0428e-09, dtype=torch.float64)
secont condition:: tensor(1.0428e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2158e-09, dtype=torch.float64)
secont condition:: tensor(2.2158e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8932e-09, dtype=torch.float64)
secont condition:: tensor(2.8932e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7833e-10, dtype=torch.float64)
secont condition:: tensor(5.7833e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5387e-09, dtype=torch.float64)
secont condition:: tensor(1.5387e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6721e-09, dtype=torch.float64)
secont condition:: tensor(2.6721e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8325e-09, dtype=torch.float64)
secont condition:: tensor(2.8325e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9597e-09, dtype=torch.float64)
secont condition:: tensor(1.9597e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2520e-09, dtype=torch.float64)
secont condition:: tensor(1.2520e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8483e-09, dtype=torch.float64)
secont condition:: tensor(1.8483e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1836e-09, dtype=torch.float64)
secont condition:: tensor(2.1836e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3893e-09, dtype=torch.float64)
secont condition:: tensor(1.3893e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5225e-09, dtype=torch.float64)
secont condition:: tensor(2.5225e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9483e-09, dtype=torch.float64)
secont condition:: tensor(1.9483e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9264e-09, dtype=torch.float64)
secont condition:: tensor(1.9264e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1454e-09, dtype=torch.float64)
secont condition:: tensor(2.1454e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7459e-09, dtype=torch.float64)
secont condition:: tensor(1.7459e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4172e-10, dtype=torch.float64)
secont condition:: tensor(6.4172e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6284e-09, dtype=torch.float64)
secont condition:: tensor(1.6284e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7106e-09, dtype=torch.float64)
secont condition:: tensor(1.7106e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2434e-09, dtype=torch.float64)
secont condition:: tensor(1.2434e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7951e-09, dtype=torch.float64)
secont condition:: tensor(1.7951e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5362e-09, dtype=torch.float64)
secont condition:: tensor(1.5362e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7449e-09, dtype=torch.float64)
secont condition:: tensor(2.7449e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9233e-10, dtype=torch.float64)
secont condition:: tensor(7.9233e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5528e-09, dtype=torch.float64)
secont condition:: tensor(2.5528e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5556e-09, dtype=torch.float64)
secont condition:: tensor(2.5556e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0365e-09, dtype=torch.float64)
secont condition:: tensor(2.0365e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0627e-09, dtype=torch.float64)
secont condition:: tensor(2.0627e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4359e-09, dtype=torch.float64)
secont condition:: tensor(2.4359e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5898e-09, dtype=torch.float64)
secont condition:: tensor(2.5898e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8714e-09, dtype=torch.float64)
secont condition:: tensor(1.8714e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3899e-09, dtype=torch.float64)
secont condition:: tensor(1.3899e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7027e-09, dtype=torch.float64)
secont condition:: tensor(1.7027e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7008e-09, dtype=torch.float64)
secont condition:: tensor(1.7008e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3648e-09, dtype=torch.float64)
secont condition:: tensor(2.3648e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6619e-09, dtype=torch.float64)
secont condition:: tensor(2.6619e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1476e-09, dtype=torch.float64)
secont condition:: tensor(1.1476e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2991e-09, dtype=torch.float64)
secont condition:: tensor(2.2991e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6681e-09, dtype=torch.float64)
secont condition:: tensor(1.6681e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1338e-09, dtype=torch.float64)
secont condition:: tensor(1.1338e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5360e-09, dtype=torch.float64)
secont condition:: tensor(1.5360e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4592e-09, dtype=torch.float64)
secont condition:: tensor(2.4592e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9196e-09, dtype=torch.float64)
secont condition:: tensor(1.9196e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0820e-09, dtype=torch.float64)
secont condition:: tensor(1.0820e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4224e-09, dtype=torch.float64)
secont condition:: tensor(2.4224e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3795e-09, dtype=torch.float64)
secont condition:: tensor(1.3795e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7175e-09, dtype=torch.float64)
secont condition:: tensor(1.7175e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5084e-09, dtype=torch.float64)
secont condition:: tensor(2.5084e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5906e-09, dtype=torch.float64)
secont condition:: tensor(2.5906e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9839e-09, dtype=torch.float64)
secont condition:: tensor(2.9839e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3267e-09, dtype=torch.float64)
secont condition:: tensor(2.3267e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5097e-09, dtype=torch.float64)
secont condition:: tensor(2.5097e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5031e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1470e-09, dtype=torch.float64)
secont condition:: tensor(3.1470e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1464e-09, dtype=torch.float64)
secont condition:: tensor(2.1464e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4001e-09, dtype=torch.float64)
secont condition:: tensor(3.4001e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5172e-09, dtype=torch.float64)
secont condition:: tensor(2.5172e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7729e-09, dtype=torch.float64)
secont condition:: tensor(2.7729e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1622e-09, dtype=torch.float64)
secont condition:: tensor(2.1622e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6076e-09, dtype=torch.float64)
secont condition:: tensor(3.6076e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7866e-09, dtype=torch.float64)
secont condition:: tensor(2.7866e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 72.10046410560608
curr_diff: 0 tensor(1.8722e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5353e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.1679e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.7813e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.1112e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.5002e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.9922e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.5816e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4910e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4829e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.3868e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.3443e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0428e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.1090e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6086e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.2826e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2724e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4798e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5525e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3831e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.211030
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.173536
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.162150
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157826
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154551
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.153350
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.153797
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.149317
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.147151
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.149899
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.147621
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.149338
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.152568
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.148139
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.145788
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 15, Batch: 0, Loss: 0.145784
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.145521
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.143506
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.144087
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.147230
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.146609
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.141497
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 22, Batch: 0, Loss: 0.143186
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.142638
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.141241
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.141904
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.142880
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.143209
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.145592
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.143768
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.144670
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.147632
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.144945
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.143746
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 34, Batch: 0, Loss: 0.144764
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.140844
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.144234
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.144543
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.142883
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 39, Batch: 0, Loss: 0.141271
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.143478
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.143545
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.143831
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.142503
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 44, Batch: 0, Loss: 0.140824
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.141780
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.144706
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 47, Batch: 0, Loss: 0.141203
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.143997
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 49, Batch: 0, Loss: 0.141801
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.143784
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 51, Batch: 0, Loss: 0.144716
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 52, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 53, Batch: 0, Loss: 0.140853
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 54, Batch: 0, Loss: 0.141252
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.145333
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 56, Batch: 0, Loss: 0.143366
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.141015
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 58, Batch: 0, Loss: 0.141545
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 59, Batch: 0, Loss: 0.141444
Test Avg. Loss: 0.000013, Accuracy: 0.965600
training_time:: 123.7467896938324
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.4272575378418
time_baseline:: 82.56217551231384
curr_diff: 0 tensor(8.1842e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1648e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.8973e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0925e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.3361e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4602e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4668e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7524e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9019e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8016e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6969e-10, dtype=torch.float64)
secont condition:: tensor(2.6969e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0345e-09, dtype=torch.float64)
secont condition:: tensor(3.0345e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7144e-10, dtype=torch.float64)
secont condition:: tensor(9.7144e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7995e-09, dtype=torch.float64)
secont condition:: tensor(3.7995e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6986e-09, dtype=torch.float64)
secont condition:: tensor(1.6986e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9149e-09, dtype=torch.float64)
secont condition:: tensor(2.9149e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2418e-09, dtype=torch.float64)
secont condition:: tensor(3.2418e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8959e-09, dtype=torch.float64)
secont condition:: tensor(1.8959e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6788e-09, dtype=torch.float64)
secont condition:: tensor(2.6788e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9304e-09, dtype=torch.float64)
secont condition:: tensor(1.9304e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3637e-09, dtype=torch.float64)
secont condition:: tensor(1.3637e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8492e-09, dtype=torch.float64)
secont condition:: tensor(1.8492e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8412e-09, dtype=torch.float64)
secont condition:: tensor(2.8412e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6090e-09, dtype=torch.float64)
secont condition:: tensor(1.6090e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4334e-09, dtype=torch.float64)
secont condition:: tensor(1.4334e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5240e-09, dtype=torch.float64)
secont condition:: tensor(2.5240e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0437e-09, dtype=torch.float64)
secont condition:: tensor(2.0437e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9216e-10, dtype=torch.float64)
secont condition:: tensor(6.9216e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5539e-09, dtype=torch.float64)
secont condition:: tensor(1.5539e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0058e-09, dtype=torch.float64)
secont condition:: tensor(2.0058e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2541e-09, dtype=torch.float64)
secont condition:: tensor(3.2541e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4666e-09, dtype=torch.float64)
secont condition:: tensor(2.4666e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4248e-09, dtype=torch.float64)
secont condition:: tensor(2.4248e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7091e-09, dtype=torch.float64)
secont condition:: tensor(2.7091e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0905e-09, dtype=torch.float64)
secont condition:: tensor(1.0905e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6843e-09, dtype=torch.float64)
secont condition:: tensor(1.6843e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8765e-09, dtype=torch.float64)
secont condition:: tensor(2.8765e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7540e-09, dtype=torch.float64)
secont condition:: tensor(1.7540e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3888e-09, dtype=torch.float64)
secont condition:: tensor(1.3888e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8642e-09, dtype=torch.float64)
secont condition:: tensor(1.8642e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4418e-09, dtype=torch.float64)
secont condition:: tensor(1.4418e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3792e-09, dtype=torch.float64)
secont condition:: tensor(1.3792e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5273e-09, dtype=torch.float64)
secont condition:: tensor(2.5273e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5304e-09, dtype=torch.float64)
secont condition:: tensor(1.5304e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5285e-09, dtype=torch.float64)
secont condition:: tensor(1.5285e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3968e-09, dtype=torch.float64)
secont condition:: tensor(1.3968e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2514e-09, dtype=torch.float64)
secont condition:: tensor(1.2514e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9834e-09, dtype=torch.float64)
secont condition:: tensor(1.9834e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5501e-10, dtype=torch.float64)
secont condition:: tensor(7.5501e-10, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2433e-09, dtype=torch.float64)
secont condition:: tensor(2.2433e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3517e-09, dtype=torch.float64)
secont condition:: tensor(1.3517e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9969e-09, dtype=torch.float64)
secont condition:: tensor(1.9969e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1556e-09, dtype=torch.float64)
secont condition:: tensor(3.1556e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7304e-09, dtype=torch.float64)
secont condition:: tensor(2.7304e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5657e-10, dtype=torch.float64)
secont condition:: tensor(5.5657e-10, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7586e-09, dtype=torch.float64)
secont condition:: tensor(2.7586e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8351e-09, dtype=torch.float64)
secont condition:: tensor(2.8351e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9597e-09, dtype=torch.float64)
secont condition:: tensor(1.9597e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4845e-09, dtype=torch.float64)
secont condition:: tensor(2.4845e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9932e-09, dtype=torch.float64)
secont condition:: tensor(1.9932e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6541e-09, dtype=torch.float64)
secont condition:: tensor(3.6541e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9677e-09, dtype=torch.float64)
secont condition:: tensor(1.9677e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9567e-09, dtype=torch.float64)
secont condition:: tensor(2.9567e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3867e-09, dtype=torch.float64)
secont condition:: tensor(1.3867e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4895e-10, dtype=torch.float64)
secont condition:: tensor(7.4895e-10, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6650e-09, dtype=torch.float64)
secont condition:: tensor(3.6650e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7444e-09, dtype=torch.float64)
secont condition:: tensor(1.7444e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2269e-09, dtype=torch.float64)
secont condition:: tensor(2.2269e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5201e-09, dtype=torch.float64)
secont condition:: tensor(1.5201e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2353e-09, dtype=torch.float64)
secont condition:: tensor(1.2353e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8998e-09, dtype=torch.float64)
secont condition:: tensor(1.8998e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5353e-09, dtype=torch.float64)
secont condition:: tensor(2.5353e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2463e-09, dtype=torch.float64)
secont condition:: tensor(3.2463e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7511e-09, dtype=torch.float64)
secont condition:: tensor(1.7511e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4023e-09, dtype=torch.float64)
secont condition:: tensor(2.4023e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9899e-09, dtype=torch.float64)
secont condition:: tensor(2.9899e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8742e-09, dtype=torch.float64)
secont condition:: tensor(2.8742e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0955e-09, dtype=torch.float64)
secont condition:: tensor(2.0955e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3965e-09, dtype=torch.float64)
secont condition:: tensor(1.3965e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9373e-09, dtype=torch.float64)
secont condition:: tensor(2.9373e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0268e-09, dtype=torch.float64)
secont condition:: tensor(4.0268e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 70.76380228996277
curr_diff: 0 tensor(1.2707e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9036e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.3736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8820e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.1922e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.3000e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.3799e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.3112e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.6648e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3711e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.7724e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.4982e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7060e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0947e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3000e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.5835e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4000e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.6677e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7136e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1610e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6385e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215899
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.170860
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.160683
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 3, Batch: 0, Loss: 0.160508
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.155115
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.151044
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.151610
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.151772
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.152980
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.147804
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 10, Batch: 0, Loss: 0.147709
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.147104
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.146460
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 13, Batch: 0, Loss: 0.147274
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.145610
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.144297
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 16, Batch: 0, Loss: 0.143898
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.145594
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.144308
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.143942
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.143316
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 21, Batch: 0, Loss: 0.144466
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 22, Batch: 0, Loss: 0.142377
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.142941
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.143350
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.143864
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 26, Batch: 0, Loss: 0.142628
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 27, Batch: 0, Loss: 0.143508
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.139930
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.141543
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.145627
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 31, Batch: 0, Loss: 0.143748
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.141647
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 33, Batch: 0, Loss: 0.145887
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.142609
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.142008
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 36, Batch: 0, Loss: 0.141608
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.143503
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 38, Batch: 0, Loss: 0.143573
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 39, Batch: 0, Loss: 0.143955
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.142456
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.141986
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.141692
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 43, Batch: 0, Loss: 0.141648
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 44, Batch: 0, Loss: 0.139829
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 45, Batch: 0, Loss: 0.142279
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 46, Batch: 0, Loss: 0.144427
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.141733
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.145585
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 49, Batch: 0, Loss: 0.141106
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 50, Batch: 0, Loss: 0.145128
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.147052
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.142682
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.143385
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.143677
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.142637
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.143003
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 57, Batch: 0, Loss: 0.143632
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 58, Batch: 0, Loss: 0.143404
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 59, Batch: 0, Loss: 0.142270
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.4693033695221
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.48478388786316
time_baseline:: 82.6211245059967
curr_diff: 0 tensor(8.4231e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1810e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3968e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.3417e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3101e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.2493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2930e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9261e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6302e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 6
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7953e-09, dtype=torch.float64)
secont condition:: tensor(3.7953e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6686e-09, dtype=torch.float64)
secont condition:: tensor(2.6686e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1397e-10, dtype=torch.float64)
secont condition:: tensor(9.1397e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3888e-09, dtype=torch.float64)
secont condition:: tensor(3.3888e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8315e-09, dtype=torch.float64)
secont condition:: tensor(4.8315e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9727e-09, dtype=torch.float64)
secont condition:: tensor(2.9727e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8457e-09, dtype=torch.float64)
secont condition:: tensor(2.8457e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8506e-09, dtype=torch.float64)
secont condition:: tensor(1.8506e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6628e-09, dtype=torch.float64)
secont condition:: tensor(2.6628e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9590e-09, dtype=torch.float64)
secont condition:: tensor(1.9590e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8645e-09, dtype=torch.float64)
secont condition:: tensor(1.8645e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2308e-09, dtype=torch.float64)
secont condition:: tensor(2.2308e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6250e-09, dtype=torch.float64)
secont condition:: tensor(2.6250e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7011e-09, dtype=torch.float64)
secont condition:: tensor(1.7011e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3982e-09, dtype=torch.float64)
secont condition:: tensor(2.3982e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8725e-09, dtype=torch.float64)
secont condition:: tensor(1.8725e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6026e-09, dtype=torch.float64)
secont condition:: tensor(2.6026e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2437e-09, dtype=torch.float64)
secont condition:: tensor(2.2437e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5809e-09, dtype=torch.float64)
secont condition:: tensor(2.5809e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1452e-09, dtype=torch.float64)
secont condition:: tensor(1.1452e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8634e-09, dtype=torch.float64)
secont condition:: tensor(2.8634e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7305e-09, dtype=torch.float64)
secont condition:: tensor(1.7305e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7397e-09, dtype=torch.float64)
secont condition:: tensor(2.7397e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1625e-09, dtype=torch.float64)
secont condition:: tensor(2.1625e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2656e-09, dtype=torch.float64)
secont condition:: tensor(1.2656e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4604e-09, dtype=torch.float64)
secont condition:: tensor(1.4604e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9258e-10, dtype=torch.float64)
secont condition:: tensor(9.9258e-10, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2217e-09, dtype=torch.float64)
secont condition:: tensor(2.2217e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4247e-09, dtype=torch.float64)
secont condition:: tensor(2.4247e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1391e-09, dtype=torch.float64)
secont condition:: tensor(1.1391e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5935e-09, dtype=torch.float64)
secont condition:: tensor(1.5935e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2378e-09, dtype=torch.float64)
secont condition:: tensor(2.2378e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6344e-09, dtype=torch.float64)
secont condition:: tensor(1.6344e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7329e-09, dtype=torch.float64)
secont condition:: tensor(2.7329e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3990e-09, dtype=torch.float64)
secont condition:: tensor(2.3990e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4421e-09, dtype=torch.float64)
secont condition:: tensor(1.4421e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1474e-09, dtype=torch.float64)
secont condition:: tensor(2.1474e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6790e-09, dtype=torch.float64)
secont condition:: tensor(1.6790e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3986e-09, dtype=torch.float64)
secont condition:: tensor(1.3986e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2839e-09, dtype=torch.float64)
secont condition:: tensor(2.2839e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6649e-09, dtype=torch.float64)
secont condition:: tensor(1.6649e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8871e-09, dtype=torch.float64)
secont condition:: tensor(1.8871e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6341e-09, dtype=torch.float64)
secont condition:: tensor(1.6341e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1542e-09, dtype=torch.float64)
secont condition:: tensor(2.1542e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3157e-09, dtype=torch.float64)
secont condition:: tensor(2.3157e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8884e-09, dtype=torch.float64)
secont condition:: tensor(1.8884e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5493e-09, dtype=torch.float64)
secont condition:: tensor(2.5493e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8700e-09, dtype=torch.float64)
secont condition:: tensor(1.8700e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5254e-09, dtype=torch.float64)
secont condition:: tensor(1.5254e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9298e-10, dtype=torch.float64)
secont condition:: tensor(9.9298e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.3032e-09, dtype=torch.float64)
secont condition:: tensor(1.3032e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6768e-09, dtype=torch.float64)
secont condition:: tensor(2.6768e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3520e-09, dtype=torch.float64)
secont condition:: tensor(2.3520e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4929e-09, dtype=torch.float64)
secont condition:: tensor(2.4929e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2404e-09, dtype=torch.float64)
secont condition:: tensor(3.2404e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1090e-09, dtype=torch.float64)
secont condition:: tensor(2.1090e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7569e-09, dtype=torch.float64)
secont condition:: tensor(2.7569e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5751e-09, dtype=torch.float64)
secont condition:: tensor(2.5751e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1750e-09, dtype=torch.float64)
secont condition:: tensor(2.1750e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2870e-09, dtype=torch.float64)
secont condition:: tensor(2.2870e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8963e-09, dtype=torch.float64)
secont condition:: tensor(1.8963e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3112e-09, dtype=torch.float64)
secont condition:: tensor(3.3112e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0139e-09, dtype=torch.float64)
secont condition:: tensor(1.0139e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2340e-09, dtype=torch.float64)
secont condition:: tensor(2.2340e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0802e-09, dtype=torch.float64)
secont condition:: tensor(3.0802e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8728e-09, dtype=torch.float64)
secont condition:: tensor(1.8728e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4944e-09, dtype=torch.float64)
secont condition:: tensor(3.4944e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0749e-10, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9046e-09, dtype=torch.float64)
secont condition:: tensor(2.9046e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1433e-09, dtype=torch.float64)
secont condition:: tensor(5.1433e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4669e-09, dtype=torch.float64)
secont condition:: tensor(3.4669e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 71.50812578201294
curr_diff: 0 tensor(1.8169e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7690e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(1.4700e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.1675e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.0164e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2910e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8921e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0327e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.2693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7535e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(3.8825e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(8.4530e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.9124e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4808e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2430e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.3514e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2724e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.2396e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.1125e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4986e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965500
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215467
Test Avg. Loss: 0.000014, Accuracy: 0.962500
Train - Epoch 1, Batch: 0, Loss: 0.165818
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.153844
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.153693
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.151134
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.149495
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.151743
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 7, Batch: 0, Loss: 0.146826
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 8, Batch: 0, Loss: 0.139903
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 9, Batch: 0, Loss: 0.143236
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.141401
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.146992
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.141619
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.141657
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.140445
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.137913
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 16, Batch: 0, Loss: 0.142955
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 17, Batch: 0, Loss: 0.145755
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.145296
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 19, Batch: 0, Loss: 0.141991
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.146328
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 21, Batch: 0, Loss: 0.141831
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 22, Batch: 0, Loss: 0.150217
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 23, Batch: 0, Loss: 0.140948
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 24, Batch: 0, Loss: 0.144530
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 25, Batch: 0, Loss: 0.143997
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 26, Batch: 0, Loss: 0.140024
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 27, Batch: 0, Loss: 0.140692
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 28, Batch: 0, Loss: 0.143167
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 29, Batch: 0, Loss: 0.141922
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 30, Batch: 0, Loss: 0.145814
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 31, Batch: 0, Loss: 0.148583
Test Avg. Loss: 0.000013, Accuracy: 0.964900
training_time:: 65.9748158454895
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.36308145523071
time_baseline:: 44.434751749038696
curr_diff: 0 tensor(9.9819e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.2151e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4225e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3886e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.2111e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.1102e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1389e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0814e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6883e-32, dtype=torch.float64)
secont condition:: tensor(2.6883e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.8230e-09, dtype=torch.float64)
secont condition:: tensor(3.8230e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5489e-09, dtype=torch.float64)
secont condition:: tensor(5.5489e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7926e-09, dtype=torch.float64)
secont condition:: tensor(1.7926e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0894e-09, dtype=torch.float64)
secont condition:: tensor(2.0894e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6222e-09, dtype=torch.float64)
secont condition:: tensor(4.6222e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7841e-09, dtype=torch.float64)
secont condition:: tensor(3.7841e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8642e-09, dtype=torch.float64)
secont condition:: tensor(1.8642e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1676e-09, dtype=torch.float64)
secont condition:: tensor(2.1676e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5285e-09, dtype=torch.float64)
secont condition:: tensor(5.5285e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3182e-09, dtype=torch.float64)
secont condition:: tensor(1.3182e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4752e-09, dtype=torch.float64)
secont condition:: tensor(3.4752e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3514e-09, dtype=torch.float64)
secont condition:: tensor(1.3514e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3233e-09, dtype=torch.float64)
secont condition:: tensor(2.3233e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0930e-09, dtype=torch.float64)
secont condition:: tensor(2.0930e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4563e-09, dtype=torch.float64)
secont condition:: tensor(1.4563e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1004e-09, dtype=torch.float64)
secont condition:: tensor(1.1004e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7196e-09, dtype=torch.float64)
secont condition:: tensor(2.7196e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3414e-09, dtype=torch.float64)
secont condition:: tensor(5.3414e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-6.9517e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.1496e-10, dtype=torch.float64)
secont condition:: tensor(9.1496e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6326e-09, dtype=torch.float64)
secont condition:: tensor(1.6326e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6128e-09, dtype=torch.float64)
secont condition:: tensor(1.6128e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3880e-09, dtype=torch.float64)
secont condition:: tensor(5.3880e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5564e-09, dtype=torch.float64)
secont condition:: tensor(3.5564e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1585e-09, dtype=torch.float64)
secont condition:: tensor(5.1585e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8754e-09, dtype=torch.float64)
secont condition:: tensor(1.8754e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1520e-09, dtype=torch.float64)
secont condition:: tensor(2.1520e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1398e-09, dtype=torch.float64)
secont condition:: tensor(4.1398e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6032e-09, dtype=torch.float64)
secont condition:: tensor(4.6032e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7480e-09, dtype=torch.float64)
secont condition:: tensor(2.7480e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3123e-09, dtype=torch.float64)
secont condition:: tensor(1.3123e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6292e-09, dtype=torch.float64)
secont condition:: tensor(3.6292e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8074e-09, dtype=torch.float64)
secont condition:: tensor(2.8074e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1513e-10, dtype=torch.float64)
secont condition:: tensor(2.1513e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6267e-09, dtype=torch.float64)
secont condition:: tensor(1.6267e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0137e-09, dtype=torch.float64)
secont condition:: tensor(1.0137e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3663e-09, dtype=torch.float64)
secont condition:: tensor(1.3663e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2835e-09, dtype=torch.float64)
secont condition:: tensor(2.2835e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4892e-09, dtype=torch.float64)
secont condition:: tensor(1.4892e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3614e-09, dtype=torch.float64)
secont condition:: tensor(1.3614e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4242e-09, dtype=torch.float64)
secont condition:: tensor(2.4242e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6558e-09, dtype=torch.float64)
secont condition:: tensor(2.6558e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4825e-10, dtype=torch.float64)
secont condition:: tensor(5.4825e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5696e-09, dtype=torch.float64)
secont condition:: tensor(2.5696e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8016e-09, dtype=torch.float64)
secont condition:: tensor(2.8016e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2423e-09, dtype=torch.float64)
secont condition:: tensor(1.2423e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1135e-09, dtype=torch.float64)
secont condition:: tensor(2.1135e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2994e-09, dtype=torch.float64)
secont condition:: tensor(1.2994e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0538e-09, dtype=torch.float64)
secont condition:: tensor(4.0538e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4977e-09, dtype=torch.float64)
secont condition:: tensor(1.4977e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6891e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9244e-09, dtype=torch.float64)
secont condition:: tensor(6.9244e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.2335e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0308e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4893e-09, dtype=torch.float64)
secont condition:: tensor(5.4893e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7875e-09, dtype=torch.float64)
curr_secont condition:: tensor(-7.0250e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2575e-09, dtype=torch.float64)
secont condition:: tensor(3.2575e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.2412e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.1415e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7575e-09, dtype=torch.float64)
secont condition:: tensor(1.7575e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7478e-09, dtype=torch.float64)
secont condition:: tensor(2.7478e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8131e-09, dtype=torch.float64)
secont condition:: tensor(3.8131e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1349e-09, dtype=torch.float64)
secont condition:: tensor(6.1349e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1988e-08, dtype=torch.float64)
secont condition:: tensor(2.1988e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.8616e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.6356e-09, dtype=torch.float64)
secont condition:: tensor(6.6356e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1630e-09, dtype=torch.float64)
secont condition:: tensor(8.1630e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0311e-09, dtype=torch.float64)
secont condition:: tensor(8.0311e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5785e-09, dtype=torch.float64)
secont condition:: tensor(3.5785e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7991e-09, dtype=torch.float64)
secont condition:: tensor(4.7991e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5820e-09, dtype=torch.float64)
secont condition:: tensor(6.5820e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0328e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9477e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0065e-08, dtype=torch.float64)
secont condition:: tensor(1.0065e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4971e-09, dtype=torch.float64)
secont condition:: tensor(5.4971e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3648e-09, dtype=torch.float64)
secont condition:: tensor(5.3648e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1881e-09, dtype=torch.float64)
secont condition:: tensor(4.1881e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.11171531677246
curr_diff: 0 tensor(2.0398e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5347e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.6084e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5889e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.8231e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2382e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.7831e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5513e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.0006e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6909e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.4184e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3258e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8712e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7895e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8509e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0433e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.0917e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7466e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2577e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9611e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213478
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.160022
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.153606
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.150523
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.154042
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.153172
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.147419
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 7, Batch: 0, Loss: 0.146429
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 8, Batch: 0, Loss: 0.145359
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 9, Batch: 0, Loss: 0.143412
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.141649
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 11, Batch: 0, Loss: 0.146490
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 12, Batch: 0, Loss: 0.140136
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.141402
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 14, Batch: 0, Loss: 0.140355
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 15, Batch: 0, Loss: 0.144288
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.142070
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 17, Batch: 0, Loss: 0.147057
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 18, Batch: 0, Loss: 0.141863
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.145107
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 20, Batch: 0, Loss: 0.140825
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.143225
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 22, Batch: 0, Loss: 0.141165
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 23, Batch: 0, Loss: 0.139482
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 24, Batch: 0, Loss: 0.147197
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 25, Batch: 0, Loss: 0.141565
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 26, Batch: 0, Loss: 0.140312
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.144295
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 28, Batch: 0, Loss: 0.138577
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 29, Batch: 0, Loss: 0.139181
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 30, Batch: 0, Loss: 0.142818
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 31, Batch: 0, Loss: 0.141270
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 66.14955234527588
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.320425510406494
time_baseline:: 44.3918354511261
curr_diff: 0 tensor(1.0924e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.0701e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7805e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7851e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9603e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.1154e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1004e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8034e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5267e-08, dtype=torch.float64)
secont condition:: tensor(2.5267e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0958e-08, dtype=torch.float64)
secont condition:: tensor(1.0958e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7756e-09, dtype=torch.float64)
secont condition:: tensor(4.7756e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3090e-09, dtype=torch.float64)
secont condition:: tensor(2.3090e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0694e-09, dtype=torch.float64)
secont condition:: tensor(1.0694e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0932e-09, dtype=torch.float64)
secont condition:: tensor(1.0932e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2498e-09, dtype=torch.float64)
secont condition:: tensor(5.2498e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8358e-09, dtype=torch.float64)
secont condition:: tensor(2.8358e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0610e-09, dtype=torch.float64)
secont condition:: tensor(2.0610e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1960e-09, dtype=torch.float64)
secont condition:: tensor(1.1960e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4681e-09, dtype=torch.float64)
secont condition:: tensor(3.4681e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5623e-09, dtype=torch.float64)
secont condition:: tensor(1.5623e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9170e-09, dtype=torch.float64)
secont condition:: tensor(2.9170e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3368e-09, dtype=torch.float64)
secont condition:: tensor(1.3368e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0850e-09, dtype=torch.float64)
secont condition:: tensor(1.0850e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5191e-09, dtype=torch.float64)
secont condition:: tensor(5.5191e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0267e-09, dtype=torch.float64)
secont condition:: tensor(6.0267e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6903e-09, dtype=torch.float64)
secont condition:: tensor(3.6903e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5139e-09, dtype=torch.float64)
secont condition:: tensor(3.5139e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1246e-09, dtype=torch.float64)
secont condition:: tensor(2.1246e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2653e-09, dtype=torch.float64)
secont condition:: tensor(1.2653e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7350e-09, dtype=torch.float64)
secont condition:: tensor(3.7350e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9034e-09, dtype=torch.float64)
secont condition:: tensor(1.9034e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4654e-09, dtype=torch.float64)
secont condition:: tensor(1.4654e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2386e-09, dtype=torch.float64)
secont condition:: tensor(1.2386e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7717e-09, dtype=torch.float64)
secont condition:: tensor(1.7717e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0953e-09, dtype=torch.float64)
secont condition:: tensor(3.0953e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0870e-09, dtype=torch.float64)
secont condition:: tensor(2.0870e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3021e-09, dtype=torch.float64)
secont condition:: tensor(1.3021e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1450e-09, dtype=torch.float64)
secont condition:: tensor(1.1450e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6617e-09, dtype=torch.float64)
secont condition:: tensor(5.6617e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3574e-09, dtype=torch.float64)
secont condition:: tensor(2.3574e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9859e-09, dtype=torch.float64)
secont condition:: tensor(3.9859e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3257e-10, dtype=torch.float64)
secont condition:: tensor(6.3257e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9536e-09, dtype=torch.float64)
secont condition:: tensor(1.9536e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6732e-09, dtype=torch.float64)
secont condition:: tensor(1.6732e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6247e-09, dtype=torch.float64)
secont condition:: tensor(2.6247e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3262e-09, dtype=torch.float64)
secont condition:: tensor(1.3262e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9985e-09, dtype=torch.float64)
secont condition:: tensor(1.9985e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5672e-09, dtype=torch.float64)
secont condition:: tensor(1.5672e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6198e-09, dtype=torch.float64)
secont condition:: tensor(2.6198e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4117e-09, dtype=torch.float64)
secont condition:: tensor(3.4117e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0592e-09, dtype=torch.float64)
secont condition:: tensor(2.0592e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4531e-09, dtype=torch.float64)
secont condition:: tensor(1.4531e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1826e-09, dtype=torch.float64)
secont condition:: tensor(2.1826e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2033e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1595e-09, dtype=torch.float64)
secont condition:: tensor(1.1595e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.5284e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1784e-09, dtype=torch.float64)
secont condition:: tensor(1.1784e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1531e-09, dtype=torch.float64)
secont condition:: tensor(5.1531e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8279e-09, dtype=torch.float64)
secont condition:: tensor(1.8279e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4798e-09, dtype=torch.float64)
secont condition:: tensor(3.4798e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2674e-09, dtype=torch.float64)
secont condition:: tensor(1.2674e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8018e-09, dtype=torch.float64)
secont condition:: tensor(2.8018e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6044e-09, dtype=torch.float64)
secont condition:: tensor(2.6044e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2601e-09, dtype=torch.float64)
secont condition:: tensor(2.2601e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4444e-09, dtype=torch.float64)
secont condition:: tensor(1.4444e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5489e-09, dtype=torch.float64)
secont condition:: tensor(1.5489e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7399e-09, dtype=torch.float64)
secont condition:: tensor(4.7399e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8012e-09, dtype=torch.float64)
secont condition:: tensor(1.8012e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0758e-09, dtype=torch.float64)
secont condition:: tensor(5.0758e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1037e-09, dtype=torch.float64)
secont condition:: tensor(3.1037e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5001e-09, dtype=torch.float64)
secont condition:: tensor(2.5001e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1999e-09, dtype=torch.float64)
secont condition:: tensor(1.1999e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9645e-09, dtype=torch.float64)
secont condition:: tensor(2.9645e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7955e-09, dtype=torch.float64)
secont condition:: tensor(1.7955e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1760e-09, dtype=torch.float64)
secont condition:: tensor(3.1760e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8319e-09, dtype=torch.float64)
secont condition:: tensor(2.8319e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5799e-09, dtype=torch.float64)
secont condition:: tensor(1.5799e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1456e-09, dtype=torch.float64)
secont condition:: tensor(3.1456e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9654e-09, dtype=torch.float64)
secont condition:: tensor(4.9654e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0272e-09, dtype=torch.float64)
secont condition:: tensor(5.0272e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3661e-09, dtype=torch.float64)
secont condition:: tensor(4.3661e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5399e-09, dtype=torch.float64)
secont condition:: tensor(8.5399e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3758e-09, dtype=torch.float64)
secont condition:: tensor(3.3758e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3189e-10, dtype=torch.float64)
secont condition:: tensor(6.3189e-10, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.03711795806885
curr_diff: 0 tensor(2.3237e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.0519e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.7284e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2972e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.1519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1272e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2237e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.4176e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.4095e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.1694e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0430e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0081e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.1637e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0410e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0189e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.1442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0023e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4940e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5559e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215552
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 1, Batch: 0, Loss: 0.165450
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.151512
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.150466
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.147561
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 5, Batch: 0, Loss: 0.154914
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.140998
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.150028
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 8, Batch: 0, Loss: 0.143162
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.144127
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.141301
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.143988
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.145266
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 13, Batch: 0, Loss: 0.143696
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 14, Batch: 0, Loss: 0.143048
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 15, Batch: 0, Loss: 0.143570
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 16, Batch: 0, Loss: 0.138484
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 17, Batch: 0, Loss: 0.143343
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 18, Batch: 0, Loss: 0.148127
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 19, Batch: 0, Loss: 0.146235
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 20, Batch: 0, Loss: 0.147298
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 21, Batch: 0, Loss: 0.143011
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.137777
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 23, Batch: 0, Loss: 0.148723
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 24, Batch: 0, Loss: 0.141267
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 25, Batch: 0, Loss: 0.143299
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 26, Batch: 0, Loss: 0.149822
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.145973
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 28, Batch: 0, Loss: 0.145441
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 29, Batch: 0, Loss: 0.144757
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 30, Batch: 0, Loss: 0.146231
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 31, Batch: 0, Loss: 0.142506
Test Avg. Loss: 0.000013, Accuracy: 0.965900
training_time:: 65.82389497756958
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.36897325515747
time_baseline:: 44.44295120239258
curr_diff: 0 tensor(9.7071e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6240e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5545e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5116e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9226e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.5013e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.1265e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2872e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4807e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9887e-10, dtype=torch.float64)
secont condition:: tensor(2.9887e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5510e-10, dtype=torch.float64)
secont condition:: tensor(1.5510e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4412e-10, dtype=torch.float64)
secont condition:: tensor(1.4412e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0814e-09, dtype=torch.float64)
secont condition:: tensor(8.0814e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3983e-08, dtype=torch.float64)
secont condition:: tensor(1.3983e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7460e-09, dtype=torch.float64)
secont condition:: tensor(5.7460e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5039e-09, dtype=torch.float64)
secont condition:: tensor(2.5039e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6241e-09, dtype=torch.float64)
secont condition:: tensor(1.6241e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4709e-09, dtype=torch.float64)
secont condition:: tensor(1.4709e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3806e-09, dtype=torch.float64)
secont condition:: tensor(2.3806e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7802e-09, dtype=torch.float64)
secont condition:: tensor(1.7802e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9978e-10, dtype=torch.float64)
secont condition:: tensor(1.9978e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.8731e-09, dtype=torch.float64)
secont condition:: tensor(7.8731e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0519e-09, dtype=torch.float64)
secont condition:: tensor(3.0519e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6197e-10, dtype=torch.float64)
secont condition:: tensor(4.6197e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2816e-09, dtype=torch.float64)
secont condition:: tensor(3.2816e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4463e-10, dtype=torch.float64)
secont condition:: tensor(9.4463e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6412e-09, dtype=torch.float64)
secont condition:: tensor(2.6412e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0289e-09, dtype=torch.float64)
secont condition:: tensor(2.0289e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2548e-09, dtype=torch.float64)
secont condition:: tensor(3.2548e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6411e-10, dtype=torch.float64)
secont condition:: tensor(7.6411e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8216e-09, dtype=torch.float64)
secont condition:: tensor(3.8216e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2812e-09, dtype=torch.float64)
secont condition:: tensor(2.2812e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8328e-09, dtype=torch.float64)
secont condition:: tensor(1.8328e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4163e-09, dtype=torch.float64)
secont condition:: tensor(1.4163e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6474e-10, dtype=torch.float64)
secont condition:: tensor(9.6474e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9169e-09, dtype=torch.float64)
secont condition:: tensor(2.9169e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7576e-09, dtype=torch.float64)
secont condition:: tensor(1.7576e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1893e-09, dtype=torch.float64)
secont condition:: tensor(1.1893e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0170e-09, dtype=torch.float64)
secont condition:: tensor(1.0170e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8189e-09, dtype=torch.float64)
secont condition:: tensor(2.8189e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6695e-09, dtype=torch.float64)
secont condition:: tensor(2.6695e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1007e-09, dtype=torch.float64)
secont condition:: tensor(1.1007e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4066e-09, dtype=torch.float64)
secont condition:: tensor(1.4066e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6731e-09, dtype=torch.float64)
secont condition:: tensor(3.6731e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1308e-09, dtype=torch.float64)
secont condition:: tensor(1.1308e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9151e-09, dtype=torch.float64)
secont condition:: tensor(1.9151e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9908e-09, dtype=torch.float64)
secont condition:: tensor(1.9908e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7056e-10, dtype=torch.float64)
secont condition:: tensor(3.7056e-10, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4507e-10, dtype=torch.float64)
secont condition:: tensor(8.4507e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5086e-09, dtype=torch.float64)
secont condition:: tensor(1.5086e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0058e-09, dtype=torch.float64)
secont condition:: tensor(2.0058e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2519e-09, dtype=torch.float64)
secont condition:: tensor(1.2519e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5089e-09, dtype=torch.float64)
secont condition:: tensor(5.5089e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0876e-09, dtype=torch.float64)
secont condition:: tensor(6.0876e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5452e-09, dtype=torch.float64)
secont condition:: tensor(4.5452e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5261e-09, dtype=torch.float64)
secont condition:: tensor(1.5261e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5060e-09, dtype=torch.float64)
secont condition:: tensor(1.5060e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7311e-09, dtype=torch.float64)
secont condition:: tensor(1.7311e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6899e-09, dtype=torch.float64)
secont condition:: tensor(1.6899e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1605e-09, dtype=torch.float64)
secont condition:: tensor(1.1605e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1200e-09, dtype=torch.float64)
secont condition:: tensor(8.1200e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2992e-09, dtype=torch.float64)
secont condition:: tensor(2.2992e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3783e-10, dtype=torch.float64)
secont condition:: tensor(7.3783e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7729e-09, dtype=torch.float64)
secont condition:: tensor(3.7729e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2516e-09, dtype=torch.float64)
secont condition:: tensor(2.2516e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8967e-09, dtype=torch.float64)
secont condition:: tensor(3.8967e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6989e-09, dtype=torch.float64)
secont condition:: tensor(2.6989e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1041e-09, dtype=torch.float64)
secont condition:: tensor(2.1041e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3452e-09, dtype=torch.float64)
secont condition:: tensor(1.3452e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3993e-09, dtype=torch.float64)
secont condition:: tensor(3.3993e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1216e-09, dtype=torch.float64)
secont condition:: tensor(2.1216e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1392e-10, dtype=torch.float64)
secont condition:: tensor(6.1392e-10, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5186e-10, dtype=torch.float64)
secont condition:: tensor(4.5186e-10, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8403e-09, dtype=torch.float64)
secont condition:: tensor(1.8403e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5737e-09, dtype=torch.float64)
secont condition:: tensor(2.5737e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4297e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.2096e-10, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5855e-09, dtype=torch.float64)
secont condition:: tensor(4.5855e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0636e-09, dtype=torch.float64)
secont condition:: tensor(6.0636e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4069e-09, dtype=torch.float64)
secont condition:: tensor(3.4069e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3854e-09, dtype=torch.float64)
secont condition:: tensor(2.3854e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6243e-09, dtype=torch.float64)
secont condition:: tensor(6.6243e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1090e-09, dtype=torch.float64)
secont condition:: tensor(5.1090e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6166e-09, dtype=torch.float64)
secont condition:: tensor(7.6166e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.2460e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.2230e-09, dtype=torch.float64)
secont condition:: tensor(5.2230e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9317e-09, dtype=torch.float64)
secont condition:: tensor(4.9317e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.044867753982544
curr_diff: 0 tensor(2.1949e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3929e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4100e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.1388e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.1979e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1028e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.6630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.7152e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.5223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.8174e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.9982e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.2697e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1361e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.1584e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0579e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.5656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0189e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.5172e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6713e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.221072
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 1, Batch: 0, Loss: 0.156698
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.156674
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.151452
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 4, Batch: 0, Loss: 0.150799
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 5, Batch: 0, Loss: 0.147760
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 6, Batch: 0, Loss: 0.143288
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.152445
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 8, Batch: 0, Loss: 0.146815
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 9, Batch: 0, Loss: 0.143701
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.143058
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 11, Batch: 0, Loss: 0.145178
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.147141
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 13, Batch: 0, Loss: 0.137484
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.144756
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 15, Batch: 0, Loss: 0.143745
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.150252
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 17, Batch: 0, Loss: 0.140606
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.141624
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.140477
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 20, Batch: 0, Loss: 0.137189
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 21, Batch: 0, Loss: 0.142664
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 22, Batch: 0, Loss: 0.139463
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 23, Batch: 0, Loss: 0.140737
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.142727
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 25, Batch: 0, Loss: 0.144538
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.140474
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 27, Batch: 0, Loss: 0.148031
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 28, Batch: 0, Loss: 0.141479
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.143693
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 30, Batch: 0, Loss: 0.142394
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 31, Batch: 0, Loss: 0.140602
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 66.00885105133057
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.37174105644226
time_baseline:: 44.442699670791626
curr_diff: 0 tensor(1.0692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0041e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.9263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1250e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7267e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.8408e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6657e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.2288e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8349e-08, dtype=torch.float64)
secont condition:: tensor(1.8349e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7492e-09, dtype=torch.float64)
secont condition:: tensor(6.7492e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5479e-09, dtype=torch.float64)
secont condition:: tensor(3.5479e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8696e-09, dtype=torch.float64)
secont condition:: tensor(1.8696e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3517e-09, dtype=torch.float64)
secont condition:: tensor(1.3517e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8035e-10, dtype=torch.float64)
secont condition:: tensor(9.8035e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4343e-09, dtype=torch.float64)
secont condition:: tensor(4.4343e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3402e-09, dtype=torch.float64)
secont condition:: tensor(2.3402e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1993e-09, dtype=torch.float64)
secont condition:: tensor(1.1993e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2622e-09, dtype=torch.float64)
secont condition:: tensor(1.2622e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2929e-09, dtype=torch.float64)
secont condition:: tensor(4.2929e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0252e-09, dtype=torch.float64)
secont condition:: tensor(2.0252e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1932e-09, dtype=torch.float64)
secont condition:: tensor(1.1932e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5467e-10, dtype=torch.float64)
secont condition:: tensor(9.5467e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.4700e-09, dtype=torch.float64)
secont condition:: tensor(3.4700e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7978e-09, dtype=torch.float64)
secont condition:: tensor(1.7978e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5555e-09, dtype=torch.float64)
secont condition:: tensor(1.5555e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2849e-10, dtype=torch.float64)
secont condition:: tensor(9.2849e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7847e-09, dtype=torch.float64)
secont condition:: tensor(2.7847e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7690e-09, dtype=torch.float64)
secont condition:: tensor(1.7690e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3613e-09, dtype=torch.float64)
secont condition:: tensor(1.3613e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2413e-09, dtype=torch.float64)
secont condition:: tensor(4.2413e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8220e-09, dtype=torch.float64)
secont condition:: tensor(1.8220e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6930e-09, dtype=torch.float64)
secont condition:: tensor(1.6930e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4791e-09, dtype=torch.float64)
secont condition:: tensor(1.4791e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8344e-09, dtype=torch.float64)
secont condition:: tensor(1.8344e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2361e-09, dtype=torch.float64)
secont condition:: tensor(1.2361e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7626e-09, dtype=torch.float64)
secont condition:: tensor(4.7626e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7144e-09, dtype=torch.float64)
secont condition:: tensor(1.7144e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7420e-09, dtype=torch.float64)
secont condition:: tensor(1.7420e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7754e-09, dtype=torch.float64)
secont condition:: tensor(1.7754e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7696e-09, dtype=torch.float64)
secont condition:: tensor(3.7696e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2751e-09, dtype=torch.float64)
secont condition:: tensor(6.2751e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0015e-09, dtype=torch.float64)
secont condition:: tensor(3.0015e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0244e-09, dtype=torch.float64)
secont condition:: tensor(1.0244e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9045e-09, dtype=torch.float64)
secont condition:: tensor(3.9045e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0175e-09, dtype=torch.float64)
secont condition:: tensor(3.0175e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5847e-09, dtype=torch.float64)
secont condition:: tensor(5.5847e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8877e-09, dtype=torch.float64)
secont condition:: tensor(3.8877e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5441e-09, dtype=torch.float64)
secont condition:: tensor(2.5441e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5300e-09, dtype=torch.float64)
secont condition:: tensor(2.5300e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9067e-09, dtype=torch.float64)
secont condition:: tensor(1.9067e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2390e-09, dtype=torch.float64)
secont condition:: tensor(2.2390e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1453e-09, dtype=torch.float64)
secont condition:: tensor(2.1453e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1070e-09, dtype=torch.float64)
secont condition:: tensor(2.1070e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5214e-09, dtype=torch.float64)
secont condition:: tensor(1.5214e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2091e-09, dtype=torch.float64)
secont condition:: tensor(3.2091e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0771e-09, dtype=torch.float64)
secont condition:: tensor(3.0771e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5166e-09, dtype=torch.float64)
secont condition:: tensor(1.5166e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1876e-09, dtype=torch.float64)
secont condition:: tensor(3.1876e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3214e-09, dtype=torch.float64)
secont condition:: tensor(2.3214e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5544e-09, dtype=torch.float64)
secont condition:: tensor(1.5544e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8274e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1496e-09, dtype=torch.float64)
secont condition:: tensor(2.1496e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7738e-09, dtype=torch.float64)
secont condition:: tensor(1.7738e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9728e-09, dtype=torch.float64)
secont condition:: tensor(4.9728e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2103e-09, dtype=torch.float64)
secont condition:: tensor(5.2103e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8955e-09, dtype=torch.float64)
secont condition:: tensor(4.8955e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6592e-09, dtype=torch.float64)
secont condition:: tensor(2.6592e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8429e-09, dtype=torch.float64)
secont condition:: tensor(1.8429e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7997e-09, dtype=torch.float64)
secont condition:: tensor(1.7997e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3540e-09, dtype=torch.float64)
secont condition:: tensor(1.3540e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4556e-09, dtype=torch.float64)
secont condition:: tensor(2.4556e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9621e-09, dtype=torch.float64)
secont condition:: tensor(1.9621e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2720e-09, dtype=torch.float64)
secont condition:: tensor(3.2720e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2351e-09, dtype=torch.float64)
secont condition:: tensor(3.2351e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5660e-09, dtype=torch.float64)
secont condition:: tensor(3.5660e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5739e-09, dtype=torch.float64)
secont condition:: tensor(1.5739e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3883e-08, dtype=torch.float64)
secont condition:: tensor(1.3883e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3328e-10, dtype=torch.float64)
secont condition:: tensor(7.3328e-10, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8399e-09, dtype=torch.float64)
secont condition:: tensor(4.8399e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8715e-09, dtype=torch.float64)
secont condition:: tensor(3.8715e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7102e-09, dtype=torch.float64)
secont condition:: tensor(5.7102e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0036e-09, dtype=torch.float64)
secont condition:: tensor(3.0036e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9783e-09, dtype=torch.float64)
secont condition:: tensor(2.9783e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1116e-09, dtype=torch.float64)
secont condition:: tensor(4.1116e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1251e-09, dtype=torch.float64)
secont condition:: tensor(4.1251e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.91318702697754
curr_diff: 0 tensor(2.4026e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9636e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.0447e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2082e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.0594e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.8597e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.1004e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0211e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.4900e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4859e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5277e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0703e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0842e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.7307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1991e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.6548e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.7555e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5924e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4470e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0977e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214781
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 1, Batch: 0, Loss: 0.159789
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.151802
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.149206
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 4, Batch: 0, Loss: 0.148146
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.150817
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.154621
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.145924
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.143536
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.145383
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 10, Batch: 0, Loss: 0.148263
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 11, Batch: 0, Loss: 0.139457
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.144541
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.146136
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 14, Batch: 0, Loss: 0.141586
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.144553
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.141747
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 18, Batch: 0, Loss: 0.138014
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 19, Batch: 0, Loss: 0.146381
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 20, Batch: 0, Loss: 0.140352
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 21, Batch: 0, Loss: 0.145818
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 22, Batch: 0, Loss: 0.145013
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 23, Batch: 0, Loss: 0.142609
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 24, Batch: 0, Loss: 0.142909
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.139721
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 26, Batch: 0, Loss: 0.145848
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 27, Batch: 0, Loss: 0.145146
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 28, Batch: 0, Loss: 0.138094
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 29, Batch: 0, Loss: 0.145281
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.143487
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 31, Batch: 0, Loss: 0.140549
Test Avg. Loss: 0.000013, Accuracy: 0.965000
training_time:: 66.03228306770325
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.31211018562317
time_baseline:: 44.38339710235596
curr_diff: 0 tensor(8.8499e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4584e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4176e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.8359e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.5646e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8276e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9206e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.3904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4403e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 6
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3171e-10, dtype=torch.float64)
secont condition:: tensor(1.3171e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6746e-10, dtype=torch.float64)
secont condition:: tensor(1.6746e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.4259e-09, dtype=torch.float64)
secont condition:: tensor(5.4259e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7399e-09, dtype=torch.float64)
secont condition:: tensor(2.7399e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2058e-09, dtype=torch.float64)
secont condition:: tensor(1.2058e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5691e-10, dtype=torch.float64)
secont condition:: tensor(7.5691e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.8546e-09, dtype=torch.float64)
secont condition:: tensor(3.8546e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8048e-09, dtype=torch.float64)
secont condition:: tensor(1.8048e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3635e-09, dtype=torch.float64)
secont condition:: tensor(4.3635e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9554e-09, dtype=torch.float64)
secont condition:: tensor(1.9554e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4911e-09, dtype=torch.float64)
secont condition:: tensor(3.4911e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0391e-09, dtype=torch.float64)
secont condition:: tensor(1.0391e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.9402e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3821e-09, dtype=torch.float64)
secont condition:: tensor(2.3821e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9377e-09, dtype=torch.float64)
secont condition:: tensor(1.9377e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0822e-09, dtype=torch.float64)
secont condition:: tensor(2.0822e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6758e-09, dtype=torch.float64)
secont condition:: tensor(4.6758e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9711e-09, dtype=torch.float64)
secont condition:: tensor(1.9711e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4504e-10, dtype=torch.float64)
secont condition:: tensor(5.4504e-10, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2725e-09, dtype=torch.float64)
secont condition:: tensor(1.2725e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1469e-09, dtype=torch.float64)
secont condition:: tensor(1.1469e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8428e-10, dtype=torch.float64)
secont condition:: tensor(8.8428e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8585e-09, dtype=torch.float64)
secont condition:: tensor(4.8585e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0778e-09, dtype=torch.float64)
secont condition:: tensor(3.0778e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2722e-10, dtype=torch.float64)
secont condition:: tensor(9.2722e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4861e-09, dtype=torch.float64)
secont condition:: tensor(1.4861e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0304e-10, dtype=torch.float64)
secont condition:: tensor(8.0304e-10, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6002e-09, dtype=torch.float64)
secont condition:: tensor(3.6002e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0556e-09, dtype=torch.float64)
secont condition:: tensor(2.0556e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6727e-10, dtype=torch.float64)
secont condition:: tensor(2.6727e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2855e-09, dtype=torch.float64)
secont condition:: tensor(1.2855e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8935e-09, dtype=torch.float64)
secont condition:: tensor(4.8935e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9064e-09, dtype=torch.float64)
secont condition:: tensor(5.9064e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0135e-09, dtype=torch.float64)
secont condition:: tensor(2.0135e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9215e-09, dtype=torch.float64)
secont condition:: tensor(1.9215e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4630e-09, dtype=torch.float64)
secont condition:: tensor(1.4630e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4592e-09, dtype=torch.float64)
secont condition:: tensor(3.4592e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1071e-09, dtype=torch.float64)
secont condition:: tensor(2.1071e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3135e-09, dtype=torch.float64)
secont condition:: tensor(2.3135e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8796e-09, dtype=torch.float64)
secont condition:: tensor(1.8796e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3396e-09, dtype=torch.float64)
secont condition:: tensor(1.3396e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8902e-09, dtype=torch.float64)
secont condition:: tensor(2.8902e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5910e-09, dtype=torch.float64)
secont condition:: tensor(1.5910e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0339e-09, dtype=torch.float64)
secont condition:: tensor(4.0339e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3108e-09, dtype=torch.float64)
secont condition:: tensor(1.3108e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0746e-09, dtype=torch.float64)
secont condition:: tensor(2.0746e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0583e-09, dtype=torch.float64)
secont condition:: tensor(2.0583e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0397e-09, dtype=torch.float64)
secont condition:: tensor(4.0397e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3719e-09, dtype=torch.float64)
secont condition:: tensor(3.3719e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1928e-09, dtype=torch.float64)
secont condition:: tensor(2.1928e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4062e-09, dtype=torch.float64)
secont condition:: tensor(4.4062e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6870e-09, dtype=torch.float64)
secont condition:: tensor(2.6870e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2955e-09, dtype=torch.float64)
secont condition:: tensor(2.2955e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7745e-09, dtype=torch.float64)
secont condition:: tensor(3.7745e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2201e-09, dtype=torch.float64)
secont condition:: tensor(2.2201e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2614e-09, dtype=torch.float64)
secont condition:: tensor(1.2614e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9768e-09, dtype=torch.float64)
secont condition:: tensor(1.9768e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2967e-09, dtype=torch.float64)
secont condition:: tensor(1.2967e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1609e-09, dtype=torch.float64)
secont condition:: tensor(3.1609e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8481e-09, dtype=torch.float64)
secont condition:: tensor(1.8481e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5264e-09, dtype=torch.float64)
secont condition:: tensor(1.5264e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3127e-09, dtype=torch.float64)
secont condition:: tensor(4.3127e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7303e-09, dtype=torch.float64)
secont condition:: tensor(2.7303e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6882e-09, dtype=torch.float64)
secont condition:: tensor(3.6882e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7336e-09, dtype=torch.float64)
secont condition:: tensor(1.7336e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1824e-09, dtype=torch.float64)
secont condition:: tensor(3.1824e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3636e-09, dtype=torch.float64)
secont condition:: tensor(3.3636e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8704e-10, dtype=torch.float64)
secont condition:: tensor(9.8704e-10, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9267e-09, dtype=torch.float64)
secont condition:: tensor(2.9267e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5161e-09, dtype=torch.float64)
secont condition:: tensor(4.5161e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2565e-09, dtype=torch.float64)
secont condition:: tensor(2.2565e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6473e-09, dtype=torch.float64)
secont condition:: tensor(1.6473e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6208e-09, dtype=torch.float64)
secont condition:: tensor(4.6208e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5693e-09, dtype=torch.float64)
secont condition:: tensor(7.5693e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.4693706035614
curr_diff: 0 tensor(1.5403e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.7417e-08, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.3983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0807e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(3.5152e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.3100e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.9394e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0954e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8502e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3990e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(4.7073e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.4665e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6042e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0439e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3026e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.9615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4542e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.9096e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.8169e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.6499e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3625e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.225464
Train - Epoch 0, Batch: 10, Loss: 0.150645
Test Avg. Loss: 0.000038, Accuracy: 0.964400
Train - Epoch 1, Batch: 0, Loss: 0.142207
Train - Epoch 1, Batch: 10, Loss: 0.157855
Test Avg. Loss: 0.000037, Accuracy: 0.963900
Train - Epoch 2, Batch: 0, Loss: 0.149685
Train - Epoch 2, Batch: 10, Loss: 0.138388
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.143767
Train - Epoch 3, Batch: 10, Loss: 0.143850
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 4, Batch: 0, Loss: 0.146861
Train - Epoch 4, Batch: 10, Loss: 0.139880
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 5, Batch: 0, Loss: 0.141228
Train - Epoch 5, Batch: 10, Loss: 0.135193
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 6, Batch: 0, Loss: 0.151119
Train - Epoch 6, Batch: 10, Loss: 0.135515
Test Avg. Loss: 0.000037, Accuracy: 0.965300
Train - Epoch 7, Batch: 0, Loss: 0.152346
Train - Epoch 7, Batch: 10, Loss: 0.149860
Test Avg. Loss: 0.000037, Accuracy: 0.965800
training_time:: 16.609029054641724
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.134316682815552
time_baseline:: 12.152268648147583
curr_diff: 0 tensor(1.0335e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.7170e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3957e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7712e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.2756e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7074e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4713e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2464e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6853e-10, dtype=torch.float64)
secont condition:: tensor(6.6853e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1413e-09, dtype=torch.float64)
secont condition:: tensor(2.1413e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3182e-10, dtype=torch.float64)
secont condition:: tensor(9.3182e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5900e-09, dtype=torch.float64)
secont condition:: tensor(1.5900e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5517e-10, dtype=torch.float64)
secont condition:: tensor(7.5517e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0792e-10, dtype=torch.float64)
secont condition:: tensor(4.0792e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7559e-09, dtype=torch.float64)
secont condition:: tensor(1.7559e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7061e-08, dtype=torch.float64)
secont condition:: tensor(2.7061e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1104e-08, dtype=torch.float64)
secont condition:: tensor(1.1104e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9792e-09, dtype=torch.float64)
secont condition:: tensor(8.9792e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6101e-09, dtype=torch.float64)
secont condition:: tensor(2.6101e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4783e-09, dtype=torch.float64)
secont condition:: tensor(4.4783e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2530e-09, dtype=torch.float64)
secont condition:: tensor(1.2530e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2846e-09, dtype=torch.float64)
secont condition:: tensor(3.2846e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3120e-06, dtype=torch.float64)
secont condition:: tensor(3.3120e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2696e-09, dtype=torch.float64)
secont condition:: tensor(3.2696e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4437e-06, dtype=torch.float64)
secont condition:: tensor(1.4437e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8404e-09, dtype=torch.float64)
secont condition:: tensor(2.8404e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0498e-06, dtype=torch.float64)
secont condition:: tensor(3.0498e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8163e-09, dtype=torch.float64)
secont condition:: tensor(1.8163e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1466e-09, dtype=torch.float64)
secont condition:: tensor(2.1466e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0113e-08, dtype=torch.float64)
secont condition:: tensor(2.0113e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9278e-06, dtype=torch.float64)
secont condition:: tensor(1.9278e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5038e-09, dtype=torch.float64)
secont condition:: tensor(6.5038e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1235e-09, dtype=torch.float64)
secont condition:: tensor(4.1235e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6124e-09, dtype=torch.float64)
secont condition:: tensor(3.6124e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7929e-06, dtype=torch.float64)
secont condition:: tensor(2.7929e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7745e-10, dtype=torch.float64)
secont condition:: tensor(4.7745e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.6747e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8305e-09, dtype=torch.float64)
secont condition:: tensor(4.8305e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4984e-09, dtype=torch.float64)
secont condition:: tensor(3.4984e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8448e-10, dtype=torch.float64)
secont condition:: tensor(8.8448e-10, dtype=torch.float64)
curr_secont condition:: tensor(-4.2149e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5190e-06, dtype=torch.float64)
secont condition:: tensor(1.5190e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.4394e-09, dtype=torch.float64)
secont condition:: tensor(6.4394e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9548e-09, dtype=torch.float64)
secont condition:: tensor(3.9548e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7910e-09, dtype=torch.float64)
secont condition:: tensor(1.7910e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0357e-06, dtype=torch.float64)
secont condition:: tensor(2.0357e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3905e-09, dtype=torch.float64)
secont condition:: tensor(2.3905e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.4714e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0461e-09, dtype=torch.float64)
secont condition:: tensor(4.0461e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1678e-09, dtype=torch.float64)
secont condition:: tensor(2.1678e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4687e-09, dtype=torch.float64)
secont condition:: tensor(6.4687e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5660e-09, dtype=torch.float64)
secont condition:: tensor(3.5660e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3930e-08, dtype=torch.float64)
secont condition:: tensor(5.3930e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4773e-08, dtype=torch.float64)
secont condition:: tensor(7.4773e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0676e-06, dtype=torch.float64)
secont condition:: tensor(2.0676e-06, dtype=torch.float64)
curr_secont condition:: tensor(-9.1724e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3192e-08, dtype=torch.float64)
secont condition:: tensor(2.3192e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3444e-08, dtype=torch.float64)
secont condition:: tensor(1.3444e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6458e-09, dtype=torch.float64)
secont condition:: tensor(4.6458e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4424e-08, dtype=torch.float64)
secont condition:: tensor(1.4424e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5456e-09, dtype=torch.float64)
secont condition:: tensor(4.5456e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5997e-08, dtype=torch.float64)
secont condition:: tensor(1.5997e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9435e-09, dtype=torch.float64)
secont condition:: tensor(6.9435e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5316e-08, dtype=torch.float64)
secont condition:: tensor(1.5316e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7989e-09, dtype=torch.float64)
secont condition:: tensor(5.7989e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.4243e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3435e-09, dtype=torch.float64)
secont condition:: tensor(5.3435e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6471e-09, dtype=torch.float64)
secont condition:: tensor(2.6471e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5947e-09, dtype=torch.float64)
secont condition:: tensor(9.5947e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7139e-09, dtype=torch.float64)
secont condition:: tensor(9.7139e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0853e-09, dtype=torch.float64)
secont condition:: tensor(6.0853e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2089e-09, dtype=torch.float64)
secont condition:: tensor(4.2089e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2130e-09, dtype=torch.float64)
secont condition:: tensor(7.2130e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8454e-09, dtype=torch.float64)
secont condition:: tensor(7.8454e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8847e-09, dtype=torch.float64)
secont condition:: tensor(3.8847e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4234e-09, dtype=torch.float64)
secont condition:: tensor(4.4234e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0461e-10, dtype=torch.float64)
secont condition:: tensor(8.0461e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0123e-08, dtype=torch.float64)
secont condition:: tensor(1.0123e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5120e-10, dtype=torch.float64)
secont condition:: tensor(8.5120e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.9145e-09, dtype=torch.float64)
secont condition:: tensor(7.9145e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2282e-09, dtype=torch.float64)
secont condition:: tensor(5.2282e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2790e-08, dtype=torch.float64)
secont condition:: tensor(1.2790e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4344e-09, dtype=torch.float64)
secont condition:: tensor(8.4344e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.0451e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3113e-08, dtype=torch.float64)
secont condition:: tensor(1.3113e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0487e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8266e-08, dtype=torch.float64)
secont condition:: tensor(3.8266e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.191337823867798
curr_diff: 0 tensor(2.2550e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6200e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0130e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5248e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2103e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.8863e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7356e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.6820e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3566e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0053e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6098e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2010e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3542e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.1638e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4951e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.0972e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6908e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.198039
Train - Epoch 0, Batch: 10, Loss: 0.150861
Test Avg. Loss: 0.000039, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.140050
Train - Epoch 1, Batch: 10, Loss: 0.151406
Test Avg. Loss: 0.000038, Accuracy: 0.963700
Train - Epoch 2, Batch: 0, Loss: 0.147444
Train - Epoch 2, Batch: 10, Loss: 0.142667
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 3, Batch: 0, Loss: 0.159488
Train - Epoch 3, Batch: 10, Loss: 0.152398
Test Avg. Loss: 0.000037, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.137611
Train - Epoch 4, Batch: 10, Loss: 0.144169
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 5, Batch: 0, Loss: 0.136526
Train - Epoch 5, Batch: 10, Loss: 0.143421
Test Avg. Loss: 0.000037, Accuracy: 0.965100
Train - Epoch 6, Batch: 0, Loss: 0.139328
Train - Epoch 6, Batch: 10, Loss: 0.145264
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 7, Batch: 0, Loss: 0.145549
Train - Epoch 7, Batch: 10, Loss: 0.134561
Test Avg. Loss: 0.000037, Accuracy: 0.965700
training_time:: 16.36613702774048
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.149797916412354
time_baseline:: 12.167755842208862
curr_diff: 0 tensor(1.4619e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9809e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.4767e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5753e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4590e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.2703e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.3455e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.3235e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6706e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5698e-33, dtype=torch.float64)
secont condition:: tensor(9.5698e-33, dtype=torch.float64)
curr_secont condition:: tensor(7.3212e-10, dtype=torch.float64)
secont condition:: tensor(7.3212e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1180e-10, dtype=torch.float64)
secont condition:: tensor(4.1180e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4673e-10, dtype=torch.float64)
secont condition:: tensor(2.4673e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3417e-10, dtype=torch.float64)
secont condition:: tensor(2.3417e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4475e-10, dtype=torch.float64)
secont condition:: tensor(1.4475e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3879e-11, dtype=torch.float64)
secont condition:: tensor(7.3879e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4235e-11, dtype=torch.float64)
secont condition:: tensor(4.4235e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9858e-10, dtype=torch.float64)
secont condition:: tensor(1.9858e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8197e-08, dtype=torch.float64)
secont condition:: tensor(2.8197e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3436e-09, dtype=torch.float64)
secont condition:: tensor(9.3436e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4232e-09, dtype=torch.float64)
secont condition:: tensor(4.4232e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9159e-09, dtype=torch.float64)
secont condition:: tensor(2.9159e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1399e-09, dtype=torch.float64)
secont condition:: tensor(1.1399e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8355e-09, dtype=torch.float64)
secont condition:: tensor(1.8355e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2902e-09, dtype=torch.float64)
secont condition:: tensor(1.2902e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6499e-10, dtype=torch.float64)
secont condition:: tensor(7.6499e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6496e-10, dtype=torch.float64)
secont condition:: tensor(2.6496e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5002e-09, dtype=torch.float64)
secont condition:: tensor(1.5002e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4062e-09, dtype=torch.float64)
secont condition:: tensor(1.4062e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0359e-11, dtype=torch.float64)
secont condition:: tensor(4.0359e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.3629e-08, dtype=torch.float64)
secont condition:: tensor(2.3629e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0306e-09, dtype=torch.float64)
secont condition:: tensor(8.0306e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5634e-09, dtype=torch.float64)
secont condition:: tensor(3.5634e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7081e-09, dtype=torch.float64)
secont condition:: tensor(1.7081e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5621e-09, dtype=torch.float64)
secont condition:: tensor(4.5621e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0009e-09, dtype=torch.float64)
secont condition:: tensor(4.0009e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4588e-10, dtype=torch.float64)
secont condition:: tensor(9.4588e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.1221e-10, dtype=torch.float64)
secont condition:: tensor(9.1221e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8428e-09, dtype=torch.float64)
secont condition:: tensor(1.8428e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6013e-09, dtype=torch.float64)
secont condition:: tensor(1.6013e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3460e-10, dtype=torch.float64)
secont condition:: tensor(5.3460e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2866e-09, dtype=torch.float64)
secont condition:: tensor(1.2866e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.6858e-10, dtype=torch.float64)
curr_secont condition:: tensor(-3.1318e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0775e-10, dtype=torch.float64)
secont condition:: tensor(5.0775e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7504e-09, dtype=torch.float64)
secont condition:: tensor(1.7504e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4312e-09, dtype=torch.float64)
secont condition:: tensor(3.4312e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8067e-08, dtype=torch.float64)
secont condition:: tensor(2.8067e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2472e-09, dtype=torch.float64)
secont condition:: tensor(5.2472e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6286e-09, dtype=torch.float64)
secont condition:: tensor(2.6286e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3008e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1444e-09, dtype=torch.float64)
secont condition:: tensor(4.1444e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3639e-09, dtype=torch.float64)
secont condition:: tensor(5.3639e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4877e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1213e-08, dtype=torch.float64)
secont condition:: tensor(2.1213e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0227e-09, dtype=torch.float64)
secont condition:: tensor(5.0227e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5609e-09, dtype=torch.float64)
secont condition:: tensor(2.5609e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5300e-09, dtype=torch.float64)
secont condition:: tensor(4.5300e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8875e-09, dtype=torch.float64)
secont condition:: tensor(8.8875e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1837e-09, dtype=torch.float64)
secont condition:: tensor(4.1837e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1818e-11, dtype=torch.float64)
secont condition:: tensor(2.1818e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.3297e-09, dtype=torch.float64)
secont condition:: tensor(3.3297e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0636e-09, dtype=torch.float64)
secont condition:: tensor(3.0636e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8832e-09, dtype=torch.float64)
secont condition:: tensor(2.8832e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1604e-09, dtype=torch.float64)
secont condition:: tensor(5.1604e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8225e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8820e-09, dtype=torch.float64)
secont condition:: tensor(2.8820e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.0110e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7383e-09, dtype=torch.float64)
secont condition:: tensor(1.7383e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4428e-09, dtype=torch.float64)
secont condition:: tensor(2.4428e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.3802e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6400e-09, dtype=torch.float64)
secont condition:: tensor(3.6400e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3723e-09, dtype=torch.float64)
secont condition:: tensor(9.3723e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1388e-09, dtype=torch.float64)
secont condition:: tensor(5.1388e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0889e-09, dtype=torch.float64)
secont condition:: tensor(4.0889e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3059e-08, dtype=torch.float64)
secont condition:: tensor(5.3059e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8461e-09, dtype=torch.float64)
secont condition:: tensor(8.8461e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.5111e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6460e-09, dtype=torch.float64)
secont condition:: tensor(5.6460e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4586e-09, dtype=torch.float64)
secont condition:: tensor(1.4586e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8276e-09, dtype=torch.float64)
secont condition:: tensor(5.8276e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2582e-08, dtype=torch.float64)
secont condition:: tensor(2.2582e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9569e-09, dtype=torch.float64)
secont condition:: tensor(8.9569e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6094e-09, dtype=torch.float64)
secont condition:: tensor(3.6094e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1475e-09, dtype=torch.float64)
secont condition:: tensor(4.1475e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7253e-08, dtype=torch.float64)
secont condition:: tensor(1.7253e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3039e-09, dtype=torch.float64)
secont condition:: tensor(2.3039e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4105e-08, dtype=torch.float64)
secont condition:: tensor(3.4105e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1972e-08, dtype=torch.float64)
secont condition:: tensor(1.1972e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.305659770965576
curr_diff: 0 tensor(7.1108e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9502e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.5738e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6695e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.6503e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.6339e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.9135e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2493e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.0137e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.1658e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6631e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3908e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4136e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4966e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.5453e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9213e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.224807
Train - Epoch 0, Batch: 10, Loss: 0.156441
Test Avg. Loss: 0.000039, Accuracy: 0.964200
Train - Epoch 1, Batch: 0, Loss: 0.146913
Train - Epoch 1, Batch: 10, Loss: 0.149968
Test Avg. Loss: 0.000038, Accuracy: 0.964200
Train - Epoch 2, Batch: 0, Loss: 0.144947
Train - Epoch 2, Batch: 10, Loss: 0.136721
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.148390
Train - Epoch 3, Batch: 10, Loss: 0.141324
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 4, Batch: 0, Loss: 0.141361
Train - Epoch 4, Batch: 10, Loss: 0.147826
Test Avg. Loss: 0.000037, Accuracy: 0.964700
Train - Epoch 5, Batch: 0, Loss: 0.140119
Train - Epoch 5, Batch: 10, Loss: 0.142589
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 6, Batch: 0, Loss: 0.148122
Train - Epoch 6, Batch: 10, Loss: 0.149879
Test Avg. Loss: 0.000037, Accuracy: 0.965300
Train - Epoch 7, Batch: 0, Loss: 0.140498
Train - Epoch 7, Batch: 10, Loss: 0.138751
Test Avg. Loss: 0.000037, Accuracy: 0.966000
training_time:: 16.277698755264282
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.16506838798523
time_baseline:: 12.18288779258728
curr_diff: 0 tensor(1.6615e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2956e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9163e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.1504e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.8420e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.5195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.7096e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8179e-33, dtype=torch.float64)
secont condition:: tensor(9.8179e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.3255e-32, dtype=torch.float64)
secont condition:: tensor(2.3255e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9174e-10, dtype=torch.float64)
secont condition:: tensor(1.9174e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.2553e-11, dtype=torch.float64)
secont condition:: tensor(8.2553e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.0556e-11, dtype=torch.float64)
secont condition:: tensor(4.0556e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4871e-08, dtype=torch.float64)
secont condition:: tensor(4.4871e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6870e-08, dtype=torch.float64)
secont condition:: tensor(1.6870e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3447e-09, dtype=torch.float64)
secont condition:: tensor(9.3447e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7787e-09, dtype=torch.float64)
secont condition:: tensor(1.7787e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4906e-09, dtype=torch.float64)
secont condition:: tensor(2.4906e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3694e-09, dtype=torch.float64)
secont condition:: tensor(2.3694e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7281e-10, dtype=torch.float64)
secont condition:: tensor(2.7281e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8575e-09, dtype=torch.float64)
secont condition:: tensor(1.8575e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.2549e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2305e-09, dtype=torch.float64)
secont condition:: tensor(5.2305e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7479e-09, dtype=torch.float64)
secont condition:: tensor(1.7479e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6963e-09, dtype=torch.float64)
secont condition:: tensor(2.6963e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6564e-09, dtype=torch.float64)
secont condition:: tensor(1.6564e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6377e-09, dtype=torch.float64)
secont condition:: tensor(7.6377e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7075e-09, dtype=torch.float64)
secont condition:: tensor(3.7075e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7824e-09, dtype=torch.float64)
secont condition:: tensor(6.7824e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.3007e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.0760e-09, dtype=torch.float64)
secont condition:: tensor(4.0760e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2443e-09, dtype=torch.float64)
secont condition:: tensor(5.2443e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1979e-08, dtype=torch.float64)
secont condition:: tensor(2.1979e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6051e-08, dtype=torch.float64)
secont condition:: tensor(1.6051e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8468e-08, dtype=torch.float64)
secont condition:: tensor(3.8468e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9734e-09, dtype=torch.float64)
secont condition:: tensor(5.9734e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5607e-09, dtype=torch.float64)
secont condition:: tensor(5.5607e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8724e-09, dtype=torch.float64)
secont condition:: tensor(5.8724e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.8651e-10, dtype=torch.float64)
curr_secont condition:: tensor(-8.2703e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.6683e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7673e-09, dtype=torch.float64)
secont condition:: tensor(6.7673e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.1217e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4359e-09, dtype=torch.float64)
secont condition:: tensor(4.4359e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5463e-08, dtype=torch.float64)
secont condition:: tensor(1.5463e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5676e-08, dtype=torch.float64)
secont condition:: tensor(3.5676e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.8231e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2922e-08, dtype=torch.float64)
secont condition:: tensor(2.2922e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0349e-08, dtype=torch.float64)
secont condition:: tensor(2.0349e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.1788e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5763e-09, dtype=torch.float64)
secont condition:: tensor(5.5763e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4926e-09, dtype=torch.float64)
secont condition:: tensor(6.4926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2782e-08, dtype=torch.float64)
secont condition:: tensor(1.2782e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.1112e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.0113e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.4853e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.4374e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9712e-08, dtype=torch.float64)
secont condition:: tensor(2.9712e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5089e-08, dtype=torch.float64)
secont condition:: tensor(1.5089e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4103e-08, dtype=torch.float64)
secont condition:: tensor(4.4103e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4497e-09, dtype=torch.float64)
secont condition:: tensor(1.4497e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3737e-09, dtype=torch.float64)
secont condition:: tensor(9.3737e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4651e-09, dtype=torch.float64)
secont condition:: tensor(5.4651e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3711e-08, dtype=torch.float64)
secont condition:: tensor(2.3711e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6708e-09, dtype=torch.float64)
secont condition:: tensor(4.6708e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8548e-09, dtype=torch.float64)
secont condition:: tensor(4.8548e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8402e-09, dtype=torch.float64)
secont condition:: tensor(2.8402e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0443e-08, dtype=torch.float64)
secont condition:: tensor(3.0443e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3801e-09, dtype=torch.float64)
secont condition:: tensor(6.3801e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9271e-09, dtype=torch.float64)
secont condition:: tensor(6.9271e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2320e-09, dtype=torch.float64)
secont condition:: tensor(3.2320e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8275e-09, dtype=torch.float64)
secont condition:: tensor(6.8275e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5361e-08, dtype=torch.float64)
secont condition:: tensor(1.5361e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7624e-09, dtype=torch.float64)
secont condition:: tensor(3.7624e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5230e-08, dtype=torch.float64)
secont condition:: tensor(1.5230e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1188e-07, dtype=torch.float64)
secont condition:: tensor(1.1188e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7762e-08, dtype=torch.float64)
secont condition:: tensor(3.7762e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3455e-08, dtype=torch.float64)
secont condition:: tensor(1.3455e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1385e-10, dtype=torch.float64)
secont condition:: tensor(2.1385e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6854e-09, dtype=torch.float64)
secont condition:: tensor(9.6854e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.2843e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2211e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5135e-08, dtype=torch.float64)
secont condition:: tensor(1.5135e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2842e-08, dtype=torch.float64)
secont condition:: tensor(3.2842e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6067e-08, dtype=torch.float64)
secont condition:: tensor(6.6067e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8281e-09, dtype=torch.float64)
secont condition:: tensor(9.8281e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5011e-08, dtype=torch.float64)
secont condition:: tensor(1.5011e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2098e-09, dtype=torch.float64)
secont condition:: tensor(9.2098e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2575e-08, dtype=torch.float64)
secont condition:: tensor(1.2575e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.692419528961182
curr_diff: 0 tensor(8.0917e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1656e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.8172e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5894e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9298e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.6429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5964e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5711e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3284e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0339e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0183e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9106e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3823e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9093e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.9960e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5193e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.204029
Train - Epoch 0, Batch: 10, Loss: 0.147440
Test Avg. Loss: 0.000039, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.155571
Train - Epoch 1, Batch: 10, Loss: 0.149412
Test Avg. Loss: 0.000038, Accuracy: 0.963600
Train - Epoch 2, Batch: 0, Loss: 0.152321
Train - Epoch 2, Batch: 10, Loss: 0.140840
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.147285
Train - Epoch 3, Batch: 10, Loss: 0.138025
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 4, Batch: 0, Loss: 0.154158
Train - Epoch 4, Batch: 10, Loss: 0.140571
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.147540
Train - Epoch 5, Batch: 10, Loss: 0.141104
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 6, Batch: 0, Loss: 0.146033
Train - Epoch 6, Batch: 10, Loss: 0.137854
Test Avg. Loss: 0.000037, Accuracy: 0.965000
Train - Epoch 7, Batch: 0, Loss: 0.132965
Train - Epoch 7, Batch: 10, Loss: 0.147472
Test Avg. Loss: 0.000037, Accuracy: 0.965100
training_time:: 16.32618522644043
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.185577630996704
time_baseline:: 12.203068017959595
curr_diff: 0 tensor(8.5361e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3063e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.3007e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.7906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.2581e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.1084e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.7859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0982e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9980e-10, dtype=torch.float64)
secont condition:: tensor(5.9980e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6405e-09, dtype=torch.float64)
secont condition:: tensor(1.6405e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8934e-10, dtype=torch.float64)
secont condition:: tensor(9.8934e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7567e-10, dtype=torch.float64)
secont condition:: tensor(2.7567e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3227e-10, dtype=torch.float64)
secont condition:: tensor(2.3227e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0095e-10, dtype=torch.float64)
secont condition:: tensor(1.0095e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1522e-10, dtype=torch.float64)
secont condition:: tensor(1.1522e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5462e-11, dtype=torch.float64)
secont condition:: tensor(6.5462e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8460e-10, dtype=torch.float64)
secont condition:: tensor(2.8460e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6842e-10, dtype=torch.float64)
secont condition:: tensor(1.6842e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8310e-10, dtype=torch.float64)
secont condition:: tensor(1.8310e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2022e-10, dtype=torch.float64)
secont condition:: tensor(2.2022e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.7243e-09, dtype=torch.float64)
secont condition:: tensor(6.7243e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6276e-08, dtype=torch.float64)
secont condition:: tensor(2.6276e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7804e-09, dtype=torch.float64)
secont condition:: tensor(9.7804e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3678e-08, dtype=torch.float64)
secont condition:: tensor(5.3678e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0291e-08, dtype=torch.float64)
secont condition:: tensor(1.0291e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3472e-09, dtype=torch.float64)
secont condition:: tensor(5.3472e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8264e-09, dtype=torch.float64)
secont condition:: tensor(3.8264e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2164e-09, dtype=torch.float64)
secont condition:: tensor(4.2164e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7557e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0428e-09, dtype=torch.float64)
secont condition:: tensor(5.0428e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2266e-09, dtype=torch.float64)
secont condition:: tensor(2.2266e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4879e-09, dtype=torch.float64)
secont condition:: tensor(5.4879e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9192e-09, dtype=torch.float64)
secont condition:: tensor(3.9192e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4951e-09, dtype=torch.float64)
secont condition:: tensor(1.4951e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3972e-09, dtype=torch.float64)
secont condition:: tensor(1.3972e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7279e-10, dtype=torch.float64)
secont condition:: tensor(1.7279e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.2159e-09, dtype=torch.float64)
secont condition:: tensor(4.2159e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.6053e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9144e-09, dtype=torch.float64)
secont condition:: tensor(8.9144e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8601e-10, dtype=torch.float64)
secont condition:: tensor(8.8601e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1123e-09, dtype=torch.float64)
secont condition:: tensor(3.1123e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9855e-08, dtype=torch.float64)
secont condition:: tensor(1.9855e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1942e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.2088e-09, dtype=torch.float64)
secont condition:: tensor(7.2088e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7567e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3422e-10, dtype=torch.float64)
secont condition:: tensor(4.3422e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.3263e-10, dtype=torch.float64)
secont condition:: tensor(7.3263e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9941e-09, dtype=torch.float64)
secont condition:: tensor(2.9941e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0731e-08, dtype=torch.float64)
secont condition:: tensor(2.0731e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4544e-09, dtype=torch.float64)
secont condition:: tensor(6.4544e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7862e-09, dtype=torch.float64)
secont condition:: tensor(3.7862e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5108e-09, dtype=torch.float64)
secont condition:: tensor(4.5108e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.6834e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8313e-08, dtype=torch.float64)
secont condition:: tensor(1.8313e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2636e-09, dtype=torch.float64)
secont condition:: tensor(6.2636e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.6067e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5782e-09, dtype=torch.float64)
secont condition:: tensor(3.5782e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6445e-09, dtype=torch.float64)
secont condition:: tensor(5.6445e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9554e-10, dtype=torch.float64)
secont condition:: tensor(4.9554e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.7008e-08, dtype=torch.float64)
secont condition:: tensor(8.7008e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2469e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2779e-08, dtype=torch.float64)
secont condition:: tensor(2.2779e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6207e-09, dtype=torch.float64)
secont condition:: tensor(6.6207e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8270e-09, dtype=torch.float64)
secont condition:: tensor(7.8270e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3044e-08, dtype=torch.float64)
secont condition:: tensor(2.3044e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7904e-09, dtype=torch.float64)
secont condition:: tensor(5.7904e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2811e-09, dtype=torch.float64)
secont condition:: tensor(1.2811e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1231e-09, dtype=torch.float64)
secont condition:: tensor(1.1231e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8210e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6920e-09, dtype=torch.float64)
secont condition:: tensor(1.6920e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5116e-08, dtype=torch.float64)
secont condition:: tensor(1.5116e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1637e-09, dtype=torch.float64)
secont condition:: tensor(1.1637e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6380e-08, dtype=torch.float64)
secont condition:: tensor(2.6380e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3750e-08, dtype=torch.float64)
secont condition:: tensor(1.3750e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-7.4157e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0338e-08, dtype=torch.float64)
secont condition:: tensor(1.0338e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1768e-08, dtype=torch.float64)
secont condition:: tensor(3.1768e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5541e-09, dtype=torch.float64)
secont condition:: tensor(6.5541e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8998e-09, dtype=torch.float64)
secont condition:: tensor(3.8998e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-8.0320e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8685e-08, dtype=torch.float64)
secont condition:: tensor(1.8685e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3326e-08, dtype=torch.float64)
secont condition:: tensor(1.3326e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7161e-08, dtype=torch.float64)
secont condition:: tensor(1.7161e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8694e-08, dtype=torch.float64)
secont condition:: tensor(1.8694e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8645e-11, dtype=torch.float64)
secont condition:: tensor(4.8645e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.8033e-09, dtype=torch.float64)
secont condition:: tensor(9.8033e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3311e-09, dtype=torch.float64)
secont condition:: tensor(5.3311e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5795e-08, dtype=torch.float64)
secont condition:: tensor(1.5795e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.394561290740967
curr_diff: 0 tensor(8.0657e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.7099e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.6843e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2807e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7791e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.1935e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9297e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.2760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.0524e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3314e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.5544e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6576e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.5991e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.7698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4042e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.2278e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4519e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218183
Train - Epoch 0, Batch: 10, Loss: 0.142434
Test Avg. Loss: 0.000039, Accuracy: 0.963300
Train - Epoch 1, Batch: 0, Loss: 0.151112
Train - Epoch 1, Batch: 10, Loss: 0.142117
Test Avg. Loss: 0.000038, Accuracy: 0.963600
Train - Epoch 2, Batch: 0, Loss: 0.146000
Train - Epoch 2, Batch: 10, Loss: 0.146890
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.143737
Train - Epoch 3, Batch: 10, Loss: 0.138519
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 4, Batch: 0, Loss: 0.135892
Train - Epoch 4, Batch: 10, Loss: 0.143825
Test Avg. Loss: 0.000037, Accuracy: 0.964600
Train - Epoch 5, Batch: 0, Loss: 0.144265
Train - Epoch 5, Batch: 10, Loss: 0.138025
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 6, Batch: 0, Loss: 0.135074
Train - Epoch 6, Batch: 10, Loss: 0.143566
Test Avg. Loss: 0.000037, Accuracy: 0.965500
Train - Epoch 7, Batch: 0, Loss: 0.133111
Train - Epoch 7, Batch: 10, Loss: 0.138078
Test Avg. Loss: 0.000037, Accuracy: 0.963800
training_time:: 16.539316654205322
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.146978855133057
time_baseline:: 12.165786266326904
curr_diff: 0 tensor(1.3768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2207e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.9959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7115e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.4451e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1845e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.963800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 6
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.9588e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.7471e-10, dtype=torch.float64)
secont condition:: tensor(9.7471e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.5068e-10, dtype=torch.float64)
secont condition:: tensor(6.5068e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0219e-09, dtype=torch.float64)
secont condition:: tensor(1.0219e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6988e-10, dtype=torch.float64)
secont condition:: tensor(1.6988e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4795e-08, dtype=torch.float64)
secont condition:: tensor(4.4795e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3285e-08, dtype=torch.float64)
secont condition:: tensor(1.3285e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9305e-09, dtype=torch.float64)
secont condition:: tensor(4.9305e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1113e-09, dtype=torch.float64)
secont condition:: tensor(3.1113e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5007e-09, dtype=torch.float64)
secont condition:: tensor(3.5007e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2723e-10, dtype=torch.float64)
secont condition:: tensor(8.2723e-10, dtype=torch.float64)
curr_secont condition:: tensor(-9.2788e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.5165e-09, dtype=torch.float64)
secont condition:: tensor(3.5165e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4114e-09, dtype=torch.float64)
secont condition:: tensor(2.4114e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0431e-09, dtype=torch.float64)
secont condition:: tensor(3.0431e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9404e-09, dtype=torch.float64)
secont condition:: tensor(2.9404e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.4585e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7152e-09, dtype=torch.float64)
secont condition:: tensor(7.7152e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7699e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7604e-09, dtype=torch.float64)
secont condition:: tensor(4.7604e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7259e-09, dtype=torch.float64)
secont condition:: tensor(3.7259e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0805e-08, dtype=torch.float64)
secont condition:: tensor(2.0805e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4439e-10, dtype=torch.float64)
secont condition:: tensor(7.4439e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2598e-09, dtype=torch.float64)
secont condition:: tensor(2.2598e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.3345e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3625e-08, dtype=torch.float64)
secont condition:: tensor(3.3625e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0420e-10, dtype=torch.float64)
secont condition:: tensor(8.0420e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.1072e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1310e-09, dtype=torch.float64)
secont condition:: tensor(2.1310e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0054e-08, dtype=torch.float64)
secont condition:: tensor(6.0054e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0482e-10, dtype=torch.float64)
secont condition:: tensor(1.0482e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1723e-08, dtype=torch.float64)
secont condition:: tensor(1.1723e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6919e-09, dtype=torch.float64)
secont condition:: tensor(4.6919e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.5604e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1358e-09, dtype=torch.float64)
secont condition:: tensor(4.1358e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3385e-09, dtype=torch.float64)
secont condition:: tensor(3.3385e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4370e-08, dtype=torch.float64)
secont condition:: tensor(2.4370e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8089e-09, dtype=torch.float64)
secont condition:: tensor(6.8089e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1248e-09, dtype=torch.float64)
secont condition:: tensor(8.1248e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3025e-09, dtype=torch.float64)
secont condition:: tensor(3.3025e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7853e-08, dtype=torch.float64)
secont condition:: tensor(1.7853e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2901e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6942e-09, dtype=torch.float64)
secont condition:: tensor(3.6942e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.4042e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2031e-09, dtype=torch.float64)
secont condition:: tensor(5.2031e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2730e-09, dtype=torch.float64)
secont condition:: tensor(8.2730e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9131e-09, dtype=torch.float64)
secont condition:: tensor(7.9131e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1639e-09, dtype=torch.float64)
secont condition:: tensor(7.1639e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6486e-08, dtype=torch.float64)
secont condition:: tensor(1.6486e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.9137e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5914e-08, dtype=torch.float64)
secont condition:: tensor(1.5914e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.3860e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8829e-09, dtype=torch.float64)
secont condition:: tensor(9.8829e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7541e-10, dtype=torch.float64)
secont condition:: tensor(5.7541e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0327e-08, dtype=torch.float64)
secont condition:: tensor(1.0327e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5984e-08, dtype=torch.float64)
secont condition:: tensor(1.5984e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0577e-08, dtype=torch.float64)
secont condition:: tensor(1.0577e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5726e-09, dtype=torch.float64)
secont condition:: tensor(4.5726e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1121e-09, dtype=torch.float64)
secont condition:: tensor(3.1121e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8497e-09, dtype=torch.float64)
secont condition:: tensor(2.8497e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6490e-09, dtype=torch.float64)
secont condition:: tensor(2.6490e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.5911e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1118e-08, dtype=torch.float64)
secont condition:: tensor(1.1118e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5954e-09, dtype=torch.float64)
secont condition:: tensor(8.5954e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4803e-08, dtype=torch.float64)
secont condition:: tensor(1.4803e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4131e-09, dtype=torch.float64)
secont condition:: tensor(2.4131e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0914e-08, dtype=torch.float64)
secont condition:: tensor(2.0914e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1681e-09, dtype=torch.float64)
secont condition:: tensor(8.1681e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7882e-09, dtype=torch.float64)
secont condition:: tensor(3.7882e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1342e-10, dtype=torch.float64)
secont condition:: tensor(1.1342e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.7112e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.4424e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5585e-09, dtype=torch.float64)
secont condition:: tensor(2.5585e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4005e-09, dtype=torch.float64)
secont condition:: tensor(6.4005e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.2317e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1288e-08, dtype=torch.float64)
secont condition:: tensor(1.1288e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6105e-08, dtype=torch.float64)
secont condition:: tensor(1.6105e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5525e-08, dtype=torch.float64)
secont condition:: tensor(2.5525e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4670e-08, dtype=torch.float64)
secont condition:: tensor(2.4670e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9068e-08, dtype=torch.float64)
secont condition:: tensor(3.9068e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7361e-09, dtype=torch.float64)
secont condition:: tensor(3.7361e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.96007227897644
curr_diff: 0 tensor(5.2927e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0322e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4035e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.0270e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.1222e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.1656e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.4766e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6986e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.5611e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.6866e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.3793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4827e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6861e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9009e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.1534e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7789e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4577e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0291e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964100
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.208684
Train - Epoch 0, Batch: 10, Loss: 0.126066
Train - Epoch 0, Batch: 20, Loss: 0.162996
Train - Epoch 0, Batch: 30, Loss: 0.158207
Train - Epoch 0, Batch: 40, Loss: 0.139680
Train - Epoch 0, Batch: 50, Loss: 0.131867
Test Avg. Loss: 0.000131, Accuracy: 0.964200
Train - Epoch 1, Batch: 0, Loss: 0.128208
Train - Epoch 1, Batch: 10, Loss: 0.169297
Train - Epoch 1, Batch: 20, Loss: 0.160564
Train - Epoch 1, Batch: 30, Loss: 0.126121
Train - Epoch 1, Batch: 40, Loss: 0.117693
Train - Epoch 1, Batch: 50, Loss: 0.130746
Test Avg. Loss: 0.000131, Accuracy: 0.964700
training_time:: 5.230312824249268
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.217869281768799
time_baseline:: 4.223070383071899
curr_diff: 0 tensor(2.7318e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.4352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1397e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2462e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.9641e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.5225e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7967e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9955e-33, dtype=torch.float64)
secont condition:: tensor(4.9955e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.1917e-32, dtype=torch.float64)
secont condition:: tensor(2.1917e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0429e-32, dtype=torch.float64)
secont condition:: tensor(2.0429e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.9581e-32, dtype=torch.float64)
secont condition:: tensor(2.9581e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.7020e-32, dtype=torch.float64)
secont condition:: tensor(3.7020e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.7704e-32, dtype=torch.float64)
secont condition:: tensor(4.7704e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.2078e-32, dtype=torch.float64)
secont condition:: tensor(5.2078e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.3227e-32, dtype=torch.float64)
secont condition:: tensor(7.3227e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.3644e-32, dtype=torch.float64)
secont condition:: tensor(6.3644e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.5535e-32, dtype=torch.float64)
secont condition:: tensor(6.5535e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.4310e-32, dtype=torch.float64)
secont condition:: tensor(7.4310e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.3931e-32, dtype=torch.float64)
secont condition:: tensor(8.3931e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.7394e-32, dtype=torch.float64)
secont condition:: tensor(7.7394e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.7627e-32, dtype=torch.float64)
secont condition:: tensor(7.7627e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.4631e-32, dtype=torch.float64)
secont condition:: tensor(8.4631e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.4309e-32, dtype=torch.float64)
secont condition:: tensor(8.4309e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.0766e-31, dtype=torch.float64)
secont condition:: tensor(1.0766e-31, dtype=torch.float64)
curr_secont condition:: tensor(8.4452e-32, dtype=torch.float64)
secont condition:: tensor(8.4452e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.0394e-09, dtype=torch.float64)
secont condition:: tensor(2.0394e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4497e-09, dtype=torch.float64)
secont condition:: tensor(2.4497e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0460e-09, dtype=torch.float64)
secont condition:: tensor(1.0460e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9182e-10, dtype=torch.float64)
secont condition:: tensor(8.9182e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1592e-09, dtype=torch.float64)
secont condition:: tensor(1.1592e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2536e-09, dtype=torch.float64)
secont condition:: tensor(1.2536e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.5174e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0137e-10, dtype=torch.float64)
secont condition:: tensor(4.0137e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.6490e-10, dtype=torch.float64)
secont condition:: tensor(3.6490e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.9738e-10, dtype=torch.float64)
secont condition:: tensor(2.9738e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.3834e-10, dtype=torch.float64)
secont condition:: tensor(5.3834e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.5028e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1638e-09, dtype=torch.float64)
secont condition:: tensor(1.1638e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.0153e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.6475e-10, dtype=torch.float64)
secont condition:: tensor(8.6475e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7581e-10, dtype=torch.float64)
secont condition:: tensor(7.7581e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7317e-09, dtype=torch.float64)
secont condition:: tensor(4.7317e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7234e-09, dtype=torch.float64)
secont condition:: tensor(1.7234e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2998e-09, dtype=torch.float64)
secont condition:: tensor(3.2998e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4297e-10, dtype=torch.float64)
secont condition:: tensor(8.4297e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6985e-09, dtype=torch.float64)
secont condition:: tensor(9.6985e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4672e-09, dtype=torch.float64)
secont condition:: tensor(1.4672e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1943e-09, dtype=torch.float64)
secont condition:: tensor(3.1943e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5861e-07, dtype=torch.float64)
secont condition:: tensor(3.5861e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4642e-08, dtype=torch.float64)
secont condition:: tensor(7.4642e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8424e-08, dtype=torch.float64)
secont condition:: tensor(2.8424e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9929e-08, dtype=torch.float64)
secont condition:: tensor(1.9929e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4471e-09, dtype=torch.float64)
secont condition:: tensor(6.4471e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.9917e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.7992e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7983e-07, dtype=torch.float64)
secont condition:: tensor(1.7983e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0927e-08, dtype=torch.float64)
secont condition:: tensor(1.0927e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6280e-09, dtype=torch.float64)
secont condition:: tensor(9.6280e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9562e-09, dtype=torch.float64)
secont condition:: tensor(9.9562e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4585e-09, dtype=torch.float64)
secont condition:: tensor(4.4585e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0676e-09, dtype=torch.float64)
secont condition:: tensor(4.0676e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1744e-09, dtype=torch.float64)
secont condition:: tensor(6.1744e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3553e-08, dtype=torch.float64)
secont condition:: tensor(1.3553e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4772e-09, dtype=torch.float64)
secont condition:: tensor(1.4772e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6411e-09, dtype=torch.float64)
secont condition:: tensor(4.6411e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.0482e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4804e-09, dtype=torch.float64)
secont condition:: tensor(7.4804e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1332e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6517e-09, dtype=torch.float64)
secont condition:: tensor(2.6517e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2410e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1028e-08, dtype=torch.float64)
secont condition:: tensor(3.1028e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0032e-09, dtype=torch.float64)
secont condition:: tensor(1.0032e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.1989e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7561e-08, dtype=torch.float64)
secont condition:: tensor(4.7561e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4744e-09, dtype=torch.float64)
secont condition:: tensor(9.4744e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1408e-08, dtype=torch.float64)
secont condition:: tensor(4.1408e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.2752e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6205e-08, dtype=torch.float64)
secont condition:: tensor(1.6205e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0456e-08, dtype=torch.float64)
secont condition:: tensor(2.0456e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6480e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.8674e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0847e-08, dtype=torch.float64)
secont condition:: tensor(2.0847e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.6095e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4089e-08, dtype=torch.float64)
secont condition:: tensor(1.4089e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.4566e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.2575e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3244e-07, dtype=torch.float64)
secont condition:: tensor(2.3244e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.9704e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2844e-07, dtype=torch.float64)
secont condition:: tensor(1.2844e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.021282434463501
curr_diff: 0 tensor(1.7494e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2263e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0534e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.9305e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7159e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4001e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1055e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.7580e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7874e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1354e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.2268e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.9071e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.5059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7610e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964500
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.234250
Train - Epoch 0, Batch: 10, Loss: 0.143433
Train - Epoch 0, Batch: 20, Loss: 0.149118
Train - Epoch 0, Batch: 30, Loss: 0.140926
Train - Epoch 0, Batch: 40, Loss: 0.136397
Train - Epoch 0, Batch: 50, Loss: 0.166870
Test Avg. Loss: 0.000131, Accuracy: 0.963600
Train - Epoch 1, Batch: 0, Loss: 0.136019
Train - Epoch 1, Batch: 10, Loss: 0.162879
Train - Epoch 1, Batch: 20, Loss: 0.146954
Train - Epoch 1, Batch: 30, Loss: 0.161641
Train - Epoch 1, Batch: 40, Loss: 0.123853
Train - Epoch 1, Batch: 50, Loss: 0.155440
Test Avg. Loss: 0.000131, Accuracy: 0.965000
training_time:: 5.225523471832275
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.23891019821167
time_baseline:: 4.2437639236450195
curr_diff: 0 tensor(3.6894e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.8862e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8613e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2167e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.1284e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.0631e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.9975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8861e-33, dtype=torch.float64)
secont condition:: tensor(8.8861e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.0253e-32, dtype=torch.float64)
secont condition:: tensor(2.0253e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.5215e-09, dtype=torch.float64)
secont condition:: tensor(1.5215e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.1829e-10, dtype=torch.float64)
secont condition:: tensor(8.1829e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.3858e-10, dtype=torch.float64)
secont condition:: tensor(8.3858e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6614e-10, dtype=torch.float64)
secont condition:: tensor(2.6614e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3385e-10, dtype=torch.float64)
secont condition:: tensor(4.3385e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.2114e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.1363e-09, dtype=torch.float64)
secont condition:: tensor(1.1363e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9001e-10, dtype=torch.float64)
secont condition:: tensor(6.9001e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6155e-10, dtype=torch.float64)
secont condition:: tensor(2.6155e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.7739e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.4867e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1436e-10, dtype=torch.float64)
secont condition:: tensor(2.1436e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3281e-09, dtype=torch.float64)
secont condition:: tensor(2.3281e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.6950e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1732e-09, dtype=torch.float64)
secont condition:: tensor(2.1732e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2809e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3126e-09, dtype=torch.float64)
secont condition:: tensor(3.3126e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9812e-09, dtype=torch.float64)
secont condition:: tensor(8.9812e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2665e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4442e-09, dtype=torch.float64)
secont condition:: tensor(2.4442e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8389e-07, dtype=torch.float64)
secont condition:: tensor(2.8389e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0391e-07, dtype=torch.float64)
secont condition:: tensor(1.0391e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7421e-08, dtype=torch.float64)
secont condition:: tensor(6.7421e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9324e-09, dtype=torch.float64)
secont condition:: tensor(2.9324e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7644e-08, dtype=torch.float64)
secont condition:: tensor(1.7644e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6601e-08, dtype=torch.float64)
secont condition:: tensor(1.6601e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.6576e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2126e-08, dtype=torch.float64)
secont condition:: tensor(3.2126e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4977e-06, dtype=torch.float64)
secont condition:: tensor(1.4977e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0081e-07, dtype=torch.float64)
secont condition:: tensor(2.0081e-07, dtype=torch.float64)
curr_secont condition:: tensor(-9.9453e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8856e-08, dtype=torch.float64)
secont condition:: tensor(7.8856e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3130e-09, dtype=torch.float64)
secont condition:: tensor(2.3130e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0036e-08, dtype=torch.float64)
secont condition:: tensor(5.0036e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1880e-08, dtype=torch.float64)
secont condition:: tensor(4.1880e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2830e-09, dtype=torch.float64)
secont condition:: tensor(8.2830e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1316e-09, dtype=torch.float64)
secont condition:: tensor(7.1316e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.4561e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.5611e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4228e-09, dtype=torch.float64)
secont condition:: tensor(9.4228e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4908e-08, dtype=torch.float64)
secont condition:: tensor(2.4908e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5850e-08, dtype=torch.float64)
secont condition:: tensor(2.5850e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2132e-08, dtype=torch.float64)
secont condition:: tensor(2.2132e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4828e-09, dtype=torch.float64)
secont condition:: tensor(9.4828e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0468e-08, dtype=torch.float64)
secont condition:: tensor(1.0468e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.7824e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2005e-08, dtype=torch.float64)
secont condition:: tensor(8.2005e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.7325e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9995e-08, dtype=torch.float64)
secont condition:: tensor(2.9995e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.0921e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4778e-08, dtype=torch.float64)
secont condition:: tensor(5.4778e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.9843e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1425e-08, dtype=torch.float64)
secont condition:: tensor(4.1425e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2971e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.0252e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8197e-07, dtype=torch.float64)
secont condition:: tensor(1.8197e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2032e-06, dtype=torch.float64)
secont condition:: tensor(1.2032e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5536e-08, dtype=torch.float64)
secont condition:: tensor(4.5536e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5491e-08, dtype=torch.float64)
secont condition:: tensor(3.5491e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5204e-08, dtype=torch.float64)
secont condition:: tensor(5.5204e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6576e-07, dtype=torch.float64)
secont condition:: tensor(1.6576e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1918e-07, dtype=torch.float64)
secont condition:: tensor(1.1918e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4456e-07, dtype=torch.float64)
secont condition:: tensor(1.4456e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.1935e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8294e-08, dtype=torch.float64)
secont condition:: tensor(6.8294e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.8383e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1401e-08, dtype=torch.float64)
secont condition:: tensor(6.1401e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1159e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.8905e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1027e-07, dtype=torch.float64)
secont condition:: tensor(1.1027e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7897e-08, dtype=torch.float64)
secont condition:: tensor(2.7897e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6719e-07, dtype=torch.float64)
secont condition:: tensor(1.6719e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0942e-08, dtype=torch.float64)
secont condition:: tensor(6.0942e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6335e-08, dtype=torch.float64)
secont condition:: tensor(2.6335e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0628e-07, dtype=torch.float64)
secont condition:: tensor(2.0628e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8014e-07, dtype=torch.float64)
secont condition:: tensor(1.8014e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.8221e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.7545e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1835e-09, dtype=torch.float64)
secont condition:: tensor(8.1835e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1748e-07, dtype=torch.float64)
secont condition:: tensor(3.1748e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.090690612792969
curr_diff: 0 tensor(2.3748e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6553e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9516e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.7653e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9426e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9281e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0716e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9070e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.5476e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.6637e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.8941e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.5811e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3808e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.183033
Train - Epoch 0, Batch: 10, Loss: 0.161245
Train - Epoch 0, Batch: 20, Loss: 0.158873
Train - Epoch 0, Batch: 30, Loss: 0.155930
Train - Epoch 0, Batch: 40, Loss: 0.139876
Train - Epoch 0, Batch: 50, Loss: 0.140058
Test Avg. Loss: 0.000131, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.157475
Train - Epoch 1, Batch: 10, Loss: 0.167103
Train - Epoch 1, Batch: 20, Loss: 0.127650
Train - Epoch 1, Batch: 30, Loss: 0.135134
Train - Epoch 1, Batch: 40, Loss: 0.150408
Train - Epoch 1, Batch: 50, Loss: 0.139670
Test Avg. Loss: 0.000131, Accuracy: 0.964400
training_time:: 5.221966028213501
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.2237279415130615
time_baseline:: 4.228669881820679
curr_diff: 0 tensor(4.7308e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3054e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5706e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7585e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.6516e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.4986e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7376e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1767e-33, dtype=torch.float64)
secont condition:: tensor(7.1767e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7263e-32, dtype=torch.float64)
secont condition:: tensor(1.7263e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8399e-32, dtype=torch.float64)
secont condition:: tensor(2.8399e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.7474e-09, dtype=torch.float64)
secont condition:: tensor(6.7474e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4518e-09, dtype=torch.float64)
secont condition:: tensor(3.4518e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5760e-09, dtype=torch.float64)
secont condition:: tensor(2.5760e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3148e-09, dtype=torch.float64)
secont condition:: tensor(1.3148e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3444e-10, dtype=torch.float64)
secont condition:: tensor(9.3444e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.4892e-10, dtype=torch.float64)
secont condition:: tensor(4.4892e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.1563e-10, dtype=torch.float64)
secont condition:: tensor(3.1563e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.6206e-10, dtype=torch.float64)
secont condition:: tensor(2.6206e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0044e-10, dtype=torch.float64)
secont condition:: tensor(3.0044e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9526e-09, dtype=torch.float64)
secont condition:: tensor(1.9526e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4607e-10, dtype=torch.float64)
secont condition:: tensor(4.4607e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7618e-10, dtype=torch.float64)
secont condition:: tensor(4.7618e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.1566e-10, dtype=torch.float64)
secont condition:: tensor(4.1566e-10, dtype=torch.float64)
curr_secont condition:: tensor(6.9212e-10, dtype=torch.float64)
secont condition:: tensor(6.9212e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2810e-09, dtype=torch.float64)
secont condition:: tensor(1.2810e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6246e-10, dtype=torch.float64)
secont condition:: tensor(3.6246e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5893e-10, dtype=torch.float64)
secont condition:: tensor(2.5893e-10, dtype=torch.float64)
curr_secont condition:: tensor(-6.5861e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0266e-08, dtype=torch.float64)
secont condition:: tensor(2.0266e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0875e-08, dtype=torch.float64)
secont condition:: tensor(1.0875e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7024e-09, dtype=torch.float64)
secont condition:: tensor(6.7024e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5112e-09, dtype=torch.float64)
secont condition:: tensor(6.5112e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4224e-09, dtype=torch.float64)
secont condition:: tensor(3.4224e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9815e-09, dtype=torch.float64)
secont condition:: tensor(3.9815e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6555e-09, dtype=torch.float64)
secont condition:: tensor(3.6555e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8538e-08, dtype=torch.float64)
secont condition:: tensor(2.8538e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4593e-09, dtype=torch.float64)
secont condition:: tensor(4.4593e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6602e-09, dtype=torch.float64)
secont condition:: tensor(4.6602e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.1670e-09, dtype=torch.float64)
secont condition:: tensor(9.1670e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.0625e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.3555e-09, dtype=torch.float64)
secont condition:: tensor(3.3555e-09, dtype=torch.float64)
curr_secont condition:: tensor(-9.4060e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0292e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7890e-07, dtype=torch.float64)
secont condition:: tensor(2.7890e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9646e-08, dtype=torch.float64)
secont condition:: tensor(8.9646e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1740e-08, dtype=torch.float64)
secont condition:: tensor(5.1740e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2207e-08, dtype=torch.float64)
secont condition:: tensor(4.2207e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3224e-08, dtype=torch.float64)
secont condition:: tensor(1.3224e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8148e-08, dtype=torch.float64)
secont condition:: tensor(1.8148e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9067e-08, dtype=torch.float64)
secont condition:: tensor(1.9067e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6839e-08, dtype=torch.float64)
secont condition:: tensor(4.6839e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5943e-08, dtype=torch.float64)
secont condition:: tensor(2.5943e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6201e-08, dtype=torch.float64)
secont condition:: tensor(3.6201e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0159e-08, dtype=torch.float64)
secont condition:: tensor(4.0159e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5634e-08, dtype=torch.float64)
secont condition:: tensor(4.5634e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3931e-08, dtype=torch.float64)
secont condition:: tensor(1.3931e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9426e-08, dtype=torch.float64)
secont condition:: tensor(8.9426e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5650e-08, dtype=torch.float64)
secont condition:: tensor(2.5650e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.3555e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8798e-08, dtype=torch.float64)
secont condition:: tensor(1.8798e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.7708e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8595e-08, dtype=torch.float64)
secont condition:: tensor(2.8595e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2193e-08, dtype=torch.float64)
secont condition:: tensor(8.2193e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2662e-08, dtype=torch.float64)
secont condition:: tensor(5.2662e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.0721e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.0965e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4577e-09, dtype=torch.float64)
secont condition:: tensor(9.4577e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5090e-08, dtype=torch.float64)
secont condition:: tensor(3.5090e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6296e-08, dtype=torch.float64)
secont condition:: tensor(4.6296e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8080e-08, dtype=torch.float64)
secont condition:: tensor(1.8080e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2996e-08, dtype=torch.float64)
secont condition:: tensor(6.2996e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0416e-08, dtype=torch.float64)
secont condition:: tensor(3.0416e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7715e-09, dtype=torch.float64)
secont condition:: tensor(4.7715e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8281e-08, dtype=torch.float64)
secont condition:: tensor(8.8281e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8583e-08, dtype=torch.float64)
secont condition:: tensor(6.8583e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8099e-08, dtype=torch.float64)
secont condition:: tensor(2.8099e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5183e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4330e-08, dtype=torch.float64)
secont condition:: tensor(3.4330e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4457e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5191e-08, dtype=torch.float64)
secont condition:: tensor(4.5191e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9924e-08, dtype=torch.float64)
secont condition:: tensor(2.9924e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9850e-07, dtype=torch.float64)
secont condition:: tensor(3.9850e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2498e-08, dtype=torch.float64)
secont condition:: tensor(4.2498e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.2057e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6110e-07, dtype=torch.float64)
secont condition:: tensor(1.6110e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8333e-08, dtype=torch.float64)
secont condition:: tensor(3.8333e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1392e-07, dtype=torch.float64)
secont condition:: tensor(2.1392e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2773e-09, dtype=torch.float64)
secont condition:: tensor(9.2773e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2012e-09, dtype=torch.float64)
secont condition:: tensor(2.2012e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9175257682800293
curr_diff: 0 tensor(1.3067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3351e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.0399e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1929e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.9636e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0357e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.7707e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5823e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.8612e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8384e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.7595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8654e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5633e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.3585e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7520e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.207728
Train - Epoch 0, Batch: 10, Loss: 0.138505
Train - Epoch 0, Batch: 20, Loss: 0.131571
Train - Epoch 0, Batch: 30, Loss: 0.148827
Train - Epoch 0, Batch: 40, Loss: 0.147828
Train - Epoch 0, Batch: 50, Loss: 0.147829
Test Avg. Loss: 0.000132, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.146319
Train - Epoch 1, Batch: 10, Loss: 0.164620
Train - Epoch 1, Batch: 20, Loss: 0.131950
Train - Epoch 1, Batch: 30, Loss: 0.141220
Train - Epoch 1, Batch: 40, Loss: 0.158550
Train - Epoch 1, Batch: 50, Loss: 0.140262
Test Avg. Loss: 0.000130, Accuracy: 0.963800
training_time:: 5.244576692581177
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.220491647720337
time_baseline:: 4.225436210632324
curr_diff: 0 tensor(3.1864e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1060e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2389e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.1976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9608e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.4954e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3388e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.963900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9824e-08, dtype=torch.float64)
secont condition:: tensor(2.9824e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8561e-09, dtype=torch.float64)
secont condition:: tensor(6.8561e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3444e-08, dtype=torch.float64)
secont condition:: tensor(1.3444e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.1488e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4085e-08, dtype=torch.float64)
secont condition:: tensor(4.4085e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.5016e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.4780e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1204e-08, dtype=torch.float64)
secont condition:: tensor(4.1204e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0948e-08, dtype=torch.float64)
secont condition:: tensor(1.0948e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8911e-10, dtype=torch.float64)
secont condition:: tensor(6.8911e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5472e-09, dtype=torch.float64)
secont condition:: tensor(4.5472e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.6829e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0097e-09, dtype=torch.float64)
secont condition:: tensor(6.0097e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1505e-09, dtype=torch.float64)
secont condition:: tensor(7.1505e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.2250e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1427e-09, dtype=torch.float64)
secont condition:: tensor(5.1427e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0934e-08, dtype=torch.float64)
secont condition:: tensor(1.0934e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7447e-08, dtype=torch.float64)
secont condition:: tensor(7.7447e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5036e-08, dtype=torch.float64)
secont condition:: tensor(6.5036e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6355e-08, dtype=torch.float64)
secont condition:: tensor(1.6355e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1397e-08, dtype=torch.float64)
secont condition:: tensor(2.1397e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.8528e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0804e-08, dtype=torch.float64)
secont condition:: tensor(1.0804e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5786e-07, dtype=torch.float64)
secont condition:: tensor(1.5786e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7207e-08, dtype=torch.float64)
secont condition:: tensor(1.7207e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6135e-08, dtype=torch.float64)
secont condition:: tensor(1.6135e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2212e-08, dtype=torch.float64)
secont condition:: tensor(1.2212e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1232e-08, dtype=torch.float64)
secont condition:: tensor(1.1232e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.7049e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0581e-07, dtype=torch.float64)
secont condition:: tensor(1.0581e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7239e-08, dtype=torch.float64)
secont condition:: tensor(1.7239e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.6940e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8232e-08, dtype=torch.float64)
secont condition:: tensor(1.8232e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4338e-09, dtype=torch.float64)
secont condition:: tensor(2.4338e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5235e-08, dtype=torch.float64)
secont condition:: tensor(2.5235e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1875e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5767e-09, dtype=torch.float64)
secont condition:: tensor(7.5767e-09, dtype=torch.float64)
curr_secont condition:: tensor(-4.6422e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0805e-10, dtype=torch.float64)
secont condition:: tensor(9.0805e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4040e-07, dtype=torch.float64)
secont condition:: tensor(1.4040e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9580e-07, dtype=torch.float64)
secont condition:: tensor(1.9580e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8612e-08, dtype=torch.float64)
secont condition:: tensor(5.8612e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3071e-08, dtype=torch.float64)
secont condition:: tensor(6.3071e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7738e-08, dtype=torch.float64)
secont condition:: tensor(1.7738e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7909e-08, dtype=torch.float64)
secont condition:: tensor(2.7909e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.2271e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9063e-08, dtype=torch.float64)
secont condition:: tensor(1.9063e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2888e-08, dtype=torch.float64)
secont condition:: tensor(1.2888e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8489e-08, dtype=torch.float64)
secont condition:: tensor(1.8489e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.7422e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1138e-09, dtype=torch.float64)
secont condition:: tensor(7.1138e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9333e-08, dtype=torch.float64)
secont condition:: tensor(5.9333e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1387e-08, dtype=torch.float64)
secont condition:: tensor(2.1387e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9635e-08, dtype=torch.float64)
secont condition:: tensor(2.9635e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.2426e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.7052e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5025e-09, dtype=torch.float64)
secont condition:: tensor(4.5025e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0621e-10, dtype=torch.float64)
secont condition:: tensor(5.0621e-10, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3674e-07, dtype=torch.float64)
secont condition:: tensor(2.3674e-07, dtype=torch.float64)
curr_secont condition:: tensor(-7.4291e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3469e-07, dtype=torch.float64)
secont condition:: tensor(1.3469e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.4787e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4799e-07, dtype=torch.float64)
secont condition:: tensor(4.4799e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1501e-07, dtype=torch.float64)
secont condition:: tensor(1.1501e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0090e-08, dtype=torch.float64)
secont condition:: tensor(1.0090e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1961e-08, dtype=torch.float64)
secont condition:: tensor(4.1961e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5071e-09, dtype=torch.float64)
secont condition:: tensor(7.5071e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9667e-08, dtype=torch.float64)
secont condition:: tensor(2.9667e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9894e-08, dtype=torch.float64)
secont condition:: tensor(9.9894e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2879e-08, dtype=torch.float64)
secont condition:: tensor(5.2879e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0987e-09, dtype=torch.float64)
secont condition:: tensor(9.0987e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.4886e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.4780e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5016e-08, dtype=torch.float64)
secont condition:: tensor(5.5016e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8504e-08, dtype=torch.float64)
secont condition:: tensor(1.8504e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1539e-08, dtype=torch.float64)
secont condition:: tensor(1.1539e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7498e-08, dtype=torch.float64)
secont condition:: tensor(1.7498e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.7404e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4981e-08, dtype=torch.float64)
secont condition:: tensor(6.4981e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.806342840194702
curr_diff: 0 tensor(2.5835e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6571e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0999e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.5513e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.2292e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4720e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5397e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4356e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.5236e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0145e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.2780e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.7774e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.9243e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215297
Train - Epoch 0, Batch: 10, Loss: 0.127851
Train - Epoch 0, Batch: 20, Loss: 0.143117
Train - Epoch 0, Batch: 30, Loss: 0.144571
Train - Epoch 0, Batch: 40, Loss: 0.140904
Train - Epoch 0, Batch: 50, Loss: 0.134210
Test Avg. Loss: 0.000132, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.122994
Train - Epoch 1, Batch: 10, Loss: 0.141089
Train - Epoch 1, Batch: 20, Loss: 0.143339
Train - Epoch 1, Batch: 30, Loss: 0.148664
Train - Epoch 1, Batch: 40, Loss: 0.162901
Train - Epoch 1, Batch: 50, Loss: 0.154452
Test Avg. Loss: 0.000131, Accuracy: 0.966000
training_time:: 5.228889226913452
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.256237506866455
time_baseline:: 4.261067152023315
curr_diff: 0 tensor(1.4782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.0400e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7456e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.6696e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9574e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.966000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 6
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0856e-32, dtype=torch.float64)
secont condition:: tensor(1.0856e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4629e-32, dtype=torch.float64)
secont condition:: tensor(1.4629e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7956e-32, dtype=torch.float64)
secont condition:: tensor(2.7956e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0949e-32, dtype=torch.float64)
secont condition:: tensor(3.0949e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5348e-32, dtype=torch.float64)
secont condition:: tensor(3.5348e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.9395e-32, dtype=torch.float64)
secont condition:: tensor(4.9395e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5750e-32, dtype=torch.float64)
secont condition:: tensor(3.5750e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2063e-32, dtype=torch.float64)
secont condition:: tensor(6.2063e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.8395e-32, dtype=torch.float64)
secont condition:: tensor(5.8395e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.3424e-32, dtype=torch.float64)
secont condition:: tensor(6.3424e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2778e-32, dtype=torch.float64)
secont condition:: tensor(6.2778e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.9294e-32, dtype=torch.float64)
secont condition:: tensor(5.9294e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.9963e-32, dtype=torch.float64)
secont condition:: tensor(6.9963e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3017e-09, dtype=torch.float64)
secont condition:: tensor(2.3017e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4491e-09, dtype=torch.float64)
secont condition:: tensor(1.4491e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3175e-09, dtype=torch.float64)
secont condition:: tensor(3.3175e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9674e-09, dtype=torch.float64)
secont condition:: tensor(1.9674e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8778e-10, dtype=torch.float64)
secont condition:: tensor(3.8778e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5362e-10, dtype=torch.float64)
secont condition:: tensor(2.5362e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0944e-09, dtype=torch.float64)
secont condition:: tensor(2.0944e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2303e-09, dtype=torch.float64)
secont condition:: tensor(1.2303e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3614e-10, dtype=torch.float64)
secont condition:: tensor(9.3614e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.6656e-10, dtype=torch.float64)
secont condition:: tensor(4.6656e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.7301e-10, dtype=torch.float64)
secont condition:: tensor(7.7301e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5011e-09, dtype=torch.float64)
secont condition:: tensor(1.5011e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3241e-10, dtype=torch.float64)
secont condition:: tensor(2.3241e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.9215e-10, dtype=torch.float64)
secont condition:: tensor(1.9215e-10, dtype=torch.float64)
curr_secont condition:: tensor(7.6664e-10, dtype=torch.float64)
secont condition:: tensor(7.6664e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2351e-12, dtype=torch.float64)
secont condition:: tensor(1.2351e-12, dtype=torch.float64)
curr_secont condition:: tensor(6.0939e-10, dtype=torch.float64)
secont condition:: tensor(6.0939e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5055e-10, dtype=torch.float64)
secont condition:: tensor(2.5055e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.1293e-09, dtype=torch.float64)
secont condition:: tensor(1.1293e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8127e-10, dtype=torch.float64)
secont condition:: tensor(1.8127e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8691e-07, dtype=torch.float64)
secont condition:: tensor(1.8691e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2271e-07, dtype=torch.float64)
secont condition:: tensor(1.2271e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4869e-08, dtype=torch.float64)
secont condition:: tensor(5.4869e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6487e-08, dtype=torch.float64)
secont condition:: tensor(2.6487e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5729e-08, dtype=torch.float64)
secont condition:: tensor(2.5729e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8587e-09, dtype=torch.float64)
secont condition:: tensor(8.8587e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1345e-09, dtype=torch.float64)
secont condition:: tensor(3.1345e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2780e-08, dtype=torch.float64)
secont condition:: tensor(1.2780e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.2982e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4945e-08, dtype=torch.float64)
secont condition:: tensor(3.4945e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5025e-08, dtype=torch.float64)
secont condition:: tensor(3.5025e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.9467e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7527e-08, dtype=torch.float64)
secont condition:: tensor(3.7527e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7120e-08, dtype=torch.float64)
secont condition:: tensor(6.7120e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1344e-09, dtype=torch.float64)
secont condition:: tensor(6.1344e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8372e-07, dtype=torch.float64)
secont condition:: tensor(4.8372e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3721e-08, dtype=torch.float64)
secont condition:: tensor(1.3721e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3928e-08, dtype=torch.float64)
secont condition:: tensor(1.3928e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2297e-08, dtype=torch.float64)
secont condition:: tensor(5.2297e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8839e-09, dtype=torch.float64)
secont condition:: tensor(2.8839e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.7529e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.9667e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2063e-08, dtype=torch.float64)
secont condition:: tensor(5.2063e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1220e-08, dtype=torch.float64)
secont condition:: tensor(1.1220e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2028e-08, dtype=torch.float64)
secont condition:: tensor(4.2028e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7856e-09, dtype=torch.float64)
secont condition:: tensor(7.7856e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0025e-08, dtype=torch.float64)
secont condition:: tensor(1.0025e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2584e-09, dtype=torch.float64)
secont condition:: tensor(3.2584e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9702e-09, dtype=torch.float64)
secont condition:: tensor(5.9702e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3582e-09, dtype=torch.float64)
secont condition:: tensor(8.3582e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2329e-09, dtype=torch.float64)
secont condition:: tensor(5.2329e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7824e-09, dtype=torch.float64)
secont condition:: tensor(2.7824e-09, dtype=torch.float64)
curr_secont condition:: tensor(-6.7479e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3608e-08, dtype=torch.float64)
secont condition:: tensor(4.3608e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5683e-08, dtype=torch.float64)
secont condition:: tensor(1.5683e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1307e-08, dtype=torch.float64)
secont condition:: tensor(3.1307e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6208e-08, dtype=torch.float64)
secont condition:: tensor(3.6208e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9314e-09, dtype=torch.float64)
secont condition:: tensor(6.9314e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4921e-09, dtype=torch.float64)
secont condition:: tensor(5.4921e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.0113e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.8087e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.4986e-09, dtype=torch.float64)
secont condition:: tensor(9.4986e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2864e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8552e-09, dtype=torch.float64)
secont condition:: tensor(1.8552e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6555e-07, dtype=torch.float64)
secont condition:: tensor(2.6555e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8320e-08, dtype=torch.float64)
secont condition:: tensor(1.8320e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.4872e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8974e-08, dtype=torch.float64)
secont condition:: tensor(1.8974e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3532e-08, dtype=torch.float64)
secont condition:: tensor(1.3532e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6812e-08, dtype=torch.float64)
secont condition:: tensor(1.6812e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.872601270675659
curr_diff: 0 tensor(1.0765e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2244e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.3768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3270e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.1279e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1288e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9975e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7077e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(1.5226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2894e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0659e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6101e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.4840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.5292e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1857e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965100
deletion rate:: 0.0002
python3 generate_rand_ids 0.0002  MNIST 0
tensor([44229,  3621, 32679, 38986, 18635, 43370, 22159,  1329, 10456, 29466,
         7102, 24383])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 248.40926909446716
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.43035244941711
time_baseline:: 163.69878911972046
curr_diff: 0 tensor(3.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9926e-09, dtype=torch.float64)
secont condition:: tensor(2.9926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1160e-09, dtype=torch.float64)
secont condition:: tensor(3.1160e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6271e-09, dtype=torch.float64)
secont condition:: tensor(3.6271e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1045e-09, dtype=torch.float64)
secont condition:: tensor(3.1045e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2278e-09, dtype=torch.float64)
secont condition:: tensor(3.2278e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8752e-09, dtype=torch.float64)
secont condition:: tensor(2.8752e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2200e-09, dtype=torch.float64)
secont condition:: tensor(3.2200e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7272e-09, dtype=torch.float64)
secont condition:: tensor(3.7272e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1137e-09, dtype=torch.float64)
secont condition:: tensor(3.1137e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-09, dtype=torch.float64)
secont condition:: tensor(3.0304e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8419e-09, dtype=torch.float64)
secont condition:: tensor(2.8419e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8387e-09, dtype=torch.float64)
secont condition:: tensor(2.8387e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3055e-09, dtype=torch.float64)
secont condition:: tensor(3.3055e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3139e-09, dtype=torch.float64)
secont condition:: tensor(3.3139e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1802e-09, dtype=torch.float64)
secont condition:: tensor(3.1802e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7977e-09, dtype=torch.float64)
secont condition:: tensor(3.7977e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7100e-09, dtype=torch.float64)
secont condition:: tensor(3.7100e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7622e-09, dtype=torch.float64)
secont condition:: tensor(3.7622e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9117e-09, dtype=torch.float64)
secont condition:: tensor(3.9117e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3831e-09, dtype=torch.float64)
secont condition:: tensor(4.3831e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0962e-09, dtype=torch.float64)
secont condition:: tensor(4.0962e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7510e-09, dtype=torch.float64)
secont condition:: tensor(3.7510e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2749e-09, dtype=torch.float64)
secont condition:: tensor(4.2749e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-09, dtype=torch.float64)
secont condition:: tensor(3.8107e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0433e-09, dtype=torch.float64)
secont condition:: tensor(4.0433e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0372e-09, dtype=torch.float64)
secont condition:: tensor(3.0372e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1799e-09, dtype=torch.float64)
secont condition:: tensor(5.1799e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7328e-09, dtype=torch.float64)
secont condition:: tensor(4.7328e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9873e-09, dtype=torch.float64)
secont condition:: tensor(4.9873e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7733e-09, dtype=torch.float64)
secont condition:: tensor(3.7733e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7132e-09, dtype=torch.float64)
secont condition:: tensor(5.7132e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5428e-09, dtype=torch.float64)
secont condition:: tensor(4.5428e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6117e-09, dtype=torch.float64)
secont condition:: tensor(5.6117e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7476e-09, dtype=torch.float64)
secont condition:: tensor(4.7476e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0712e-09, dtype=torch.float64)
secont condition:: tensor(5.0712e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5661e-09, dtype=torch.float64)
secont condition:: tensor(4.5661e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3366e-09, dtype=torch.float64)
secont condition:: tensor(5.3366e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0681e-09, dtype=torch.float64)
secont condition:: tensor(5.0681e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1884e-09, dtype=torch.float64)
secont condition:: tensor(5.1884e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8191e-09, dtype=torch.float64)
secont condition:: tensor(5.8191e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2169e-09, dtype=torch.float64)
secont condition:: tensor(6.2169e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8848e-09, dtype=torch.float64)
secont condition:: tensor(4.8848e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9170e-09, dtype=torch.float64)
secont condition:: tensor(4.9170e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9110e-09, dtype=torch.float64)
secont condition:: tensor(5.9110e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-09, dtype=torch.float64)
secont condition:: tensor(5.2763e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7311e-09, dtype=torch.float64)
secont condition:: tensor(5.7311e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0107e-09, dtype=torch.float64)
secont condition:: tensor(5.0107e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1091e-09, dtype=torch.float64)
secont condition:: tensor(5.1091e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5669e-09, dtype=torch.float64)
secont condition:: tensor(4.5669e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8156e-09, dtype=torch.float64)
secont condition:: tensor(6.8156e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4604e-09, dtype=torch.float64)
secont condition:: tensor(6.4604e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6309e-09, dtype=torch.float64)
secont condition:: tensor(6.6309e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4246e-09, dtype=torch.float64)
secont condition:: tensor(6.4246e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2656e-09, dtype=torch.float64)
secont condition:: tensor(6.2656e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5225e-09, dtype=torch.float64)
secont condition:: tensor(5.5225e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9090e-09, dtype=torch.float64)
secont condition:: tensor(5.9090e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3985e-09, dtype=torch.float64)
secont condition:: tensor(6.3985e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9806e-09, dtype=torch.float64)
secont condition:: tensor(6.9806e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9292e-09, dtype=torch.float64)
secont condition:: tensor(5.9292e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2779e-09, dtype=torch.float64)
secont condition:: tensor(5.2779e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5522e-09, dtype=torch.float64)
secont condition:: tensor(6.5522e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5163e-09, dtype=torch.float64)
secont condition:: tensor(7.5163e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2996e-09, dtype=torch.float64)
secont condition:: tensor(8.2996e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7813e-09, dtype=torch.float64)
secont condition:: tensor(8.7813e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1151e-08, dtype=torch.float64)
secont condition:: tensor(1.1151e-08, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6493e-09, dtype=torch.float64)
secont condition:: tensor(8.6493e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8326e-09, dtype=torch.float64)
secont condition:: tensor(9.8326e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3771e-09, dtype=torch.float64)
secont condition:: tensor(8.3771e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9187e-09, dtype=torch.float64)
secont condition:: tensor(9.9187e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1823e-09, dtype=torch.float64)
secont condition:: tensor(8.1823e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-08, dtype=torch.float64)
secont condition:: tensor(1.0369e-08, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6797e-09, dtype=torch.float64)
secont condition:: tensor(9.6797e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2641e-09, dtype=torch.float64)
secont condition:: tensor(9.2641e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1473e-08, dtype=torch.float64)
secont condition:: tensor(1.1473e-08, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0245e-08, dtype=torch.float64)
secont condition:: tensor(1.0245e-08, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-08, dtype=torch.float64)
secont condition:: tensor(1.4212e-08, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1112e-08, dtype=torch.float64)
secont condition:: tensor(1.1112e-08, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-08, dtype=torch.float64)
secont condition:: tensor(1.2264e-08, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.01815724372864
curr_diff: 0 tensor(1.9773e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2267e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4991e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1203e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2876e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5056e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4897e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.49494218826294
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.18944692611694
time_baseline:: 163.45844507217407
curr_diff: 0 tensor(3.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9926e-09, dtype=torch.float64)
secont condition:: tensor(2.9926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1160e-09, dtype=torch.float64)
secont condition:: tensor(3.1160e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6271e-09, dtype=torch.float64)
secont condition:: tensor(3.6271e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1045e-09, dtype=torch.float64)
secont condition:: tensor(3.1045e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2278e-09, dtype=torch.float64)
secont condition:: tensor(3.2278e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8752e-09, dtype=torch.float64)
secont condition:: tensor(2.8752e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2200e-09, dtype=torch.float64)
secont condition:: tensor(3.2200e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7272e-09, dtype=torch.float64)
secont condition:: tensor(3.7272e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1137e-09, dtype=torch.float64)
secont condition:: tensor(3.1137e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-09, dtype=torch.float64)
secont condition:: tensor(3.0304e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8419e-09, dtype=torch.float64)
secont condition:: tensor(2.8419e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8387e-09, dtype=torch.float64)
secont condition:: tensor(2.8387e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3055e-09, dtype=torch.float64)
secont condition:: tensor(3.3055e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3139e-09, dtype=torch.float64)
secont condition:: tensor(3.3139e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1802e-09, dtype=torch.float64)
secont condition:: tensor(3.1802e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7977e-09, dtype=torch.float64)
secont condition:: tensor(3.7977e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7100e-09, dtype=torch.float64)
secont condition:: tensor(3.7100e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7622e-09, dtype=torch.float64)
secont condition:: tensor(3.7622e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9117e-09, dtype=torch.float64)
secont condition:: tensor(3.9117e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3831e-09, dtype=torch.float64)
secont condition:: tensor(4.3831e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0962e-09, dtype=torch.float64)
secont condition:: tensor(4.0962e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7510e-09, dtype=torch.float64)
secont condition:: tensor(3.7510e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2749e-09, dtype=torch.float64)
secont condition:: tensor(4.2749e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-09, dtype=torch.float64)
secont condition:: tensor(3.8107e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0433e-09, dtype=torch.float64)
secont condition:: tensor(4.0433e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0372e-09, dtype=torch.float64)
secont condition:: tensor(3.0372e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1799e-09, dtype=torch.float64)
secont condition:: tensor(5.1799e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7328e-09, dtype=torch.float64)
secont condition:: tensor(4.7328e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9873e-09, dtype=torch.float64)
secont condition:: tensor(4.9873e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7733e-09, dtype=torch.float64)
secont condition:: tensor(3.7733e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7132e-09, dtype=torch.float64)
secont condition:: tensor(5.7132e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5428e-09, dtype=torch.float64)
secont condition:: tensor(4.5428e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6117e-09, dtype=torch.float64)
secont condition:: tensor(5.6117e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7476e-09, dtype=torch.float64)
secont condition:: tensor(4.7476e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0712e-09, dtype=torch.float64)
secont condition:: tensor(5.0712e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5661e-09, dtype=torch.float64)
secont condition:: tensor(4.5661e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3366e-09, dtype=torch.float64)
secont condition:: tensor(5.3366e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0681e-09, dtype=torch.float64)
secont condition:: tensor(5.0681e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1884e-09, dtype=torch.float64)
secont condition:: tensor(5.1884e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8191e-09, dtype=torch.float64)
secont condition:: tensor(5.8191e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2169e-09, dtype=torch.float64)
secont condition:: tensor(6.2169e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8848e-09, dtype=torch.float64)
secont condition:: tensor(4.8848e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9170e-09, dtype=torch.float64)
secont condition:: tensor(4.9170e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9110e-09, dtype=torch.float64)
secont condition:: tensor(5.9110e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-09, dtype=torch.float64)
secont condition:: tensor(5.2763e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7311e-09, dtype=torch.float64)
secont condition:: tensor(5.7311e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0107e-09, dtype=torch.float64)
secont condition:: tensor(5.0107e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1091e-09, dtype=torch.float64)
secont condition:: tensor(5.1091e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5669e-09, dtype=torch.float64)
secont condition:: tensor(4.5669e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8156e-09, dtype=torch.float64)
secont condition:: tensor(6.8156e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4604e-09, dtype=torch.float64)
secont condition:: tensor(6.4604e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6309e-09, dtype=torch.float64)
secont condition:: tensor(6.6309e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4246e-09, dtype=torch.float64)
secont condition:: tensor(6.4246e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2656e-09, dtype=torch.float64)
secont condition:: tensor(6.2656e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5225e-09, dtype=torch.float64)
secont condition:: tensor(5.5225e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9090e-09, dtype=torch.float64)
secont condition:: tensor(5.9090e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3985e-09, dtype=torch.float64)
secont condition:: tensor(6.3985e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9806e-09, dtype=torch.float64)
secont condition:: tensor(6.9806e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9292e-09, dtype=torch.float64)
secont condition:: tensor(5.9292e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2779e-09, dtype=torch.float64)
secont condition:: tensor(5.2779e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5522e-09, dtype=torch.float64)
secont condition:: tensor(6.5522e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5163e-09, dtype=torch.float64)
secont condition:: tensor(7.5163e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2996e-09, dtype=torch.float64)
secont condition:: tensor(8.2996e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7813e-09, dtype=torch.float64)
secont condition:: tensor(8.7813e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1151e-08, dtype=torch.float64)
secont condition:: tensor(1.1151e-08, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6493e-09, dtype=torch.float64)
secont condition:: tensor(8.6493e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8326e-09, dtype=torch.float64)
secont condition:: tensor(9.8326e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3771e-09, dtype=torch.float64)
secont condition:: tensor(8.3771e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9187e-09, dtype=torch.float64)
secont condition:: tensor(9.9187e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1823e-09, dtype=torch.float64)
secont condition:: tensor(8.1823e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-08, dtype=torch.float64)
secont condition:: tensor(1.0369e-08, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6797e-09, dtype=torch.float64)
secont condition:: tensor(9.6797e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2641e-09, dtype=torch.float64)
secont condition:: tensor(9.2641e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1473e-08, dtype=torch.float64)
secont condition:: tensor(1.1473e-08, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0245e-08, dtype=torch.float64)
secont condition:: tensor(1.0245e-08, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-08, dtype=torch.float64)
secont condition:: tensor(1.4212e-08, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1112e-08, dtype=torch.float64)
secont condition:: tensor(1.1112e-08, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-08, dtype=torch.float64)
secont condition:: tensor(1.2264e-08, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 116.9765202999115
curr_diff: 0 tensor(1.9773e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2267e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4991e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1203e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2876e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5056e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4897e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.55387258529663
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.00645661354065
time_baseline:: 163.27391290664673
curr_diff: 0 tensor(3.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9926e-09, dtype=torch.float64)
secont condition:: tensor(2.9926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1160e-09, dtype=torch.float64)
secont condition:: tensor(3.1160e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6271e-09, dtype=torch.float64)
secont condition:: tensor(3.6271e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1045e-09, dtype=torch.float64)
secont condition:: tensor(3.1045e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2278e-09, dtype=torch.float64)
secont condition:: tensor(3.2278e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8752e-09, dtype=torch.float64)
secont condition:: tensor(2.8752e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2200e-09, dtype=torch.float64)
secont condition:: tensor(3.2200e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7272e-09, dtype=torch.float64)
secont condition:: tensor(3.7272e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1137e-09, dtype=torch.float64)
secont condition:: tensor(3.1137e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-09, dtype=torch.float64)
secont condition:: tensor(3.0304e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8419e-09, dtype=torch.float64)
secont condition:: tensor(2.8419e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8387e-09, dtype=torch.float64)
secont condition:: tensor(2.8387e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3055e-09, dtype=torch.float64)
secont condition:: tensor(3.3055e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3139e-09, dtype=torch.float64)
secont condition:: tensor(3.3139e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1802e-09, dtype=torch.float64)
secont condition:: tensor(3.1802e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7977e-09, dtype=torch.float64)
secont condition:: tensor(3.7977e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7100e-09, dtype=torch.float64)
secont condition:: tensor(3.7100e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7622e-09, dtype=torch.float64)
secont condition:: tensor(3.7622e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9117e-09, dtype=torch.float64)
secont condition:: tensor(3.9117e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3831e-09, dtype=torch.float64)
secont condition:: tensor(4.3831e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0962e-09, dtype=torch.float64)
secont condition:: tensor(4.0962e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7510e-09, dtype=torch.float64)
secont condition:: tensor(3.7510e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2749e-09, dtype=torch.float64)
secont condition:: tensor(4.2749e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-09, dtype=torch.float64)
secont condition:: tensor(3.8107e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0433e-09, dtype=torch.float64)
secont condition:: tensor(4.0433e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0372e-09, dtype=torch.float64)
secont condition:: tensor(3.0372e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1799e-09, dtype=torch.float64)
secont condition:: tensor(5.1799e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7328e-09, dtype=torch.float64)
secont condition:: tensor(4.7328e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9873e-09, dtype=torch.float64)
secont condition:: tensor(4.9873e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7733e-09, dtype=torch.float64)
secont condition:: tensor(3.7733e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7132e-09, dtype=torch.float64)
secont condition:: tensor(5.7132e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5428e-09, dtype=torch.float64)
secont condition:: tensor(4.5428e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6117e-09, dtype=torch.float64)
secont condition:: tensor(5.6117e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7476e-09, dtype=torch.float64)
secont condition:: tensor(4.7476e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0712e-09, dtype=torch.float64)
secont condition:: tensor(5.0712e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5661e-09, dtype=torch.float64)
secont condition:: tensor(4.5661e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3366e-09, dtype=torch.float64)
secont condition:: tensor(5.3366e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0681e-09, dtype=torch.float64)
secont condition:: tensor(5.0681e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1884e-09, dtype=torch.float64)
secont condition:: tensor(5.1884e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8191e-09, dtype=torch.float64)
secont condition:: tensor(5.8191e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2169e-09, dtype=torch.float64)
secont condition:: tensor(6.2169e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8848e-09, dtype=torch.float64)
secont condition:: tensor(4.8848e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9170e-09, dtype=torch.float64)
secont condition:: tensor(4.9170e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9110e-09, dtype=torch.float64)
secont condition:: tensor(5.9110e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-09, dtype=torch.float64)
secont condition:: tensor(5.2763e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7311e-09, dtype=torch.float64)
secont condition:: tensor(5.7311e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0107e-09, dtype=torch.float64)
secont condition:: tensor(5.0107e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1091e-09, dtype=torch.float64)
secont condition:: tensor(5.1091e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5669e-09, dtype=torch.float64)
secont condition:: tensor(4.5669e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8156e-09, dtype=torch.float64)
secont condition:: tensor(6.8156e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4604e-09, dtype=torch.float64)
secont condition:: tensor(6.4604e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6309e-09, dtype=torch.float64)
secont condition:: tensor(6.6309e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4246e-09, dtype=torch.float64)
secont condition:: tensor(6.4246e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2656e-09, dtype=torch.float64)
secont condition:: tensor(6.2656e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5225e-09, dtype=torch.float64)
secont condition:: tensor(5.5225e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9090e-09, dtype=torch.float64)
secont condition:: tensor(5.9090e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3985e-09, dtype=torch.float64)
secont condition:: tensor(6.3985e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9806e-09, dtype=torch.float64)
secont condition:: tensor(6.9806e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9292e-09, dtype=torch.float64)
secont condition:: tensor(5.9292e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2779e-09, dtype=torch.float64)
secont condition:: tensor(5.2779e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5522e-09, dtype=torch.float64)
secont condition:: tensor(6.5522e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5163e-09, dtype=torch.float64)
secont condition:: tensor(7.5163e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2996e-09, dtype=torch.float64)
secont condition:: tensor(8.2996e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7813e-09, dtype=torch.float64)
secont condition:: tensor(8.7813e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1151e-08, dtype=torch.float64)
secont condition:: tensor(1.1151e-08, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6493e-09, dtype=torch.float64)
secont condition:: tensor(8.6493e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8326e-09, dtype=torch.float64)
secont condition:: tensor(9.8326e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3771e-09, dtype=torch.float64)
secont condition:: tensor(8.3771e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9187e-09, dtype=torch.float64)
secont condition:: tensor(9.9187e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1823e-09, dtype=torch.float64)
secont condition:: tensor(8.1823e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-08, dtype=torch.float64)
secont condition:: tensor(1.0369e-08, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6797e-09, dtype=torch.float64)
secont condition:: tensor(9.6797e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2641e-09, dtype=torch.float64)
secont condition:: tensor(9.2641e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1473e-08, dtype=torch.float64)
secont condition:: tensor(1.1473e-08, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0245e-08, dtype=torch.float64)
secont condition:: tensor(1.0245e-08, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-08, dtype=torch.float64)
secont condition:: tensor(1.4212e-08, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1112e-08, dtype=torch.float64)
secont condition:: tensor(1.1112e-08, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-08, dtype=torch.float64)
secont condition:: tensor(1.2264e-08, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.1751856803894
curr_diff: 0 tensor(1.9773e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2267e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4991e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1203e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2876e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5056e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4897e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.72365927696228
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.05641746520996
time_baseline:: 163.32577204704285
curr_diff: 0 tensor(3.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9926e-09, dtype=torch.float64)
secont condition:: tensor(2.9926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1160e-09, dtype=torch.float64)
secont condition:: tensor(3.1160e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6271e-09, dtype=torch.float64)
secont condition:: tensor(3.6271e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1045e-09, dtype=torch.float64)
secont condition:: tensor(3.1045e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2278e-09, dtype=torch.float64)
secont condition:: tensor(3.2278e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8752e-09, dtype=torch.float64)
secont condition:: tensor(2.8752e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2200e-09, dtype=torch.float64)
secont condition:: tensor(3.2200e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7272e-09, dtype=torch.float64)
secont condition:: tensor(3.7272e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1137e-09, dtype=torch.float64)
secont condition:: tensor(3.1137e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-09, dtype=torch.float64)
secont condition:: tensor(3.0304e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8419e-09, dtype=torch.float64)
secont condition:: tensor(2.8419e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8387e-09, dtype=torch.float64)
secont condition:: tensor(2.8387e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3055e-09, dtype=torch.float64)
secont condition:: tensor(3.3055e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3139e-09, dtype=torch.float64)
secont condition:: tensor(3.3139e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1802e-09, dtype=torch.float64)
secont condition:: tensor(3.1802e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7977e-09, dtype=torch.float64)
secont condition:: tensor(3.7977e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7100e-09, dtype=torch.float64)
secont condition:: tensor(3.7100e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7622e-09, dtype=torch.float64)
secont condition:: tensor(3.7622e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9117e-09, dtype=torch.float64)
secont condition:: tensor(3.9117e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3831e-09, dtype=torch.float64)
secont condition:: tensor(4.3831e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0962e-09, dtype=torch.float64)
secont condition:: tensor(4.0962e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7510e-09, dtype=torch.float64)
secont condition:: tensor(3.7510e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2749e-09, dtype=torch.float64)
secont condition:: tensor(4.2749e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-09, dtype=torch.float64)
secont condition:: tensor(3.8107e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0433e-09, dtype=torch.float64)
secont condition:: tensor(4.0433e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0372e-09, dtype=torch.float64)
secont condition:: tensor(3.0372e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1799e-09, dtype=torch.float64)
secont condition:: tensor(5.1799e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7328e-09, dtype=torch.float64)
secont condition:: tensor(4.7328e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9873e-09, dtype=torch.float64)
secont condition:: tensor(4.9873e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7733e-09, dtype=torch.float64)
secont condition:: tensor(3.7733e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7132e-09, dtype=torch.float64)
secont condition:: tensor(5.7132e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5428e-09, dtype=torch.float64)
secont condition:: tensor(4.5428e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6117e-09, dtype=torch.float64)
secont condition:: tensor(5.6117e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7476e-09, dtype=torch.float64)
secont condition:: tensor(4.7476e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0712e-09, dtype=torch.float64)
secont condition:: tensor(5.0712e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5661e-09, dtype=torch.float64)
secont condition:: tensor(4.5661e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3366e-09, dtype=torch.float64)
secont condition:: tensor(5.3366e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0681e-09, dtype=torch.float64)
secont condition:: tensor(5.0681e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1884e-09, dtype=torch.float64)
secont condition:: tensor(5.1884e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8191e-09, dtype=torch.float64)
secont condition:: tensor(5.8191e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2169e-09, dtype=torch.float64)
secont condition:: tensor(6.2169e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8848e-09, dtype=torch.float64)
secont condition:: tensor(4.8848e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9170e-09, dtype=torch.float64)
secont condition:: tensor(4.9170e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9110e-09, dtype=torch.float64)
secont condition:: tensor(5.9110e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-09, dtype=torch.float64)
secont condition:: tensor(5.2763e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7311e-09, dtype=torch.float64)
secont condition:: tensor(5.7311e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0107e-09, dtype=torch.float64)
secont condition:: tensor(5.0107e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1091e-09, dtype=torch.float64)
secont condition:: tensor(5.1091e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5669e-09, dtype=torch.float64)
secont condition:: tensor(4.5669e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8156e-09, dtype=torch.float64)
secont condition:: tensor(6.8156e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4604e-09, dtype=torch.float64)
secont condition:: tensor(6.4604e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6309e-09, dtype=torch.float64)
secont condition:: tensor(6.6309e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4246e-09, dtype=torch.float64)
secont condition:: tensor(6.4246e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2656e-09, dtype=torch.float64)
secont condition:: tensor(6.2656e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5225e-09, dtype=torch.float64)
secont condition:: tensor(5.5225e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9090e-09, dtype=torch.float64)
secont condition:: tensor(5.9090e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3985e-09, dtype=torch.float64)
secont condition:: tensor(6.3985e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9806e-09, dtype=torch.float64)
secont condition:: tensor(6.9806e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9292e-09, dtype=torch.float64)
secont condition:: tensor(5.9292e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2779e-09, dtype=torch.float64)
secont condition:: tensor(5.2779e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5522e-09, dtype=torch.float64)
secont condition:: tensor(6.5522e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5163e-09, dtype=torch.float64)
secont condition:: tensor(7.5163e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2996e-09, dtype=torch.float64)
secont condition:: tensor(8.2996e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7813e-09, dtype=torch.float64)
secont condition:: tensor(8.7813e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1151e-08, dtype=torch.float64)
secont condition:: tensor(1.1151e-08, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6493e-09, dtype=torch.float64)
secont condition:: tensor(8.6493e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8326e-09, dtype=torch.float64)
secont condition:: tensor(9.8326e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3771e-09, dtype=torch.float64)
secont condition:: tensor(8.3771e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9187e-09, dtype=torch.float64)
secont condition:: tensor(9.9187e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1823e-09, dtype=torch.float64)
secont condition:: tensor(8.1823e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-08, dtype=torch.float64)
secont condition:: tensor(1.0369e-08, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6797e-09, dtype=torch.float64)
secont condition:: tensor(9.6797e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2641e-09, dtype=torch.float64)
secont condition:: tensor(9.2641e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1473e-08, dtype=torch.float64)
secont condition:: tensor(1.1473e-08, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0245e-08, dtype=torch.float64)
secont condition:: tensor(1.0245e-08, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-08, dtype=torch.float64)
secont condition:: tensor(1.4212e-08, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1112e-08, dtype=torch.float64)
secont condition:: tensor(1.1112e-08, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-08, dtype=torch.float64)
secont condition:: tensor(1.2264e-08, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.14911270141602
curr_diff: 0 tensor(1.9773e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2267e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4991e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1203e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2876e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5056e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4897e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.02739477157593
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.1832995414734
time_baseline:: 163.47072768211365
curr_diff: 0 tensor(3.0481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8788e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 12
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5202e-09, dtype=torch.float64)
secont condition:: tensor(1.5202e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9926e-09, dtype=torch.float64)
secont condition:: tensor(2.9926e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1160e-09, dtype=torch.float64)
secont condition:: tensor(3.1160e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6271e-09, dtype=torch.float64)
secont condition:: tensor(3.6271e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1045e-09, dtype=torch.float64)
secont condition:: tensor(3.1045e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2278e-09, dtype=torch.float64)
secont condition:: tensor(3.2278e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8752e-09, dtype=torch.float64)
secont condition:: tensor(2.8752e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2200e-09, dtype=torch.float64)
secont condition:: tensor(3.2200e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7272e-09, dtype=torch.float64)
secont condition:: tensor(3.7272e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1137e-09, dtype=torch.float64)
secont condition:: tensor(3.1137e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0304e-09, dtype=torch.float64)
secont condition:: tensor(3.0304e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8419e-09, dtype=torch.float64)
secont condition:: tensor(2.8419e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8387e-09, dtype=torch.float64)
secont condition:: tensor(2.8387e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3055e-09, dtype=torch.float64)
secont condition:: tensor(3.3055e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3139e-09, dtype=torch.float64)
secont condition:: tensor(3.3139e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1802e-09, dtype=torch.float64)
secont condition:: tensor(3.1802e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7977e-09, dtype=torch.float64)
secont condition:: tensor(3.7977e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7100e-09, dtype=torch.float64)
secont condition:: tensor(3.7100e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7622e-09, dtype=torch.float64)
secont condition:: tensor(3.7622e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9117e-09, dtype=torch.float64)
secont condition:: tensor(3.9117e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3831e-09, dtype=torch.float64)
secont condition:: tensor(4.3831e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0962e-09, dtype=torch.float64)
secont condition:: tensor(4.0962e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7510e-09, dtype=torch.float64)
secont condition:: tensor(3.7510e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4465e-09, dtype=torch.float64)
secont condition:: tensor(3.4465e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2298e-09, dtype=torch.float64)
secont condition:: tensor(4.2298e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2749e-09, dtype=torch.float64)
secont condition:: tensor(4.2749e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8107e-09, dtype=torch.float64)
secont condition:: tensor(3.8107e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0433e-09, dtype=torch.float64)
secont condition:: tensor(4.0433e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0372e-09, dtype=torch.float64)
secont condition:: tensor(3.0372e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1799e-09, dtype=torch.float64)
secont condition:: tensor(5.1799e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7328e-09, dtype=torch.float64)
secont condition:: tensor(4.7328e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9873e-09, dtype=torch.float64)
secont condition:: tensor(4.9873e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7733e-09, dtype=torch.float64)
secont condition:: tensor(3.7733e-09, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7132e-09, dtype=torch.float64)
secont condition:: tensor(5.7132e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5428e-09, dtype=torch.float64)
secont condition:: tensor(4.5428e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6117e-09, dtype=torch.float64)
secont condition:: tensor(5.6117e-09, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7476e-09, dtype=torch.float64)
secont condition:: tensor(4.7476e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0712e-09, dtype=torch.float64)
secont condition:: tensor(5.0712e-09, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5661e-09, dtype=torch.float64)
secont condition:: tensor(4.5661e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3366e-09, dtype=torch.float64)
secont condition:: tensor(5.3366e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0681e-09, dtype=torch.float64)
secont condition:: tensor(5.0681e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1884e-09, dtype=torch.float64)
secont condition:: tensor(5.1884e-09, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8191e-09, dtype=torch.float64)
secont condition:: tensor(5.8191e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2169e-09, dtype=torch.float64)
secont condition:: tensor(6.2169e-09, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8848e-09, dtype=torch.float64)
secont condition:: tensor(4.8848e-09, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9170e-09, dtype=torch.float64)
secont condition:: tensor(4.9170e-09, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9110e-09, dtype=torch.float64)
secont condition:: tensor(5.9110e-09, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2763e-09, dtype=torch.float64)
secont condition:: tensor(5.2763e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7311e-09, dtype=torch.float64)
secont condition:: tensor(5.7311e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0107e-09, dtype=torch.float64)
secont condition:: tensor(5.0107e-09, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1091e-09, dtype=torch.float64)
secont condition:: tensor(5.1091e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5669e-09, dtype=torch.float64)
secont condition:: tensor(4.5669e-09, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8156e-09, dtype=torch.float64)
secont condition:: tensor(6.8156e-09, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4604e-09, dtype=torch.float64)
secont condition:: tensor(6.4604e-09, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6309e-09, dtype=torch.float64)
secont condition:: tensor(6.6309e-09, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4246e-09, dtype=torch.float64)
secont condition:: tensor(6.4246e-09, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2656e-09, dtype=torch.float64)
secont condition:: tensor(6.2656e-09, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5225e-09, dtype=torch.float64)
secont condition:: tensor(5.5225e-09, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9090e-09, dtype=torch.float64)
secont condition:: tensor(5.9090e-09, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3985e-09, dtype=torch.float64)
secont condition:: tensor(6.3985e-09, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9806e-09, dtype=torch.float64)
secont condition:: tensor(6.9806e-09, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9292e-09, dtype=torch.float64)
secont condition:: tensor(5.9292e-09, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2779e-09, dtype=torch.float64)
secont condition:: tensor(5.2779e-09, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5522e-09, dtype=torch.float64)
secont condition:: tensor(6.5522e-09, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5163e-09, dtype=torch.float64)
secont condition:: tensor(7.5163e-09, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2996e-09, dtype=torch.float64)
secont condition:: tensor(8.2996e-09, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7813e-09, dtype=torch.float64)
secont condition:: tensor(8.7813e-09, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1151e-08, dtype=torch.float64)
secont condition:: tensor(1.1151e-08, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6493e-09, dtype=torch.float64)
secont condition:: tensor(8.6493e-09, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8326e-09, dtype=torch.float64)
secont condition:: tensor(9.8326e-09, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3771e-09, dtype=torch.float64)
secont condition:: tensor(8.3771e-09, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9187e-09, dtype=torch.float64)
secont condition:: tensor(9.9187e-09, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1823e-09, dtype=torch.float64)
secont condition:: tensor(8.1823e-09, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0369e-08, dtype=torch.float64)
secont condition:: tensor(1.0369e-08, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6797e-09, dtype=torch.float64)
secont condition:: tensor(9.6797e-09, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2641e-09, dtype=torch.float64)
secont condition:: tensor(9.2641e-09, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1473e-08, dtype=torch.float64)
secont condition:: tensor(1.1473e-08, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2541e-08, dtype=torch.float64)
secont condition:: tensor(1.2541e-08, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0245e-08, dtype=torch.float64)
secont condition:: tensor(1.0245e-08, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4212e-08, dtype=torch.float64)
secont condition:: tensor(1.4212e-08, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1112e-08, dtype=torch.float64)
secont condition:: tensor(1.1112e-08, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-08, dtype=torch.float64)
secont condition:: tensor(1.2264e-08, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.0239109992981
curr_diff: 0 tensor(1.9773e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4668e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.4904e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2267e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.4991e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1203e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.8868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8760e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8600e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2876e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.5056e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3064e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4897e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8002e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.210697
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.172994
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.161359
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157434
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 4, Batch: 0, Loss: 0.153814
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.154945
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.153505
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.151829
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.148573
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.154181
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.148303
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.146462
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.143645
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.144922
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.146645
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.143150
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.143729
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 17, Batch: 0, Loss: 0.145761
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 18, Batch: 0, Loss: 0.142784
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 19, Batch: 0, Loss: 0.143834
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 20, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.144090
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.145800
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.140553
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.144954
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.144610
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.145670
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.141620
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 29, Batch: 0, Loss: 0.141237
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.143898
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.145145
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 32, Batch: 0, Loss: 0.145028
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 33, Batch: 0, Loss: 0.140488
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.139758
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 35, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 36, Batch: 0, Loss: 0.139655
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 37, Batch: 0, Loss: 0.142610
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 38, Batch: 0, Loss: 0.143763
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 39, Batch: 0, Loss: 0.140999
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.144565
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.141114
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.141639
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.143751
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 44, Batch: 0, Loss: 0.141097
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.136970
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.141147
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.142065
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.143291
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.146659
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.141830
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.143745
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.142219
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.140916
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.141261
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 55, Batch: 0, Loss: 0.141744
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 56, Batch: 0, Loss: 0.145027
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 57, Batch: 0, Loss: 0.142158
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.144151
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.143973
Test Avg. Loss: 0.000013, Accuracy: 0.965000
training_time:: 123.4705445766449
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.34885668754578
time_baseline:: 82.49589157104492
curr_diff: 0 tensor(2.9382e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8345e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.2655e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.9136e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8940e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.5812e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5868e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6383e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2342e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7507e-09, dtype=torch.float64)
secont condition:: tensor(6.7507e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8622e-09, dtype=torch.float64)
secont condition:: tensor(1.8622e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5407e-09, dtype=torch.float64)
secont condition:: tensor(4.5407e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7237e-09, dtype=torch.float64)
secont condition:: tensor(3.7237e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1204e-09, dtype=torch.float64)
secont condition:: tensor(3.1204e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5963e-09, dtype=torch.float64)
secont condition:: tensor(3.5963e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8028e-09, dtype=torch.float64)
secont condition:: tensor(2.8028e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8015e-09, dtype=torch.float64)
secont condition:: tensor(2.8015e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2369e-09, dtype=torch.float64)
secont condition:: tensor(6.2369e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3119e-09, dtype=torch.float64)
secont condition:: tensor(3.3119e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2961e-09, dtype=torch.float64)
secont condition:: tensor(2.2961e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8211e-09, dtype=torch.float64)
secont condition:: tensor(3.8211e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9708e-09, dtype=torch.float64)
secont condition:: tensor(4.9708e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5753e-09, dtype=torch.float64)
secont condition:: tensor(3.5753e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6114e-09, dtype=torch.float64)
secont condition:: tensor(3.6114e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2356e-09, dtype=torch.float64)
secont condition:: tensor(4.2356e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0773e-09, dtype=torch.float64)
secont condition:: tensor(5.0773e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4199e-09, dtype=torch.float64)
secont condition:: tensor(3.4199e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0445e-09, dtype=torch.float64)
secont condition:: tensor(4.0445e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5006e-09, dtype=torch.float64)
secont condition:: tensor(3.5006e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2937e-09, dtype=torch.float64)
secont condition:: tensor(4.2937e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7937e-09, dtype=torch.float64)
secont condition:: tensor(3.7937e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8257e-10, dtype=torch.float64)
secont condition:: tensor(9.8257e-10, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0683e-09, dtype=torch.float64)
secont condition:: tensor(5.0683e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6449e-09, dtype=torch.float64)
secont condition:: tensor(3.6449e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9631e-09, dtype=torch.float64)
secont condition:: tensor(4.9631e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0659e-09, dtype=torch.float64)
secont condition:: tensor(6.0659e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2522e-09, dtype=torch.float64)
secont condition:: tensor(4.2522e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2704e-09, dtype=torch.float64)
secont condition:: tensor(4.2704e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6496e-09, dtype=torch.float64)
secont condition:: tensor(3.6496e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4442e-09, dtype=torch.float64)
secont condition:: tensor(4.4442e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1152e-09, dtype=torch.float64)
secont condition:: tensor(4.1152e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8868e-09, dtype=torch.float64)
secont condition:: tensor(5.8868e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0058e-09, dtype=torch.float64)
secont condition:: tensor(6.0058e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5464e-09, dtype=torch.float64)
secont condition:: tensor(5.5464e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9124e-09, dtype=torch.float64)
secont condition:: tensor(5.9124e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2260e-09, dtype=torch.float64)
secont condition:: tensor(4.2260e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5987e-09, dtype=torch.float64)
secont condition:: tensor(3.5987e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2941e-09, dtype=torch.float64)
secont condition:: tensor(4.2941e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1973e-09, dtype=torch.float64)
secont condition:: tensor(6.1973e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8010e-09, dtype=torch.float64)
secont condition:: tensor(5.8010e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8504e-09, dtype=torch.float64)
secont condition:: tensor(4.8504e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6413e-09, dtype=torch.float64)
secont condition:: tensor(4.6413e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4538e-09, dtype=torch.float64)
secont condition:: tensor(6.4538e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5462e-09, dtype=torch.float64)
secont condition:: tensor(6.5462e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8838e-09, dtype=torch.float64)
secont condition:: tensor(5.8838e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4871e-09, dtype=torch.float64)
secont condition:: tensor(7.4871e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0977e-09, dtype=torch.float64)
secont condition:: tensor(7.0977e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0163e-09, dtype=torch.float64)
secont condition:: tensor(9.0163e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3724e-09, dtype=torch.float64)
secont condition:: tensor(6.3724e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0815e-09, dtype=torch.float64)
secont condition:: tensor(5.0815e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6586e-09, dtype=torch.float64)
secont condition:: tensor(6.6586e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4758e-09, dtype=torch.float64)
secont condition:: tensor(6.4758e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8743e-09, dtype=torch.float64)
secont condition:: tensor(6.8743e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4084e-09, dtype=torch.float64)
secont condition:: tensor(8.4084e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6235e-09, dtype=torch.float64)
secont condition:: tensor(4.6235e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7009e-09, dtype=torch.float64)
secont condition:: tensor(8.7009e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3348e-09, dtype=torch.float64)
secont condition:: tensor(2.3348e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2748e-09, dtype=torch.float64)
secont condition:: tensor(8.2748e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8997e-09, dtype=torch.float64)
secont condition:: tensor(5.8997e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8279e-09, dtype=torch.float64)
secont condition:: tensor(5.8279e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3905e-09, dtype=torch.float64)
secont condition:: tensor(4.3905e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5838e-09, dtype=torch.float64)
secont condition:: tensor(4.5838e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6341e-09, dtype=torch.float64)
secont condition:: tensor(5.6341e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8866e-09, dtype=torch.float64)
secont condition:: tensor(9.8866e-09, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5308e-09, dtype=torch.float64)
secont condition:: tensor(8.5308e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8480e-09, dtype=torch.float64)
secont condition:: tensor(8.8480e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1237e-08, dtype=torch.float64)
secont condition:: tensor(1.1237e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0988e-08, dtype=torch.float64)
secont condition:: tensor(1.0988e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9064e-09, dtype=torch.float64)
secont condition:: tensor(5.9064e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5200e-08, dtype=torch.float64)
secont condition:: tensor(1.5200e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4838e-08, dtype=torch.float64)
secont condition:: tensor(1.4838e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1282e-08, dtype=torch.float64)
secont condition:: tensor(1.1282e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7020e-08, dtype=torch.float64)
secont condition:: tensor(1.7020e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1862e-08, dtype=torch.float64)
secont condition:: tensor(1.1862e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 67.22445368766785
curr_diff: 0 tensor(2.9353e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8826e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.5565e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.6949e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.9578e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1288e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.7309e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.2347e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.7369e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3044e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.8894e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.9282e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4089e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.6622e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8754e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8444e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.9992e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7806e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0405e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5351e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212798
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.173581
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.160616
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157216
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.157808
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.153297
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.149454
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.151060
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.148800
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 9, Batch: 0, Loss: 0.149575
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 10, Batch: 0, Loss: 0.144926
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.146670
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.147098
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.147813
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.144888
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.145689
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.147127
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.142223
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.146931
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.143643
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.146217
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.146874
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.144857
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.144664
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.148407
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 25, Batch: 0, Loss: 0.143374
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.143291
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.141904
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.142611
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.142588
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.144164
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.145471
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.146467
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.140563
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 34, Batch: 0, Loss: 0.144322
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 35, Batch: 0, Loss: 0.145597
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 36, Batch: 0, Loss: 0.143885
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.142063
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.141686
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.142289
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.139490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.143318
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.142097
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.140787
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.143911
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.138696
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 46, Batch: 0, Loss: 0.143941
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.144980
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.142942
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 49, Batch: 0, Loss: 0.141624
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.143896
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.143255
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 52, Batch: 0, Loss: 0.142653
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.141903
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.144202
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.139797
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.140684
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 57, Batch: 0, Loss: 0.141151
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 58, Batch: 0, Loss: 0.138676
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 59, Batch: 0, Loss: 0.143421
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.4840521812439
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.37325859069824
time_baseline:: 82.50682377815247
curr_diff: 0 tensor(2.7539e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6243e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4740e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.5678e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7400e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.4201e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.1510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0212e-09, dtype=torch.float64)
secont condition:: tensor(1.0212e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0241e-09, dtype=torch.float64)
secont condition:: tensor(3.0241e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7451e-09, dtype=torch.float64)
secont condition:: tensor(5.7451e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0640e-09, dtype=torch.float64)
secont condition:: tensor(3.0640e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1514e-09, dtype=torch.float64)
secont condition:: tensor(5.1514e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6370e-09, dtype=torch.float64)
secont condition:: tensor(2.6370e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2721e-09, dtype=torch.float64)
secont condition:: tensor(4.2721e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8793e-09, dtype=torch.float64)
secont condition:: tensor(2.8793e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9970e-09, dtype=torch.float64)
secont condition:: tensor(2.9970e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5292e-09, dtype=torch.float64)
secont condition:: tensor(3.5292e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6161e-09, dtype=torch.float64)
secont condition:: tensor(4.6161e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8363e-09, dtype=torch.float64)
secont condition:: tensor(1.8363e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8922e-09, dtype=torch.float64)
secont condition:: tensor(3.8922e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0066e-09, dtype=torch.float64)
secont condition:: tensor(3.0066e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4780e-09, dtype=torch.float64)
secont condition:: tensor(2.4780e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9304e-09, dtype=torch.float64)
secont condition:: tensor(3.9304e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1297e-09, dtype=torch.float64)
secont condition:: tensor(3.1297e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3760e-09, dtype=torch.float64)
secont condition:: tensor(5.3760e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6449e-09, dtype=torch.float64)
secont condition:: tensor(3.6449e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4409e-09, dtype=torch.float64)
secont condition:: tensor(4.4409e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4313e-09, dtype=torch.float64)
secont condition:: tensor(4.4313e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2821e-09, dtype=torch.float64)
secont condition:: tensor(6.2821e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5829e-09, dtype=torch.float64)
secont condition:: tensor(3.5829e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3885e-09, dtype=torch.float64)
secont condition:: tensor(2.3885e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9765e-09, dtype=torch.float64)
secont condition:: tensor(3.9765e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8165e-09, dtype=torch.float64)
secont condition:: tensor(3.8165e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8348e-09, dtype=torch.float64)
secont condition:: tensor(2.8348e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1417e-09, dtype=torch.float64)
secont condition:: tensor(6.1417e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3168e-09, dtype=torch.float64)
secont condition:: tensor(5.3168e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4308e-09, dtype=torch.float64)
secont condition:: tensor(4.4308e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7686e-09, dtype=torch.float64)
secont condition:: tensor(5.7686e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6758e-09, dtype=torch.float64)
secont condition:: tensor(4.6758e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0677e-09, dtype=torch.float64)
secont condition:: tensor(4.0677e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3804e-09, dtype=torch.float64)
secont condition:: tensor(5.3804e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7394e-09, dtype=torch.float64)
secont condition:: tensor(3.7394e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5798e-09, dtype=torch.float64)
secont condition:: tensor(5.5798e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2199e-09, dtype=torch.float64)
secont condition:: tensor(5.2199e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2869e-09, dtype=torch.float64)
secont condition:: tensor(4.2869e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4420e-09, dtype=torch.float64)
secont condition:: tensor(6.4420e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4758e-09, dtype=torch.float64)
secont condition:: tensor(5.4758e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9306e-09, dtype=torch.float64)
secont condition:: tensor(5.9306e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3688e-09, dtype=torch.float64)
secont condition:: tensor(4.3688e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8888e-09, dtype=torch.float64)
secont condition:: tensor(5.8888e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7796e-09, dtype=torch.float64)
secont condition:: tensor(6.7796e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6108e-09, dtype=torch.float64)
secont condition:: tensor(2.6108e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3765e-09, dtype=torch.float64)
secont condition:: tensor(8.3765e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4861e-09, dtype=torch.float64)
secont condition:: tensor(6.4861e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5296e-09, dtype=torch.float64)
secont condition:: tensor(7.5296e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2360e-09, dtype=torch.float64)
secont condition:: tensor(2.2360e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3631e-09, dtype=torch.float64)
secont condition:: tensor(7.3631e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1746e-08, dtype=torch.float64)
secont condition:: tensor(1.1746e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4014e-09, dtype=torch.float64)
secont condition:: tensor(5.4014e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4098e-09, dtype=torch.float64)
secont condition:: tensor(5.4098e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2466e-09, dtype=torch.float64)
secont condition:: tensor(7.2466e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.8415e-09, dtype=torch.float64)
secont condition:: tensor(8.8415e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7871e-09, dtype=torch.float64)
secont condition:: tensor(5.7871e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9071e-09, dtype=torch.float64)
secont condition:: tensor(4.9071e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6713e-09, dtype=torch.float64)
secont condition:: tensor(6.6713e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2447e-09, dtype=torch.float64)
secont condition:: tensor(1.2447e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1759e-09, dtype=torch.float64)
secont condition:: tensor(6.1759e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4789e-09, dtype=torch.float64)
secont condition:: tensor(7.4789e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7437e-09, dtype=torch.float64)
secont condition:: tensor(9.7437e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0213e-08, dtype=torch.float64)
secont condition:: tensor(1.0213e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4376e-09, dtype=torch.float64)
secont condition:: tensor(6.4376e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2735e-09, dtype=torch.float64)
secont condition:: tensor(8.2735e-09, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0291e-08, dtype=torch.float64)
secont condition:: tensor(1.0291e-08, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1964e-08, dtype=torch.float64)
secont condition:: tensor(1.1964e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3082e-08, dtype=torch.float64)
secont condition:: tensor(1.3082e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2931e-08, dtype=torch.float64)
secont condition:: tensor(1.2931e-08, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0885e-08, dtype=torch.float64)
secont condition:: tensor(1.0885e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5570e-08, dtype=torch.float64)
secont condition:: tensor(1.5570e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5618e-09, dtype=torch.float64)
secont condition:: tensor(8.5618e-09, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5724e-08, dtype=torch.float64)
secont condition:: tensor(1.5724e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4606e-08, dtype=torch.float64)
secont condition:: tensor(1.4606e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4463e-08, dtype=torch.float64)
secont condition:: tensor(1.4463e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5539e-08, dtype=torch.float64)
secont condition:: tensor(1.5539e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 65.79704880714417
curr_diff: 0 tensor(2.5909e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4261e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9131e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.6543e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(4.8028e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1153e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(1.9139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.5128e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.9448e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3822e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(5.9955e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.8821e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7352e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.7635e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6113e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3407e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9193e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9482e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5430e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214772
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.172985
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.161169
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157714
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.155975
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152601
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.151601
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.152187
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.150328
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.147800
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.147768
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.147396
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.145694
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.147133
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.145592
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 15, Batch: 0, Loss: 0.145833
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.146874
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 17, Batch: 0, Loss: 0.145448
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.145426
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 19, Batch: 0, Loss: 0.145868
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 20, Batch: 0, Loss: 0.147065
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.142802
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.142298
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 23, Batch: 0, Loss: 0.146999
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.144355
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 25, Batch: 0, Loss: 0.141596
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 26, Batch: 0, Loss: 0.143723
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 27, Batch: 0, Loss: 0.143979
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.143467
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.146816
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 30, Batch: 0, Loss: 0.141913
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 31, Batch: 0, Loss: 0.139540
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.144379
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 33, Batch: 0, Loss: 0.141837
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.144925
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.146080
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.144496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 37, Batch: 0, Loss: 0.140726
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 38, Batch: 0, Loss: 0.144718
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.142726
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.143164
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.145133
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.142846
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.142659
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.143580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.144986
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.140483
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 48, Batch: 0, Loss: 0.143018
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.143843
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.139203
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.144751
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.143476
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.143563
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 54, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.141157
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 56, Batch: 0, Loss: 0.144311
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 57, Batch: 0, Loss: 0.138988
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.142579
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.141733
Test Avg. Loss: 0.000013, Accuracy: 0.964900
training_time:: 123.21610403060913
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.38101506233215
time_baseline:: 82.51543498039246
curr_diff: 0 tensor(3.2320e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6016e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.2501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.5909e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9055e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.6476e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5925e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6367e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.4847e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8977e-09, dtype=torch.float64)
secont condition:: tensor(1.8977e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5872e-09, dtype=torch.float64)
secont condition:: tensor(3.5872e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1001e-09, dtype=torch.float64)
secont condition:: tensor(7.1001e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3645e-09, dtype=torch.float64)
secont condition:: tensor(3.3645e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5907e-09, dtype=torch.float64)
secont condition:: tensor(3.5907e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2759e-09, dtype=torch.float64)
secont condition:: tensor(3.2759e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3509e-09, dtype=torch.float64)
secont condition:: tensor(5.3509e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4555e-09, dtype=torch.float64)
secont condition:: tensor(2.4555e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4066e-09, dtype=torch.float64)
secont condition:: tensor(5.4066e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6660e-09, dtype=torch.float64)
secont condition:: tensor(2.6660e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5703e-09, dtype=torch.float64)
secont condition:: tensor(3.5703e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1875e-09, dtype=torch.float64)
secont condition:: tensor(3.1875e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5122e-09, dtype=torch.float64)
secont condition:: tensor(3.5122e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2423e-09, dtype=torch.float64)
secont condition:: tensor(4.2423e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8220e-09, dtype=torch.float64)
secont condition:: tensor(3.8220e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2960e-09, dtype=torch.float64)
secont condition:: tensor(2.2960e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0098e-09, dtype=torch.float64)
secont condition:: tensor(3.0098e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5446e-09, dtype=torch.float64)
secont condition:: tensor(4.5446e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4035e-09, dtype=torch.float64)
secont condition:: tensor(3.4035e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7406e-09, dtype=torch.float64)
secont condition:: tensor(4.7406e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7336e-09, dtype=torch.float64)
secont condition:: tensor(3.7336e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8701e-09, dtype=torch.float64)
secont condition:: tensor(3.8701e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1730e-09, dtype=torch.float64)
secont condition:: tensor(5.1730e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7803e-09, dtype=torch.float64)
secont condition:: tensor(3.7803e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3269e-09, dtype=torch.float64)
secont condition:: tensor(4.3269e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4330e-09, dtype=torch.float64)
secont condition:: tensor(4.4330e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2137e-09, dtype=torch.float64)
secont condition:: tensor(6.2137e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2614e-09, dtype=torch.float64)
secont condition:: tensor(4.2614e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2807e-09, dtype=torch.float64)
secont condition:: tensor(4.2807e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8626e-09, dtype=torch.float64)
secont condition:: tensor(3.8626e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4287e-09, dtype=torch.float64)
secont condition:: tensor(5.4287e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6999e-09, dtype=torch.float64)
secont condition:: tensor(3.6999e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2196e-09, dtype=torch.float64)
secont condition:: tensor(3.2196e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2748e-09, dtype=torch.float64)
secont condition:: tensor(3.2748e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3762e-09, dtype=torch.float64)
secont condition:: tensor(4.3762e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8414e-09, dtype=torch.float64)
secont condition:: tensor(4.8414e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0225e-09, dtype=torch.float64)
secont condition:: tensor(8.0225e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0254e-09, dtype=torch.float64)
secont condition:: tensor(5.0254e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1192e-09, dtype=torch.float64)
secont condition:: tensor(5.1192e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6067e-09, dtype=torch.float64)
secont condition:: tensor(3.6067e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8661e-09, dtype=torch.float64)
secont condition:: tensor(7.8661e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9778e-09, dtype=torch.float64)
secont condition:: tensor(3.9778e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1895e-09, dtype=torch.float64)
secont condition:: tensor(5.1895e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6156e-09, dtype=torch.float64)
secont condition:: tensor(5.6156e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6145e-09, dtype=torch.float64)
secont condition:: tensor(9.6145e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8662e-09, dtype=torch.float64)
secont condition:: tensor(5.8662e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1515e-09, dtype=torch.float64)
secont condition:: tensor(6.1515e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1638e-09, dtype=torch.float64)
secont condition:: tensor(6.1638e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6293e-09, dtype=torch.float64)
secont condition:: tensor(5.6293e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2909e-09, dtype=torch.float64)
secont condition:: tensor(7.2909e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5660e-09, dtype=torch.float64)
secont condition:: tensor(6.5660e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0956e-09, dtype=torch.float64)
secont condition:: tensor(6.0956e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2469e-09, dtype=torch.float64)
secont condition:: tensor(8.2469e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7002e-09, dtype=torch.float64)
secont condition:: tensor(6.7002e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9279e-09, dtype=torch.float64)
secont condition:: tensor(3.9279e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0958e-09, dtype=torch.float64)
secont condition:: tensor(7.0958e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5635e-09, dtype=torch.float64)
secont condition:: tensor(5.5635e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3486e-09, dtype=torch.float64)
secont condition:: tensor(5.3486e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6590e-09, dtype=torch.float64)
secont condition:: tensor(4.6590e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8405e-09, dtype=torch.float64)
secont condition:: tensor(5.8405e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0058e-09, dtype=torch.float64)
secont condition:: tensor(9.0058e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3805e-09, dtype=torch.float64)
secont condition:: tensor(6.3805e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.0883e-09, dtype=torch.float64)
secont condition:: tensor(8.0883e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5951e-09, dtype=torch.float64)
secont condition:: tensor(6.5951e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3942e-09, dtype=torch.float64)
secont condition:: tensor(7.3942e-09, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0642e-09, dtype=torch.float64)
secont condition:: tensor(9.0642e-09, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0594e-09, dtype=torch.float64)
secont condition:: tensor(8.0594e-09, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2325e-08, dtype=torch.float64)
secont condition:: tensor(1.2325e-08, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0584e-08, dtype=torch.float64)
secont condition:: tensor(1.0584e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8522e-09, dtype=torch.float64)
secont condition:: tensor(7.8522e-09, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4902e-08, dtype=torch.float64)
secont condition:: tensor(1.4902e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4775e-08, dtype=torch.float64)
secont condition:: tensor(1.4775e-08, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7241e-08, dtype=torch.float64)
secont condition:: tensor(1.7241e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3153e-08, dtype=torch.float64)
secont condition:: tensor(1.3153e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8684e-08, dtype=torch.float64)
secont condition:: tensor(1.8684e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0597e-08, dtype=torch.float64)
secont condition:: tensor(1.0597e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5090e-08, dtype=torch.float64)
secont condition:: tensor(1.5090e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 65.0570936203003
curr_diff: 0 tensor(4.3971e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1365e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.7098e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0364e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.1355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1881e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.3147e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2258e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8701e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9793e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.3073e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.5988e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4576e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.8287e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9138e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8522e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7180e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0534e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.6396e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212576
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.169966
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.158679
Test Avg. Loss: 0.000014, Accuracy: 0.962800
Train - Epoch 3, Batch: 0, Loss: 0.157262
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.156600
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152024
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.150305
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.151992
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 8, Batch: 0, Loss: 0.148607
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.147578
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.149228
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148413
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146408
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.146491
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.142311
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 15, Batch: 0, Loss: 0.147222
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.146809
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.145259
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.148290
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.142714
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.146860
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.144151
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.143989
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 23, Batch: 0, Loss: 0.145195
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.140280
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.144903
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.143228
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.142718
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 28, Batch: 0, Loss: 0.143493
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.145371
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.140162
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 31, Batch: 0, Loss: 0.145628
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 32, Batch: 0, Loss: 0.142324
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 33, Batch: 0, Loss: 0.142726
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.147011
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.142547
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 36, Batch: 0, Loss: 0.141491
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 37, Batch: 0, Loss: 0.145377
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 38, Batch: 0, Loss: 0.138929
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.143210
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.144229
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.144880
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.142175
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.143091
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.141788
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.142434
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.140717
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.141399
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.140023
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 49, Batch: 0, Loss: 0.140221
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.143014
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.143761
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.140930
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 53, Batch: 0, Loss: 0.144755
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.142528
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 55, Batch: 0, Loss: 0.141781
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 56, Batch: 0, Loss: 0.141564
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 57, Batch: 0, Loss: 0.144416
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.140606
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 59, Batch: 0, Loss: 0.143282
Test Avg. Loss: 0.000013, Accuracy: 0.965500
training_time:: 123.72454500198364
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.29898476600647
time_baseline:: 82.43417596817017
curr_diff: 0 tensor(3.1665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5406e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4273e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8496e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9395e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4532e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7253e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6542e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3154e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965500
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6785e-09, dtype=torch.float64)
secont condition:: tensor(7.6785e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4036e-09, dtype=torch.float64)
secont condition:: tensor(2.4036e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6291e-09, dtype=torch.float64)
secont condition:: tensor(4.6291e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4685e-09, dtype=torch.float64)
secont condition:: tensor(3.4685e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4333e-09, dtype=torch.float64)
secont condition:: tensor(2.4333e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1899e-09, dtype=torch.float64)
secont condition:: tensor(4.1899e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8222e-09, dtype=torch.float64)
secont condition:: tensor(2.8222e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7429e-09, dtype=torch.float64)
secont condition:: tensor(3.7429e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4136e-09, dtype=torch.float64)
secont condition:: tensor(4.4136e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0860e-09, dtype=torch.float64)
secont condition:: tensor(4.0860e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5068e-09, dtype=torch.float64)
secont condition:: tensor(4.5068e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1949e-09, dtype=torch.float64)
secont condition:: tensor(3.1949e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4706e-09, dtype=torch.float64)
secont condition:: tensor(3.4706e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0090e-09, dtype=torch.float64)
secont condition:: tensor(3.0090e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3634e-09, dtype=torch.float64)
secont condition:: tensor(5.3634e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1318e-09, dtype=torch.float64)
secont condition:: tensor(3.1318e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6859e-09, dtype=torch.float64)
secont condition:: tensor(1.6859e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0392e-09, dtype=torch.float64)
secont condition:: tensor(3.0392e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5580e-09, dtype=torch.float64)
secont condition:: tensor(4.5580e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0129e-09, dtype=torch.float64)
secont condition:: tensor(4.0129e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6333e-09, dtype=torch.float64)
secont condition:: tensor(5.6333e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0950e-09, dtype=torch.float64)
secont condition:: tensor(4.0950e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1063e-09, dtype=torch.float64)
secont condition:: tensor(4.1063e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6897e-09, dtype=torch.float64)
secont condition:: tensor(4.6897e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5090e-09, dtype=torch.float64)
secont condition:: tensor(4.5090e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0034e-09, dtype=torch.float64)
secont condition:: tensor(5.0034e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8570e-09, dtype=torch.float64)
secont condition:: tensor(3.8570e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4300e-09, dtype=torch.float64)
secont condition:: tensor(4.4300e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0932e-09, dtype=torch.float64)
secont condition:: tensor(5.0932e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7751e-09, dtype=torch.float64)
secont condition:: tensor(3.7751e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9520e-09, dtype=torch.float64)
secont condition:: tensor(2.9520e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9230e-09, dtype=torch.float64)
secont condition:: tensor(5.9230e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9983e-09, dtype=torch.float64)
secont condition:: tensor(4.9983e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6333e-09, dtype=torch.float64)
secont condition:: tensor(4.6333e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9656e-09, dtype=torch.float64)
secont condition:: tensor(3.9656e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5732e-09, dtype=torch.float64)
secont condition:: tensor(5.5732e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3372e-09, dtype=torch.float64)
secont condition:: tensor(5.3372e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2091e-09, dtype=torch.float64)
secont condition:: tensor(5.2091e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5779e-09, dtype=torch.float64)
secont condition:: tensor(3.5779e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6796e-09, dtype=torch.float64)
secont condition:: tensor(5.6796e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2751e-09, dtype=torch.float64)
secont condition:: tensor(4.2751e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2866e-09, dtype=torch.float64)
secont condition:: tensor(5.2866e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6375e-09, dtype=torch.float64)
secont condition:: tensor(4.6375e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9129e-09, dtype=torch.float64)
secont condition:: tensor(4.9129e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5944e-09, dtype=torch.float64)
secont condition:: tensor(8.5944e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9508e-09, dtype=torch.float64)
secont condition:: tensor(5.9508e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4518e-09, dtype=torch.float64)
secont condition:: tensor(6.4518e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2880e-09, dtype=torch.float64)
secont condition:: tensor(7.2880e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3832e-09, dtype=torch.float64)
secont condition:: tensor(5.3832e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0346e-09, dtype=torch.float64)
secont condition:: tensor(7.0346e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8179e-09, dtype=torch.float64)
secont condition:: tensor(3.8179e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2324e-09, dtype=torch.float64)
secont condition:: tensor(7.2324e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8482e-09, dtype=torch.float64)
secont condition:: tensor(6.8482e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4500e-09, dtype=torch.float64)
secont condition:: tensor(5.4500e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6176e-09, dtype=torch.float64)
secont condition:: tensor(5.6176e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5398e-09, dtype=torch.float64)
secont condition:: tensor(6.5398e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5085e-09, dtype=torch.float64)
secont condition:: tensor(7.5085e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4148e-09, dtype=torch.float64)
secont condition:: tensor(6.4148e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2034e-09, dtype=torch.float64)
secont condition:: tensor(8.2034e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5256e-09, dtype=torch.float64)
secont condition:: tensor(8.5256e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3596e-09, dtype=torch.float64)
secont condition:: tensor(7.3596e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1005e-09, dtype=torch.float64)
secont condition:: tensor(7.1005e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9327e-09, dtype=torch.float64)
secont condition:: tensor(7.9327e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1269e-09, dtype=torch.float64)
secont condition:: tensor(7.1269e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8471e-09, dtype=torch.float64)
secont condition:: tensor(9.8471e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1210e-08, dtype=torch.float64)
secont condition:: tensor(1.1210e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1373e-08, dtype=torch.float64)
secont condition:: tensor(1.1373e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1896e-08, dtype=torch.float64)
secont condition:: tensor(1.1896e-08, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0657e-08, dtype=torch.float64)
secont condition:: tensor(1.0657e-08, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4430e-08, dtype=torch.float64)
secont condition:: tensor(1.4430e-08, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3822e-08, dtype=torch.float64)
secont condition:: tensor(1.3822e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3389e-08, dtype=torch.float64)
secont condition:: tensor(1.3389e-08, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3806e-08, dtype=torch.float64)
secont condition:: tensor(1.3806e-08, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2872e-08, dtype=torch.float64)
secont condition:: tensor(1.2872e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3042e-09, dtype=torch.float64)
secont condition:: tensor(9.3042e-09, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 67.09362769126892
curr_diff: 0 tensor(3.1717e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.8120e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.2073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3832e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.4884e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2213e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.4073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3946e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.4904e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.7974e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.4545e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.6166e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3279e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.8175e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8702e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9096e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9348e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214726
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.170733
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.162164
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157910
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.157662
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.153002
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.151885
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.150560
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.151638
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.150131
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.151093
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.149881
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145223
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.149002
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.147077
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.144857
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.145008
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 17, Batch: 0, Loss: 0.141548
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.144542
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.144425
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.148205
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.147076
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.144886
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.141641
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.143403
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 25, Batch: 0, Loss: 0.140584
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.144814
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.140650
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 28, Batch: 0, Loss: 0.139913
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.143821
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.144133
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 31, Batch: 0, Loss: 0.142168
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.143555
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 33, Batch: 0, Loss: 0.144361
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 34, Batch: 0, Loss: 0.139239
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.142682
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.146465
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.143221
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.144169
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 39, Batch: 0, Loss: 0.146175
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.144452
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.144449
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 42, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.141185
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.140757
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.140896
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.143616
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 47, Batch: 0, Loss: 0.142257
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.141227
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 49, Batch: 0, Loss: 0.143325
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.143684
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.142843
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.143925
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.143408
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.142538
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.144552
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.140781
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.141482
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 58, Batch: 0, Loss: 0.140535
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 59, Batch: 0, Loss: 0.144163
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.7141740322113
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.33624529838562
time_baseline:: 82.47018241882324
curr_diff: 0 tensor(2.9643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4454e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4379e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2305e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.0863e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7494e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8751e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5600e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9602e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 12
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4556e-09, dtype=torch.float64)
secont condition:: tensor(7.4556e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3335e-09, dtype=torch.float64)
secont condition:: tensor(2.3335e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2870e-09, dtype=torch.float64)
secont condition:: tensor(1.2870e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7478e-09, dtype=torch.float64)
secont condition:: tensor(3.7478e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8518e-09, dtype=torch.float64)
secont condition:: tensor(4.8518e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8439e-09, dtype=torch.float64)
secont condition:: tensor(2.8439e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4207e-09, dtype=torch.float64)
secont condition:: tensor(4.4207e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3544e-09, dtype=torch.float64)
secont condition:: tensor(3.3544e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7901e-09, dtype=torch.float64)
secont condition:: tensor(2.7901e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8010e-09, dtype=torch.float64)
secont condition:: tensor(3.8010e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6313e-09, dtype=torch.float64)
secont condition:: tensor(3.6313e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0638e-09, dtype=torch.float64)
secont condition:: tensor(3.0638e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5306e-09, dtype=torch.float64)
secont condition:: tensor(5.5306e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0065e-09, dtype=torch.float64)
secont condition:: tensor(3.0065e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7633e-09, dtype=torch.float64)
secont condition:: tensor(2.7633e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2410e-09, dtype=torch.float64)
secont condition:: tensor(3.2410e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6627e-09, dtype=torch.float64)
secont condition:: tensor(4.6627e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7852e-09, dtype=torch.float64)
secont condition:: tensor(3.7852e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4968e-09, dtype=torch.float64)
secont condition:: tensor(3.4968e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8172e-09, dtype=torch.float64)
secont condition:: tensor(3.8172e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1202e-09, dtype=torch.float64)
secont condition:: tensor(4.1202e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9796e-09, dtype=torch.float64)
secont condition:: tensor(2.9796e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0614e-09, dtype=torch.float64)
secont condition:: tensor(4.0614e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8637e-09, dtype=torch.float64)
secont condition:: tensor(4.8637e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2698e-09, dtype=torch.float64)
secont condition:: tensor(4.2698e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7820e-09, dtype=torch.float64)
secont condition:: tensor(3.7820e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8548e-09, dtype=torch.float64)
secont condition:: tensor(3.8548e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4321e-09, dtype=torch.float64)
secont condition:: tensor(4.4321e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2712e-09, dtype=torch.float64)
secont condition:: tensor(6.2712e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6950e-09, dtype=torch.float64)
secont condition:: tensor(4.6950e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1578e-09, dtype=torch.float64)
secont condition:: tensor(4.1578e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8915e-09, dtype=torch.float64)
secont condition:: tensor(4.8915e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7518e-09, dtype=torch.float64)
secont condition:: tensor(6.7518e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4765e-09, dtype=torch.float64)
secont condition:: tensor(4.4765e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9124e-09, dtype=torch.float64)
secont condition:: tensor(6.9124e-09, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4778e-09, dtype=torch.float64)
secont condition:: tensor(4.4778e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1806e-09, dtype=torch.float64)
secont condition:: tensor(5.1806e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1173e-09, dtype=torch.float64)
secont condition:: tensor(5.1173e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5995e-09, dtype=torch.float64)
secont condition:: tensor(6.5995e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9778e-09, dtype=torch.float64)
secont condition:: tensor(4.9778e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9844e-09, dtype=torch.float64)
secont condition:: tensor(3.9844e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4840e-09, dtype=torch.float64)
secont condition:: tensor(6.4840e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3643e-09, dtype=torch.float64)
secont condition:: tensor(6.3643e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5071e-09, dtype=torch.float64)
secont condition:: tensor(5.5071e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6097e-09, dtype=torch.float64)
secont condition:: tensor(5.6097e-09, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2757e-09, dtype=torch.float64)
secont condition:: tensor(4.2757e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1109e-09, dtype=torch.float64)
secont condition:: tensor(6.1109e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7462e-09, dtype=torch.float64)
secont condition:: tensor(6.7462e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8673e-09, dtype=torch.float64)
secont condition:: tensor(4.8673e-09, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9835e-09, dtype=torch.float64)
secont condition:: tensor(4.9835e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1832e-09, dtype=torch.float64)
secont condition:: tensor(6.1832e-09, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2402e-09, dtype=torch.float64)
secont condition:: tensor(6.2402e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3940e-09, dtype=torch.float64)
secont condition:: tensor(3.3940e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5147e-09, dtype=torch.float64)
secont condition:: tensor(7.5147e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5387e-09, dtype=torch.float64)
secont condition:: tensor(7.5387e-09, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7316e-09, dtype=torch.float64)
secont condition:: tensor(5.7316e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0869e-09, dtype=torch.float64)
secont condition:: tensor(7.0869e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5685e-09, dtype=torch.float64)
secont condition:: tensor(5.5685e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8117e-09, dtype=torch.float64)
secont condition:: tensor(7.8117e-09, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6968e-09, dtype=torch.float64)
secont condition:: tensor(7.6968e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0308e-09, dtype=torch.float64)
secont condition:: tensor(9.0308e-09, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1745e-09, dtype=torch.float64)
secont condition:: tensor(5.1745e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9184e-09, dtype=torch.float64)
secont condition:: tensor(7.9184e-09, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0518e-09, dtype=torch.float64)
secont condition:: tensor(7.0518e-09, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0734e-09, dtype=torch.float64)
secont condition:: tensor(9.0734e-09, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5987e-09, dtype=torch.float64)
secont condition:: tensor(8.5987e-09, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0340e-08, dtype=torch.float64)
secont condition:: tensor(1.0340e-08, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0142e-08, dtype=torch.float64)
secont condition:: tensor(1.0142e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1239e-09, dtype=torch.float64)
secont condition:: tensor(9.1239e-09, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0575e-08, dtype=torch.float64)
secont condition:: tensor(1.0575e-08, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0126e-08, dtype=torch.float64)
secont condition:: tensor(1.0126e-08, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0410e-08, dtype=torch.float64)
secont condition:: tensor(1.0410e-08, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5101e-08, dtype=torch.float64)
secont condition:: tensor(1.5101e-08, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 67.8510959148407
curr_diff: 0 tensor(2.7961e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3621e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.6879e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4354e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.2668e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1183e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7731e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9436e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.3523e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.7322e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.0260e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3295e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.1299e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9387e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8514e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8229e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7628e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.217336
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 1, Batch: 0, Loss: 0.161510
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.153801
Test Avg. Loss: 0.000014, Accuracy: 0.964400
Train - Epoch 3, Batch: 0, Loss: 0.151087
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.151159
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.149540
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 6, Batch: 0, Loss: 0.146770
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.148544
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.144150
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.146397
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 10, Batch: 0, Loss: 0.143222
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 11, Batch: 0, Loss: 0.146466
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 12, Batch: 0, Loss: 0.141771
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 13, Batch: 0, Loss: 0.147545
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 14, Batch: 0, Loss: 0.140747
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 15, Batch: 0, Loss: 0.147151
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 16, Batch: 0, Loss: 0.140648
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.141873
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 18, Batch: 0, Loss: 0.142407
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 19, Batch: 0, Loss: 0.144100
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 20, Batch: 0, Loss: 0.145309
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 21, Batch: 0, Loss: 0.145043
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 22, Batch: 0, Loss: 0.143323
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 23, Batch: 0, Loss: 0.139808
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.145347
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 25, Batch: 0, Loss: 0.149108
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 26, Batch: 0, Loss: 0.142628
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 27, Batch: 0, Loss: 0.141126
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 28, Batch: 0, Loss: 0.144114
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 29, Batch: 0, Loss: 0.142905
Test Avg. Loss: 0.000013, Accuracy: 0.966100
Train - Epoch 30, Batch: 0, Loss: 0.141859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 31, Batch: 0, Loss: 0.142868
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 65.96743321418762
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.28374934196472
time_baseline:: 44.35571360588074
curr_diff: 0 tensor(3.1677e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2864e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.8418e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1995e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.6139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2246e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0457e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1163e-10, dtype=torch.float64)
secont condition:: tensor(1.1163e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.8494e-09, dtype=torch.float64)
secont condition:: tensor(1.8494e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1743e-09, dtype=torch.float64)
secont condition:: tensor(5.1743e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5250e-09, dtype=torch.float64)
secont condition:: tensor(3.5250e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8220e-09, dtype=torch.float64)
secont condition:: tensor(1.8220e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8475e-09, dtype=torch.float64)
secont condition:: tensor(1.8475e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3360e-09, dtype=torch.float64)
secont condition:: tensor(2.3360e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6131e-09, dtype=torch.float64)
secont condition:: tensor(8.6131e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9846e-09, dtype=torch.float64)
secont condition:: tensor(5.9846e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5685e-10, dtype=torch.float64)
secont condition:: tensor(9.5685e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.5911e-09, dtype=torch.float64)
secont condition:: tensor(4.5911e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3770e-09, dtype=torch.float64)
secont condition:: tensor(7.3770e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4707e-09, dtype=torch.float64)
secont condition:: tensor(7.4707e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6854e-09, dtype=torch.float64)
secont condition:: tensor(5.6854e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6458e-10, dtype=torch.float64)
secont condition:: tensor(8.6458e-10, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4077e-09, dtype=torch.float64)
secont condition:: tensor(4.4077e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0535e-09, dtype=torch.float64)
secont condition:: tensor(7.0535e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.6812e-09, dtype=torch.float64)
secont condition:: tensor(7.6812e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1675e-09, dtype=torch.float64)
secont condition:: tensor(6.1675e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3998e-09, dtype=torch.float64)
secont condition:: tensor(3.3998e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8698e-09, dtype=torch.float64)
secont condition:: tensor(4.8698e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2832e-09, dtype=torch.float64)
secont condition:: tensor(4.2832e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7710e-09, dtype=torch.float64)
secont condition:: tensor(1.7710e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2347e-09, dtype=torch.float64)
secont condition:: tensor(6.2347e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1161e-09, dtype=torch.float64)
secont condition:: tensor(5.1161e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9710e-09, dtype=torch.float64)
secont condition:: tensor(6.9710e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3233e-09, dtype=torch.float64)
secont condition:: tensor(4.3233e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8771e-09, dtype=torch.float64)
secont condition:: tensor(8.8771e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4319e-09, dtype=torch.float64)
secont condition:: tensor(6.4319e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2838e-09, dtype=torch.float64)
secont condition:: tensor(6.2838e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5424e-09, dtype=torch.float64)
secont condition:: tensor(6.5424e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4507e-09, dtype=torch.float64)
secont condition:: tensor(7.4507e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1596e-09, dtype=torch.float64)
secont condition:: tensor(6.1596e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9590e-09, dtype=torch.float64)
secont condition:: tensor(3.9590e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0957e-09, dtype=torch.float64)
secont condition:: tensor(3.0957e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5717e-09, dtype=torch.float64)
secont condition:: tensor(9.5717e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2584e-08, dtype=torch.float64)
secont condition:: tensor(1.2584e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1912e-09, dtype=torch.float64)
secont condition:: tensor(7.1912e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3515e-09, dtype=torch.float64)
secont condition:: tensor(6.3515e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4107e-09, dtype=torch.float64)
secont condition:: tensor(8.4107e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8623e-09, dtype=torch.float64)
secont condition:: tensor(2.8623e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2862e-09, dtype=torch.float64)
secont condition:: tensor(3.2862e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1703e-10, dtype=torch.float64)
secont condition:: tensor(7.1703e-10, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7981e-09, dtype=torch.float64)
secont condition:: tensor(6.7981e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0608e-09, dtype=torch.float64)
secont condition:: tensor(6.0608e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2711e-08, dtype=torch.float64)
secont condition:: tensor(1.2711e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7110e-09, dtype=torch.float64)
secont condition:: tensor(8.7110e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4157e-09, dtype=torch.float64)
secont condition:: tensor(8.4157e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2989e-09, dtype=torch.float64)
secont condition:: tensor(5.2989e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0755e-09, dtype=torch.float64)
secont condition:: tensor(3.0755e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.8322e-09, dtype=torch.float64)
secont condition:: tensor(9.8322e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6221e-09, dtype=torch.float64)
secont condition:: tensor(8.6221e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1771e-08, dtype=torch.float64)
secont condition:: tensor(1.1771e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6584e-09, dtype=torch.float64)
secont condition:: tensor(8.6584e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7038e-09, dtype=torch.float64)
secont condition:: tensor(5.7038e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3054e-09, dtype=torch.float64)
secont condition:: tensor(7.3054e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5998e-09, dtype=torch.float64)
secont condition:: tensor(5.5998e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3514e-09, dtype=torch.float64)
secont condition:: tensor(6.3514e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0251e-09, dtype=torch.float64)
secont condition:: tensor(6.0251e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1281e-08, dtype=torch.float64)
secont condition:: tensor(1.1281e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1216e-09, dtype=torch.float64)
secont condition:: tensor(9.1216e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0060e-08, dtype=torch.float64)
secont condition:: tensor(1.0060e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9023e-09, dtype=torch.float64)
secont condition:: tensor(6.9023e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1246e-08, dtype=torch.float64)
secont condition:: tensor(1.1246e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3742e-08, dtype=torch.float64)
secont condition:: tensor(1.3742e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.4095e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2254e-09, dtype=torch.float64)
secont condition:: tensor(8.2254e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3541e-08, dtype=torch.float64)
secont condition:: tensor(1.3541e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4998e-08, dtype=torch.float64)
secont condition:: tensor(1.4998e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2214e-08, dtype=torch.float64)
secont condition:: tensor(1.2214e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5411e-09, dtype=torch.float64)
secont condition:: tensor(5.5411e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2633e-08, dtype=torch.float64)
secont condition:: tensor(3.2633e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6155e-09, dtype=torch.float64)
secont condition:: tensor(8.6155e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7095e-08, dtype=torch.float64)
secont condition:: tensor(1.7095e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3676e-08, dtype=torch.float64)
secont condition:: tensor(1.3676e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 39.91334533691406
curr_diff: 0 tensor(4.5789e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4799e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.4266e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3209e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.7483e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6703e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.1256e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.1249e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.4352e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0574e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1496e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8419e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.6117e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0951e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216384
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 1, Batch: 0, Loss: 0.159873
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.148152
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.149809
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 4, Batch: 0, Loss: 0.151813
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.147787
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.140496
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.150910
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 8, Batch: 0, Loss: 0.138417
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 9, Batch: 0, Loss: 0.146497
Test Avg. Loss: 0.000013, Accuracy: 0.963100
Train - Epoch 10, Batch: 0, Loss: 0.144955
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 11, Batch: 0, Loss: 0.149206
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.144052
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 13, Batch: 0, Loss: 0.143291
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 14, Batch: 0, Loss: 0.143083
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.141196
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.138110
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 17, Batch: 0, Loss: 0.140070
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.141331
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 19, Batch: 0, Loss: 0.135346
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 20, Batch: 0, Loss: 0.139553
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 21, Batch: 0, Loss: 0.147434
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 22, Batch: 0, Loss: 0.146267
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 23, Batch: 0, Loss: 0.143161
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 24, Batch: 0, Loss: 0.143855
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 25, Batch: 0, Loss: 0.136410
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 26, Batch: 0, Loss: 0.140027
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 27, Batch: 0, Loss: 0.141099
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 28, Batch: 0, Loss: 0.141178
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 29, Batch: 0, Loss: 0.137506
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 30, Batch: 0, Loss: 0.143136
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 31, Batch: 0, Loss: 0.136951
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 65.93673014640808
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.291175842285156
time_baseline:: 44.362462282180786
curr_diff: 0 tensor(3.0491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2845e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.7750e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1377e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.7131e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9389e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.7031e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1944e-10, dtype=torch.float64)
secont condition:: tensor(6.1944e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.2031e-09, dtype=torch.float64)
secont condition:: tensor(2.2031e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0181e-09, dtype=torch.float64)
secont condition:: tensor(6.0181e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5218e-09, dtype=torch.float64)
secont condition:: tensor(2.5218e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2024e-09, dtype=torch.float64)
secont condition:: tensor(1.2024e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7177e-09, dtype=torch.float64)
secont condition:: tensor(2.7177e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2952e-09, dtype=torch.float64)
secont condition:: tensor(4.2952e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9366e-09, dtype=torch.float64)
secont condition:: tensor(2.9366e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1420e-09, dtype=torch.float64)
secont condition:: tensor(6.1420e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0690e-09, dtype=torch.float64)
secont condition:: tensor(5.0690e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2053e-09, dtype=torch.float64)
secont condition:: tensor(3.2053e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5938e-09, dtype=torch.float64)
secont condition:: tensor(2.5938e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1314e-09, dtype=torch.float64)
secont condition:: tensor(2.1314e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0587e-09, dtype=torch.float64)
secont condition:: tensor(4.0587e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8296e-09, dtype=torch.float64)
secont condition:: tensor(5.8296e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1505e-09, dtype=torch.float64)
secont condition:: tensor(3.1505e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5338e-09, dtype=torch.float64)
secont condition:: tensor(2.5338e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1817e-09, dtype=torch.float64)
secont condition:: tensor(2.1817e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7440e-09, dtype=torch.float64)
secont condition:: tensor(4.7440e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8907e-09, dtype=torch.float64)
secont condition:: tensor(4.8907e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2276e-09, dtype=torch.float64)
secont condition:: tensor(4.2276e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6470e-09, dtype=torch.float64)
secont condition:: tensor(1.6470e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0838e-09, dtype=torch.float64)
secont condition:: tensor(4.0838e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9940e-09, dtype=torch.float64)
secont condition:: tensor(6.9940e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7750e-09, dtype=torch.float64)
secont condition:: tensor(8.7750e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9631e-09, dtype=torch.float64)
secont condition:: tensor(5.9631e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8813e-09, dtype=torch.float64)
secont condition:: tensor(6.8813e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4003e-09, dtype=torch.float64)
secont condition:: tensor(3.4003e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9981e-09, dtype=torch.float64)
secont condition:: tensor(2.9981e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0424e-09, dtype=torch.float64)
secont condition:: tensor(3.0424e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7235e-09, dtype=torch.float64)
secont condition:: tensor(5.7235e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2499e-09, dtype=torch.float64)
secont condition:: tensor(5.2499e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2820e-09, dtype=torch.float64)
secont condition:: tensor(7.2820e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7198e-09, dtype=torch.float64)
secont condition:: tensor(3.7198e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6117e-09, dtype=torch.float64)
secont condition:: tensor(3.6117e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7722e-09, dtype=torch.float64)
secont condition:: tensor(6.7722e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2071e-08, dtype=torch.float64)
secont condition:: tensor(1.2071e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9079e-09, dtype=torch.float64)
secont condition:: tensor(6.9079e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3771e-09, dtype=torch.float64)
secont condition:: tensor(3.3771e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6935e-09, dtype=torch.float64)
secont condition:: tensor(3.6935e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8319e-09, dtype=torch.float64)
secont condition:: tensor(5.8319e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9487e-09, dtype=torch.float64)
secont condition:: tensor(8.9487e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0736e-09, dtype=torch.float64)
secont condition:: tensor(1.0736e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9692e-09, dtype=torch.float64)
secont condition:: tensor(3.9692e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4546e-09, dtype=torch.float64)
secont condition:: tensor(4.4546e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2195e-09, dtype=torch.float64)
secont condition:: tensor(6.2195e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5572e-09, dtype=torch.float64)
secont condition:: tensor(3.5572e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7866e-09, dtype=torch.float64)
secont condition:: tensor(7.7866e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6813e-09, dtype=torch.float64)
secont condition:: tensor(3.6813e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9553e-09, dtype=torch.float64)
secont condition:: tensor(5.9553e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1062e-08, dtype=torch.float64)
secont condition:: tensor(1.1062e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2495e-09, dtype=torch.float64)
secont condition:: tensor(7.2495e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0166e-08, dtype=torch.float64)
secont condition:: tensor(1.0166e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0680e-08, dtype=torch.float64)
secont condition:: tensor(1.0680e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6335e-06, dtype=torch.float64)
secont condition:: tensor(1.6335e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.9346e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9295e-09, dtype=torch.float64)
secont condition:: tensor(6.9295e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0967e-08, dtype=torch.float64)
secont condition:: tensor(1.0967e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7648e-09, dtype=torch.float64)
secont condition:: tensor(8.7648e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7625e-09, dtype=torch.float64)
secont condition:: tensor(5.7625e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2656e-09, dtype=torch.float64)
secont condition:: tensor(8.2656e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3866e-09, dtype=torch.float64)
secont condition:: tensor(5.3866e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6864e-09, dtype=torch.float64)
secont condition:: tensor(4.6864e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0057e-08, dtype=torch.float64)
secont condition:: tensor(1.0057e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1794e-09, dtype=torch.float64)
secont condition:: tensor(9.1794e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4596e-09, dtype=torch.float64)
secont condition:: tensor(7.4596e-09, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2509e-09, dtype=torch.float64)
secont condition:: tensor(8.2509e-09, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1210e-08, dtype=torch.float64)
secont condition:: tensor(1.1210e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9332e-08, dtype=torch.float64)
secont condition:: tensor(1.9332e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8481e-08, dtype=torch.float64)
secont condition:: tensor(1.8481e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1119e-08, dtype=torch.float64)
secont condition:: tensor(1.1119e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6709e-08, dtype=torch.float64)
secont condition:: tensor(1.6709e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 40.21197581291199
curr_diff: 0 tensor(4.0054e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9964e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(3.0450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1697e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(7.5990e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8396e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.5607e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1164e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0731e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.0473e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(8.6579e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.1830e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3546e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3209e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3483e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9647e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.4236e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5169e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218376
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.156240
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.152469
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.152010
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.151831
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.146395
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 6, Batch: 0, Loss: 0.145828
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 7, Batch: 0, Loss: 0.147090
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 8, Batch: 0, Loss: 0.144650
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.145094
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.144456
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 11, Batch: 0, Loss: 0.139238
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.146470
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 13, Batch: 0, Loss: 0.142591
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 14, Batch: 0, Loss: 0.134635
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 15, Batch: 0, Loss: 0.144789
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 16, Batch: 0, Loss: 0.146430
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 17, Batch: 0, Loss: 0.146969
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 18, Batch: 0, Loss: 0.141826
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.147571
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.137169
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 21, Batch: 0, Loss: 0.145043
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 22, Batch: 0, Loss: 0.143511
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 23, Batch: 0, Loss: 0.148782
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 24, Batch: 0, Loss: 0.139730
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.146987
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 26, Batch: 0, Loss: 0.137740
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 27, Batch: 0, Loss: 0.142506
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 28, Batch: 0, Loss: 0.142009
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 29, Batch: 0, Loss: 0.148155
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 30, Batch: 0, Loss: 0.139031
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 31, Batch: 0, Loss: 0.149859
Test Avg. Loss: 0.000013, Accuracy: 0.965800
training_time:: 66.14598155021667
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.29135704040527
time_baseline:: 44.361955881118774
curr_diff: 0 tensor(3.4783e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1642e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.0747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.9102e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4234e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.4107e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6985e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.8577e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6614e-08, dtype=torch.float64)
secont condition:: tensor(1.6614e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3565e-09, dtype=torch.float64)
secont condition:: tensor(7.3565e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7385e-09, dtype=torch.float64)
secont condition:: tensor(4.7385e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7516e-09, dtype=torch.float64)
secont condition:: tensor(2.7516e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2975e-09, dtype=torch.float64)
secont condition:: tensor(1.2975e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4427e-09, dtype=torch.float64)
secont condition:: tensor(1.4427e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3283e-09, dtype=torch.float64)
secont condition:: tensor(3.3283e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5463e-09, dtype=torch.float64)
secont condition:: tensor(6.5463e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0691e-08, dtype=torch.float64)
secont condition:: tensor(1.0691e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3002e-09, dtype=torch.float64)
secont condition:: tensor(6.3002e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6959e-09, dtype=torch.float64)
secont condition:: tensor(3.6959e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1054e-09, dtype=torch.float64)
secont condition:: tensor(3.1054e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5923e-09, dtype=torch.float64)
secont condition:: tensor(1.5923e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0323e-09, dtype=torch.float64)
secont condition:: tensor(6.0323e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9025e-09, dtype=torch.float64)
secont condition:: tensor(4.9025e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1377e-09, dtype=torch.float64)
secont condition:: tensor(3.1377e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7991e-09, dtype=torch.float64)
secont condition:: tensor(5.7991e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2189e-09, dtype=torch.float64)
secont condition:: tensor(6.2189e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5961e-09, dtype=torch.float64)
secont condition:: tensor(3.5961e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9017e-09, dtype=torch.float64)
secont condition:: tensor(1.9017e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0743e-09, dtype=torch.float64)
secont condition:: tensor(3.0743e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1746e-09, dtype=torch.float64)
secont condition:: tensor(4.1746e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7030e-09, dtype=torch.float64)
secont condition:: tensor(4.7030e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4230e-09, dtype=torch.float64)
secont condition:: tensor(1.4230e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7451e-09, dtype=torch.float64)
secont condition:: tensor(2.7451e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9002e-09, dtype=torch.float64)
secont condition:: tensor(5.9002e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2834e-09, dtype=torch.float64)
secont condition:: tensor(8.2834e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3369e-09, dtype=torch.float64)
secont condition:: tensor(3.3369e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7408e-09, dtype=torch.float64)
secont condition:: tensor(6.7408e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6804e-09, dtype=torch.float64)
secont condition:: tensor(6.6804e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4788e-09, dtype=torch.float64)
secont condition:: tensor(4.4788e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4792e-09, dtype=torch.float64)
secont condition:: tensor(1.4792e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8519e-09, dtype=torch.float64)
secont condition:: tensor(4.8519e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2622e-09, dtype=torch.float64)
secont condition:: tensor(4.2622e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9201e-09, dtype=torch.float64)
secont condition:: tensor(5.9201e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7000e-06, dtype=torch.float64)
secont condition:: tensor(3.7000e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6974e-09, dtype=torch.float64)
secont condition:: tensor(4.6974e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3153e-09, dtype=torch.float64)
secont condition:: tensor(5.3153e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0078e-08, dtype=torch.float64)
secont condition:: tensor(1.0078e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2159e-09, dtype=torch.float64)
secont condition:: tensor(6.2159e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6794e-09, dtype=torch.float64)
secont condition:: tensor(4.6794e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4172e-09, dtype=torch.float64)
secont condition:: tensor(5.4172e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5690e-09, dtype=torch.float64)
secont condition:: tensor(8.5690e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4594e-09, dtype=torch.float64)
secont condition:: tensor(8.4594e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0525e-08, dtype=torch.float64)
secont condition:: tensor(1.0525e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1115e-09, dtype=torch.float64)
secont condition:: tensor(8.1115e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3875e-09, dtype=torch.float64)
secont condition:: tensor(5.3875e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3939e-09, dtype=torch.float64)
secont condition:: tensor(7.3939e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.8653e-09, dtype=torch.float64)
secont condition:: tensor(5.8653e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1221e-09, dtype=torch.float64)
secont condition:: tensor(3.1221e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9559e-09, dtype=torch.float64)
secont condition:: tensor(6.9559e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1221e-08, dtype=torch.float64)
secont condition:: tensor(1.1221e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9930e-09, dtype=torch.float64)
secont condition:: tensor(9.9930e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9764e-09, dtype=torch.float64)
secont condition:: tensor(8.9764e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7422e-07, dtype=torch.float64)
secont condition:: tensor(2.7422e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1544e-09, dtype=torch.float64)
secont condition:: tensor(9.1544e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1755e-08, dtype=torch.float64)
secont condition:: tensor(1.1755e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8386e-06, dtype=torch.float64)
secont condition:: tensor(3.8386e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5651e-09, dtype=torch.float64)
secont condition:: tensor(8.5651e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0960e-09, dtype=torch.float64)
secont condition:: tensor(3.0960e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7303e-09, dtype=torch.float64)
secont condition:: tensor(5.7303e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8139e-09, dtype=torch.float64)
secont condition:: tensor(6.8139e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1655e-08, dtype=torch.float64)
secont condition:: tensor(1.1655e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1135e-09, dtype=torch.float64)
secont condition:: tensor(6.1135e-09, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1761e-08, dtype=torch.float64)
secont condition:: tensor(1.1761e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1344e-08, dtype=torch.float64)
secont condition:: tensor(1.1344e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0870e-08, dtype=torch.float64)
secont condition:: tensor(1.0870e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4222e-09, dtype=torch.float64)
secont condition:: tensor(8.4222e-09, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7169e-08, dtype=torch.float64)
secont condition:: tensor(1.7169e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1871e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8095e-08, dtype=torch.float64)
secont condition:: tensor(2.8095e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 40.87103748321533
curr_diff: 0 tensor(2.9675e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0471e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.7907e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.5086e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.5930e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4138e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.3528e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2176e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.1124e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.6193e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.7765e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.5347e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1605e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.6477e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3770e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5971e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9926e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.8555e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213696
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 1, Batch: 0, Loss: 0.165629
Test Avg. Loss: 0.000014, Accuracy: 0.963300
Train - Epoch 2, Batch: 0, Loss: 0.146971
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.148758
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.143379
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.146637
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.147807
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 7, Batch: 0, Loss: 0.142988
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 8, Batch: 0, Loss: 0.146789
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 9, Batch: 0, Loss: 0.144212
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 10, Batch: 0, Loss: 0.146452
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.148514
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.148052
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 13, Batch: 0, Loss: 0.143752
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.147098
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.141063
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 16, Batch: 0, Loss: 0.140216
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 17, Batch: 0, Loss: 0.147809
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.145989
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 19, Batch: 0, Loss: 0.141235
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.147088
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.138128
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 22, Batch: 0, Loss: 0.143907
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 23, Batch: 0, Loss: 0.141125
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 24, Batch: 0, Loss: 0.141937
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 25, Batch: 0, Loss: 0.145513
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.138485
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 27, Batch: 0, Loss: 0.136280
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 28, Batch: 0, Loss: 0.140679
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 29, Batch: 0, Loss: 0.140316
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.144101
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 31, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.965700
training_time:: 65.85156917572021
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.30322742462158
time_baseline:: 44.37545680999756
curr_diff: 0 tensor(2.8401e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8449e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0879e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.4845e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.5819e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6032e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7972e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0774e-08, dtype=torch.float64)
secont condition:: tensor(2.0774e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2056e-09, dtype=torch.float64)
secont condition:: tensor(6.2056e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7912e-09, dtype=torch.float64)
secont condition:: tensor(2.7912e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6756e-09, dtype=torch.float64)
secont condition:: tensor(5.6756e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8042e-09, dtype=torch.float64)
secont condition:: tensor(7.8042e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.9977e-09, dtype=torch.float64)
secont condition:: tensor(7.9977e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1868e-09, dtype=torch.float64)
secont condition:: tensor(4.1868e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5301e-09, dtype=torch.float64)
secont condition:: tensor(2.5301e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8787e-09, dtype=torch.float64)
secont condition:: tensor(1.8787e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4759e-09, dtype=torch.float64)
secont condition:: tensor(6.4759e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1414e-09, dtype=torch.float64)
secont condition:: tensor(4.1414e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0304e-09, dtype=torch.float64)
secont condition:: tensor(2.0304e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1569e-09, dtype=torch.float64)
secont condition:: tensor(2.1569e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1783e-09, dtype=torch.float64)
secont condition:: tensor(4.1783e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1195e-09, dtype=torch.float64)
secont condition:: tensor(4.1195e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1180e-09, dtype=torch.float64)
secont condition:: tensor(3.1180e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5308e-09, dtype=torch.float64)
secont condition:: tensor(7.5308e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2511e-09, dtype=torch.float64)
secont condition:: tensor(7.2511e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3537e-09, dtype=torch.float64)
secont condition:: tensor(3.3537e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8380e-09, dtype=torch.float64)
secont condition:: tensor(3.8380e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3640e-09, dtype=torch.float64)
secont condition:: tensor(3.3640e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8115e-09, dtype=torch.float64)
secont condition:: tensor(4.8115e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1204e-09, dtype=torch.float64)
secont condition:: tensor(4.1204e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4527e-09, dtype=torch.float64)
secont condition:: tensor(3.4527e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0103e-09, dtype=torch.float64)
secont condition:: tensor(2.0103e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3447e-09, dtype=torch.float64)
secont condition:: tensor(6.3447e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5241e-09, dtype=torch.float64)
secont condition:: tensor(3.5241e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5385e-09, dtype=torch.float64)
secont condition:: tensor(4.5385e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3199e-09, dtype=torch.float64)
secont condition:: tensor(3.3199e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4772e-09, dtype=torch.float64)
secont condition:: tensor(4.4772e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8991e-09, dtype=torch.float64)
secont condition:: tensor(4.8991e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7386e-09, dtype=torch.float64)
secont condition:: tensor(5.7386e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7391e-09, dtype=torch.float64)
secont condition:: tensor(5.7391e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4010e-09, dtype=torch.float64)
secont condition:: tensor(7.4010e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.9772e-09, dtype=torch.float64)
secont condition:: tensor(3.9772e-09, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2485e-09, dtype=torch.float64)
secont condition:: tensor(3.2485e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2422e-09, dtype=torch.float64)
secont condition:: tensor(4.2422e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3122e-09, dtype=torch.float64)
secont condition:: tensor(4.3122e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8960e-09, dtype=torch.float64)
secont condition:: tensor(4.8960e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9355e-09, dtype=torch.float64)
secont condition:: tensor(4.9355e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.3079e-09, dtype=torch.float64)
secont condition:: tensor(6.3079e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0785e-09, dtype=torch.float64)
secont condition:: tensor(7.0785e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.7642e-09, dtype=torch.float64)
secont condition:: tensor(6.7642e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5985e-09, dtype=torch.float64)
secont condition:: tensor(6.5985e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1985e-09, dtype=torch.float64)
secont condition:: tensor(5.1985e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1871e-09, dtype=torch.float64)
secont condition:: tensor(7.1871e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2022e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1135e-09, dtype=torch.float64)
secont condition:: tensor(7.1135e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.6282e-09, dtype=torch.float64)
secont condition:: tensor(6.6282e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1409e-08, dtype=torch.float64)
secont condition:: tensor(1.1409e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7444e-09, dtype=torch.float64)
secont condition:: tensor(8.7444e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2389e-09, dtype=torch.float64)
secont condition:: tensor(7.2389e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7167e-09, dtype=torch.float64)
secont condition:: tensor(5.7167e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5716e-09, dtype=torch.float64)
secont condition:: tensor(1.5716e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4214e-09, dtype=torch.float64)
secont condition:: tensor(8.4214e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7793e-09, dtype=torch.float64)
secont condition:: tensor(5.7793e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5291e-08, dtype=torch.float64)
secont condition:: tensor(1.5291e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4787e-09, dtype=torch.float64)
secont condition:: tensor(1.4787e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2326e-09, dtype=torch.float64)
secont condition:: tensor(8.2326e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1769e-09, dtype=torch.float64)
secont condition:: tensor(6.1769e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0811e-08, dtype=torch.float64)
secont condition:: tensor(2.0811e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7684e-06, dtype=torch.float64)
secont condition:: tensor(3.7684e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.0545e-09, dtype=torch.float64)
secont condition:: tensor(9.0545e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.1123e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0884e-08, dtype=torch.float64)
secont condition:: tensor(1.0884e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7170e-08, dtype=torch.float64)
secont condition:: tensor(1.7170e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3095e-08, dtype=torch.float64)
secont condition:: tensor(1.3095e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7587e-09, dtype=torch.float64)
secont condition:: tensor(8.7587e-09, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9224e-08, dtype=torch.float64)
secont condition:: tensor(3.9224e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8165e-09, dtype=torch.float64)
secont condition:: tensor(7.8165e-09, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5875e-08, dtype=torch.float64)
secont condition:: tensor(1.5875e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0103e-08, dtype=torch.float64)
secont condition:: tensor(2.0103e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 40.74322152137756
curr_diff: 0 tensor(4.5875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3705e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(2.9549e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1270e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.3465e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2048e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.4967e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3978e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.5435e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1628e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(6.6617e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.9823e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.4170e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3958e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8970e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9869e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.1209e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.219276
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.163906
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.159228
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.148035
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 4, Batch: 0, Loss: 0.151154
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.149636
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.143947
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.143232
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 8, Batch: 0, Loss: 0.142397
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.141010
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.141238
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.144604
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 12, Batch: 0, Loss: 0.142185
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 13, Batch: 0, Loss: 0.144458
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 14, Batch: 0, Loss: 0.147167
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.148016
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 16, Batch: 0, Loss: 0.140541
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 17, Batch: 0, Loss: 0.143437
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 18, Batch: 0, Loss: 0.139953
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.139001
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 20, Batch: 0, Loss: 0.145633
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 21, Batch: 0, Loss: 0.141230
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 22, Batch: 0, Loss: 0.141629
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 23, Batch: 0, Loss: 0.147075
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.143709
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 25, Batch: 0, Loss: 0.141919
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 26, Batch: 0, Loss: 0.143025
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 27, Batch: 0, Loss: 0.142203
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 28, Batch: 0, Loss: 0.140088
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 29, Batch: 0, Loss: 0.146477
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.135736
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 31, Batch: 0, Loss: 0.143245
Test Avg. Loss: 0.000013, Accuracy: 0.965700
training_time:: 66.0547342300415
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.33360934257507
time_baseline:: 44.40814805030823
curr_diff: 0 tensor(3.4185e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.2337e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.5898e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3577e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.3804e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.7080e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2399e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 12
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-2.0686e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.6058e-09, dtype=torch.float64)
secont condition:: tensor(2.6058e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5879e-09, dtype=torch.float64)
secont condition:: tensor(1.5879e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3741e-09, dtype=torch.float64)
secont condition:: tensor(6.3741e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5248e-09, dtype=torch.float64)
secont condition:: tensor(5.5248e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2895e-09, dtype=torch.float64)
secont condition:: tensor(7.2895e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0431e-09, dtype=torch.float64)
secont condition:: tensor(5.0431e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2385e-09, dtype=torch.float64)
secont condition:: tensor(3.2385e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7654e-09, dtype=torch.float64)
secont condition:: tensor(2.7654e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6276e-09, dtype=torch.float64)
secont condition:: tensor(2.6276e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7271e-09, dtype=torch.float64)
secont condition:: tensor(2.7271e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5088e-09, dtype=torch.float64)
secont condition:: tensor(6.5088e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8908e-09, dtype=torch.float64)
secont condition:: tensor(3.8908e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7414e-09, dtype=torch.float64)
secont condition:: tensor(3.7414e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1133e-09, dtype=torch.float64)
secont condition:: tensor(4.1133e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6396e-09, dtype=torch.float64)
secont condition:: tensor(5.6396e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1080e-09, dtype=torch.float64)
secont condition:: tensor(4.1080e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7081e-09, dtype=torch.float64)
secont condition:: tensor(3.7081e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2062e-09, dtype=torch.float64)
secont condition:: tensor(5.2062e-09, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3315e-09, dtype=torch.float64)
secont condition:: tensor(3.3315e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6989e-09, dtype=torch.float64)
secont condition:: tensor(4.6989e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8862e-09, dtype=torch.float64)
secont condition:: tensor(2.8862e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6571e-09, dtype=torch.float64)
secont condition:: tensor(5.6571e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6378e-09, dtype=torch.float64)
secont condition:: tensor(5.6378e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2933e-09, dtype=torch.float64)
secont condition:: tensor(5.2933e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6855e-09, dtype=torch.float64)
secont condition:: tensor(5.6855e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1396e-09, dtype=torch.float64)
secont condition:: tensor(5.1396e-09, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0267e-09, dtype=torch.float64)
secont condition:: tensor(6.0267e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0562e-09, dtype=torch.float64)
secont condition:: tensor(2.0562e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5191e-09, dtype=torch.float64)
secont condition:: tensor(2.5191e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1364e-09, dtype=torch.float64)
secont condition:: tensor(7.1364e-09, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8136e-09, dtype=torch.float64)
secont condition:: tensor(2.8136e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2609e-09, dtype=torch.float64)
secont condition:: tensor(1.2609e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4122e-09, dtype=torch.float64)
secont condition:: tensor(6.4122e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8512e-10, dtype=torch.float64)
secont condition:: tensor(4.8512e-10, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8944e-09, dtype=torch.float64)
secont condition:: tensor(9.8944e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7195e-09, dtype=torch.float64)
secont condition:: tensor(2.7195e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2654e-09, dtype=torch.float64)
secont condition:: tensor(5.2654e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7749e-09, dtype=torch.float64)
secont condition:: tensor(5.7749e-09, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1365e-09, dtype=torch.float64)
secont condition:: tensor(7.1365e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.5372e-09, dtype=torch.float64)
secont condition:: tensor(7.5372e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.7889e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0155e-09, dtype=torch.float64)
secont condition:: tensor(5.0155e-09, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3559e-09, dtype=torch.float64)
secont condition:: tensor(3.3559e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1003e-09, dtype=torch.float64)
secont condition:: tensor(7.1003e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.3063e-09, dtype=torch.float64)
secont condition:: tensor(9.3063e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8742e-09, dtype=torch.float64)
secont condition:: tensor(6.8742e-09, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9552e-09, dtype=torch.float64)
secont condition:: tensor(8.9552e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3499e-08, dtype=torch.float64)
secont condition:: tensor(1.3499e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9179e-09, dtype=torch.float64)
secont condition:: tensor(8.9179e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7775e-09, dtype=torch.float64)
secont condition:: tensor(5.7775e-09, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5096e-09, dtype=torch.float64)
secont condition:: tensor(3.5096e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4631e-08, dtype=torch.float64)
secont condition:: tensor(1.4631e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8878e-09, dtype=torch.float64)
secont condition:: tensor(4.8878e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.9308e-09, dtype=torch.float64)
secont condition:: tensor(9.9308e-09, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7248e-08, dtype=torch.float64)
secont condition:: tensor(1.7248e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2751e-08, dtype=torch.float64)
secont condition:: tensor(1.2751e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1122e-08, dtype=torch.float64)
secont condition:: tensor(1.1122e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6404e-09, dtype=torch.float64)
secont condition:: tensor(5.6404e-09, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1769e-09, dtype=torch.float64)
secont condition:: tensor(9.1769e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9114e-09, dtype=torch.float64)
secont condition:: tensor(5.9114e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2836e-09, dtype=torch.float64)
secont condition:: tensor(8.2836e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8443e-09, dtype=torch.float64)
secont condition:: tensor(1.8443e-09, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4907e-08, dtype=torch.float64)
secont condition:: tensor(1.4907e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7473e-09, dtype=torch.float64)
secont condition:: tensor(7.7473e-09, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8537e-09, dtype=torch.float64)
secont condition:: tensor(7.8537e-09, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5044e-08, dtype=torch.float64)
secont condition:: tensor(1.5044e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0524e-08, dtype=torch.float64)
secont condition:: tensor(1.0524e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2572e-08, dtype=torch.float64)
secont condition:: tensor(1.2572e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0547e-08, dtype=torch.float64)
secont condition:: tensor(1.0547e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 39.142632484436035
curr_diff: 0 tensor(4.1917e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4944e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.0866e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.5473e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(5.3369e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1461e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.4370e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2120e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.9968e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2852e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(7.2215e-05, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.3102e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8290e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4824e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.6378e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.8295e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2055e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.4241e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.206076
Train - Epoch 0, Batch: 10, Loss: 0.153712
Test Avg. Loss: 0.000039, Accuracy: 0.964200
Train - Epoch 1, Batch: 0, Loss: 0.149975
Train - Epoch 1, Batch: 10, Loss: 0.149204
Test Avg. Loss: 0.000038, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.142987
Train - Epoch 2, Batch: 10, Loss: 0.145491
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 3, Batch: 0, Loss: 0.131935
Train - Epoch 3, Batch: 10, Loss: 0.140745
Test Avg. Loss: 0.000037, Accuracy: 0.963200
Train - Epoch 4, Batch: 0, Loss: 0.126809
Train - Epoch 4, Batch: 10, Loss: 0.145398
Test Avg. Loss: 0.000037, Accuracy: 0.965000
Train - Epoch 5, Batch: 0, Loss: 0.134458
Train - Epoch 5, Batch: 10, Loss: 0.158139
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 6, Batch: 0, Loss: 0.147752
Train - Epoch 6, Batch: 10, Loss: 0.145172
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 7, Batch: 0, Loss: 0.144016
Train - Epoch 7, Batch: 10, Loss: 0.141064
Test Avg. Loss: 0.000037, Accuracy: 0.965500
training_time:: 16.41546940803528
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.136534452438354
time_baseline:: 12.154095888137817
curr_diff: 0 tensor(3.0644e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1581e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.9920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.1748e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.2088e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.1372e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.4115e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965500
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5668e-09, dtype=torch.float64)
secont condition:: tensor(9.5668e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7225e-09, dtype=torch.float64)
secont condition:: tensor(7.7225e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4178e-09, dtype=torch.float64)
secont condition:: tensor(3.4178e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2271e-09, dtype=torch.float64)
secont condition:: tensor(5.2271e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5808e-09, dtype=torch.float64)
secont condition:: tensor(1.5808e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1241e-09, dtype=torch.float64)
secont condition:: tensor(2.1241e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5890e-09, dtype=torch.float64)
secont condition:: tensor(1.5890e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5801e-09, dtype=torch.float64)
secont condition:: tensor(1.5801e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0888e-09, dtype=torch.float64)
secont condition:: tensor(1.0888e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.6731e-10, dtype=torch.float64)
secont condition:: tensor(9.6731e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5272e-09, dtype=torch.float64)
secont condition:: tensor(1.5272e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8847e-10, dtype=torch.float64)
secont condition:: tensor(3.8847e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4146e-08, dtype=torch.float64)
secont condition:: tensor(2.4146e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1439e-08, dtype=torch.float64)
secont condition:: tensor(2.1439e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9485e-09, dtype=torch.float64)
secont condition:: tensor(8.9485e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2759e-09, dtype=torch.float64)
secont condition:: tensor(6.2759e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1087e-09, dtype=torch.float64)
secont condition:: tensor(3.1087e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7691e-10, dtype=torch.float64)
secont condition:: tensor(2.7691e-10, dtype=torch.float64)
curr_secont condition:: tensor(5.0005e-09, dtype=torch.float64)
secont condition:: tensor(5.0005e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6071e-08, dtype=torch.float64)
secont condition:: tensor(2.6071e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5194e-08, dtype=torch.float64)
secont condition:: tensor(1.5194e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0303e-09, dtype=torch.float64)
secont condition:: tensor(8.0303e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2580e-09, dtype=torch.float64)
secont condition:: tensor(6.2580e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5204e-09, dtype=torch.float64)
secont condition:: tensor(2.5204e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.7012e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7091e-08, dtype=torch.float64)
secont condition:: tensor(2.7091e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0755e-09, dtype=torch.float64)
secont condition:: tensor(2.0755e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9202e-09, dtype=torch.float64)
secont condition:: tensor(4.9202e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.1798e-10, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2805e-09, dtype=torch.float64)
secont condition:: tensor(5.2805e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4979e-09, dtype=torch.float64)
secont condition:: tensor(7.4979e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6105e-09, dtype=torch.float64)
secont condition:: tensor(8.6105e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4762e-08, dtype=torch.float64)
secont condition:: tensor(1.4762e-08, dtype=torch.float64)
curr_secont condition:: tensor(-9.1414e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8165e-09, dtype=torch.float64)
secont condition:: tensor(2.8165e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.2485e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5282e-08, dtype=torch.float64)
secont condition:: tensor(2.5282e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4654e-08, dtype=torch.float64)
secont condition:: tensor(1.4654e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5425e-08, dtype=torch.float64)
curr_secont condition:: tensor(-5.7850e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7209e-08, dtype=torch.float64)
secont condition:: tensor(1.7209e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8215e-08, dtype=torch.float64)
secont condition:: tensor(1.8215e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9735e-08, dtype=torch.float64)
secont condition:: tensor(3.9735e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1966e-08, dtype=torch.float64)
secont condition:: tensor(1.1966e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9324e-09, dtype=torch.float64)
secont condition:: tensor(4.9324e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0747e-08, dtype=torch.float64)
secont condition:: tensor(9.0747e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2950e-08, dtype=torch.float64)
secont condition:: tensor(3.2950e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1401e-08, dtype=torch.float64)
secont condition:: tensor(2.1401e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8854e-09, dtype=torch.float64)
secont condition:: tensor(2.8854e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3208e-08, dtype=torch.float64)
secont condition:: tensor(1.3208e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5663e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2178e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5263e-08, dtype=torch.float64)
secont condition:: tensor(1.5263e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3212e-08, dtype=torch.float64)
secont condition:: tensor(1.3212e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1823e-09, dtype=torch.float64)
secont condition:: tensor(5.1823e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8863e-08, dtype=torch.float64)
secont condition:: tensor(2.8863e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0477e-08, dtype=torch.float64)
secont condition:: tensor(1.0477e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9299e-09, dtype=torch.float64)
secont condition:: tensor(6.9299e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5742e-09, dtype=torch.float64)
secont condition:: tensor(2.5742e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2524e-09, dtype=torch.float64)
secont condition:: tensor(7.2524e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4933e-09, dtype=torch.float64)
secont condition:: tensor(8.4933e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3305e-08, dtype=torch.float64)
secont condition:: tensor(5.3305e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8388e-08, dtype=torch.float64)
secont condition:: tensor(2.8388e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4432e-09, dtype=torch.float64)
secont condition:: tensor(8.4432e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8298e-08, dtype=torch.float64)
secont condition:: tensor(1.8298e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0549e-09, dtype=torch.float64)
secont condition:: tensor(7.0549e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.6713e-09, dtype=torch.float64)
secont condition:: tensor(8.6713e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2860e-08, dtype=torch.float64)
secont condition:: tensor(2.2860e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1480e-08, dtype=torch.float64)
secont condition:: tensor(1.1480e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8026e-08, dtype=torch.float64)
secont condition:: tensor(5.8026e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2948e-08, dtype=torch.float64)
secont condition:: tensor(1.2948e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4240e-08, dtype=torch.float64)
secont condition:: tensor(4.4240e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2377e-08, dtype=torch.float64)
secont condition:: tensor(1.2377e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6362e-08, dtype=torch.float64)
secont condition:: tensor(4.6362e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.439151763916016
curr_diff: 0 tensor(4.8603e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1217e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.6502e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3969e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9384e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(2.8790e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4786e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.1710e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.4978e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.3344e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5000e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.4264e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.2178e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.3330e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.6722e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.4460e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214673
Train - Epoch 0, Batch: 10, Loss: 0.146248
Test Avg. Loss: 0.000038, Accuracy: 0.964000
Train - Epoch 1, Batch: 0, Loss: 0.156824
Train - Epoch 1, Batch: 10, Loss: 0.134429
Test Avg. Loss: 0.000037, Accuracy: 0.963300
Train - Epoch 2, Batch: 0, Loss: 0.137304
Train - Epoch 2, Batch: 10, Loss: 0.153517
Test Avg. Loss: 0.000037, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.133090
Train - Epoch 3, Batch: 10, Loss: 0.143131
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 4, Batch: 0, Loss: 0.152163
Train - Epoch 4, Batch: 10, Loss: 0.142370
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 5, Batch: 0, Loss: 0.129173
Train - Epoch 5, Batch: 10, Loss: 0.146430
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 6, Batch: 0, Loss: 0.143445
Train - Epoch 6, Batch: 10, Loss: 0.149735
Test Avg. Loss: 0.000037, Accuracy: 0.965700
Train - Epoch 7, Batch: 0, Loss: 0.143916
Train - Epoch 7, Batch: 10, Loss: 0.140001
Test Avg. Loss: 0.000037, Accuracy: 0.965900
training_time:: 16.329298734664917
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.132665157318115
time_baseline:: 12.150309562683105
curr_diff: 0 tensor(2.9640e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8926e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.5518e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.8591e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.5975e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.8161e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7559e-33, dtype=torch.float64)
secont condition:: tensor(7.7559e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.2623e-32, dtype=torch.float64)
secont condition:: tensor(2.2623e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.2567e-32, dtype=torch.float64)
secont condition:: tensor(4.2567e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9079e-10, dtype=torch.float64)
secont condition:: tensor(1.9079e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.0343e-11, dtype=torch.float64)
secont condition:: tensor(9.0343e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.0465e-11, dtype=torch.float64)
secont condition:: tensor(5.0465e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2124e-10, dtype=torch.float64)
secont condition:: tensor(1.2124e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.7163e-11, dtype=torch.float64)
secont condition:: tensor(4.7163e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.9053e-10, dtype=torch.float64)
secont condition:: tensor(1.9053e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4380e-08, dtype=torch.float64)
secont condition:: tensor(2.4380e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9508e-09, dtype=torch.float64)
secont condition:: tensor(8.9508e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3817e-08, dtype=torch.float64)
secont condition:: tensor(1.3817e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0123e-08, dtype=torch.float64)
secont condition:: tensor(1.0123e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4945e-08, dtype=torch.float64)
secont condition:: tensor(1.4945e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2717e-09, dtype=torch.float64)
secont condition:: tensor(9.2717e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8117e-09, dtype=torch.float64)
secont condition:: tensor(3.8117e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0150e-09, dtype=torch.float64)
secont condition:: tensor(4.0150e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2888e-09, dtype=torch.float64)
secont condition:: tensor(2.2888e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.2376e-08, dtype=torch.float64)
secont condition:: tensor(2.2376e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6550e-08, dtype=torch.float64)
secont condition:: tensor(1.6550e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3336e-09, dtype=torch.float64)
secont condition:: tensor(8.3336e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8204e-09, dtype=torch.float64)
secont condition:: tensor(4.8204e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4734e-09, dtype=torch.float64)
secont condition:: tensor(8.4734e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3114e-08, dtype=torch.float64)
secont condition:: tensor(1.3114e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6113e-08, dtype=torch.float64)
secont condition:: tensor(2.6113e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0988e-08, dtype=torch.float64)
secont condition:: tensor(2.0988e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6732e-09, dtype=torch.float64)
secont condition:: tensor(5.6732e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4399e-09, dtype=torch.float64)
secont condition:: tensor(6.4399e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.6007e-09, dtype=torch.float64)
secont condition:: tensor(5.6007e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.5772e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5049e-08, dtype=torch.float64)
secont condition:: tensor(2.5049e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.1924e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0361e-08, dtype=torch.float64)
secont condition:: tensor(1.0361e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3507e-08, dtype=torch.float64)
secont condition:: tensor(1.3507e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.0426e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.4739e-09, dtype=torch.float64)
secont condition:: tensor(8.4739e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0836e-08, dtype=torch.float64)
secont condition:: tensor(1.0836e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1170e-08, dtype=torch.float64)
secont condition:: tensor(1.1170e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8852e-09, dtype=torch.float64)
secont condition:: tensor(4.8852e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0069e-07, dtype=torch.float64)
secont condition:: tensor(1.0069e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0771e-09, dtype=torch.float64)
secont condition:: tensor(7.0771e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0729e-08, dtype=torch.float64)
secont condition:: tensor(1.0729e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2517e-08, dtype=torch.float64)
secont condition:: tensor(2.2517e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0360e-08, dtype=torch.float64)
secont condition:: tensor(1.0360e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3361e-09, dtype=torch.float64)
secont condition:: tensor(5.3361e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0650e-09, dtype=torch.float64)
secont condition:: tensor(5.0650e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.3550e-09, dtype=torch.float64)
secont condition:: tensor(7.3550e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.1793e-09, dtype=torch.float64)
secont condition:: tensor(7.1793e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9142e-08, dtype=torch.float64)
secont condition:: tensor(1.9142e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1463e-09, dtype=torch.float64)
secont condition:: tensor(8.1463e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.3244e-09, dtype=torch.float64)
secont condition:: tensor(4.3244e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1396e-08, dtype=torch.float64)
secont condition:: tensor(4.1396e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4894e-08, dtype=torch.float64)
secont condition:: tensor(2.4894e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5322e-09, dtype=torch.float64)
secont condition:: tensor(8.5322e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8304e-08, dtype=torch.float64)
secont condition:: tensor(1.8304e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4422e-08, dtype=torch.float64)
secont condition:: tensor(3.4422e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7728e-08, dtype=torch.float64)
secont condition:: tensor(1.7728e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9885e-08, dtype=torch.float64)
secont condition:: tensor(1.9885e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3789e-08, dtype=torch.float64)
secont condition:: tensor(1.3789e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0022e-06, dtype=torch.float64)
secont condition:: tensor(3.0022e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9299e-09, dtype=torch.float64)
secont condition:: tensor(7.9299e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5349e-09, dtype=torch.float64)
secont condition:: tensor(5.5349e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7553e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.1227e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6106e-08, dtype=torch.float64)
secont condition:: tensor(1.6106e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5794e-09, dtype=torch.float64)
secont condition:: tensor(7.5794e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.2546e-09, dtype=torch.float64)
secont condition:: tensor(9.2546e-09, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2555e-08, dtype=torch.float64)
secont condition:: tensor(1.2555e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9209e-08, dtype=torch.float64)
secont condition:: tensor(3.9209e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6959e-08, dtype=torch.float64)
secont condition:: tensor(5.6959e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7084e-08, dtype=torch.float64)
secont condition:: tensor(1.7084e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9575e-08, dtype=torch.float64)
secont condition:: tensor(1.9575e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.839038133621216
curr_diff: 0 tensor(7.9678e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6357e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.0952e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7085e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.6391e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4991e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5184e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0062e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.4912e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.0328e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.3306e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.7332e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.8787e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3074e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.205945
Train - Epoch 0, Batch: 10, Loss: 0.156105
Test Avg. Loss: 0.000038, Accuracy: 0.963500
Train - Epoch 1, Batch: 0, Loss: 0.154205
Train - Epoch 1, Batch: 10, Loss: 0.137900
Test Avg. Loss: 0.000038, Accuracy: 0.964100
Train - Epoch 2, Batch: 0, Loss: 0.162188
Train - Epoch 2, Batch: 10, Loss: 0.147102
Test Avg. Loss: 0.000037, Accuracy: 0.964300
Train - Epoch 3, Batch: 0, Loss: 0.146168
Train - Epoch 3, Batch: 10, Loss: 0.142706
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 4, Batch: 0, Loss: 0.146180
Train - Epoch 4, Batch: 10, Loss: 0.152630
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 5, Batch: 0, Loss: 0.148298
Train - Epoch 5, Batch: 10, Loss: 0.147378
Test Avg. Loss: 0.000037, Accuracy: 0.965000
Train - Epoch 6, Batch: 0, Loss: 0.141906
Train - Epoch 6, Batch: 10, Loss: 0.139855
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 7, Batch: 0, Loss: 0.136774
Train - Epoch 7, Batch: 10, Loss: 0.140929
Test Avg. Loss: 0.000037, Accuracy: 0.965500
training_time:: 16.4555881023407
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.12476921081543
time_baseline:: 12.143154382705688
curr_diff: 0 tensor(3.3877e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.0309e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.1354e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.6079e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.8640e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2311e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965500
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7242e-33, dtype=torch.float64)
secont condition:: tensor(5.7242e-33, dtype=torch.float64)
curr_secont condition:: tensor(3.0342e-32, dtype=torch.float64)
secont condition:: tensor(3.0342e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4788e-08, dtype=torch.float64)
secont condition:: tensor(1.4788e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3362e-08, dtype=torch.float64)
secont condition:: tensor(3.3362e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4449e-08, dtype=torch.float64)
secont condition:: tensor(1.4449e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0650e-08, dtype=torch.float64)
secont condition:: tensor(4.0650e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7837e-08, dtype=torch.float64)
secont condition:: tensor(1.7837e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5484e-09, dtype=torch.float64)
secont condition:: tensor(8.5484e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7612e-09, dtype=torch.float64)
secont condition:: tensor(3.7612e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3122e-09, dtype=torch.float64)
secont condition:: tensor(3.3122e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3008e-09, dtype=torch.float64)
secont condition:: tensor(3.3008e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0349e-09, dtype=torch.float64)
secont condition:: tensor(2.0349e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1307e-09, dtype=torch.float64)
secont condition:: tensor(5.1307e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3746e-09, dtype=torch.float64)
secont condition:: tensor(1.3746e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2397e-09, dtype=torch.float64)
secont condition:: tensor(1.2397e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6249e-09, dtype=torch.float64)
secont condition:: tensor(1.6249e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3139e-09, dtype=torch.float64)
secont condition:: tensor(1.3139e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0624e-08, dtype=torch.float64)
secont condition:: tensor(3.0624e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2194e-08, dtype=torch.float64)
secont condition:: tensor(1.2194e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6044e-09, dtype=torch.float64)
secont condition:: tensor(3.6044e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.1608e-09, dtype=torch.float64)
secont condition:: tensor(5.1608e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6879e-09, dtype=torch.float64)
secont condition:: tensor(2.6879e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.4045e-09, dtype=torch.float64)
secont condition:: tensor(6.4045e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5948e-09, dtype=torch.float64)
secont condition:: tensor(3.5948e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.2160e-09, dtype=torch.float64)
secont condition:: tensor(4.2160e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5528e-08, dtype=torch.float64)
secont condition:: tensor(1.5528e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7281e-08, dtype=torch.float64)
secont condition:: tensor(1.7281e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7263e-09, dtype=torch.float64)
secont condition:: tensor(7.7263e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3434e-09, dtype=torch.float64)
secont condition:: tensor(3.3434e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4971e-09, dtype=torch.float64)
secont condition:: tensor(3.4971e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.2713e-10, dtype=torch.float64)
secont condition:: tensor(7.2713e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.7342e-09, dtype=torch.float64)
secont condition:: tensor(2.7342e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5184e-09, dtype=torch.float64)
secont condition:: tensor(3.5184e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3785e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3715e-08, dtype=torch.float64)
secont condition:: tensor(2.3715e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9828e-09, dtype=torch.float64)
secont condition:: tensor(8.9828e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.1859e-09, dtype=torch.float64)
secont condition:: tensor(6.1859e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2786e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0679e-10, dtype=torch.float64)
secont condition:: tensor(8.0679e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.8729e-08, dtype=torch.float64)
secont condition:: tensor(2.8729e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6941e-09, dtype=torch.float64)
secont condition:: tensor(9.6941e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5026e-08, dtype=torch.float64)
secont condition:: tensor(1.5026e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4495e-09, dtype=torch.float64)
secont condition:: tensor(7.4495e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9207e-08, dtype=torch.float64)
secont condition:: tensor(2.9207e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9825e-08, dtype=torch.float64)
secont condition:: tensor(1.9825e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4259e-09, dtype=torch.float64)
secont condition:: tensor(6.4259e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.5964e-09, dtype=torch.float64)
secont condition:: tensor(5.5964e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7522e-09, dtype=torch.float64)
secont condition:: tensor(5.7522e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6503e-08, dtype=torch.float64)
secont condition:: tensor(3.6503e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9430e-08, dtype=torch.float64)
secont condition:: tensor(2.9430e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0040e-08, dtype=torch.float64)
secont condition:: tensor(1.0040e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1488e-09, dtype=torch.float64)
secont condition:: tensor(4.1488e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.9440e-09, dtype=torch.float64)
secont condition:: tensor(6.9440e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.4919e-09, dtype=torch.float64)
secont condition:: tensor(7.4919e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4898e-09, dtype=torch.float64)
secont condition:: tensor(4.4898e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4383e-09, dtype=torch.float64)
secont condition:: tensor(5.4383e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7498e-09, dtype=torch.float64)
secont condition:: tensor(3.7498e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4043e-08, dtype=torch.float64)
secont condition:: tensor(1.4043e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2440e-09, dtype=torch.float64)
secont condition:: tensor(7.2440e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1927e-07, dtype=torch.float64)
secont condition:: tensor(1.1927e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1057e-08, dtype=torch.float64)
secont condition:: tensor(9.1057e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7360e-08, dtype=torch.float64)
secont condition:: tensor(1.7360e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4080e-08, dtype=torch.float64)
secont condition:: tensor(1.4080e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3855e-08, dtype=torch.float64)
secont condition:: tensor(1.3855e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9306e-08, dtype=torch.float64)
secont condition:: tensor(3.9306e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8396e-08, dtype=torch.float64)
secont condition:: tensor(2.8396e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4438e-08, dtype=torch.float64)
secont condition:: tensor(1.4438e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3316e-08, dtype=torch.float64)
secont condition:: tensor(6.3316e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8646e-08, dtype=torch.float64)
secont condition:: tensor(2.8646e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0831e-08, dtype=torch.float64)
secont condition:: tensor(2.0831e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8720e-08, dtype=torch.float64)
secont condition:: tensor(2.8720e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5185e-08, dtype=torch.float64)
secont condition:: tensor(2.5185e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1108e-08, dtype=torch.float64)
secont condition:: tensor(1.1108e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5208e-08, dtype=torch.float64)
secont condition:: tensor(1.5208e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0203e-08, dtype=torch.float64)
secont condition:: tensor(2.0203e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.71054220199585
curr_diff: 0 tensor(5.0698e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4677e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.8724e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7155e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(9.6167e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2982e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.8785e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7728e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5906e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.1034e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.5793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3566e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7993e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.4669e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.9629e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.6611e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215957
Train - Epoch 0, Batch: 10, Loss: 0.146426
Test Avg. Loss: 0.000039, Accuracy: 0.963700
Train - Epoch 1, Batch: 0, Loss: 0.138540
Train - Epoch 1, Batch: 10, Loss: 0.142456
Test Avg. Loss: 0.000038, Accuracy: 0.963600
Train - Epoch 2, Batch: 0, Loss: 0.155831
Train - Epoch 2, Batch: 10, Loss: 0.141314
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 3, Batch: 0, Loss: 0.136599
Train - Epoch 3, Batch: 10, Loss: 0.148955
Test Avg. Loss: 0.000037, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.150662
Train - Epoch 4, Batch: 10, Loss: 0.140678
Test Avg. Loss: 0.000037, Accuracy: 0.965900
Train - Epoch 5, Batch: 0, Loss: 0.147386
Train - Epoch 5, Batch: 10, Loss: 0.140635
Test Avg. Loss: 0.000037, Accuracy: 0.966600
Train - Epoch 6, Batch: 0, Loss: 0.133362
Train - Epoch 6, Batch: 10, Loss: 0.137335
Test Avg. Loss: 0.000037, Accuracy: 0.965100
Train - Epoch 7, Batch: 0, Loss: 0.146044
Train - Epoch 7, Batch: 10, Loss: 0.140316
Test Avg. Loss: 0.000037, Accuracy: 0.965200
training_time:: 16.32179093360901
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.152126789093018
time_baseline:: 12.169888973236084
curr_diff: 0 tensor(3.1861e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6286e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2468e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.1958e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.1679e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.0995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.1463e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8067e-10, dtype=torch.float64)
secont condition:: tensor(9.8067e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7484e-10, dtype=torch.float64)
secont condition:: tensor(3.7484e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0641e-09, dtype=torch.float64)
secont condition:: tensor(1.0641e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.2569e-10, dtype=torch.float64)
secont condition:: tensor(8.2569e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5864e-10, dtype=torch.float64)
secont condition:: tensor(2.5864e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5952e-10, dtype=torch.float64)
secont condition:: tensor(1.5952e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5901e-09, dtype=torch.float64)
secont condition:: tensor(2.5901e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.6254e-08, dtype=torch.float64)
secont condition:: tensor(4.6254e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8419e-08, dtype=torch.float64)
secont condition:: tensor(2.8419e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2506e-08, dtype=torch.float64)
secont condition:: tensor(1.2506e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5840e-09, dtype=torch.float64)
secont condition:: tensor(7.5840e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7330e-09, dtype=torch.float64)
secont condition:: tensor(9.7330e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1639e-09, dtype=torch.float64)
secont condition:: tensor(3.1639e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6818e-09, dtype=torch.float64)
secont condition:: tensor(2.6818e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4790e-10, dtype=torch.float64)
secont condition:: tensor(5.4790e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4702e-08, dtype=torch.float64)
secont condition:: tensor(2.4702e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3252e-08, dtype=torch.float64)
secont condition:: tensor(1.3252e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2403e-08, dtype=torch.float64)
secont condition:: tensor(1.2403e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4832e-09, dtype=torch.float64)
secont condition:: tensor(6.4832e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2360e-09, dtype=torch.float64)
secont condition:: tensor(6.2360e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.1699e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4249e-09, dtype=torch.float64)
secont condition:: tensor(9.4249e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.8623e-09, dtype=torch.float64)
secont condition:: tensor(4.8623e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.0022e-10, dtype=torch.float64)
curr_secont condition:: tensor(-7.7947e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.2436e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3103e-08, dtype=torch.float64)
secont condition:: tensor(1.3103e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9870e-08, dtype=torch.float64)
secont condition:: tensor(3.9870e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1237e-09, dtype=torch.float64)
secont condition:: tensor(8.1237e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4074e-08, dtype=torch.float64)
secont condition:: tensor(3.4074e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5119e-08, dtype=torch.float64)
secont condition:: tensor(1.5119e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2895e-08, dtype=torch.float64)
secont condition:: tensor(1.2895e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.4951e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.7563e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2247e-08, dtype=torch.float64)
secont condition:: tensor(3.2247e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8379e-09, dtype=torch.float64)
secont condition:: tensor(4.8379e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0063e-08, dtype=torch.float64)
secont condition:: tensor(3.0063e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1286e-08, dtype=torch.float64)
secont condition:: tensor(3.1286e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6800e-09, dtype=torch.float64)
secont condition:: tensor(6.6800e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5101e-09, dtype=torch.float64)
secont condition:: tensor(3.5101e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.7514e-09, dtype=torch.float64)
secont condition:: tensor(8.7514e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.7743e-09, dtype=torch.float64)
secont condition:: tensor(9.7743e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9266e-08, dtype=torch.float64)
secont condition:: tensor(1.9266e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0549e-08, dtype=torch.float64)
secont condition:: tensor(3.0549e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6333e-08, dtype=torch.float64)
secont condition:: tensor(2.6333e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1364e-09, dtype=torch.float64)
secont condition:: tensor(8.1364e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.0280e-10, dtype=torch.float64)
secont condition:: tensor(9.0280e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2186e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5691e-08, dtype=torch.float64)
secont condition:: tensor(4.5691e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0581e-08, dtype=torch.float64)
secont condition:: tensor(2.0581e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6830e-08, dtype=torch.float64)
secont condition:: tensor(1.6830e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0331e-08, dtype=torch.float64)
secont condition:: tensor(1.0331e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6917e-08, dtype=torch.float64)
secont condition:: tensor(1.6917e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1752e-08, dtype=torch.float64)
secont condition:: tensor(4.1752e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1631e-08, dtype=torch.float64)
secont condition:: tensor(2.1631e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2594e-08, dtype=torch.float64)
secont condition:: tensor(2.2594e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.5657e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.9348e-09, dtype=torch.float64)
secont condition:: tensor(1.9348e-09, dtype=torch.float64)
curr_secont condition:: tensor(-8.0492e-09, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5950e-09, dtype=torch.float64)
secont condition:: tensor(6.5950e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1833e-08, dtype=torch.float64)
secont condition:: tensor(1.1833e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.9063e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3519e-08, dtype=torch.float64)
secont condition:: tensor(2.3519e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8425e-08, dtype=torch.float64)
secont condition:: tensor(1.8425e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1671e-08, dtype=torch.float64)
secont condition:: tensor(1.1671e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1126e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0862e-08, dtype=torch.float64)
secont condition:: tensor(5.0862e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.2505e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9040e-08, dtype=torch.float64)
secont condition:: tensor(6.9040e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1254e-08, dtype=torch.float64)
secont condition:: tensor(9.1254e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8996e-08, dtype=torch.float64)
secont condition:: tensor(5.8996e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8171e-08, dtype=torch.float64)
secont condition:: tensor(8.8171e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7804e-08, dtype=torch.float64)
secont condition:: tensor(1.7804e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0628e-08, dtype=torch.float64)
secont condition:: tensor(8.0628e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0509e-08, dtype=torch.float64)
secont condition:: tensor(3.0509e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 10.54420804977417
curr_diff: 0 tensor(7.9431e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2050e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.4581e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8719e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.1425e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.3399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.6991e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.3444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8842e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.0544e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8241e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.0835e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.2292e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.7293e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.5010e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.7184e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.225492
Train - Epoch 0, Batch: 10, Loss: 0.152897
Test Avg. Loss: 0.000038, Accuracy: 0.964400
Train - Epoch 1, Batch: 0, Loss: 0.146787
Train - Epoch 1, Batch: 10, Loss: 0.138316
Test Avg. Loss: 0.000038, Accuracy: 0.964500
Train - Epoch 2, Batch: 0, Loss: 0.149878
Train - Epoch 2, Batch: 10, Loss: 0.152802
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.148265
Train - Epoch 3, Batch: 10, Loss: 0.134346
Test Avg. Loss: 0.000037, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.133862
Train - Epoch 4, Batch: 10, Loss: 0.140813
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.138141
Train - Epoch 5, Batch: 10, Loss: 0.148694
Test Avg. Loss: 0.000037, Accuracy: 0.966100
Train - Epoch 6, Batch: 0, Loss: 0.139289
Train - Epoch 6, Batch: 10, Loss: 0.134816
Test Avg. Loss: 0.000037, Accuracy: 0.966100
Train - Epoch 7, Batch: 0, Loss: 0.141918
Train - Epoch 7, Batch: 10, Loss: 0.148042
Test Avg. Loss: 0.000037, Accuracy: 0.964400
training_time:: 16.470662832260132
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.140545129776001
time_baseline:: 12.158166646957397
curr_diff: 0 tensor(3.0084e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.4749e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3187e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.7727e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.3769e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.4714e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.4072e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 12
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8845e-08, dtype=torch.float64)
secont condition:: tensor(6.8845e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9239e-08, dtype=torch.float64)
secont condition:: tensor(2.9239e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6377e-08, dtype=torch.float64)
secont condition:: tensor(1.6377e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1244e-09, dtype=torch.float64)
secont condition:: tensor(5.1244e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4883e-09, dtype=torch.float64)
secont condition:: tensor(4.4883e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5431e-09, dtype=torch.float64)
secont condition:: tensor(2.5431e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2392e-09, dtype=torch.float64)
secont condition:: tensor(6.2392e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4128e-09, dtype=torch.float64)
secont condition:: tensor(1.4128e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2038e-08, dtype=torch.float64)
secont condition:: tensor(1.2038e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1030e-08, dtype=torch.float64)
secont condition:: tensor(1.1030e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2973e-09, dtype=torch.float64)
secont condition:: tensor(5.2973e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7439e-09, dtype=torch.float64)
secont condition:: tensor(1.7439e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2015e-09, dtype=torch.float64)
secont condition:: tensor(1.2015e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8460e-08, dtype=torch.float64)
secont condition:: tensor(1.8460e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5712e-08, dtype=torch.float64)
secont condition:: tensor(1.5712e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.5908e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5614e-08, dtype=torch.float64)
secont condition:: tensor(1.5614e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9867e-08, dtype=torch.float64)
secont condition:: tensor(1.9867e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2589e-08, dtype=torch.float64)
secont condition:: tensor(3.2589e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2976e-08, dtype=torch.float64)
secont condition:: tensor(1.2976e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1222e-08, dtype=torch.float64)
secont condition:: tensor(1.1222e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5315e-09, dtype=torch.float64)
secont condition:: tensor(6.5315e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.5584e-09, dtype=torch.float64)
secont condition:: tensor(6.5584e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2648e-09, dtype=torch.float64)
secont condition:: tensor(6.2648e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7991e-09, dtype=torch.float64)
secont condition:: tensor(7.7991e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3504e-09, dtype=torch.float64)
secont condition:: tensor(8.3504e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5526e-09, dtype=torch.float64)
secont condition:: tensor(2.5526e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3206e-09, dtype=torch.float64)
secont condition:: tensor(3.3206e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5819e-09, dtype=torch.float64)
secont condition:: tensor(1.5819e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6816e-08, dtype=torch.float64)
secont condition:: tensor(2.6816e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0366e-08, dtype=torch.float64)
secont condition:: tensor(1.0366e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8456e-08, dtype=torch.float64)
secont condition:: tensor(1.8456e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0256e-08, dtype=torch.float64)
secont condition:: tensor(1.0256e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6607e-08, dtype=torch.float64)
secont condition:: tensor(3.6607e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8258e-08, dtype=torch.float64)
secont condition:: tensor(3.8258e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8775e-08, dtype=torch.float64)
secont condition:: tensor(1.8775e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7547e-08, dtype=torch.float64)
secont condition:: tensor(1.7547e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9478e-09, dtype=torch.float64)
secont condition:: tensor(6.9478e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.5416e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4767e-08, dtype=torch.float64)
secont condition:: tensor(1.4767e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9398e-08, dtype=torch.float64)
secont condition:: tensor(1.9398e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7484e-08, dtype=torch.float64)
secont condition:: tensor(1.7484e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4379e-06, dtype=torch.float64)
secont condition:: tensor(1.4379e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0101e-09, dtype=torch.float64)
secont condition:: tensor(7.0101e-09, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8081e-08, dtype=torch.float64)
secont condition:: tensor(2.8081e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3253e-09, dtype=torch.float64)
secont condition:: tensor(4.3253e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6758e-08, dtype=torch.float64)
secont condition:: tensor(1.6758e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6897e-08, dtype=torch.float64)
secont condition:: tensor(1.6897e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2517e-08, dtype=torch.float64)
secont condition:: tensor(1.2517e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3259e-08, dtype=torch.float64)
secont condition:: tensor(1.3259e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1493e-09, dtype=torch.float64)
secont condition:: tensor(9.1493e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4222e-08, dtype=torch.float64)
secont condition:: tensor(1.4222e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1250e-08, dtype=torch.float64)
secont condition:: tensor(1.1250e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0548e-08, dtype=torch.float64)
secont condition:: tensor(1.0548e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0525e-08, dtype=torch.float64)
secont condition:: tensor(3.0525e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0461e-08, dtype=torch.float64)
secont condition:: tensor(1.0461e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0917e-08, dtype=torch.float64)
secont condition:: tensor(3.0917e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0528e-08, dtype=torch.float64)
secont condition:: tensor(1.0528e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6226e-08, dtype=torch.float64)
secont condition:: tensor(4.6226e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9138e-09, dtype=torch.float64)
secont condition:: tensor(9.9138e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6435e-08, dtype=torch.float64)
secont condition:: tensor(2.6435e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9306e-08, dtype=torch.float64)
secont condition:: tensor(3.9306e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.7675e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3318e-10, dtype=torch.float64)
secont condition:: tensor(2.3318e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.7470e-08, dtype=torch.float64)
secont condition:: tensor(1.7470e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6782e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.3341e-08, dtype=torch.float64)
secont condition:: tensor(3.3341e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7760e-08, dtype=torch.float64)
secont condition:: tensor(4.7760e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3440e-08, dtype=torch.float64)
secont condition:: tensor(2.3440e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9512e-08, dtype=torch.float64)
secont condition:: tensor(8.9512e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6707e-08, dtype=torch.float64)
secont condition:: tensor(5.6707e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1473e-07, dtype=torch.float64)
secont condition:: tensor(1.1473e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8690e-08, dtype=torch.float64)
secont condition:: tensor(3.8690e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0998e-08, dtype=torch.float64)
secont condition:: tensor(2.0998e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.155752897262573
curr_diff: 0 tensor(5.0961e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8318e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.0729e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8381e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9518e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4595e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0820e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5744e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0552e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.2224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9573e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.3968e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.3500e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0116e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.1913e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.8922e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965600
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218913
Train - Epoch 0, Batch: 10, Loss: 0.172041
Train - Epoch 0, Batch: 20, Loss: 0.166996
Train - Epoch 0, Batch: 30, Loss: 0.145819
Train - Epoch 0, Batch: 40, Loss: 0.139937
Train - Epoch 0, Batch: 50, Loss: 0.118778
Test Avg. Loss: 0.000130, Accuracy: 0.963100
Train - Epoch 1, Batch: 0, Loss: 0.151904
Train - Epoch 1, Batch: 10, Loss: 0.133135
Train - Epoch 1, Batch: 20, Loss: 0.132737
Train - Epoch 1, Batch: 30, Loss: 0.156037
Train - Epoch 1, Batch: 40, Loss: 0.157890
Train - Epoch 1, Batch: 50, Loss: 0.149412
Test Avg. Loss: 0.000133, Accuracy: 0.962900
training_time:: 5.252919673919678
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.21144962310791
time_baseline:: 4.216351509094238
curr_diff: 0 tensor(3.6747e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.3284e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.0812e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3268e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4666e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5138e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000133, Accuracy: 0.962900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1285e-33, dtype=torch.float64)
secont condition:: tensor(6.1285e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2324e-32, dtype=torch.float64)
secont condition:: tensor(1.2324e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.1824e-32, dtype=torch.float64)
secont condition:: tensor(1.1824e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1902e-09, dtype=torch.float64)
secont condition:: tensor(3.1902e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.8399e-09, dtype=torch.float64)
secont condition:: tensor(1.8399e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.5242e-10, dtype=torch.float64)
secont condition:: tensor(4.5242e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.4966e-09, dtype=torch.float64)
secont condition:: tensor(2.4966e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.8479e-07, dtype=torch.float64)
secont condition:: tensor(3.8479e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1073e-07, dtype=torch.float64)
secont condition:: tensor(2.1073e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2280e-07, dtype=torch.float64)
secont condition:: tensor(1.2280e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5531e-08, dtype=torch.float64)
secont condition:: tensor(3.5531e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0506e-08, dtype=torch.float64)
secont condition:: tensor(8.0506e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6323e-08, dtype=torch.float64)
secont condition:: tensor(2.6323e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9096e-07, dtype=torch.float64)
secont condition:: tensor(3.9096e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4332e-07, dtype=torch.float64)
secont condition:: tensor(1.4332e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0452e-08, dtype=torch.float64)
secont condition:: tensor(9.0452e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0420e-07, dtype=torch.float64)
secont condition:: tensor(1.0420e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4034e-08, dtype=torch.float64)
secont condition:: tensor(4.4034e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7423e-07, dtype=torch.float64)
secont condition:: tensor(1.7423e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4122e-09, dtype=torch.float64)
secont condition:: tensor(2.4122e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9975e-08, dtype=torch.float64)
secont condition:: tensor(2.9975e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8358e-08, dtype=torch.float64)
secont condition:: tensor(3.8358e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8266e-08, dtype=torch.float64)
secont condition:: tensor(2.8266e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8482e-08, dtype=torch.float64)
secont condition:: tensor(4.8482e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6285e-08, dtype=torch.float64)
secont condition:: tensor(1.6285e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5663e-08, dtype=torch.float64)
secont condition:: tensor(1.5663e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3922e-08, dtype=torch.float64)
secont condition:: tensor(2.3922e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1573e-08, dtype=torch.float64)
secont condition:: tensor(1.1573e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6035e-08, dtype=torch.float64)
secont condition:: tensor(1.6035e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5222e-09, dtype=torch.float64)
secont condition:: tensor(6.5222e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.9338e-08, dtype=torch.float64)
secont condition:: tensor(8.9338e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5513e-09, dtype=torch.float64)
secont condition:: tensor(6.5513e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6252e-09, dtype=torch.float64)
secont condition:: tensor(2.6252e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2451e-09, dtype=torch.float64)
secont condition:: tensor(1.2451e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.2762e-08, dtype=torch.float64)
secont condition:: tensor(5.2762e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9026e-08, dtype=torch.float64)
secont condition:: tensor(1.9026e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9131e-08, dtype=torch.float64)
secont condition:: tensor(1.9131e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8046e-08, dtype=torch.float64)
secont condition:: tensor(1.8046e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.5758e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6177e-07, dtype=torch.float64)
secont condition:: tensor(1.6177e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0653e-08, dtype=torch.float64)
secont condition:: tensor(6.0653e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7443e-08, dtype=torch.float64)
secont condition:: tensor(3.7443e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7854e-07, dtype=torch.float64)
secont condition:: tensor(1.7854e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7289e-08, dtype=torch.float64)
secont condition:: tensor(2.7289e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8414e-08, dtype=torch.float64)
secont condition:: tensor(2.8414e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8869e-08, dtype=torch.float64)
secont condition:: tensor(1.8869e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3107e-07, dtype=torch.float64)
secont condition:: tensor(2.3107e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2454e-08, dtype=torch.float64)
secont condition:: tensor(7.2454e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8001e-08, dtype=torch.float64)
secont condition:: tensor(1.8001e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3962e-08, dtype=torch.float64)
secont condition:: tensor(1.3962e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9032e-08, dtype=torch.float64)
secont condition:: tensor(9.9032e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0146e-08, dtype=torch.float64)
secont condition:: tensor(2.0146e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2335e-08, dtype=torch.float64)
secont condition:: tensor(1.2335e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6405e-08, dtype=torch.float64)
secont condition:: tensor(5.6405e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4861e-10, dtype=torch.float64)
secont condition:: tensor(3.4861e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7203e-08, dtype=torch.float64)
secont condition:: tensor(3.7203e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6254e-08, dtype=torch.float64)
secont condition:: tensor(2.6254e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0243e-09, dtype=torch.float64)
secont condition:: tensor(9.0243e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2307e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4895e-08, dtype=torch.float64)
secont condition:: tensor(1.4895e-08, dtype=torch.float64)
curr_secont condition:: tensor(-4.3831e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1379e-08, dtype=torch.float64)
secont condition:: tensor(9.1379e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3776e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1135e-08, dtype=torch.float64)
secont condition:: tensor(6.1135e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.4717e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7701e-08, dtype=torch.float64)
secont condition:: tensor(9.7701e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.6754e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5575e-07, dtype=torch.float64)
secont condition:: tensor(1.5575e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2465e-08, dtype=torch.float64)
secont condition:: tensor(6.2465e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3673e-07, dtype=torch.float64)
secont condition:: tensor(1.3673e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6772e-07, dtype=torch.float64)
secont condition:: tensor(1.6772e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2551e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.7901e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1539e-08, dtype=torch.float64)
secont condition:: tensor(5.1539e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.1258e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0063e-06, dtype=torch.float64)
secont condition:: tensor(1.0063e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8377e-08, dtype=torch.float64)
secont condition:: tensor(3.8377e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9660e-07, dtype=torch.float64)
secont condition:: tensor(9.9660e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3571e-07, dtype=torch.float64)
secont condition:: tensor(1.3571e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2615e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5698e-07, dtype=torch.float64)
secont condition:: tensor(5.5698e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3579e-08, dtype=torch.float64)
secont condition:: tensor(6.3579e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9381744861602783
curr_diff: 0 tensor(1.7813e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4597e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.3622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3197e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9207e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(3.6601e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.6902e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6242e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2299e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.7155e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.2880e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.2431e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.963700
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216720
Train - Epoch 0, Batch: 10, Loss: 0.150780
Train - Epoch 0, Batch: 20, Loss: 0.153152
Train - Epoch 0, Batch: 30, Loss: 0.136196
Train - Epoch 0, Batch: 40, Loss: 0.139349
Train - Epoch 0, Batch: 50, Loss: 0.140207
Test Avg. Loss: 0.000130, Accuracy: 0.964500
Train - Epoch 1, Batch: 0, Loss: 0.141101
Train - Epoch 1, Batch: 10, Loss: 0.143139
Train - Epoch 1, Batch: 20, Loss: 0.124966
Train - Epoch 1, Batch: 30, Loss: 0.134042
Train - Epoch 1, Batch: 40, Loss: 0.152453
Train - Epoch 1, Batch: 50, Loss: 0.150202
Test Avg. Loss: 0.000132, Accuracy: 0.963500
training_time:: 5.2343573570251465
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.228471755981445
time_baseline:: 4.233526945114136
curr_diff: 0 tensor(3.9044e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.7142e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1478e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.7745e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.8328e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.7337e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000132, Accuracy: 0.963600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5665e-33, dtype=torch.float64)
secont condition:: tensor(5.5665e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.8417e-32, dtype=torch.float64)
secont condition:: tensor(1.8417e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3464e-32, dtype=torch.float64)
secont condition:: tensor(2.3464e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.2389e-32, dtype=torch.float64)
secont condition:: tensor(3.2389e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0211e-32, dtype=torch.float64)
secont condition:: tensor(3.0211e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9595e-32, dtype=torch.float64)
secont condition:: tensor(3.9595e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.6324e-32, dtype=torch.float64)
secont condition:: tensor(4.6324e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.6390e-32, dtype=torch.float64)
secont condition:: tensor(4.6390e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.7300e-32, dtype=torch.float64)
secont condition:: tensor(5.7300e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.1239e-32, dtype=torch.float64)
secont condition:: tensor(6.1239e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.3873e-32, dtype=torch.float64)
secont condition:: tensor(5.3873e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2697e-10, dtype=torch.float64)
secont condition:: tensor(6.2697e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5878e-10, dtype=torch.float64)
secont condition:: tensor(1.5878e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.6398e-09, dtype=torch.float64)
secont condition:: tensor(1.6398e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7302e-08, dtype=torch.float64)
secont condition:: tensor(4.7302e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5320e-09, dtype=torch.float64)
secont condition:: tensor(1.5320e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.0678e-08, dtype=torch.float64)
secont condition:: tensor(7.0678e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6737e-08, dtype=torch.float64)
secont condition:: tensor(2.6737e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0549e-08, dtype=torch.float64)
secont condition:: tensor(1.0549e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0186e-09, dtype=torch.float64)
secont condition:: tensor(6.0186e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4545e-09, dtype=torch.float64)
secont condition:: tensor(3.4545e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.5661e-09, dtype=torch.float64)
secont condition:: tensor(2.5661e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6053e-09, dtype=torch.float64)
secont condition:: tensor(1.6053e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3045e-09, dtype=torch.float64)
secont condition:: tensor(1.3045e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2527e-09, dtype=torch.float64)
secont condition:: tensor(1.2527e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.7382e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.5117e-08, dtype=torch.float64)
secont condition:: tensor(1.5117e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4448e-08, dtype=torch.float64)
secont condition:: tensor(2.4448e-08, dtype=torch.float64)
curr_secont condition:: tensor(-6.7959e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6213e-09, dtype=torch.float64)
secont condition:: tensor(3.6213e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.9566e-09, dtype=torch.float64)
secont condition:: tensor(4.9566e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.0183e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4611e-09, dtype=torch.float64)
secont condition:: tensor(9.4611e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.3283e-09, dtype=torch.float64)
curr_secont condition:: tensor(-5.0674e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1784e-09, dtype=torch.float64)
secont condition:: tensor(6.1784e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2094e-07, dtype=torch.float64)
secont condition:: tensor(6.2094e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2632e-08, dtype=torch.float64)
secont condition:: tensor(4.2632e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4127e-08, dtype=torch.float64)
secont condition:: tensor(1.4127e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3475e-08, dtype=torch.float64)
secont condition:: tensor(2.3475e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.2014e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2481e-07, dtype=torch.float64)
secont condition:: tensor(4.2481e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9908e-07, dtype=torch.float64)
secont condition:: tensor(1.9908e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4594e-07, dtype=torch.float64)
secont condition:: tensor(1.4594e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6012e-07, dtype=torch.float64)
secont condition:: tensor(3.6012e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.1654e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5324e-07, dtype=torch.float64)
secont condition:: tensor(1.5324e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8774e-08, dtype=torch.float64)
secont condition:: tensor(3.8774e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7127e-08, dtype=torch.float64)
secont condition:: tensor(4.7127e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2809e-08, dtype=torch.float64)
secont condition:: tensor(5.2809e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3411e-08, dtype=torch.float64)
secont condition:: tensor(5.3411e-08, dtype=torch.float64)
curr_secont condition:: tensor(-8.7667e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0719e-07, dtype=torch.float64)
secont condition:: tensor(1.0719e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.8204e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3481e-08, dtype=torch.float64)
secont condition:: tensor(8.3481e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.1331e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1193e-07, dtype=torch.float64)
secont condition:: tensor(1.1193e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7427e-07, dtype=torch.float64)
secont condition:: tensor(1.7427e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.6928e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9700e-07, dtype=torch.float64)
secont condition:: tensor(6.9700e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5119e-07, dtype=torch.float64)
secont condition:: tensor(2.5119e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4280e-07, dtype=torch.float64)
secont condition:: tensor(1.4280e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2558e-07, dtype=torch.float64)
secont condition:: tensor(1.2558e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5476e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8166e-08, dtype=torch.float64)
secont condition:: tensor(7.8166e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2084e-07, dtype=torch.float64)
secont condition:: tensor(1.2084e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.9791e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7608e-08, dtype=torch.float64)
secont condition:: tensor(4.7608e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4779e-07, dtype=torch.float64)
secont condition:: tensor(1.4779e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0880e-06, dtype=torch.float64)
secont condition:: tensor(1.0880e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3240e-06, dtype=torch.float64)
secont condition:: tensor(1.3240e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4582e-07, dtype=torch.float64)
secont condition:: tensor(2.4582e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9533e-08, dtype=torch.float64)
secont condition:: tensor(9.9533e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0022e-07, dtype=torch.float64)
secont condition:: tensor(1.0022e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5369e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3577e-07, dtype=torch.float64)
secont condition:: tensor(3.3577e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.7833e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.5202e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4272e-07, dtype=torch.float64)
secont condition:: tensor(2.4272e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.9694e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2598e-08, dtype=torch.float64)
secont condition:: tensor(9.2598e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9328107833862305
curr_diff: 0 tensor(2.0654e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3020e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1002e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6043e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.1936e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.6370e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.9324e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9657e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2142e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2708e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.9891e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5296e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965600
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.204112
Train - Epoch 0, Batch: 10, Loss: 0.154419
Train - Epoch 0, Batch: 20, Loss: 0.145587
Train - Epoch 0, Batch: 30, Loss: 0.146301
Train - Epoch 0, Batch: 40, Loss: 0.131427
Train - Epoch 0, Batch: 50, Loss: 0.134074
Test Avg. Loss: 0.000131, Accuracy: 0.964800
Train - Epoch 1, Batch: 0, Loss: 0.169116
Train - Epoch 1, Batch: 10, Loss: 0.154755
Train - Epoch 1, Batch: 20, Loss: 0.126838
Train - Epoch 1, Batch: 30, Loss: 0.171206
Train - Epoch 1, Batch: 40, Loss: 0.137680
Train - Epoch 1, Batch: 50, Loss: 0.121757
Test Avg. Loss: 0.000130, Accuracy: 0.964800
training_time:: 5.268815040588379
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.234003782272339
time_baseline:: 4.2389843463897705
curr_diff: 0 tensor(3.6442e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2412e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3305e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3730e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1372e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.7216e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9286e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7413e-33, dtype=torch.float64)
secont condition:: tensor(7.7413e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.7867e-32, dtype=torch.float64)
secont condition:: tensor(1.7867e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.2876e-32, dtype=torch.float64)
secont condition:: tensor(1.2876e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.1305e-32, dtype=torch.float64)
secont condition:: tensor(2.1305e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.1699e-32, dtype=torch.float64)
secont condition:: tensor(3.1699e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6135e-32, dtype=torch.float64)
secont condition:: tensor(2.6135e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.6579e-32, dtype=torch.float64)
secont condition:: tensor(4.6579e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.5312e-32, dtype=torch.float64)
secont condition:: tensor(3.5312e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.1577e-32, dtype=torch.float64)
secont condition:: tensor(6.1577e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4559e-32, dtype=torch.float64)
secont condition:: tensor(4.4559e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.8064e-10, dtype=torch.float64)
secont condition:: tensor(2.8064e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.5917e-10, dtype=torch.float64)
secont condition:: tensor(2.5917e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.4906e-10, dtype=torch.float64)
secont condition:: tensor(1.4906e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.7232e-10, dtype=torch.float64)
secont condition:: tensor(3.7232e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.8350e-10, dtype=torch.float64)
secont condition:: tensor(4.8350e-10, dtype=torch.float64)
curr_secont condition:: tensor(3.0664e-10, dtype=torch.float64)
secont condition:: tensor(3.0664e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.0267e-10, dtype=torch.float64)
secont condition:: tensor(2.0267e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.0606e-10, dtype=torch.float64)
secont condition:: tensor(1.0606e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1909e-10, dtype=torch.float64)
secont condition:: tensor(2.1909e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2752e-10, dtype=torch.float64)
secont condition:: tensor(1.2752e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2168e-10, dtype=torch.float64)
secont condition:: tensor(1.2168e-10, dtype=torch.float64)
curr_secont condition:: tensor(9.6773e-11, dtype=torch.float64)
secont condition:: tensor(9.6773e-11, dtype=torch.float64)
curr_secont condition:: tensor(9.5899e-11, dtype=torch.float64)
secont condition:: tensor(9.5899e-11, dtype=torch.float64)
curr_secont condition:: tensor(5.9500e-09, dtype=torch.float64)
secont condition:: tensor(5.9500e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.7076e-10, dtype=torch.float64)
secont condition:: tensor(2.7076e-10, dtype=torch.float64)
curr_secont condition:: tensor(-1.4234e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4192e-10, dtype=torch.float64)
secont condition:: tensor(6.4192e-10, dtype=torch.float64)
curr_secont condition:: tensor(-2.2982e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0926e-09, dtype=torch.float64)
secont condition:: tensor(6.0926e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.9753e-10, dtype=torch.float64)
secont condition:: tensor(2.9753e-10, dtype=torch.float64)
curr_secont condition:: tensor(-5.4516e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4052e-09, dtype=torch.float64)
secont condition:: tensor(3.4052e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2771e-08, dtype=torch.float64)
secont condition:: tensor(1.2771e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0954e-09, dtype=torch.float64)
secont condition:: tensor(2.0954e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0202e-07, dtype=torch.float64)
secont condition:: tensor(1.0202e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5903e-08, dtype=torch.float64)
secont condition:: tensor(2.5903e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5403e-09, dtype=torch.float64)
secont condition:: tensor(8.5403e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3126e-08, dtype=torch.float64)
secont condition:: tensor(1.3126e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1948e-08, dtype=torch.float64)
secont condition:: tensor(2.1948e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9388e-07, dtype=torch.float64)
secont condition:: tensor(3.9388e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4537e-07, dtype=torch.float64)
secont condition:: tensor(2.4537e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2653e-07, dtype=torch.float64)
secont condition:: tensor(1.2653e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0695e-08, dtype=torch.float64)
secont condition:: tensor(5.0695e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8209e-08, dtype=torch.float64)
secont condition:: tensor(1.8209e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8164e-08, dtype=torch.float64)
secont condition:: tensor(1.8164e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1867e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9054e-08, dtype=torch.float64)
secont condition:: tensor(3.9054e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8981e-08, dtype=torch.float64)
secont condition:: tensor(2.8981e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5370e-08, dtype=torch.float64)
secont condition:: tensor(4.5370e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9863e-08, dtype=torch.float64)
secont condition:: tensor(3.9863e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9491e-07, dtype=torch.float64)
secont condition:: tensor(1.9491e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5679e-08, dtype=torch.float64)
secont condition:: tensor(4.5679e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.5758e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1467e-07, dtype=torch.float64)
secont condition:: tensor(1.1467e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8346e-07, dtype=torch.float64)
secont condition:: tensor(2.8346e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7075e-06, dtype=torch.float64)
secont condition:: tensor(1.7075e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5176e-08, dtype=torch.float64)
secont condition:: tensor(8.5176e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.9518e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6353e-07, dtype=torch.float64)
secont condition:: tensor(1.6353e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3760e-08, dtype=torch.float64)
secont condition:: tensor(5.3760e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4405e-08, dtype=torch.float64)
secont condition:: tensor(4.4405e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3177e-08, dtype=torch.float64)
secont condition:: tensor(6.3177e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3424e-08, dtype=torch.float64)
secont condition:: tensor(6.3424e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2069e-08, dtype=torch.float64)
secont condition:: tensor(1.2069e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.9384e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0065e-09, dtype=torch.float64)
secont condition:: tensor(2.0065e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.8934e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4028e-07, dtype=torch.float64)
secont condition:: tensor(1.4028e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6026e-08, dtype=torch.float64)
secont condition:: tensor(2.6026e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.5427e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3353e-07, dtype=torch.float64)
secont condition:: tensor(4.3353e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5203e-08, dtype=torch.float64)
secont condition:: tensor(9.5203e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2820e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3277e-08, dtype=torch.float64)
secont condition:: tensor(2.3277e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3782e-08, dtype=torch.float64)
secont condition:: tensor(1.3782e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0992e-07, dtype=torch.float64)
secont condition:: tensor(8.0992e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2887e-07, dtype=torch.float64)
secont condition:: tensor(5.2887e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0213e-07, dtype=torch.float64)
secont condition:: tensor(1.0213e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0091e-07, dtype=torch.float64)
secont condition:: tensor(1.0091e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8665e-08, dtype=torch.float64)
secont condition:: tensor(7.8665e-08, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9546265602111816
curr_diff: 0 tensor(1.4626e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5537e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6123e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.3747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0559e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8113e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.3349e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.0879e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.6380e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4552e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0805e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.4533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0295e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.229810
Train - Epoch 0, Batch: 10, Loss: 0.159116
Train - Epoch 0, Batch: 20, Loss: 0.167623
Train - Epoch 0, Batch: 30, Loss: 0.143073
Train - Epoch 0, Batch: 40, Loss: 0.146824
Train - Epoch 0, Batch: 50, Loss: 0.168480
Test Avg. Loss: 0.000131, Accuracy: 0.964300
Train - Epoch 1, Batch: 0, Loss: 0.140270
Train - Epoch 1, Batch: 10, Loss: 0.156518
Train - Epoch 1, Batch: 20, Loss: 0.138811
Train - Epoch 1, Batch: 30, Loss: 0.125557
Train - Epoch 1, Batch: 40, Loss: 0.160101
Train - Epoch 1, Batch: 50, Loss: 0.142698
Test Avg. Loss: 0.000130, Accuracy: 0.966000
training_time:: 5.221606731414795
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.211105108261108
time_baseline:: 4.222230911254883
curr_diff: 0 tensor(6.0464e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.6104e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.1794e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.7172e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0260e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.3539e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5320e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.966000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0686e-32, dtype=torch.float64)
secont condition:: tensor(1.0686e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.4433e-32, dtype=torch.float64)
secont condition:: tensor(1.4433e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.7762e-32, dtype=torch.float64)
secont condition:: tensor(2.7762e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5073e-32, dtype=torch.float64)
secont condition:: tensor(2.5073e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1723e-32, dtype=torch.float64)
secont condition:: tensor(5.1723e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6548e-32, dtype=torch.float64)
secont condition:: tensor(3.6548e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.6811e-07, dtype=torch.float64)
secont condition:: tensor(7.6811e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1819e-07, dtype=torch.float64)
secont condition:: tensor(3.1819e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1100e-07, dtype=torch.float64)
secont condition:: tensor(1.1100e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9984e-08, dtype=torch.float64)
secont condition:: tensor(7.9984e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1649e-08, dtype=torch.float64)
secont condition:: tensor(7.1649e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2410e-08, dtype=torch.float64)
secont condition:: tensor(4.2410e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3573e-08, dtype=torch.float64)
secont condition:: tensor(5.3573e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9527e-08, dtype=torch.float64)
secont condition:: tensor(2.9527e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7179e-08, dtype=torch.float64)
secont condition:: tensor(2.7179e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9623e-08, dtype=torch.float64)
secont condition:: tensor(1.9623e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8444e-08, dtype=torch.float64)
secont condition:: tensor(1.8444e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2550e-10, dtype=torch.float64)
secont condition:: tensor(6.2550e-10, dtype=torch.float64)
curr_secont condition:: tensor(1.2701e-08, dtype=torch.float64)
secont condition:: tensor(1.2701e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.2899e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0756e-08, dtype=torch.float64)
secont condition:: tensor(2.0756e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6548e-08, dtype=torch.float64)
secont condition:: tensor(2.6548e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6402e-08, dtype=torch.float64)
secont condition:: tensor(8.6402e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1316e-08, dtype=torch.float64)
secont condition:: tensor(1.1316e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1133e-08, dtype=torch.float64)
secont condition:: tensor(1.1133e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9341e-08, dtype=torch.float64)
secont condition:: tensor(4.9341e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2717e-08, dtype=torch.float64)
secont condition:: tensor(4.2717e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3743e-08, dtype=torch.float64)
secont condition:: tensor(1.3743e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2691e-07, dtype=torch.float64)
secont condition:: tensor(4.2691e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5787e-07, dtype=torch.float64)
secont condition:: tensor(1.5787e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8262e-08, dtype=torch.float64)
secont condition:: tensor(5.8262e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4195e-07, dtype=torch.float64)
secont condition:: tensor(1.4195e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1159e-08, dtype=torch.float64)
secont condition:: tensor(5.1159e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7884e-08, dtype=torch.float64)
secont condition:: tensor(5.7884e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1787e-08, dtype=torch.float64)
secont condition:: tensor(3.1787e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2016e-09, dtype=torch.float64)
secont condition:: tensor(8.2016e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0436e-08, dtype=torch.float64)
secont condition:: tensor(3.0436e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5950e-08, dtype=torch.float64)
secont condition:: tensor(1.5950e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0130e-08, dtype=torch.float64)
secont condition:: tensor(1.0130e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3969e-09, dtype=torch.float64)
secont condition:: tensor(9.3969e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.7741e-08, dtype=torch.float64)
secont condition:: tensor(4.7741e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4889e-08, dtype=torch.float64)
secont condition:: tensor(1.4889e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8684e-09, dtype=torch.float64)
secont condition:: tensor(2.8684e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7622e-09, dtype=torch.float64)
secont condition:: tensor(5.7622e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7986e-08, dtype=torch.float64)
secont condition:: tensor(1.7986e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7286e-09, dtype=torch.float64)
secont condition:: tensor(7.7286e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.7451e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0193e-08, dtype=torch.float64)
secont condition:: tensor(1.0193e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0340e-09, dtype=torch.float64)
secont condition:: tensor(8.0340e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0738e-08, dtype=torch.float64)
secont condition:: tensor(1.0738e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4945e-08, dtype=torch.float64)
secont condition:: tensor(1.4945e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9992e-09, dtype=torch.float64)
secont condition:: tensor(7.9992e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.1176e-08, dtype=torch.float64)
secont condition:: tensor(3.1176e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9958e-09, dtype=torch.float64)
secont condition:: tensor(8.9958e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7675e-09, dtype=torch.float64)
secont condition:: tensor(7.7675e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6216e-08, dtype=torch.float64)
secont condition:: tensor(1.6216e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0638e-08, dtype=torch.float64)
secont condition:: tensor(1.0638e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3041e-08, dtype=torch.float64)
secont condition:: tensor(2.3041e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5924e-09, dtype=torch.float64)
secont condition:: tensor(3.5924e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4213e-09, dtype=torch.float64)
secont condition:: tensor(5.4213e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6519e-08, dtype=torch.float64)
secont condition:: tensor(2.6519e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9429e-09, dtype=torch.float64)
secont condition:: tensor(1.9429e-09, dtype=torch.float64)
curr_secont condition:: tensor(9.5120e-09, dtype=torch.float64)
secont condition:: tensor(9.5120e-09, dtype=torch.float64)
curr_secont condition:: tensor(-3.6535e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.8085e-09, dtype=torch.float64)
secont condition:: tensor(7.8085e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.5475e-09, dtype=torch.float64)
secont condition:: tensor(8.5475e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.0554e-08, dtype=torch.float64)
secont condition:: tensor(5.0554e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0266e-10, dtype=torch.float64)
secont condition:: tensor(3.0266e-10, dtype=torch.float64)
curr_secont condition:: tensor(4.3854e-07, dtype=torch.float64)
secont condition:: tensor(4.3854e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3056e-07, dtype=torch.float64)
secont condition:: tensor(2.3056e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1301e-08, dtype=torch.float64)
secont condition:: tensor(8.1301e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1567e-08, dtype=torch.float64)
secont condition:: tensor(4.1567e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.9111e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8732e-07, dtype=torch.float64)
secont condition:: tensor(2.8732e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5051e-08, dtype=torch.float64)
secont condition:: tensor(1.5051e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0123e-08, dtype=torch.float64)
secont condition:: tensor(3.0123e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4731e-07, dtype=torch.float64)
secont condition:: tensor(8.4731e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6117e-07, dtype=torch.float64)
secont condition:: tensor(1.6117e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6683e-08, dtype=torch.float64)
secont condition:: tensor(6.6683e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4603e-07, dtype=torch.float64)
secont condition:: tensor(1.4603e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.916490077972412
curr_diff: 0 tensor(6.0430e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1463e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.8331e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.0580e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.8059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.4556e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(4.7657e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1092e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.1385e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2143e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.0778e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.1298e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.5042e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964700
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.172677
Train - Epoch 0, Batch: 10, Loss: 0.155843
Train - Epoch 0, Batch: 20, Loss: 0.156328
Train - Epoch 0, Batch: 30, Loss: 0.145703
Train - Epoch 0, Batch: 40, Loss: 0.146252
Train - Epoch 0, Batch: 50, Loss: 0.150027
Test Avg. Loss: 0.000131, Accuracy: 0.963400
Train - Epoch 1, Batch: 0, Loss: 0.145346
Train - Epoch 1, Batch: 10, Loss: 0.146428
Train - Epoch 1, Batch: 20, Loss: 0.130773
Train - Epoch 1, Batch: 30, Loss: 0.124999
Train - Epoch 1, Batch: 40, Loss: 0.128684
Train - Epoch 1, Batch: 50, Loss: 0.140121
Test Avg. Loss: 0.000130, Accuracy: 0.965900
training_time:: 5.235189199447632
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.221041679382324
time_baseline:: 4.225924253463745
curr_diff: 0 tensor(5.3226e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1989e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1722e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1432e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.7619e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.9531e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 12
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7229e-33, dtype=torch.float64)
secont condition:: tensor(4.7229e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.4899e-32, dtype=torch.float64)
secont condition:: tensor(1.4899e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2759e-32, dtype=torch.float64)
secont condition:: tensor(2.2759e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.0930e-32, dtype=torch.float64)
secont condition:: tensor(3.0930e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.2441e-32, dtype=torch.float64)
secont condition:: tensor(5.2441e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.1624e-32, dtype=torch.float64)
secont condition:: tensor(4.1624e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.6085e-32, dtype=torch.float64)
secont condition:: tensor(3.6085e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4664e-32, dtype=torch.float64)
secont condition:: tensor(4.4664e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.2840e-32, dtype=torch.float64)
secont condition:: tensor(6.2840e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.2758e-32, dtype=torch.float64)
secont condition:: tensor(7.2758e-32, dtype=torch.float64)
curr_secont condition:: tensor(6.7907e-32, dtype=torch.float64)
secont condition:: tensor(6.7907e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.2715e-32, dtype=torch.float64)
secont condition:: tensor(7.2715e-32, dtype=torch.float64)
curr_secont condition:: tensor(7.1059e-32, dtype=torch.float64)
secont condition:: tensor(7.1059e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4217e-32, dtype=torch.float64)
secont condition:: tensor(4.4217e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.5868e-10, dtype=torch.float64)
secont condition:: tensor(5.5868e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.3503e-10, dtype=torch.float64)
secont condition:: tensor(2.3503e-10, dtype=torch.float64)
curr_secont condition:: tensor(8.0473e-11, dtype=torch.float64)
secont condition:: tensor(8.0473e-11, dtype=torch.float64)
curr_secont condition:: tensor(6.5886e-11, dtype=torch.float64)
secont condition:: tensor(6.5886e-11, dtype=torch.float64)
curr_secont condition:: tensor(4.4532e-11, dtype=torch.float64)
secont condition:: tensor(4.4532e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.7861e-11, dtype=torch.float64)
secont condition:: tensor(3.7861e-11, dtype=torch.float64)
curr_secont condition:: tensor(3.0013e-11, dtype=torch.float64)
secont condition:: tensor(3.0013e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.4588e-11, dtype=torch.float64)
secont condition:: tensor(2.4588e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.8605e-11, dtype=torch.float64)
secont condition:: tensor(2.8605e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.1623e-11, dtype=torch.float64)
secont condition:: tensor(2.1623e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8606e-11, dtype=torch.float64)
secont condition:: tensor(1.8606e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.8026e-11, dtype=torch.float64)
secont condition:: tensor(1.8026e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.7673e-11, dtype=torch.float64)
secont condition:: tensor(1.7673e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.3714e-11, dtype=torch.float64)
secont condition:: tensor(1.3714e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.6851e-11, dtype=torch.float64)
secont condition:: tensor(1.6851e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2726e-11, dtype=torch.float64)
secont condition:: tensor(1.2726e-11, dtype=torch.float64)
curr_secont condition:: tensor(1.2295e-11, dtype=torch.float64)
secont condition:: tensor(1.2295e-11, dtype=torch.float64)
curr_secont condition:: tensor(2.7856e-07, dtype=torch.float64)
secont condition:: tensor(2.7856e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1030e-07, dtype=torch.float64)
secont condition:: tensor(1.1030e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6440e-08, dtype=torch.float64)
secont condition:: tensor(3.6440e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0264e-08, dtype=torch.float64)
secont condition:: tensor(4.0264e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4351e-07, dtype=torch.float64)
secont condition:: tensor(1.4351e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8134e-08, dtype=torch.float64)
secont condition:: tensor(3.8134e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9791e-08, dtype=torch.float64)
secont condition:: tensor(1.9791e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4108e-08, dtype=torch.float64)
secont condition:: tensor(1.4108e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6676e-09, dtype=torch.float64)
secont condition:: tensor(4.6676e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.0461e-09, dtype=torch.float64)
secont condition:: tensor(6.0461e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1557e-08, dtype=torch.float64)
secont condition:: tensor(1.1557e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1491e-09, dtype=torch.float64)
secont condition:: tensor(5.1491e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1107e-09, dtype=torch.float64)
secont condition:: tensor(4.1107e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1487e-09, dtype=torch.float64)
secont condition:: tensor(4.1487e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.4569e-09, dtype=torch.float64)
secont condition:: tensor(4.4569e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4240e-09, dtype=torch.float64)
secont condition:: tensor(5.4240e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.6183e-09, dtype=torch.float64)
secont condition:: tensor(2.6183e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7831e-08, dtype=torch.float64)
secont condition:: tensor(1.7831e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0472e-08, dtype=torch.float64)
secont condition:: tensor(1.0472e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1333e-09, dtype=torch.float64)
secont condition:: tensor(5.1333e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.2352e-07, dtype=torch.float64)
secont condition:: tensor(1.2352e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2629e-08, dtype=torch.float64)
secont condition:: tensor(5.2629e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0455e-07, dtype=torch.float64)
secont condition:: tensor(6.0455e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7424e-07, dtype=torch.float64)
secont condition:: tensor(1.7424e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9477e-08, dtype=torch.float64)
secont condition:: tensor(9.9477e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1164e-08, dtype=torch.float64)
secont condition:: tensor(5.1164e-08, dtype=torch.float64)
curr_secont condition:: tensor(-3.3441e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3746e-08, dtype=torch.float64)
secont condition:: tensor(2.3746e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4886e-08, dtype=torch.float64)
secont condition:: tensor(1.4886e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2843e-08, dtype=torch.float64)
secont condition:: tensor(3.2843e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0322e-07, dtype=torch.float64)
secont condition:: tensor(5.0322e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9187e-08, dtype=torch.float64)
secont condition:: tensor(8.9187e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9039e-08, dtype=torch.float64)
secont condition:: tensor(4.9039e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8840e-08, dtype=torch.float64)
secont condition:: tensor(4.8840e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7900e-08, dtype=torch.float64)
secont condition:: tensor(2.7900e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5852e-07, dtype=torch.float64)
secont condition:: tensor(1.5852e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5469e-09, dtype=torch.float64)
secont condition:: tensor(4.5469e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.8882e-08, dtype=torch.float64)
secont condition:: tensor(6.8882e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6979e-07, dtype=torch.float64)
secont condition:: tensor(1.6979e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0706e-08, dtype=torch.float64)
secont condition:: tensor(2.0706e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1305e-07, dtype=torch.float64)
secont condition:: tensor(2.1305e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7699e-08, dtype=torch.float64)
secont condition:: tensor(1.7699e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6289e-08, dtype=torch.float64)
secont condition:: tensor(5.6289e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2945e-08, dtype=torch.float64)
secont condition:: tensor(2.2945e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3265e-08, dtype=torch.float64)
secont condition:: tensor(7.3265e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6985e-08, dtype=torch.float64)
secont condition:: tensor(6.6985e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0464e-07, dtype=torch.float64)
secont condition:: tensor(1.0464e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.9217662811279297
curr_diff: 0 tensor(3.6409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5689e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.9978e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(8.7546e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.7616e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.7614e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3036e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(2.7462e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8694e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1106e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1574e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.2474e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.5217e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0006, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965100
deletion rate:: 0.0005
python3 generate_rand_ids 0.0005  MNIST 0
tensor([44229, 53191, 57735, 38986, 18635, 50634, 48716, 28430, 22159, 37328,
        24914, 51411, 25046, 53143, 10456, 29466, 10338, 25700,  3621, 32679,
        43370, 19820, 54509,  1329, 36721, 51574, 25590, 10746,  7102, 24383])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 248.61794233322144
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.36180233955383
time_baseline:: 163.62968921661377
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3588e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7874e-08, dtype=torch.float64)
secont condition:: tensor(2.7874e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9363e-08, dtype=torch.float64)
secont condition:: tensor(2.9363e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6500e-08, dtype=torch.float64)
secont condition:: tensor(3.6500e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3511e-08, dtype=torch.float64)
secont condition:: tensor(3.3511e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9354e-08, dtype=torch.float64)
secont condition:: tensor(2.9354e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3721e-08, dtype=torch.float64)
secont condition:: tensor(3.3721e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4873e-08, dtype=torch.float64)
secont condition:: tensor(3.4873e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6446e-08, dtype=torch.float64)
secont condition:: tensor(3.6446e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7309e-08, dtype=torch.float64)
secont condition:: tensor(3.7309e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8513e-08, dtype=torch.float64)
secont condition:: tensor(3.8513e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7357e-08, dtype=torch.float64)
secont condition:: tensor(3.7357e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6745e-08, dtype=torch.float64)
secont condition:: tensor(3.6745e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7865e-08, dtype=torch.float64)
secont condition:: tensor(4.7865e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6915e-08, dtype=torch.float64)
secont condition:: tensor(4.6915e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5378e-08, dtype=torch.float64)
secont condition:: tensor(4.5378e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8185e-08, dtype=torch.float64)
secont condition:: tensor(5.8185e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4662e-08, dtype=torch.float64)
secont condition:: tensor(5.4662e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4311e-08, dtype=torch.float64)
secont condition:: tensor(5.4311e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9644e-08, dtype=torch.float64)
secont condition:: tensor(5.9644e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6146e-08, dtype=torch.float64)
secont condition:: tensor(5.6146e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1455e-08, dtype=torch.float64)
secont condition:: tensor(6.1455e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1408e-08, dtype=torch.float64)
secont condition:: tensor(6.1408e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2181e-08, dtype=torch.float64)
secont condition:: tensor(6.2181e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9095e-08, dtype=torch.float64)
secont condition:: tensor(6.9095e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0019e-08, dtype=torch.float64)
secont condition:: tensor(7.0019e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3051e-08, dtype=torch.float64)
secont condition:: tensor(6.3051e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5493e-08, dtype=torch.float64)
secont condition:: tensor(7.5493e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1659e-08, dtype=torch.float64)
secont condition:: tensor(7.1659e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9988e-08, dtype=torch.float64)
secont condition:: tensor(6.9988e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0018e-08, dtype=torch.float64)
secont condition:: tensor(8.0018e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7448e-08, dtype=torch.float64)
secont condition:: tensor(7.7448e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0878e-08, dtype=torch.float64)
secont condition:: tensor(8.0878e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3127e-08, dtype=torch.float64)
secont condition:: tensor(7.3127e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2549e-08, dtype=torch.float64)
secont condition:: tensor(9.2549e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9780e-08, dtype=torch.float64)
secont condition:: tensor(8.9780e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6419e-08, dtype=torch.float64)
secont condition:: tensor(9.6419e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9044e-06, dtype=torch.float64)
secont condition:: tensor(3.9044e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-07, dtype=torch.float64)
secont condition:: tensor(1.0228e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0158e-07, dtype=torch.float64)
secont condition:: tensor(1.0158e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4254e-08, dtype=torch.float64)
secont condition:: tensor(9.4254e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2135e-08, dtype=torch.float64)
secont condition:: tensor(9.2135e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1092e-07, dtype=torch.float64)
secont condition:: tensor(1.1092e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0281e-07, dtype=torch.float64)
secont condition:: tensor(1.0281e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0143e-07, dtype=torch.float64)
secont condition:: tensor(1.0143e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2770e-08, dtype=torch.float64)
secont condition:: tensor(9.2770e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1989e-07, dtype=torch.float64)
secont condition:: tensor(1.1989e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0983e-07, dtype=torch.float64)
secont condition:: tensor(1.0983e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1523e-07, dtype=torch.float64)
secont condition:: tensor(1.1523e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1891e-07, dtype=torch.float64)
secont condition:: tensor(1.1891e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1230e-07, dtype=torch.float64)
secont condition:: tensor(1.1230e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1910e-07, dtype=torch.float64)
secont condition:: tensor(1.1910e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1759e-07, dtype=torch.float64)
secont condition:: tensor(1.1759e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2897e-07, dtype=torch.float64)
secont condition:: tensor(1.2897e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1892e-07, dtype=torch.float64)
secont condition:: tensor(1.1892e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-07, dtype=torch.float64)
secont condition:: tensor(1.3010e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3041e-07, dtype=torch.float64)
secont condition:: tensor(1.3041e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3445e-07, dtype=torch.float64)
secont condition:: tensor(1.3445e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-07, dtype=torch.float64)
secont condition:: tensor(1.2950e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6549e-07, dtype=torch.float64)
secont condition:: tensor(1.6549e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6665e-07, dtype=torch.float64)
secont condition:: tensor(1.6665e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6365e-07, dtype=torch.float64)
secont condition:: tensor(1.6365e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6305e-07, dtype=torch.float64)
secont condition:: tensor(1.6305e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7025e-07, dtype=torch.float64)
secont condition:: tensor(1.7025e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6012e-07, dtype=torch.float64)
secont condition:: tensor(1.6012e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8283e-07, dtype=torch.float64)
secont condition:: tensor(1.8283e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9285e-07, dtype=torch.float64)
secont condition:: tensor(1.9285e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7941e-07, dtype=torch.float64)
secont condition:: tensor(1.7941e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-07, dtype=torch.float64)
secont condition:: tensor(1.7501e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0554e-07, dtype=torch.float64)
secont condition:: tensor(2.0554e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0505e-07, dtype=torch.float64)
secont condition:: tensor(2.0505e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2886e-07, dtype=torch.float64)
secont condition:: tensor(2.2886e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 116.93146753311157
curr_diff: 0 tensor(5.7975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1477e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.4413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1425e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5183e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.00095629692078
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.02797722816467
time_baseline:: 163.29265475273132
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3588e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7874e-08, dtype=torch.float64)
secont condition:: tensor(2.7874e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9363e-08, dtype=torch.float64)
secont condition:: tensor(2.9363e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6500e-08, dtype=torch.float64)
secont condition:: tensor(3.6500e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3511e-08, dtype=torch.float64)
secont condition:: tensor(3.3511e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9354e-08, dtype=torch.float64)
secont condition:: tensor(2.9354e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3721e-08, dtype=torch.float64)
secont condition:: tensor(3.3721e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4873e-08, dtype=torch.float64)
secont condition:: tensor(3.4873e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6446e-08, dtype=torch.float64)
secont condition:: tensor(3.6446e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7309e-08, dtype=torch.float64)
secont condition:: tensor(3.7309e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8513e-08, dtype=torch.float64)
secont condition:: tensor(3.8513e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7357e-08, dtype=torch.float64)
secont condition:: tensor(3.7357e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6745e-08, dtype=torch.float64)
secont condition:: tensor(3.6745e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7865e-08, dtype=torch.float64)
secont condition:: tensor(4.7865e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6915e-08, dtype=torch.float64)
secont condition:: tensor(4.6915e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5378e-08, dtype=torch.float64)
secont condition:: tensor(4.5378e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8185e-08, dtype=torch.float64)
secont condition:: tensor(5.8185e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4662e-08, dtype=torch.float64)
secont condition:: tensor(5.4662e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4311e-08, dtype=torch.float64)
secont condition:: tensor(5.4311e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9644e-08, dtype=torch.float64)
secont condition:: tensor(5.9644e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6146e-08, dtype=torch.float64)
secont condition:: tensor(5.6146e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1455e-08, dtype=torch.float64)
secont condition:: tensor(6.1455e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1408e-08, dtype=torch.float64)
secont condition:: tensor(6.1408e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2181e-08, dtype=torch.float64)
secont condition:: tensor(6.2181e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9095e-08, dtype=torch.float64)
secont condition:: tensor(6.9095e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0019e-08, dtype=torch.float64)
secont condition:: tensor(7.0019e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3051e-08, dtype=torch.float64)
secont condition:: tensor(6.3051e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5493e-08, dtype=torch.float64)
secont condition:: tensor(7.5493e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1659e-08, dtype=torch.float64)
secont condition:: tensor(7.1659e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9988e-08, dtype=torch.float64)
secont condition:: tensor(6.9988e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0018e-08, dtype=torch.float64)
secont condition:: tensor(8.0018e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7448e-08, dtype=torch.float64)
secont condition:: tensor(7.7448e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0878e-08, dtype=torch.float64)
secont condition:: tensor(8.0878e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3127e-08, dtype=torch.float64)
secont condition:: tensor(7.3127e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2549e-08, dtype=torch.float64)
secont condition:: tensor(9.2549e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9780e-08, dtype=torch.float64)
secont condition:: tensor(8.9780e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6419e-08, dtype=torch.float64)
secont condition:: tensor(9.6419e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9044e-06, dtype=torch.float64)
secont condition:: tensor(3.9044e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-07, dtype=torch.float64)
secont condition:: tensor(1.0228e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0158e-07, dtype=torch.float64)
secont condition:: tensor(1.0158e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4254e-08, dtype=torch.float64)
secont condition:: tensor(9.4254e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2135e-08, dtype=torch.float64)
secont condition:: tensor(9.2135e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1092e-07, dtype=torch.float64)
secont condition:: tensor(1.1092e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0281e-07, dtype=torch.float64)
secont condition:: tensor(1.0281e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0143e-07, dtype=torch.float64)
secont condition:: tensor(1.0143e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2770e-08, dtype=torch.float64)
secont condition:: tensor(9.2770e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1989e-07, dtype=torch.float64)
secont condition:: tensor(1.1989e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0983e-07, dtype=torch.float64)
secont condition:: tensor(1.0983e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1523e-07, dtype=torch.float64)
secont condition:: tensor(1.1523e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1891e-07, dtype=torch.float64)
secont condition:: tensor(1.1891e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1230e-07, dtype=torch.float64)
secont condition:: tensor(1.1230e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1910e-07, dtype=torch.float64)
secont condition:: tensor(1.1910e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1759e-07, dtype=torch.float64)
secont condition:: tensor(1.1759e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2897e-07, dtype=torch.float64)
secont condition:: tensor(1.2897e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1892e-07, dtype=torch.float64)
secont condition:: tensor(1.1892e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-07, dtype=torch.float64)
secont condition:: tensor(1.3010e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3041e-07, dtype=torch.float64)
secont condition:: tensor(1.3041e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3445e-07, dtype=torch.float64)
secont condition:: tensor(1.3445e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-07, dtype=torch.float64)
secont condition:: tensor(1.2950e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6549e-07, dtype=torch.float64)
secont condition:: tensor(1.6549e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6665e-07, dtype=torch.float64)
secont condition:: tensor(1.6665e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6365e-07, dtype=torch.float64)
secont condition:: tensor(1.6365e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6305e-07, dtype=torch.float64)
secont condition:: tensor(1.6305e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7025e-07, dtype=torch.float64)
secont condition:: tensor(1.7025e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6012e-07, dtype=torch.float64)
secont condition:: tensor(1.6012e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8283e-07, dtype=torch.float64)
secont condition:: tensor(1.8283e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9285e-07, dtype=torch.float64)
secont condition:: tensor(1.9285e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7941e-07, dtype=torch.float64)
secont condition:: tensor(1.7941e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-07, dtype=torch.float64)
secont condition:: tensor(1.7501e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0554e-07, dtype=torch.float64)
secont condition:: tensor(2.0554e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0505e-07, dtype=torch.float64)
secont condition:: tensor(2.0505e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2886e-07, dtype=torch.float64)
secont condition:: tensor(2.2886e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.14611077308655
curr_diff: 0 tensor(5.7975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1477e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.4413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1425e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5183e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.66245913505554
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.2151951789856
time_baseline:: 163.48402738571167
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3588e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7874e-08, dtype=torch.float64)
secont condition:: tensor(2.7874e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9363e-08, dtype=torch.float64)
secont condition:: tensor(2.9363e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6500e-08, dtype=torch.float64)
secont condition:: tensor(3.6500e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3511e-08, dtype=torch.float64)
secont condition:: tensor(3.3511e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9354e-08, dtype=torch.float64)
secont condition:: tensor(2.9354e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3721e-08, dtype=torch.float64)
secont condition:: tensor(3.3721e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4873e-08, dtype=torch.float64)
secont condition:: tensor(3.4873e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6446e-08, dtype=torch.float64)
secont condition:: tensor(3.6446e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7309e-08, dtype=torch.float64)
secont condition:: tensor(3.7309e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8513e-08, dtype=torch.float64)
secont condition:: tensor(3.8513e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7357e-08, dtype=torch.float64)
secont condition:: tensor(3.7357e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6745e-08, dtype=torch.float64)
secont condition:: tensor(3.6745e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7865e-08, dtype=torch.float64)
secont condition:: tensor(4.7865e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6915e-08, dtype=torch.float64)
secont condition:: tensor(4.6915e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5378e-08, dtype=torch.float64)
secont condition:: tensor(4.5378e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8185e-08, dtype=torch.float64)
secont condition:: tensor(5.8185e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4662e-08, dtype=torch.float64)
secont condition:: tensor(5.4662e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4311e-08, dtype=torch.float64)
secont condition:: tensor(5.4311e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9644e-08, dtype=torch.float64)
secont condition:: tensor(5.9644e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6146e-08, dtype=torch.float64)
secont condition:: tensor(5.6146e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1455e-08, dtype=torch.float64)
secont condition:: tensor(6.1455e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1408e-08, dtype=torch.float64)
secont condition:: tensor(6.1408e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2181e-08, dtype=torch.float64)
secont condition:: tensor(6.2181e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9095e-08, dtype=torch.float64)
secont condition:: tensor(6.9095e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0019e-08, dtype=torch.float64)
secont condition:: tensor(7.0019e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3051e-08, dtype=torch.float64)
secont condition:: tensor(6.3051e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5493e-08, dtype=torch.float64)
secont condition:: tensor(7.5493e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1659e-08, dtype=torch.float64)
secont condition:: tensor(7.1659e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9988e-08, dtype=torch.float64)
secont condition:: tensor(6.9988e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0018e-08, dtype=torch.float64)
secont condition:: tensor(8.0018e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7448e-08, dtype=torch.float64)
secont condition:: tensor(7.7448e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0878e-08, dtype=torch.float64)
secont condition:: tensor(8.0878e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3127e-08, dtype=torch.float64)
secont condition:: tensor(7.3127e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2549e-08, dtype=torch.float64)
secont condition:: tensor(9.2549e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9780e-08, dtype=torch.float64)
secont condition:: tensor(8.9780e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6419e-08, dtype=torch.float64)
secont condition:: tensor(9.6419e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9044e-06, dtype=torch.float64)
secont condition:: tensor(3.9044e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-07, dtype=torch.float64)
secont condition:: tensor(1.0228e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0158e-07, dtype=torch.float64)
secont condition:: tensor(1.0158e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4254e-08, dtype=torch.float64)
secont condition:: tensor(9.4254e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2135e-08, dtype=torch.float64)
secont condition:: tensor(9.2135e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1092e-07, dtype=torch.float64)
secont condition:: tensor(1.1092e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0281e-07, dtype=torch.float64)
secont condition:: tensor(1.0281e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0143e-07, dtype=torch.float64)
secont condition:: tensor(1.0143e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2770e-08, dtype=torch.float64)
secont condition:: tensor(9.2770e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1989e-07, dtype=torch.float64)
secont condition:: tensor(1.1989e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0983e-07, dtype=torch.float64)
secont condition:: tensor(1.0983e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1523e-07, dtype=torch.float64)
secont condition:: tensor(1.1523e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1891e-07, dtype=torch.float64)
secont condition:: tensor(1.1891e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1230e-07, dtype=torch.float64)
secont condition:: tensor(1.1230e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1910e-07, dtype=torch.float64)
secont condition:: tensor(1.1910e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1759e-07, dtype=torch.float64)
secont condition:: tensor(1.1759e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2897e-07, dtype=torch.float64)
secont condition:: tensor(1.2897e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1892e-07, dtype=torch.float64)
secont condition:: tensor(1.1892e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-07, dtype=torch.float64)
secont condition:: tensor(1.3010e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3041e-07, dtype=torch.float64)
secont condition:: tensor(1.3041e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3445e-07, dtype=torch.float64)
secont condition:: tensor(1.3445e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-07, dtype=torch.float64)
secont condition:: tensor(1.2950e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6549e-07, dtype=torch.float64)
secont condition:: tensor(1.6549e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6665e-07, dtype=torch.float64)
secont condition:: tensor(1.6665e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6365e-07, dtype=torch.float64)
secont condition:: tensor(1.6365e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6305e-07, dtype=torch.float64)
secont condition:: tensor(1.6305e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7025e-07, dtype=torch.float64)
secont condition:: tensor(1.7025e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6012e-07, dtype=torch.float64)
secont condition:: tensor(1.6012e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8283e-07, dtype=torch.float64)
secont condition:: tensor(1.8283e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9285e-07, dtype=torch.float64)
secont condition:: tensor(1.9285e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7941e-07, dtype=torch.float64)
secont condition:: tensor(1.7941e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-07, dtype=torch.float64)
secont condition:: tensor(1.7501e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0554e-07, dtype=torch.float64)
secont condition:: tensor(2.0554e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0505e-07, dtype=torch.float64)
secont condition:: tensor(2.0505e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2886e-07, dtype=torch.float64)
secont condition:: tensor(2.2886e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.1078269481659
curr_diff: 0 tensor(5.7975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1477e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.4413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1425e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5183e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.95450520515442
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.09952211380005
time_baseline:: 163.3649938106537
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3588e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7874e-08, dtype=torch.float64)
secont condition:: tensor(2.7874e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9363e-08, dtype=torch.float64)
secont condition:: tensor(2.9363e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6500e-08, dtype=torch.float64)
secont condition:: tensor(3.6500e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3511e-08, dtype=torch.float64)
secont condition:: tensor(3.3511e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9354e-08, dtype=torch.float64)
secont condition:: tensor(2.9354e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3721e-08, dtype=torch.float64)
secont condition:: tensor(3.3721e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4873e-08, dtype=torch.float64)
secont condition:: tensor(3.4873e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6446e-08, dtype=torch.float64)
secont condition:: tensor(3.6446e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7309e-08, dtype=torch.float64)
secont condition:: tensor(3.7309e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8513e-08, dtype=torch.float64)
secont condition:: tensor(3.8513e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7357e-08, dtype=torch.float64)
secont condition:: tensor(3.7357e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6745e-08, dtype=torch.float64)
secont condition:: tensor(3.6745e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7865e-08, dtype=torch.float64)
secont condition:: tensor(4.7865e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6915e-08, dtype=torch.float64)
secont condition:: tensor(4.6915e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5378e-08, dtype=torch.float64)
secont condition:: tensor(4.5378e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8185e-08, dtype=torch.float64)
secont condition:: tensor(5.8185e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4662e-08, dtype=torch.float64)
secont condition:: tensor(5.4662e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4311e-08, dtype=torch.float64)
secont condition:: tensor(5.4311e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9644e-08, dtype=torch.float64)
secont condition:: tensor(5.9644e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6146e-08, dtype=torch.float64)
secont condition:: tensor(5.6146e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1455e-08, dtype=torch.float64)
secont condition:: tensor(6.1455e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1408e-08, dtype=torch.float64)
secont condition:: tensor(6.1408e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2181e-08, dtype=torch.float64)
secont condition:: tensor(6.2181e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9095e-08, dtype=torch.float64)
secont condition:: tensor(6.9095e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0019e-08, dtype=torch.float64)
secont condition:: tensor(7.0019e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3051e-08, dtype=torch.float64)
secont condition:: tensor(6.3051e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5493e-08, dtype=torch.float64)
secont condition:: tensor(7.5493e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1659e-08, dtype=torch.float64)
secont condition:: tensor(7.1659e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9988e-08, dtype=torch.float64)
secont condition:: tensor(6.9988e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0018e-08, dtype=torch.float64)
secont condition:: tensor(8.0018e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7448e-08, dtype=torch.float64)
secont condition:: tensor(7.7448e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0878e-08, dtype=torch.float64)
secont condition:: tensor(8.0878e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3127e-08, dtype=torch.float64)
secont condition:: tensor(7.3127e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2549e-08, dtype=torch.float64)
secont condition:: tensor(9.2549e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9780e-08, dtype=torch.float64)
secont condition:: tensor(8.9780e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6419e-08, dtype=torch.float64)
secont condition:: tensor(9.6419e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9044e-06, dtype=torch.float64)
secont condition:: tensor(3.9044e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-07, dtype=torch.float64)
secont condition:: tensor(1.0228e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0158e-07, dtype=torch.float64)
secont condition:: tensor(1.0158e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4254e-08, dtype=torch.float64)
secont condition:: tensor(9.4254e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2135e-08, dtype=torch.float64)
secont condition:: tensor(9.2135e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1092e-07, dtype=torch.float64)
secont condition:: tensor(1.1092e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0281e-07, dtype=torch.float64)
secont condition:: tensor(1.0281e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0143e-07, dtype=torch.float64)
secont condition:: tensor(1.0143e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2770e-08, dtype=torch.float64)
secont condition:: tensor(9.2770e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1989e-07, dtype=torch.float64)
secont condition:: tensor(1.1989e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0983e-07, dtype=torch.float64)
secont condition:: tensor(1.0983e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1523e-07, dtype=torch.float64)
secont condition:: tensor(1.1523e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1891e-07, dtype=torch.float64)
secont condition:: tensor(1.1891e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1230e-07, dtype=torch.float64)
secont condition:: tensor(1.1230e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1910e-07, dtype=torch.float64)
secont condition:: tensor(1.1910e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1759e-07, dtype=torch.float64)
secont condition:: tensor(1.1759e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2897e-07, dtype=torch.float64)
secont condition:: tensor(1.2897e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1892e-07, dtype=torch.float64)
secont condition:: tensor(1.1892e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-07, dtype=torch.float64)
secont condition:: tensor(1.3010e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3041e-07, dtype=torch.float64)
secont condition:: tensor(1.3041e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3445e-07, dtype=torch.float64)
secont condition:: tensor(1.3445e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-07, dtype=torch.float64)
secont condition:: tensor(1.2950e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6549e-07, dtype=torch.float64)
secont condition:: tensor(1.6549e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6665e-07, dtype=torch.float64)
secont condition:: tensor(1.6665e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6365e-07, dtype=torch.float64)
secont condition:: tensor(1.6365e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6305e-07, dtype=torch.float64)
secont condition:: tensor(1.6305e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7025e-07, dtype=torch.float64)
secont condition:: tensor(1.7025e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6012e-07, dtype=torch.float64)
secont condition:: tensor(1.6012e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8283e-07, dtype=torch.float64)
secont condition:: tensor(1.8283e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9285e-07, dtype=torch.float64)
secont condition:: tensor(1.9285e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7941e-07, dtype=torch.float64)
secont condition:: tensor(1.7941e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-07, dtype=torch.float64)
secont condition:: tensor(1.7501e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0554e-07, dtype=torch.float64)
secont condition:: tensor(2.0554e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0505e-07, dtype=torch.float64)
secont condition:: tensor(2.0505e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2886e-07, dtype=torch.float64)
secont condition:: tensor(2.2886e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.05674910545349
curr_diff: 0 tensor(5.7975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1477e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.4413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1425e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5183e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.66450142860413
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.09874629974365
time_baseline:: 163.37311148643494
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9585e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3588e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3533e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 30
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4517e-08, dtype=torch.float64)
secont condition:: tensor(1.4517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7874e-08, dtype=torch.float64)
secont condition:: tensor(2.7874e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9363e-08, dtype=torch.float64)
secont condition:: tensor(2.9363e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6500e-08, dtype=torch.float64)
secont condition:: tensor(3.6500e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3511e-08, dtype=torch.float64)
secont condition:: tensor(3.3511e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9354e-08, dtype=torch.float64)
secont condition:: tensor(2.9354e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3721e-08, dtype=torch.float64)
secont condition:: tensor(3.3721e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4873e-08, dtype=torch.float64)
secont condition:: tensor(3.4873e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6446e-08, dtype=torch.float64)
secont condition:: tensor(3.6446e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7309e-08, dtype=torch.float64)
secont condition:: tensor(3.7309e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8513e-08, dtype=torch.float64)
secont condition:: tensor(3.8513e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7357e-08, dtype=torch.float64)
secont condition:: tensor(3.7357e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6745e-08, dtype=torch.float64)
secont condition:: tensor(3.6745e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7865e-08, dtype=torch.float64)
secont condition:: tensor(4.7865e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6915e-08, dtype=torch.float64)
secont condition:: tensor(4.6915e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5378e-08, dtype=torch.float64)
secont condition:: tensor(4.5378e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8185e-08, dtype=torch.float64)
secont condition:: tensor(5.8185e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4662e-08, dtype=torch.float64)
secont condition:: tensor(5.4662e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4311e-08, dtype=torch.float64)
secont condition:: tensor(5.4311e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9644e-08, dtype=torch.float64)
secont condition:: tensor(5.9644e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6146e-08, dtype=torch.float64)
secont condition:: tensor(5.6146e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1455e-08, dtype=torch.float64)
secont condition:: tensor(6.1455e-08, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1408e-08, dtype=torch.float64)
secont condition:: tensor(6.1408e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2181e-08, dtype=torch.float64)
secont condition:: tensor(6.2181e-08, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9095e-08, dtype=torch.float64)
secont condition:: tensor(6.9095e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0019e-08, dtype=torch.float64)
secont condition:: tensor(7.0019e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3051e-08, dtype=torch.float64)
secont condition:: tensor(6.3051e-08, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5493e-08, dtype=torch.float64)
secont condition:: tensor(7.5493e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1659e-08, dtype=torch.float64)
secont condition:: tensor(7.1659e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9988e-08, dtype=torch.float64)
secont condition:: tensor(6.9988e-08, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0018e-08, dtype=torch.float64)
secont condition:: tensor(8.0018e-08, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7448e-08, dtype=torch.float64)
secont condition:: tensor(7.7448e-08, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0878e-08, dtype=torch.float64)
secont condition:: tensor(8.0878e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3127e-08, dtype=torch.float64)
secont condition:: tensor(7.3127e-08, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2549e-08, dtype=torch.float64)
secont condition:: tensor(9.2549e-08, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9780e-08, dtype=torch.float64)
secont condition:: tensor(8.9780e-08, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6419e-08, dtype=torch.float64)
secont condition:: tensor(9.6419e-08, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9044e-06, dtype=torch.float64)
secont condition:: tensor(3.9044e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0228e-07, dtype=torch.float64)
secont condition:: tensor(1.0228e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0158e-07, dtype=torch.float64)
secont condition:: tensor(1.0158e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4254e-08, dtype=torch.float64)
secont condition:: tensor(9.4254e-08, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2135e-08, dtype=torch.float64)
secont condition:: tensor(9.2135e-08, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1092e-07, dtype=torch.float64)
secont condition:: tensor(1.1092e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0281e-07, dtype=torch.float64)
secont condition:: tensor(1.0281e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0143e-07, dtype=torch.float64)
secont condition:: tensor(1.0143e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2770e-08, dtype=torch.float64)
secont condition:: tensor(9.2770e-08, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1989e-07, dtype=torch.float64)
secont condition:: tensor(1.1989e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0983e-07, dtype=torch.float64)
secont condition:: tensor(1.0983e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1523e-07, dtype=torch.float64)
secont condition:: tensor(1.1523e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1891e-07, dtype=torch.float64)
secont condition:: tensor(1.1891e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1230e-07, dtype=torch.float64)
secont condition:: tensor(1.1230e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1910e-07, dtype=torch.float64)
secont condition:: tensor(1.1910e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0687e-07, dtype=torch.float64)
secont condition:: tensor(1.0687e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1759e-07, dtype=torch.float64)
secont condition:: tensor(1.1759e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2415e-07, dtype=torch.float64)
secont condition:: tensor(1.2415e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2264e-07, dtype=torch.float64)
secont condition:: tensor(1.2264e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2897e-07, dtype=torch.float64)
secont condition:: tensor(1.2897e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1892e-07, dtype=torch.float64)
secont condition:: tensor(1.1892e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3010e-07, dtype=torch.float64)
secont condition:: tensor(1.3010e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2815e-07, dtype=torch.float64)
secont condition:: tensor(1.2815e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3041e-07, dtype=torch.float64)
secont condition:: tensor(1.3041e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3445e-07, dtype=torch.float64)
secont condition:: tensor(1.3445e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2950e-07, dtype=torch.float64)
secont condition:: tensor(1.2950e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6549e-07, dtype=torch.float64)
secont condition:: tensor(1.6549e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6665e-07, dtype=torch.float64)
secont condition:: tensor(1.6665e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6365e-07, dtype=torch.float64)
secont condition:: tensor(1.6365e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6305e-07, dtype=torch.float64)
secont condition:: tensor(1.6305e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7300e-07, dtype=torch.float64)
secont condition:: tensor(1.7300e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7025e-07, dtype=torch.float64)
secont condition:: tensor(1.7025e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6012e-07, dtype=torch.float64)
secont condition:: tensor(1.6012e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8283e-07, dtype=torch.float64)
secont condition:: tensor(1.8283e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9285e-07, dtype=torch.float64)
secont condition:: tensor(1.9285e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7941e-07, dtype=torch.float64)
secont condition:: tensor(1.7941e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1534e-07, dtype=torch.float64)
secont condition:: tensor(2.1534e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7501e-07, dtype=torch.float64)
secont condition:: tensor(1.7501e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0554e-07, dtype=torch.float64)
secont condition:: tensor(2.0554e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0505e-07, dtype=torch.float64)
secont condition:: tensor(2.0505e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2886e-07, dtype=torch.float64)
secont condition:: tensor(2.2886e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1677e-07, dtype=torch.float64)
secont condition:: tensor(2.1677e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.04998564720154
curr_diff: 0 tensor(5.7975e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.1477e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(4.4338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5661e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(8.4413e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.7551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(3.1425e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7734e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.0825e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.5183e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.8840e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.209548
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.171167
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.161491
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157811
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.152900
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.150405
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.151873
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.152872
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.150940
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.151669
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.148544
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.147745
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146046
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.143459
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.146242
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.146923
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.142879
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.146156
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.144684
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.146089
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.142946
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 21, Batch: 0, Loss: 0.144556
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.144975
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.145762
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 24, Batch: 0, Loss: 0.143904
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.145343
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.143027
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.143139
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 28, Batch: 0, Loss: 0.142671
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 29, Batch: 0, Loss: 0.140239
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.143170
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.144288
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 32, Batch: 0, Loss: 0.140769
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.145632
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.145576
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 35, Batch: 0, Loss: 0.142879
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 36, Batch: 0, Loss: 0.138417
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 37, Batch: 0, Loss: 0.140652
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.140656
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 39, Batch: 0, Loss: 0.139903
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 40, Batch: 0, Loss: 0.142457
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 41, Batch: 0, Loss: 0.143715
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.140644
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.143428
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.142368
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.140683
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 46, Batch: 0, Loss: 0.143281
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.145157
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.142414
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.143283
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 50, Batch: 0, Loss: 0.144635
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.140442
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.140232
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 54, Batch: 0, Loss: 0.144571
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.145093
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.143663
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 57, Batch: 0, Loss: 0.143624
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.142914
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.139878
Test Avg. Loss: 0.000013, Accuracy: 0.965400
training_time:: 123.46011734008789
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.21450090408325
time_baseline:: 82.34823036193848
curr_diff: 0 tensor(9.9554e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7713e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4142e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1732e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3207e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3047e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5353e-08, dtype=torch.float64)
secont condition:: tensor(3.5353e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1548e-08, dtype=torch.float64)
secont condition:: tensor(2.1548e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4869e-08, dtype=torch.float64)
secont condition:: tensor(2.4869e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2361e-08, dtype=torch.float64)
secont condition:: tensor(3.2361e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4326e-08, dtype=torch.float64)
secont condition:: tensor(2.4326e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0903e-08, dtype=torch.float64)
secont condition:: tensor(4.0903e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9386e-08, dtype=torch.float64)
secont condition:: tensor(1.9386e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8632e-08, dtype=torch.float64)
secont condition:: tensor(3.8632e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7061e-08, dtype=torch.float64)
secont condition:: tensor(2.7061e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9072e-08, dtype=torch.float64)
secont condition:: tensor(4.9072e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4966e-08, dtype=torch.float64)
secont condition:: tensor(3.4966e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9745e-08, dtype=torch.float64)
secont condition:: tensor(4.9745e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5300e-08, dtype=torch.float64)
secont condition:: tensor(3.5300e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7278e-08, dtype=torch.float64)
secont condition:: tensor(5.7278e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5027e-08, dtype=torch.float64)
secont condition:: tensor(3.5027e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2299e-08, dtype=torch.float64)
secont condition:: tensor(5.2299e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6948e-08, dtype=torch.float64)
secont condition:: tensor(7.6948e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8679e-08, dtype=torch.float64)
secont condition:: tensor(5.8679e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6967e-08, dtype=torch.float64)
secont condition:: tensor(7.6967e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6213e-08, dtype=torch.float64)
secont condition:: tensor(4.6213e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9460e-08, dtype=torch.float64)
secont condition:: tensor(7.9460e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5743e-08, dtype=torch.float64)
secont condition:: tensor(5.5743e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6619e-08, dtype=torch.float64)
secont condition:: tensor(4.6619e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7881e-08, dtype=torch.float64)
secont condition:: tensor(6.7881e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9782e-08, dtype=torch.float64)
secont condition:: tensor(6.9782e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4242e-08, dtype=torch.float64)
secont condition:: tensor(7.4242e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9254e-08, dtype=torch.float64)
secont condition:: tensor(5.9254e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7143e-08, dtype=torch.float64)
secont condition:: tensor(9.7143e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0385e-07, dtype=torch.float64)
secont condition:: tensor(1.0385e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9383e-08, dtype=torch.float64)
secont condition:: tensor(6.9383e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.8896e-08, dtype=torch.float64)
secont condition:: tensor(8.8896e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2145e-08, dtype=torch.float64)
secont condition:: tensor(6.2145e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0343e-07, dtype=torch.float64)
secont condition:: tensor(1.0343e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1325e-08, dtype=torch.float64)
secont condition:: tensor(8.1325e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7736e-08, dtype=torch.float64)
secont condition:: tensor(9.7736e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8147e-08, dtype=torch.float64)
secont condition:: tensor(7.8147e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0102e-07, dtype=torch.float64)
secont condition:: tensor(1.0102e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6256e-08, dtype=torch.float64)
secont condition:: tensor(8.6256e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8215e-08, dtype=torch.float64)
secont condition:: tensor(6.8215e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1768e-07, dtype=torch.float64)
secont condition:: tensor(1.1768e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4139e-08, dtype=torch.float64)
secont condition:: tensor(9.4139e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0497e-07, dtype=torch.float64)
secont condition:: tensor(1.0497e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4623e-08, dtype=torch.float64)
secont condition:: tensor(8.4623e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0904e-07, dtype=torch.float64)
secont condition:: tensor(1.0904e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7233e-07, dtype=torch.float64)
secont condition:: tensor(1.7233e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7632e-08, dtype=torch.float64)
secont condition:: tensor(8.7632e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2190e-08, dtype=torch.float64)
secont condition:: tensor(9.2190e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2659e-07, dtype=torch.float64)
secont condition:: tensor(1.2659e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3514e-07, dtype=torch.float64)
secont condition:: tensor(1.3514e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0728e-07, dtype=torch.float64)
secont condition:: tensor(1.0728e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8129e-08, dtype=torch.float64)
secont condition:: tensor(8.8129e-08, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3024e-07, dtype=torch.float64)
secont condition:: tensor(1.3024e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2485e-07, dtype=torch.float64)
secont condition:: tensor(1.2485e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2595e-07, dtype=torch.float64)
secont condition:: tensor(1.2595e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2877e-07, dtype=torch.float64)
secont condition:: tensor(1.2877e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3319e-07, dtype=torch.float64)
secont condition:: tensor(1.3319e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4600e-07, dtype=torch.float64)
secont condition:: tensor(1.4600e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0563e-07, dtype=torch.float64)
secont condition:: tensor(1.0563e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8715e-08, dtype=torch.float64)
secont condition:: tensor(9.8715e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2483e-07, dtype=torch.float64)
secont condition:: tensor(1.2483e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6408e-07, dtype=torch.float64)
secont condition:: tensor(1.6408e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3118e-07, dtype=torch.float64)
secont condition:: tensor(1.3118e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1997e-07, dtype=torch.float64)
secont condition:: tensor(1.1997e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6386e-07, dtype=torch.float64)
secont condition:: tensor(1.6386e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2293e-07, dtype=torch.float64)
secont condition:: tensor(1.2293e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4584e-07, dtype=torch.float64)
secont condition:: tensor(1.4584e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1135e-07, dtype=torch.float64)
secont condition:: tensor(2.1135e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7333e-07, dtype=torch.float64)
secont condition:: tensor(1.7333e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2807e-07, dtype=torch.float64)
secont condition:: tensor(2.2807e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1354e-07, dtype=torch.float64)
secont condition:: tensor(2.1354e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6201e-07, dtype=torch.float64)
secont condition:: tensor(1.6201e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9829e-07, dtype=torch.float64)
secont condition:: tensor(1.9829e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0455e-07, dtype=torch.float64)
secont condition:: tensor(2.0455e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1629e-07, dtype=torch.float64)
secont condition:: tensor(2.1629e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4786e-07, dtype=torch.float64)
secont condition:: tensor(2.4786e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9397e-07, dtype=torch.float64)
secont condition:: tensor(1.9397e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2920e-07, dtype=torch.float64)
secont condition:: tensor(2.2920e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1317e-07, dtype=torch.float64)
secont condition:: tensor(3.1317e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 65.64304447174072
curr_diff: 0 tensor(4.9622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.2262e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8223e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8541e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4865e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.4446e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2742e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.0144e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4763e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2818e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3668e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3291e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.210097
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.174230
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.160059
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.155840
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.153984
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.154954
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.151355
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.148792
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.149412
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.151347
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.148316
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.147484
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.147566
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.144471
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.145977
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.147278
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.147641
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 17, Batch: 0, Loss: 0.143249
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.143893
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.143920
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.147132
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.142130
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.145292
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.140479
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.145842
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.143485
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.142958
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.141131
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.142405
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.143240
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.142576
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.144311
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.140727
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.145850
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.141436
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.143975
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 36, Batch: 0, Loss: 0.141658
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.144606
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 38, Batch: 0, Loss: 0.140713
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.142474
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.146992
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.141980
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.143255
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.144016
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.142374
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.143079
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.144098
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 47, Batch: 0, Loss: 0.142210
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 48, Batch: 0, Loss: 0.141977
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 49, Batch: 0, Loss: 0.144570
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.141203
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 51, Batch: 0, Loss: 0.143133
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 52, Batch: 0, Loss: 0.143153
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.141908
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 54, Batch: 0, Loss: 0.141549
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.143808
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.140144
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 57, Batch: 0, Loss: 0.137380
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.143623
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 59, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.42992949485779
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.38289284706116
time_baseline:: 82.51759839057922
curr_diff: 0 tensor(9.6795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8360e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5587e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2184e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3240e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3763e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4582e-09, dtype=torch.float64)
secont condition:: tensor(1.4582e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5673e-08, dtype=torch.float64)
secont condition:: tensor(3.5673e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6887e-08, dtype=torch.float64)
secont condition:: tensor(4.6887e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2831e-08, dtype=torch.float64)
secont condition:: tensor(3.2831e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9681e-08, dtype=torch.float64)
secont condition:: tensor(2.9681e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8815e-08, dtype=torch.float64)
secont condition:: tensor(2.8815e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0302e-08, dtype=torch.float64)
secont condition:: tensor(2.0302e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7023e-08, dtype=torch.float64)
secont condition:: tensor(3.7023e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1151e-08, dtype=torch.float64)
secont condition:: tensor(7.1151e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3995e-08, dtype=torch.float64)
secont condition:: tensor(3.3995e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1310e-08, dtype=torch.float64)
secont condition:: tensor(2.1310e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3502e-08, dtype=torch.float64)
secont condition:: tensor(4.3502e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8471e-08, dtype=torch.float64)
secont condition:: tensor(3.8471e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0804e-08, dtype=torch.float64)
secont condition:: tensor(5.0804e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5040e-08, dtype=torch.float64)
secont condition:: tensor(4.5040e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5860e-08, dtype=torch.float64)
secont condition:: tensor(5.5860e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2774e-08, dtype=torch.float64)
secont condition:: tensor(6.2774e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3775e-08, dtype=torch.float64)
secont condition:: tensor(5.3775e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9035e-08, dtype=torch.float64)
secont condition:: tensor(7.9035e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7018e-08, dtype=torch.float64)
secont condition:: tensor(5.7018e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9331e-08, dtype=torch.float64)
secont condition:: tensor(7.9331e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5969e-08, dtype=torch.float64)
secont condition:: tensor(4.5969e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7382e-08, dtype=torch.float64)
secont condition:: tensor(6.7382e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5895e-08, dtype=torch.float64)
secont condition:: tensor(5.5895e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5187e-08, dtype=torch.float64)
secont condition:: tensor(5.5187e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3894e-08, dtype=torch.float64)
secont condition:: tensor(7.3894e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1341e-08, dtype=torch.float64)
secont condition:: tensor(6.1341e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0913e-08, dtype=torch.float64)
secont condition:: tensor(8.0913e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.3480e-08, dtype=torch.float64)
secont condition:: tensor(6.3480e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9365e-08, dtype=torch.float64)
secont condition:: tensor(7.9365e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9725e-08, dtype=torch.float64)
secont condition:: tensor(9.9725e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5982e-08, dtype=torch.float64)
secont condition:: tensor(7.5982e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0693e-07, dtype=torch.float64)
secont condition:: tensor(1.0693e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3165e-08, dtype=torch.float64)
secont condition:: tensor(6.3165e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1239e-07, dtype=torch.float64)
secont condition:: tensor(1.1239e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7463e-08, dtype=torch.float64)
secont condition:: tensor(8.7463e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5787e-08, dtype=torch.float64)
secont condition:: tensor(9.5787e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5843e-08, dtype=torch.float64)
secont condition:: tensor(6.5843e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1114e-07, dtype=torch.float64)
secont condition:: tensor(1.1114e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9671e-08, dtype=torch.float64)
secont condition:: tensor(9.9671e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2276e-07, dtype=torch.float64)
secont condition:: tensor(1.2276e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1882e-08, dtype=torch.float64)
secont condition:: tensor(6.1882e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4453e-08, dtype=torch.float64)
secont condition:: tensor(8.4453e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0725e-07, dtype=torch.float64)
secont condition:: tensor(1.0725e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5456e-07, dtype=torch.float64)
secont condition:: tensor(1.5456e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4164e-08, dtype=torch.float64)
secont condition:: tensor(9.4164e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7821e-08, dtype=torch.float64)
secont condition:: tensor(8.7821e-08, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2244e-07, dtype=torch.float64)
secont condition:: tensor(1.2244e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5315e-07, dtype=torch.float64)
secont condition:: tensor(1.5315e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3533e-08, dtype=torch.float64)
secont condition:: tensor(9.3533e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3966e-07, dtype=torch.float64)
secont condition:: tensor(1.3966e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0815e-07, dtype=torch.float64)
secont condition:: tensor(1.0815e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1403e-08, dtype=torch.float64)
secont condition:: tensor(9.1403e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3366e-07, dtype=torch.float64)
secont condition:: tensor(1.3366e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7812e-07, dtype=torch.float64)
secont condition:: tensor(1.7812e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0332e-07, dtype=torch.float64)
secont condition:: tensor(1.0332e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2045e-08, dtype=torch.float64)
secont condition:: tensor(9.2045e-08, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4152e-07, dtype=torch.float64)
secont condition:: tensor(1.4152e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5252e-07, dtype=torch.float64)
secont condition:: tensor(1.5252e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2113e-07, dtype=torch.float64)
secont condition:: tensor(1.2113e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7094e-07, dtype=torch.float64)
secont condition:: tensor(1.7094e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3429e-07, dtype=torch.float64)
secont condition:: tensor(1.3429e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2112e-07, dtype=torch.float64)
secont condition:: tensor(1.2112e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3285e-07, dtype=torch.float64)
secont condition:: tensor(1.3285e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2050e-07, dtype=torch.float64)
secont condition:: tensor(1.2050e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2822e-07, dtype=torch.float64)
secont condition:: tensor(1.2822e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6038e-07, dtype=torch.float64)
secont condition:: tensor(1.6038e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8402e-07, dtype=torch.float64)
secont condition:: tensor(1.8402e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9512e-07, dtype=torch.float64)
secont condition:: tensor(1.9512e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2564e-07, dtype=torch.float64)
secont condition:: tensor(2.2564e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7701e-07, dtype=torch.float64)
secont condition:: tensor(1.7701e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1014e-07, dtype=torch.float64)
secont condition:: tensor(2.1014e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7493e-07, dtype=torch.float64)
secont condition:: tensor(1.7493e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2699e-07, dtype=torch.float64)
secont condition:: tensor(2.2699e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 66.37160563468933
curr_diff: 0 tensor(7.5411e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5235e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.3364e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8700e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5748e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.4656e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5229e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4810e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1368e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.9858e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4134e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3238e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4340e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214281
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.172073
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.161425
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157350
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.153889
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.153618
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.151047
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.148881
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.149098
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.148587
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.145023
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148304
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146938
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 13, Batch: 0, Loss: 0.146585
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.145728
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.148339
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 16, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.143293
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.145628
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.146246
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.144701
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.144970
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 22, Batch: 0, Loss: 0.144489
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.145600
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.144848
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.150116
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.143853
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.143790
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.145802
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.141013
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 30, Batch: 0, Loss: 0.147562
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 31, Batch: 0, Loss: 0.146098
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.138926
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.141591
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.147866
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 35, Batch: 0, Loss: 0.144830
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 36, Batch: 0, Loss: 0.142127
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 37, Batch: 0, Loss: 0.146934
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.143933
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.145091
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.144735
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.144978
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.140587
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.142314
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 44, Batch: 0, Loss: 0.141378
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.143965
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.140862
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.142600
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.146381
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.143180
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.139269
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 51, Batch: 0, Loss: 0.143237
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.144686
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.142815
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 55, Batch: 0, Loss: 0.139292
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.138307
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.142960
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.144937
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.141303
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.69398641586304
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.26964855194092
time_baseline:: 82.40382933616638
curr_diff: 0 tensor(9.6971e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7561e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4562e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1665e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3066e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3196e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1232e-08, dtype=torch.float64)
secont condition:: tensor(1.1232e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4019e-08, dtype=torch.float64)
secont condition:: tensor(2.4019e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5294e-08, dtype=torch.float64)
secont condition:: tensor(1.5294e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5882e-08, dtype=torch.float64)
secont condition:: tensor(3.5882e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0886e-08, dtype=torch.float64)
secont condition:: tensor(6.0886e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1666e-08, dtype=torch.float64)
secont condition:: tensor(2.1666e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4080e-08, dtype=torch.float64)
secont condition:: tensor(4.4080e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0663e-08, dtype=torch.float64)
secont condition:: tensor(3.0663e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2493e-08, dtype=torch.float64)
secont condition:: tensor(2.2493e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2530e-08, dtype=torch.float64)
secont condition:: tensor(4.2530e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7513e-08, dtype=torch.float64)
secont condition:: tensor(6.7513e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6318e-08, dtype=torch.float64)
secont condition:: tensor(3.6318e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9551e-08, dtype=torch.float64)
secont condition:: tensor(3.9551e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8414e-08, dtype=torch.float64)
secont condition:: tensor(3.8414e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4214e-08, dtype=torch.float64)
secont condition:: tensor(3.4214e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9469e-08, dtype=torch.float64)
secont condition:: tensor(3.9469e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1125e-08, dtype=torch.float64)
secont condition:: tensor(4.1125e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4188e-08, dtype=torch.float64)
secont condition:: tensor(6.4188e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5588e-08, dtype=torch.float64)
secont condition:: tensor(7.5588e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6614e-08, dtype=torch.float64)
secont condition:: tensor(4.6614e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3274e-08, dtype=torch.float64)
secont condition:: tensor(4.3274e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8345e-08, dtype=torch.float64)
secont condition:: tensor(6.8345e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1405e-08, dtype=torch.float64)
secont condition:: tensor(8.1405e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6893e-08, dtype=torch.float64)
secont condition:: tensor(5.6893e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4003e-08, dtype=torch.float64)
secont condition:: tensor(8.4003e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3766e-08, dtype=torch.float64)
secont condition:: tensor(5.3766e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2811e-08, dtype=torch.float64)
secont condition:: tensor(5.2811e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6767e-08, dtype=torch.float64)
secont condition:: tensor(7.6767e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1059e-07, dtype=torch.float64)
secont condition:: tensor(1.1059e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3626e-08, dtype=torch.float64)
secont condition:: tensor(7.3626e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1351e-07, dtype=torch.float64)
secont condition:: tensor(1.1351e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6862e-08, dtype=torch.float64)
secont condition:: tensor(5.6862e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6089e-08, dtype=torch.float64)
secont condition:: tensor(4.6089e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6922e-08, dtype=torch.float64)
secont condition:: tensor(7.6922e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0597e-07, dtype=torch.float64)
secont condition:: tensor(1.0597e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1851e-08, dtype=torch.float64)
secont condition:: tensor(8.1851e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4793e-08, dtype=torch.float64)
secont condition:: tensor(8.4793e-08, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0769e-08, dtype=torch.float64)
secont condition:: tensor(8.0769e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4495e-07, dtype=torch.float64)
secont condition:: tensor(1.4495e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6133e-08, dtype=torch.float64)
secont condition:: tensor(8.6133e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1551e-07, dtype=torch.float64)
secont condition:: tensor(1.1551e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0501e-07, dtype=torch.float64)
secont condition:: tensor(1.0501e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1530e-07, dtype=torch.float64)
secont condition:: tensor(1.1530e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5194e-08, dtype=torch.float64)
secont condition:: tensor(9.5194e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2245e-07, dtype=torch.float64)
secont condition:: tensor(1.2245e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9170e-08, dtype=torch.float64)
secont condition:: tensor(8.9170e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0093e-07, dtype=torch.float64)
secont condition:: tensor(1.0093e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1272e-07, dtype=torch.float64)
secont condition:: tensor(1.1272e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7283e-07, dtype=torch.float64)
secont condition:: tensor(1.7283e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1476e-07, dtype=torch.float64)
secont condition:: tensor(1.1476e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3675e-07, dtype=torch.float64)
secont condition:: tensor(1.3675e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2051e-07, dtype=torch.float64)
secont condition:: tensor(1.2051e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6881e-08, dtype=torch.float64)
secont condition:: tensor(9.6881e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4011e-07, dtype=torch.float64)
secont condition:: tensor(1.4011e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3294e-07, dtype=torch.float64)
secont condition:: tensor(1.3294e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2293e-07, dtype=torch.float64)
secont condition:: tensor(1.2293e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5028e-07, dtype=torch.float64)
secont condition:: tensor(1.5028e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0094e-07, dtype=torch.float64)
secont condition:: tensor(1.0094e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0720e-08, dtype=torch.float64)
secont condition:: tensor(9.0720e-08, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6731e-07, dtype=torch.float64)
secont condition:: tensor(1.6731e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5524e-07, dtype=torch.float64)
secont condition:: tensor(1.5524e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2536e-07, dtype=torch.float64)
secont condition:: tensor(1.2536e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7323e-07, dtype=torch.float64)
secont condition:: tensor(1.7323e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0866e-07, dtype=torch.float64)
secont condition:: tensor(1.0866e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4477e-07, dtype=torch.float64)
secont condition:: tensor(1.4477e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5451e-07, dtype=torch.float64)
secont condition:: tensor(1.5451e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4894e-07, dtype=torch.float64)
secont condition:: tensor(1.4894e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9409e-07, dtype=torch.float64)
secont condition:: tensor(1.9409e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7199e-07, dtype=torch.float64)
secont condition:: tensor(1.7199e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4715e-07, dtype=torch.float64)
secont condition:: tensor(1.4715e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6583e-07, dtype=torch.float64)
secont condition:: tensor(2.6583e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8876e-07, dtype=torch.float64)
secont condition:: tensor(1.8876e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9062e-07, dtype=torch.float64)
secont condition:: tensor(1.9062e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1300e-07, dtype=torch.float64)
secont condition:: tensor(2.1300e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1915e-07, dtype=torch.float64)
secont condition:: tensor(2.1915e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6944e-07, dtype=torch.float64)
secont condition:: tensor(1.6944e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6204e-07, dtype=torch.float64)
secont condition:: tensor(2.6204e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6992e-07, dtype=torch.float64)
secont condition:: tensor(2.6992e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 64.95229840278625
curr_diff: 0 tensor(4.8519e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.9337e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.2859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2102e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4920e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.2990e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7818e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.5983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1785e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.7836e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0959e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4850e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2260e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3551e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3683e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213595
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.172518
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.160531
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157411
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 4, Batch: 0, Loss: 0.155196
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152299
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.153752
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.147964
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.146918
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.149796
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 10, Batch: 0, Loss: 0.149278
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.146463
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 12, Batch: 0, Loss: 0.148600
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.149411
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.145778
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.148898
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.144651
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.145382
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.144299
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.146533
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.145117
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.142902
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.145693
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.146456
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 24, Batch: 0, Loss: 0.146939
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.143347
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 26, Batch: 0, Loss: 0.142097
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144359
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 28, Batch: 0, Loss: 0.141498
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.142372
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 30, Batch: 0, Loss: 0.143149
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.140345
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.144381
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 33, Batch: 0, Loss: 0.143541
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.142228
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 35, Batch: 0, Loss: 0.136168
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.143899
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.147490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.143393
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.143325
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 40, Batch: 0, Loss: 0.141376
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.140943
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.140214
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.142706
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.141507
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 45, Batch: 0, Loss: 0.143094
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 46, Batch: 0, Loss: 0.141626
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 47, Batch: 0, Loss: 0.144626
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.140798
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.144007
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.146102
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.142873
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 52, Batch: 0, Loss: 0.140313
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.142759
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 54, Batch: 0, Loss: 0.145398
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141931
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.143106
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 57, Batch: 0, Loss: 0.141009
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 58, Batch: 0, Loss: 0.142220
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.142424
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 123.36243057250977
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.28489780426025
time_baseline:: 82.41999363899231
curr_diff: 0 tensor(9.6989e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.9882e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5623e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3553e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3620e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2098e-08, dtype=torch.float64)
secont condition:: tensor(1.2098e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4452e-08, dtype=torch.float64)
secont condition:: tensor(2.4452e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2178e-08, dtype=torch.float64)
secont condition:: tensor(1.2178e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8485e-08, dtype=torch.float64)
secont condition:: tensor(3.8485e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1416e-08, dtype=torch.float64)
secont condition:: tensor(6.1416e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7613e-08, dtype=torch.float64)
secont condition:: tensor(2.7613e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7971e-08, dtype=torch.float64)
secont condition:: tensor(1.7971e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7927e-08, dtype=torch.float64)
secont condition:: tensor(3.7927e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8104e-08, dtype=torch.float64)
secont condition:: tensor(4.8104e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9114e-08, dtype=torch.float64)
secont condition:: tensor(3.9114e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4258e-08, dtype=torch.float64)
secont condition:: tensor(5.4258e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2996e-08, dtype=torch.float64)
secont condition:: tensor(4.2996e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8955e-08, dtype=torch.float64)
secont condition:: tensor(4.8955e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7403e-08, dtype=torch.float64)
secont condition:: tensor(3.7403e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1594e-08, dtype=torch.float64)
secont condition:: tensor(4.1594e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8714e-08, dtype=torch.float64)
secont condition:: tensor(4.8714e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8026e-08, dtype=torch.float64)
secont condition:: tensor(4.8026e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8312e-08, dtype=torch.float64)
secont condition:: tensor(5.8312e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6062e-08, dtype=torch.float64)
secont condition:: tensor(8.6062e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5366e-08, dtype=torch.float64)
secont condition:: tensor(4.5366e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4491e-08, dtype=torch.float64)
secont condition:: tensor(4.4491e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4628e-08, dtype=torch.float64)
secont condition:: tensor(6.4628e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4508e-08, dtype=torch.float64)
secont condition:: tensor(8.4508e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2146e-08, dtype=torch.float64)
secont condition:: tensor(6.2146e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5969e-08, dtype=torch.float64)
secont condition:: tensor(4.5969e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5131e-08, dtype=torch.float64)
secont condition:: tensor(7.5131e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4714e-08, dtype=torch.float64)
secont condition:: tensor(6.4714e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6822e-08, dtype=torch.float64)
secont condition:: tensor(8.6822e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4963e-08, dtype=torch.float64)
secont condition:: tensor(6.4963e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6808e-08, dtype=torch.float64)
secont condition:: tensor(8.6808e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5539e-08, dtype=torch.float64)
secont condition:: tensor(6.5539e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7884e-08, dtype=torch.float64)
secont condition:: tensor(8.7884e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8149e-08, dtype=torch.float64)
secont condition:: tensor(9.8149e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6982e-08, dtype=torch.float64)
secont condition:: tensor(7.6982e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0535e-07, dtype=torch.float64)
secont condition:: tensor(1.0535e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6360e-08, dtype=torch.float64)
secont condition:: tensor(7.6360e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1452e-07, dtype=torch.float64)
secont condition:: tensor(1.1452e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6982e-08, dtype=torch.float64)
secont condition:: tensor(6.6982e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0502e-08, dtype=torch.float64)
secont condition:: tensor(7.0502e-08, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0915e-07, dtype=torch.float64)
secont condition:: tensor(1.0915e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6902e-08, dtype=torch.float64)
secont condition:: tensor(7.6902e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2109e-07, dtype=torch.float64)
secont condition:: tensor(1.2109e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0573e-07, dtype=torch.float64)
secont condition:: tensor(1.0573e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5103e-08, dtype=torch.float64)
secont condition:: tensor(9.5103e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4982e-07, dtype=torch.float64)
secont condition:: tensor(1.4982e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1284e-07, dtype=torch.float64)
secont condition:: tensor(1.1284e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1831e-07, dtype=torch.float64)
secont condition:: tensor(1.1831e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0955e-08, dtype=torch.float64)
secont condition:: tensor(9.0955e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0203e-07, dtype=torch.float64)
secont condition:: tensor(1.0203e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2080e-07, dtype=torch.float64)
secont condition:: tensor(1.2080e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4120e-07, dtype=torch.float64)
secont condition:: tensor(1.4120e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1233e-07, dtype=torch.float64)
secont condition:: tensor(1.1233e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0414e-08, dtype=torch.float64)
secont condition:: tensor(7.0414e-08, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4097e-07, dtype=torch.float64)
secont condition:: tensor(1.4097e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3911e-07, dtype=torch.float64)
secont condition:: tensor(1.3911e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1413e-07, dtype=torch.float64)
secont condition:: tensor(1.1413e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3401e-07, dtype=torch.float64)
secont condition:: tensor(1.3401e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2177e-07, dtype=torch.float64)
secont condition:: tensor(1.2177e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1654e-07, dtype=torch.float64)
secont condition:: tensor(1.1654e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1122e-07, dtype=torch.float64)
secont condition:: tensor(1.1122e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7566e-07, dtype=torch.float64)
secont condition:: tensor(1.7566e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1474e-07, dtype=torch.float64)
secont condition:: tensor(1.1474e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5365e-07, dtype=torch.float64)
secont condition:: tensor(1.5365e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3080e-07, dtype=torch.float64)
secont condition:: tensor(1.3080e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6181e-07, dtype=torch.float64)
secont condition:: tensor(1.6181e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5131e-07, dtype=torch.float64)
secont condition:: tensor(1.5131e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6578e-07, dtype=torch.float64)
secont condition:: tensor(1.6578e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3252e-07, dtype=torch.float64)
secont condition:: tensor(1.3252e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8416e-07, dtype=torch.float64)
secont condition:: tensor(1.8416e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9990e-07, dtype=torch.float64)
secont condition:: tensor(1.9990e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8709e-07, dtype=torch.float64)
secont condition:: tensor(1.8709e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6324e-07, dtype=torch.float64)
secont condition:: tensor(1.6324e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8012e-07, dtype=torch.float64)
secont condition:: tensor(1.8012e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6630e-07, dtype=torch.float64)
secont condition:: tensor(2.6630e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6945e-07, dtype=torch.float64)
secont condition:: tensor(2.6945e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 66.48522734642029
curr_diff: 0 tensor(3.7229e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0998e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.4436e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6989e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3753e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.6942e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4683e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4570e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2282e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.7601e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5822e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6652e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1335e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4602e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3594e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216315
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.173458
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.162370
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.155235
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.157603
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.150905
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.152818
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.151593
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.149956
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.146755
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.148681
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.143186
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145540
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.143885
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.146798
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.146851
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.144369
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 17, Batch: 0, Loss: 0.147882
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.146174
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.142417
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.142871
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.140973
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.142820
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.146955
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.143098
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.144108
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.142414
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 27, Batch: 0, Loss: 0.144399
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.146227
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.142587
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 30, Batch: 0, Loss: 0.140226
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.140146
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.142784
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.142420
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.141028
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.144544
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 36, Batch: 0, Loss: 0.146225
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.138171
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.142646
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.140392
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.141723
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.141963
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.142375
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.142136
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 44, Batch: 0, Loss: 0.142826
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.140764
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 46, Batch: 0, Loss: 0.142807
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 47, Batch: 0, Loss: 0.142842
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.141929
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 49, Batch: 0, Loss: 0.143083
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.144084
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 51, Batch: 0, Loss: 0.144770
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 52, Batch: 0, Loss: 0.142528
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 53, Batch: 0, Loss: 0.143619
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.142972
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.139635
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.141027
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 57, Batch: 0, Loss: 0.142578
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.143904
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.142817
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.33061671257019
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.29798340797424
time_baseline:: 82.43277192115784
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.4163e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4523e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1386e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3515e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3813e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 30
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1899e-08, dtype=torch.float64)
secont condition:: tensor(1.1899e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6944e-08, dtype=torch.float64)
secont condition:: tensor(2.6944e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4754e-08, dtype=torch.float64)
secont condition:: tensor(4.4754e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9069e-08, dtype=torch.float64)
secont condition:: tensor(2.9069e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6929e-08, dtype=torch.float64)
secont condition:: tensor(4.6929e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6152e-08, dtype=torch.float64)
secont condition:: tensor(2.6152e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4926e-08, dtype=torch.float64)
secont condition:: tensor(3.4926e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7958e-08, dtype=torch.float64)
secont condition:: tensor(2.7958e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.6543e-08, dtype=torch.float64)
secont condition:: tensor(2.6543e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9992e-08, dtype=torch.float64)
secont condition:: tensor(3.9992e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4484e-08, dtype=torch.float64)
secont condition:: tensor(5.4484e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3662e-08, dtype=torch.float64)
secont condition:: tensor(3.3662e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3033e-08, dtype=torch.float64)
secont condition:: tensor(3.3033e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5666e-08, dtype=torch.float64)
secont condition:: tensor(5.5666e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4197e-08, dtype=torch.float64)
secont condition:: tensor(3.4197e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4280e-08, dtype=torch.float64)
secont condition:: tensor(5.4280e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4862e-08, dtype=torch.float64)
secont condition:: tensor(4.4862e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5664e-08, dtype=torch.float64)
secont condition:: tensor(6.5664e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1275e-08, dtype=torch.float64)
secont condition:: tensor(4.1275e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4919e-08, dtype=torch.float64)
secont condition:: tensor(7.4919e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1163e-08, dtype=torch.float64)
secont condition:: tensor(8.1163e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0644e-08, dtype=torch.float64)
secont condition:: tensor(6.0644e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4172e-08, dtype=torch.float64)
secont condition:: tensor(9.4172e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8260e-08, dtype=torch.float64)
secont condition:: tensor(4.8260e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8549e-08, dtype=torch.float64)
secont condition:: tensor(5.8549e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1899e-08, dtype=torch.float64)
secont condition:: tensor(8.1899e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1162e-08, dtype=torch.float64)
secont condition:: tensor(8.1162e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8585e-08, dtype=torch.float64)
secont condition:: tensor(6.8585e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4013e-08, dtype=torch.float64)
secont condition:: tensor(8.4013e-08, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7135e-08, dtype=torch.float64)
secont condition:: tensor(6.7135e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8038e-08, dtype=torch.float64)
secont condition:: tensor(9.8038e-08, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0013e-08, dtype=torch.float64)
secont condition:: tensor(6.0013e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8916e-08, dtype=torch.float64)
secont condition:: tensor(7.8916e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1715e-08, dtype=torch.float64)
secont condition:: tensor(9.1715e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0933e-08, dtype=torch.float64)
secont condition:: tensor(7.0933e-08, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0333e-07, dtype=torch.float64)
secont condition:: tensor(1.0333e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0918e-07, dtype=torch.float64)
secont condition:: tensor(1.0918e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6988e-08, dtype=torch.float64)
secont condition:: tensor(6.6988e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0317e-07, dtype=torch.float64)
secont condition:: tensor(1.0317e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0288e-07, dtype=torch.float64)
secont condition:: tensor(1.0288e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9077e-08, dtype=torch.float64)
secont condition:: tensor(6.9077e-08, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6714e-08, dtype=torch.float64)
secont condition:: tensor(9.6714e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6550e-08, dtype=torch.float64)
secont condition:: tensor(9.6550e-08, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1720e-07, dtype=torch.float64)
secont condition:: tensor(1.1720e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3066e-07, dtype=torch.float64)
secont condition:: tensor(1.3066e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1443e-07, dtype=torch.float64)
secont condition:: tensor(1.1443e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6973e-06, dtype=torch.float64)
secont condition:: tensor(1.6973e-06, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0249e-07, dtype=torch.float64)
secont condition:: tensor(1.0249e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1388e-07, dtype=torch.float64)
secont condition:: tensor(1.1388e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0592e-07, dtype=torch.float64)
secont condition:: tensor(1.0592e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0015e-07, dtype=torch.float64)
secont condition:: tensor(1.0015e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2004e-07, dtype=torch.float64)
secont condition:: tensor(1.2004e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5576e-07, dtype=torch.float64)
secont condition:: tensor(1.5576e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0762e-07, dtype=torch.float64)
secont condition:: tensor(1.0762e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6205e-07, dtype=torch.float64)
secont condition:: tensor(1.6205e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3641e-08, dtype=torch.float64)
secont condition:: tensor(9.3641e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3044e-07, dtype=torch.float64)
secont condition:: tensor(1.3044e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0620e-07, dtype=torch.float64)
secont condition:: tensor(1.0620e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1620e-07, dtype=torch.float64)
secont condition:: tensor(1.1620e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2709e-07, dtype=torch.float64)
secont condition:: tensor(1.2709e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0152e-07, dtype=torch.float64)
secont condition:: tensor(1.0152e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3660e-07, dtype=torch.float64)
secont condition:: tensor(1.3660e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6891e-07, dtype=torch.float64)
secont condition:: tensor(1.6891e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4964e-07, dtype=torch.float64)
secont condition:: tensor(1.4964e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8798e-08, dtype=torch.float64)
secont condition:: tensor(9.8798e-08, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5007e-07, dtype=torch.float64)
secont condition:: tensor(1.5007e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6212e-07, dtype=torch.float64)
secont condition:: tensor(1.6212e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5548e-07, dtype=torch.float64)
secont condition:: tensor(1.5548e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0046e-07, dtype=torch.float64)
secont condition:: tensor(2.0046e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9115e-07, dtype=torch.float64)
secont condition:: tensor(1.9115e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9720e-07, dtype=torch.float64)
secont condition:: tensor(1.9720e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9533e-07, dtype=torch.float64)
secont condition:: tensor(1.9533e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4128e-07, dtype=torch.float64)
secont condition:: tensor(2.4128e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3127e-07, dtype=torch.float64)
secont condition:: tensor(2.3127e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9624e-07, dtype=torch.float64)
secont condition:: tensor(1.9624e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3778e-07, dtype=torch.float64)
secont condition:: tensor(2.3778e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3670e-07, dtype=torch.float64)
secont condition:: tensor(2.3670e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2893e-07, dtype=torch.float64)
secont condition:: tensor(2.2893e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0183e-07, dtype=torch.float64)
secont condition:: tensor(2.0183e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.5116126537323
curr_diff: 0 tensor(8.8893e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.9296e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(5.6629e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7162e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.1693e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.5575e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3815e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.4141e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2751e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5496e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4126e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2031e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4179e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212017
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 1, Batch: 0, Loss: 0.159562
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.148173
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.151812
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.145394
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 5, Batch: 0, Loss: 0.149130
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.143717
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 7, Batch: 0, Loss: 0.142994
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 8, Batch: 0, Loss: 0.145189
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 9, Batch: 0, Loss: 0.143052
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.145154
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.145461
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.144979
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.142829
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 14, Batch: 0, Loss: 0.144312
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 15, Batch: 0, Loss: 0.144629
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.141009
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 17, Batch: 0, Loss: 0.149936
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 18, Batch: 0, Loss: 0.143567
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 19, Batch: 0, Loss: 0.146872
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 20, Batch: 0, Loss: 0.142967
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.142538
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 22, Batch: 0, Loss: 0.145799
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 23, Batch: 0, Loss: 0.141194
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 24, Batch: 0, Loss: 0.141270
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.144670
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 26, Batch: 0, Loss: 0.145298
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 27, Batch: 0, Loss: 0.144226
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 28, Batch: 0, Loss: 0.142504
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 29, Batch: 0, Loss: 0.135497
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 30, Batch: 0, Loss: 0.144300
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 31, Batch: 0, Loss: 0.150160
Test Avg. Loss: 0.000013, Accuracy: 0.965600
training_time:: 65.88145160675049
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.31471824645996
time_baseline:: 44.38602089881897
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.0422e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6736e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3021e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9359e-08, dtype=torch.float64)
secont condition:: tensor(6.9359e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4069e-08, dtype=torch.float64)
secont condition:: tensor(7.4069e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7741e-08, dtype=torch.float64)
secont condition:: tensor(3.7741e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7343e-08, dtype=torch.float64)
secont condition:: tensor(2.7343e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2519e-08, dtype=torch.float64)
secont condition:: tensor(2.2519e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8005e-08, dtype=torch.float64)
secont condition:: tensor(6.8005e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5468e-08, dtype=torch.float64)
secont condition:: tensor(5.5468e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4428e-08, dtype=torch.float64)
secont condition:: tensor(2.4428e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7179e-08, dtype=torch.float64)
secont condition:: tensor(1.7179e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2852e-08, dtype=torch.float64)
secont condition:: tensor(2.2852e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6590e-08, dtype=torch.float64)
secont condition:: tensor(6.6590e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6836e-08, dtype=torch.float64)
secont condition:: tensor(3.6836e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9912e-08, dtype=torch.float64)
secont condition:: tensor(3.9912e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9496e-08, dtype=torch.float64)
secont condition:: tensor(1.9496e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5763e-08, dtype=torch.float64)
secont condition:: tensor(1.5763e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4679e-07, dtype=torch.float64)
secont condition:: tensor(1.4679e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4994e-07, dtype=torch.float64)
secont condition:: tensor(1.4994e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5009e-08, dtype=torch.float64)
secont condition:: tensor(9.5009e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3225e-08, dtype=torch.float64)
secont condition:: tensor(9.3225e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5688e-08, dtype=torch.float64)
secont condition:: tensor(4.5688e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1883e-08, dtype=torch.float64)
secont condition:: tensor(3.1883e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8860e-08, dtype=torch.float64)
secont condition:: tensor(3.8860e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0842e-08, dtype=torch.float64)
secont condition:: tensor(4.0842e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6093e-07, dtype=torch.float64)
secont condition:: tensor(1.6093e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6449e-08, dtype=torch.float64)
secont condition:: tensor(8.6449e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1703e-08, dtype=torch.float64)
secont condition:: tensor(6.1703e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7630e-08, dtype=torch.float64)
secont condition:: tensor(5.7630e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2125e-07, dtype=torch.float64)
secont condition:: tensor(2.2125e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4351e-07, dtype=torch.float64)
secont condition:: tensor(2.4351e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6089e-07, dtype=torch.float64)
secont condition:: tensor(1.6089e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1871e-07, dtype=torch.float64)
secont condition:: tensor(1.1871e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3215e-08, dtype=torch.float64)
secont condition:: tensor(9.3215e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2305e-08, dtype=torch.float64)
secont condition:: tensor(8.2305e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3544e-08, dtype=torch.float64)
secont condition:: tensor(9.3544e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9183e-08, dtype=torch.float64)
secont condition:: tensor(4.9183e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6121e-07, dtype=torch.float64)
secont condition:: tensor(1.6121e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7102e-08, dtype=torch.float64)
secont condition:: tensor(9.7102e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1402e-07, dtype=torch.float64)
secont condition:: tensor(1.1402e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5250e-08, dtype=torch.float64)
secont condition:: tensor(5.5250e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7113e-07, dtype=torch.float64)
secont condition:: tensor(2.7113e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3575e-07, dtype=torch.float64)
secont condition:: tensor(1.3575e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0239e-07, dtype=torch.float64)
secont condition:: tensor(1.0239e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5769e-07, dtype=torch.float64)
secont condition:: tensor(1.5769e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5320e-07, dtype=torch.float64)
secont condition:: tensor(1.5320e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6850e-07, dtype=torch.float64)
secont condition:: tensor(2.6850e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4788e-07, dtype=torch.float64)
secont condition:: tensor(1.4788e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1915e-07, dtype=torch.float64)
secont condition:: tensor(1.1915e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9893e-08, dtype=torch.float64)
secont condition:: tensor(8.9893e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2861e-07, dtype=torch.float64)
secont condition:: tensor(1.2861e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4962e-08, dtype=torch.float64)
secont condition:: tensor(9.4962e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5888e-08, dtype=torch.float64)
secont condition:: tensor(9.5888e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1594e-07, dtype=torch.float64)
secont condition:: tensor(2.1594e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8348e-07, dtype=torch.float64)
secont condition:: tensor(2.8348e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1360e-07, dtype=torch.float64)
secont condition:: tensor(2.1360e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6252e-07, dtype=torch.float64)
secont condition:: tensor(1.6252e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2231e-07, dtype=torch.float64)
secont condition:: tensor(1.2231e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7117e-07, dtype=torch.float64)
secont condition:: tensor(1.7117e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3639e-07, dtype=torch.float64)
secont condition:: tensor(1.3639e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0862e-07, dtype=torch.float64)
secont condition:: tensor(2.0862e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5198e-07, dtype=torch.float64)
secont condition:: tensor(1.5198e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3640e-07, dtype=torch.float64)
secont condition:: tensor(1.3640e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1652e-07, dtype=torch.float64)
secont condition:: tensor(2.1652e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1276e-07, dtype=torch.float64)
secont condition:: tensor(1.1276e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3496e-07, dtype=torch.float64)
secont condition:: tensor(1.3496e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3682e-07, dtype=torch.float64)
secont condition:: tensor(2.3682e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7515e-07, dtype=torch.float64)
secont condition:: tensor(2.7515e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0961e-07, dtype=torch.float64)
secont condition:: tensor(2.0961e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7504e-07, dtype=torch.float64)
secont condition:: tensor(2.7504e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0052e-07, dtype=torch.float64)
secont condition:: tensor(3.0052e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0780e-07, dtype=torch.float64)
secont condition:: tensor(2.0780e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8847e-07, dtype=torch.float64)
secont condition:: tensor(2.8847e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5575e-07, dtype=torch.float64)
secont condition:: tensor(2.5575e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1963e-07, dtype=torch.float64)
secont condition:: tensor(3.1963e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.09776544570923
curr_diff: 0 tensor(8.7608e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6989e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.0837e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6112e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.1061e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.3072e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.5179e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.9071e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4640e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6448e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7652e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0924e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3275e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4194e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216169
Test Avg. Loss: 0.000014, Accuracy: 0.962000
Train - Epoch 1, Batch: 0, Loss: 0.161493
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.153581
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.147891
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.148261
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.152071
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.146676
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 7, Batch: 0, Loss: 0.149485
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.143746
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 9, Batch: 0, Loss: 0.143218
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 10, Batch: 0, Loss: 0.146377
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 11, Batch: 0, Loss: 0.145405
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.141430
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.143715
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 14, Batch: 0, Loss: 0.147905
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 15, Batch: 0, Loss: 0.145248
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 16, Batch: 0, Loss: 0.142248
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 17, Batch: 0, Loss: 0.139420
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 18, Batch: 0, Loss: 0.142618
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 19, Batch: 0, Loss: 0.147134
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 20, Batch: 0, Loss: 0.143591
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 21, Batch: 0, Loss: 0.139720
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.140027
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 23, Batch: 0, Loss: 0.142326
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.146668
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 25, Batch: 0, Loss: 0.142047
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.141018
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 27, Batch: 0, Loss: 0.142392
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 28, Batch: 0, Loss: 0.142596
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 29, Batch: 0, Loss: 0.145746
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 30, Batch: 0, Loss: 0.146652
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 31, Batch: 0, Loss: 0.142154
Test Avg. Loss: 0.000013, Accuracy: 0.965400
training_time:: 66.36589860916138
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.29509925842285
time_baseline:: 44.36701822280884
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3690e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6940e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2296e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3579e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3091e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8278e-08, dtype=torch.float64)
secont condition:: tensor(5.8278e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8633e-08, dtype=torch.float64)
secont condition:: tensor(1.8633e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3111e-08, dtype=torch.float64)
secont condition:: tensor(4.3111e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8465e-08, dtype=torch.float64)
secont condition:: tensor(1.8465e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3841e-08, dtype=torch.float64)
secont condition:: tensor(4.3841e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0509e-08, dtype=torch.float64)
secont condition:: tensor(3.0509e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9403e-08, dtype=torch.float64)
secont condition:: tensor(3.9403e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0950e-06, dtype=torch.float64)
secont condition:: tensor(3.0950e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4554e-08, dtype=torch.float64)
secont condition:: tensor(5.4554e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7773e-08, dtype=torch.float64)
secont condition:: tensor(4.7773e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3075e-07, dtype=torch.float64)
secont condition:: tensor(4.3075e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2585e-06, dtype=torch.float64)
secont condition:: tensor(2.2585e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6179e-08, dtype=torch.float64)
secont condition:: tensor(6.6179e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4858e-08, dtype=torch.float64)
secont condition:: tensor(6.4858e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1970e-08, dtype=torch.float64)
secont condition:: tensor(3.1970e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8339e-08, dtype=torch.float64)
secont condition:: tensor(3.8339e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0755e-08, dtype=torch.float64)
secont condition:: tensor(5.0755e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2570e-08, dtype=torch.float64)
secont condition:: tensor(7.2570e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6481e-08, dtype=torch.float64)
secont condition:: tensor(5.6481e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7350e-08, dtype=torch.float64)
secont condition:: tensor(3.7350e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6112e-08, dtype=torch.float64)
secont condition:: tensor(4.6112e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9633e-08, dtype=torch.float64)
secont condition:: tensor(4.9633e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4876e-08, dtype=torch.float64)
secont condition:: tensor(9.4876e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3187e-08, dtype=torch.float64)
secont condition:: tensor(6.3187e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2843e-08, dtype=torch.float64)
secont condition:: tensor(3.2843e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0110e-07, dtype=torch.float64)
secont condition:: tensor(1.0110e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3277e-08, dtype=torch.float64)
secont condition:: tensor(7.3277e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1171e-08, dtype=torch.float64)
secont condition:: tensor(6.1171e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5836e-08, dtype=torch.float64)
secont condition:: tensor(6.5836e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6708e-07, dtype=torch.float64)
secont condition:: tensor(1.6708e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7365e-06, dtype=torch.float64)
secont condition:: tensor(1.7365e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7548e-08, dtype=torch.float64)
secont condition:: tensor(5.7548e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4023e-08, dtype=torch.float64)
secont condition:: tensor(5.4023e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1219e-08, dtype=torch.float64)
secont condition:: tensor(6.1219e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8942e-08, dtype=torch.float64)
secont condition:: tensor(9.8942e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9196e-08, dtype=torch.float64)
secont condition:: tensor(9.9196e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5014e-07, dtype=torch.float64)
secont condition:: tensor(1.5014e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0364e-08, dtype=torch.float64)
secont condition:: tensor(9.0364e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9470e-08, dtype=torch.float64)
secont condition:: tensor(6.9470e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0866e-08, dtype=torch.float64)
secont condition:: tensor(9.0866e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7974e-07, dtype=torch.float64)
secont condition:: tensor(1.7974e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7535e-06, dtype=torch.float64)
secont condition:: tensor(3.7535e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6148e-08, dtype=torch.float64)
secont condition:: tensor(9.6148e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7024e-08, dtype=torch.float64)
secont condition:: tensor(8.7024e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.8545e-08, dtype=torch.float64)
secont condition:: tensor(7.8545e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1402e-07, dtype=torch.float64)
secont condition:: tensor(2.1402e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4509e-07, dtype=torch.float64)
secont condition:: tensor(1.4509e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6778e-08, dtype=torch.float64)
secont condition:: tensor(9.6778e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5470e-06, dtype=torch.float64)
secont condition:: tensor(1.5470e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8021e-08, dtype=torch.float64)
secont condition:: tensor(6.8021e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2982e-08, dtype=torch.float64)
secont condition:: tensor(6.2982e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6480e-07, dtype=torch.float64)
secont condition:: tensor(1.6480e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4863e-07, dtype=torch.float64)
secont condition:: tensor(1.4863e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7732e-08, dtype=torch.float64)
secont condition:: tensor(7.7732e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0882e-07, dtype=torch.float64)
secont condition:: tensor(2.0882e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1992e-07, dtype=torch.float64)
secont condition:: tensor(1.1992e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2375e-08, dtype=torch.float64)
secont condition:: tensor(9.2375e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9353e-08, dtype=torch.float64)
secont condition:: tensor(8.9353e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8794e-07, dtype=torch.float64)
secont condition:: tensor(1.8794e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2546e-07, dtype=torch.float64)
secont condition:: tensor(1.2546e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0315e-07, dtype=torch.float64)
secont condition:: tensor(1.0315e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1942e-07, dtype=torch.float64)
secont condition:: tensor(1.1942e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7881e-07, dtype=torch.float64)
secont condition:: tensor(1.7881e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1147e-07, dtype=torch.float64)
secont condition:: tensor(1.1147e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2749e-07, dtype=torch.float64)
secont condition:: tensor(2.2749e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4065e-07, dtype=torch.float64)
secont condition:: tensor(1.4065e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1065e-07, dtype=torch.float64)
secont condition:: tensor(3.1065e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6501e-07, dtype=torch.float64)
secont condition:: tensor(1.6501e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5022e-07, dtype=torch.float64)
secont condition:: tensor(3.5022e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7090e-07, dtype=torch.float64)
secont condition:: tensor(1.7090e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0403e-07, dtype=torch.float64)
secont condition:: tensor(4.0403e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0999e-07, dtype=torch.float64)
secont condition:: tensor(2.0999e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3043e-07, dtype=torch.float64)
secont condition:: tensor(4.3043e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0730e-07, dtype=torch.float64)
secont condition:: tensor(3.0730e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3209e-07, dtype=torch.float64)
secont condition:: tensor(3.3209e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 36.83622336387634
curr_diff: 0 tensor(4.9337e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9108e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.6562e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6565e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.9900e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7256e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.0067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6179e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7313e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2808e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5115e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3625e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212224
Test Avg. Loss: 0.000014, Accuracy: 0.962500
Train - Epoch 1, Batch: 0, Loss: 0.158984
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.152844
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.152685
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.145712
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.149593
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.149375
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 7, Batch: 0, Loss: 0.146616
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 8, Batch: 0, Loss: 0.145468
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 9, Batch: 0, Loss: 0.138192
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.148558
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.153027
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.146061
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 13, Batch: 0, Loss: 0.143919
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.149864
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 15, Batch: 0, Loss: 0.139310
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.147629
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 17, Batch: 0, Loss: 0.141790
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 18, Batch: 0, Loss: 0.140072
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.145570
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 20, Batch: 0, Loss: 0.144030
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.143042
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 22, Batch: 0, Loss: 0.139618
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 23, Batch: 0, Loss: 0.142781
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 24, Batch: 0, Loss: 0.142275
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 25, Batch: 0, Loss: 0.144747
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 26, Batch: 0, Loss: 0.141879
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 27, Batch: 0, Loss: 0.143323
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 28, Batch: 0, Loss: 0.144055
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 29, Batch: 0, Loss: 0.145123
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 30, Batch: 0, Loss: 0.141820
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 31, Batch: 0, Loss: 0.139484
Test Avg. Loss: 0.000013, Accuracy: 0.965700
training_time:: 65.92425107955933
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.3277587890625
time_baseline:: 44.40220236778259
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8828e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5394e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2515e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5339e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3743e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2825e-09, dtype=torch.float64)
secont condition:: tensor(1.2825e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.8690e-08, dtype=torch.float64)
secont condition:: tensor(2.8690e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8556e-08, dtype=torch.float64)
secont condition:: tensor(2.8556e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3554e-08, dtype=torch.float64)
secont condition:: tensor(8.3554e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1007e-08, dtype=torch.float64)
secont condition:: tensor(4.1007e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2949e-08, dtype=torch.float64)
secont condition:: tensor(1.2949e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7596e-08, dtype=torch.float64)
secont condition:: tensor(5.7596e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9416e-08, dtype=torch.float64)
secont condition:: tensor(5.9416e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2259e-08, dtype=torch.float64)
secont condition:: tensor(4.2259e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0164e-08, dtype=torch.float64)
secont condition:: tensor(9.0164e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0953e-08, dtype=torch.float64)
secont condition:: tensor(4.0953e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7586e-08, dtype=torch.float64)
secont condition:: tensor(4.7586e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0233e-08, dtype=torch.float64)
secont condition:: tensor(5.0233e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3879e-08, dtype=torch.float64)
secont condition:: tensor(2.3879e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5444e-08, dtype=torch.float64)
secont condition:: tensor(7.5444e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5455e-08, dtype=torch.float64)
secont condition:: tensor(5.5455e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6507e-08, dtype=torch.float64)
secont condition:: tensor(4.6507e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7778e-08, dtype=torch.float64)
secont condition:: tensor(7.7778e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5348e-08, dtype=torch.float64)
secont condition:: tensor(7.5348e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9647e-08, dtype=torch.float64)
secont condition:: tensor(4.9647e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8965e-08, dtype=torch.float64)
secont condition:: tensor(4.8965e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5726e-08, dtype=torch.float64)
secont condition:: tensor(4.5726e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0644e-08, dtype=torch.float64)
secont condition:: tensor(9.0644e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4526e-08, dtype=torch.float64)
secont condition:: tensor(5.4526e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1827e-07, dtype=torch.float64)
secont condition:: tensor(1.1827e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9841e-08, dtype=torch.float64)
secont condition:: tensor(6.9841e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2500e-08, dtype=torch.float64)
secont condition:: tensor(7.2500e-08, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4713e-08, dtype=torch.float64)
secont condition:: tensor(7.4713e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4719e-08, dtype=torch.float64)
secont condition:: tensor(7.4719e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3163e-08, dtype=torch.float64)
secont condition:: tensor(5.3163e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4532e-08, dtype=torch.float64)
secont condition:: tensor(8.4532e-08, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1049e-08, dtype=torch.float64)
secont condition:: tensor(8.1049e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2130e-08, dtype=torch.float64)
secont condition:: tensor(5.2130e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6650e-08, dtype=torch.float64)
secont condition:: tensor(7.6650e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3814e-08, dtype=torch.float64)
secont condition:: tensor(7.3814e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7917e-07, dtype=torch.float64)
secont condition:: tensor(1.7917e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1113e-07, dtype=torch.float64)
secont condition:: tensor(2.1113e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2443e-07, dtype=torch.float64)
secont condition:: tensor(1.2443e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8563e-08, dtype=torch.float64)
secont condition:: tensor(8.8563e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6445e-08, dtype=torch.float64)
secont condition:: tensor(8.6445e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4474e-07, dtype=torch.float64)
secont condition:: tensor(1.4474e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1753e-07, dtype=torch.float64)
secont condition:: tensor(1.1753e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0624e-07, dtype=torch.float64)
secont condition:: tensor(1.0624e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2074e-08, dtype=torch.float64)
secont condition:: tensor(9.2074e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3357e-08, dtype=torch.float64)
secont condition:: tensor(9.3357e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1266e-08, dtype=torch.float64)
secont condition:: tensor(7.1266e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2665e-07, dtype=torch.float64)
secont condition:: tensor(1.2665e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3985e-07, dtype=torch.float64)
secont condition:: tensor(1.3985e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9897e-08, dtype=torch.float64)
secont condition:: tensor(6.9897e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3247e-08, dtype=torch.float64)
secont condition:: tensor(8.3247e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0237e-07, dtype=torch.float64)
secont condition:: tensor(2.0237e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1616e-07, dtype=torch.float64)
secont condition:: tensor(1.1616e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3044e-07, dtype=torch.float64)
secont condition:: tensor(1.3044e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0800e-07, dtype=torch.float64)
secont condition:: tensor(1.0800e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5727e-08, dtype=torch.float64)
secont condition:: tensor(7.5727e-08, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5921e-07, dtype=torch.float64)
secont condition:: tensor(2.5921e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8634e-07, dtype=torch.float64)
secont condition:: tensor(2.8634e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0285e-07, dtype=torch.float64)
secont condition:: tensor(2.0285e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2137e-07, dtype=torch.float64)
secont condition:: tensor(1.2137e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1853e-08, dtype=torch.float64)
secont condition:: tensor(9.1853e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1484e-07, dtype=torch.float64)
secont condition:: tensor(1.1484e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0428e-07, dtype=torch.float64)
secont condition:: tensor(2.0428e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3534e-07, dtype=torch.float64)
secont condition:: tensor(1.3534e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0427e-08, dtype=torch.float64)
secont condition:: tensor(9.0427e-08, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0475e-07, dtype=torch.float64)
secont condition:: tensor(2.0475e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7716e-07, dtype=torch.float64)
secont condition:: tensor(1.7716e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5873e-07, dtype=torch.float64)
secont condition:: tensor(3.5873e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9157e-07, dtype=torch.float64)
secont condition:: tensor(1.9157e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8925e-07, dtype=torch.float64)
secont condition:: tensor(2.8925e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5023e-07, dtype=torch.float64)
secont condition:: tensor(2.5023e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6247e-07, dtype=torch.float64)
secont condition:: tensor(2.6247e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4250e-07, dtype=torch.float64)
secont condition:: tensor(3.4250e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.55528163909912
curr_diff: 0 tensor(5.9979e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8532e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.2398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6505e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6431e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.8926e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0747e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.6284e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4622e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6997e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3496e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5490e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5211e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212712
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 1, Batch: 0, Loss: 0.161901
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.153709
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.152288
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.151982
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 5, Batch: 0, Loss: 0.149631
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.148076
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.147738
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 8, Batch: 0, Loss: 0.149001
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.153652
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 10, Batch: 0, Loss: 0.146796
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 11, Batch: 0, Loss: 0.149169
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 12, Batch: 0, Loss: 0.140787
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.145132
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 14, Batch: 0, Loss: 0.146164
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 15, Batch: 0, Loss: 0.139183
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 16, Batch: 0, Loss: 0.141207
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.144789
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 18, Batch: 0, Loss: 0.142478
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 19, Batch: 0, Loss: 0.143884
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 20, Batch: 0, Loss: 0.140996
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 21, Batch: 0, Loss: 0.144668
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 22, Batch: 0, Loss: 0.146001
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 23, Batch: 0, Loss: 0.142423
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 24, Batch: 0, Loss: 0.137986
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.140548
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 26, Batch: 0, Loss: 0.144496
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 27, Batch: 0, Loss: 0.143273
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 28, Batch: 0, Loss: 0.142065
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 29, Batch: 0, Loss: 0.141248
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 30, Batch: 0, Loss: 0.137788
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 31, Batch: 0, Loss: 0.139147
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 65.82485151290894
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.25266909599304
time_baseline:: 44.32390236854553
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.4610e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4343e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2591e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4653e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4638e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2290e-07, dtype=torch.float64)
secont condition:: tensor(1.2290e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5657e-08, dtype=torch.float64)
secont condition:: tensor(3.5657e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7345e-08, dtype=torch.float64)
secont condition:: tensor(1.7345e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3010e-08, dtype=torch.float64)
secont condition:: tensor(4.3010e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0300e-08, dtype=torch.float64)
secont condition:: tensor(2.0300e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0204e-08, dtype=torch.float64)
secont condition:: tensor(4.0204e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9199e-08, dtype=torch.float64)
secont condition:: tensor(2.9199e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5106e-08, dtype=torch.float64)
secont condition:: tensor(3.5106e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3180e-08, dtype=torch.float64)
secont condition:: tensor(2.3180e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4318e-08, dtype=torch.float64)
secont condition:: tensor(5.4318e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6245e-08, dtype=torch.float64)
secont condition:: tensor(4.6245e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5365e-08, dtype=torch.float64)
secont condition:: tensor(3.5365e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1665e-08, dtype=torch.float64)
secont condition:: tensor(7.1665e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2611e-08, dtype=torch.float64)
secont condition:: tensor(4.2611e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9553e-08, dtype=torch.float64)
secont condition:: tensor(3.9553e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4976e-08, dtype=torch.float64)
secont condition:: tensor(3.4976e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2114e-08, dtype=torch.float64)
secont condition:: tensor(2.2114e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3813e-08, dtype=torch.float64)
secont condition:: tensor(7.3813e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5697e-08, dtype=torch.float64)
secont condition:: tensor(7.5697e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8852e-08, dtype=torch.float64)
secont condition:: tensor(4.8852e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6421e-08, dtype=torch.float64)
secont condition:: tensor(3.6421e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.4269e-08, dtype=torch.float64)
secont condition:: tensor(3.4269e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5936e-08, dtype=torch.float64)
secont condition:: tensor(8.5936e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3555e-08, dtype=torch.float64)
secont condition:: tensor(6.3555e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7054e-08, dtype=torch.float64)
secont condition:: tensor(4.7054e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7408e-08, dtype=torch.float64)
secont condition:: tensor(5.7408e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1848e-07, dtype=torch.float64)
secont condition:: tensor(1.1848e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9759e-08, dtype=torch.float64)
secont condition:: tensor(5.9759e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5967e-08, dtype=torch.float64)
secont condition:: tensor(4.5967e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1996e-08, dtype=torch.float64)
secont condition:: tensor(9.1996e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3117e-07, dtype=torch.float64)
secont condition:: tensor(1.3117e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0825e-08, dtype=torch.float64)
secont condition:: tensor(7.0825e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3805e-08, dtype=torch.float64)
secont condition:: tensor(5.3805e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0246e-08, dtype=torch.float64)
secont condition:: tensor(7.0246e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1090e-07, dtype=torch.float64)
secont condition:: tensor(1.1090e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5331e-08, dtype=torch.float64)
secont condition:: tensor(7.5331e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6678e-08, dtype=torch.float64)
secont condition:: tensor(5.6678e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6545e-08, dtype=torch.float64)
secont condition:: tensor(7.6545e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5215e-07, dtype=torch.float64)
secont condition:: tensor(1.5215e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1355e-08, dtype=torch.float64)
secont condition:: tensor(7.1355e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6175e-07, dtype=torch.float64)
secont condition:: tensor(1.6175e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1824e-07, dtype=torch.float64)
secont condition:: tensor(1.1824e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0701e-08, dtype=torch.float64)
secont condition:: tensor(3.0701e-08, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7762e-08, dtype=torch.float64)
secont condition:: tensor(8.7762e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4846e-07, dtype=torch.float64)
secont condition:: tensor(1.4846e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6163e-06, dtype=torch.float64)
secont condition:: tensor(1.6163e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2643e-08, dtype=torch.float64)
secont condition:: tensor(9.2643e-08, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1361e-08, dtype=torch.float64)
secont condition:: tensor(7.1361e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1845e-08, dtype=torch.float64)
secont condition:: tensor(5.1845e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0938e-08, dtype=torch.float64)
secont condition:: tensor(9.0938e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9875e-08, dtype=torch.float64)
secont condition:: tensor(6.9875e-08, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2235e-07, dtype=torch.float64)
secont condition:: tensor(2.2235e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8029e-07, dtype=torch.float64)
secont condition:: tensor(2.8029e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6089e-07, dtype=torch.float64)
secont condition:: tensor(1.6089e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0690e-07, dtype=torch.float64)
secont condition:: tensor(1.0690e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2060e-07, dtype=torch.float64)
secont condition:: tensor(1.2060e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2528e-08, dtype=torch.float64)
secont condition:: tensor(9.2528e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2829e-07, dtype=torch.float64)
secont condition:: tensor(1.2829e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1582e-07, dtype=torch.float64)
secont condition:: tensor(2.1582e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1133e-07, dtype=torch.float64)
secont condition:: tensor(1.1133e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0012e-07, dtype=torch.float64)
secont condition:: tensor(1.0012e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3094e-07, dtype=torch.float64)
secont condition:: tensor(1.3094e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6613e-07, dtype=torch.float64)
secont condition:: tensor(1.6613e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1646e-07, dtype=torch.float64)
secont condition:: tensor(1.1646e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4372e-07, dtype=torch.float64)
secont condition:: tensor(1.4372e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1719e-07, dtype=torch.float64)
secont condition:: tensor(2.1719e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6813e-07, dtype=torch.float64)
secont condition:: tensor(2.6813e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0452e-07, dtype=torch.float64)
secont condition:: tensor(3.0452e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2117e-07, dtype=torch.float64)
secont condition:: tensor(2.2117e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4391e-07, dtype=torch.float64)
secont condition:: tensor(2.4391e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8785e-07, dtype=torch.float64)
secont condition:: tensor(1.8785e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2065e-07, dtype=torch.float64)
secont condition:: tensor(4.2065e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 39.25120282173157
curr_diff: 0 tensor(5.0039e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.5176e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.7806e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6346e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(5.8444e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7255e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5054e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7935e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5347e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3187e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5167e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6377e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218976
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 1, Batch: 0, Loss: 0.157427
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.149033
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 3, Batch: 0, Loss: 0.156236
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.150799
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.144424
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 6, Batch: 0, Loss: 0.150260
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 7, Batch: 0, Loss: 0.148455
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.143131
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.143542
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.147692
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 11, Batch: 0, Loss: 0.145192
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 12, Batch: 0, Loss: 0.147402
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 13, Batch: 0, Loss: 0.145663
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.142987
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.142481
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.143785
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 17, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.147125
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 19, Batch: 0, Loss: 0.142015
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 20, Batch: 0, Loss: 0.142694
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 21, Batch: 0, Loss: 0.144651
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 22, Batch: 0, Loss: 0.144826
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 23, Batch: 0, Loss: 0.142020
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 24, Batch: 0, Loss: 0.145338
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 25, Batch: 0, Loss: 0.141383
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 26, Batch: 0, Loss: 0.142342
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 27, Batch: 0, Loss: 0.148451
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 28, Batch: 0, Loss: 0.140502
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 29, Batch: 0, Loss: 0.145860
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 30, Batch: 0, Loss: 0.141533
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 31, Batch: 0, Loss: 0.141463
Test Avg. Loss: 0.000013, Accuracy: 0.964800
training_time:: 65.96262693405151
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.28995370864868
time_baseline:: 44.36082100868225
curr_diff: 0 tensor(9.9852e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.4650e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5718e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4931e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 30
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9517e-09, dtype=torch.float64)
secont condition:: tensor(2.9517e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.7162e-09, dtype=torch.float64)
secont condition:: tensor(5.7162e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0080e-08, dtype=torch.float64)
secont condition:: tensor(3.0080e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8369e-08, dtype=torch.float64)
secont condition:: tensor(7.8369e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2125e-08, dtype=torch.float64)
secont condition:: tensor(3.2125e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8974e-08, dtype=torch.float64)
secont condition:: tensor(2.8974e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1321e-09, dtype=torch.float64)
secont condition:: tensor(5.1321e-09, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2406e-07, dtype=torch.float64)
secont condition:: tensor(1.2406e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5272e-07, dtype=torch.float64)
secont condition:: tensor(1.5272e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9342e-08, dtype=torch.float64)
secont condition:: tensor(7.9342e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0668e-08, dtype=torch.float64)
secont condition:: tensor(6.0668e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8680e-08, dtype=torch.float64)
secont condition:: tensor(4.8680e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3599e-08, dtype=torch.float64)
secont condition:: tensor(3.3599e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8779e-08, dtype=torch.float64)
secont condition:: tensor(2.8779e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0370e-08, dtype=torch.float64)
secont condition:: tensor(4.0370e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5738e-07, dtype=torch.float64)
secont condition:: tensor(1.5738e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0541e-08, dtype=torch.float64)
secont condition:: tensor(8.0541e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8480e-08, dtype=torch.float64)
secont condition:: tensor(6.8480e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1563e-07, dtype=torch.float64)
secont condition:: tensor(1.1563e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8191e-08, dtype=torch.float64)
secont condition:: tensor(7.8191e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1637e-08, dtype=torch.float64)
secont condition:: tensor(6.1637e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6530e-08, dtype=torch.float64)
secont condition:: tensor(5.6530e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.5882e-08, dtype=torch.float64)
secont condition:: tensor(8.5882e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1171e-07, dtype=torch.float64)
secont condition:: tensor(1.1171e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9234e-08, dtype=torch.float64)
secont condition:: tensor(7.9234e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3417e-08, dtype=torch.float64)
secont condition:: tensor(8.3417e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2586e-07, dtype=torch.float64)
secont condition:: tensor(1.2586e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0550e-08, dtype=torch.float64)
secont condition:: tensor(8.0550e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4169e-08, dtype=torch.float64)
secont condition:: tensor(5.4169e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0077e-08, dtype=torch.float64)
secont condition:: tensor(8.0077e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2352e-08, dtype=torch.float64)
secont condition:: tensor(7.2352e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0600e-08, dtype=torch.float64)
secont condition:: tensor(8.0600e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3143e-07, dtype=torch.float64)
secont condition:: tensor(1.3143e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6078e-08, dtype=torch.float64)
secont condition:: tensor(7.6078e-08, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7106e-08, dtype=torch.float64)
secont condition:: tensor(7.7106e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7799e-07, dtype=torch.float64)
secont condition:: tensor(1.7799e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0645e-07, dtype=torch.float64)
secont condition:: tensor(1.0645e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1591e-08, dtype=torch.float64)
secont condition:: tensor(8.1591e-08, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5442e-08, dtype=torch.float64)
secont condition:: tensor(7.5442e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1309e-08, dtype=torch.float64)
secont condition:: tensor(8.1309e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6860e-07, dtype=torch.float64)
secont condition:: tensor(1.6860e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3624e-07, dtype=torch.float64)
secont condition:: tensor(1.3624e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6979e-08, dtype=torch.float64)
secont condition:: tensor(8.6979e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0955e-08, dtype=torch.float64)
secont condition:: tensor(8.0955e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3472e-07, dtype=torch.float64)
secont condition:: tensor(1.3472e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1240e-07, dtype=torch.float64)
secont condition:: tensor(1.1240e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(9.9857e-08, dtype=torch.float64)
secont condition:: tensor(9.9857e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4552e-08, dtype=torch.float64)
secont condition:: tensor(6.4552e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5953e-07, dtype=torch.float64)
secont condition:: tensor(1.5953e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2769e-07, dtype=torch.float64)
secont condition:: tensor(1.2769e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0336e-07, dtype=torch.float64)
secont condition:: tensor(1.0336e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0622e-07, dtype=torch.float64)
secont condition:: tensor(1.0622e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6758e-07, dtype=torch.float64)
secont condition:: tensor(1.6758e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3765e-07, dtype=torch.float64)
secont condition:: tensor(1.3765e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4559e-07, dtype=torch.float64)
secont condition:: tensor(1.4559e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0137e-07, dtype=torch.float64)
secont condition:: tensor(1.0137e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0677e-07, dtype=torch.float64)
secont condition:: tensor(1.0677e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3249e-07, dtype=torch.float64)
secont condition:: tensor(1.3249e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4544e-07, dtype=torch.float64)
secont condition:: tensor(2.4544e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9028e-07, dtype=torch.float64)
secont condition:: tensor(2.9028e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6618e-07, dtype=torch.float64)
secont condition:: tensor(1.6618e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4779e-07, dtype=torch.float64)
secont condition:: tensor(1.4779e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2526e-07, dtype=torch.float64)
secont condition:: tensor(1.2526e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5862e-07, dtype=torch.float64)
secont condition:: tensor(1.5862e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5397e-07, dtype=torch.float64)
secont condition:: tensor(1.5397e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7463e-07, dtype=torch.float64)
secont condition:: tensor(2.7463e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2658e-07, dtype=torch.float64)
secont condition:: tensor(2.2658e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6700e-07, dtype=torch.float64)
secont condition:: tensor(2.6700e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4135e-07, dtype=torch.float64)
secont condition:: tensor(2.4135e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2083e-07, dtype=torch.float64)
secont condition:: tensor(4.2083e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0580e-07, dtype=torch.float64)
secont condition:: tensor(3.0580e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6360e-07, dtype=torch.float64)
secont condition:: tensor(3.6360e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4253e-07, dtype=torch.float64)
secont condition:: tensor(2.4253e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 37.605225563049316
curr_diff: 0 tensor(5.2226e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0491e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.5201e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2536e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.9492e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.1502e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0934e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.1201e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3839e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.8275e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6515e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2505e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4844e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5956e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.221613
Train - Epoch 0, Batch: 10, Loss: 0.141544
Test Avg. Loss: 0.000039, Accuracy: 0.964100
Train - Epoch 1, Batch: 0, Loss: 0.159708
Train - Epoch 1, Batch: 10, Loss: 0.155350
Test Avg. Loss: 0.000038, Accuracy: 0.964000
Train - Epoch 2, Batch: 0, Loss: 0.149969
Train - Epoch 2, Batch: 10, Loss: 0.147552
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.156771
Train - Epoch 3, Batch: 10, Loss: 0.150284
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 4, Batch: 0, Loss: 0.152012
Train - Epoch 4, Batch: 10, Loss: 0.136284
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 5, Batch: 0, Loss: 0.153090
Train - Epoch 5, Batch: 10, Loss: 0.135510
Test Avg. Loss: 0.000037, Accuracy: 0.965000
Train - Epoch 6, Batch: 0, Loss: 0.139081
Train - Epoch 6, Batch: 10, Loss: 0.142889
Test Avg. Loss: 0.000037, Accuracy: 0.966300
Train - Epoch 7, Batch: 0, Loss: 0.142913
Train - Epoch 7, Batch: 10, Loss: 0.133993
Test Avg. Loss: 0.000037, Accuracy: 0.964000
training_time:: 16.462627172470093
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.125308990478516
time_baseline:: 12.143420457839966
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8946e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.3628e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3824e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7915e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1428e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0012, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(-4.7525e-33, dtype=torch.float64)
curr_secont condition:: tensor(3.1170e-09, dtype=torch.float64)
secont condition:: tensor(3.1170e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.3444e-09, dtype=torch.float64)
secont condition:: tensor(5.3444e-09, dtype=torch.float64)
curr_secont condition:: tensor(6.2441e-08, dtype=torch.float64)
secont condition:: tensor(6.2441e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9465e-08, dtype=torch.float64)
secont condition:: tensor(2.9465e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0977e-07, dtype=torch.float64)
secont condition:: tensor(3.0977e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3731e-07, dtype=torch.float64)
secont condition:: tensor(1.3731e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5026e-08, dtype=torch.float64)
secont condition:: tensor(6.5026e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.0250e-08, dtype=torch.float64)
secont condition:: tensor(6.0250e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.3610e-08, dtype=torch.float64)
secont condition:: tensor(3.3610e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9830e-08, dtype=torch.float64)
secont condition:: tensor(9.9830e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9835e-08, dtype=torch.float64)
secont condition:: tensor(5.9835e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5706e-08, dtype=torch.float64)
secont condition:: tensor(3.5706e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9319e-08, dtype=torch.float64)
secont condition:: tensor(2.9319e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7782e-07, dtype=torch.float64)
secont condition:: tensor(1.7782e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3042e-07, dtype=torch.float64)
secont condition:: tensor(1.3042e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7728e-08, dtype=torch.float64)
secont condition:: tensor(7.7728e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4316e-07, dtype=torch.float64)
secont condition:: tensor(6.4316e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8423e-07, dtype=torch.float64)
secont condition:: tensor(3.8423e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4605e-07, dtype=torch.float64)
secont condition:: tensor(1.4605e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2109e-07, dtype=torch.float64)
secont condition:: tensor(1.2109e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0808e-07, dtype=torch.float64)
secont condition:: tensor(1.0808e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4365e-07, dtype=torch.float64)
secont condition:: tensor(1.4365e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9393e-08, dtype=torch.float64)
secont condition:: tensor(4.9393e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9121e-08, dtype=torch.float64)
secont condition:: tensor(5.9121e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1245e-07, dtype=torch.float64)
secont condition:: tensor(1.1245e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3376e-08, dtype=torch.float64)
secont condition:: tensor(5.3376e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1293e-08, dtype=torch.float64)
secont condition:: tensor(5.1293e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6910e-07, dtype=torch.float64)
secont condition:: tensor(1.6910e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7028e-07, dtype=torch.float64)
secont condition:: tensor(1.7028e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4479e-07, dtype=torch.float64)
secont condition:: tensor(6.4479e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1271e-07, dtype=torch.float64)
secont condition:: tensor(2.1271e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9435e-08, dtype=torch.float64)
secont condition:: tensor(8.9435e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7409e-07, dtype=torch.float64)
secont condition:: tensor(1.7409e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2092e-07, dtype=torch.float64)
secont condition:: tensor(1.2092e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8350e-08, dtype=torch.float64)
secont condition:: tensor(9.8350e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3169e-08, dtype=torch.float64)
secont condition:: tensor(5.3169e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2100e-08, dtype=torch.float64)
secont condition:: tensor(6.2100e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6291e-08, dtype=torch.float64)
secont condition:: tensor(7.6291e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3163e-08, dtype=torch.float64)
secont condition:: tensor(7.3163e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1350e-07, dtype=torch.float64)
secont condition:: tensor(1.1350e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7316e-08, dtype=torch.float64)
secont condition:: tensor(6.7316e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0233e-07, dtype=torch.float64)
secont condition:: tensor(1.0233e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3703e-07, dtype=torch.float64)
secont condition:: tensor(1.3703e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3321e-08, dtype=torch.float64)
secont condition:: tensor(7.3321e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3646e-07, dtype=torch.float64)
secont condition:: tensor(1.3646e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2987e-08, dtype=torch.float64)
secont condition:: tensor(5.2987e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0834e-07, dtype=torch.float64)
secont condition:: tensor(1.0834e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4599e-07, dtype=torch.float64)
secont condition:: tensor(1.4599e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0562e-07, dtype=torch.float64)
secont condition:: tensor(1.0562e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3438e-08, dtype=torch.float64)
secont condition:: tensor(9.3438e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.9059e-08, dtype=torch.float64)
secont condition:: tensor(5.9059e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9541e-08, dtype=torch.float64)
secont condition:: tensor(6.9541e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5715e-08, dtype=torch.float64)
secont condition:: tensor(9.5715e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2368e-08, dtype=torch.float64)
secont condition:: tensor(6.2368e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6499e-08, dtype=torch.float64)
secont condition:: tensor(6.6499e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5094e-08, dtype=torch.float64)
secont condition:: tensor(3.5094e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2459e-08, dtype=torch.float64)
secont condition:: tensor(9.2459e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4889e-08, dtype=torch.float64)
secont condition:: tensor(6.4889e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3924e-06, dtype=torch.float64)
secont condition:: tensor(2.3924e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9088e-07, dtype=torch.float64)
secont condition:: tensor(8.9088e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3367e-07, dtype=torch.float64)
secont condition:: tensor(2.3367e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8068e-07, dtype=torch.float64)
secont condition:: tensor(1.8068e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7218e-07, dtype=torch.float64)
secont condition:: tensor(1.7218e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0146e-07, dtype=torch.float64)
secont condition:: tensor(2.0146e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0580e-07, dtype=torch.float64)
secont condition:: tensor(1.0580e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6370e-07, dtype=torch.float64)
secont condition:: tensor(1.6370e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7181e-07, dtype=torch.float64)
secont condition:: tensor(3.7181e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5694e-07, dtype=torch.float64)
secont condition:: tensor(3.5694e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1741e-07, dtype=torch.float64)
secont condition:: tensor(3.1741e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5651e-07, dtype=torch.float64)
secont condition:: tensor(3.5651e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9826e-07, dtype=torch.float64)
secont condition:: tensor(3.9826e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.376874446868896
curr_diff: 0 tensor(8.9889e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4429e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.4761e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.2334e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.0049e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.1460e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.5086e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.1347e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.2735e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4807e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.0740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2310e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0013, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.208043
Train - Epoch 0, Batch: 10, Loss: 0.148200
Test Avg. Loss: 0.000039, Accuracy: 0.963500
Train - Epoch 1, Batch: 0, Loss: 0.159136
Train - Epoch 1, Batch: 10, Loss: 0.136884
Test Avg. Loss: 0.000038, Accuracy: 0.962800
Train - Epoch 2, Batch: 0, Loss: 0.138990
Train - Epoch 2, Batch: 10, Loss: 0.151019
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.150904
Train - Epoch 3, Batch: 10, Loss: 0.132573
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 4, Batch: 0, Loss: 0.136238
Train - Epoch 4, Batch: 10, Loss: 0.144700
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 5, Batch: 0, Loss: 0.141773
Train - Epoch 5, Batch: 10, Loss: 0.139369
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 6, Batch: 0, Loss: 0.147530
Train - Epoch 6, Batch: 10, Loss: 0.149600
Test Avg. Loss: 0.000037, Accuracy: 0.965800
Train - Epoch 7, Batch: 0, Loss: 0.140227
Train - Epoch 7, Batch: 10, Loss: 0.141442
Test Avg. Loss: 0.000037, Accuracy: 0.965000
training_time:: 16.318978309631348
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.143464803695679
time_baseline:: 12.161232233047485
curr_diff: 0 tensor(9.8415e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.0481e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2093e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2963e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4707e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4109e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8245e-07, dtype=torch.float64)
secont condition:: tensor(1.8245e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1338e-07, dtype=torch.float64)
secont condition:: tensor(1.1338e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6820e-08, dtype=torch.float64)
secont condition:: tensor(2.6820e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9460e-07, dtype=torch.float64)
secont condition:: tensor(4.9460e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9853e-07, dtype=torch.float64)
secont condition:: tensor(2.9853e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5361e-07, dtype=torch.float64)
secont condition:: tensor(1.5361e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1609e-07, dtype=torch.float64)
secont condition:: tensor(1.1609e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3177e-08, dtype=torch.float64)
secont condition:: tensor(7.3177e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.4109e-08, dtype=torch.float64)
secont condition:: tensor(5.4109e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.2742e-08, dtype=torch.float64)
secont condition:: tensor(7.2742e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.7209e-09, dtype=torch.float64)
secont condition:: tensor(7.7209e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0145e-08, dtype=torch.float64)
secont condition:: tensor(4.0145e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2743e-08, dtype=torch.float64)
secont condition:: tensor(5.2743e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.8147e-08, dtype=torch.float64)
secont condition:: tensor(3.8147e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9094e-08, dtype=torch.float64)
secont condition:: tensor(3.9094e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6639e-07, dtype=torch.float64)
secont condition:: tensor(4.6639e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2358e-07, dtype=torch.float64)
secont condition:: tensor(1.2358e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5709e-07, dtype=torch.float64)
secont condition:: tensor(1.5709e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8358e-08, dtype=torch.float64)
secont condition:: tensor(8.8358e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9588e-08, dtype=torch.float64)
secont condition:: tensor(8.9588e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4539e-07, dtype=torch.float64)
secont condition:: tensor(1.4539e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7264e-07, dtype=torch.float64)
secont condition:: tensor(1.7264e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0715e-08, dtype=torch.float64)
secont condition:: tensor(8.0715e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8181e-08, dtype=torch.float64)
secont condition:: tensor(2.8181e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2742e-07, dtype=torch.float64)
secont condition:: tensor(1.2742e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0741e-08, dtype=torch.float64)
secont condition:: tensor(7.0741e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6619e-08, dtype=torch.float64)
secont condition:: tensor(6.6619e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9198e-08, dtype=torch.float64)
secont condition:: tensor(3.9198e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1517e-08, dtype=torch.float64)
secont condition:: tensor(5.1517e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8669e-08, dtype=torch.float64)
secont condition:: tensor(7.8669e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2891e-07, dtype=torch.float64)
secont condition:: tensor(1.2891e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1738e-08, dtype=torch.float64)
secont condition:: tensor(8.1738e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1352e-08, dtype=torch.float64)
secont condition:: tensor(6.1352e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8809e-08, dtype=torch.float64)
secont condition:: tensor(2.8809e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4742e-08, dtype=torch.float64)
secont condition:: tensor(4.4742e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5879e-08, dtype=torch.float64)
secont condition:: tensor(5.5879e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0284e-08, dtype=torch.float64)
secont condition:: tensor(9.0284e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6230e-08, dtype=torch.float64)
secont condition:: tensor(4.6230e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5360e-07, dtype=torch.float64)
secont condition:: tensor(7.5360e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5661e-07, dtype=torch.float64)
secont condition:: tensor(2.5661e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2700e-07, dtype=torch.float64)
secont condition:: tensor(1.2700e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8088e-07, dtype=torch.float64)
secont condition:: tensor(1.8088e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3037e-08, dtype=torch.float64)
secont condition:: tensor(2.3037e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0919e-07, dtype=torch.float64)
secont condition:: tensor(1.0919e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3191e-07, dtype=torch.float64)
secont condition:: tensor(1.3191e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6745e-07, dtype=torch.float64)
secont condition:: tensor(1.6745e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6396e-07, dtype=torch.float64)
secont condition:: tensor(8.6396e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4221e-07, dtype=torch.float64)
secont condition:: tensor(4.4221e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0806e-07, dtype=torch.float64)
secont condition:: tensor(3.0806e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5434e-07, dtype=torch.float64)
secont condition:: tensor(2.5434e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3598e-07, dtype=torch.float64)
secont condition:: tensor(1.3598e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5394e-07, dtype=torch.float64)
secont condition:: tensor(1.5394e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6207e-07, dtype=torch.float64)
secont condition:: tensor(1.6207e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4146e-07, dtype=torch.float64)
secont condition:: tensor(1.4146e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1228e-07, dtype=torch.float64)
secont condition:: tensor(1.1228e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1547e-07, dtype=torch.float64)
secont condition:: tensor(1.1547e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1487e-07, dtype=torch.float64)
secont condition:: tensor(2.1487e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2251e-07, dtype=torch.float64)
secont condition:: tensor(1.2251e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1434e-08, dtype=torch.float64)
secont condition:: tensor(7.1434e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4348e-07, dtype=torch.float64)
secont condition:: tensor(1.4348e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5201e-07, dtype=torch.float64)
secont condition:: tensor(1.5201e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0601e-07, dtype=torch.float64)
secont condition:: tensor(1.0601e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2356e-07, dtype=torch.float64)
secont condition:: tensor(1.2356e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3724e-08, dtype=torch.float64)
secont condition:: tensor(8.3724e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8823e-08, dtype=torch.float64)
secont condition:: tensor(9.8823e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4378e-07, dtype=torch.float64)
secont condition:: tensor(1.4378e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8653e-07, dtype=torch.float64)
secont condition:: tensor(1.8653e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0787e-07, dtype=torch.float64)
secont condition:: tensor(2.0787e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4358e-07, dtype=torch.float64)
secont condition:: tensor(2.4358e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6432e-07, dtype=torch.float64)
secont condition:: tensor(2.6432e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7690e-07, dtype=torch.float64)
secont condition:: tensor(1.7690e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.548835039138794
curr_diff: 0 tensor(1.6902e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1964e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3644e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.4282e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4246e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.6520e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.4768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9595e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5132e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.3183e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3029e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5754e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965400
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.206091
Train - Epoch 0, Batch: 10, Loss: 0.153737
Test Avg. Loss: 0.000039, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.156440
Train - Epoch 1, Batch: 10, Loss: 0.151787
Test Avg. Loss: 0.000038, Accuracy: 0.964000
Train - Epoch 2, Batch: 0, Loss: 0.137766
Train - Epoch 2, Batch: 10, Loss: 0.148373
Test Avg. Loss: 0.000037, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.136659
Train - Epoch 3, Batch: 10, Loss: 0.152340
Test Avg. Loss: 0.000037, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.145187
Train - Epoch 4, Batch: 10, Loss: 0.138184
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.141417
Train - Epoch 5, Batch: 10, Loss: 0.139637
Test Avg. Loss: 0.000037, Accuracy: 0.965700
Train - Epoch 6, Batch: 0, Loss: 0.141845
Train - Epoch 6, Batch: 10, Loss: 0.145348
Test Avg. Loss: 0.000037, Accuracy: 0.964600
Train - Epoch 7, Batch: 0, Loss: 0.147908
Train - Epoch 7, Batch: 10, Loss: 0.146833
Test Avg. Loss: 0.000037, Accuracy: 0.964800
training_time:: 16.354325771331787
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.134145021438599
time_baseline:: 12.161715507507324
curr_diff: 0 tensor(9.1626e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.6689e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9144e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2998e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4763e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.3364e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2735e-07, dtype=torch.float64)
secont condition:: tensor(3.2735e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1541e-07, dtype=torch.float64)
secont condition:: tensor(1.1541e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6168e-08, dtype=torch.float64)
secont condition:: tensor(4.6168e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7531e-08, dtype=torch.float64)
secont condition:: tensor(2.7531e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0503e-08, dtype=torch.float64)
secont condition:: tensor(2.0503e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5417e-08, dtype=torch.float64)
secont condition:: tensor(3.5417e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.7611e-07, dtype=torch.float64)
secont condition:: tensor(3.7611e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0521e-07, dtype=torch.float64)
secont condition:: tensor(2.0521e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5662e-08, dtype=torch.float64)
secont condition:: tensor(9.5662e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6191e-08, dtype=torch.float64)
secont condition:: tensor(6.6191e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6708e-08, dtype=torch.float64)
secont condition:: tensor(4.6708e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.7200e-08, dtype=torch.float64)
secont condition:: tensor(5.7200e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8401e-08, dtype=torch.float64)
secont condition:: tensor(4.8401e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7949e-08, dtype=torch.float64)
secont condition:: tensor(2.7949e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6980e-08, dtype=torch.float64)
secont condition:: tensor(3.6980e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1228e-08, dtype=torch.float64)
secont condition:: tensor(9.1228e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.0286e-08, dtype=torch.float64)
secont condition:: tensor(9.0286e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6017e-08, dtype=torch.float64)
secont condition:: tensor(5.6017e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7962e-07, dtype=torch.float64)
secont condition:: tensor(6.7962e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1525e-07, dtype=torch.float64)
secont condition:: tensor(2.1525e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3651e-07, dtype=torch.float64)
secont condition:: tensor(1.3651e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4153e-07, dtype=torch.float64)
secont condition:: tensor(1.4153e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8803e-08, dtype=torch.float64)
secont condition:: tensor(7.8803e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6041e-08, dtype=torch.float64)
secont condition:: tensor(6.6041e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0786e-08, dtype=torch.float64)
secont condition:: tensor(7.0786e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9505e-08, dtype=torch.float64)
secont condition:: tensor(6.9505e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1636e-08, dtype=torch.float64)
secont condition:: tensor(6.1636e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1050e-08, dtype=torch.float64)
secont condition:: tensor(1.1050e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2788e-08, dtype=torch.float64)
secont condition:: tensor(5.2788e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4831e-08, dtype=torch.float64)
secont condition:: tensor(3.4831e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3948e-08, dtype=torch.float64)
secont condition:: tensor(9.3948e-08, dtype=torch.float64)
curr_secont condition:: tensor(-2.7653e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5510e-08, dtype=torch.float64)
secont condition:: tensor(6.5510e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1912e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.5950e-08, dtype=torch.float64)
secont condition:: tensor(3.5950e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3049e-08, dtype=torch.float64)
secont condition:: tensor(2.3049e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6114e-08, dtype=torch.float64)
secont condition:: tensor(9.6114e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.5823e-08, dtype=torch.float64)
secont condition:: tensor(7.5823e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7269e-09, dtype=torch.float64)
secont condition:: tensor(1.7269e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4853e-08, dtype=torch.float64)
secont condition:: tensor(1.4853e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1819e-07, dtype=torch.float64)
secont condition:: tensor(1.1819e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6304e-07, dtype=torch.float64)
secont condition:: tensor(1.6304e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5270e-07, dtype=torch.float64)
secont condition:: tensor(6.5270e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6577e-07, dtype=torch.float64)
secont condition:: tensor(2.6577e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8532e-07, dtype=torch.float64)
secont condition:: tensor(1.8532e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1555e-08, dtype=torch.float64)
secont condition:: tensor(7.1555e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1939e-08, dtype=torch.float64)
secont condition:: tensor(5.1939e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8694e-07, dtype=torch.float64)
secont condition:: tensor(1.8694e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9280e-08, dtype=torch.float64)
secont condition:: tensor(3.9280e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0305e-07, dtype=torch.float64)
secont condition:: tensor(1.0305e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4687e-08, dtype=torch.float64)
secont condition:: tensor(7.4687e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0321e-08, dtype=torch.float64)
secont condition:: tensor(5.0321e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5754e-07, dtype=torch.float64)
secont condition:: tensor(9.5754e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4340e-07, dtype=torch.float64)
secont condition:: tensor(3.4340e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3019e-07, dtype=torch.float64)
secont condition:: tensor(3.3019e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0892e-07, dtype=torch.float64)
secont condition:: tensor(2.0892e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4367e-07, dtype=torch.float64)
secont condition:: tensor(1.4367e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5593e-07, dtype=torch.float64)
secont condition:: tensor(1.5593e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6733e-07, dtype=torch.float64)
secont condition:: tensor(1.6733e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5025e-08, dtype=torch.float64)
secont condition:: tensor(9.5025e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1458e-07, dtype=torch.float64)
secont condition:: tensor(1.1458e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1253e-07, dtype=torch.float64)
secont condition:: tensor(1.1253e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6481e-08, dtype=torch.float64)
secont condition:: tensor(5.6481e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2726e-08, dtype=torch.float64)
secont condition:: tensor(8.2726e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2909e-07, dtype=torch.float64)
secont condition:: tensor(2.2909e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1746e-07, dtype=torch.float64)
secont condition:: tensor(2.1746e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1146e-06, dtype=torch.float64)
secont condition:: tensor(1.1146e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7333e-07, dtype=torch.float64)
secont condition:: tensor(1.7333e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4526e-07, dtype=torch.float64)
secont condition:: tensor(4.4526e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6519e-07, dtype=torch.float64)
secont condition:: tensor(3.6519e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8945e-07, dtype=torch.float64)
secont condition:: tensor(2.8945e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3271e-07, dtype=torch.float64)
secont condition:: tensor(3.3271e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.249191284179688
curr_diff: 0 tensor(9.9889e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.2161e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.8886e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.4139e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.3600e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7931e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.8924e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.3957e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.5497e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1725e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3264e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.5453e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4307e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.219085
Train - Epoch 0, Batch: 10, Loss: 0.148080
Test Avg. Loss: 0.000038, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.145465
Train - Epoch 1, Batch: 10, Loss: 0.163721
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 2, Batch: 0, Loss: 0.149123
Train - Epoch 2, Batch: 10, Loss: 0.151739
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 3, Batch: 0, Loss: 0.143501
Train - Epoch 3, Batch: 10, Loss: 0.144936
Test Avg. Loss: 0.000037, Accuracy: 0.963900
Train - Epoch 4, Batch: 0, Loss: 0.123591
Train - Epoch 4, Batch: 10, Loss: 0.148073
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 5, Batch: 0, Loss: 0.144171
Train - Epoch 5, Batch: 10, Loss: 0.146809
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 6, Batch: 0, Loss: 0.149660
Train - Epoch 6, Batch: 10, Loss: 0.148895
Test Avg. Loss: 0.000037, Accuracy: 0.966400
Train - Epoch 7, Batch: 0, Loss: 0.142182
Train - Epoch 7, Batch: 10, Loss: 0.147352
Test Avg. Loss: 0.000037, Accuracy: 0.965400
training_time:: 16.312052488327026
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.126005411148071
time_baseline:: 12.14349627494812
curr_diff: 0 tensor(9.5135e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5647e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5690e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3475e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6061e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4224e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4668e-33, dtype=torch.float64)
secont condition:: tensor(9.4668e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.6225e-32, dtype=torch.float64)
secont condition:: tensor(1.6225e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.9604e-09, dtype=torch.float64)
secont condition:: tensor(3.9604e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5372e-09, dtype=torch.float64)
secont condition:: tensor(1.5372e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.3510e-08, dtype=torch.float64)
secont condition:: tensor(2.3510e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7074e-09, dtype=torch.float64)
secont condition:: tensor(8.7074e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.2091e-08, dtype=torch.float64)
secont condition:: tensor(3.2091e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3009e-08, dtype=torch.float64)
secont condition:: tensor(1.3009e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9895e-09, dtype=torch.float64)
secont condition:: tensor(8.9895e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6087e-08, dtype=torch.float64)
secont condition:: tensor(1.6087e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3432e-07, dtype=torch.float64)
secont condition:: tensor(4.3432e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6168e-07, dtype=torch.float64)
secont condition:: tensor(1.6168e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7462e-07, dtype=torch.float64)
secont condition:: tensor(1.7462e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8058e-08, dtype=torch.float64)
secont condition:: tensor(4.8058e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0123e-08, dtype=torch.float64)
secont condition:: tensor(8.0123e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7686e-07, dtype=torch.float64)
secont condition:: tensor(6.7686e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0596e-07, dtype=torch.float64)
secont condition:: tensor(2.0596e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3578e-07, dtype=torch.float64)
secont condition:: tensor(2.3578e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4025e-07, dtype=torch.float64)
secont condition:: tensor(1.4025e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.9985e-08, dtype=torch.float64)
secont condition:: tensor(7.9985e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.4709e-08, dtype=torch.float64)
secont condition:: tensor(8.4709e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8396e-08, dtype=torch.float64)
secont condition:: tensor(6.8396e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6532e-08, dtype=torch.float64)
secont condition:: tensor(5.6532e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0575e-07, dtype=torch.float64)
secont condition:: tensor(1.0575e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3650e-07, dtype=torch.float64)
secont condition:: tensor(1.3650e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4330e-07, dtype=torch.float64)
secont condition:: tensor(1.4330e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0356e-08, dtype=torch.float64)
secont condition:: tensor(9.0356e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0872e-07, dtype=torch.float64)
secont condition:: tensor(1.0872e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2796e-08, dtype=torch.float64)
secont condition:: tensor(8.2796e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3217e-08, dtype=torch.float64)
secont condition:: tensor(5.3217e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1628e-08, dtype=torch.float64)
secont condition:: tensor(6.1628e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.7087e-08, dtype=torch.float64)
secont condition:: tensor(9.7087e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9977e-08, dtype=torch.float64)
secont condition:: tensor(4.9977e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5758e-08, dtype=torch.float64)
secont condition:: tensor(4.5758e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5573e-08, dtype=torch.float64)
secont condition:: tensor(3.5573e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3364e-09, dtype=torch.float64)
secont condition:: tensor(9.3364e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.0245e-07, dtype=torch.float64)
secont condition:: tensor(1.0245e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4154e-07, dtype=torch.float64)
secont condition:: tensor(4.4154e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2902e-07, dtype=torch.float64)
secont condition:: tensor(2.2902e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8781e-07, dtype=torch.float64)
secont condition:: tensor(1.8781e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0525e-07, dtype=torch.float64)
secont condition:: tensor(1.0525e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1716e-07, dtype=torch.float64)
secont condition:: tensor(1.1716e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3018e-07, dtype=torch.float64)
secont condition:: tensor(1.3018e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2022e-08, dtype=torch.float64)
secont condition:: tensor(6.2022e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7746e-08, dtype=torch.float64)
secont condition:: tensor(6.7746e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9191e-08, dtype=torch.float64)
secont condition:: tensor(7.9191e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3546e-07, dtype=torch.float64)
secont condition:: tensor(1.3546e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9434e-08, dtype=torch.float64)
secont condition:: tensor(8.9434e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.3714e-06, dtype=torch.float64)
secont condition:: tensor(2.3714e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4520e-07, dtype=torch.float64)
secont condition:: tensor(3.4520e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9533e-07, dtype=torch.float64)
secont condition:: tensor(1.9533e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0661e-07, dtype=torch.float64)
secont condition:: tensor(1.0661e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3276e-07, dtype=torch.float64)
secont condition:: tensor(2.3276e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3810e-07, dtype=torch.float64)
secont condition:: tensor(2.3810e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7617e-07, dtype=torch.float64)
secont condition:: tensor(1.7617e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2993e-07, dtype=torch.float64)
secont condition:: tensor(1.2993e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0094e-07, dtype=torch.float64)
secont condition:: tensor(2.0094e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2117e-07, dtype=torch.float64)
secont condition:: tensor(1.2117e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2171e-07, dtype=torch.float64)
secont condition:: tensor(1.2171e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3386e-07, dtype=torch.float64)
secont condition:: tensor(1.3386e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2976e-08, dtype=torch.float64)
secont condition:: tensor(9.2976e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0579e-07, dtype=torch.float64)
secont condition:: tensor(1.0579e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2531e-08, dtype=torch.float64)
secont condition:: tensor(9.2531e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3941e-08, dtype=torch.float64)
secont condition:: tensor(9.3941e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0896e-08, dtype=torch.float64)
secont condition:: tensor(9.0896e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6165e-07, dtype=torch.float64)
secont condition:: tensor(2.6165e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4045e-07, dtype=torch.float64)
secont condition:: tensor(2.4045e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2609e-07, dtype=torch.float64)
secont condition:: tensor(2.2609e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5929e-07, dtype=torch.float64)
secont condition:: tensor(1.5929e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.333715438842773
curr_diff: 0 tensor(1.0644e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2647e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.1796e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7152e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.6867e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.4059e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.3332e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5541e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3015e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6697e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6896e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.5475e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.7276e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5700e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965200
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.218355
Train - Epoch 0, Batch: 10, Loss: 0.157567
Test Avg. Loss: 0.000039, Accuracy: 0.964500
Train - Epoch 1, Batch: 0, Loss: 0.157711
Train - Epoch 1, Batch: 10, Loss: 0.143484
Test Avg. Loss: 0.000038, Accuracy: 0.963300
Train - Epoch 2, Batch: 0, Loss: 0.137467
Train - Epoch 2, Batch: 10, Loss: 0.158948
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.140325
Train - Epoch 3, Batch: 10, Loss: 0.142806
Test Avg. Loss: 0.000037, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.144219
Train - Epoch 4, Batch: 10, Loss: 0.154375
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 5, Batch: 0, Loss: 0.140708
Train - Epoch 5, Batch: 10, Loss: 0.148605
Test Avg. Loss: 0.000037, Accuracy: 0.965300
Train - Epoch 6, Batch: 0, Loss: 0.155335
Train - Epoch 6, Batch: 10, Loss: 0.146816
Test Avg. Loss: 0.000037, Accuracy: 0.965000
Train - Epoch 7, Batch: 0, Loss: 0.149696
Train - Epoch 7, Batch: 10, Loss: 0.150032
Test Avg. Loss: 0.000037, Accuracy: 0.964200
training_time:: 16.40199613571167
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.167455911636353
time_baseline:: 12.185166597366333
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.4847e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8664e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3402e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6280e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4846e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 30
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0250e-07, dtype=torch.float64)
secont condition:: tensor(1.0250e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8760e-08, dtype=torch.float64)
secont condition:: tensor(2.8760e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1341e-08, dtype=torch.float64)
secont condition:: tensor(6.1341e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7505e-08, dtype=torch.float64)
secont condition:: tensor(2.7505e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7590e-07, dtype=torch.float64)
secont condition:: tensor(1.7590e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8263e-08, dtype=torch.float64)
secont condition:: tensor(4.8263e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2556e-07, dtype=torch.float64)
secont condition:: tensor(1.2556e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9053e-08, dtype=torch.float64)
secont condition:: tensor(4.9053e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5155e-08, dtype=torch.float64)
secont condition:: tensor(2.5155e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7342e-08, dtype=torch.float64)
secont condition:: tensor(1.7342e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1030e-09, dtype=torch.float64)
secont condition:: tensor(2.1030e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.7862e-07, dtype=torch.float64)
secont condition:: tensor(3.7862e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7066e-07, dtype=torch.float64)
secont condition:: tensor(1.7066e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1565e-07, dtype=torch.float64)
secont condition:: tensor(1.1565e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8959e-08, dtype=torch.float64)
secont condition:: tensor(6.8959e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9035e-08, dtype=torch.float64)
secont condition:: tensor(1.9035e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6009e-08, dtype=torch.float64)
secont condition:: tensor(3.6009e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8343e-08, dtype=torch.float64)
secont condition:: tensor(6.8343e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2691e-08, dtype=torch.float64)
secont condition:: tensor(3.2691e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0573e-07, dtype=torch.float64)
secont condition:: tensor(1.0573e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6762e-08, dtype=torch.float64)
secont condition:: tensor(3.6762e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2767e-08, dtype=torch.float64)
secont condition:: tensor(3.2767e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.1905e-07, dtype=torch.float64)
secont condition:: tensor(6.1905e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6576e-07, dtype=torch.float64)
secont condition:: tensor(2.6576e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5482e-07, dtype=torch.float64)
secont condition:: tensor(1.5482e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5105e-08, dtype=torch.float64)
secont condition:: tensor(8.5105e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7424e-08, dtype=torch.float64)
secont condition:: tensor(4.7424e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9317e-08, dtype=torch.float64)
secont condition:: tensor(6.9317e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2411e-07, dtype=torch.float64)
secont condition:: tensor(1.2411e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6753e-07, dtype=torch.float64)
secont condition:: tensor(1.6753e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2888e-07, dtype=torch.float64)
secont condition:: tensor(1.2888e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5932e-08, dtype=torch.float64)
secont condition:: tensor(7.5932e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7927e-08, dtype=torch.float64)
secont condition:: tensor(8.7927e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4969e-08, dtype=torch.float64)
secont condition:: tensor(4.4969e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0905e-08, dtype=torch.float64)
secont condition:: tensor(1.0905e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5784e-07, dtype=torch.float64)
secont condition:: tensor(1.5784e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9050e-08, dtype=torch.float64)
secont condition:: tensor(5.9050e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.3018e-08, dtype=torch.float64)
secont condition:: tensor(5.3018e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8591e-07, dtype=torch.float64)
secont condition:: tensor(1.8591e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0788e-07, dtype=torch.float64)
secont condition:: tensor(1.0788e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1930e-07, dtype=torch.float64)
secont condition:: tensor(7.1930e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1920e-07, dtype=torch.float64)
secont condition:: tensor(2.1920e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7980e-07, dtype=torch.float64)
secont condition:: tensor(1.7980e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8743e-08, dtype=torch.float64)
secont condition:: tensor(7.8743e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9661e-07, dtype=torch.float64)
secont condition:: tensor(1.9661e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8359e-07, dtype=torch.float64)
secont condition:: tensor(1.8359e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5263e-07, dtype=torch.float64)
secont condition:: tensor(1.5263e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6352e-07, dtype=torch.float64)
secont condition:: tensor(2.6352e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0523e-07, dtype=torch.float64)
secont condition:: tensor(1.0523e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1521e-08, dtype=torch.float64)
secont condition:: tensor(7.1521e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.6234e-07, dtype=torch.float64)
secont condition:: tensor(8.6234e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5498e-07, dtype=torch.float64)
secont condition:: tensor(4.5498e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9063e-07, dtype=torch.float64)
secont condition:: tensor(2.9063e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5340e-07, dtype=torch.float64)
secont condition:: tensor(1.5340e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9350e-07, dtype=torch.float64)
secont condition:: tensor(1.9350e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4889e-07, dtype=torch.float64)
secont condition:: tensor(1.4889e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8327e-07, dtype=torch.float64)
secont condition:: tensor(1.8327e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6165e-07, dtype=torch.float64)
secont condition:: tensor(1.6165e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1235e-07, dtype=torch.float64)
secont condition:: tensor(1.1235e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6653e-07, dtype=torch.float64)
secont condition:: tensor(1.6653e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5991e-07, dtype=torch.float64)
secont condition:: tensor(1.5991e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6018e-06, dtype=torch.float64)
secont condition:: tensor(1.6018e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9430e-07, dtype=torch.float64)
secont condition:: tensor(4.9430e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9110e-07, dtype=torch.float64)
secont condition:: tensor(2.9110e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5515e-07, dtype=torch.float64)
secont condition:: tensor(1.5515e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3845e-07, dtype=torch.float64)
secont condition:: tensor(1.3845e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0992e-07, dtype=torch.float64)
secont condition:: tensor(2.0992e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0492e-06, dtype=torch.float64)
secont condition:: tensor(1.0492e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8925e-07, dtype=torch.float64)
secont condition:: tensor(2.8925e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5790e-07, dtype=torch.float64)
secont condition:: tensor(3.5790e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2947e-07, dtype=torch.float64)
secont condition:: tensor(3.2947e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7354e-07, dtype=torch.float64)
secont condition:: tensor(4.7354e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.099441766738892
curr_diff: 0 tensor(1.1347e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.7643e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.2945e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(5.7986e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.1692e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7713e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.8732e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.3799e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2954e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9040e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3840e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6485e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.6433e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965100
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.236320
Train - Epoch 0, Batch: 10, Loss: 0.147173
Train - Epoch 0, Batch: 20, Loss: 0.139037
Train - Epoch 0, Batch: 30, Loss: 0.172627
Train - Epoch 0, Batch: 40, Loss: 0.137504
Train - Epoch 0, Batch: 50, Loss: 0.137637
Test Avg. Loss: 0.000131, Accuracy: 0.964400
Train - Epoch 1, Batch: 0, Loss: 0.159994
Train - Epoch 1, Batch: 10, Loss: 0.123509
Train - Epoch 1, Batch: 20, Loss: 0.160957
Train - Epoch 1, Batch: 30, Loss: 0.151472
Train - Epoch 1, Batch: 40, Loss: 0.132555
Train - Epoch 1, Batch: 50, Loss: 0.167185
Test Avg. Loss: 0.000131, Accuracy: 0.963200
training_time:: 5.262316942214966
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.248966693878174
time_baseline:: 4.253793954849243
curr_diff: 0 tensor(9.5853e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0526e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8162e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2354e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5025e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.963100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7689e-33, dtype=torch.float64)
secont condition:: tensor(6.7689e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.2557e-32, dtype=torch.float64)
secont condition:: tensor(1.2557e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.9609e-32, dtype=torch.float64)
secont condition:: tensor(1.9609e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.2081e-32, dtype=torch.float64)
secont condition:: tensor(2.2081e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.5904e-32, dtype=torch.float64)
secont condition:: tensor(2.5904e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.3715e-32, dtype=torch.float64)
secont condition:: tensor(3.3715e-32, dtype=torch.float64)
curr_secont condition:: tensor(4.4511e-32, dtype=torch.float64)
secont condition:: tensor(4.4511e-32, dtype=torch.float64)
curr_secont condition:: tensor(3.4117e-32, dtype=torch.float64)
secont condition:: tensor(3.4117e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.1082e-08, dtype=torch.float64)
secont condition:: tensor(5.1082e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4633e-08, dtype=torch.float64)
secont condition:: tensor(1.4633e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0262e-09, dtype=torch.float64)
secont condition:: tensor(2.0262e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.4881e-09, dtype=torch.float64)
secont condition:: tensor(5.4881e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4853e-07, dtype=torch.float64)
secont condition:: tensor(3.4853e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5619e-07, dtype=torch.float64)
secont condition:: tensor(3.5619e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2579e-08, dtype=torch.float64)
secont condition:: tensor(7.2579e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2385e-08, dtype=torch.float64)
secont condition:: tensor(9.2385e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6543e-08, dtype=torch.float64)
secont condition:: tensor(3.6543e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3427e-08, dtype=torch.float64)
secont condition:: tensor(4.3427e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0314e-07, dtype=torch.float64)
secont condition:: tensor(4.0314e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2890e-07, dtype=torch.float64)
secont condition:: tensor(6.2890e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2235e-07, dtype=torch.float64)
secont condition:: tensor(3.2235e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4316e-07, dtype=torch.float64)
secont condition:: tensor(1.4316e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8639e-07, dtype=torch.float64)
secont condition:: tensor(7.8639e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8514e-07, dtype=torch.float64)
secont condition:: tensor(1.8514e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8919e-08, dtype=torch.float64)
secont condition:: tensor(3.8919e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4378e-07, dtype=torch.float64)
secont condition:: tensor(1.4378e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9036e-08, dtype=torch.float64)
secont condition:: tensor(8.9036e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7921e-08, dtype=torch.float64)
secont condition:: tensor(4.7921e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7625e-08, dtype=torch.float64)
secont condition:: tensor(4.7625e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3416e-08, dtype=torch.float64)
secont condition:: tensor(7.3416e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.6639e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.5992e-07, dtype=torch.float64)
secont condition:: tensor(1.5992e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4588e-07, dtype=torch.float64)
secont condition:: tensor(1.4588e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.9910e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3552e-07, dtype=torch.float64)
secont condition:: tensor(1.3552e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3453e-08, dtype=torch.float64)
secont condition:: tensor(6.3453e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1624e-07, dtype=torch.float64)
secont condition:: tensor(3.1624e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0221e-08, dtype=torch.float64)
secont condition:: tensor(9.0221e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0866e-08, dtype=torch.float64)
secont condition:: tensor(3.0866e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0607e-05, dtype=torch.float64)
secont condition:: tensor(1.0607e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2778e-06, dtype=torch.float64)
secont condition:: tensor(3.2778e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3584e-06, dtype=torch.float64)
secont condition:: tensor(1.3584e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0550e-07, dtype=torch.float64)
secont condition:: tensor(6.0550e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4736e-07, dtype=torch.float64)
secont condition:: tensor(8.4736e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0591e-07, dtype=torch.float64)
secont condition:: tensor(6.0591e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1598e-07, dtype=torch.float64)
secont condition:: tensor(4.1598e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7259e-07, dtype=torch.float64)
secont condition:: tensor(3.7259e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4087e-07, dtype=torch.float64)
secont condition:: tensor(2.4087e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3578e-07, dtype=torch.float64)
secont condition:: tensor(2.3578e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2136e-07, dtype=torch.float64)
secont condition:: tensor(3.2136e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0210e-07, dtype=torch.float64)
secont condition:: tensor(3.0210e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9535e-08, dtype=torch.float64)
secont condition:: tensor(2.9535e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.9696e-07, dtype=torch.float64)
secont condition:: tensor(1.9696e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2988e-07, dtype=torch.float64)
secont condition:: tensor(2.2988e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7963e-08, dtype=torch.float64)
secont condition:: tensor(3.7963e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.5820e-07, dtype=torch.float64)
secont condition:: tensor(3.5820e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2141e-07, dtype=torch.float64)
secont condition:: tensor(2.2141e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8520e-07, dtype=torch.float64)
secont condition:: tensor(1.8520e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7795e-07, dtype=torch.float64)
secont condition:: tensor(3.7795e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6840e-07, dtype=torch.float64)
secont condition:: tensor(1.6840e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8680e-08, dtype=torch.float64)
secont condition:: tensor(8.8680e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0611e-07, dtype=torch.float64)
secont condition:: tensor(5.0611e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6515e-07, dtype=torch.float64)
secont condition:: tensor(5.6515e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1641e-08, dtype=torch.float64)
secont condition:: tensor(9.1641e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9381e-07, dtype=torch.float64)
secont condition:: tensor(9.9381e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8465e-07, dtype=torch.float64)
secont condition:: tensor(7.8465e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5856e-07, dtype=torch.float64)
secont condition:: tensor(7.5856e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0890e-07, dtype=torch.float64)
secont condition:: tensor(4.0890e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3430e-07, dtype=torch.float64)
secont condition:: tensor(2.3430e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3747e-08, dtype=torch.float64)
secont condition:: tensor(8.3747e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.8329e-08, dtype=torch.float64)
secont condition:: tensor(9.8329e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0100e-08, dtype=torch.float64)
secont condition:: tensor(5.0100e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.1391e-07, dtype=torch.float64)
secont condition:: tensor(8.1391e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.180311918258667
curr_diff: 0 tensor(1.5745e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8365e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.2946e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(6.8848e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.7963e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.2131e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(9.8983e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2613e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8103e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.5881e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2593e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.5923e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964900
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.231518
Train - Epoch 0, Batch: 10, Loss: 0.139390
Train - Epoch 0, Batch: 20, Loss: 0.137324
Train - Epoch 0, Batch: 30, Loss: 0.141446
Train - Epoch 0, Batch: 40, Loss: 0.151448
Train - Epoch 0, Batch: 50, Loss: 0.146628
Test Avg. Loss: 0.000131, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.163635
Train - Epoch 1, Batch: 10, Loss: 0.155720
Train - Epoch 1, Batch: 20, Loss: 0.153982
Train - Epoch 1, Batch: 30, Loss: 0.126313
Train - Epoch 1, Batch: 40, Loss: 0.141221
Train - Epoch 1, Batch: 50, Loss: 0.142224
Test Avg. Loss: 0.000130, Accuracy: 0.964100
training_time:: 5.243960618972778
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.2177629470825195
time_baseline:: 4.222687244415283
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0070e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6245e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4519e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5970e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.2000e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9050e-06, dtype=torch.float64)
secont condition:: tensor(7.9050e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.8376e-06, dtype=torch.float64)
secont condition:: tensor(3.8376e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8157e-06, dtype=torch.float64)
secont condition:: tensor(1.8157e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2894e-07, dtype=torch.float64)
secont condition:: tensor(9.2894e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0306e-07, dtype=torch.float64)
secont condition:: tensor(6.0306e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3106e-07, dtype=torch.float64)
secont condition:: tensor(3.3106e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2487e-07, dtype=torch.float64)
secont condition:: tensor(6.2487e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8848e-07, dtype=torch.float64)
secont condition:: tensor(4.8848e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2484e-07, dtype=torch.float64)
secont condition:: tensor(2.2484e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2529e-07, dtype=torch.float64)
secont condition:: tensor(6.2529e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7478e-07, dtype=torch.float64)
secont condition:: tensor(3.7478e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9058e-07, dtype=torch.float64)
secont condition:: tensor(1.9058e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5826e-07, dtype=torch.float64)
secont condition:: tensor(5.5826e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9070e-07, dtype=torch.float64)
secont condition:: tensor(5.9070e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9931e-07, dtype=torch.float64)
secont condition:: tensor(3.9931e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9657e-06, dtype=torch.float64)
secont condition:: tensor(1.9657e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7871e-07, dtype=torch.float64)
secont condition:: tensor(6.7871e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5791e-06, dtype=torch.float64)
secont condition:: tensor(2.5791e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0006e-07, dtype=torch.float64)
secont condition:: tensor(2.0006e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6581e-07, dtype=torch.float64)
secont condition:: tensor(4.6581e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1326e-07, dtype=torch.float64)
secont condition:: tensor(4.1326e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.4220e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2236e-07, dtype=torch.float64)
secont condition:: tensor(6.2236e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0577e-08, dtype=torch.float64)
secont condition:: tensor(8.0577e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6402e-08, dtype=torch.float64)
secont condition:: tensor(3.6402e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4573e-06, dtype=torch.float64)
secont condition:: tensor(2.4573e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8614e-07, dtype=torch.float64)
secont condition:: tensor(5.8614e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7521e-07, dtype=torch.float64)
secont condition:: tensor(3.7521e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1410e-07, dtype=torch.float64)
secont condition:: tensor(3.1410e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6242e-07, dtype=torch.float64)
secont condition:: tensor(1.6242e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8540e-07, dtype=torch.float64)
secont condition:: tensor(1.8540e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3624e-07, dtype=torch.float64)
secont condition:: tensor(5.3624e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5517e-07, dtype=torch.float64)
secont condition:: tensor(1.5517e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4710e-06, dtype=torch.float64)
secont condition:: tensor(1.4710e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7741e-07, dtype=torch.float64)
secont condition:: tensor(3.7741e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6630e-06, dtype=torch.float64)
secont condition:: tensor(1.6630e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.2656e-07, dtype=torch.float64)
curr_secont condition:: tensor(-9.0511e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0959e-08, dtype=torch.float64)
secont condition:: tensor(5.0959e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4184e-08, dtype=torch.float64)
secont condition:: tensor(6.4184e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3096e-07, dtype=torch.float64)
secont condition:: tensor(1.3096e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4191e-07, dtype=torch.float64)
secont condition:: tensor(5.4191e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8345e-08, dtype=torch.float64)
secont condition:: tensor(5.8345e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.7965e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2982e-07, dtype=torch.float64)
secont condition:: tensor(2.2982e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0814e-08, dtype=torch.float64)
secont condition:: tensor(7.0814e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7280e-07, dtype=torch.float64)
secont condition:: tensor(1.7280e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7064e-07, dtype=torch.float64)
secont condition:: tensor(2.7064e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7658e-07, dtype=torch.float64)
secont condition:: tensor(1.7658e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1878e-07, dtype=torch.float64)
secont condition:: tensor(2.1878e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4574e-08, dtype=torch.float64)
secont condition:: tensor(6.4574e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5155e-07, dtype=torch.float64)
secont condition:: tensor(1.5155e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0265e-07, dtype=torch.float64)
secont condition:: tensor(2.0265e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0158e-07, dtype=torch.float64)
secont condition:: tensor(2.0158e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4707e-06, dtype=torch.float64)
secont condition:: tensor(2.4707e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3332e-07, dtype=torch.float64)
secont condition:: tensor(7.3332e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6459e-07, dtype=torch.float64)
secont condition:: tensor(1.6459e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2168e-08, dtype=torch.float64)
secont condition:: tensor(5.2168e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0267e-07, dtype=torch.float64)
secont condition:: tensor(2.0267e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3079e-08, dtype=torch.float64)
secont condition:: tensor(5.3079e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4393e-07, dtype=torch.float64)
secont condition:: tensor(2.4393e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1581e-08, dtype=torch.float64)
secont condition:: tensor(1.1581e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9052e-07, dtype=torch.float64)
secont condition:: tensor(3.9052e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.3399e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4418e-07, dtype=torch.float64)
secont condition:: tensor(2.4418e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.0240e-07, dtype=torch.float64)
secont condition:: tensor(8.0240e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2891e-07, dtype=torch.float64)
secont condition:: tensor(4.2891e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4642e-07, dtype=torch.float64)
secont condition:: tensor(1.4642e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7757e-07, dtype=torch.float64)
secont condition:: tensor(4.7757e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7724e-07, dtype=torch.float64)
secont condition:: tensor(2.7724e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.0337e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9380e-07, dtype=torch.float64)
secont condition:: tensor(1.9380e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0880e-06, dtype=torch.float64)
secont condition:: tensor(2.0880e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4280e-06, dtype=torch.float64)
secont condition:: tensor(1.4280e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.130728244781494
curr_diff: 0 tensor(2.7368e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.9479e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.1015e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.3577e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3101e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.6478e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(6.2580e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.8433e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.6354e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.3677e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2341e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.4653e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964800
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.230814
Train - Epoch 0, Batch: 10, Loss: 0.140010
Train - Epoch 0, Batch: 20, Loss: 0.140608
Train - Epoch 0, Batch: 30, Loss: 0.139302
Train - Epoch 0, Batch: 40, Loss: 0.127037
Train - Epoch 0, Batch: 50, Loss: 0.147682
Test Avg. Loss: 0.000132, Accuracy: 0.963200
Train - Epoch 1, Batch: 0, Loss: 0.157142
Train - Epoch 1, Batch: 10, Loss: 0.112723
Train - Epoch 1, Batch: 20, Loss: 0.143485
Train - Epoch 1, Batch: 30, Loss: 0.157560
Train - Epoch 1, Batch: 40, Loss: 0.132220
Train - Epoch 1, Batch: 50, Loss: 0.144180
Test Avg. Loss: 0.000130, Accuracy: 0.964300
training_time:: 5.248891353607178
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.1999592781066895
time_baseline:: 4.204726457595825
curr_diff: 0 tensor(9.8355e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.0563e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.8201e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9878e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.2478e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0235e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0014, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1982e-06, dtype=torch.float64)
secont condition:: tensor(4.1982e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0848e-06, dtype=torch.float64)
secont condition:: tensor(2.0848e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2260e-06, dtype=torch.float64)
secont condition:: tensor(4.2260e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5385e-06, dtype=torch.float64)
secont condition:: tensor(1.5385e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8863e-07, dtype=torch.float64)
secont condition:: tensor(6.8863e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9231e-07, dtype=torch.float64)
secont condition:: tensor(3.9231e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0039e-07, dtype=torch.float64)
secont condition:: tensor(3.0039e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9415e-07, dtype=torch.float64)
secont condition:: tensor(2.9415e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3600e-07, dtype=torch.float64)
secont condition:: tensor(2.3600e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0179e-07, dtype=torch.float64)
secont condition:: tensor(2.0179e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2397e-08, dtype=torch.float64)
secont condition:: tensor(2.2397e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.7225e-07, dtype=torch.float64)
secont condition:: tensor(4.7225e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7602e-07, dtype=torch.float64)
secont condition:: tensor(3.7602e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1088e-07, dtype=torch.float64)
secont condition:: tensor(2.1088e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2773e-07, dtype=torch.float64)
secont condition:: tensor(2.2773e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3549e-07, dtype=torch.float64)
secont condition:: tensor(3.3549e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1144e-07, dtype=torch.float64)
secont condition:: tensor(7.1144e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5905e-07, dtype=torch.float64)
secont condition:: tensor(2.5905e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1741e-07, dtype=torch.float64)
secont condition:: tensor(2.1741e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7306e-06, dtype=torch.float64)
secont condition:: tensor(1.7306e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0477e-07, dtype=torch.float64)
secont condition:: tensor(1.0477e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4286e-07, dtype=torch.float64)
secont condition:: tensor(1.4286e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6244e-08, dtype=torch.float64)
secont condition:: tensor(4.6244e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8958e-07, dtype=torch.float64)
secont condition:: tensor(1.8958e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0449e-07, dtype=torch.float64)
secont condition:: tensor(1.0449e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.3320e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6648e-07, dtype=torch.float64)
secont condition:: tensor(1.6648e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1012e-07, dtype=torch.float64)
secont condition:: tensor(2.1012e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9546e-07, dtype=torch.float64)
secont condition:: tensor(1.9546e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0273e-07, dtype=torch.float64)
secont condition:: tensor(2.0273e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1348e-08, dtype=torch.float64)
secont condition:: tensor(8.1348e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9346e-07, dtype=torch.float64)
secont condition:: tensor(3.9346e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5497e-08, dtype=torch.float64)
secont condition:: tensor(8.5497e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0087e-07, dtype=torch.float64)
secont condition:: tensor(1.0087e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7982e-08, dtype=torch.float64)
secont condition:: tensor(9.7982e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7600e-07, dtype=torch.float64)
secont condition:: tensor(1.7600e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8178e-07, dtype=torch.float64)
secont condition:: tensor(2.8178e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4916e-08, dtype=torch.float64)
secont condition:: tensor(5.4916e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.3715e-08, dtype=torch.float64)
secont condition:: tensor(9.3715e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.8113e-08, dtype=torch.float64)
secont condition:: tensor(4.8113e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.9389e-09, dtype=torch.float64)
curr_secont condition:: tensor(5.9271e-08, dtype=torch.float64)
secont condition:: tensor(5.9271e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2088e-08, dtype=torch.float64)
secont condition:: tensor(9.2088e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9285e-08, dtype=torch.float64)
secont condition:: tensor(7.9285e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.2893e-07, dtype=torch.float64)
secont condition:: tensor(8.2893e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5908e-07, dtype=torch.float64)
secont condition:: tensor(1.5908e-07, dtype=torch.float64)
curr_secont condition:: tensor(-7.9454e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1364e-08, dtype=torch.float64)
secont condition:: tensor(7.1364e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.5368e-08, dtype=torch.float64)
secont condition:: tensor(5.5368e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4123e-08, dtype=torch.float64)
secont condition:: tensor(9.4123e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0548e-07, dtype=torch.float64)
secont condition:: tensor(1.0548e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7952e-08, dtype=torch.float64)
secont condition:: tensor(3.7952e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.2444e-08, dtype=torch.float64)
secont condition:: tensor(3.2444e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4680e-05, dtype=torch.float64)
secont condition:: tensor(1.4680e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.4729e-06, dtype=torch.float64)
secont condition:: tensor(2.4729e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8587e-07, dtype=torch.float64)
secont condition:: tensor(9.8587e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3869e-07, dtype=torch.float64)
secont condition:: tensor(6.3869e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4312e-07, dtype=torch.float64)
secont condition:: tensor(4.4312e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7467e-07, dtype=torch.float64)
secont condition:: tensor(4.7467e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8494e-07, dtype=torch.float64)
secont condition:: tensor(4.8494e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4951e-07, dtype=torch.float64)
secont condition:: tensor(3.4951e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4866e-07, dtype=torch.float64)
secont condition:: tensor(3.4866e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6366e-07, dtype=torch.float64)
secont condition:: tensor(2.6366e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2378e-07, dtype=torch.float64)
secont condition:: tensor(1.2378e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2333e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3487e-07, dtype=torch.float64)
secont condition:: tensor(2.3487e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6102e-08, dtype=torch.float64)
secont condition:: tensor(2.6102e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3506e-05, dtype=torch.float64)
secont condition:: tensor(1.3506e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.0940e-06, dtype=torch.float64)
secont condition:: tensor(1.0940e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3562e-07, dtype=torch.float64)
secont condition:: tensor(2.3562e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7066e-07, dtype=torch.float64)
secont condition:: tensor(2.7066e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4640e-07, dtype=torch.float64)
secont condition:: tensor(7.4640e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.16204833984375
curr_diff: 0 tensor(2.3583e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1913e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(9.8376e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.5012e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.7477e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(5.5275e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3036e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.3360e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9303e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.0796e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0067e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0015, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964900
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.195688
Train - Epoch 0, Batch: 10, Loss: 0.146828
Train - Epoch 0, Batch: 20, Loss: 0.142221
Train - Epoch 0, Batch: 30, Loss: 0.153472
Train - Epoch 0, Batch: 40, Loss: 0.122628
Train - Epoch 0, Batch: 50, Loss: 0.125071
Test Avg. Loss: 0.000131, Accuracy: 0.965100
Train - Epoch 1, Batch: 0, Loss: 0.131162
Train - Epoch 1, Batch: 10, Loss: 0.137350
Train - Epoch 1, Batch: 20, Loss: 0.157296
Train - Epoch 1, Batch: 30, Loss: 0.138757
Train - Epoch 1, Batch: 40, Loss: 0.160775
Train - Epoch 1, Batch: 50, Loss: 0.121652
Test Avg. Loss: 0.000130, Accuracy: 0.965300
training_time:: 5.258340358734131
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.224651575088501
time_baseline:: 4.2297587394714355
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.2459e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2157e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6867e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.7892e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2486e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7117e-32, dtype=torch.float64)
secont condition:: tensor(1.7117e-32, dtype=torch.float64)
curr_secont condition:: tensor(5.6540e-08, dtype=torch.float64)
secont condition:: tensor(5.6540e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.9247e-09, dtype=torch.float64)
secont condition:: tensor(4.9247e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.0898e-08, dtype=torch.float64)
secont condition:: tensor(2.0898e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.9141e-09, dtype=torch.float64)
secont condition:: tensor(6.9141e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.0363e-09, dtype=torch.float64)
secont condition:: tensor(4.0363e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.6629e-09, dtype=torch.float64)
secont condition:: tensor(3.6629e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.4090e-09, dtype=torch.float64)
secont condition:: tensor(2.4090e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.4542e-09, dtype=torch.float64)
secont condition:: tensor(1.4542e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1429e-08, dtype=torch.float64)
secont condition:: tensor(1.1429e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9286e-09, dtype=torch.float64)
secont condition:: tensor(8.9286e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.4286e-07, dtype=torch.float64)
secont condition:: tensor(3.4286e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7883e-07, dtype=torch.float64)
secont condition:: tensor(2.7883e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2744e-07, dtype=torch.float64)
secont condition:: tensor(1.2744e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2676e-07, dtype=torch.float64)
secont condition:: tensor(1.2676e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9808e-08, dtype=torch.float64)
secont condition:: tensor(3.9808e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4032e-08, dtype=torch.float64)
secont condition:: tensor(2.4032e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7810e-08, dtype=torch.float64)
secont condition:: tensor(1.7810e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5895e-10, dtype=torch.float64)
secont condition:: tensor(1.5895e-10, dtype=torch.float64)
curr_secont condition:: tensor(2.1420e-08, dtype=torch.float64)
secont condition:: tensor(2.1420e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4226e-09, dtype=torch.float64)
secont condition:: tensor(7.4226e-09, dtype=torch.float64)
curr_secont condition:: tensor(2.1338e-08, dtype=torch.float64)
secont condition:: tensor(2.1338e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.4179e-06, dtype=torch.float64)
secont condition:: tensor(9.4179e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6985e-06, dtype=torch.float64)
secont condition:: tensor(2.6985e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9709e-07, dtype=torch.float64)
secont condition:: tensor(8.9709e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8070e-07, dtype=torch.float64)
secont condition:: tensor(7.8070e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1716e-07, dtype=torch.float64)
secont condition:: tensor(3.1716e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1281e-07, dtype=torch.float64)
secont condition:: tensor(2.1281e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4022e-07, dtype=torch.float64)
secont condition:: tensor(3.4022e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1967e-07, dtype=torch.float64)
secont condition:: tensor(2.1967e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1298e-07, dtype=torch.float64)
secont condition:: tensor(2.1298e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9042e-07, dtype=torch.float64)
secont condition:: tensor(2.9042e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2817e-08, dtype=torch.float64)
secont condition:: tensor(7.2817e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3951e-07, dtype=torch.float64)
secont condition:: tensor(4.3951e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5873e-07, dtype=torch.float64)
secont condition:: tensor(2.5873e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0647e-07, dtype=torch.float64)
secont condition:: tensor(1.0647e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.0139e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8788e-07, dtype=torch.float64)
secont condition:: tensor(1.8788e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6840e-07, dtype=torch.float64)
secont condition:: tensor(7.6840e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7786e-07, dtype=torch.float64)
secont condition:: tensor(5.7786e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8639e-07, dtype=torch.float64)
secont condition:: tensor(3.8639e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1626e-07, dtype=torch.float64)
secont condition:: tensor(1.1626e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5579e-08, dtype=torch.float64)
secont condition:: tensor(9.5579e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.1812e-07, dtype=torch.float64)
secont condition:: tensor(3.1812e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.1798e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3538e-07, dtype=torch.float64)
secont condition:: tensor(1.3538e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5730e-08, dtype=torch.float64)
secont condition:: tensor(8.5730e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1773e-06, dtype=torch.float64)
secont condition:: tensor(2.1773e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1880e-07, dtype=torch.float64)
secont condition:: tensor(9.1880e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3011e-07, dtype=torch.float64)
secont condition:: tensor(4.3011e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9318e-07, dtype=torch.float64)
secont condition:: tensor(3.9318e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0556e-07, dtype=torch.float64)
secont condition:: tensor(1.0556e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.0876e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4343e-07, dtype=torch.float64)
secont condition:: tensor(6.4343e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5027e-07, dtype=torch.float64)
secont condition:: tensor(4.5027e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5402e-07, dtype=torch.float64)
secont condition:: tensor(9.5402e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8853e-07, dtype=torch.float64)
secont condition:: tensor(2.8853e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5846e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5960e-07, dtype=torch.float64)
secont condition:: tensor(3.5960e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1325e-07, dtype=torch.float64)
secont condition:: tensor(3.1325e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.7825e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2545e-06, dtype=torch.float64)
secont condition:: tensor(2.2545e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.5259e-07, dtype=torch.float64)
secont condition:: tensor(3.5259e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3691e-07, dtype=torch.float64)
secont condition:: tensor(8.3691e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3346e-07, dtype=torch.float64)
secont condition:: tensor(2.3346e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9356e-07, dtype=torch.float64)
secont condition:: tensor(2.9356e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.2716e-07, dtype=torch.float64)
curr_secont condition:: tensor(-1.5112e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2674e-07, dtype=torch.float64)
secont condition:: tensor(6.2674e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8781e-08, dtype=torch.float64)
secont condition:: tensor(2.8781e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.9687e-07, dtype=torch.float64)
secont condition:: tensor(9.9687e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4997e-07, dtype=torch.float64)
secont condition:: tensor(9.4997e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4236e-07, dtype=torch.float64)
secont condition:: tensor(4.4236e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3252e-07, dtype=torch.float64)
secont condition:: tensor(6.3252e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0940e-07, dtype=torch.float64)
secont condition:: tensor(6.0940e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4299e-07, dtype=torch.float64)
secont condition:: tensor(5.4299e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1716e-07, dtype=torch.float64)
secont condition:: tensor(3.1716e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8831e-07, dtype=torch.float64)
secont condition:: tensor(3.8831e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.986881732940674
curr_diff: 0 tensor(2.3773e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.3125e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.6613e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.8585e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.4075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.2253e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.6263e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0009, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.1606e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.7160e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0015, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.8908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3523e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1646e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0018, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964800
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.222781
Train - Epoch 0, Batch: 10, Loss: 0.116709
Train - Epoch 0, Batch: 20, Loss: 0.141444
Train - Epoch 0, Batch: 30, Loss: 0.136753
Train - Epoch 0, Batch: 40, Loss: 0.164381
Train - Epoch 0, Batch: 50, Loss: 0.143639
Test Avg. Loss: 0.000130, Accuracy: 0.965000
Train - Epoch 1, Batch: 0, Loss: 0.113535
Train - Epoch 1, Batch: 10, Loss: 0.164931
Train - Epoch 1, Batch: 20, Loss: 0.137627
Train - Epoch 1, Batch: 30, Loss: 0.142548
Train - Epoch 1, Batch: 40, Loss: 0.162279
Train - Epoch 1, Batch: 50, Loss: 0.155063
Test Avg. Loss: 0.000131, Accuracy: 0.964700
training_time:: 5.263650178909302
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.203258991241455
time_baseline:: 4.208110809326172
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.5281e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.8155e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2075e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.2623e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7910e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0016, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964700
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 30
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1379e-32, dtype=torch.float64)
secont condition:: tensor(1.1379e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.3678e-32, dtype=torch.float64)
secont condition:: tensor(2.3678e-32, dtype=torch.float64)
curr_secont condition:: tensor(2.6205e-08, dtype=torch.float64)
secont condition:: tensor(2.6205e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.3194e-07, dtype=torch.float64)
secont condition:: tensor(4.3194e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1853e-07, dtype=torch.float64)
secont condition:: tensor(2.1853e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0194e-07, dtype=torch.float64)
secont condition:: tensor(1.0194e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6440e-08, dtype=torch.float64)
secont condition:: tensor(8.6440e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2915e-08, dtype=torch.float64)
secont condition:: tensor(5.2915e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.9664e-08, dtype=torch.float64)
secont condition:: tensor(7.9664e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3347e-07, dtype=torch.float64)
secont condition:: tensor(1.3347e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8192e-08, dtype=torch.float64)
secont condition:: tensor(9.8192e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.3548e-08, dtype=torch.float64)
secont condition:: tensor(8.3548e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.6655e-08, dtype=torch.float64)
secont condition:: tensor(5.6655e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3394e-08, dtype=torch.float64)
secont condition:: tensor(1.3394e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3800e-08, dtype=torch.float64)
secont condition:: tensor(1.3800e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.3567e-06, dtype=torch.float64)
secont condition:: tensor(7.3567e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1927e-06, dtype=torch.float64)
secont condition:: tensor(3.1927e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1404e-06, dtype=torch.float64)
secont condition:: tensor(1.1404e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4277e-07, dtype=torch.float64)
secont condition:: tensor(4.4277e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3501e-07, dtype=torch.float64)
secont condition:: tensor(5.3501e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4632e-07, dtype=torch.float64)
secont condition:: tensor(2.4632e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5716e-07, dtype=torch.float64)
secont condition:: tensor(3.5716e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7864e-07, dtype=torch.float64)
secont condition:: tensor(3.7864e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4859e-07, dtype=torch.float64)
secont condition:: tensor(2.4859e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.8542e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3038e-07, dtype=torch.float64)
secont condition:: tensor(1.3038e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2870e-07, dtype=torch.float64)
secont condition:: tensor(2.2870e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0268e-07, dtype=torch.float64)
secont condition:: tensor(1.0268e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.3382e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.9484e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2239e-07, dtype=torch.float64)
secont condition:: tensor(2.2239e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1520e-07, dtype=torch.float64)
secont condition:: tensor(5.1520e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8786e-07, dtype=torch.float64)
secont condition:: tensor(4.8786e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4549e-07, dtype=torch.float64)
secont condition:: tensor(6.4549e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9084e-07, dtype=torch.float64)
secont condition:: tensor(1.9084e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3578e-07, dtype=torch.float64)
secont condition:: tensor(2.3578e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0757e-07, dtype=torch.float64)
secont condition:: tensor(3.0757e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5981e-07, dtype=torch.float64)
secont condition:: tensor(4.5981e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7800e-07, dtype=torch.float64)
secont condition:: tensor(2.7800e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.4305e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5446e-07, dtype=torch.float64)
secont condition:: tensor(2.5446e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5662e-07, dtype=torch.float64)
secont condition:: tensor(3.5662e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1831e-07, dtype=torch.float64)
secont condition:: tensor(1.1831e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0416e-07, dtype=torch.float64)
secont condition:: tensor(3.0416e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.6381e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.1607e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1616e-07, dtype=torch.float64)
secont condition:: tensor(3.1616e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7968e-07, dtype=torch.float64)
secont condition:: tensor(1.7968e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2659e-08, dtype=torch.float64)
secont condition:: tensor(8.2659e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.9758e-08, dtype=torch.float64)
secont condition:: tensor(8.9758e-08, dtype=torch.float64)
curr_secont condition:: tensor(-7.3936e-09, dtype=torch.float64)
curr_secont condition:: tensor(8.3042e-08, dtype=torch.float64)
secont condition:: tensor(8.3042e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8267e-07, dtype=torch.float64)
secont condition:: tensor(1.8267e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5235e-07, dtype=torch.float64)
secont condition:: tensor(1.5235e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4888e-07, dtype=torch.float64)
secont condition:: tensor(2.4888e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0671e-06, dtype=torch.float64)
secont condition:: tensor(1.0671e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7011e-07, dtype=torch.float64)
secont condition:: tensor(3.7011e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0311e-06, dtype=torch.float64)
secont condition:: tensor(2.0311e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-5.4321e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4929e-05, dtype=torch.float64)
secont condition:: tensor(1.4929e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.2658e-06, dtype=torch.float64)
secont condition:: tensor(3.2658e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3382e-06, dtype=torch.float64)
secont condition:: tensor(2.3382e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3596e-06, dtype=torch.float64)
secont condition:: tensor(1.3596e-06, dtype=torch.float64)
curr_secont condition:: tensor(-1.0469e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1405e-06, dtype=torch.float64)
secont condition:: tensor(1.1405e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2430e-06, dtype=torch.float64)
secont condition:: tensor(1.2430e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2809e-07, dtype=torch.float64)
secont condition:: tensor(7.2809e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8660e-07, dtype=torch.float64)
secont condition:: tensor(6.8660e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.4932e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3277e-07, dtype=torch.float64)
secont condition:: tensor(2.3277e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8568e-06, dtype=torch.float64)
secont condition:: tensor(1.8568e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3495e-06, dtype=torch.float64)
secont condition:: tensor(1.3495e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6374e-07, dtype=torch.float64)
secont condition:: tensor(2.6374e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1649e-07, dtype=torch.float64)
secont condition:: tensor(5.1649e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2113e-07, dtype=torch.float64)
secont condition:: tensor(3.2113e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.6599e-08, dtype=torch.float64)
secont condition:: tensor(9.6599e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.5352e-07, dtype=torch.float64)
secont condition:: tensor(6.5352e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7462e-07, dtype=torch.float64)
secont condition:: tensor(3.7462e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 3.912935495376587
curr_diff: 0 tensor(2.5238e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.1091e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.2554e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.2314e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(9.2610e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(7.1780e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.6941e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(8.6339e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4536e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0013, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2987e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.0949e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.4544e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0017, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965400
deletion rate:: 0.001
python3 generate_rand_ids 0.001  MNIST 0
tensor([22789, 57735,  4232, 17803, 18445, 28430, 22159,  1809, 58772, 38036,
        21524, 53143, 19735, 42773, 29466, 53919, 49440, 47137,  6519,  3621,
        32679,  1329,  9916,  7102, 24383, 59970, 44229, 53191, 38986, 18635,
        50634, 48716, 44618,  1487, 37328, 34384, 24914, 51411, 52944, 25046,
        27222, 10456,  4824, 48353, 10338,  8163, 25700, 12900, 29412, 43368,
        43370, 42090, 19820, 54509, 51694, 36721, 29172, 51574, 25590, 10746])
batch size:: 60000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.1969654560089
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 163.0041048526764
time_baseline:: 163.27484488487244
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8585e-08, dtype=torch.float64)
secont condition:: tensor(2.8585e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7791e-08, dtype=torch.float64)
secont condition:: tensor(7.7791e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0006e-07, dtype=torch.float64)
secont condition:: tensor(1.0006e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7984e-08, dtype=torch.float64)
secont condition:: tensor(9.7984e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0802e-07, dtype=torch.float64)
secont condition:: tensor(1.0802e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0829e-07, dtype=torch.float64)
secont condition:: tensor(1.0829e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1845e-07, dtype=torch.float64)
secont condition:: tensor(1.1845e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4030e-07, dtype=torch.float64)
secont condition:: tensor(1.4030e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3970e-07, dtype=torch.float64)
secont condition:: tensor(1.3970e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4287e-07, dtype=torch.float64)
secont condition:: tensor(1.4287e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5040e-07, dtype=torch.float64)
secont condition:: tensor(1.5040e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6560e-07, dtype=torch.float64)
secont condition:: tensor(1.6560e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8213e-07, dtype=torch.float64)
secont condition:: tensor(1.8213e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8640e-07, dtype=torch.float64)
secont condition:: tensor(1.8640e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0155e-07, dtype=torch.float64)
secont condition:: tensor(2.0155e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0344e-07, dtype=torch.float64)
secont condition:: tensor(2.0344e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1319e-07, dtype=torch.float64)
secont condition:: tensor(2.1319e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1479e-07, dtype=torch.float64)
secont condition:: tensor(2.1479e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2396e-07, dtype=torch.float64)
secont condition:: tensor(2.2396e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3098e-07, dtype=torch.float64)
secont condition:: tensor(2.3098e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5812e-07, dtype=torch.float64)
secont condition:: tensor(2.5812e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6921e-07, dtype=torch.float64)
secont condition:: tensor(2.6921e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5839e-07, dtype=torch.float64)
secont condition:: tensor(2.5839e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7653e-07, dtype=torch.float64)
secont condition:: tensor(2.7653e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1330e-07, dtype=torch.float64)
secont condition:: tensor(3.1330e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0171e-06, dtype=torch.float64)
secont condition:: tensor(2.0171e-06, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0804e-07, dtype=torch.float64)
secont condition:: tensor(3.0804e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3639e-07, dtype=torch.float64)
secont condition:: tensor(3.3639e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0807e-07, dtype=torch.float64)
secont condition:: tensor(3.0807e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4133e-07, dtype=torch.float64)
secont condition:: tensor(3.4133e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3372e-07, dtype=torch.float64)
secont condition:: tensor(3.3372e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7997e-07, dtype=torch.float64)
secont condition:: tensor(3.7997e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1076e-06, dtype=torch.float64)
secont condition:: tensor(4.1076e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5893e-07, dtype=torch.float64)
secont condition:: tensor(3.5893e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6647e-07, dtype=torch.float64)
secont condition:: tensor(3.6647e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5885e-07, dtype=torch.float64)
secont condition:: tensor(3.5885e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5500e-07, dtype=torch.float64)
secont condition:: tensor(3.5500e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2768e-07, dtype=torch.float64)
secont condition:: tensor(4.2768e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8635e-07, dtype=torch.float64)
secont condition:: tensor(3.8635e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0365e-07, dtype=torch.float64)
secont condition:: tensor(4.0365e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9332e-07, dtype=torch.float64)
secont condition:: tensor(3.9332e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8495e-07, dtype=torch.float64)
secont condition:: tensor(3.8495e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9485e-07, dtype=torch.float64)
secont condition:: tensor(3.9485e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4611e-07, dtype=torch.float64)
secont condition:: tensor(4.4611e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3013e-07, dtype=torch.float64)
secont condition:: tensor(4.3013e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5566e-07, dtype=torch.float64)
secont condition:: tensor(4.5566e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3955e-07, dtype=torch.float64)
secont condition:: tensor(4.3955e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8103e-07, dtype=torch.float64)
secont condition:: tensor(4.8103e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2466e-07, dtype=torch.float64)
secont condition:: tensor(4.2466e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4806e-07, dtype=torch.float64)
secont condition:: tensor(4.4806e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7322e-07, dtype=torch.float64)
secont condition:: tensor(4.7322e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7562e-07, dtype=torch.float64)
secont condition:: tensor(4.7562e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3560e-07, dtype=torch.float64)
secont condition:: tensor(5.3560e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7013e-07, dtype=torch.float64)
secont condition:: tensor(4.7013e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6649e-07, dtype=torch.float64)
secont condition:: tensor(4.6649e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7652e-07, dtype=torch.float64)
secont condition:: tensor(4.7652e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1189e-07, dtype=torch.float64)
secont condition:: tensor(5.1189e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7667e-07, dtype=torch.float64)
secont condition:: tensor(5.7667e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1275e-07, dtype=torch.float64)
secont condition:: tensor(5.1275e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2159e-07, dtype=torch.float64)
secont condition:: tensor(5.2159e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7241e-07, dtype=torch.float64)
secont condition:: tensor(5.7241e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0604e-07, dtype=torch.float64)
secont condition:: tensor(6.0604e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0121e-07, dtype=torch.float64)
secont condition:: tensor(6.0121e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9711e-07, dtype=torch.float64)
secont condition:: tensor(6.9711e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9057e-07, dtype=torch.float64)
secont condition:: tensor(6.9057e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4915e-07, dtype=torch.float64)
secont condition:: tensor(6.4915e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4433e-07, dtype=torch.float64)
secont condition:: tensor(6.4433e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2144e-07, dtype=torch.float64)
secont condition:: tensor(7.2144e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7794e-07, dtype=torch.float64)
secont condition:: tensor(6.7794e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2506e-07, dtype=torch.float64)
secont condition:: tensor(7.2506e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5073e-07, dtype=torch.float64)
secont condition:: tensor(6.5073e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5260e-07, dtype=torch.float64)
secont condition:: tensor(7.5260e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1051e-07, dtype=torch.float64)
secont condition:: tensor(7.1051e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4995e-07, dtype=torch.float64)
secont condition:: tensor(8.4995e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.14089560508728
curr_diff: 0 tensor(8.7775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4198e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.2671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.4039032459259
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 162.91155195236206
time_baseline:: 163.17564344406128
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8585e-08, dtype=torch.float64)
secont condition:: tensor(2.8585e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7791e-08, dtype=torch.float64)
secont condition:: tensor(7.7791e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0006e-07, dtype=torch.float64)
secont condition:: tensor(1.0006e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7984e-08, dtype=torch.float64)
secont condition:: tensor(9.7984e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0802e-07, dtype=torch.float64)
secont condition:: tensor(1.0802e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0829e-07, dtype=torch.float64)
secont condition:: tensor(1.0829e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1845e-07, dtype=torch.float64)
secont condition:: tensor(1.1845e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4030e-07, dtype=torch.float64)
secont condition:: tensor(1.4030e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3970e-07, dtype=torch.float64)
secont condition:: tensor(1.3970e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4287e-07, dtype=torch.float64)
secont condition:: tensor(1.4287e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5040e-07, dtype=torch.float64)
secont condition:: tensor(1.5040e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6560e-07, dtype=torch.float64)
secont condition:: tensor(1.6560e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8213e-07, dtype=torch.float64)
secont condition:: tensor(1.8213e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8640e-07, dtype=torch.float64)
secont condition:: tensor(1.8640e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0155e-07, dtype=torch.float64)
secont condition:: tensor(2.0155e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0344e-07, dtype=torch.float64)
secont condition:: tensor(2.0344e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1319e-07, dtype=torch.float64)
secont condition:: tensor(2.1319e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1479e-07, dtype=torch.float64)
secont condition:: tensor(2.1479e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2396e-07, dtype=torch.float64)
secont condition:: tensor(2.2396e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3098e-07, dtype=torch.float64)
secont condition:: tensor(2.3098e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5812e-07, dtype=torch.float64)
secont condition:: tensor(2.5812e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6921e-07, dtype=torch.float64)
secont condition:: tensor(2.6921e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5839e-07, dtype=torch.float64)
secont condition:: tensor(2.5839e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7653e-07, dtype=torch.float64)
secont condition:: tensor(2.7653e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1330e-07, dtype=torch.float64)
secont condition:: tensor(3.1330e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0171e-06, dtype=torch.float64)
secont condition:: tensor(2.0171e-06, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0804e-07, dtype=torch.float64)
secont condition:: tensor(3.0804e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3639e-07, dtype=torch.float64)
secont condition:: tensor(3.3639e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0807e-07, dtype=torch.float64)
secont condition:: tensor(3.0807e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4133e-07, dtype=torch.float64)
secont condition:: tensor(3.4133e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3372e-07, dtype=torch.float64)
secont condition:: tensor(3.3372e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7997e-07, dtype=torch.float64)
secont condition:: tensor(3.7997e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1076e-06, dtype=torch.float64)
secont condition:: tensor(4.1076e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5893e-07, dtype=torch.float64)
secont condition:: tensor(3.5893e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6647e-07, dtype=torch.float64)
secont condition:: tensor(3.6647e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5885e-07, dtype=torch.float64)
secont condition:: tensor(3.5885e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5500e-07, dtype=torch.float64)
secont condition:: tensor(3.5500e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2768e-07, dtype=torch.float64)
secont condition:: tensor(4.2768e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8635e-07, dtype=torch.float64)
secont condition:: tensor(3.8635e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0365e-07, dtype=torch.float64)
secont condition:: tensor(4.0365e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9332e-07, dtype=torch.float64)
secont condition:: tensor(3.9332e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8495e-07, dtype=torch.float64)
secont condition:: tensor(3.8495e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9485e-07, dtype=torch.float64)
secont condition:: tensor(3.9485e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4611e-07, dtype=torch.float64)
secont condition:: tensor(4.4611e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3013e-07, dtype=torch.float64)
secont condition:: tensor(4.3013e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5566e-07, dtype=torch.float64)
secont condition:: tensor(4.5566e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3955e-07, dtype=torch.float64)
secont condition:: tensor(4.3955e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8103e-07, dtype=torch.float64)
secont condition:: tensor(4.8103e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2466e-07, dtype=torch.float64)
secont condition:: tensor(4.2466e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4806e-07, dtype=torch.float64)
secont condition:: tensor(4.4806e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7322e-07, dtype=torch.float64)
secont condition:: tensor(4.7322e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7562e-07, dtype=torch.float64)
secont condition:: tensor(4.7562e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3560e-07, dtype=torch.float64)
secont condition:: tensor(5.3560e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7013e-07, dtype=torch.float64)
secont condition:: tensor(4.7013e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6649e-07, dtype=torch.float64)
secont condition:: tensor(4.6649e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7652e-07, dtype=torch.float64)
secont condition:: tensor(4.7652e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1189e-07, dtype=torch.float64)
secont condition:: tensor(5.1189e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7667e-07, dtype=torch.float64)
secont condition:: tensor(5.7667e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1275e-07, dtype=torch.float64)
secont condition:: tensor(5.1275e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2159e-07, dtype=torch.float64)
secont condition:: tensor(5.2159e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7241e-07, dtype=torch.float64)
secont condition:: tensor(5.7241e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0604e-07, dtype=torch.float64)
secont condition:: tensor(6.0604e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0121e-07, dtype=torch.float64)
secont condition:: tensor(6.0121e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9711e-07, dtype=torch.float64)
secont condition:: tensor(6.9711e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9057e-07, dtype=torch.float64)
secont condition:: tensor(6.9057e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4915e-07, dtype=torch.float64)
secont condition:: tensor(6.4915e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4433e-07, dtype=torch.float64)
secont condition:: tensor(6.4433e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2144e-07, dtype=torch.float64)
secont condition:: tensor(7.2144e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7794e-07, dtype=torch.float64)
secont condition:: tensor(6.7794e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2506e-07, dtype=torch.float64)
secont condition:: tensor(7.2506e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5073e-07, dtype=torch.float64)
secont condition:: tensor(6.5073e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5260e-07, dtype=torch.float64)
secont condition:: tensor(7.5260e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1051e-07, dtype=torch.float64)
secont condition:: tensor(7.1051e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4995e-07, dtype=torch.float64)
secont condition:: tensor(8.4995e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.14849257469177
curr_diff: 0 tensor(8.7775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4198e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.2671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 3
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.45161652565002
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 162.9870355129242
time_baseline:: 163.26112818717957
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8585e-08, dtype=torch.float64)
secont condition:: tensor(2.8585e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7791e-08, dtype=torch.float64)
secont condition:: tensor(7.7791e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0006e-07, dtype=torch.float64)
secont condition:: tensor(1.0006e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7984e-08, dtype=torch.float64)
secont condition:: tensor(9.7984e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0802e-07, dtype=torch.float64)
secont condition:: tensor(1.0802e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0829e-07, dtype=torch.float64)
secont condition:: tensor(1.0829e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1845e-07, dtype=torch.float64)
secont condition:: tensor(1.1845e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4030e-07, dtype=torch.float64)
secont condition:: tensor(1.4030e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3970e-07, dtype=torch.float64)
secont condition:: tensor(1.3970e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4287e-07, dtype=torch.float64)
secont condition:: tensor(1.4287e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5040e-07, dtype=torch.float64)
secont condition:: tensor(1.5040e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6560e-07, dtype=torch.float64)
secont condition:: tensor(1.6560e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8213e-07, dtype=torch.float64)
secont condition:: tensor(1.8213e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8640e-07, dtype=torch.float64)
secont condition:: tensor(1.8640e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0155e-07, dtype=torch.float64)
secont condition:: tensor(2.0155e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0344e-07, dtype=torch.float64)
secont condition:: tensor(2.0344e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1319e-07, dtype=torch.float64)
secont condition:: tensor(2.1319e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1479e-07, dtype=torch.float64)
secont condition:: tensor(2.1479e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2396e-07, dtype=torch.float64)
secont condition:: tensor(2.2396e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3098e-07, dtype=torch.float64)
secont condition:: tensor(2.3098e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5812e-07, dtype=torch.float64)
secont condition:: tensor(2.5812e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6921e-07, dtype=torch.float64)
secont condition:: tensor(2.6921e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5839e-07, dtype=torch.float64)
secont condition:: tensor(2.5839e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7653e-07, dtype=torch.float64)
secont condition:: tensor(2.7653e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1330e-07, dtype=torch.float64)
secont condition:: tensor(3.1330e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0171e-06, dtype=torch.float64)
secont condition:: tensor(2.0171e-06, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0804e-07, dtype=torch.float64)
secont condition:: tensor(3.0804e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3639e-07, dtype=torch.float64)
secont condition:: tensor(3.3639e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0807e-07, dtype=torch.float64)
secont condition:: tensor(3.0807e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4133e-07, dtype=torch.float64)
secont condition:: tensor(3.4133e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3372e-07, dtype=torch.float64)
secont condition:: tensor(3.3372e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7997e-07, dtype=torch.float64)
secont condition:: tensor(3.7997e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1076e-06, dtype=torch.float64)
secont condition:: tensor(4.1076e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5893e-07, dtype=torch.float64)
secont condition:: tensor(3.5893e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6647e-07, dtype=torch.float64)
secont condition:: tensor(3.6647e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5885e-07, dtype=torch.float64)
secont condition:: tensor(3.5885e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5500e-07, dtype=torch.float64)
secont condition:: tensor(3.5500e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2768e-07, dtype=torch.float64)
secont condition:: tensor(4.2768e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8635e-07, dtype=torch.float64)
secont condition:: tensor(3.8635e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0365e-07, dtype=torch.float64)
secont condition:: tensor(4.0365e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9332e-07, dtype=torch.float64)
secont condition:: tensor(3.9332e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8495e-07, dtype=torch.float64)
secont condition:: tensor(3.8495e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9485e-07, dtype=torch.float64)
secont condition:: tensor(3.9485e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4611e-07, dtype=torch.float64)
secont condition:: tensor(4.4611e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3013e-07, dtype=torch.float64)
secont condition:: tensor(4.3013e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5566e-07, dtype=torch.float64)
secont condition:: tensor(4.5566e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3955e-07, dtype=torch.float64)
secont condition:: tensor(4.3955e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8103e-07, dtype=torch.float64)
secont condition:: tensor(4.8103e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2466e-07, dtype=torch.float64)
secont condition:: tensor(4.2466e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4806e-07, dtype=torch.float64)
secont condition:: tensor(4.4806e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7322e-07, dtype=torch.float64)
secont condition:: tensor(4.7322e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7562e-07, dtype=torch.float64)
secont condition:: tensor(4.7562e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3560e-07, dtype=torch.float64)
secont condition:: tensor(5.3560e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7013e-07, dtype=torch.float64)
secont condition:: tensor(4.7013e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6649e-07, dtype=torch.float64)
secont condition:: tensor(4.6649e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7652e-07, dtype=torch.float64)
secont condition:: tensor(4.7652e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1189e-07, dtype=torch.float64)
secont condition:: tensor(5.1189e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7667e-07, dtype=torch.float64)
secont condition:: tensor(5.7667e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1275e-07, dtype=torch.float64)
secont condition:: tensor(5.1275e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2159e-07, dtype=torch.float64)
secont condition:: tensor(5.2159e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7241e-07, dtype=torch.float64)
secont condition:: tensor(5.7241e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0604e-07, dtype=torch.float64)
secont condition:: tensor(6.0604e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0121e-07, dtype=torch.float64)
secont condition:: tensor(6.0121e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9711e-07, dtype=torch.float64)
secont condition:: tensor(6.9711e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9057e-07, dtype=torch.float64)
secont condition:: tensor(6.9057e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4915e-07, dtype=torch.float64)
secont condition:: tensor(6.4915e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4433e-07, dtype=torch.float64)
secont condition:: tensor(6.4433e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2144e-07, dtype=torch.float64)
secont condition:: tensor(7.2144e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7794e-07, dtype=torch.float64)
secont condition:: tensor(6.7794e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2506e-07, dtype=torch.float64)
secont condition:: tensor(7.2506e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5073e-07, dtype=torch.float64)
secont condition:: tensor(6.5073e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5260e-07, dtype=torch.float64)
secont condition:: tensor(7.5260e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1051e-07, dtype=torch.float64)
secont condition:: tensor(7.1051e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4995e-07, dtype=torch.float64)
secont condition:: tensor(8.4995e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.13015174865723
curr_diff: 0 tensor(8.7775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4198e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.2671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 4
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 250.56914067268372
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 162.92802119255066
time_baseline:: 163.19508457183838
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8585e-08, dtype=torch.float64)
secont condition:: tensor(2.8585e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7791e-08, dtype=torch.float64)
secont condition:: tensor(7.7791e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0006e-07, dtype=torch.float64)
secont condition:: tensor(1.0006e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7984e-08, dtype=torch.float64)
secont condition:: tensor(9.7984e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0802e-07, dtype=torch.float64)
secont condition:: tensor(1.0802e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0829e-07, dtype=torch.float64)
secont condition:: tensor(1.0829e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1845e-07, dtype=torch.float64)
secont condition:: tensor(1.1845e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4030e-07, dtype=torch.float64)
secont condition:: tensor(1.4030e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3970e-07, dtype=torch.float64)
secont condition:: tensor(1.3970e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4287e-07, dtype=torch.float64)
secont condition:: tensor(1.4287e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5040e-07, dtype=torch.float64)
secont condition:: tensor(1.5040e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6560e-07, dtype=torch.float64)
secont condition:: tensor(1.6560e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8213e-07, dtype=torch.float64)
secont condition:: tensor(1.8213e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8640e-07, dtype=torch.float64)
secont condition:: tensor(1.8640e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0155e-07, dtype=torch.float64)
secont condition:: tensor(2.0155e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0344e-07, dtype=torch.float64)
secont condition:: tensor(2.0344e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1319e-07, dtype=torch.float64)
secont condition:: tensor(2.1319e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1479e-07, dtype=torch.float64)
secont condition:: tensor(2.1479e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2396e-07, dtype=torch.float64)
secont condition:: tensor(2.2396e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3098e-07, dtype=torch.float64)
secont condition:: tensor(2.3098e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5812e-07, dtype=torch.float64)
secont condition:: tensor(2.5812e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6921e-07, dtype=torch.float64)
secont condition:: tensor(2.6921e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5839e-07, dtype=torch.float64)
secont condition:: tensor(2.5839e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7653e-07, dtype=torch.float64)
secont condition:: tensor(2.7653e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1330e-07, dtype=torch.float64)
secont condition:: tensor(3.1330e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0171e-06, dtype=torch.float64)
secont condition:: tensor(2.0171e-06, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0804e-07, dtype=torch.float64)
secont condition:: tensor(3.0804e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3639e-07, dtype=torch.float64)
secont condition:: tensor(3.3639e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0807e-07, dtype=torch.float64)
secont condition:: tensor(3.0807e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4133e-07, dtype=torch.float64)
secont condition:: tensor(3.4133e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3372e-07, dtype=torch.float64)
secont condition:: tensor(3.3372e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7997e-07, dtype=torch.float64)
secont condition:: tensor(3.7997e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1076e-06, dtype=torch.float64)
secont condition:: tensor(4.1076e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5893e-07, dtype=torch.float64)
secont condition:: tensor(3.5893e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6647e-07, dtype=torch.float64)
secont condition:: tensor(3.6647e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5885e-07, dtype=torch.float64)
secont condition:: tensor(3.5885e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5500e-07, dtype=torch.float64)
secont condition:: tensor(3.5500e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2768e-07, dtype=torch.float64)
secont condition:: tensor(4.2768e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8635e-07, dtype=torch.float64)
secont condition:: tensor(3.8635e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0365e-07, dtype=torch.float64)
secont condition:: tensor(4.0365e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9332e-07, dtype=torch.float64)
secont condition:: tensor(3.9332e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8495e-07, dtype=torch.float64)
secont condition:: tensor(3.8495e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9485e-07, dtype=torch.float64)
secont condition:: tensor(3.9485e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4611e-07, dtype=torch.float64)
secont condition:: tensor(4.4611e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3013e-07, dtype=torch.float64)
secont condition:: tensor(4.3013e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5566e-07, dtype=torch.float64)
secont condition:: tensor(4.5566e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3955e-07, dtype=torch.float64)
secont condition:: tensor(4.3955e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8103e-07, dtype=torch.float64)
secont condition:: tensor(4.8103e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2466e-07, dtype=torch.float64)
secont condition:: tensor(4.2466e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4806e-07, dtype=torch.float64)
secont condition:: tensor(4.4806e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7322e-07, dtype=torch.float64)
secont condition:: tensor(4.7322e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7562e-07, dtype=torch.float64)
secont condition:: tensor(4.7562e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3560e-07, dtype=torch.float64)
secont condition:: tensor(5.3560e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7013e-07, dtype=torch.float64)
secont condition:: tensor(4.7013e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6649e-07, dtype=torch.float64)
secont condition:: tensor(4.6649e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7652e-07, dtype=torch.float64)
secont condition:: tensor(4.7652e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1189e-07, dtype=torch.float64)
secont condition:: tensor(5.1189e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7667e-07, dtype=torch.float64)
secont condition:: tensor(5.7667e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1275e-07, dtype=torch.float64)
secont condition:: tensor(5.1275e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2159e-07, dtype=torch.float64)
secont condition:: tensor(5.2159e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7241e-07, dtype=torch.float64)
secont condition:: tensor(5.7241e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0604e-07, dtype=torch.float64)
secont condition:: tensor(6.0604e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0121e-07, dtype=torch.float64)
secont condition:: tensor(6.0121e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9711e-07, dtype=torch.float64)
secont condition:: tensor(6.9711e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9057e-07, dtype=torch.float64)
secont condition:: tensor(6.9057e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4915e-07, dtype=torch.float64)
secont condition:: tensor(6.4915e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4433e-07, dtype=torch.float64)
secont condition:: tensor(6.4433e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2144e-07, dtype=torch.float64)
secont condition:: tensor(7.2144e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7794e-07, dtype=torch.float64)
secont condition:: tensor(6.7794e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2506e-07, dtype=torch.float64)
secont condition:: tensor(7.2506e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5073e-07, dtype=torch.float64)
secont condition:: tensor(6.5073e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5260e-07, dtype=torch.float64)
secont condition:: tensor(7.5260e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1051e-07, dtype=torch.float64)
secont condition:: tensor(7.1051e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4995e-07, dtype=torch.float64)
secont condition:: tensor(8.4995e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.07903671264648
curr_diff: 0 tensor(8.7775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4198e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.2671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 60000 120 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214396
Test Avg. Loss: 0.000016, Accuracy: 0.955500
Train - Epoch 1, Batch: 0, Loss: 0.185356
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 2, Batch: 0, Loss: 0.172126
Test Avg. Loss: 0.000015, Accuracy: 0.961800
Train - Epoch 3, Batch: 0, Loss: 0.165183
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 4, Batch: 0, Loss: 0.161200
Test Avg. Loss: 0.000014, Accuracy: 0.962600
Train - Epoch 5, Batch: 0, Loss: 0.158703
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 6, Batch: 0, Loss: 0.156975
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 7, Batch: 0, Loss: 0.155669
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 8, Batch: 0, Loss: 0.154607
Test Avg. Loss: 0.000014, Accuracy: 0.963400
Train - Epoch 9, Batch: 0, Loss: 0.153700
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 10, Batch: 0, Loss: 0.152907
Test Avg. Loss: 0.000014, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.152202
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.151566
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.150987
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.150460
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 15, Batch: 0, Loss: 0.149976
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.149530
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 17, Batch: 0, Loss: 0.149118
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 18, Batch: 0, Loss: 0.148735
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.148380
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 20, Batch: 0, Loss: 0.148050
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 21, Batch: 0, Loss: 0.147741
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 22, Batch: 0, Loss: 0.147452
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 23, Batch: 0, Loss: 0.147180
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146925
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.146683
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 26, Batch: 0, Loss: 0.146458
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 27, Batch: 0, Loss: 0.146247
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 28, Batch: 0, Loss: 0.146049
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 29, Batch: 0, Loss: 0.145862
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 30, Batch: 0, Loss: 0.145687
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 31, Batch: 0, Loss: 0.145522
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 32, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 33, Batch: 0, Loss: 0.145218
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 34, Batch: 0, Loss: 0.145078
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 35, Batch: 0, Loss: 0.144946
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 36, Batch: 0, Loss: 0.144821
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 37, Batch: 0, Loss: 0.144702
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 38, Batch: 0, Loss: 0.144589
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 39, Batch: 0, Loss: 0.144481
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 40, Batch: 0, Loss: 0.144380
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 41, Batch: 0, Loss: 0.144284
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 42, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 43, Batch: 0, Loss: 0.144106
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 44, Batch: 0, Loss: 0.144023
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 45, Batch: 0, Loss: 0.143945
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 46, Batch: 0, Loss: 0.143870
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 47, Batch: 0, Loss: 0.143799
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 48, Batch: 0, Loss: 0.143732
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 49, Batch: 0, Loss: 0.143669
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 50, Batch: 0, Loss: 0.143609
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 51, Batch: 0, Loss: 0.143551
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 52, Batch: 0, Loss: 0.143497
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 53, Batch: 0, Loss: 0.143446
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 54, Batch: 0, Loss: 0.143398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 55, Batch: 0, Loss: 0.143353
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 56, Batch: 0, Loss: 0.143310
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 57, Batch: 0, Loss: 0.143269
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 58, Batch: 0, Loss: 0.143231
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 59, Batch: 0, Loss: 0.143194
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 60, Batch: 0, Loss: 0.143159
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 61, Batch: 0, Loss: 0.143125
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 62, Batch: 0, Loss: 0.143093
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 63, Batch: 0, Loss: 0.143062
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 64, Batch: 0, Loss: 0.143033
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 65, Batch: 0, Loss: 0.143005
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 66, Batch: 0, Loss: 0.142978
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 67, Batch: 0, Loss: 0.142952
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 68, Batch: 0, Loss: 0.142927
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 69, Batch: 0, Loss: 0.142903
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 70, Batch: 0, Loss: 0.142881
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 71, Batch: 0, Loss: 0.142859
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 72, Batch: 0, Loss: 0.142839
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 73, Batch: 0, Loss: 0.142819
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 74, Batch: 0, Loss: 0.142801
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 75, Batch: 0, Loss: 0.142783
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 76, Batch: 0, Loss: 0.142767
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 77, Batch: 0, Loss: 0.142751
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 78, Batch: 0, Loss: 0.142736
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 79, Batch: 0, Loss: 0.142722
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 80, Batch: 0, Loss: 0.142709
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 81, Batch: 0, Loss: 0.142696
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 82, Batch: 0, Loss: 0.142684
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 83, Batch: 0, Loss: 0.142673
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 84, Batch: 0, Loss: 0.142661
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 85, Batch: 0, Loss: 0.142651
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 86, Batch: 0, Loss: 0.142640
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 87, Batch: 0, Loss: 0.142631
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 88, Batch: 0, Loss: 0.142622
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 89, Batch: 0, Loss: 0.142614
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 90, Batch: 0, Loss: 0.142606
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 91, Batch: 0, Loss: 0.142599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 92, Batch: 0, Loss: 0.142592
Test Avg. Loss: 0.000013, Accuracy: 0.965400/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "

Train - Epoch 93, Batch: 0, Loss: 0.142586
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 94, Batch: 0, Loss: 0.142580
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 95, Batch: 0, Loss: 0.142574
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 96, Batch: 0, Loss: 0.142568
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 97, Batch: 0, Loss: 0.142563
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 98, Batch: 0, Loss: 0.142558
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 99, Batch: 0, Loss: 0.142553
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 100, Batch: 0, Loss: 0.142548
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 101, Batch: 0, Loss: 0.142544
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 102, Batch: 0, Loss: 0.142540
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 103, Batch: 0, Loss: 0.142535
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 104, Batch: 0, Loss: 0.142531
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 105, Batch: 0, Loss: 0.142527
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 106, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 107, Batch: 0, Loss: 0.142520
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 108, Batch: 0, Loss: 0.142516
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 109, Batch: 0, Loss: 0.142512
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 110, Batch: 0, Loss: 0.142509
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 111, Batch: 0, Loss: 0.142505
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 112, Batch: 0, Loss: 0.142502
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 113, Batch: 0, Loss: 0.142499
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 114, Batch: 0, Loss: 0.142496
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 115, Batch: 0, Loss: 0.142493
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 116, Batch: 0, Loss: 0.142490
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 117, Batch: 0, Loss: 0.142487
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 118, Batch: 0, Loss: 0.142485
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 119, Batch: 0, Loss: 0.142482
Test Avg. Loss: 0.000013, Accuracy: 0.965300
training_time:: 249.24289655685425
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
epoch:: 60
	calling Sampler:__iter__
epoch:: 61
	calling Sampler:__iter__
epoch:: 62
	calling Sampler:__iter__
epoch:: 63
	calling Sampler:__iter__
epoch:: 64
	calling Sampler:__iter__
epoch:: 65
	calling Sampler:__iter__
epoch:: 66
	calling Sampler:__iter__
epoch:: 67
	calling Sampler:__iter__
epoch:: 68
	calling Sampler:__iter__
epoch:: 69
	calling Sampler:__iter__
epoch:: 70
	calling Sampler:__iter__
epoch:: 71
	calling Sampler:__iter__
epoch:: 72
	calling Sampler:__iter__
epoch:: 73
	calling Sampler:__iter__
epoch:: 74
	calling Sampler:__iter__
epoch:: 75
	calling Sampler:__iter__
epoch:: 76
	calling Sampler:__iter__
epoch:: 77
	calling Sampler:__iter__
epoch:: 78
	calling Sampler:__iter__
epoch:: 79
	calling Sampler:__iter__
epoch:: 80
	calling Sampler:__iter__
epoch:: 81
	calling Sampler:__iter__
epoch:: 82
	calling Sampler:__iter__
epoch:: 83
	calling Sampler:__iter__
epoch:: 84
	calling Sampler:__iter__
epoch:: 85
	calling Sampler:__iter__
epoch:: 86
	calling Sampler:__iter__
epoch:: 87
	calling Sampler:__iter__
epoch:: 88
	calling Sampler:__iter__
epoch:: 89
	calling Sampler:__iter__
epoch:: 90
	calling Sampler:__iter__
epoch:: 91
	calling Sampler:__iter__
epoch:: 92
	calling Sampler:__iter__
epoch:: 93
	calling Sampler:__iter__
epoch:: 94
	calling Sampler:__iter__
epoch:: 95
	calling Sampler:__iter__
epoch:: 96
	calling Sampler:__iter__
epoch:: 97
	calling Sampler:__iter__
epoch:: 98
	calling Sampler:__iter__
epoch:: 99
	calling Sampler:__iter__
epoch:: 100
	calling Sampler:__iter__
epoch:: 101
	calling Sampler:__iter__
epoch:: 102
	calling Sampler:__iter__
epoch:: 103
	calling Sampler:__iter__
epoch:: 104
	calling Sampler:__iter__
epoch:: 105
	calling Sampler:__iter__
epoch:: 106
	calling Sampler:__iter__
epoch:: 107
	calling Sampler:__iter__
epoch:: 108
	calling Sampler:__iter__
epoch:: 109
	calling Sampler:__iter__
epoch:: 110
	calling Sampler:__iter__
epoch:: 111
	calling Sampler:__iter__
epoch:: 112
	calling Sampler:__iter__
epoch:: 113
	calling Sampler:__iter__
epoch:: 114
	calling Sampler:__iter__
epoch:: 115
	calling Sampler:__iter__
epoch:: 116
	calling Sampler:__iter__
epoch:: 117
	calling Sampler:__iter__
epoch:: 118
	calling Sampler:__iter__
epoch:: 119
	calling Sampler:__iter__
training time is 162.89409112930298
time_baseline:: 163.16194987297058
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2556e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4616e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4017e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 120
delta_size:: 60
max_epoch:: 120
epoch  0
	calling Sampler:__iter__
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8585e-08, dtype=torch.float64)
secont condition:: tensor(2.8585e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9994e-08, dtype=torch.float64)
secont condition:: tensor(5.9994e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7791e-08, dtype=torch.float64)
secont condition:: tensor(7.7791e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0006e-07, dtype=torch.float64)
secont condition:: tensor(1.0006e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(9.7984e-08, dtype=torch.float64)
secont condition:: tensor(9.7984e-08, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0802e-07, dtype=torch.float64)
secont condition:: tensor(1.0802e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0829e-07, dtype=torch.float64)
secont condition:: tensor(1.0829e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1845e-07, dtype=torch.float64)
secont condition:: tensor(1.1845e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2312e-07, dtype=torch.float64)
secont condition:: tensor(1.2312e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4030e-07, dtype=torch.float64)
secont condition:: tensor(1.4030e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3970e-07, dtype=torch.float64)
secont condition:: tensor(1.3970e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4287e-07, dtype=torch.float64)
secont condition:: tensor(1.4287e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5040e-07, dtype=torch.float64)
secont condition:: tensor(1.5040e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6560e-07, dtype=torch.float64)
secont condition:: tensor(1.6560e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8213e-07, dtype=torch.float64)
secont condition:: tensor(1.8213e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8640e-07, dtype=torch.float64)
secont condition:: tensor(1.8640e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0155e-07, dtype=torch.float64)
secont condition:: tensor(2.0155e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0344e-07, dtype=torch.float64)
secont condition:: tensor(2.0344e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1319e-07, dtype=torch.float64)
secont condition:: tensor(2.1319e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1479e-07, dtype=torch.float64)
secont condition:: tensor(2.1479e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2396e-07, dtype=torch.float64)
secont condition:: tensor(2.2396e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1727e-07, dtype=torch.float64)
secont condition:: tensor(2.1727e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3098e-07, dtype=torch.float64)
secont condition:: tensor(2.3098e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5812e-07, dtype=torch.float64)
secont condition:: tensor(2.5812e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6921e-07, dtype=torch.float64)
secont condition:: tensor(2.6921e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5839e-07, dtype=torch.float64)
secont condition:: tensor(2.5839e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7653e-07, dtype=torch.float64)
secont condition:: tensor(2.7653e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1330e-07, dtype=torch.float64)
secont condition:: tensor(3.1330e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0171e-06, dtype=torch.float64)
secont condition:: tensor(2.0171e-06, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0804e-07, dtype=torch.float64)
secont condition:: tensor(3.0804e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3639e-07, dtype=torch.float64)
secont condition:: tensor(3.3639e-07, dtype=torch.float64)
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0807e-07, dtype=torch.float64)
secont condition:: tensor(3.0807e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4133e-07, dtype=torch.float64)
secont condition:: tensor(3.4133e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3372e-07, dtype=torch.float64)
secont condition:: tensor(3.3372e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7997e-07, dtype=torch.float64)
secont condition:: tensor(3.7997e-07, dtype=torch.float64)
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1076e-06, dtype=torch.float64)
secont condition:: tensor(4.1076e-06, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5893e-07, dtype=torch.float64)
secont condition:: tensor(3.5893e-07, dtype=torch.float64)
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6647e-07, dtype=torch.float64)
secont condition:: tensor(3.6647e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5885e-07, dtype=torch.float64)
secont condition:: tensor(3.5885e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5500e-07, dtype=torch.float64)
secont condition:: tensor(3.5500e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2768e-07, dtype=torch.float64)
secont condition:: tensor(4.2768e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8635e-07, dtype=torch.float64)
secont condition:: tensor(3.8635e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0365e-07, dtype=torch.float64)
secont condition:: tensor(4.0365e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9332e-07, dtype=torch.float64)
secont condition:: tensor(3.9332e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8495e-07, dtype=torch.float64)
secont condition:: tensor(3.8495e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9485e-07, dtype=torch.float64)
secont condition:: tensor(3.9485e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4611e-07, dtype=torch.float64)
secont condition:: tensor(4.4611e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3013e-07, dtype=torch.float64)
secont condition:: tensor(4.3013e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5566e-07, dtype=torch.float64)
secont condition:: tensor(4.5566e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3955e-07, dtype=torch.float64)
secont condition:: tensor(4.3955e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8103e-07, dtype=torch.float64)
secont condition:: tensor(4.8103e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2466e-07, dtype=torch.float64)
secont condition:: tensor(4.2466e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4806e-07, dtype=torch.float64)
secont condition:: tensor(4.4806e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7322e-07, dtype=torch.float64)
secont condition:: tensor(4.7322e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7562e-07, dtype=torch.float64)
secont condition:: tensor(4.7562e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3560e-07, dtype=torch.float64)
secont condition:: tensor(5.3560e-07, dtype=torch.float64)
epoch  60
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7013e-07, dtype=torch.float64)
secont condition:: tensor(4.7013e-07, dtype=torch.float64)
epoch  61
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6649e-07, dtype=torch.float64)
secont condition:: tensor(4.6649e-07, dtype=torch.float64)
epoch  62
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7652e-07, dtype=torch.float64)
secont condition:: tensor(4.7652e-07, dtype=torch.float64)
epoch  63
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1189e-07, dtype=torch.float64)
secont condition:: tensor(5.1189e-07, dtype=torch.float64)
epoch  64
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7667e-07, dtype=torch.float64)
secont condition:: tensor(5.7667e-07, dtype=torch.float64)
epoch  65
	calling Sampler:__iter__
epoch  66
	calling Sampler:__iter__
epoch  67
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1275e-07, dtype=torch.float64)
secont condition:: tensor(5.1275e-07, dtype=torch.float64)
epoch  68
	calling Sampler:__iter__
epoch  69
	calling Sampler:__iter__
epoch  70
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2159e-07, dtype=torch.float64)
secont condition:: tensor(5.2159e-07, dtype=torch.float64)
epoch  71
	calling Sampler:__iter__
epoch  72
	calling Sampler:__iter__
epoch  73
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
epoch  74
	calling Sampler:__iter__
epoch  75
	calling Sampler:__iter__
epoch  76
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7241e-07, dtype=torch.float64)
secont condition:: tensor(5.7241e-07, dtype=torch.float64)
epoch  77
	calling Sampler:__iter__
epoch  78
	calling Sampler:__iter__
epoch  79
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0604e-07, dtype=torch.float64)
secont condition:: tensor(6.0604e-07, dtype=torch.float64)
epoch  80
	calling Sampler:__iter__
epoch  81
	calling Sampler:__iter__
epoch  82
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0121e-07, dtype=torch.float64)
secont condition:: tensor(6.0121e-07, dtype=torch.float64)
epoch  83
	calling Sampler:__iter__
epoch  84
	calling Sampler:__iter__
epoch  85
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9711e-07, dtype=torch.float64)
secont condition:: tensor(6.9711e-07, dtype=torch.float64)
epoch  86
	calling Sampler:__iter__
epoch  87
	calling Sampler:__iter__
epoch  88
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9057e-07, dtype=torch.float64)
secont condition:: tensor(6.9057e-07, dtype=torch.float64)
epoch  89
	calling Sampler:__iter__
epoch  90
	calling Sampler:__iter__
epoch  91
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4915e-07, dtype=torch.float64)
secont condition:: tensor(6.4915e-07, dtype=torch.float64)
epoch  92
	calling Sampler:__iter__
epoch  93
	calling Sampler:__iter__
epoch  94
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4433e-07, dtype=torch.float64)
secont condition:: tensor(6.4433e-07, dtype=torch.float64)
epoch  95
	calling Sampler:__iter__
epoch  96
	calling Sampler:__iter__
epoch  97
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2144e-07, dtype=torch.float64)
secont condition:: tensor(7.2144e-07, dtype=torch.float64)
epoch  98
	calling Sampler:__iter__
epoch  99
	calling Sampler:__iter__
epoch  100
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7794e-07, dtype=torch.float64)
secont condition:: tensor(6.7794e-07, dtype=torch.float64)
epoch  101
	calling Sampler:__iter__
epoch  102
	calling Sampler:__iter__
epoch  103
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2506e-07, dtype=torch.float64)
secont condition:: tensor(7.2506e-07, dtype=torch.float64)
epoch  104
	calling Sampler:__iter__
epoch  105
	calling Sampler:__iter__
epoch  106
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5073e-07, dtype=torch.float64)
secont condition:: tensor(6.5073e-07, dtype=torch.float64)
epoch  107
	calling Sampler:__iter__
epoch  108
	calling Sampler:__iter__
epoch  109
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5260e-07, dtype=torch.float64)
secont condition:: tensor(7.5260e-07, dtype=torch.float64)
epoch  110
	calling Sampler:__iter__
epoch  111
	calling Sampler:__iter__
epoch  112
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1051e-07, dtype=torch.float64)
secont condition:: tensor(7.1051e-07, dtype=torch.float64)
epoch  113
	calling Sampler:__iter__
epoch  114
	calling Sampler:__iter__
epoch  115
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4995e-07, dtype=torch.float64)
secont condition:: tensor(8.4995e-07, dtype=torch.float64)
epoch  116
	calling Sampler:__iter__
epoch  117
	calling Sampler:__iter__
epoch  118
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6691e-07, dtype=torch.float64)
secont condition:: tensor(7.6691e-07, dtype=torch.float64)
epoch  119
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 117.12181854248047
curr_diff: 0 tensor(8.7775e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.9906e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(6.3795e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6434e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.4198e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(4.2671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.3510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.2699e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1488e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0001, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4871e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4241e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8571e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4255e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965100
batch size:: 30000
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.211668
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.173977
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 2, Batch: 0, Loss: 0.157483
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.153872
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.153116
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.152650
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.152856
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.148213
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.147509
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 9, Batch: 0, Loss: 0.149509
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.150125
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.147301
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145475
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.145286
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 14, Batch: 0, Loss: 0.146054
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.146257
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.144922
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 17, Batch: 0, Loss: 0.148069
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.145885
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.144258
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.143108
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.143615
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 22, Batch: 0, Loss: 0.144725
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.144306
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.143210
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 25, Batch: 0, Loss: 0.143254
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.141367
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.144160
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 28, Batch: 0, Loss: 0.143676
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 29, Batch: 0, Loss: 0.144658
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.142559
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 31, Batch: 0, Loss: 0.140209
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 32, Batch: 0, Loss: 0.144337
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 33, Batch: 0, Loss: 0.145981
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.145085
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 35, Batch: 0, Loss: 0.144604
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 36, Batch: 0, Loss: 0.142478
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.142712
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.140458
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 39, Batch: 0, Loss: 0.144599
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.143309
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 41, Batch: 0, Loss: 0.140832
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.143261
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 43, Batch: 0, Loss: 0.143723
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.139728
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 45, Batch: 0, Loss: 0.144943
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.143227
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 47, Batch: 0, Loss: 0.140778
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.142828
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 49, Batch: 0, Loss: 0.142524
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 50, Batch: 0, Loss: 0.140360
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 51, Batch: 0, Loss: 0.139986
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.142976
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 53, Batch: 0, Loss: 0.141127
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.140741
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.142239
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 56, Batch: 0, Loss: 0.142608
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.143540
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 58, Batch: 0, Loss: 0.144870
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 59, Batch: 0, Loss: 0.141678
Test Avg. Loss: 0.000013, Accuracy: 0.965200
training_time:: 123.52261090278625
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.18016219139099
time_baseline:: 82.31423878669739
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4881e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4429e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9549e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4481e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2396e-08, dtype=torch.float64)
secont condition:: tensor(9.2396e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6449e-08, dtype=torch.float64)
secont condition:: tensor(4.6449e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.7875e-08, dtype=torch.float64)
secont condition:: tensor(6.7875e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3069e-08, dtype=torch.float64)
secont condition:: tensor(7.3069e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.5678e-07, dtype=torch.float64)
secont condition:: tensor(1.5678e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5258e-08, dtype=torch.float64)
secont condition:: tensor(9.5258e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0449e-07, dtype=torch.float64)
secont condition:: tensor(2.0449e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1587e-06, dtype=torch.float64)
secont condition:: tensor(3.1587e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.4591e-08, dtype=torch.float64)
secont condition:: tensor(7.4591e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4328e-07, dtype=torch.float64)
secont condition:: tensor(1.4328e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3722e-07, dtype=torch.float64)
secont condition:: tensor(1.3722e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6556e-07, dtype=torch.float64)
secont condition:: tensor(1.6556e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8502e-07, dtype=torch.float64)
secont condition:: tensor(1.8502e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6769e-07, dtype=torch.float64)
secont condition:: tensor(1.6769e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9349e-07, dtype=torch.float64)
secont condition:: tensor(1.9349e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7429e-07, dtype=torch.float64)
secont condition:: tensor(1.7429e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4185e-07, dtype=torch.float64)
secont condition:: tensor(1.4185e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4026e-07, dtype=torch.float64)
secont condition:: tensor(2.4026e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7372e-07, dtype=torch.float64)
secont condition:: tensor(1.7372e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1694e-07, dtype=torch.float64)
secont condition:: tensor(2.1694e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9165e-07, dtype=torch.float64)
secont condition:: tensor(2.9165e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2958e-07, dtype=torch.float64)
secont condition:: tensor(2.2958e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2804e-07, dtype=torch.float64)
secont condition:: tensor(2.2804e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6690e-07, dtype=torch.float64)
secont condition:: tensor(2.6690e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1967e-07, dtype=torch.float64)
secont condition:: tensor(2.1967e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9273e-07, dtype=torch.float64)
secont condition:: tensor(2.9273e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5008e-07, dtype=torch.float64)
secont condition:: tensor(3.5008e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7962e-07, dtype=torch.float64)
secont condition:: tensor(2.7962e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8083e-07, dtype=torch.float64)
secont condition:: tensor(2.8083e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1104e-07, dtype=torch.float64)
secont condition:: tensor(3.1104e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7316e-07, dtype=torch.float64)
secont condition:: tensor(2.7316e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1436e-07, dtype=torch.float64)
secont condition:: tensor(3.1436e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1265e-07, dtype=torch.float64)
secont condition:: tensor(4.1265e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3215e-07, dtype=torch.float64)
secont condition:: tensor(2.3215e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7940e-07, dtype=torch.float64)
secont condition:: tensor(3.7940e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7999e-07, dtype=torch.float64)
secont condition:: tensor(3.7999e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0745e-07, dtype=torch.float64)
secont condition:: tensor(3.0745e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1520e-07, dtype=torch.float64)
secont condition:: tensor(3.1520e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1378e-07, dtype=torch.float64)
secont condition:: tensor(4.1378e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1639e-07, dtype=torch.float64)
secont condition:: tensor(3.1639e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6164e-07, dtype=torch.float64)
secont condition:: tensor(4.6164e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1584e-07, dtype=torch.float64)
secont condition:: tensor(4.1584e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8589e-07, dtype=torch.float64)
secont condition:: tensor(3.8589e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1756e-07, dtype=torch.float64)
secont condition:: tensor(4.1756e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0422e-07, dtype=torch.float64)
secont condition:: tensor(4.0422e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3880e-07, dtype=torch.float64)
secont condition:: tensor(4.3880e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0243e-07, dtype=torch.float64)
secont condition:: tensor(5.0243e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9032e-07, dtype=torch.float64)
secont condition:: tensor(3.9032e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5028e-07, dtype=torch.float64)
secont condition:: tensor(4.5028e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0804e-07, dtype=torch.float64)
secont condition:: tensor(4.0804e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5692e-07, dtype=torch.float64)
secont condition:: tensor(5.5692e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2870e-07, dtype=torch.float64)
secont condition:: tensor(4.2870e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0837e-07, dtype=torch.float64)
secont condition:: tensor(4.0837e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4311e-07, dtype=torch.float64)
secont condition:: tensor(4.4311e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6868e-07, dtype=torch.float64)
secont condition:: tensor(5.6868e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9871e-07, dtype=torch.float64)
secont condition:: tensor(3.9871e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2311e-07, dtype=torch.float64)
secont condition:: tensor(4.2311e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8402e-07, dtype=torch.float64)
secont condition:: tensor(4.8402e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8280e-07, dtype=torch.float64)
secont condition:: tensor(4.8280e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2191e-07, dtype=torch.float64)
secont condition:: tensor(4.2191e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3221e-07, dtype=torch.float64)
secont condition:: tensor(6.3221e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5675e-07, dtype=torch.float64)
secont condition:: tensor(5.5675e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5513e-07, dtype=torch.float64)
secont condition:: tensor(5.5513e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9656e-07, dtype=torch.float64)
secont condition:: tensor(5.9656e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9304e-07, dtype=torch.float64)
secont condition:: tensor(4.9304e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1210e-07, dtype=torch.float64)
secont condition:: tensor(8.1210e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6125e-07, dtype=torch.float64)
secont condition:: tensor(6.6125e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3455e-07, dtype=torch.float64)
secont condition:: tensor(6.3455e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7376e-07, dtype=torch.float64)
secont condition:: tensor(6.7376e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8274e-07, dtype=torch.float64)
secont condition:: tensor(9.8274e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9442e-07, dtype=torch.float64)
secont condition:: tensor(6.9442e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0394e-07, dtype=torch.float64)
secont condition:: tensor(9.0394e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5473e-07, dtype=torch.float64)
secont condition:: tensor(8.5473e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1850e-07, dtype=torch.float64)
secont condition:: tensor(9.1850e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4318e-07, dtype=torch.float64)
secont condition:: tensor(8.4318e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1428e-07, dtype=torch.float64)
secont condition:: tensor(9.1428e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4376e-07, dtype=torch.float64)
secont condition:: tensor(7.4376e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(8.9821e-07, dtype=torch.float64)
secont condition:: tensor(8.9821e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 64.32746410369873
curr_diff: 0 tensor(8.0925e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.5993e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.2476e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.9086e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9954e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.4437e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.4926e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(1.8398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1167e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4209e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0298e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4648e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 2
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.219651
Test Avg. Loss: 0.000015, Accuracy: 0.959700
Train - Epoch 1, Batch: 0, Loss: 0.170333
Test Avg. Loss: 0.000014, Accuracy: 0.962300
Train - Epoch 2, Batch: 0, Loss: 0.162861
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.156154
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.153873
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.150185
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.152925
Test Avg. Loss: 0.000014, Accuracy: 0.964200
Train - Epoch 7, Batch: 0, Loss: 0.148052
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 8, Batch: 0, Loss: 0.149778
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.145104
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.147676
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148842
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 12, Batch: 0, Loss: 0.147784
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 13, Batch: 0, Loss: 0.147340
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.144633
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.144742
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.144988
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.146016
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 18, Batch: 0, Loss: 0.144128
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.148958
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.141733
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.141012
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.142406
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.143054
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 24, Batch: 0, Loss: 0.146208
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 25, Batch: 0, Loss: 0.141575
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.144029
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144478
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 28, Batch: 0, Loss: 0.142595
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.146154
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 30, Batch: 0, Loss: 0.145277
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.143166
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.146188
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.139585
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.144680
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 35, Batch: 0, Loss: 0.142808
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 36, Batch: 0, Loss: 0.143021
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.144264
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 38, Batch: 0, Loss: 0.141582
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 39, Batch: 0, Loss: 0.143938
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 40, Batch: 0, Loss: 0.144031
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 41, Batch: 0, Loss: 0.143738
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.143764
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.140285
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.140528
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 45, Batch: 0, Loss: 0.140943
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.144312
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 47, Batch: 0, Loss: 0.144101
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 48, Batch: 0, Loss: 0.143846
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 49, Batch: 0, Loss: 0.141860
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 50, Batch: 0, Loss: 0.142273
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.139840
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 52, Batch: 0, Loss: 0.141199
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.145347
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 54, Batch: 0, Loss: 0.142856
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 55, Batch: 0, Loss: 0.141475
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 56, Batch: 0, Loss: 0.143350
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 57, Batch: 0, Loss: 0.142616
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 58, Batch: 0, Loss: 0.143100
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.141889
Test Avg. Loss: 0.000013, Accuracy: 0.965400
training_time:: 123.47405576705933
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.32584857940674
time_baseline:: 82.46599197387695
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.2267e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2175e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4195e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8638e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2609e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6081e-08, dtype=torch.float64)
secont condition:: tensor(1.6081e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2961e-08, dtype=torch.float64)
secont condition:: tensor(5.2961e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.6656e-08, dtype=torch.float64)
secont condition:: tensor(7.6656e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(8.8007e-08, dtype=torch.float64)
secont condition:: tensor(8.8007e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0344e-08, dtype=torch.float64)
secont condition:: tensor(8.0344e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1437e-07, dtype=torch.float64)
secont condition:: tensor(1.1437e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7517e-07, dtype=torch.float64)
secont condition:: tensor(1.7517e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1071e-07, dtype=torch.float64)
secont condition:: tensor(1.1071e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9130e-07, dtype=torch.float64)
secont condition:: tensor(1.9130e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0000e-07, dtype=torch.float64)
secont condition:: tensor(1.0000e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1377e-07, dtype=torch.float64)
secont condition:: tensor(1.1377e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4587e-07, dtype=torch.float64)
secont condition:: tensor(1.4587e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2920e-07, dtype=torch.float64)
secont condition:: tensor(1.2920e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9554e-07, dtype=torch.float64)
secont condition:: tensor(1.9554e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6449e-07, dtype=torch.float64)
secont condition:: tensor(1.6449e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1622e-07, dtype=torch.float64)
secont condition:: tensor(2.1622e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1195e-07, dtype=torch.float64)
secont condition:: tensor(2.1195e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9869e-07, dtype=torch.float64)
secont condition:: tensor(1.9869e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4037e-07, dtype=torch.float64)
secont condition:: tensor(2.4037e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3885e-07, dtype=torch.float64)
secont condition:: tensor(2.3885e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7865e-07, dtype=torch.float64)
secont condition:: tensor(1.7865e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3198e-07, dtype=torch.float64)
secont condition:: tensor(2.3198e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1229e-07, dtype=torch.float64)
secont condition:: tensor(3.1229e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4231e-07, dtype=torch.float64)
secont condition:: tensor(2.4231e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4556e-07, dtype=torch.float64)
secont condition:: tensor(2.4556e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0367e-07, dtype=torch.float64)
secont condition:: tensor(3.0367e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3977e-06, dtype=torch.float64)
secont condition:: tensor(4.3977e-06, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7355e-07, dtype=torch.float64)
secont condition:: tensor(2.7355e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4631e-07, dtype=torch.float64)
secont condition:: tensor(2.4631e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6149e-07, dtype=torch.float64)
secont condition:: tensor(2.6149e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9960e-07, dtype=torch.float64)
secont condition:: tensor(3.9960e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5791e-07, dtype=torch.float64)
secont condition:: tensor(2.5791e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3304e-07, dtype=torch.float64)
secont condition:: tensor(3.3304e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0733e-07, dtype=torch.float64)
secont condition:: tensor(3.0733e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5137e-07, dtype=torch.float64)
secont condition:: tensor(3.5137e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0005e-07, dtype=torch.float64)
secont condition:: tensor(6.0005e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0175e-06, dtype=torch.float64)
secont condition:: tensor(4.0175e-06, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5445e-07, dtype=torch.float64)
secont condition:: tensor(3.5445e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5527e-07, dtype=torch.float64)
secont condition:: tensor(3.5527e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5932e-07, dtype=torch.float64)
secont condition:: tensor(3.5932e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4889e-07, dtype=torch.float64)
secont condition:: tensor(4.4889e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8655e-07, dtype=torch.float64)
secont condition:: tensor(2.8655e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4554e-07, dtype=torch.float64)
secont condition:: tensor(3.4554e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1306e-07, dtype=torch.float64)
secont condition:: tensor(4.1306e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1066e-07, dtype=torch.float64)
secont condition:: tensor(5.1066e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5687e-07, dtype=torch.float64)
secont condition:: tensor(3.5687e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5550e-07, dtype=torch.float64)
secont condition:: tensor(4.5550e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9406e-07, dtype=torch.float64)
secont condition:: tensor(3.9406e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3820e-07, dtype=torch.float64)
secont condition:: tensor(4.3820e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9576e-07, dtype=torch.float64)
secont condition:: tensor(3.9576e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9342e-07, dtype=torch.float64)
secont condition:: tensor(3.9342e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8187e-07, dtype=torch.float64)
secont condition:: tensor(4.8187e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2452e-07, dtype=torch.float64)
secont condition:: tensor(5.2452e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2239e-07, dtype=torch.float64)
secont condition:: tensor(4.2239e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5545e-07, dtype=torch.float64)
secont condition:: tensor(4.5545e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4888e-07, dtype=torch.float64)
secont condition:: tensor(4.4888e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4388e-07, dtype=torch.float64)
secont condition:: tensor(5.4388e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4839e-07, dtype=torch.float64)
secont condition:: tensor(4.4839e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8912e-07, dtype=torch.float64)
secont condition:: tensor(5.8912e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8271e-07, dtype=torch.float64)
secont condition:: tensor(4.8271e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7815e-07, dtype=torch.float64)
secont condition:: tensor(7.7815e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4659e-07, dtype=torch.float64)
secont condition:: tensor(5.4659e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7559e-07, dtype=torch.float64)
secont condition:: tensor(4.7559e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9390e-07, dtype=torch.float64)
secont condition:: tensor(5.9390e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0406e-07, dtype=torch.float64)
secont condition:: tensor(7.0406e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0196e-06, dtype=torch.float64)
secont condition:: tensor(1.0196e-06, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5293e-07, dtype=torch.float64)
secont condition:: tensor(7.5293e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5972e-07, dtype=torch.float64)
secont condition:: tensor(7.5972e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1994e-07, dtype=torch.float64)
secont condition:: tensor(8.1994e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6970e-07, dtype=torch.float64)
secont condition:: tensor(7.6970e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2585e-07, dtype=torch.float64)
secont condition:: tensor(8.2585e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6044e-07, dtype=torch.float64)
secont condition:: tensor(7.6044e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(8.2471e-07, dtype=torch.float64)
secont condition:: tensor(8.2471e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9784e-07, dtype=torch.float64)
secont condition:: tensor(7.9784e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8193e-07, dtype=torch.float64)
secont condition:: tensor(7.8193e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4352e-07, dtype=torch.float64)
secont condition:: tensor(8.4352e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 65.71829795837402
curr_diff: 0 tensor(9.4504e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6331e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(9.4832e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7036e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.7380e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.2297e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1285e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.7411e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4667e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.2346e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9693e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7527e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 3
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215609
Test Avg. Loss: 0.000015, Accuracy: 0.959500
Train - Epoch 1, Batch: 0, Loss: 0.171450
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 2, Batch: 0, Loss: 0.163262
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.154593
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.154880
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.149914
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.152492
Test Avg. Loss: 0.000014, Accuracy: 0.964300
Train - Epoch 7, Batch: 0, Loss: 0.151445
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 8, Batch: 0, Loss: 0.150000
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.146747
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.146118
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.148716
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.148231
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 13, Batch: 0, Loss: 0.147147
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 14, Batch: 0, Loss: 0.148451
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 15, Batch: 0, Loss: 0.142003
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.143913
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.142863
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 18, Batch: 0, Loss: 0.143637
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 19, Batch: 0, Loss: 0.143545
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.146124
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 21, Batch: 0, Loss: 0.146112
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 22, Batch: 0, Loss: 0.141755
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 23, Batch: 0, Loss: 0.145365
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.142180
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 25, Batch: 0, Loss: 0.145276
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 26, Batch: 0, Loss: 0.141201
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.144572
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.142944
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 29, Batch: 0, Loss: 0.142467
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.142492
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 31, Batch: 0, Loss: 0.140530
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 32, Batch: 0, Loss: 0.141289
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.140678
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.145771
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 35, Batch: 0, Loss: 0.141527
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 36, Batch: 0, Loss: 0.142895
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 37, Batch: 0, Loss: 0.144075
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 38, Batch: 0, Loss: 0.136585
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.140110
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 40, Batch: 0, Loss: 0.140020
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 41, Batch: 0, Loss: 0.142056
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 42, Batch: 0, Loss: 0.144725
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.141317
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.141188
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.143787
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.143288
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.145526
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 48, Batch: 0, Loss: 0.146574
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 49, Batch: 0, Loss: 0.141134
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.144454
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 51, Batch: 0, Loss: 0.141845
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 52, Batch: 0, Loss: 0.138923
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 53, Batch: 0, Loss: 0.144798
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 54, Batch: 0, Loss: 0.144340
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 55, Batch: 0, Loss: 0.141106
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 56, Batch: 0, Loss: 0.141675
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 57, Batch: 0, Loss: 0.144212
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 58, Batch: 0, Loss: 0.141984
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 59, Batch: 0, Loss: 0.143835
Test Avg. Loss: 0.000013, Accuracy: 0.964900
training_time:: 123.27616286277771
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.27697682380676
time_baseline:: 82.41072940826416
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.1114e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2535e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4406e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8007e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3542e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6025e-08, dtype=torch.float64)
secont condition:: tensor(2.6025e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.3477e-08, dtype=torch.float64)
secont condition:: tensor(6.3477e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6689e-08, dtype=torch.float64)
secont condition:: tensor(9.6689e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0285e-07, dtype=torch.float64)
secont condition:: tensor(1.0285e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1211e-08, dtype=torch.float64)
secont condition:: tensor(6.1211e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3765e-07, dtype=torch.float64)
secont condition:: tensor(1.3765e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6481e-08, dtype=torch.float64)
secont condition:: tensor(8.6481e-08, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3679e-07, dtype=torch.float64)
secont condition:: tensor(1.3679e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6729e-07, dtype=torch.float64)
secont condition:: tensor(1.6729e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4017e-07, dtype=torch.float64)
secont condition:: tensor(1.4017e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9316e-07, dtype=torch.float64)
secont condition:: tensor(1.9316e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2943e-07, dtype=torch.float64)
secont condition:: tensor(1.2943e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7207e-07, dtype=torch.float64)
secont condition:: tensor(1.7207e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5198e-07, dtype=torch.float64)
secont condition:: tensor(1.5198e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8643e-07, dtype=torch.float64)
secont condition:: tensor(1.8643e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4021e-07, dtype=torch.float64)
secont condition:: tensor(1.4021e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2134e-07, dtype=torch.float64)
secont condition:: tensor(2.2134e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4590e-07, dtype=torch.float64)
secont condition:: tensor(2.4590e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8325e-07, dtype=torch.float64)
secont condition:: tensor(2.8325e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0513e-07, dtype=torch.float64)
secont condition:: tensor(2.0513e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5746e-06, dtype=torch.float64)
secont condition:: tensor(4.5746e-06, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0663e-07, dtype=torch.float64)
secont condition:: tensor(2.0663e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9866e-07, dtype=torch.float64)
secont condition:: tensor(1.9866e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4525e-07, dtype=torch.float64)
secont condition:: tensor(2.4525e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3275e-07, dtype=torch.float64)
secont condition:: tensor(3.3275e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5083e-07, dtype=torch.float64)
secont condition:: tensor(2.5083e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3334e-07, dtype=torch.float64)
secont condition:: tensor(4.3334e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3397e-06, dtype=torch.float64)
secont condition:: tensor(4.3397e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4714e-07, dtype=torch.float64)
secont condition:: tensor(2.4714e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3929e-07, dtype=torch.float64)
secont condition:: tensor(3.3929e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0360e-06, dtype=torch.float64)
secont condition:: tensor(2.0360e-06, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3289e-07, dtype=torch.float64)
secont condition:: tensor(3.3289e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4326e-07, dtype=torch.float64)
secont condition:: tensor(3.4326e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9189e-07, dtype=torch.float64)
secont condition:: tensor(2.9189e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0313e-07, dtype=torch.float64)
secont condition:: tensor(4.0313e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.5750e-07, dtype=torch.float64)
secont condition:: tensor(3.5750e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2760e-07, dtype=torch.float64)
secont condition:: tensor(3.2760e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8565e-07, dtype=torch.float64)
secont condition:: tensor(2.8565e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1957e-07, dtype=torch.float64)
secont condition:: tensor(4.1957e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7410e-07, dtype=torch.float64)
secont condition:: tensor(3.7410e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8168e-07, dtype=torch.float64)
secont condition:: tensor(4.8168e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2428e-07, dtype=torch.float64)
secont condition:: tensor(3.2428e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2071e-07, dtype=torch.float64)
secont condition:: tensor(4.2071e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7129e-07, dtype=torch.float64)
secont condition:: tensor(3.7129e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9498e-07, dtype=torch.float64)
secont condition:: tensor(3.9498e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1224e-07, dtype=torch.float64)
secont condition:: tensor(4.1224e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4512e-07, dtype=torch.float64)
secont condition:: tensor(3.4512e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9370e-07, dtype=torch.float64)
secont condition:: tensor(4.9370e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7198e-07, dtype=torch.float64)
secont condition:: tensor(3.7198e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0262e-07, dtype=torch.float64)
secont condition:: tensor(5.0262e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1011e-07, dtype=torch.float64)
secont condition:: tensor(5.1011e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6955e-07, dtype=torch.float64)
secont condition:: tensor(4.6955e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8872e-07, dtype=torch.float64)
secont condition:: tensor(3.8872e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7319e-07, dtype=torch.float64)
secont condition:: tensor(4.7319e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9430e-07, dtype=torch.float64)
secont condition:: tensor(4.9430e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4236e-07, dtype=torch.float64)
secont condition:: tensor(4.4236e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6882e-07, dtype=torch.float64)
secont condition:: tensor(5.6882e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3993e-07, dtype=torch.float64)
secont condition:: tensor(4.3993e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0258e-07, dtype=torch.float64)
secont condition:: tensor(5.0258e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6988e-07, dtype=torch.float64)
secont condition:: tensor(4.6988e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7260e-07, dtype=torch.float64)
secont condition:: tensor(5.7260e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8230e-07, dtype=torch.float64)
secont condition:: tensor(4.8230e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5750e-07, dtype=torch.float64)
secont condition:: tensor(4.5750e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7918e-07, dtype=torch.float64)
secont condition:: tensor(5.7918e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3715e-07, dtype=torch.float64)
secont condition:: tensor(5.3715e-07, dtype=torch.float64)
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.9334e-07, dtype=torch.float64)
secont condition:: tensor(5.9334e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8245e-07, dtype=torch.float64)
secont condition:: tensor(5.8245e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2328e-07, dtype=torch.float64)
secont condition:: tensor(6.2328e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8928e-07, dtype=torch.float64)
secont condition:: tensor(7.8928e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6353e-07, dtype=torch.float64)
secont condition:: tensor(6.6353e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2638e-07, dtype=torch.float64)
secont condition:: tensor(7.2638e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0681e-07, dtype=torch.float64)
secont condition:: tensor(7.0681e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
curr_secont condition:: tensor(7.5026e-07, dtype=torch.float64)
secont condition:: tensor(7.5026e-07, dtype=torch.float64)
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1121e-07, dtype=torch.float64)
secont condition:: tensor(8.1121e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.7938e-07, dtype=torch.float64)
secont condition:: tensor(8.7938e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0004e-07, dtype=torch.float64)
secont condition:: tensor(8.0004e-07, dtype=torch.float64)
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6111e-07, dtype=torch.float64)
secont condition:: tensor(8.6111e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 62.18700623512268
curr_diff: 0 tensor(1.0728e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.5633e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(7.6015e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5219e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.4909e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.6577e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.6046e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.0939e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.8153e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0830e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1068e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3177e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8391e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1295e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
repetition 4
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216636
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.174908
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.161686
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.157961
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.152628
Test Avg. Loss: 0.000014, Accuracy: 0.963500
Train - Epoch 5, Batch: 0, Loss: 0.152899
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.155107
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 7, Batch: 0, Loss: 0.149166
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.152744
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.147360
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.147722
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 11, Batch: 0, Loss: 0.145151
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 12, Batch: 0, Loss: 0.147597
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.148879
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 14, Batch: 0, Loss: 0.146364
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 15, Batch: 0, Loss: 0.146044
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 16, Batch: 0, Loss: 0.140641
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.146436
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 18, Batch: 0, Loss: 0.145726
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 19, Batch: 0, Loss: 0.142877
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 20, Batch: 0, Loss: 0.142561
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.144643
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 22, Batch: 0, Loss: 0.145406
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.146884
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 24, Batch: 0, Loss: 0.144052
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 25, Batch: 0, Loss: 0.144219
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 26, Batch: 0, Loss: 0.145398
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 27, Batch: 0, Loss: 0.144539
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 28, Batch: 0, Loss: 0.145608
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 29, Batch: 0, Loss: 0.143763
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.144239
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 31, Batch: 0, Loss: 0.142866
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.141397
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 33, Batch: 0, Loss: 0.141470
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 34, Batch: 0, Loss: 0.146432
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 35, Batch: 0, Loss: 0.140939
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 36, Batch: 0, Loss: 0.142468
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 37, Batch: 0, Loss: 0.140484
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 38, Batch: 0, Loss: 0.139215
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 39, Batch: 0, Loss: 0.144187
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.146873
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 41, Batch: 0, Loss: 0.139605
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 42, Batch: 0, Loss: 0.141507
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 43, Batch: 0, Loss: 0.144058
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 44, Batch: 0, Loss: 0.144351
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 45, Batch: 0, Loss: 0.141088
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 46, Batch: 0, Loss: 0.142125
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 47, Batch: 0, Loss: 0.139828
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 48, Batch: 0, Loss: 0.143880
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.144431
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 50, Batch: 0, Loss: 0.142771
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 51, Batch: 0, Loss: 0.140265
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.143912
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 53, Batch: 0, Loss: 0.143657
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 54, Batch: 0, Loss: 0.141253
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 55, Batch: 0, Loss: 0.143920
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 56, Batch: 0, Loss: 0.141011
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 57, Batch: 0, Loss: 0.141126
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 58, Batch: 0, Loss: 0.141541
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 59, Batch: 0, Loss: 0.142996
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 123.59307909011841
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.34014105796814
time_baseline:: 82.4757022857666
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2212e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3593e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9129e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3951e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6599e-09, dtype=torch.float64)
secont condition:: tensor(6.6599e-09, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.4488e-08, dtype=torch.float64)
secont condition:: tensor(7.4488e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.0555e-08, dtype=torch.float64)
secont condition:: tensor(7.0555e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1180e-07, dtype=torch.float64)
secont condition:: tensor(1.1180e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7783e-08, dtype=torch.float64)
secont condition:: tensor(9.7783e-08, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2255e-07, dtype=torch.float64)
secont condition:: tensor(1.2255e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8908e-07, dtype=torch.float64)
secont condition:: tensor(1.8908e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5056e-08, dtype=torch.float64)
secont condition:: tensor(9.5056e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.6104e-08, dtype=torch.float64)
secont condition:: tensor(9.6104e-08, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3072e-07, dtype=torch.float64)
secont condition:: tensor(1.3072e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3065e-07, dtype=torch.float64)
secont condition:: tensor(1.3065e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7363e-07, dtype=torch.float64)
secont condition:: tensor(1.7363e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3452e-07, dtype=torch.float64)
secont condition:: tensor(1.3452e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7475e-07, dtype=torch.float64)
secont condition:: tensor(1.7475e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3227e-07, dtype=torch.float64)
secont condition:: tensor(1.3227e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9542e-07, dtype=torch.float64)
secont condition:: tensor(1.9542e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4679e-07, dtype=torch.float64)
secont condition:: tensor(2.4679e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9629e-07, dtype=torch.float64)
secont condition:: tensor(1.9629e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6394e-07, dtype=torch.float64)
secont condition:: tensor(2.6394e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0109e-07, dtype=torch.float64)
secont condition:: tensor(2.0109e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6350e-07, dtype=torch.float64)
secont condition:: tensor(2.6350e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8809e-07, dtype=torch.float64)
secont condition:: tensor(1.8809e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6016e-07, dtype=torch.float64)
secont condition:: tensor(2.6016e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2927e-07, dtype=torch.float64)
secont condition:: tensor(2.2927e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1765e-07, dtype=torch.float64)
secont condition:: tensor(2.1765e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1815e-07, dtype=torch.float64)
secont condition:: tensor(3.1815e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1209e-07, dtype=torch.float64)
secont condition:: tensor(3.1209e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0104e-07, dtype=torch.float64)
secont condition:: tensor(3.0104e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5178e-07, dtype=torch.float64)
secont condition:: tensor(2.5178e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0322e-07, dtype=torch.float64)
secont condition:: tensor(3.0322e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4608e-07, dtype=torch.float64)
secont condition:: tensor(2.4608e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1654e-07, dtype=torch.float64)
secont condition:: tensor(3.1654e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6806e-07, dtype=torch.float64)
secont condition:: tensor(2.6806e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4503e-07, dtype=torch.float64)
secont condition:: tensor(3.4503e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0484e-07, dtype=torch.float64)
secont condition:: tensor(4.0484e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1968e-07, dtype=torch.float64)
secont condition:: tensor(3.1968e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5230e-07, dtype=torch.float64)
secont condition:: tensor(2.5230e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3926e-07, dtype=torch.float64)
secont condition:: tensor(3.3926e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5913e-07, dtype=torch.float64)
secont condition:: tensor(3.5913e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0115e-07, dtype=torch.float64)
secont condition:: tensor(4.0115e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0536e-07, dtype=torch.float64)
secont condition:: tensor(3.0536e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6221e-07, dtype=torch.float64)
secont condition:: tensor(3.6221e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1781e-07, dtype=torch.float64)
secont condition:: tensor(3.1781e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2867e-07, dtype=torch.float64)
secont condition:: tensor(4.2867e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5076e-07, dtype=torch.float64)
secont condition:: tensor(3.5076e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2281e-07, dtype=torch.float64)
secont condition:: tensor(4.2281e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0015e-07, dtype=torch.float64)
secont condition:: tensor(4.0015e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5212e-07, dtype=torch.float64)
secont condition:: tensor(4.5212e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5608e-07, dtype=torch.float64)
secont condition:: tensor(5.5608e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4261e-07, dtype=torch.float64)
secont condition:: tensor(4.4261e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5835e-07, dtype=torch.float64)
secont condition:: tensor(4.5835e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.3461e-07, dtype=torch.float64)
secont condition:: tensor(4.3461e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0613e-07, dtype=torch.float64)
secont condition:: tensor(4.0613e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8091e-07, dtype=torch.float64)
secont condition:: tensor(4.8091e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8602e-07, dtype=torch.float64)
secont condition:: tensor(3.8602e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6249e-07, dtype=torch.float64)
secont condition:: tensor(4.6249e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6978e-07, dtype=torch.float64)
secont condition:: tensor(4.6978e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9925e-07, dtype=torch.float64)
secont condition:: tensor(4.9925e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3730e-07, dtype=torch.float64)
secont condition:: tensor(6.3730e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2718e-07, dtype=torch.float64)
secont condition:: tensor(5.2718e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2256e-07, dtype=torch.float64)
secont condition:: tensor(4.2256e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0074e-07, dtype=torch.float64)
secont condition:: tensor(5.0074e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6812e-07, dtype=torch.float64)
secont condition:: tensor(5.6812e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2171e-07, dtype=torch.float64)
secont condition:: tensor(5.2171e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7770e-07, dtype=torch.float64)
secont condition:: tensor(5.7770e-07, dtype=torch.float64)
epoch  36
	calling Sampler:__iter__
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4346e-07, dtype=torch.float64)
secont condition:: tensor(6.4346e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6916e-07, dtype=torch.float64)
secont condition:: tensor(6.6916e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
epoch  42
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5556e-07, dtype=torch.float64)
secont condition:: tensor(6.5556e-07, dtype=torch.float64)
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(8.6193e-07, dtype=torch.float64)
secont condition:: tensor(8.6193e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
epoch  45
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8529e-07, dtype=torch.float64)
secont condition:: tensor(6.8529e-07, dtype=torch.float64)
epoch  46
	calling Sampler:__iter__
epoch  47
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1147e-07, dtype=torch.float64)
secont condition:: tensor(7.1147e-07, dtype=torch.float64)
epoch  48
	calling Sampler:__iter__
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0212e-07, dtype=torch.float64)
secont condition:: tensor(7.0212e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4618e-07, dtype=torch.float64)
secont condition:: tensor(8.4618e-07, dtype=torch.float64)
epoch  53
	calling Sampler:__iter__
epoch  54
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1963e-07, dtype=torch.float64)
secont condition:: tensor(8.1963e-07, dtype=torch.float64)
epoch  55
	calling Sampler:__iter__
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
epoch  58
	calling Sampler:__iter__
curr_secont condition:: tensor(9.4335e-07, dtype=torch.float64)
secont condition:: tensor(9.4335e-07, dtype=torch.float64)
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3112e-07, dtype=torch.float64)
secont condition:: tensor(9.3112e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 64.33626699447632
curr_diff: 0 tensor(5.6970e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.9898e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.5779e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2287e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(6.9757e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9372e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.2978e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9156e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3323e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4809e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9400e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3512e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
repetition 5
python3 benchmark_exp_more_complex.py 0.001 30000 60 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212924
Test Avg. Loss: 0.000015, Accuracy: 0.959800
Train - Epoch 1, Batch: 0, Loss: 0.173400
Test Avg. Loss: 0.000014, Accuracy: 0.962200
Train - Epoch 2, Batch: 0, Loss: 0.163936
Test Avg. Loss: 0.000014, Accuracy: 0.962700
Train - Epoch 3, Batch: 0, Loss: 0.155180
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 4, Batch: 0, Loss: 0.155662
Test Avg. Loss: 0.000014, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.154712
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 6, Batch: 0, Loss: 0.149246
Test Avg. Loss: 0.000014, Accuracy: 0.964100
Train - Epoch 7, Batch: 0, Loss: 0.151669
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 8, Batch: 0, Loss: 0.150770
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 9, Batch: 0, Loss: 0.147220
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.149415
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.144890
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.146850
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.147272
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 14, Batch: 0, Loss: 0.147976
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 15, Batch: 0, Loss: 0.145772
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 16, Batch: 0, Loss: 0.140684
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 17, Batch: 0, Loss: 0.144365
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 18, Batch: 0, Loss: 0.144142
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 19, Batch: 0, Loss: 0.141178
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 20, Batch: 0, Loss: 0.142769
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 21, Batch: 0, Loss: 0.145138
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 22, Batch: 0, Loss: 0.142280
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 23, Batch: 0, Loss: 0.141604
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 24, Batch: 0, Loss: 0.146506
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 25, Batch: 0, Loss: 0.143477
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 26, Batch: 0, Loss: 0.145858
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 27, Batch: 0, Loss: 0.146232
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 28, Batch: 0, Loss: 0.144440
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 29, Batch: 0, Loss: 0.143675
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 30, Batch: 0, Loss: 0.143768
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 31, Batch: 0, Loss: 0.141780
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 32, Batch: 0, Loss: 0.145395
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 33, Batch: 0, Loss: 0.140789
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 34, Batch: 0, Loss: 0.144412
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 35, Batch: 0, Loss: 0.143094
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 36, Batch: 0, Loss: 0.142224
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 37, Batch: 0, Loss: 0.148279
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 38, Batch: 0, Loss: 0.144952
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 39, Batch: 0, Loss: 0.144193
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 40, Batch: 0, Loss: 0.143253
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 41, Batch: 0, Loss: 0.143337
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 42, Batch: 0, Loss: 0.141800
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 43, Batch: 0, Loss: 0.140906
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 44, Batch: 0, Loss: 0.140136
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 45, Batch: 0, Loss: 0.142400
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 46, Batch: 0, Loss: 0.143822
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 47, Batch: 0, Loss: 0.140962
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 48, Batch: 0, Loss: 0.140184
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 49, Batch: 0, Loss: 0.141552
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 50, Batch: 0, Loss: 0.141327
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 51, Batch: 0, Loss: 0.139969
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 52, Batch: 0, Loss: 0.142036
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 53, Batch: 0, Loss: 0.137946
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 54, Batch: 0, Loss: 0.143901
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 55, Batch: 0, Loss: 0.143881
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 56, Batch: 0, Loss: 0.143314
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 57, Batch: 0, Loss: 0.143920
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 58, Batch: 0, Loss: 0.145280
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 59, Batch: 0, Loss: 0.141781
Test Avg. Loss: 0.000013, Accuracy: 0.965000
training_time:: 123.65752339363098
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
epoch:: 32
	calling Sampler:__iter__
epoch:: 33
	calling Sampler:__iter__
epoch:: 34
	calling Sampler:__iter__
epoch:: 35
	calling Sampler:__iter__
epoch:: 36
	calling Sampler:__iter__
epoch:: 37
	calling Sampler:__iter__
epoch:: 38
	calling Sampler:__iter__
epoch:: 39
	calling Sampler:__iter__
epoch:: 40
	calling Sampler:__iter__
epoch:: 41
	calling Sampler:__iter__
epoch:: 42
	calling Sampler:__iter__
epoch:: 43
	calling Sampler:__iter__
epoch:: 44
	calling Sampler:__iter__
epoch:: 45
	calling Sampler:__iter__
epoch:: 46
	calling Sampler:__iter__
epoch:: 47
	calling Sampler:__iter__
epoch:: 48
	calling Sampler:__iter__
epoch:: 49
	calling Sampler:__iter__
epoch:: 50
	calling Sampler:__iter__
epoch:: 51
	calling Sampler:__iter__
epoch:: 52
	calling Sampler:__iter__
epoch:: 53
	calling Sampler:__iter__
epoch:: 54
	calling Sampler:__iter__
epoch:: 55
	calling Sampler:__iter__
epoch:: 56
	calling Sampler:__iter__
epoch:: 57
	calling Sampler:__iter__
epoch:: 58
	calling Sampler:__iter__
epoch:: 59
	calling Sampler:__iter__
training time is 82.3327989578247
time_baseline:: 82.46711730957031
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.3450e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1230e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4702e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8773e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.4124e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965000
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 60
delta_size:: 60
max_epoch:: 60
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4683e-08, dtype=torch.float64)
secont condition:: tensor(2.4683e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5550e-08, dtype=torch.float64)
secont condition:: tensor(6.5550e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9809e-08, dtype=torch.float64)
secont condition:: tensor(3.9809e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0366e-07, dtype=torch.float64)
secont condition:: tensor(1.0366e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0629e-07, dtype=torch.float64)
secont condition:: tensor(1.0629e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1760e-07, dtype=torch.float64)
secont condition:: tensor(1.1760e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2065e-07, dtype=torch.float64)
secont condition:: tensor(1.2065e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1525e-07, dtype=torch.float64)
secont condition:: tensor(1.1525e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2319e-07, dtype=torch.float64)
secont condition:: tensor(1.2319e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5002e-07, dtype=torch.float64)
secont condition:: tensor(1.5002e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3339e-07, dtype=torch.float64)
secont condition:: tensor(1.3339e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7345e-07, dtype=torch.float64)
secont condition:: tensor(1.7345e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5236e-07, dtype=torch.float64)
secont condition:: tensor(1.5236e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8201e-07, dtype=torch.float64)
secont condition:: tensor(1.8201e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2708e-07, dtype=torch.float64)
secont condition:: tensor(2.2708e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1332e-07, dtype=torch.float64)
secont condition:: tensor(2.1332e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2241e-07, dtype=torch.float64)
secont condition:: tensor(2.2241e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0009e-07, dtype=torch.float64)
secont condition:: tensor(2.0009e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8288e-07, dtype=torch.float64)
secont condition:: tensor(1.8288e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2314e-07, dtype=torch.float64)
secont condition:: tensor(2.2314e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0088e-07, dtype=torch.float64)
secont condition:: tensor(2.0088e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3158e-07, dtype=torch.float64)
secont condition:: tensor(2.3158e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9781e-07, dtype=torch.float64)
secont condition:: tensor(2.9781e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(2.6281e-07, dtype=torch.float64)
secont condition:: tensor(2.6281e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8433e-07, dtype=torch.float64)
secont condition:: tensor(2.8433e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4699e-07, dtype=torch.float64)
secont condition:: tensor(2.4699e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2125e-07, dtype=torch.float64)
secont condition:: tensor(3.2125e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7766e-07, dtype=torch.float64)
secont condition:: tensor(2.7766e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1845e-07, dtype=torch.float64)
secont condition:: tensor(3.1845e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8833e-07, dtype=torch.float64)
secont condition:: tensor(2.8833e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4397e-07, dtype=torch.float64)
secont condition:: tensor(2.4397e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1400e-07, dtype=torch.float64)
secont condition:: tensor(3.1400e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5073e-07, dtype=torch.float64)
secont condition:: tensor(3.5073e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9168e-07, dtype=torch.float64)
secont condition:: tensor(2.9168e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3714e-07, dtype=torch.float64)
secont condition:: tensor(3.3714e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1169e-07, dtype=torch.float64)
secont condition:: tensor(3.1169e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1821e-07, dtype=torch.float64)
secont condition:: tensor(3.1821e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2125e-07, dtype=torch.float64)
secont condition:: tensor(3.2125e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3746e-07, dtype=torch.float64)
secont condition:: tensor(4.3746e-07, dtype=torch.float64)
epoch  20
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7604e-07, dtype=torch.float64)
secont condition:: tensor(3.7604e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7148e-07, dtype=torch.float64)
secont condition:: tensor(3.7148e-07, dtype=torch.float64)
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4912e-07, dtype=torch.float64)
secont condition:: tensor(3.4912e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6633e-07, dtype=torch.float64)
secont condition:: tensor(3.6633e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2093e-07, dtype=torch.float64)
secont condition:: tensor(4.2093e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9574e-07, dtype=torch.float64)
secont condition:: tensor(3.9574e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
curr_secont condition:: tensor(2.1163e-06, dtype=torch.float64)
secont condition:: tensor(2.1163e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9565e-07, dtype=torch.float64)
secont condition:: tensor(3.9565e-07, dtype=torch.float64)
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5230e-07, dtype=torch.float64)
secont condition:: tensor(4.5230e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1507e-07, dtype=torch.float64)
secont condition:: tensor(5.1507e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0823e-07, dtype=torch.float64)
secont condition:: tensor(4.0823e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3989e-07, dtype=torch.float64)
secont condition:: tensor(5.3989e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5370e-07, dtype=torch.float64)
secont condition:: tensor(4.5370e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1699e-07, dtype=torch.float64)
secont condition:: tensor(4.1699e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(5.3067e-07, dtype=torch.float64)
secont condition:: tensor(5.3067e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7123e-07, dtype=torch.float64)
secont condition:: tensor(4.7123e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1439e-07, dtype=torch.float64)
secont condition:: tensor(4.1439e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1749e-07, dtype=torch.float64)
secont condition:: tensor(5.1749e-07, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7434e-07, dtype=torch.float64)
secont condition:: tensor(4.7434e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6855e-07, dtype=torch.float64)
secont condition:: tensor(4.6855e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2848e-07, dtype=torch.float64)
secont condition:: tensor(5.2848e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8055e-07, dtype=torch.float64)
secont condition:: tensor(5.8055e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5044e-07, dtype=torch.float64)
secont condition:: tensor(4.5044e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0267e-07, dtype=torch.float64)
secont condition:: tensor(5.0267e-07, dtype=torch.float64)
epoch  32
	calling Sampler:__iter__
curr_secont condition:: tensor(5.6641e-07, dtype=torch.float64)
secont condition:: tensor(5.6641e-07, dtype=torch.float64)
epoch  33
	calling Sampler:__iter__
epoch  34
	calling Sampler:__iter__
epoch  35
	calling Sampler:__iter__
epoch  36
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7903e-07, dtype=torch.float64)
secont condition:: tensor(5.7903e-07, dtype=torch.float64)
epoch  37
	calling Sampler:__iter__
epoch  38
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2989e-07, dtype=torch.float64)
secont condition:: tensor(6.2989e-07, dtype=torch.float64)
epoch  39
	calling Sampler:__iter__
epoch  40
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2948e-07, dtype=torch.float64)
secont condition:: tensor(9.2948e-07, dtype=torch.float64)
epoch  41
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2766e-07, dtype=torch.float64)
secont condition:: tensor(6.2766e-07, dtype=torch.float64)
epoch  42
	calling Sampler:__iter__
epoch  43
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3689e-07, dtype=torch.float64)
secont condition:: tensor(7.3689e-07, dtype=torch.float64)
epoch  44
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0577e-07, dtype=torch.float64)
secont condition:: tensor(8.0577e-07, dtype=torch.float64)
epoch  45
	calling Sampler:__iter__
epoch  46
	calling Sampler:__iter__
curr_secont condition:: tensor(7.8026e-07, dtype=torch.float64)
secont condition:: tensor(7.8026e-07, dtype=torch.float64)
epoch  47
	calling Sampler:__iter__
epoch  48
	calling Sampler:__iter__
curr_secont condition:: tensor(7.2446e-07, dtype=torch.float64)
secont condition:: tensor(7.2446e-07, dtype=torch.float64)
epoch  49
	calling Sampler:__iter__
epoch  50
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3794e-07, dtype=torch.float64)
secont condition:: tensor(7.3794e-07, dtype=torch.float64)
epoch  51
	calling Sampler:__iter__
curr_secont condition:: tensor(9.8241e-07, dtype=torch.float64)
secont condition:: tensor(9.8241e-07, dtype=torch.float64)
epoch  52
	calling Sampler:__iter__
epoch  53
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4143e-07, dtype=torch.float64)
secont condition:: tensor(8.4143e-07, dtype=torch.float64)
epoch  54
	calling Sampler:__iter__
epoch  55
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1084e-07, dtype=torch.float64)
secont condition:: tensor(9.1084e-07, dtype=torch.float64)
epoch  56
	calling Sampler:__iter__
epoch  57
	calling Sampler:__iter__
curr_secont condition:: tensor(8.5773e-07, dtype=torch.float64)
secont condition:: tensor(8.5773e-07, dtype=torch.float64)
epoch  58
	calling Sampler:__iter__
epoch  59
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0633e-06, dtype=torch.float64)
secont condition:: tensor(1.0633e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 63.633585691452026
curr_diff: 0 tensor(6.3949e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7566e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.1716e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(2.1772e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5196e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.0174e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8808e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.6849e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.1739e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2939e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1383e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5053e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7677e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2910e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965900
batch size:: 16384
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.213883
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 1, Batch: 0, Loss: 0.156169
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.156961
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.151754
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.146754
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 5, Batch: 0, Loss: 0.147504
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.148878
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 7, Batch: 0, Loss: 0.148091
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 8, Batch: 0, Loss: 0.143977
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.146080
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 10, Batch: 0, Loss: 0.144190
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.144340
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 12, Batch: 0, Loss: 0.146674
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 13, Batch: 0, Loss: 0.146287
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 14, Batch: 0, Loss: 0.142060
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.146633
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 16, Batch: 0, Loss: 0.144050
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 17, Batch: 0, Loss: 0.143504
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 18, Batch: 0, Loss: 0.143413
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 19, Batch: 0, Loss: 0.144159
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 20, Batch: 0, Loss: 0.141816
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 21, Batch: 0, Loss: 0.141067
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 22, Batch: 0, Loss: 0.144333
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 23, Batch: 0, Loss: 0.146213
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 24, Batch: 0, Loss: 0.140340
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 25, Batch: 0, Loss: 0.146422
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 26, Batch: 0, Loss: 0.143934
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 27, Batch: 0, Loss: 0.138470
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 28, Batch: 0, Loss: 0.147813
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 29, Batch: 0, Loss: 0.142929
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 30, Batch: 0, Loss: 0.142202
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 31, Batch: 0, Loss: 0.140783
Test Avg. Loss: 0.000013, Accuracy: 0.966000
training_time:: 65.85734558105469
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.26735806465149
time_baseline:: 44.34950661659241
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.7778e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.6140e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7094e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4251e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.7740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966100
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1437e-07, dtype=torch.float64)
secont condition:: tensor(3.1437e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3389e-07, dtype=torch.float64)
secont condition:: tensor(1.3389e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3232e-07, dtype=torch.float64)
secont condition:: tensor(1.3232e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7432e-08, dtype=torch.float64)
secont condition:: tensor(7.7432e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6910e-08, dtype=torch.float64)
secont condition:: tensor(4.6910e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1604e-07, dtype=torch.float64)
secont condition:: tensor(1.1604e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8201e-07, dtype=torch.float64)
secont condition:: tensor(1.8201e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8958e-06, dtype=torch.float64)
secont condition:: tensor(2.8958e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9196e-07, dtype=torch.float64)
secont condition:: tensor(1.9196e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8922e-07, dtype=torch.float64)
secont condition:: tensor(1.8922e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1463e-07, dtype=torch.float64)
secont condition:: tensor(1.1463e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8032e-07, dtype=torch.float64)
secont condition:: tensor(2.8032e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4053e-07, dtype=torch.float64)
secont condition:: tensor(4.4053e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5541e-07, dtype=torch.float64)
secont condition:: tensor(2.5541e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7954e-07, dtype=torch.float64)
secont condition:: tensor(1.7954e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4080e-07, dtype=torch.float64)
secont condition:: tensor(1.4080e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4558e-07, dtype=torch.float64)
secont condition:: tensor(1.4558e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0403e-07, dtype=torch.float64)
secont condition:: tensor(1.0403e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8451e-07, dtype=torch.float64)
secont condition:: tensor(2.8451e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2496e-07, dtype=torch.float64)
secont condition:: tensor(2.2496e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5552e-07, dtype=torch.float64)
secont condition:: tensor(2.5552e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2029e-07, dtype=torch.float64)
secont condition:: tensor(2.2029e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9235e-07, dtype=torch.float64)
secont condition:: tensor(1.9235e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2896e-07, dtype=torch.float64)
secont condition:: tensor(3.2896e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6288e-07, dtype=torch.float64)
secont condition:: tensor(3.6288e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1378e-07, dtype=torch.float64)
secont condition:: tensor(2.1378e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7375e-07, dtype=torch.float64)
secont condition:: tensor(2.7375e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7391e-07, dtype=torch.float64)
secont condition:: tensor(3.7391e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5952e-07, dtype=torch.float64)
secont condition:: tensor(5.5952e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0597e-06, dtype=torch.float64)
secont condition:: tensor(2.0597e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4797e-07, dtype=torch.float64)
secont condition:: tensor(3.4797e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9350e-07, dtype=torch.float64)
secont condition:: tensor(2.9350e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8711e-07, dtype=torch.float64)
secont condition:: tensor(3.8711e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1457e-07, dtype=torch.float64)
secont condition:: tensor(3.1457e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7097e-07, dtype=torch.float64)
secont condition:: tensor(3.7097e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6761e-07, dtype=torch.float64)
secont condition:: tensor(3.6761e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1633e-07, dtype=torch.float64)
secont condition:: tensor(5.1633e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7065e-07, dtype=torch.float64)
secont condition:: tensor(3.7065e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6173e-07, dtype=torch.float64)
secont condition:: tensor(3.6173e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4918e-07, dtype=torch.float64)
secont condition:: tensor(3.4918e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4243e-07, dtype=torch.float64)
secont condition:: tensor(4.4243e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3275e-07, dtype=torch.float64)
secont condition:: tensor(3.3275e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9029e-07, dtype=torch.float64)
secont condition:: tensor(4.9029e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8605e-06, dtype=torch.float64)
secont condition:: tensor(1.8605e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4477e-07, dtype=torch.float64)
secont condition:: tensor(3.4477e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2217e-07, dtype=torch.float64)
secont condition:: tensor(5.2217e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7421e-07, dtype=torch.float64)
secont condition:: tensor(5.7421e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1803e-07, dtype=torch.float64)
secont condition:: tensor(5.1803e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2256e-07, dtype=torch.float64)
secont condition:: tensor(5.2256e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7768e-07, dtype=torch.float64)
secont condition:: tensor(3.7768e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0085e-07, dtype=torch.float64)
secont condition:: tensor(4.0085e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4534e-07, dtype=torch.float64)
secont condition:: tensor(5.4534e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5439e-07, dtype=torch.float64)
secont condition:: tensor(5.5439e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2441e-07, dtype=torch.float64)
secont condition:: tensor(6.2441e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1561e-07, dtype=torch.float64)
secont condition:: tensor(5.1561e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5678e-07, dtype=torch.float64)
secont condition:: tensor(5.5678e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8629e-07, dtype=torch.float64)
secont condition:: tensor(3.8629e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4029e-07, dtype=torch.float64)
secont condition:: tensor(5.4029e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0189e-07, dtype=torch.float64)
secont condition:: tensor(5.0189e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9200e-07, dtype=torch.float64)
secont condition:: tensor(7.9200e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0068e-07, dtype=torch.float64)
secont condition:: tensor(5.0068e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9313e-07, dtype=torch.float64)
secont condition:: tensor(4.9313e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1318e-07, dtype=torch.float64)
secont condition:: tensor(7.1318e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.2038e-07, dtype=torch.float64)
secont condition:: tensor(6.2038e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1531e-07, dtype=torch.float64)
secont condition:: tensor(8.1531e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0412e-06, dtype=torch.float64)
secont condition:: tensor(1.0412e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 42.084911823272705
curr_diff: 0 tensor(1.0376e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.4382e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.8595e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3100e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5510e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(8.5292e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9697e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.5717e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1593e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.6793e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4418e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7802e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.5183e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9875e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965600
repetition 2
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.212333
Test Avg. Loss: 0.000014, Accuracy: 0.962100
Train - Epoch 1, Batch: 0, Loss: 0.160462
Test Avg. Loss: 0.000014, Accuracy: 0.963200
Train - Epoch 2, Batch: 0, Loss: 0.155720
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.150226
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.146034
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.150274
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 6, Batch: 0, Loss: 0.142071
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 7, Batch: 0, Loss: 0.144173
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 8, Batch: 0, Loss: 0.145608
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 9, Batch: 0, Loss: 0.147607
Test Avg. Loss: 0.000013, Accuracy: 0.963400
Train - Epoch 10, Batch: 0, Loss: 0.142905
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 11, Batch: 0, Loss: 0.138801
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 12, Batch: 0, Loss: 0.142532
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.142465
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.143367
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 15, Batch: 0, Loss: 0.146920
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 16, Batch: 0, Loss: 0.143411
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 17, Batch: 0, Loss: 0.139921
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 18, Batch: 0, Loss: 0.139587
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 19, Batch: 0, Loss: 0.147174
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 20, Batch: 0, Loss: 0.142320
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 21, Batch: 0, Loss: 0.139068
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.140021
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 23, Batch: 0, Loss: 0.141903
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 24, Batch: 0, Loss: 0.144137
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.137099
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 26, Batch: 0, Loss: 0.142111
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 27, Batch: 0, Loss: 0.141221
Test Avg. Loss: 0.000013, Accuracy: 0.966100
Train - Epoch 28, Batch: 0, Loss: 0.141600
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 29, Batch: 0, Loss: 0.141860
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 30, Batch: 0, Loss: 0.141131
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 31, Batch: 0, Loss: 0.144757
Test Avg. Loss: 0.000013, Accuracy: 0.965600
training_time:: 65.98898410797119
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.32635736465454
time_baseline:: 44.40198040008545
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.6982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4891e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.4816e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0560e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3780e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9147e-08, dtype=torch.float64)
secont condition:: tensor(2.9147e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0334e-07, dtype=torch.float64)
secont condition:: tensor(1.0334e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5905e-08, dtype=torch.float64)
secont condition:: tensor(3.5905e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9623e-07, dtype=torch.float64)
secont condition:: tensor(1.9623e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2281e-08, dtype=torch.float64)
secont condition:: tensor(9.2281e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.4919e-08, dtype=torch.float64)
secont condition:: tensor(6.4919e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7350e-07, dtype=torch.float64)
secont condition:: tensor(2.7350e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5104e-07, dtype=torch.float64)
secont condition:: tensor(1.5104e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0768e-07, dtype=torch.float64)
secont condition:: tensor(1.0768e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0741e-07, dtype=torch.float64)
secont condition:: tensor(1.0741e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6193e-07, dtype=torch.float64)
secont condition:: tensor(1.6193e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2772e-07, dtype=torch.float64)
secont condition:: tensor(2.2772e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8013e-07, dtype=torch.float64)
secont condition:: tensor(2.8013e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4594e-07, dtype=torch.float64)
secont condition:: tensor(1.4594e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3374e-07, dtype=torch.float64)
secont condition:: tensor(1.3374e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9471e-07, dtype=torch.float64)
secont condition:: tensor(3.9471e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3877e-07, dtype=torch.float64)
secont condition:: tensor(4.3877e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5968e-07, dtype=torch.float64)
secont condition:: tensor(2.5968e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8366e-07, dtype=torch.float64)
secont condition:: tensor(3.8366e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7647e-06, dtype=torch.float64)
secont condition:: tensor(4.7647e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2306e-07, dtype=torch.float64)
secont condition:: tensor(3.2306e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5504e-07, dtype=torch.float64)
secont condition:: tensor(4.5504e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1227e-07, dtype=torch.float64)
secont condition:: tensor(3.1227e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4147e-07, dtype=torch.float64)
secont condition:: tensor(2.4147e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5865e-07, dtype=torch.float64)
secont condition:: tensor(1.5865e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0362e-07, dtype=torch.float64)
secont condition:: tensor(2.0362e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4110e-07, dtype=torch.float64)
secont condition:: tensor(3.4110e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1491e-07, dtype=torch.float64)
secont condition:: tensor(4.1491e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7337e-07, dtype=torch.float64)
secont condition:: tensor(5.7337e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9066e-07, dtype=torch.float64)
secont condition:: tensor(3.9066e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7098e-07, dtype=torch.float64)
secont condition:: tensor(2.7098e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.6941e-07, dtype=torch.float64)
secont condition:: tensor(3.6941e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9994e-07, dtype=torch.float64)
secont condition:: tensor(2.9994e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7737e-07, dtype=torch.float64)
secont condition:: tensor(4.7737e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6680e-07, dtype=torch.float64)
secont condition:: tensor(3.6680e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(4.2138e-07, dtype=torch.float64)
secont condition:: tensor(4.2138e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6104e-07, dtype=torch.float64)
secont condition:: tensor(2.6104e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8012e-07, dtype=torch.float64)
secont condition:: tensor(4.8012e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2147e-07, dtype=torch.float64)
secont condition:: tensor(4.2147e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1968e-07, dtype=torch.float64)
secont condition:: tensor(3.1968e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8647e-07, dtype=torch.float64)
secont condition:: tensor(2.8647e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2727e-07, dtype=torch.float64)
secont condition:: tensor(3.2727e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7818e-07, dtype=torch.float64)
secont condition:: tensor(3.7818e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4932e-07, dtype=torch.float64)
secont condition:: tensor(4.4932e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7968e-07, dtype=torch.float64)
secont condition:: tensor(6.7968e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5480e-07, dtype=torch.float64)
secont condition:: tensor(5.5480e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0406e-06, dtype=torch.float64)
secont condition:: tensor(2.0406e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9128e-07, dtype=torch.float64)
secont condition:: tensor(4.9128e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2568e-07, dtype=torch.float64)
secont condition:: tensor(4.2568e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9920e-07, dtype=torch.float64)
secont condition:: tensor(5.9920e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0061e-07, dtype=torch.float64)
secont condition:: tensor(5.0061e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7710e-07, dtype=torch.float64)
secont condition:: tensor(4.7710e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6695e-07, dtype=torch.float64)
secont condition:: tensor(4.6695e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7887e-07, dtype=torch.float64)
secont condition:: tensor(5.7887e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8051e-07, dtype=torch.float64)
secont condition:: tensor(4.8051e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.8664e-07, dtype=torch.float64)
secont condition:: tensor(4.8664e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6727e-07, dtype=torch.float64)
secont condition:: tensor(4.6727e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5621e-07, dtype=torch.float64)
secont condition:: tensor(4.5621e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8838e-07, dtype=torch.float64)
secont condition:: tensor(5.8838e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1407e-07, dtype=torch.float64)
secont condition:: tensor(5.1407e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0814e-07, dtype=torch.float64)
secont condition:: tensor(6.0814e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8113e-07, dtype=torch.float64)
secont condition:: tensor(5.8113e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8328e-07, dtype=torch.float64)
secont condition:: tensor(4.8328e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(6.9415e-07, dtype=torch.float64)
secont condition:: tensor(6.9415e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.5278e-07, dtype=torch.float64)
secont condition:: tensor(6.5278e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(9.3740e-07, dtype=torch.float64)
secont condition:: tensor(9.3740e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6939e-07, dtype=torch.float64)
secont condition:: tensor(9.6939e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2351e-07, dtype=torch.float64)
secont condition:: tensor(9.2351e-07, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1783e-06, dtype=torch.float64)
secont condition:: tensor(1.1783e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 39.50840973854065
curr_diff: 0 tensor(6.5845e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4866e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3090e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7648e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.7447e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0694e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.7719e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0789e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7053e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5049e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5366e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.1092e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2747e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966200
repetition 3
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.214444
Test Avg. Loss: 0.000014, Accuracy: 0.962400
Train - Epoch 1, Batch: 0, Loss: 0.162417
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.155610
Test Avg. Loss: 0.000014, Accuracy: 0.963900
Train - Epoch 3, Batch: 0, Loss: 0.155828
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.149202
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.148871
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 6, Batch: 0, Loss: 0.146289
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 7, Batch: 0, Loss: 0.149986
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 8, Batch: 0, Loss: 0.146037
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.146087
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 10, Batch: 0, Loss: 0.148055
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 11, Batch: 0, Loss: 0.138406
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 12, Batch: 0, Loss: 0.145074
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 13, Batch: 0, Loss: 0.142765
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 14, Batch: 0, Loss: 0.142071
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 15, Batch: 0, Loss: 0.143286
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 16, Batch: 0, Loss: 0.145451
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 17, Batch: 0, Loss: 0.144701
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 18, Batch: 0, Loss: 0.145012
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 19, Batch: 0, Loss: 0.139666
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.146135
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 21, Batch: 0, Loss: 0.136711
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 22, Batch: 0, Loss: 0.143221
Test Avg. Loss: 0.000013, Accuracy: 0.965500
Train - Epoch 23, Batch: 0, Loss: 0.141085
Test Avg. Loss: 0.000013, Accuracy: 0.965900
Train - Epoch 24, Batch: 0, Loss: 0.140741
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 25, Batch: 0, Loss: 0.141315
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 26, Batch: 0, Loss: 0.140897
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 27, Batch: 0, Loss: 0.143850
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 28, Batch: 0, Loss: 0.142556
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 29, Batch: 0, Loss: 0.143169
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 30, Batch: 0, Loss: 0.141478
Test Avg. Loss: 0.000013, Accuracy: 0.966100
Train - Epoch 31, Batch: 0, Loss: 0.145766
Test Avg. Loss: 0.000013, Accuracy: 0.965600
training_time:: 65.8720600605011
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.26473665237427
time_baseline:: 44.33771371841431
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2408e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1209e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5842e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9815e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3628e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6829e-08, dtype=torch.float64)
secont condition:: tensor(6.6829e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.6226e-07, dtype=torch.float64)
secont condition:: tensor(1.6226e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6189e-08, dtype=torch.float64)
secont condition:: tensor(7.6189e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4483e-07, dtype=torch.float64)
secont condition:: tensor(1.4483e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0249e-08, dtype=torch.float64)
secont condition:: tensor(9.0249e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0835e-08, dtype=torch.float64)
secont condition:: tensor(5.0835e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.7322e-07, dtype=torch.float64)
secont condition:: tensor(1.7322e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7691e-07, dtype=torch.float64)
secont condition:: tensor(1.7691e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6800e-07, dtype=torch.float64)
secont condition:: tensor(2.6800e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0070e-07, dtype=torch.float64)
secont condition:: tensor(2.0070e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2088e-07, dtype=torch.float64)
secont condition:: tensor(2.2088e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4303e-07, dtype=torch.float64)
secont condition:: tensor(1.4303e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4017e-07, dtype=torch.float64)
secont condition:: tensor(1.4017e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1886e-07, dtype=torch.float64)
secont condition:: tensor(1.1886e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3416e-07, dtype=torch.float64)
secont condition:: tensor(1.3416e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8114e-07, dtype=torch.float64)
secont condition:: tensor(3.8114e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8647e-07, dtype=torch.float64)
secont condition:: tensor(2.8647e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4240e-07, dtype=torch.float64)
secont condition:: tensor(2.4240e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8998e-07, dtype=torch.float64)
secont condition:: tensor(2.8998e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9948e-07, dtype=torch.float64)
secont condition:: tensor(1.9948e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4542e-07, dtype=torch.float64)
secont condition:: tensor(1.4542e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8778e-07, dtype=torch.float64)
secont condition:: tensor(2.8778e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4242e-07, dtype=torch.float64)
secont condition:: tensor(2.4242e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5828e-07, dtype=torch.float64)
secont condition:: tensor(2.5828e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4448e-07, dtype=torch.float64)
secont condition:: tensor(3.4448e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8990e-07, dtype=torch.float64)
secont condition:: tensor(2.8990e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6912e-07, dtype=torch.float64)
secont condition:: tensor(2.6912e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(3.7746e-07, dtype=torch.float64)
secont condition:: tensor(3.7746e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0737e-07, dtype=torch.float64)
secont condition:: tensor(5.0737e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4940e-07, dtype=torch.float64)
secont condition:: tensor(3.4940e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3666e-07, dtype=torch.float64)
secont condition:: tensor(3.3666e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1490e-07, dtype=torch.float64)
secont condition:: tensor(3.1490e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2464e-07, dtype=torch.float64)
secont condition:: tensor(4.2464e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0650e-07, dtype=torch.float64)
secont condition:: tensor(4.0650e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1042e-07, dtype=torch.float64)
secont condition:: tensor(3.1042e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3492e-07, dtype=torch.float64)
secont condition:: tensor(2.3492e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6462e-07, dtype=torch.float64)
secont condition:: tensor(3.6462e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4241e-07, dtype=torch.float64)
secont condition:: tensor(4.4241e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7209e-07, dtype=torch.float64)
secont condition:: tensor(3.7209e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8249e-07, dtype=torch.float64)
secont condition:: tensor(3.8249e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6438e-07, dtype=torch.float64)
secont condition:: tensor(2.6438e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9561e-07, dtype=torch.float64)
secont condition:: tensor(4.9561e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4667e-07, dtype=torch.float64)
secont condition:: tensor(3.4667e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1760e-07, dtype=torch.float64)
secont condition:: tensor(6.1760e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5190e-07, dtype=torch.float64)
secont condition:: tensor(6.5190e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3534e-07, dtype=torch.float64)
secont condition:: tensor(4.3534e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7206e-07, dtype=torch.float64)
secont condition:: tensor(3.7206e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(4.6803e-07, dtype=torch.float64)
secont condition:: tensor(4.6803e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4141e-07, dtype=torch.float64)
secont condition:: tensor(3.4141e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1124e-07, dtype=torch.float64)
secont condition:: tensor(5.1124e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5967e-07, dtype=torch.float64)
secont condition:: tensor(4.5967e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1696e-07, dtype=torch.float64)
secont condition:: tensor(5.1696e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5457e-07, dtype=torch.float64)
secont condition:: tensor(5.5457e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8160e-07, dtype=torch.float64)
secont condition:: tensor(4.8160e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0272e-07, dtype=torch.float64)
secont condition:: tensor(4.0272e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(5.0504e-07, dtype=torch.float64)
secont condition:: tensor(5.0504e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7867e-07, dtype=torch.float64)
secont condition:: tensor(5.7867e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5825e-07, dtype=torch.float64)
secont condition:: tensor(5.5825e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8570e-07, dtype=torch.float64)
secont condition:: tensor(3.8570e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5710e-07, dtype=torch.float64)
secont condition:: tensor(5.5710e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3445e-07, dtype=torch.float64)
secont condition:: tensor(4.3445e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2857e-07, dtype=torch.float64)
secont condition:: tensor(5.2857e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6498e-07, dtype=torch.float64)
secont condition:: tensor(7.6498e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8017e-07, dtype=torch.float64)
secont condition:: tensor(5.8017e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(6.4184e-07, dtype=torch.float64)
secont condition:: tensor(6.4184e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(8.4567e-07, dtype=torch.float64)
secont condition:: tensor(8.4567e-07, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2572e-07, dtype=torch.float64)
secont condition:: tensor(9.2572e-07, dtype=torch.float64)
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0736e-06, dtype=torch.float64)
secont condition:: tensor(1.0736e-06, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 41.95274019241333
curr_diff: 0 tensor(5.9150e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5219e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.7687e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.4533e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.0261e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.1372e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0382e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.0338e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.1450e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2682e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.2399e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5695e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9138e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3660e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.217893
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 1, Batch: 0, Loss: 0.156400
Test Avg. Loss: 0.000014, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.158814
Test Avg. Loss: 0.000014, Accuracy: 0.963800
Train - Epoch 3, Batch: 0, Loss: 0.152478
Test Avg. Loss: 0.000013, Accuracy: 0.964300
Train - Epoch 4, Batch: 0, Loss: 0.150389
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.149035
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 6, Batch: 0, Loss: 0.146048
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 7, Batch: 0, Loss: 0.141840
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 8, Batch: 0, Loss: 0.145934
Test Avg. Loss: 0.000013, Accuracy: 0.963600
Train - Epoch 9, Batch: 0, Loss: 0.143981
Test Avg. Loss: 0.000013, Accuracy: 0.963300
Train - Epoch 10, Batch: 0, Loss: 0.146639
Test Avg. Loss: 0.000013, Accuracy: 0.963100
Train - Epoch 11, Batch: 0, Loss: 0.142861
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 12, Batch: 0, Loss: 0.144590
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 13, Batch: 0, Loss: 0.140895
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 14, Batch: 0, Loss: 0.145349
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 15, Batch: 0, Loss: 0.144452
Test Avg. Loss: 0.000013, Accuracy: 0.964400
Train - Epoch 16, Batch: 0, Loss: 0.146452
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 17, Batch: 0, Loss: 0.139478
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 18, Batch: 0, Loss: 0.143777
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 19, Batch: 0, Loss: 0.140583
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 20, Batch: 0, Loss: 0.145946
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 21, Batch: 0, Loss: 0.141876
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 22, Batch: 0, Loss: 0.142776
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 23, Batch: 0, Loss: 0.143327
Test Avg. Loss: 0.000013, Accuracy: 0.965400
Train - Epoch 24, Batch: 0, Loss: 0.137116
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 25, Batch: 0, Loss: 0.149006
Test Avg. Loss: 0.000013, Accuracy: 0.965700
Train - Epoch 26, Batch: 0, Loss: 0.147387
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 27, Batch: 0, Loss: 0.145880
Test Avg. Loss: 0.000013, Accuracy: 0.964600
Train - Epoch 28, Batch: 0, Loss: 0.142430
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 29, Batch: 0, Loss: 0.141873
Test Avg. Loss: 0.000013, Accuracy: 0.966000
Train - Epoch 30, Batch: 0, Loss: 0.140859
Test Avg. Loss: 0.000013, Accuracy: 0.965600
Train - Epoch 31, Batch: 0, Loss: 0.140347
Test Avg. Loss: 0.000013, Accuracy: 0.965700
training_time:: 66.05023694038391
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.34380912780762
time_baseline:: 44.41464352607727
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3709e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3712e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8229e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.2733e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.1317e-08, dtype=torch.float64)
secont condition:: tensor(9.1317e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8865e-08, dtype=torch.float64)
secont condition:: tensor(1.8865e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0003e-07, dtype=torch.float64)
secont condition:: tensor(1.0003e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(9.5216e-08, dtype=torch.float64)
secont condition:: tensor(9.5216e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2425e-08, dtype=torch.float64)
secont condition:: tensor(5.2425e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0437e-08, dtype=torch.float64)
secont condition:: tensor(8.0437e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1684e-07, dtype=torch.float64)
secont condition:: tensor(1.1684e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9122e-07, dtype=torch.float64)
secont condition:: tensor(1.9122e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3167e-07, dtype=torch.float64)
secont condition:: tensor(2.3167e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7891e-07, dtype=torch.float64)
secont condition:: tensor(1.7891e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4291e-07, dtype=torch.float64)
secont condition:: tensor(1.4291e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4539e-06, dtype=torch.float64)
secont condition:: tensor(2.4539e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8730e-07, dtype=torch.float64)
secont condition:: tensor(1.8730e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0525e-07, dtype=torch.float64)
secont condition:: tensor(1.0525e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6887e-07, dtype=torch.float64)
secont condition:: tensor(2.6887e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2977e-07, dtype=torch.float64)
secont condition:: tensor(2.2977e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2490e-07, dtype=torch.float64)
secont condition:: tensor(1.2490e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2068e-07, dtype=torch.float64)
secont condition:: tensor(2.2068e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3062e-07, dtype=torch.float64)
secont condition:: tensor(3.3062e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3177e-07, dtype=torch.float64)
secont condition:: tensor(2.3177e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2330e-07, dtype=torch.float64)
secont condition:: tensor(4.2330e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8805e-06, dtype=torch.float64)
secont condition:: tensor(1.8805e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8436e-07, dtype=torch.float64)
secont condition:: tensor(2.8436e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.9661e-07, dtype=torch.float64)
secont condition:: tensor(2.9661e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5981e-07, dtype=torch.float64)
secont condition:: tensor(4.5981e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2718e-07, dtype=torch.float64)
secont condition:: tensor(3.2718e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7675e-07, dtype=torch.float64)
secont condition:: tensor(2.7675e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0355e-07, dtype=torch.float64)
secont condition:: tensor(2.0355e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4453e-07, dtype=torch.float64)
secont condition:: tensor(2.4453e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0216e-07, dtype=torch.float64)
secont condition:: tensor(4.0216e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6574e-06, dtype=torch.float64)
secont condition:: tensor(1.6574e-06, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7251e-07, dtype=torch.float64)
secont condition:: tensor(4.7251e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7132e-07, dtype=torch.float64)
secont condition:: tensor(3.7132e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5437e-07, dtype=torch.float64)
secont condition:: tensor(3.5437e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3476e-07, dtype=torch.float64)
secont condition:: tensor(4.3476e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(2.4593e-07, dtype=torch.float64)
secont condition:: tensor(2.4593e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7684e-07, dtype=torch.float64)
secont condition:: tensor(2.7684e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5519e-07, dtype=torch.float64)
secont condition:: tensor(2.5519e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7069e-07, dtype=torch.float64)
secont condition:: tensor(3.7069e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9399e-07, dtype=torch.float64)
secont condition:: tensor(4.9399e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5572e-07, dtype=torch.float64)
secont condition:: tensor(7.5572e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4833e-07, dtype=torch.float64)
secont condition:: tensor(4.4833e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5232e-07, dtype=torch.float64)
secont condition:: tensor(5.5232e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.2329e-07, dtype=torch.float64)
secont condition:: tensor(3.2329e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2944e-07, dtype=torch.float64)
secont condition:: tensor(6.2944e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4427e-07, dtype=torch.float64)
secont condition:: tensor(3.4427e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5962e-06, dtype=torch.float64)
secont condition:: tensor(1.5962e-06, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2485e-07, dtype=torch.float64)
secont condition:: tensor(5.2485e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3833e-07, dtype=torch.float64)
secont condition:: tensor(5.3833e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7738e-07, dtype=torch.float64)
secont condition:: tensor(3.7738e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7577e-07, dtype=torch.float64)
secont condition:: tensor(3.7577e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.0470e-07, dtype=torch.float64)
secont condition:: tensor(6.0470e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0979e-07, dtype=torch.float64)
secont condition:: tensor(7.0979e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4877e-07, dtype=torch.float64)
secont condition:: tensor(7.4877e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7447e-07, dtype=torch.float64)
secont condition:: tensor(4.7447e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(3.8590e-07, dtype=torch.float64)
secont condition:: tensor(3.8590e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9467e-07, dtype=torch.float64)
secont condition:: tensor(3.9467e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8201e-07, dtype=torch.float64)
secont condition:: tensor(3.8201e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2064e-07, dtype=torch.float64)
secont condition:: tensor(6.2064e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4292e-07, dtype=torch.float64)
secont condition:: tensor(5.4292e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7192e-07, dtype=torch.float64)
secont condition:: tensor(5.7192e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8826e-07, dtype=torch.float64)
secont condition:: tensor(5.8826e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6686e-07, dtype=torch.float64)
secont condition:: tensor(5.6686e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(5.8726e-07, dtype=torch.float64)
secont condition:: tensor(5.8726e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4195e-07, dtype=torch.float64)
secont condition:: tensor(7.4195e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
epoch  18
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4143e-07, dtype=torch.float64)
secont condition:: tensor(4.4143e-07, dtype=torch.float64)
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7006e-07, dtype=torch.float64)
secont condition:: tensor(5.7006e-07, dtype=torch.float64)
epoch  22
	calling Sampler:__iter__
curr_secont condition:: tensor(8.0924e-07, dtype=torch.float64)
secont condition:: tensor(8.0924e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9509e-07, dtype=torch.float64)
secont condition:: tensor(6.9509e-07, dtype=torch.float64)
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
epoch  25
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1618e-06, dtype=torch.float64)
secont condition:: tensor(1.1618e-06, dtype=torch.float64)
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
epoch  28
	calling Sampler:__iter__
epoch  29
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0733e-06, dtype=torch.float64)
secont condition:: tensor(1.0733e-06, dtype=torch.float64)
epoch  30
	calling Sampler:__iter__
curr_secont condition:: tensor(7.3543e-07, dtype=torch.float64)
secont condition:: tensor(7.3543e-07, dtype=torch.float64)
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2356e-06, dtype=torch.float64)
secont condition:: tensor(1.2356e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 38.75006890296936
curr_diff: 0 tensor(8.9711e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.3797e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(8.6567e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3706e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7923e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(9.3392e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.4061e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5432e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(1.9651e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.5617e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9433e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3868e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0088e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.1918e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965400
repetition 5
python3 benchmark_exp_more_complex.py 0.001 16384 32 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.215361
Test Avg. Loss: 0.000014, Accuracy: 0.961900
Train - Epoch 1, Batch: 0, Loss: 0.157905
Test Avg. Loss: 0.000014, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.151991
Test Avg. Loss: 0.000014, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.153015
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 4, Batch: 0, Loss: 0.149914
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.144827
Test Avg. Loss: 0.000013, Accuracy: 0.963700
Train - Epoch 6, Batch: 0, Loss: 0.146186
Test Avg. Loss: 0.000013, Accuracy: 0.963900
Train - Epoch 7, Batch: 0, Loss: 0.147455
Test Avg. Loss: 0.000013, Accuracy: 0.963500
Train - Epoch 8, Batch: 0, Loss: 0.140018
Test Avg. Loss: 0.000013, Accuracy: 0.964100
Train - Epoch 9, Batch: 0, Loss: 0.146713
Test Avg. Loss: 0.000013, Accuracy: 0.964000
Train - Epoch 10, Batch: 0, Loss: 0.146829
Test Avg. Loss: 0.000013, Accuracy: 0.963800
Train - Epoch 11, Batch: 0, Loss: 0.144620
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 12, Batch: 0, Loss: 0.144210
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 13, Batch: 0, Loss: 0.142594
Test Avg. Loss: 0.000013, Accuracy: 0.964200
Train - Epoch 14, Batch: 0, Loss: 0.139827
Test Avg. Loss: 0.000013, Accuracy: 0.964500
Train - Epoch 15, Batch: 0, Loss: 0.141997
Test Avg. Loss: 0.000013, Accuracy: 0.964700
Train - Epoch 16, Batch: 0, Loss: 0.137718
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 17, Batch: 0, Loss: 0.148639
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 18, Batch: 0, Loss: 0.143248
Test Avg. Loss: 0.000013, Accuracy: 0.965100
Train - Epoch 19, Batch: 0, Loss: 0.137957
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 20, Batch: 0, Loss: 0.139813
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 21, Batch: 0, Loss: 0.144630
Test Avg. Loss: 0.000013, Accuracy: 0.965000
Train - Epoch 22, Batch: 0, Loss: 0.141650
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 23, Batch: 0, Loss: 0.139342
Test Avg. Loss: 0.000013, Accuracy: 0.965300
Train - Epoch 24, Batch: 0, Loss: 0.142511
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 25, Batch: 0, Loss: 0.139201
Test Avg. Loss: 0.000013, Accuracy: 0.964900
Train - Epoch 26, Batch: 0, Loss: 0.143206
Test Avg. Loss: 0.000013, Accuracy: 0.966200
Train - Epoch 27, Batch: 0, Loss: 0.148865
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 28, Batch: 0, Loss: 0.140253
Test Avg. Loss: 0.000013, Accuracy: 0.965800
Train - Epoch 29, Batch: 0, Loss: 0.145660
Test Avg. Loss: 0.000013, Accuracy: 0.964800
Train - Epoch 30, Batch: 0, Loss: 0.141020
Test Avg. Loss: 0.000013, Accuracy: 0.965200
Train - Epoch 31, Batch: 0, Loss: 0.141039
Test Avg. Loss: 0.000013, Accuracy: 0.965100
training_time:: 65.91117286682129
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
epoch:: 8
	calling Sampler:__iter__
epoch:: 9
	calling Sampler:__iter__
epoch:: 10
	calling Sampler:__iter__
epoch:: 11
	calling Sampler:__iter__
epoch:: 12
	calling Sampler:__iter__
epoch:: 13
	calling Sampler:__iter__
epoch:: 14
	calling Sampler:__iter__
epoch:: 15
	calling Sampler:__iter__
epoch:: 16
	calling Sampler:__iter__
epoch:: 17
	calling Sampler:__iter__
epoch:: 18
	calling Sampler:__iter__
epoch:: 19
	calling Sampler:__iter__
epoch:: 20
	calling Sampler:__iter__
epoch:: 21
	calling Sampler:__iter__
epoch:: 22
	calling Sampler:__iter__
epoch:: 23
	calling Sampler:__iter__
epoch:: 24
	calling Sampler:__iter__
epoch:: 25
	calling Sampler:__iter__
epoch:: 26
	calling Sampler:__iter__
epoch:: 27
	calling Sampler:__iter__
epoch:: 28
	calling Sampler:__iter__
epoch:: 29
	calling Sampler:__iter__
epoch:: 30
	calling Sampler:__iter__
epoch:: 31
	calling Sampler:__iter__
training time is 44.25651788711548
time_baseline:: 44.330209732055664
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(3.6238e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3693e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6018e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0341e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3719e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 32
delta_size:: 60
max_epoch:: 32
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5297e-07, dtype=torch.float64)
secont condition:: tensor(1.5297e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2599e-07, dtype=torch.float64)
secont condition:: tensor(2.2599e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2476e-07, dtype=torch.float64)
secont condition:: tensor(1.2476e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9584e-08, dtype=torch.float64)
secont condition:: tensor(4.9584e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9855e-08, dtype=torch.float64)
secont condition:: tensor(3.9855e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.5103e-08, dtype=torch.float64)
secont condition:: tensor(9.5103e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.6791e-08, dtype=torch.float64)
secont condition:: tensor(6.6791e-08, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(1.9535e-07, dtype=torch.float64)
secont condition:: tensor(1.9535e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1403e-07, dtype=torch.float64)
secont condition:: tensor(2.1403e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0536e-07, dtype=torch.float64)
secont condition:: tensor(2.0536e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5968e-07, dtype=torch.float64)
secont condition:: tensor(1.5968e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(2.5609e-06, dtype=torch.float64)
secont condition:: tensor(2.5609e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0996e-07, dtype=torch.float64)
secont condition:: tensor(2.0996e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0081e-07, dtype=torch.float64)
secont condition:: tensor(1.0081e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7544e-07, dtype=torch.float64)
secont condition:: tensor(2.7544e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.8296e-07, dtype=torch.float64)
secont condition:: tensor(1.8296e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2072e-07, dtype=torch.float64)
secont condition:: tensor(1.2072e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9913e-07, dtype=torch.float64)
secont condition:: tensor(1.9913e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9793e-07, dtype=torch.float64)
secont condition:: tensor(2.9793e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(2.2608e-07, dtype=torch.float64)
secont condition:: tensor(2.2608e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9506e-07, dtype=torch.float64)
secont condition:: tensor(4.9506e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8569e-06, dtype=torch.float64)
secont condition:: tensor(1.8569e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2235e-07, dtype=torch.float64)
secont condition:: tensor(2.2235e-07, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8991e-07, dtype=torch.float64)
secont condition:: tensor(2.8991e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9169e-07, dtype=torch.float64)
secont condition:: tensor(4.9169e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5910e-07, dtype=torch.float64)
secont condition:: tensor(2.5910e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7773e-07, dtype=torch.float64)
secont condition:: tensor(2.7773e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3516e-07, dtype=torch.float64)
secont condition:: tensor(2.3516e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5178e-07, dtype=torch.float64)
secont condition:: tensor(4.5178e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0757e-07, dtype=torch.float64)
secont condition:: tensor(3.0757e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1912e-07, dtype=torch.float64)
secont condition:: tensor(2.1912e-07, dtype=torch.float64)
epoch  8
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0324e-07, dtype=torch.float64)
secont condition:: tensor(3.0324e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4185e-07, dtype=torch.float64)
secont condition:: tensor(3.4185e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2466e-07, dtype=torch.float64)
secont condition:: tensor(3.2466e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2995e-07, dtype=torch.float64)
secont condition:: tensor(4.2995e-07, dtype=torch.float64)
epoch  9
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4289e-07, dtype=torch.float64)
secont condition:: tensor(3.4289e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0983e-07, dtype=torch.float64)
secont condition:: tensor(3.0983e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1167e-07, dtype=torch.float64)
secont condition:: tensor(3.1167e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5046e-07, dtype=torch.float64)
secont condition:: tensor(5.5046e-07, dtype=torch.float64)
epoch  10
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4033e-07, dtype=torch.float64)
secont condition:: tensor(4.4033e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3121e-07, dtype=torch.float64)
secont condition:: tensor(5.3121e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6969e-07, dtype=torch.float64)
secont condition:: tensor(3.6969e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8356e-07, dtype=torch.float64)
secont condition:: tensor(3.8356e-07, dtype=torch.float64)
epoch  11
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1497e-07, dtype=torch.float64)
secont condition:: tensor(3.1497e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4553e-07, dtype=torch.float64)
secont condition:: tensor(2.4553e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3725e-07, dtype=torch.float64)
secont condition:: tensor(3.3725e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1190e-07, dtype=torch.float64)
secont condition:: tensor(4.1190e-07, dtype=torch.float64)
epoch  12
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7966e-07, dtype=torch.float64)
secont condition:: tensor(5.7966e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6559e-07, dtype=torch.float64)
secont condition:: tensor(4.6559e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3306e-07, dtype=torch.float64)
secont condition:: tensor(4.3306e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4758e-07, dtype=torch.float64)
secont condition:: tensor(4.4758e-07, dtype=torch.float64)
epoch  13
	calling Sampler:__iter__
curr_secont condition:: tensor(6.1658e-07, dtype=torch.float64)
secont condition:: tensor(6.1658e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1049e-07, dtype=torch.float64)
secont condition:: tensor(4.1049e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7905e-07, dtype=torch.float64)
secont condition:: tensor(3.7905e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1003e-07, dtype=torch.float64)
secont condition:: tensor(8.1003e-07, dtype=torch.float64)
epoch  14
	calling Sampler:__iter__
curr_secont condition:: tensor(4.1928e-07, dtype=torch.float64)
secont condition:: tensor(4.1928e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7961e-07, dtype=torch.float64)
secont condition:: tensor(5.7961e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1718e-07, dtype=torch.float64)
secont condition:: tensor(4.1718e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6167e-07, dtype=torch.float64)
secont condition:: tensor(6.6167e-07, dtype=torch.float64)
epoch  15
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4893e-07, dtype=torch.float64)
secont condition:: tensor(3.4893e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8736e-07, dtype=torch.float64)
secont condition:: tensor(4.8736e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9946e-07, dtype=torch.float64)
secont condition:: tensor(4.9946e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0729e-07, dtype=torch.float64)
secont condition:: tensor(6.0729e-07, dtype=torch.float64)
epoch  16
	calling Sampler:__iter__
curr_secont condition:: tensor(4.4835e-07, dtype=torch.float64)
secont condition:: tensor(4.4835e-07, dtype=torch.float64)
epoch  17
	calling Sampler:__iter__
curr_secont condition:: tensor(5.5466e-07, dtype=torch.float64)
secont condition:: tensor(5.5466e-07, dtype=torch.float64)
epoch  18
	calling Sampler:__iter__
epoch  19
	calling Sampler:__iter__
epoch  20
	calling Sampler:__iter__
epoch  21
	calling Sampler:__iter__
epoch  22
	calling Sampler:__iter__
epoch  23
	calling Sampler:__iter__
epoch  24
	calling Sampler:__iter__
curr_secont condition:: tensor(9.0608e-07, dtype=torch.float64)
secont condition:: tensor(9.0608e-07, dtype=torch.float64)
epoch  25
	calling Sampler:__iter__
epoch  26
	calling Sampler:__iter__
epoch  27
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8401e-07, dtype=torch.float64)
secont condition:: tensor(6.8401e-07, dtype=torch.float64)
epoch  28
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0848e-06, dtype=torch.float64)
secont condition:: tensor(1.0848e-06, dtype=torch.float64)
epoch  29
	calling Sampler:__iter__
epoch  30
	calling Sampler:__iter__
epoch  31
	calling Sampler:__iter__
curr_secont condition:: tensor(7.1588e-07, dtype=torch.float64)
secont condition:: tensor(7.1588e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 40.056233406066895
curr_diff: 0 tensor(8.7996e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0643e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9282e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.4474e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(7.7501e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8736e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(2.5780e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.0590e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0002, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6414e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4590e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6791e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0455e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3586e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000013, Accuracy: 0.966600
batch size:: 4096
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.226414
Train - Epoch 0, Batch: 10, Loss: 0.158550
Test Avg. Loss: 0.000039, Accuracy: 0.963700
Train - Epoch 1, Batch: 0, Loss: 0.140467
Train - Epoch 1, Batch: 10, Loss: 0.143488
Test Avg. Loss: 0.000038, Accuracy: 0.963500
Train - Epoch 2, Batch: 0, Loss: 0.144704
Train - Epoch 2, Batch: 10, Loss: 0.149666
Test Avg. Loss: 0.000037, Accuracy: 0.963400
Train - Epoch 3, Batch: 0, Loss: 0.130492
Train - Epoch 3, Batch: 10, Loss: 0.155062
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 4, Batch: 0, Loss: 0.144648
Train - Epoch 4, Batch: 10, Loss: 0.148093
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 5, Batch: 0, Loss: 0.148548
Train - Epoch 5, Batch: 10, Loss: 0.153789
Test Avg. Loss: 0.000037, Accuracy: 0.965900
Train - Epoch 6, Batch: 0, Loss: 0.138465
Train - Epoch 6, Batch: 10, Loss: 0.136420
Test Avg. Loss: 0.000037, Accuracy: 0.966300
Train - Epoch 7, Batch: 0, Loss: 0.142357
Train - Epoch 7, Batch: 10, Loss: 0.153963
Test Avg. Loss: 0.000037, Accuracy: 0.964700
training_time:: 16.511115550994873
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.192601680755615
time_baseline:: 12.210561513900757
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7710e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.5341e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.7782e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9548e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5526e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(7.6100e-07, dtype=torch.float64)
secont condition:: tensor(7.6100e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6655e-07, dtype=torch.float64)
secont condition:: tensor(1.6655e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6552e-07, dtype=torch.float64)
secont condition:: tensor(1.6552e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4818e-08, dtype=torch.float64)
secont condition:: tensor(9.4818e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.8929e-08, dtype=torch.float64)
secont condition:: tensor(5.8929e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2422e-07, dtype=torch.float64)
secont condition:: tensor(1.2422e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5578e-07, dtype=torch.float64)
secont condition:: tensor(7.5578e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2578e-06, dtype=torch.float64)
secont condition:: tensor(1.2578e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0743e-07, dtype=torch.float64)
secont condition:: tensor(5.0743e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6585e-07, dtype=torch.float64)
secont condition:: tensor(2.6585e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8795e-07, dtype=torch.float64)
secont condition:: tensor(3.8795e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4853e-07, dtype=torch.float64)
secont condition:: tensor(5.4853e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1544e-07, dtype=torch.float64)
secont condition:: tensor(4.1544e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5815e-07, dtype=torch.float64)
secont condition:: tensor(1.5815e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-9.7482e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.4779e-08, dtype=torch.float64)
secont condition:: tensor(7.4779e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2978e-07, dtype=torch.float64)
secont condition:: tensor(1.2978e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6006e-08, dtype=torch.float64)
secont condition:: tensor(8.6006e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0632e-07, dtype=torch.float64)
secont condition:: tensor(1.0632e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7015e-08, dtype=torch.float64)
secont condition:: tensor(8.7015e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.7458e-07, dtype=torch.float64)
secont condition:: tensor(8.7458e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9004e-07, dtype=torch.float64)
secont condition:: tensor(8.9004e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1574e-07, dtype=torch.float64)
secont condition:: tensor(5.1574e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3630e-07, dtype=torch.float64)
secont condition:: tensor(4.3630e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7777e-07, dtype=torch.float64)
secont condition:: tensor(8.7777e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0231e-07, dtype=torch.float64)
secont condition:: tensor(6.0231e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1987e-07, dtype=torch.float64)
secont condition:: tensor(3.1987e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5559e-07, dtype=torch.float64)
secont condition:: tensor(3.5559e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3954e-07, dtype=torch.float64)
secont condition:: tensor(3.3954e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.0461e-07, dtype=torch.float64)
secont condition:: tensor(2.0461e-07, dtype=torch.float64)
curr_secont condition:: tensor(-3.8273e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3391e-06, dtype=torch.float64)
secont condition:: tensor(1.3391e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.9806e-07, dtype=torch.float64)
secont condition:: tensor(6.9806e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5351e-06, dtype=torch.float64)
secont condition:: tensor(1.5351e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7634e-07, dtype=torch.float64)
secont condition:: tensor(7.7634e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3745e-07, dtype=torch.float64)
secont condition:: tensor(4.3745e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2910e-07, dtype=torch.float64)
secont condition:: tensor(4.2910e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2302e-06, dtype=torch.float64)
secont condition:: tensor(1.2302e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2406e-07, dtype=torch.float64)
secont condition:: tensor(9.2406e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3419e-07, dtype=torch.float64)
secont condition:: tensor(3.3419e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4250e-07, dtype=torch.float64)
secont condition:: tensor(7.4250e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5249e-07, dtype=torch.float64)
secont condition:: tensor(7.5249e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4206e-07, dtype=torch.float64)
secont condition:: tensor(6.4206e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4053e-06, dtype=torch.float64)
secont condition:: tensor(2.4053e-06, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(3.3141e-07, dtype=torch.float64)
secont condition:: tensor(3.3141e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5468e-07, dtype=torch.float64)
secont condition:: tensor(3.5468e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7269e-07, dtype=torch.float64)
secont condition:: tensor(2.7269e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0166e-07, dtype=torch.float64)
secont condition:: tensor(4.0166e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6036e-06, dtype=torch.float64)
secont condition:: tensor(1.6036e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8379e-07, dtype=torch.float64)
secont condition:: tensor(5.8379e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2180e-06, dtype=torch.float64)
secont condition:: tensor(2.2180e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.3555e-07, dtype=torch.float64)
secont condition:: tensor(8.3555e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2531e-07, dtype=torch.float64)
secont condition:: tensor(6.2531e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4563e-07, dtype=torch.float64)
secont condition:: tensor(7.4563e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9121e-07, dtype=torch.float64)
secont condition:: tensor(3.9121e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1705e-06, dtype=torch.float64)
secont condition:: tensor(1.1705e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8985e-07, dtype=torch.float64)
secont condition:: tensor(5.8985e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6370e-07, dtype=torch.float64)
secont condition:: tensor(8.6370e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9420e-07, dtype=torch.float64)
secont condition:: tensor(3.9420e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6362e-06, dtype=torch.float64)
secont condition:: tensor(1.6362e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9648e-06, dtype=torch.float64)
secont condition:: tensor(1.9648e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.5552e-07, dtype=torch.float64)
secont condition:: tensor(6.5552e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3262e-06, dtype=torch.float64)
secont condition:: tensor(1.3262e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8494e-07, dtype=torch.float64)
secont condition:: tensor(7.8494e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5524e-06, dtype=torch.float64)
secont condition:: tensor(1.5524e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(9.6598e-07, dtype=torch.float64)
secont condition:: tensor(9.6598e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0504e-06, dtype=torch.float64)
secont condition:: tensor(1.0504e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.4803e-07, dtype=torch.float64)
secont condition:: tensor(8.4803e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.0490e-06, dtype=torch.float64)
secont condition:: tensor(1.0490e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8155e-07, dtype=torch.float64)
secont condition:: tensor(8.8155e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0253e-06, dtype=torch.float64)
secont condition:: tensor(1.0253e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.459956645965576
curr_diff: 0 tensor(2.5777e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.5295e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(6.0292e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.8156e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.1228e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.6812e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.6875e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3252e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.2014e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.4498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.0503e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965000
repetition 2
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.222788
Train - Epoch 0, Batch: 10, Loss: 0.170340
Test Avg. Loss: 0.000039, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.154582
Train - Epoch 1, Batch: 10, Loss: 0.148060
Test Avg. Loss: 0.000038, Accuracy: 0.963400
Train - Epoch 2, Batch: 0, Loss: 0.149077
Train - Epoch 2, Batch: 10, Loss: 0.155062
Test Avg. Loss: 0.000037, Accuracy: 0.963400
Train - Epoch 3, Batch: 0, Loss: 0.148281
Train - Epoch 3, Batch: 10, Loss: 0.142358
Test Avg. Loss: 0.000037, Accuracy: 0.964200
Train - Epoch 4, Batch: 0, Loss: 0.155895
Train - Epoch 4, Batch: 10, Loss: 0.145543
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 5, Batch: 0, Loss: 0.132273
Train - Epoch 5, Batch: 10, Loss: 0.157463
Test Avg. Loss: 0.000037, Accuracy: 0.965600
Train - Epoch 6, Batch: 0, Loss: 0.144381
Train - Epoch 6, Batch: 10, Loss: 0.145172
Test Avg. Loss: 0.000037, Accuracy: 0.965200
Train - Epoch 7, Batch: 0, Loss: 0.139782
Train - Epoch 7, Batch: 10, Loss: 0.154197
Test Avg. Loss: 0.000037, Accuracy: 0.964900
training_time:: 16.52637505531311
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.17548155784607
time_baseline:: 12.193133115768433
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6671e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1051e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8633e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.7929e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5745e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2139e-07, dtype=torch.float64)
secont condition:: tensor(1.2139e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4067e-08, dtype=torch.float64)
secont condition:: tensor(8.4067e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4700e-07, dtype=torch.float64)
secont condition:: tensor(4.4700e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7547e-07, dtype=torch.float64)
secont condition:: tensor(1.7547e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9132e-08, dtype=torch.float64)
secont condition:: tensor(5.9132e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.5052e-08, dtype=torch.float64)
secont condition:: tensor(2.5052e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4473e-07, dtype=torch.float64)
secont condition:: tensor(4.4473e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5474e-07, dtype=torch.float64)
secont condition:: tensor(2.5474e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3615e-07, dtype=torch.float64)
secont condition:: tensor(1.3615e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0725e-07, dtype=torch.float64)
secont condition:: tensor(1.0725e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2900e-08, dtype=torch.float64)
secont condition:: tensor(6.2900e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.5522e-07, dtype=torch.float64)
secont condition:: tensor(4.5522e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8762e-07, dtype=torch.float64)
secont condition:: tensor(1.8762e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2938e-06, dtype=torch.float64)
secont condition:: tensor(1.2938e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(3.0048e-07, dtype=torch.float64)
secont condition:: tensor(3.0048e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8569e-07, dtype=torch.float64)
secont condition:: tensor(1.8569e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4967e-07, dtype=torch.float64)
secont condition:: tensor(3.4967e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2127e-07, dtype=torch.float64)
secont condition:: tensor(5.2127e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3514e-06, dtype=torch.float64)
secont condition:: tensor(1.3514e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7457e-07, dtype=torch.float64)
secont condition:: tensor(7.7457e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3470e-07, dtype=torch.float64)
secont condition:: tensor(5.3470e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1317e-07, dtype=torch.float64)
secont condition:: tensor(3.1317e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7470e-07, dtype=torch.float64)
secont condition:: tensor(4.7470e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2006e-07, dtype=torch.float64)
secont condition:: tensor(3.2006e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3581e-07, dtype=torch.float64)
secont condition:: tensor(4.3581e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7247e-07, dtype=torch.float64)
secont condition:: tensor(2.7247e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6680e-07, dtype=torch.float64)
secont condition:: tensor(2.6680e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5078e-07, dtype=torch.float64)
secont condition:: tensor(1.5078e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2010e-07, dtype=torch.float64)
secont condition:: tensor(9.2010e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(3.9224e-07, dtype=torch.float64)
secont condition:: tensor(3.9224e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8640e-06, dtype=torch.float64)
secont condition:: tensor(1.8640e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8735e-07, dtype=torch.float64)
secont condition:: tensor(1.8735e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0735e-07, dtype=torch.float64)
secont condition:: tensor(2.0735e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8985e-07, dtype=torch.float64)
secont condition:: tensor(1.8985e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8069e-07, dtype=torch.float64)
secont condition:: tensor(2.8069e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4242e-07, dtype=torch.float64)
secont condition:: tensor(9.4242e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2486e-06, dtype=torch.float64)
secont condition:: tensor(1.2486e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0326e-07, dtype=torch.float64)
secont condition:: tensor(7.0326e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9349e-06, dtype=torch.float64)
secont condition:: tensor(1.9349e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.6290e-07, dtype=torch.float64)
secont condition:: tensor(7.6290e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7059e-07, dtype=torch.float64)
secont condition:: tensor(3.7059e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1904e-07, dtype=torch.float64)
secont condition:: tensor(7.1904e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9722e-07, dtype=torch.float64)
secont condition:: tensor(3.9722e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1694e-07, dtype=torch.float64)
secont condition:: tensor(5.1694e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(4.5704e-07, dtype=torch.float64)
secont condition:: tensor(4.5704e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1087e-06, dtype=torch.float64)
secont condition:: tensor(2.1087e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2120e-06, dtype=torch.float64)
secont condition:: tensor(1.2120e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2322e-07, dtype=torch.float64)
secont condition:: tensor(6.2322e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1367e-07, dtype=torch.float64)
secont condition:: tensor(4.1367e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4851e-07, dtype=torch.float64)
secont condition:: tensor(4.4851e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4198e-07, dtype=torch.float64)
secont condition:: tensor(3.4198e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6443e-06, dtype=torch.float64)
secont condition:: tensor(1.6443e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7914e-07, dtype=torch.float64)
secont condition:: tensor(8.7914e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2694e-07, dtype=torch.float64)
secont condition:: tensor(5.2694e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8074e-07, dtype=torch.float64)
secont condition:: tensor(4.8074e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8411e-07, dtype=torch.float64)
secont condition:: tensor(4.8411e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6947e-07, dtype=torch.float64)
secont condition:: tensor(4.6947e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2416e-07, dtype=torch.float64)
secont condition:: tensor(6.2416e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1269e-06, dtype=torch.float64)
secont condition:: tensor(2.1269e-06, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9036e-07, dtype=torch.float64)
secont condition:: tensor(7.9036e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5892e-07, dtype=torch.float64)
secont condition:: tensor(3.5892e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.1342e-07, dtype=torch.float64)
secont condition:: tensor(6.1342e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4786e-07, dtype=torch.float64)
secont condition:: tensor(3.4786e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4090e-06, dtype=torch.float64)
secont condition:: tensor(1.4090e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(4.9950e-07, dtype=torch.float64)
secont condition:: tensor(4.9950e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7209e-06, dtype=torch.float64)
secont condition:: tensor(1.7209e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6181e-06, dtype=torch.float64)
secont condition:: tensor(1.6181e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(2.7254e-06, dtype=torch.float64)
secont condition:: tensor(2.7254e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.864990949630737
curr_diff: 0 tensor(1.4791e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.4094e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.8168e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(6.3682e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.6605e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(3.3221e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.2343e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0003, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.8669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1772e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.9461e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0222e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6332e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964700
repetition 3
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.205251
Train - Epoch 0, Batch: 10, Loss: 0.163710
Test Avg. Loss: 0.000039, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.159642
Train - Epoch 1, Batch: 10, Loss: 0.140621
Test Avg. Loss: 0.000038, Accuracy: 0.963900
Train - Epoch 2, Batch: 0, Loss: 0.149797
Train - Epoch 2, Batch: 10, Loss: 0.135467
Test Avg. Loss: 0.000037, Accuracy: 0.964000
Train - Epoch 3, Batch: 0, Loss: 0.139473
Train - Epoch 3, Batch: 10, Loss: 0.150344
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 4, Batch: 0, Loss: 0.145552
Train - Epoch 4, Batch: 10, Loss: 0.132115
Test Avg. Loss: 0.000037, Accuracy: 0.964500
Train - Epoch 5, Batch: 0, Loss: 0.146853
Train - Epoch 5, Batch: 10, Loss: 0.142248
Test Avg. Loss: 0.000037, Accuracy: 0.964400
Train - Epoch 6, Batch: 0, Loss: 0.135699
Train - Epoch 6, Batch: 10, Loss: 0.138914
Test Avg. Loss: 0.000037, Accuracy: 0.964900
Train - Epoch 7, Batch: 0, Loss: 0.137347
Train - Epoch 7, Batch: 10, Loss: 0.143663
Test Avg. Loss: 0.000037, Accuracy: 0.964500
training_time:: 16.31857204437256
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.164846420288086
time_baseline:: 12.182244062423706
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.6674e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.2995e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5895e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.9630e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(5.1001e-07, dtype=torch.float64)
secont condition:: tensor(5.1001e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7695e-07, dtype=torch.float64)
secont condition:: tensor(2.7695e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2140e-07, dtype=torch.float64)
secont condition:: tensor(8.2140e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.8038e-07, dtype=torch.float64)
secont condition:: tensor(6.8038e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6481e-07, dtype=torch.float64)
secont condition:: tensor(2.6481e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1082e-07, dtype=torch.float64)
secont condition:: tensor(5.1082e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9994e-07, dtype=torch.float64)
secont condition:: tensor(1.9994e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3558e-07, dtype=torch.float64)
secont condition:: tensor(1.3558e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6050e-07, dtype=torch.float64)
secont condition:: tensor(7.6050e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9930e-07, dtype=torch.float64)
secont condition:: tensor(2.9930e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5711e-07, dtype=torch.float64)
secont condition:: tensor(1.5711e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0315e-07, dtype=torch.float64)
secont condition:: tensor(1.0315e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7204e-07, dtype=torch.float64)
secont condition:: tensor(2.7204e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9247e-07, dtype=torch.float64)
secont condition:: tensor(1.9247e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.6818e-07, dtype=torch.float64)
secont condition:: tensor(1.6818e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7943e-06, dtype=torch.float64)
secont condition:: tensor(1.7943e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9228e-07, dtype=torch.float64)
secont condition:: tensor(3.9228e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8880e-07, dtype=torch.float64)
secont condition:: tensor(2.8880e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9479e-07, dtype=torch.float64)
secont condition:: tensor(2.9479e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2806e-07, dtype=torch.float64)
secont condition:: tensor(2.2806e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5867e-07, dtype=torch.float64)
secont condition:: tensor(3.5867e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7503e-06, dtype=torch.float64)
secont condition:: tensor(3.7503e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.4791e-07, dtype=torch.float64)
secont condition:: tensor(2.4791e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0849e-06, dtype=torch.float64)
secont condition:: tensor(2.0849e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2721e-07, dtype=torch.float64)
secont condition:: tensor(2.2721e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7499e-07, dtype=torch.float64)
secont condition:: tensor(1.7499e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2549e-06, dtype=torch.float64)
secont condition:: tensor(2.2549e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8817e-07, dtype=torch.float64)
secont condition:: tensor(6.8817e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4410e-06, dtype=torch.float64)
secont condition:: tensor(4.4410e-06, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(5.4818e-07, dtype=torch.float64)
secont condition:: tensor(5.4818e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3620e-07, dtype=torch.float64)
secont condition:: tensor(1.3620e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1607e-06, dtype=torch.float64)
secont condition:: tensor(1.1607e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.1211e-06, dtype=torch.float64)
secont condition:: tensor(3.1211e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1450e-07, dtype=torch.float64)
secont condition:: tensor(6.1450e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3851e-06, dtype=torch.float64)
secont condition:: tensor(1.3851e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1265e-07, dtype=torch.float64)
secont condition:: tensor(9.1265e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1461e-07, dtype=torch.float64)
secont condition:: tensor(5.1461e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4911e-07, dtype=torch.float64)
secont condition:: tensor(3.4911e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6947e-06, dtype=torch.float64)
secont condition:: tensor(1.6947e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5895e-07, dtype=torch.float64)
secont condition:: tensor(4.5895e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2895e-07, dtype=torch.float64)
secont condition:: tensor(3.2895e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1289e-07, dtype=torch.float64)
secont condition:: tensor(4.1289e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2080e-06, dtype=torch.float64)
secont condition:: tensor(3.2080e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1711e-07, dtype=torch.float64)
secont condition:: tensor(8.1711e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.9767e-07, dtype=torch.float64)
secont condition:: tensor(7.9767e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0370e-07, dtype=torch.float64)
secont condition:: tensor(4.0370e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2943e-07, dtype=torch.float64)
secont condition:: tensor(8.2943e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9538e-07, dtype=torch.float64)
secont condition:: tensor(4.9538e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7645e-06, dtype=torch.float64)
secont condition:: tensor(1.7645e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5580e-07, dtype=torch.float64)
secont condition:: tensor(2.5580e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8008e-07, dtype=torch.float64)
secont condition:: tensor(1.8008e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7143e-07, dtype=torch.float64)
secont condition:: tensor(2.7143e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6712e-06, dtype=torch.float64)
secont condition:: tensor(1.6712e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8005e-07, dtype=torch.float64)
secont condition:: tensor(6.8005e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5229e-07, dtype=torch.float64)
secont condition:: tensor(3.5229e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1624e-07, dtype=torch.float64)
secont condition:: tensor(9.1624e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5443e-07, dtype=torch.float64)
secont condition:: tensor(6.5443e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2485e-07, dtype=torch.float64)
secont condition:: tensor(5.2485e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4024e-07, dtype=torch.float64)
secont condition:: tensor(7.4024e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(4.7502e-07, dtype=torch.float64)
secont condition:: tensor(4.7502e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6317e-06, dtype=torch.float64)
secont condition:: tensor(1.6317e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8806e-07, dtype=torch.float64)
secont condition:: tensor(8.8806e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6607e-06, dtype=torch.float64)
secont condition:: tensor(2.6607e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.2746e-07, dtype=torch.float64)
secont condition:: tensor(7.2746e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0562e-07, dtype=torch.float64)
secont condition:: tensor(4.0562e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
curr_secont condition:: tensor(6.7703e-07, dtype=torch.float64)
secont condition:: tensor(6.7703e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2273e-06, dtype=torch.float64)
secont condition:: tensor(1.2273e-06, dtype=torch.float64)
epoch  6
	calling Sampler:__iter__
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(8.3405e-07, dtype=torch.float64)
secont condition:: tensor(8.3405e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 11.668358325958252
curr_diff: 0 tensor(2.3315e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.7346e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.4718e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(7.7121e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(7.1191e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(4.0215e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.8527e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0004, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7648e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.3968e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.5953e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.7387e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966200
repetition 4
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.208396
Train - Epoch 0, Batch: 10, Loss: 0.146211
Test Avg. Loss: 0.000039, Accuracy: 0.964000
Train - Epoch 1, Batch: 0, Loss: 0.143221
Train - Epoch 1, Batch: 10, Loss: 0.149900
Test Avg. Loss: 0.000038, Accuracy: 0.963100
Train - Epoch 2, Batch: 0, Loss: 0.142343
Train - Epoch 2, Batch: 10, Loss: 0.143937
Test Avg. Loss: 0.000037, Accuracy: 0.963500
Train - Epoch 3, Batch: 0, Loss: 0.142216
Train - Epoch 3, Batch: 10, Loss: 0.135378
Test Avg. Loss: 0.000037, Accuracy: 0.963700
Train - Epoch 4, Batch: 0, Loss: 0.133552
Train - Epoch 4, Batch: 10, Loss: 0.140262
Test Avg. Loss: 0.000037, Accuracy: 0.964600
Train - Epoch 5, Batch: 0, Loss: 0.138748
Train - Epoch 5, Batch: 10, Loss: 0.135352
Test Avg. Loss: 0.000037, Accuracy: 0.965100
Train - Epoch 6, Batch: 0, Loss: 0.139893
Train - Epoch 6, Batch: 10, Loss: 0.140940
Test Avg. Loss: 0.000037, Accuracy: 0.965200
Train - Epoch 7, Batch: 0, Loss: 0.148835
Train - Epoch 7, Batch: 10, Loss: 0.141302
Test Avg. Loss: 0.000037, Accuracy: 0.966300
training_time:: 16.52686595916748
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.153252601623535
time_baseline:: 12.171083211898804
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.2330e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.1366e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6135e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.6975e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.0333e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0020, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.1853e-07, dtype=torch.float64)
secont condition:: tensor(3.1853e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3743e-08, dtype=torch.float64)
secont condition:: tensor(9.3743e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2412e-07, dtype=torch.float64)
secont condition:: tensor(1.2412e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1450e-08, dtype=torch.float64)
secont condition:: tensor(7.1450e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.1548e-07, dtype=torch.float64)
secont condition:: tensor(5.1548e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7226e-07, dtype=torch.float64)
secont condition:: tensor(3.7226e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3979e-07, dtype=torch.float64)
secont condition:: tensor(1.3979e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6179e-08, dtype=torch.float64)
secont condition:: tensor(8.6179e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.2972e-08, dtype=torch.float64)
secont condition:: tensor(6.2972e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.9391e-08, dtype=torch.float64)
secont condition:: tensor(3.9391e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.9856e-07, dtype=torch.float64)
secont condition:: tensor(2.9856e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9702e-07, dtype=torch.float64)
secont condition:: tensor(1.9702e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5741e-07, dtype=torch.float64)
secont condition:: tensor(4.5741e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6278e-07, dtype=torch.float64)
secont condition:: tensor(1.6278e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(2.8644e-07, dtype=torch.float64)
secont condition:: tensor(2.8644e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8906e-07, dtype=torch.float64)
secont condition:: tensor(1.8906e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0880e-07, dtype=torch.float64)
secont condition:: tensor(1.0880e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8764e-08, dtype=torch.float64)
secont condition:: tensor(2.8764e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.0285e-08, dtype=torch.float64)
secont condition:: tensor(5.0285e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3727e-06, dtype=torch.float64)
secont condition:: tensor(1.3727e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.4998e-07, dtype=torch.float64)
secont condition:: tensor(5.4998e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9796e-07, dtype=torch.float64)
secont condition:: tensor(3.9796e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4819e-06, dtype=torch.float64)
secont condition:: tensor(1.4819e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5866e-07, dtype=torch.float64)
secont condition:: tensor(8.5866e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0521e-07, dtype=torch.float64)
secont condition:: tensor(5.0521e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9431e-07, dtype=torch.float64)
secont condition:: tensor(2.9431e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2583e-07, dtype=torch.float64)
secont condition:: tensor(4.2583e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0841e-07, dtype=torch.float64)
secont condition:: tensor(2.0841e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7013e-07, dtype=torch.float64)
secont condition:: tensor(2.7013e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0397e-07, dtype=torch.float64)
secont condition:: tensor(4.0397e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.3304e-07, dtype=torch.float64)
secont condition:: tensor(8.3304e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.5862e-07, dtype=torch.float64)
secont condition:: tensor(7.5862e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2830e-07, dtype=torch.float64)
secont condition:: tensor(4.2830e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0001e-07, dtype=torch.float64)
secont condition:: tensor(2.0001e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1783e-07, dtype=torch.float64)
secont condition:: tensor(9.1783e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1361e-07, dtype=torch.float64)
secont condition:: tensor(4.1361e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4992e-06, dtype=torch.float64)
secont condition:: tensor(1.4992e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0564e-07, dtype=torch.float64)
secont condition:: tensor(7.0564e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4810e-07, dtype=torch.float64)
secont condition:: tensor(4.4810e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1431e-07, dtype=torch.float64)
secont condition:: tensor(4.1431e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4640e-07, dtype=torch.float64)
secont condition:: tensor(2.4640e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4818e-07, dtype=torch.float64)
secont condition:: tensor(9.4818e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4959e-07, dtype=torch.float64)
secont condition:: tensor(9.4959e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1527e-07, dtype=torch.float64)
secont condition:: tensor(8.1527e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5379e-06, dtype=torch.float64)
secont condition:: tensor(1.5379e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2618e-06, dtype=torch.float64)
secont condition:: tensor(2.2618e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.1318e-07, dtype=torch.float64)
secont condition:: tensor(9.1318e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4442e-06, dtype=torch.float64)
secont condition:: tensor(1.4442e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5714e-07, dtype=torch.float64)
secont condition:: tensor(8.5714e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.4923e-07, dtype=torch.float64)
secont condition:: tensor(5.4923e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8592e-07, dtype=torch.float64)
secont condition:: tensor(4.8592e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5423e-07, dtype=torch.float64)
secont condition:: tensor(5.5423e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6324e-07, dtype=torch.float64)
secont condition:: tensor(6.6324e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0445e-07, dtype=torch.float64)
secont condition:: tensor(5.0445e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2475e-07, dtype=torch.float64)
secont condition:: tensor(3.2475e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7450e-07, dtype=torch.float64)
secont condition:: tensor(3.7450e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4780e-07, dtype=torch.float64)
secont condition:: tensor(3.4780e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3507e-06, dtype=torch.float64)
secont condition:: tensor(1.3507e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9293e-07, dtype=torch.float64)
secont condition:: tensor(4.9293e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(5.7768e-07, dtype=torch.float64)
secont condition:: tensor(5.7768e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6637e-07, dtype=torch.float64)
secont condition:: tensor(4.6637e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3271e-07, dtype=torch.float64)
secont condition:: tensor(3.3271e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0530e-07, dtype=torch.float64)
secont condition:: tensor(7.0530e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6649e-07, dtype=torch.float64)
secont condition:: tensor(5.6649e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7926e-07, dtype=torch.float64)
secont condition:: tensor(6.7926e-07, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(1.1014e-06, dtype=torch.float64)
secont condition:: tensor(1.1014e-06, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2709e-06, dtype=torch.float64)
secont condition:: tensor(1.2709e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 12.138185024261475
curr_diff: 0 tensor(1.3579e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.6964e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(8.2619e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(9.3330e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2027e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(9.6398e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(9.3053e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.1108e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8680e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5491e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.3927e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(2.6908e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.966100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 4096 8 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.216880
Train - Epoch 0, Batch: 10, Loss: 0.152005
Test Avg. Loss: 0.000039, Accuracy: 0.963600
Train - Epoch 1, Batch: 0, Loss: 0.155108
Train - Epoch 1, Batch: 10, Loss: 0.145809
Test Avg. Loss: 0.000038, Accuracy: 0.963000
Train - Epoch 2, Batch: 0, Loss: 0.140637
Train - Epoch 2, Batch: 10, Loss: 0.140720
Test Avg. Loss: 0.000037, Accuracy: 0.963100
Train - Epoch 3, Batch: 0, Loss: 0.132907
Train - Epoch 3, Batch: 10, Loss: 0.126861
Test Avg. Loss: 0.000037, Accuracy: 0.963600
Train - Epoch 4, Batch: 0, Loss: 0.135405
Train - Epoch 4, Batch: 10, Loss: 0.155449
Test Avg. Loss: 0.000037, Accuracy: 0.963900
Train - Epoch 5, Batch: 0, Loss: 0.133213
Train - Epoch 5, Batch: 10, Loss: 0.137719
Test Avg. Loss: 0.000037, Accuracy: 0.964800
Train - Epoch 6, Batch: 0, Loss: 0.135506
Train - Epoch 6, Batch: 10, Loss: 0.141075
Test Avg. Loss: 0.000037, Accuracy: 0.965400
Train - Epoch 7, Batch: 0, Loss: 0.140877
Train - Epoch 7, Batch: 10, Loss: 0.143653
Test Avg. Loss: 0.000037, Accuracy: 0.964800
training_time:: 16.302867650985718
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
epoch:: 2
	calling Sampler:__iter__
epoch:: 3
	calling Sampler:__iter__
epoch:: 4
	calling Sampler:__iter__
epoch:: 5
	calling Sampler:__iter__
epoch:: 6
	calling Sampler:__iter__
epoch:: 7
	calling Sampler:__iter__
training time is 12.133688688278198
time_baseline:: 12.15172791481018
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3682e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0016, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8073e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.6465e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9535e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.964800
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 8
delta_size:: 60
max_epoch:: 8
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(3.4373e-07, dtype=torch.float64)
secont condition:: tensor(3.4373e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7308e-07, dtype=torch.float64)
secont condition:: tensor(3.7308e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9161e-07, dtype=torch.float64)
secont condition:: tensor(3.9161e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0961e-07, dtype=torch.float64)
secont condition:: tensor(4.0961e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4860e-07, dtype=torch.float64)
secont condition:: tensor(1.4860e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4040e-07, dtype=torch.float64)
secont condition:: tensor(2.4040e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9563e-07, dtype=torch.float64)
secont condition:: tensor(2.9563e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5950e-07, dtype=torch.float64)
secont condition:: tensor(1.5950e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4712e-07, dtype=torch.float64)
secont condition:: tensor(1.4712e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7818e-08, dtype=torch.float64)
secont condition:: tensor(8.7818e-08, dtype=torch.float64)
curr_secont condition:: tensor(7.1186e-08, dtype=torch.float64)
secont condition:: tensor(7.1186e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.2471e-07, dtype=torch.float64)
secont condition:: tensor(1.2471e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4414e-08, dtype=torch.float64)
secont condition:: tensor(4.4414e-08, dtype=torch.float64)
curr_secont condition:: tensor(5.2722e-08, dtype=torch.float64)
secont condition:: tensor(5.2722e-08, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(1.3693e-06, dtype=torch.float64)
secont condition:: tensor(1.3693e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.3178e-07, dtype=torch.float64)
secont condition:: tensor(8.3178e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.7388e-07, dtype=torch.float64)
secont condition:: tensor(5.7388e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0687e-07, dtype=torch.float64)
secont condition:: tensor(2.0687e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7385e-07, dtype=torch.float64)
secont condition:: tensor(1.7385e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3811e-07, dtype=torch.float64)
secont condition:: tensor(1.3811e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0469e-07, dtype=torch.float64)
secont condition:: tensor(1.0469e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6754e-07, dtype=torch.float64)
secont condition:: tensor(6.6754e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8338e-07, dtype=torch.float64)
secont condition:: tensor(3.8338e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6589e-06, dtype=torch.float64)
secont condition:: tensor(4.6589e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2259e-07, dtype=torch.float64)
secont condition:: tensor(9.2259e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2625e-07, dtype=torch.float64)
secont condition:: tensor(5.2625e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2064e-07, dtype=torch.float64)
secont condition:: tensor(2.2064e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9768e-07, dtype=torch.float64)
secont condition:: tensor(1.9768e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5751e-07, dtype=torch.float64)
secont condition:: tensor(1.5751e-07, dtype=torch.float64)
epoch  2
	calling Sampler:__iter__
curr_secont condition:: tensor(2.3858e-06, dtype=torch.float64)
secont condition:: tensor(2.3858e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0710e-06, dtype=torch.float64)
secont condition:: tensor(1.0710e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7434e-06, dtype=torch.float64)
secont condition:: tensor(1.7434e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5420e-06, dtype=torch.float64)
secont condition:: tensor(1.5420e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7898e-07, dtype=torch.float64)
secont condition:: tensor(6.7898e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6027e-06, dtype=torch.float64)
secont condition:: tensor(1.6027e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.3330e-07, dtype=torch.float64)
secont condition:: tensor(7.3330e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9562e-07, dtype=torch.float64)
secont condition:: tensor(4.9562e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.3135e-07, dtype=torch.float64)
secont condition:: tensor(9.3135e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3625e-07, dtype=torch.float64)
secont condition:: tensor(3.3625e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5317e-07, dtype=torch.float64)
secont condition:: tensor(3.5317e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.8730e-06, dtype=torch.float64)
secont condition:: tensor(1.8730e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9322e-07, dtype=torch.float64)
secont condition:: tensor(7.9322e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9702e-07, dtype=torch.float64)
secont condition:: tensor(4.9702e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1217e-07, dtype=torch.float64)
secont condition:: tensor(1.1217e-07, dtype=torch.float64)
epoch  3
	calling Sampler:__iter__
curr_secont condition:: tensor(7.0727e-07, dtype=torch.float64)
secont condition:: tensor(7.0727e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2575e-07, dtype=torch.float64)
secont condition:: tensor(4.2575e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8714e-07, dtype=torch.float64)
secont condition:: tensor(8.8714e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1437e-07, dtype=torch.float64)
secont condition:: tensor(5.1437e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7286e-06, dtype=torch.float64)
secont condition:: tensor(1.7286e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.0435e-07, dtype=torch.float64)
secont condition:: tensor(7.0435e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0332e-07, dtype=torch.float64)
secont condition:: tensor(5.0332e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2565e-06, dtype=torch.float64)
secont condition:: tensor(1.2565e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.0867e-07, dtype=torch.float64)
secont condition:: tensor(6.0867e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6994e-06, dtype=torch.float64)
secont condition:: tensor(5.6994e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0642e-06, dtype=torch.float64)
secont condition:: tensor(1.0642e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.6974e-06, dtype=torch.float64)
secont condition:: tensor(3.6974e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4733e-06, dtype=torch.float64)
secont condition:: tensor(1.4733e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6923e-07, dtype=torch.float64)
secont condition:: tensor(8.6923e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3466e-07, dtype=torch.float64)
secont condition:: tensor(5.3466e-07, dtype=torch.float64)
epoch  4
	calling Sampler:__iter__
curr_secont condition:: tensor(6.8855e-07, dtype=torch.float64)
secont condition:: tensor(6.8855e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4551e-07, dtype=torch.float64)
secont condition:: tensor(8.4551e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6289e-06, dtype=torch.float64)
secont condition:: tensor(1.6289e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9331e-07, dtype=torch.float64)
secont condition:: tensor(3.9331e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9683e-06, dtype=torch.float64)
secont condition:: tensor(1.9683e-06, dtype=torch.float64)
epoch  5
	calling Sampler:__iter__
epoch  6
	calling Sampler:__iter__
curr_secont condition:: tensor(8.1487e-07, dtype=torch.float64)
secont condition:: tensor(8.1487e-07, dtype=torch.float64)
epoch  7
	calling Sampler:__iter__
curr_secont condition:: tensor(1.7838e-06, dtype=torch.float64)
secont condition:: tensor(1.7838e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 12.114239931106567
curr_diff: 0 tensor(1.3098e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.8160e-07, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(7.7191e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.0948e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(8.7210e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.5494e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.3943e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0005, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.0498e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0017, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3149e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.9859e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.5476e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0021, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000037, Accuracy: 0.965900
batch size:: 1024
learning rates:: [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05]
repetition 1
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.196619
Train - Epoch 0, Batch: 10, Loss: 0.142298
Train - Epoch 0, Batch: 20, Loss: 0.142084
Train - Epoch 0, Batch: 30, Loss: 0.161333
Train - Epoch 0, Batch: 40, Loss: 0.166851
Train - Epoch 0, Batch: 50, Loss: 0.170788
Test Avg. Loss: 0.000131, Accuracy: 0.965100
Train - Epoch 1, Batch: 0, Loss: 0.147522
Train - Epoch 1, Batch: 10, Loss: 0.141168
Train - Epoch 1, Batch: 20, Loss: 0.131746
Train - Epoch 1, Batch: 30, Loss: 0.136649
Train - Epoch 1, Batch: 40, Loss: 0.153498
Train - Epoch 1, Batch: 50, Loss: 0.171088
Test Avg. Loss: 0.000131, Accuracy: 0.965200
training_time:: 5.292350769042969
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.24153995513916
time_baseline:: 4.246489524841309
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(6.5734e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.3740e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0021, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.1809e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.8669e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.6409e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0027, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.965300
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.4550e-09, dtype=torch.float64)
secont condition:: tensor(1.4550e-09, dtype=torch.float64)
curr_secont condition:: tensor(4.1934e-06, dtype=torch.float64)
secont condition:: tensor(4.1934e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5327e-06, dtype=torch.float64)
secont condition:: tensor(1.5327e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.9456e-07, dtype=torch.float64)
secont condition:: tensor(7.9456e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2392e-07, dtype=torch.float64)
secont condition:: tensor(8.2392e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5197e-07, dtype=torch.float64)
secont condition:: tensor(3.5197e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6342e-08, dtype=torch.float64)
secont condition:: tensor(3.6342e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4296e-07, dtype=torch.float64)
secont condition:: tensor(1.4296e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7345e-07, dtype=torch.float64)
secont condition:: tensor(1.7345e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.1088e-06, dtype=torch.float64)
secont condition:: tensor(7.1088e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2277e-06, dtype=torch.float64)
secont condition:: tensor(3.2277e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4551e-06, dtype=torch.float64)
secont condition:: tensor(1.4551e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2585e-07, dtype=torch.float64)
secont condition:: tensor(4.2585e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4948e-07, dtype=torch.float64)
secont condition:: tensor(6.4948e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6829e-07, dtype=torch.float64)
secont condition:: tensor(5.6829e-07, dtype=torch.float64)
curr_secont condition:: tensor(-5.5556e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.2873e-07, dtype=torch.float64)
secont condition:: tensor(9.2873e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1004e-06, dtype=torch.float64)
secont condition:: tensor(1.1004e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0648e-07, dtype=torch.float64)
secont condition:: tensor(5.0648e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9984e-07, dtype=torch.float64)
secont condition:: tensor(1.9984e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1815e-07, dtype=torch.float64)
secont condition:: tensor(3.1815e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3903e-07, dtype=torch.float64)
secont condition:: tensor(3.3903e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.5276e-07, dtype=torch.float64)
curr_secont condition:: tensor(-4.6032e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.0186e-07, dtype=torch.float64)
secont condition:: tensor(3.0186e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3346e-07, dtype=torch.float64)
secont condition:: tensor(7.3346e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1428e-07, dtype=torch.float64)
secont condition:: tensor(2.1428e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.1785e-08, dtype=torch.float64)
secont condition:: tensor(3.1785e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2715e-07, dtype=torch.float64)
secont condition:: tensor(2.2715e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5595e-06, dtype=torch.float64)
secont condition:: tensor(1.5595e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4627e-07, dtype=torch.float64)
secont condition:: tensor(4.4627e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3048e-06, dtype=torch.float64)
secont condition:: tensor(1.3048e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9238e-05, dtype=torch.float64)
secont condition:: tensor(1.9238e-05, dtype=torch.float64)
curr_secont condition:: tensor(6.5694e-06, dtype=torch.float64)
secont condition:: tensor(6.5694e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5661e-06, dtype=torch.float64)
secont condition:: tensor(2.5661e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.2016e-06, dtype=torch.float64)
secont condition:: tensor(2.2016e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7387e-07, dtype=torch.float64)
secont condition:: tensor(4.7387e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.6386e-07, dtype=torch.float64)
secont condition:: tensor(5.6386e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4641e-07, dtype=torch.float64)
secont condition:: tensor(8.4641e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.7289e-07, dtype=torch.float64)
secont condition:: tensor(9.7289e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3666e-07, dtype=torch.float64)
secont condition:: tensor(5.3666e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.5727e-07, dtype=torch.float64)
secont condition:: tensor(8.5727e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3466e-07, dtype=torch.float64)
secont condition:: tensor(3.3466e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0407e-07, dtype=torch.float64)
secont condition:: tensor(9.0407e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2295e-07, dtype=torch.float64)
secont condition:: tensor(4.2295e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3234e-07, dtype=torch.float64)
secont condition:: tensor(2.3234e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.3916e-07, dtype=torch.float64)
secont condition:: tensor(7.3916e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9186e-07, dtype=torch.float64)
secont condition:: tensor(2.9186e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9077e-07, dtype=torch.float64)
secont condition:: tensor(2.9077e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.5390e-07, dtype=torch.float64)
secont condition:: tensor(2.5390e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9837e-07, dtype=torch.float64)
secont condition:: tensor(2.9837e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1487e-07, dtype=torch.float64)
secont condition:: tensor(2.1487e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2484e-06, dtype=torch.float64)
secont condition:: tensor(7.2484e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9401e-05, dtype=torch.float64)
secont condition:: tensor(1.9401e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.3922e-06, dtype=torch.float64)
secont condition:: tensor(5.3922e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.7824e-06, dtype=torch.float64)
secont condition:: tensor(1.7824e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.7127e-07, dtype=torch.float64)
secont condition:: tensor(9.7127e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3805e-06, dtype=torch.float64)
secont condition:: tensor(1.3805e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-3.2280e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1482e-07, dtype=torch.float64)
secont condition:: tensor(4.1482e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.8233e-07, dtype=torch.float64)
secont condition:: tensor(2.8233e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4968e-07, dtype=torch.float64)
secont condition:: tensor(6.4968e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.1917e-07, dtype=torch.float64)
secont condition:: tensor(9.1917e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.6837e-06, dtype=torch.float64)
secont condition:: tensor(7.6837e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6504e-07, dtype=torch.float64)
secont condition:: tensor(4.6504e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7709e-06, dtype=torch.float64)
secont condition:: tensor(2.7709e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3142e-06, dtype=torch.float64)
secont condition:: tensor(1.3142e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9247e-07, dtype=torch.float64)
secont condition:: tensor(9.9247e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6045e-06, dtype=torch.float64)
secont condition:: tensor(2.6045e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1558e-06, dtype=torch.float64)
secont condition:: tensor(2.1558e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3574e-06, dtype=torch.float64)
secont condition:: tensor(1.3574e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0566e-06, dtype=torch.float64)
secont condition:: tensor(1.0566e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.8802e-07, dtype=torch.float64)
secont condition:: tensor(7.8802e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.334493637084961
curr_diff: 0 tensor(4.9761e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(5.7854e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.4251e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(2.2124e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.6725e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.9012e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.1438e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0011, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0023e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(5.2930e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0022, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.4452e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0012, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9081e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.5877e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0028, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.966100
repetition 2
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.255435
Train - Epoch 0, Batch: 10, Loss: 0.158086
Train - Epoch 0, Batch: 20, Loss: 0.151792
Train - Epoch 0, Batch: 30, Loss: 0.140182
Train - Epoch 0, Batch: 40, Loss: 0.159988
Train - Epoch 0, Batch: 50, Loss: 0.136587
Test Avg. Loss: 0.000132, Accuracy: 0.962800
Train - Epoch 1, Batch: 0, Loss: 0.138340
Train - Epoch 1, Batch: 10, Loss: 0.151052
Train - Epoch 1, Batch: 20, Loss: 0.153956
Train - Epoch 1, Batch: 30, Loss: 0.147668
Train - Epoch 1, Batch: 40, Loss: 0.122310
Train - Epoch 1, Batch: 50, Loss: 0.149684
Test Avg. Loss: 0.000130, Accuracy: 0.965000
training_time:: 5.274805307388306
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.204354763031006
time_baseline:: 4.209311485290527
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.2139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.3856e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8008e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.0688e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.8982e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.964900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.5632e-08, dtype=torch.float64)
secont condition:: tensor(1.5632e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.1888e-06, dtype=torch.float64)
secont condition:: tensor(4.1888e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5809e-06, dtype=torch.float64)
secont condition:: tensor(1.5809e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1375e-07, dtype=torch.float64)
secont condition:: tensor(8.1375e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4062e-07, dtype=torch.float64)
secont condition:: tensor(4.4062e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.2074e-08, dtype=torch.float64)
secont condition:: tensor(9.2074e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.6287e-07, dtype=torch.float64)
secont condition:: tensor(4.6287e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.0514e-07, dtype=torch.float64)
secont condition:: tensor(9.0514e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.2321e-07, dtype=torch.float64)
secont condition:: tensor(3.2321e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1527e-07, dtype=torch.float64)
secont condition:: tensor(2.1527e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1735e-07, dtype=torch.float64)
secont condition:: tensor(2.1735e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.2587e-08, dtype=torch.float64)
secont condition:: tensor(8.2587e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.0874e-07, dtype=torch.float64)
secont condition:: tensor(4.0874e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6720e-07, dtype=torch.float64)
secont condition:: tensor(1.6720e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2671e-07, dtype=torch.float64)
secont condition:: tensor(1.2671e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1543e-07, dtype=torch.float64)
secont condition:: tensor(1.1543e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1753e-09, dtype=torch.float64)
secont condition:: tensor(5.1753e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.7932e-07, dtype=torch.float64)
secont condition:: tensor(1.7932e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0676e-07, dtype=torch.float64)
secont condition:: tensor(1.0676e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9451e-06, dtype=torch.float64)
secont condition:: tensor(3.9451e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9507e-06, dtype=torch.float64)
secont condition:: tensor(1.9507e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.4520e-06, dtype=torch.float64)
secont condition:: tensor(3.4520e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1600e-06, dtype=torch.float64)
secont condition:: tensor(1.1600e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3760e-07, dtype=torch.float64)
secont condition:: tensor(4.3760e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3161e-07, dtype=torch.float64)
secont condition:: tensor(3.3161e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.8384e-06, dtype=torch.float64)
secont condition:: tensor(3.8384e-06, dtype=torch.float64)
curr_secont condition:: tensor(-2.0078e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.0109e-07, dtype=torch.float64)
secont condition:: tensor(2.0109e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0834e-07, dtype=torch.float64)
secont condition:: tensor(1.0834e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.3110e-08, dtype=torch.float64)
secont condition:: tensor(4.3110e-08, dtype=torch.float64)
curr_secont condition:: tensor(6.8270e-07, dtype=torch.float64)
secont condition:: tensor(6.8270e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4404e-07, dtype=torch.float64)
secont condition:: tensor(1.4404e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2639e-05, dtype=torch.float64)
secont condition:: tensor(1.2639e-05, dtype=torch.float64)
curr_secont condition:: tensor(1.6888e-05, dtype=torch.float64)
secont condition:: tensor(1.6888e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.0708e-06, dtype=torch.float64)
secont condition:: tensor(4.0708e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1340e-06, dtype=torch.float64)
secont condition:: tensor(6.1340e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3513e-06, dtype=torch.float64)
secont condition:: tensor(1.3513e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6405e-06, dtype=torch.float64)
secont condition:: tensor(1.6405e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.5040e-07, dtype=torch.float64)
secont condition:: tensor(9.5040e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.0442e-07, dtype=torch.float64)
secont condition:: tensor(7.0442e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4489e-07, dtype=torch.float64)
secont condition:: tensor(7.4489e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1768e-07, dtype=torch.float64)
secont condition:: tensor(8.1768e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.8788e-07, dtype=torch.float64)
secont condition:: tensor(4.8788e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0499e-07, dtype=torch.float64)
secont condition:: tensor(4.0499e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0755e-07, dtype=torch.float64)
secont condition:: tensor(5.0755e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.5490e-07, dtype=torch.float64)
secont condition:: tensor(5.5490e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4527e-08, dtype=torch.float64)
secont condition:: tensor(7.4527e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.4506e-07, dtype=torch.float64)
secont condition:: tensor(4.4506e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7451e-07, dtype=torch.float64)
secont condition:: tensor(2.7451e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6540e-06, dtype=torch.float64)
secont condition:: tensor(6.6540e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.7862e-06, dtype=torch.float64)
secont condition:: tensor(3.7862e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0579e-06, dtype=torch.float64)
secont condition:: tensor(3.0579e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1099e-06, dtype=torch.float64)
secont condition:: tensor(1.1099e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4039e-05, dtype=torch.float64)
secont condition:: tensor(1.4039e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.0883e-06, dtype=torch.float64)
secont condition:: tensor(5.0883e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3440e-06, dtype=torch.float64)
secont condition:: tensor(2.3440e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.6562e-06, dtype=torch.float64)
secont condition:: tensor(1.6562e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1299e-07, dtype=torch.float64)
secont condition:: tensor(8.1299e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(-1.2672e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0205e-06, dtype=torch.float64)
secont condition:: tensor(1.0205e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4246e-06, dtype=torch.float64)
secont condition:: tensor(1.4246e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.8602e-07, dtype=torch.float64)
secont condition:: tensor(8.8602e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0922e-06, dtype=torch.float64)
secont condition:: tensor(1.0922e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1590e-07, dtype=torch.float64)
secont condition:: tensor(5.1590e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4711e-07, dtype=torch.float64)
secont condition:: tensor(4.4711e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7683e-07, dtype=torch.float64)
secont condition:: tensor(4.7683e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0175e-06, dtype=torch.float64)
secont condition:: tensor(2.0175e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3392e-05, dtype=torch.float64)
secont condition:: tensor(1.3392e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.6368e-07, dtype=torch.float64)
secont condition:: tensor(4.6368e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.307089805603027
curr_diff: 0 tensor(5.7563e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(4.3976e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.5015e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4206e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3698e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.4551e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(7.1596e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.4303e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.8472e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.8599e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(4.1768e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965400
repetition 3
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.217680
Train - Epoch 0, Batch: 10, Loss: 0.177727
Train - Epoch 0, Batch: 20, Loss: 0.156598
Train - Epoch 0, Batch: 30, Loss: 0.148275
Train - Epoch 0, Batch: 40, Loss: 0.115036
Train - Epoch 0, Batch: 50, Loss: 0.141908
Test Avg. Loss: 0.000131, Accuracy: 0.963800
Train - Epoch 1, Batch: 0, Loss: 0.162472
Train - Epoch 1, Batch: 10, Loss: 0.157393
Train - Epoch 1, Batch: 20, Loss: 0.138617
Train - Epoch 1, Batch: 30, Loss: 0.138762
Train - Epoch 1, Batch: 40, Loss: 0.141005
Train - Epoch 1, Batch: 50, Loss: 0.144740
Test Avg. Loss: 0.000130, Accuracy: 0.965300
training_time:: 5.256522178649902
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.203531265258789
time_baseline:: 4.208350419998169
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(9.6800e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.2934e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.5731e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.2052e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0022, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965400
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(1.2088e-32, dtype=torch.float64)
secont condition:: tensor(1.2088e-32, dtype=torch.float64)
curr_secont condition:: tensor(1.3611e-08, dtype=torch.float64)
secont condition:: tensor(1.3611e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3256e-08, dtype=torch.float64)
curr_secont condition:: tensor(4.2386e-08, dtype=torch.float64)
secont condition:: tensor(4.2386e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.8114e-08, dtype=torch.float64)
secont condition:: tensor(1.8114e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.7123e-08, dtype=torch.float64)
secont condition:: tensor(2.7123e-08, dtype=torch.float64)
curr_secont condition:: tensor(8.0906e-06, dtype=torch.float64)
secont condition:: tensor(8.0906e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.5421e-06, dtype=torch.float64)
secont condition:: tensor(2.5421e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9122e-07, dtype=torch.float64)
secont condition:: tensor(9.9122e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3905e-07, dtype=torch.float64)
secont condition:: tensor(5.3905e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.5923e-07, dtype=torch.float64)
secont condition:: tensor(3.5923e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7979e-08, dtype=torch.float64)
secont condition:: tensor(6.7979e-08, dtype=torch.float64)
curr_secont condition:: tensor(9.1339e-07, dtype=torch.float64)
secont condition:: tensor(9.1339e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1178e-07, dtype=torch.float64)
secont condition:: tensor(4.1178e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.2962e-07, dtype=torch.float64)
secont condition:: tensor(2.2962e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.3857e-07, dtype=torch.float64)
secont condition:: tensor(3.3857e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6369e-07, dtype=torch.float64)
secont condition:: tensor(4.6369e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9788e-06, dtype=torch.float64)
secont condition:: tensor(1.9788e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.6291e-07, dtype=torch.float64)
secont condition:: tensor(6.6291e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.6694e-07, dtype=torch.float64)
secont condition:: tensor(6.6694e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7730e-07, dtype=torch.float64)
secont condition:: tensor(6.7730e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1887e-07, dtype=torch.float64)
secont condition:: tensor(4.1887e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1403e-07, dtype=torch.float64)
secont condition:: tensor(2.1403e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.6427e-07, dtype=torch.float64)
secont condition:: tensor(2.6427e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.5743e-07, dtype=torch.float64)
secont condition:: tensor(1.5743e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6668e-06, dtype=torch.float64)
secont condition:: tensor(4.6668e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.2724e-06, dtype=torch.float64)
secont condition:: tensor(9.2724e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.1441e-06, dtype=torch.float64)
secont condition:: tensor(8.1441e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.2411e-06, dtype=torch.float64)
secont condition:: tensor(4.2411e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1188e-06, dtype=torch.float64)
secont condition:: tensor(2.1188e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8412e-07, dtype=torch.float64)
secont condition:: tensor(6.8412e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1125e-06, dtype=torch.float64)
secont condition:: tensor(1.1125e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.5776e-07, dtype=torch.float64)
secont condition:: tensor(7.5776e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.9229e-07, dtype=torch.float64)
secont condition:: tensor(9.9229e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.2024e-07, dtype=torch.float64)
secont condition:: tensor(7.2024e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.2329e-07, dtype=torch.float64)
secont condition:: tensor(6.2329e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2091e-07, dtype=torch.float64)
secont condition:: tensor(4.2091e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.2869e-07, dtype=torch.float64)
secont condition:: tensor(5.2869e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7880e-07, dtype=torch.float64)
secont condition:: tensor(2.7880e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4523e-05, dtype=torch.float64)
secont condition:: tensor(1.4523e-05, dtype=torch.float64)
curr_secont condition:: tensor(5.5388e-06, dtype=torch.float64)
secont condition:: tensor(5.5388e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.3898e-06, dtype=torch.float64)
secont condition:: tensor(2.3898e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2042e-06, dtype=torch.float64)
secont condition:: tensor(1.2042e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.7070e-07, dtype=torch.float64)
secont condition:: tensor(5.7070e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.4336e-07, dtype=torch.float64)
secont condition:: tensor(9.4336e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6129e-06, dtype=torch.float64)
secont condition:: tensor(4.6129e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7454e-06, dtype=torch.float64)
secont condition:: tensor(2.7454e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.0479e-07, dtype=torch.float64)
secont condition:: tensor(5.0479e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2105e-06, dtype=torch.float64)
secont condition:: tensor(1.2105e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0032e-06, dtype=torch.float64)
secont condition:: tensor(1.0032e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.7577e-07, dtype=torch.float64)
secont condition:: tensor(4.7577e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.0867e-07, dtype=torch.float64)
secont condition:: tensor(5.0867e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7985e-06, dtype=torch.float64)
secont condition:: tensor(8.7985e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.3857e-06, dtype=torch.float64)
secont condition:: tensor(3.3857e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.8129e-07, dtype=torch.float64)
secont condition:: tensor(9.8129e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0967e-06, dtype=torch.float64)
secont condition:: tensor(1.0967e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9692e-07, dtype=torch.float64)
secont condition:: tensor(4.9692e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0007e-07, dtype=torch.float64)
secont condition:: tensor(3.0007e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(4.0835e-07, dtype=torch.float64)
secont condition:: tensor(4.0835e-07, dtype=torch.float64)
curr_secont condition:: tensor(-6.0196e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.3094e-06, dtype=torch.float64)
secont condition:: tensor(1.3094e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9090e-07, dtype=torch.float64)
secont condition:: tensor(1.9090e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.0688e-06, dtype=torch.float64)
secont condition:: tensor(6.0688e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9161e-06, dtype=torch.float64)
secont condition:: tensor(1.9161e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1212e-08, dtype=torch.float64)
secont condition:: tensor(5.1212e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.2351e-07, dtype=torch.float64)
secont condition:: tensor(2.2351e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4818e-07, dtype=torch.float64)
secont condition:: tensor(2.4818e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.4336e-08, dtype=torch.float64)
secont condition:: tensor(4.4336e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.4749e-06, dtype=torch.float64)
secont condition:: tensor(2.4749e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8370e-06, dtype=torch.float64)
secont condition:: tensor(1.8370e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1058e-06, dtype=torch.float64)
secont condition:: tensor(1.1058e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.3300e-06, dtype=torch.float64)
secont condition:: tensor(1.3300e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5441e-06, dtype=torch.float64)
secont condition:: tensor(1.5441e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.247250080108643
curr_diff: 0 tensor(3.5628e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.0780e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6621e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.4104e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.2645e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(6.9817e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.9706e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0008, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(1.5053e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.8804e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0018, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(3.6884e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(3.9248e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3974e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0023, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.963800
repetition 4
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.188286
Train - Epoch 0, Batch: 10, Loss: 0.180134
Train - Epoch 0, Batch: 20, Loss: 0.169355
Train - Epoch 0, Batch: 30, Loss: 0.149147
Train - Epoch 0, Batch: 40, Loss: 0.136479
Train - Epoch 0, Batch: 50, Loss: 0.124133
Test Avg. Loss: 0.000130, Accuracy: 0.964600
Train - Epoch 1, Batch: 0, Loss: 0.146049
Train - Epoch 1, Batch: 10, Loss: 0.139432
Train - Epoch 1, Batch: 20, Loss: 0.137710
Train - Epoch 1, Batch: 30, Loss: 0.123283
Train - Epoch 1, Batch: 40, Loss: 0.169672
Train - Epoch 1, Batch: 50, Loss: 0.144253
Test Avg. Loss: 0.000131, Accuracy: 0.965600
training_time:: 5.245982646942139
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.215757608413696
time_baseline:: 4.220650672912598
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7266e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.5427e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.5892e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.2056e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.965900
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(6.6779e-33, dtype=torch.float64)
secont condition:: tensor(6.6779e-33, dtype=torch.float64)
curr_secont condition:: tensor(1.9641e-32, dtype=torch.float64)
secont condition:: tensor(1.9641e-32, dtype=torch.float64)
curr_secont condition:: tensor(8.1648e-09, dtype=torch.float64)
secont condition:: tensor(8.1648e-09, dtype=torch.float64)
curr_secont condition:: tensor(7.7322e-06, dtype=torch.float64)
secont condition:: tensor(7.7322e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.2196e-06, dtype=torch.float64)
secont condition:: tensor(3.2196e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.8954e-06, dtype=torch.float64)
secont condition:: tensor(2.8954e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0963e-06, dtype=torch.float64)
secont condition:: tensor(1.0963e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6177e-07, dtype=torch.float64)
secont condition:: tensor(4.6177e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.9067e-06, dtype=torch.float64)
secont condition:: tensor(6.9067e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.7816e-06, dtype=torch.float64)
secont condition:: tensor(6.7816e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.4736e-06, dtype=torch.float64)
secont condition:: tensor(1.4736e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2043e-06, dtype=torch.float64)
secont condition:: tensor(6.2043e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1720e-06, dtype=torch.float64)
secont condition:: tensor(2.1720e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.0355e-06, dtype=torch.float64)
secont condition:: tensor(2.0355e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.6526e-07, dtype=torch.float64)
secont condition:: tensor(9.6526e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.7487e-06, dtype=torch.float64)
secont condition:: tensor(3.7487e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.8241e-07, dtype=torch.float64)
secont condition:: tensor(5.8241e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1926e-06, dtype=torch.float64)
secont condition:: tensor(1.1926e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.9323e-06, dtype=torch.float64)
secont condition:: tensor(4.9323e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.1804e-07, dtype=torch.float64)
secont condition:: tensor(1.1804e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.3671e-07, dtype=torch.float64)
secont condition:: tensor(5.3671e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.8710e-07, dtype=torch.float64)
secont condition:: tensor(7.8710e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.5275e-06, dtype=torch.float64)
secont condition:: tensor(4.5275e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2006e-05, dtype=torch.float64)
secont condition:: tensor(1.2006e-05, dtype=torch.float64)
curr_secont condition:: tensor(2.6647e-06, dtype=torch.float64)
secont condition:: tensor(2.6647e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5313e-06, dtype=torch.float64)
secont condition:: tensor(1.5313e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.0196e-07, dtype=torch.float64)
secont condition:: tensor(8.0196e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0789e-06, dtype=torch.float64)
secont condition:: tensor(1.0789e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.1445e-07, dtype=torch.float64)
secont condition:: tensor(5.1445e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.6898e-06, dtype=torch.float64)
secont condition:: tensor(4.6898e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.6114e-06, dtype=torch.float64)
secont condition:: tensor(2.6114e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2501e-06, dtype=torch.float64)
secont condition:: tensor(1.2501e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5259e-06, dtype=torch.float64)
secont condition:: tensor(4.5259e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.8554e-06, dtype=torch.float64)
secont condition:: tensor(4.8554e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8532e-07, dtype=torch.float64)
secont condition:: tensor(6.8532e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9743e-06, dtype=torch.float64)
secont condition:: tensor(2.9743e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.7648e-07, dtype=torch.float64)
secont condition:: tensor(7.7648e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.9373e-07, dtype=torch.float64)
secont condition:: tensor(3.9373e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4973e-07, dtype=torch.float64)
secont condition:: tensor(1.4973e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.5082e-07, dtype=torch.float64)
secont condition:: tensor(9.5082e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.1177e-07, dtype=torch.float64)
secont condition:: tensor(4.1177e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.5634e-07, dtype=torch.float64)
secont condition:: tensor(6.5634e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2998e-07, dtype=torch.float64)
secont condition:: tensor(4.2998e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7102e-07, dtype=torch.float64)
secont condition:: tensor(4.7102e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3988e-07, dtype=torch.float64)
secont condition:: tensor(6.3988e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.3308e-07, dtype=torch.float64)
secont condition:: tensor(6.3308e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7495e-07, dtype=torch.float64)
secont condition:: tensor(2.7495e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9730e-07, dtype=torch.float64)
secont condition:: tensor(4.9730e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.8029e-07, dtype=torch.float64)
secont condition:: tensor(8.8029e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.7414e-07, dtype=torch.float64)
secont condition:: tensor(4.7414e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1754e-06, dtype=torch.float64)
secont condition:: tensor(1.1754e-06, dtype=torch.float64)
curr_secont condition:: tensor(5.3329e-07, dtype=torch.float64)
secont condition:: tensor(5.3329e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.6083e-07, dtype=torch.float64)
secont condition:: tensor(1.6083e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.8531e-06, dtype=torch.float64)
secont condition:: tensor(5.8531e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.8652e-06, dtype=torch.float64)
secont condition:: tensor(1.8652e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0420e-06, dtype=torch.float64)
secont condition:: tensor(1.0420e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.3120e-07, dtype=torch.float64)
secont condition:: tensor(4.3120e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.0929e-06, dtype=torch.float64)
secont condition:: tensor(4.0929e-06, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(5.2998e-07, dtype=torch.float64)
secont condition:: tensor(5.2998e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.2314e-07, dtype=torch.float64)
secont condition:: tensor(4.2314e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.0230e-06, dtype=torch.float64)
secont condition:: tensor(3.0230e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1269e-06, dtype=torch.float64)
secont condition:: tensor(2.1269e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0588e-06, dtype=torch.float64)
secont condition:: tensor(1.0588e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6294e-07, dtype=torch.float64)
secont condition:: tensor(4.6294e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4332e-07, dtype=torch.float64)
secont condition:: tensor(2.4332e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.9326e-07, dtype=torch.float64)
secont condition:: tensor(2.9326e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.4539e-07, dtype=torch.float64)
secont condition:: tensor(2.4539e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.4667e-07, dtype=torch.float64)
secont condition:: tensor(8.4667e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.1245e-06, dtype=torch.float64)
secont condition:: tensor(1.1245e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9006e-07, dtype=torch.float64)
secont condition:: tensor(9.9006e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9918e-07, dtype=torch.float64)
secont condition:: tensor(8.9918e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1791e-07, dtype=torch.float64)
secont condition:: tensor(2.1791e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.3754e-07, dtype=torch.float64)
secont condition:: tensor(2.3754e-07, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.129949331283569
curr_diff: 0 tensor(2.0465e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(2.0333e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0003, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.6076e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0005, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.1172e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(1.3873e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(8.0683e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(7.4873e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0007, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.7336e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.3800e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(5.9139e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0007, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(5.2373e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.965100
repetition 5
python3 benchmark_exp_more_complex.py 0.001 1024 2 [0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05,0.05] LeNet5 MNIST 0.2 0.02 1 2
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type CrossEntropyLoss. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
3.6.9 (default, Nov  7 2019, 10:44:02) 
[GCC 8.3.0]
cuda:2
Train - Epoch 0, Batch: 0, Loss: 0.208972
Train - Epoch 0, Batch: 10, Loss: 0.178290
Train - Epoch 0, Batch: 20, Loss: 0.162171
Train - Epoch 0, Batch: 30, Loss: 0.146954
Train - Epoch 0, Batch: 40, Loss: 0.128407
Train - Epoch 0, Batch: 50, Loss: 0.147679
Test Avg. Loss: 0.000130, Accuracy: 0.963900
Train - Epoch 1, Batch: 0, Loss: 0.135540
Train - Epoch 1, Batch: 10, Loss: 0.129989
Train - Epoch 1, Batch: 20, Loss: 0.134757
Train - Epoch 1, Batch: 30, Loss: 0.154530
Train - Epoch 1, Batch: 40, Loss: 0.143699
Train - Epoch 1, Batch: 50, Loss: 0.123317
Test Avg. Loss: 0.000131, Accuracy: 0.964500
training_time:: 5.233870983123779
baseline::
python3 incremental_updates_base_line.py 0
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type LeNet5. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Sequential. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Conv2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type ReLU. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type MaxPool2d. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
/usr/lib/python3/dist-packages/torch/serialization.py:292: UserWarning: Couldn't retrieve source code for container of type Linear. It won't be checked for correctness upon loading.
  "type " + obj.__name__ + ". It won't be checked "
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch:: 0
	calling Sampler:__iter__
epoch:: 1
	calling Sampler:__iter__
training time is 4.208085298538208
time_baseline:: 4.212992906570435
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0010, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(4.3422e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0019, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.7109e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.5351e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.3749e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0024, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000131, Accuracy: 0.964600
incremental updates::
python3 incremental_updates_provenance5.py 65 3
max_epoch:: 2
delta_size:: 60
max_epoch:: 2
epoch  0
	calling Sampler:__iter__
curr_secont condition:: tensor(9.2450e-33, dtype=torch.float64)
secont condition:: tensor(9.2450e-33, dtype=torch.float64)
curr_secont condition:: tensor(2.1543e-09, dtype=torch.float64)
secont condition:: tensor(2.1543e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.3069e-09, dtype=torch.float64)
secont condition:: tensor(1.3069e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.6281e-09, dtype=torch.float64)
secont condition:: tensor(1.6281e-09, dtype=torch.float64)
curr_secont condition:: tensor(1.1184e-09, dtype=torch.float64)
secont condition:: tensor(1.1184e-09, dtype=torch.float64)
curr_secont condition:: tensor(-1.0171e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.4014e-09, dtype=torch.float64)
secont condition:: tensor(6.4014e-09, dtype=torch.float64)
curr_secont condition:: tensor(-2.0624e-09, dtype=torch.float64)
curr_secont condition:: tensor(3.0234e-07, dtype=torch.float64)
secont condition:: tensor(3.0234e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.1110e-08, dtype=torch.float64)
secont condition:: tensor(8.1110e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.8494e-07, dtype=torch.float64)
secont condition:: tensor(2.8494e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0723e-06, dtype=torch.float64)
secont condition:: tensor(1.0723e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.9202e-07, dtype=torch.float64)
secont condition:: tensor(3.9202e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7821e-07, dtype=torch.float64)
secont condition:: tensor(1.7821e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7990e-08, dtype=torch.float64)
secont condition:: tensor(7.7990e-08, dtype=torch.float64)
curr_secont condition:: tensor(3.6387e-08, dtype=torch.float64)
secont condition:: tensor(3.6387e-08, dtype=torch.float64)
curr_secont condition:: tensor(2.1026e-08, dtype=torch.float64)
secont condition:: tensor(2.1026e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.1616e-08, dtype=torch.float64)
secont condition:: tensor(1.1616e-08, dtype=torch.float64)
curr_secont condition:: tensor(-1.3669e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.4083e-07, dtype=torch.float64)
secont condition:: tensor(1.4083e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.7951e-08, dtype=torch.float64)
secont condition:: tensor(7.7951e-08, dtype=torch.float64)
curr_secont condition:: tensor(1.0598e-05, dtype=torch.float64)
secont condition:: tensor(1.0598e-05, dtype=torch.float64)
curr_secont condition:: tensor(3.5498e-06, dtype=torch.float64)
secont condition:: tensor(3.5498e-06, dtype=torch.float64)
curr_secont condition:: tensor(9.9763e-07, dtype=torch.float64)
secont condition:: tensor(9.9763e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.9477e-06, dtype=torch.float64)
secont condition:: tensor(8.9477e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.6783e-06, dtype=torch.float64)
secont condition:: tensor(4.6783e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.9054e-06, dtype=torch.float64)
secont condition:: tensor(1.9054e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0080e-06, dtype=torch.float64)
secont condition:: tensor(1.0080e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.2325e-07, dtype=torch.float64)
secont condition:: tensor(6.2325e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.6320e-07, dtype=torch.float64)
secont condition:: tensor(8.6320e-07, dtype=torch.float64)
curr_secont condition:: tensor(8.7460e-07, dtype=torch.float64)
secont condition:: tensor(8.7460e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0729e-06, dtype=torch.float64)
secont condition:: tensor(1.0729e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.9816e-07, dtype=torch.float64)
secont condition:: tensor(8.9816e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.4643e-06, dtype=torch.float64)
secont condition:: tensor(3.4643e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.5288e-07, dtype=torch.float64)
secont condition:: tensor(8.5288e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.0837e-06, dtype=torch.float64)
secont condition:: tensor(2.0837e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.8822e-06, dtype=torch.float64)
secont condition:: tensor(6.8822e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.7297e-06, dtype=torch.float64)
secont condition:: tensor(2.7297e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0478e-06, dtype=torch.float64)
secont condition:: tensor(1.0478e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.7396e-07, dtype=torch.float64)
secont condition:: tensor(8.7396e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.9717e-07, dtype=torch.float64)
secont condition:: tensor(5.9717e-07, dtype=torch.float64)
curr_secont condition:: tensor(4.9314e-07, dtype=torch.float64)
secont condition:: tensor(4.9314e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.7018e-07, dtype=torch.float64)
secont condition:: tensor(2.7018e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.1947e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.2647e-06, dtype=torch.float64)
secont condition:: tensor(1.2647e-06, dtype=torch.float64)
curr_secont condition:: tensor(6.1308e-07, dtype=torch.float64)
secont condition:: tensor(6.1308e-07, dtype=torch.float64)
curr_secont condition:: tensor(-2.3268e-07, dtype=torch.float64)
curr_secont condition:: tensor(3.6304e-06, dtype=torch.float64)
secont condition:: tensor(3.6304e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.5076e-05, dtype=torch.float64)
secont condition:: tensor(1.5076e-05, dtype=torch.float64)
curr_secont condition:: tensor(4.1904e-06, dtype=torch.float64)
secont condition:: tensor(4.1904e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.6709e-07, dtype=torch.float64)
secont condition:: tensor(8.6709e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.3134e-06, dtype=torch.float64)
secont condition:: tensor(1.3134e-06, dtype=torch.float64)
curr_secont condition:: tensor(7.1417e-07, dtype=torch.float64)
secont condition:: tensor(7.1417e-07, dtype=torch.float64)
curr_secont condition:: tensor(2.1083e-06, dtype=torch.float64)
secont condition:: tensor(2.1083e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5052e-06, dtype=torch.float64)
secont condition:: tensor(4.5052e-06, dtype=torch.float64)
curr_secont condition:: tensor(3.0888e-06, dtype=torch.float64)
secont condition:: tensor(3.0888e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1847e-06, dtype=torch.float64)
secont condition:: tensor(2.1847e-06, dtype=torch.float64)
curr_secont condition:: tensor(8.2442e-07, dtype=torch.float64)
secont condition:: tensor(8.2442e-07, dtype=torch.float64)
epoch  1
	calling Sampler:__iter__
curr_secont condition:: tensor(7.7187e-07, dtype=torch.float64)
secont condition:: tensor(7.7187e-07, dtype=torch.float64)
curr_secont condition:: tensor(6.7723e-07, dtype=torch.float64)
secont condition:: tensor(6.7723e-07, dtype=torch.float64)
curr_secont condition:: tensor(5.1272e-07, dtype=torch.float64)
secont condition:: tensor(5.1272e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.4617e-07, dtype=torch.float64)
secont condition:: tensor(1.4617e-07, dtype=torch.float64)
curr_secont condition:: tensor(9.8538e-07, dtype=torch.float64)
secont condition:: tensor(9.8538e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.9776e-06, dtype=torch.float64)
secont condition:: tensor(1.9776e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.5146e-07, dtype=torch.float64)
secont condition:: tensor(4.5146e-07, dtype=torch.float64)
curr_secont condition:: tensor(7.4816e-07, dtype=torch.float64)
secont condition:: tensor(7.4816e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.7772e-05, dtype=torch.float64)
secont condition:: tensor(1.7772e-05, dtype=torch.float64)
curr_secont condition:: tensor(7.2714e-06, dtype=torch.float64)
secont condition:: tensor(7.2714e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.2384e-06, dtype=torch.float64)
secont condition:: tensor(1.2384e-06, dtype=torch.float64)
curr_secont condition:: tensor(2.1762e-06, dtype=torch.float64)
secont condition:: tensor(2.1762e-06, dtype=torch.float64)
curr_secont condition:: tensor(4.4152e-07, dtype=torch.float64)
secont condition:: tensor(4.4152e-07, dtype=torch.float64)
curr_secont condition:: tensor(1.0097e-06, dtype=torch.float64)
secont condition:: tensor(1.0097e-06, dtype=torch.float64)
curr_secont condition:: tensor(1.0562e-06, dtype=torch.float64)
secont condition:: tensor(1.0562e-06, dtype=torch.float64)
overhead:: 0
overhead2:: 0
overhead3:: 0
time_provenance:: 4.1771392822265625
curr_diff: 0 tensor(4.9614e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(1.7469e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0009, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(1.9582e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0004, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(2.5046e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(8.8218e-06, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0010, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
curr_diff: 0 tensor(0.0002, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 1 tensor(0.0001, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 2 tensor(0.0011, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 3 tensor(3.9781e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 4 tensor(0.0020, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 5 tensor(4.6267e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 6 tensor(0.0008, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 7 tensor(4.6223e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 8 tensor(0.0006, dtype=torch.float64, grad_fn=<NormBackward0>)
curr_diff: 9 tensor(3.8840e-05, dtype=torch.float64, grad_fn=<NormBackward0>)
tensor(0.0025, dtype=torch.float64, grad_fn=<SqrtBackward>)
tensor(1.0000, dtype=torch.float64, grad_fn=<DivBackward0>)
Test Avg. Loss: 0.000130, Accuracy: 0.966400
